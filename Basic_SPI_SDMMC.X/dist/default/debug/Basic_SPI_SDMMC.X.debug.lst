

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Jan 11 14:14:08 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBIGRAM_1,global,class=BIGRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     _ADCON1	set	4033
    41  0000                     _CMCON	set	4020
    42  0000                     _PIR1bits	set	3998
    43  0000                     _PORTDbits	set	3971
    44  0000                     _SSPBUF	set	4041
    45  0000                     _SSPCON1	set	4038
    46  0000                     _SSPCON1bits	set	4038
    47  0000                     _SSPSTAT	set	4039
    48  0000                     _SSPSTATbits	set	4039
    49  0000                     _TRISAbits	set	3986
    50  0000                     _TRISBbits	set	3987
    51  0000                     _TRISCbits	set	3988
    52  0000                     _TRISDbits	set	3989
    53  0000                     _LATA5	set	31821
    54  0000                     _LATB4	set	31828
    55  0000                     _RD4	set	31772
    56  0000                     _RD5	set	31773
    57  0000                     _TRISA5	set	31893
    58  0000                     _TRISB0	set	31896
    59  0000                     _TRISB1	set	31897
    60  0000                     _TRISB4	set	31900
    61  0000                     _TRISC7	set	31911
    62                           
    63                           	psect	mediumconst
    64  007BCE                     __pmediumconst:
    65                           	opt stack 0
    66  007BCE  00                 	db	0
    67  007BCF                     __stringdata:
    68                           	opt stack 0
    69  007BCF                     STR_1:
    70  007BCF  0A                 	db	10
    71  007BD0  0D                 	db	13
    72  007BD1  50                 	db	80	;'P'
    73  007BD2  6C                 	db	108	;'l'
    74  007BD3  65                 	db	101	;'e'
    75  007BD4  61                 	db	97	;'a'
    76  007BD5  73                 	db	115	;'s'
    77  007BD6  65                 	db	101	;'e'
    78  007BD7  20                 	db	32
    79  007BD8  73                 	db	115	;'s'
    80  007BD9  65                 	db	101	;'e'
    81  007BDA  6C                 	db	108	;'l'
    82  007BDB  65                 	db	101	;'e'
    83  007BDC  63                 	db	99	;'c'
    84  007BDD  74                 	db	116	;'t'
    85  007BDE  20                 	db	32
    86  007BDF  61                 	db	97	;'a'
    87  007BE0  20                 	db	32
    88  007BE1  66                 	db	102	;'f'
    89  007BE2  69                 	db	105	;'i'
    90  007BE3  6C                 	db	108	;'l'
    91  007BE4  65                 	db	101	;'e'
    92  007BE5  20                 	db	32
    93  007BE6  6F                 	db	111	;'o'
    94  007BE7  70                 	db	112	;'p'
    95  007BE8  65                 	db	101	;'e'
    96  007BE9  72                 	db	114	;'r'
    97  007BEA  61                 	db	97	;'a'
    98  007BEB  74                 	db	116	;'t'
    99  007BEC  69                 	db	105	;'i'
   100  007BED  6F                 	db	111	;'o'
   101  007BEE  6E                 	db	110	;'n'
   102  007BEF  3F                 	db	63	;'?'
   103  007BF0  0A                 	db	10
   104  007BF1  0D                 	db	13
   105  007BF2  57                 	db	87	;'W'
   106  007BF3  72                 	db	114	;'r'
   107  007BF4  69                 	db	105	;'i'
   108  007BF5  74                 	db	116	;'t'
   109  007BF6  65                 	db	101	;'e'
   110  007BF7  20                 	db	32
   111  007BF8  20                 	db	32
   112  007BF9  20                 	db	32
   113  007BFA  20                 	db	32
   114  007BFB  2D                 	db	45
   115  007BFC  20                 	db	32
   116  007BFD  77                 	db	119	;'w'
   117  007BFE  0A                 	db	10
   118  007BFF  0D                 	db	13
   119  007C00  52                 	db	82	;'R'
   120  007C01  65                 	db	101	;'e'
   121  007C02  61                 	db	97	;'a'
   122  007C03  64                 	db	100	;'d'
   123  007C04  20                 	db	32
   124  007C05  20                 	db	32
   125  007C06  20                 	db	32
   126  007C07  20                 	db	32
   127  007C08  20                 	db	32
   128  007C09  2D                 	db	45
   129  007C0A  20                 	db	32
   130  007C0B  72                 	db	114	;'r'
   131  007C0C  0A                 	db	10
   132  007C0D  0D                 	db	13
   133  007C0E  4D                 	db	77	;'M'
   134  007C0F  75                 	db	117	;'u'
   135  007C10  6C                 	db	108	;'l'
   136  007C11  74                 	db	116	;'t'
   137  007C12  69                 	db	105	;'i'
   138  007C13  5F                 	db	95	;'_'
   139  007C14  57                 	db	87	;'W'
   140  007C15  72                 	db	114	;'r'
   141  007C16  69                 	db	105	;'i'
   142  007C17  74                 	db	116	;'t'
   143  007C18  65                 	db	101	;'e'
   144  007C19  20                 	db	32
   145  007C1A  20                 	db	32
   146  007C1B  20                 	db	32
   147  007C1C  2D                 	db	45
   148  007C1D  20                 	db	32
   149  007C1E  61                 	db	97	;'a'
   150  007C1F  0A                 	db	10
   151  007C20  0D                 	db	13
   152  007C21  4D                 	db	77	;'M'
   153  007C22  75                 	db	117	;'u'
   154  007C23  6C                 	db	108	;'l'
   155  007C24  74                 	db	116	;'t'
   156  007C25  69                 	db	105	;'i'
   157  007C26  5F                 	db	95	;'_'
   158  007C27  52                 	db	82	;'R'
   159  007C28  65                 	db	101	;'e'
   160  007C29  61                 	db	97	;'a'
   161  007C2A  64                 	db	100	;'d'
   162  007C2B  20                 	db	32
   163  007C2C  20                 	db	32
   164  007C2D  20                 	db	32
   165  007C2E  2D                 	db	45
   166  007C2F  20                 	db	32
   167  007C30  64                 	db	100	;'d'
   168  007C31  0A                 	db	10
   169  007C32  0D                 	db	13
   170  007C33  00                 	db	0
   171  007C34                     STR_9:
   172  007C34  0D                 	db	13
   173  007C35  0A                 	db	10
   174  007C36  0D                 	db	13
   175  007C37  0A                 	db	10
   176  007C38  4D                 	db	77	;'M'
   177  007C39  75                 	db	117	;'u'
   178  007C3A  6C                 	db	108	;'l'
   179  007C3B  74                 	db	116	;'t'
   180  007C3C  69                 	db	105	;'i'
   181  007C3D  20                 	db	32
   182  007C3E  52                 	db	82	;'R'
   183  007C3F  65                 	db	101	;'e'
   184  007C40  61                 	db	97	;'a'
   185  007C41  64                 	db	100	;'d'
   186  007C42  20                 	db	32
   187  007C43  4F                 	db	79	;'O'
   188  007C44  76                 	db	118	;'v'
   189  007C45  65                 	db	101	;'e'
   190  007C46  72                 	db	114	;'r'
   191  007C47  0A                 	db	10
   192  007C48  0D                 	db	13
   193  007C49  00                 	db	0
   194  007C4A                     STR_11:
   195  007C4A  0A                 	db	10
   196  007C4B  0D                 	db	13
   197  007C4C  53                 	db	83	;'S'
   198  007C4D  44                 	db	68	;'D'
   199  007C4E  20                 	db	32
   200  007C4F  43                 	db	67	;'C'
   201  007C50  61                 	db	97	;'a'
   202  007C51  72                 	db	114	;'r'
   203  007C52  64                 	db	100	;'d'
   204  007C53  20                 	db	32
   205  007C54  49                 	db	73	;'I'
   206  007C55  6E                 	db	110	;'n'
   207  007C56  73                 	db	115	;'s'
   208  007C57  65                 	db	101	;'e'
   209  007C58  72                 	db	114	;'r'
   210  007C59  74                 	db	116	;'t'
   211  007C5A  65                 	db	101	;'e'
   212  007C5B  64                 	db	100	;'d'
   213  007C5C  0A                 	db	10
   214  007C5D  0D                 	db	13
   215  007C5E  00                 	db	0
   216  007C5F                     STR_7:
   217  007C5F  4D                 	db	77	;'M'
   218  007C60  55                 	db	85	;'U'
   219  007C61  4C                 	db	76	;'L'
   220  007C62  54                 	db	84	;'T'
   221  007C63  49                 	db	73	;'I'
   222  007C64  20                 	db	32
   223  007C65  57                 	db	87	;'W'
   224  007C66  52                 	db	82	;'R'
   225  007C67  49                 	db	73	;'I'
   226  007C68  54                 	db	84	;'T'
   227  007C69  45                 	db	69	;'E'
   228  007C6A  20                 	db	32
   229  007C6B  4F                 	db	79	;'O'
   230  007C6C  56                 	db	86	;'V'
   231  007C6D  45                 	db	69	;'E'
   232  007C6E  52                 	db	82	;'R'
   233  007C6F  0A                 	db	10
   234  007C70  0D                 	db	13
   235  007C71  00                 	db	0
   236  007C72                     STR_2:
   237  007C72  0A                 	db	10
   238  007C73  0D                 	db	13
   239  007C74  49                 	db	73	;'I'
   240  007C75  6E                 	db	110	;'n'
   241  007C76  76                 	db	118	;'v'
   242  007C77  61                 	db	97	;'a'
   243  007C78  6C                 	db	108	;'l'
   244  007C79  69                 	db	105	;'i'
   245  007C7A  64                 	db	100	;'d'
   246  007C7B  20                 	db	32
   247  007C7C  45                 	db	69	;'E'
   248  007C7D  6E                 	db	110	;'n'
   249  007C7E  74                 	db	116	;'t'
   250  007C7F  72                 	db	114	;'r'
   251  007C80  79                 	db	121	;'y'
   252  007C81  2E                 	db	46
   253  007C82  2E                 	db	46
   254  007C83  21                 	db	33
   255  007C84  00                 	db	0
   256  007C85                     STR_10:
   257  007C85  42                 	db	66	;'B'
   258  007C86  4C                 	db	76	;'L'
   259  007C87  4F                 	db	79	;'O'
   260  007C88  43                 	db	67	;'C'
   261  007C89  4B                 	db	75	;'K'
   262  007C8A  20                 	db	32
   263  007C8B  52                 	db	82	;'R'
   264  007C8C  45                 	db	69	;'E'
   265  007C8D  41                 	db	65	;'A'
   266  007C8E  44                 	db	68	;'D'
   267  007C8F  20                 	db	32
   268  007C90  4F                 	db	79	;'O'
   269  007C91  56                 	db	86	;'V'
   270  007C92  45                 	db	69	;'E'
   271  007C93  52                 	db	82	;'R'
   272  007C94  0A                 	db	10
   273  007C95  0D                 	db	13
   274  007C96  00                 	db	0
   275  007C97                     STR_6:
   276  007C97  43                 	db	67	;'C'
   277  007C98  4D                 	db	77	;'M'
   278  007C99  44                 	db	68	;'D'
   279  007C9A  32                 	db	50	;'2'
   280  007C9B  35                 	db	53	;'5'
   281  007C9C  20                 	db	32
   282  007C9D  41                 	db	65	;'A'
   283  007C9E  63                 	db	99	;'c'
   284  007C9F  63                 	db	99	;'c'
   285  007CA0  65                 	db	101	;'e'
   286  007CA1  70                 	db	112	;'p'
   287  007CA2  74                 	db	116	;'t'
   288  007CA3  65                 	db	101	;'e'
   289  007CA4  64                 	db	100	;'d'
   290  007CA5  0A                 	db	10
   291  007CA6  0D                 	db	13
   292  007CA7  00                 	db	0
   293  007CA8                     STR_5:
   294  007CA8  42                 	db	66	;'B'
   295  007CA9  4C                 	db	76	;'L'
   296  007CAA  4F                 	db	79	;'O'
   297  007CAB  43                 	db	67	;'C'
   298  007CAC  4B                 	db	75	;'K'
   299  007CAD  20                 	db	32
   300  007CAE  57                 	db	87	;'W'
   301  007CAF  52                 	db	82	;'R'
   302  007CB0  49                 	db	73	;'I'
   303  007CB1  54                 	db	84	;'T'
   304  007CB2  45                 	db	69	;'E'
   305  007CB3  20                 	db	32
   306  007CB4  4F                 	db	79	;'O'
   307  007CB5  56                 	db	86	;'V'
   308  007CB6  45                 	db	69	;'E'
   309  007CB7  52                 	db	82	;'R'
   310  007CB8  00                 	db	0
   311  007CB9                     STR_15:
   312  007CB9  35                 	db	53	;'5'
   313  007CBA  31                 	db	49	;'1'
   314  007CBB  32                 	db	50	;'2'
   315  007CBC  20                 	db	32
   316  007CBD  42                 	db	66	;'B'
   317  007CBE  79                 	db	121	;'y'
   318  007CBF  74                 	db	116	;'t'
   319  007CC0  65                 	db	101	;'e'
   320  007CC1  73                 	db	115	;'s'
   321  007CC2  20                 	db	32
   322  007CC3  53                 	db	83	;'S'
   323  007CC4  65                 	db	101	;'e'
   324  007CC5  74                 	db	116	;'t'
   325  007CC6  0A                 	db	10
   326  007CC7  0D                 	db	13
   327  007CC8  00                 	db	0
   328  007CC9                     STR_4:
   329  007CC9  43                 	db	67	;'C'
   330  007CCA  4D                 	db	77	;'M'
   331  007CCB  44                 	db	68	;'D'
   332  007CCC  32                 	db	50	;'2'
   333  007CCD  34                 	db	52	;'4'
   334  007CCE  20                 	db	32
   335  007CCF  41                 	db	65	;'A'
   336  007CD0  63                 	db	99	;'c'
   337  007CD1  63                 	db	99	;'c'
   338  007CD2  65                 	db	101	;'e'
   339  007CD3  70                 	db	112	;'p'
   340  007CD4  74                 	db	116	;'t'
   341  007CD5  65                 	db	101	;'e'
   342  007CD6  64                 	db	100	;'d'
   343  007CD7  00                 	db	0
   344  007CD8                     STR_3:
   345  007CD8  49                 	db	73	;'I'
   346  007CD9  6E                 	db	110	;'n'
   347  007CDA  73                 	db	115	;'s'
   348  007CDB  65                 	db	101	;'e'
   349  007CDC  72                 	db	114	;'r'
   350  007CDD  74                 	db	116	;'t'
   351  007CDE  20                 	db	32
   352  007CDF  53                 	db	83	;'S'
   353  007CE0  44                 	db	68	;'D'
   354  007CE1  20                 	db	32
   355  007CE2  43                 	db	67	;'C'
   356  007CE3  61                 	db	97	;'a'
   357  007CE4  72                 	db	114	;'r'
   358  007CE5  64                 	db	100	;'d'
   359  007CE6  00                 	db	0
   360  007CE7                     STR_14:
   361  007CE7  45                 	db	69	;'E'
   362  007CE8  72                 	db	114	;'r'
   363  007CE9  72                 	db	114	;'r'
   364  007CEA  6F                 	db	111	;'o'
   365  007CEB  72                 	db	114	;'r'
   366  007CEC  21                 	db	33
   367  007CED  21                 	db	33
   368  007CEE  21                 	db	33
   369  007CEF  0A                 	db	10
   370  007CF0  0D                 	db	13
   371  007CF1  00                 	db	0
   372  007CF2                     STR_13:
   373  007CF2  53                 	db	83	;'S'
   374  007CF3  55                 	db	85	;'U'
   375  007CF4  43                 	db	67	;'C'
   376  007CF5  43                 	db	67	;'C'
   377  007CF6  45                 	db	69	;'E'
   378  007CF7  53                 	db	83	;'S'
   379  007CF8  53                 	db	83	;'S'
   380  007CF9  0A                 	db	10
   381  007CFA  0D                 	db	13
   382  007CFB  00                 	db	0
   383  007CFC                     STR_8:
   384  007CFC  0D                 	db	13
   385  007CFD  0A                 	db	10
   386  007CFE  00                 	db	0
   387  007CFF                     __end_of__stringdata:
   388                           	opt stack 0
   389                           
   390                           ; #config settings
   391  007CFF  00                 	db	0	; dummy byte at the end
   392  0000                     
   393                           	psect	cinit
   394  0071BC                     __pcinit:
   395                           	opt stack 0
   396  0071BC                     start_initialization:
   397                           	opt stack 0
   398  0071BC                     __initialization:
   399                           	opt stack 0
   400                           
   401                           ; Clear objects allocated to BIGRAM_1 (1024 bytes)
   402  0071BC  EE04  F000         	lfsr	0,__pbssBIGRAM_1
   403  0071C0  EE14 F000          	lfsr	1,1024
   404  0071C4                     clear_0:
   405  0071C4  6AEE               	clrf	postinc0,c
   406  0071C6  50E5               	movf	postdec1,w,c
   407  0071C8  50E1               	movf	fsr1l,w,c
   408  0071CA  E1FC               	bnz	clear_0
   409  0071CC  50E2               	movf	fsr1h,w,c
   410  0071CE  E1FA               	bnz	clear_0
   411  0071D0                     end_of_initialization:
   412                           	opt stack 0
   413  0071D0                     __end_of__initialization:
   414                           	opt stack 0
   415  0071D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   416  0071D2  6EF8               	movwf	tblptru,c
   417  0071D4  0100               	movlb	0
   418  0071D6  EFCF  F038         	goto	_main	;jump to C main() function
   419                           tblptru	equ	0xFF8
   420                           postinc0	equ	0xFEE
   421                           postdec1	equ	0xFE5
   422                           fsr1h	equ	0xFE2
   423                           fsr1l	equ	0xFE1
   424                           
   425                           	psect	bssBIGRAM_1
   426  000400                     __pbssBIGRAM_1:
   427                           	opt stack 0
   428  000400                     _ctr:
   429                           	opt stack 0
   430  000400                     	ds	512
   431  000600                     _str:
   432                           	opt stack 0
   433  000600                     	ds	512
   434                           tblptru	equ	0xFF8
   435                           postinc0	equ	0xFEE
   436                           postdec1	equ	0xFE5
   437                           fsr1h	equ	0xFE2
   438                           fsr1l	equ	0xFE1
   439                           
   440                           	psect	cstackCOMRAM
   441  000001                     __pcstackCOMRAM:
   442                           	opt stack 0
   443  000001                     ReadSPI__@TempVar:
   444                           	opt stack 0
   445  000001                     WriteSPI_@TempVar:
   446                           	opt stack 0
   447  000001                     OpenSPI@bus_mode:
   448                           	opt stack 0
   449  000001                     WriteSPI@TempVar:
   450                           	opt stack 0
   451  000001                     Delay100TCYx@unit:
   452                           	opt stack 0
   453  000001                     Delay10TCYx@unit:
   454                           	opt stack 0
   455  000001                     Delay1KTCYx@unit:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x0
   459  000001                     	ds	1
   460  000002                     ??_ReadUART_:
   461  000002                     ??_WriteUART_:
   462  000002                     delay_ms@t:
   463                           	opt stack 0
   464  000002                     WriteSPI_@data_out:
   465                           	opt stack 0
   466  000002                     response@buff:
   467                           	opt stack 0
   468  000002                     OpenSPI@smp_phase:
   469                           	opt stack 0
   470  000002                     WriteSPI@data_out:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x1
   474  000002                     	ds	1
   475  000003                     ?_proceed:
   476                           	opt stack 0
   477  000003                     delay_ms@i:
   478                           	opt stack 0
   479  000003                     WriteUART_@uartdata:
   480                           	opt stack 0
   481  000003                     OpenSPI@sync_mode:
   482                           	opt stack 0
   483  000003                     Command@arg:
   484                           	opt stack 0
   485                           
   486                           ; 4 bytes @ 0x2
   487  000003                     	ds	1
   488  000004                     Delay_s@t:
   489                           	opt stack 0
   490  000004                     WriteUART_@bitcount:
   491                           	opt stack 0
   492  000004                     ReadUART_@d:
   493                           	opt stack 0
   494  000004                     Soft_Hard_Init@i:
   495                           	opt stack 0
   496  000004                     dummy_clocks@n:
   497                           	opt stack 0
   498                           
   499                           ; 2 bytes @ 0x3
   500  000004                     	ds	1
   501  000005                     Delay_s@i:
   502                           	opt stack 0
   503  000005                     ReadUART_@bitcount:
   504                           	opt stack 0
   505  000005                     putsUART_@data:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x4
   509  000005                     	ds	1
   510  000006                     ??_dummy_clocks:
   511  000006                     Delay_s@j:
   512                           	opt stack 0
   513  000006                     ReadUART_@c:
   514                           	opt stack 0
   515  000006                     Soft_Hard_Init@sync_mode:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x5
   519  000006                     	ds	1
   520  000007                     ReadUART_@datauart:
   521                           	opt stack 0
   522  000007                     Soft_Hard_Init@bus_mode:
   523                           	opt stack 0
   524  000007                     Command@CRCbits:
   525                           	opt stack 0
   526  000007                     dummy_clocks@i:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x6
   530  000007                     	ds	1
   531  000008                     ReadUART_@uartdata:
   532                           	opt stack 0
   533  000008                     Soft_Hard_Init@smp_phase:
   534                           	opt stack 0
   535  000008                     Command@cmd:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x7
   539  000008                     	ds	1
   540  000009                     multi_read@ptr:
   541                           	opt stack 0
   542  000009                     write_block@i:
   543                           	opt stack 0
   544  000009                     multi_write@i:
   545                           	opt stack 0
   546  000009                     reset@i:
   547                           	opt stack 0
   548  000009                     read_block@start_add:
   549                           	opt stack 0
   550                           
   551                           ; 4 bytes @ 0x8
   552  000009                     	ds	1
   553  00000A                     multi_read@count:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x9
   557  00000A                     	ds	1
   558  00000B                     write_block@buff:
   559                           	opt stack 0
   560  00000B                     multi_write@data:
   561                           	opt stack 0
   562  00000B                     reset@count:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0xA
   566  00000B                     	ds	1
   567  00000C                     multi_read@buff:
   568                           	opt stack 0
   569  00000C                     multi_write@j:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0xB
   573  00000C                     	ds	1
   574  00000D                     reset@buff:
   575                           	opt stack 0
   576  00000D                     multi_read@length:
   577                           	opt stack 0
   578  00000D                     read_block@count:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0xC
   582  00000D                     	ds	1
   583  00000E                     multi_write@buff:
   584                           	opt stack 0
   585  00000E                     init@i:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0xD
   589  00000E                     	ds	1
   590  00000F                     read_block@i:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0xE
   594  00000F                     	ds	1
   595  000010                     init@count1:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0xF
   599  000010                     	ds	1
   600  000011                     read_block@buff:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x10
   604  000011                     	ds	1
   605  000012                     read_block@length:
   606                           	opt stack 0
   607  000012                     init@count:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x11
   611  000012                     	ds	2
   612  000014                     File_IO@c:
   613                           	opt stack 0
   614  000014                     init@count2:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x13
   618  000014                     	ds	2
   619  000016                     init@buff:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x15
   623  000016                     	ds	1
   624  000017                     tblptru	equ	0xFF8
   625                           postinc0	equ	0xFEE
   626                           postdec1	equ	0xFE5
   627                           fsr1h	equ	0xFE2
   628                           fsr1l	equ	0xFE1
   629                           
   630                           ; 0 bytes @ 0x16
   631 ;;
   632 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   633 ;;
   634 ;; *************** function _main *****************
   635 ;; Defined at:
   636 ;;		line 55 in file "main.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;		None               void
   643 ;; Registers used:
   644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   650 ;;      Params:         0       0       0       0       0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0       0       0
   653 ;;      Totals:         0       0       0       0       0       0       0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels required when called:    6
   656 ;; This function calls:
   657 ;;		_File_IO
   658 ;;		_OpenUART_
   659 ;;		_Soft_Hard_Init
   660 ;;		_init
   661 ;;		_putsUART_
   662 ;; This function is called by:
   663 ;;		Startup code after reset
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text0
   668  00719E                     __ptext0:
   669                           	opt stack 0
   670  00719E                     _main:
   671                           	opt stack 24
   672                           
   673                           ;main.c: 57: Soft_Hard_Init();
   674                           
   675                           ;incstack = 0
   676  00719E  EC67  F039         	call	_Soft_Hard_Init	;wreg free
   677                           
   678                           ;main.c: 58: OpenUART_();
   679  0071A2  EC57  F038         	call	_OpenUART_	;wreg free
   680                           
   681                           ;main.c: 59: putsUART_("Insert SD Card");
   682  0071A6  0E7C               	movlw	high STR_3
   683  0071A8  6E06               	movwf	putsUART_@data+1,c
   684  0071AA  0ED8               	movlw	low STR_3
   685  0071AC  6E05               	movwf	putsUART_@data,c
   686  0071AE  EC01  F039         	call	_putsUART_	;wreg free
   687                           
   688                           ;main.c: 60: init();
   689  0071B2  ECF7  F03C         	call	_init	;wreg free
   690  0071B6                     l1656:
   691                           
   692                           ;main.c: 62: {
   693                           ;main.c: 63: File_IO();
   694  0071B6  ECB9  F039         	call	_File_IO	;wreg free
   695  0071BA  D7FD               	goto	l1656
   696  0071BC                     __end_of_main:
   697                           	opt stack 0
   698                           tblptru	equ	0xFF8
   699                           postinc0	equ	0xFEE
   700                           postdec1	equ	0xFE5
   701                           fsr1h	equ	0xFE2
   702                           fsr1l	equ	0xFE1
   703                           
   704 ;; *************** function _init *****************
   705 ;; Defined at:
   706 ;;		line 67 in file "initialization.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  count2          2   19[COMRAM] int 
   711 ;;  count           2   17[COMRAM] int 
   712 ;;  count1          2   15[COMRAM] int 
   713 ;;  i               2   13[COMRAM] int 
   714 ;;  buff            1   21[COMRAM] unsigned char 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  2   18[COMRAM] int 
   717 ;; Registers used:
   718 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   724 ;;      Params:         0       0       0       0       0       0       0       0       0
   725 ;;      Locals:         9       0       0       0       0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0       0       0       0       0
   727 ;;      Totals:         9       0       0       0       0       0       0       0       0
   728 ;;Total ram usage:        9 bytes
   729 ;; Hardware stack levels used:    1
   730 ;; Hardware stack levels required when called:    5
   731 ;; This function calls:
   732 ;;		_Command
   733 ;;		_Delay_s
   734 ;;		_delay_ms
   735 ;;		_dummy_clocks
   736 ;;		_proceed
   737 ;;		_putsUART_
   738 ;;		_reset
   739 ;;		_response
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text1
   746  0079EE                     __ptext1:
   747                           	opt stack 0
   748  0079EE                     _init:
   749                           	opt stack 24
   750                           
   751                           ;initialization.c: 69: int i = 0, count = 0, count1 = 0, count2 = 0;
   752                           
   753                           ;incstack = 0
   754  0079EE  0E00               	movlw	0
   755  0079F0  6E0F               	movwf	init@i+1,c
   756  0079F2  0E00               	movlw	0
   757  0079F4  6E0E               	movwf	init@i,c
   758  0079F6  0E00               	movlw	0
   759  0079F8  6E13               	movwf	init@count+1,c
   760  0079FA  0E00               	movlw	0
   761  0079FC  6E12               	movwf	init@count,c
   762  0079FE  0E00               	movlw	0
   763  007A00  6E11               	movwf	init@count1+1,c
   764  007A02  0E00               	movlw	0
   765  007A04  6E10               	movwf	init@count1,c
   766  007A06  0E00               	movlw	0
   767  007A08  6E15               	movwf	init@count2+1,c
   768  007A0A  0E00               	movlw	0
   769  007A0C  6E14               	movwf	init@count2,c
   770                           
   771                           ;initialization.c: 70: unsigned char buff;
   772                           ;initialization.c: 71: reset();
   773  007A0E  ECF5  F039         	call	_reset	;wreg free
   774                           
   775                           ;initialization.c: 72: delay_ms(500);
   776  007A12  0EF4               	movlw	244
   777  007A14  ECB5  F038         	call	_delay_ms
   778  007A18                     l1552:
   779                           
   780                           ;initialization.c: 75: dummy_clocks(8);
   781  007A18  0E00               	movlw	0
   782  007A1A  6E05               	movwf	dummy_clocks@n+1,c
   783  007A1C  0E08               	movlw	8
   784  007A1E  6E04               	movwf	dummy_clocks@n,c
   785  007A20  EC49  F039         	call	_dummy_clocks	;wreg free
   786                           
   787                           ;initialization.c: 77: Command(0X41, 0X00000000, 0X00);
   788  007A24  0E00               	movlw	0
   789  007A26  6E03               	movwf	Command@arg,c
   790  007A28  0E00               	movlw	0
   791  007A2A  6E04               	movwf	Command@arg+1,c
   792  007A2C  0E00               	movlw	0
   793  007A2E  6E05               	movwf	Command@arg+2,c
   794  007A30  0E00               	movlw	0
   795  007A32  6E06               	movwf	Command@arg+3,c
   796  007A34  0E00               	movlw	0
   797  007A36  6E07               	movwf	Command@CRCbits,c
   798  007A38  0E41               	movlw	65
   799  007A3A  EC15  F039         	call	_Command
   800                           
   801                           ;initialization.c: 78: proceed();
   802  007A3E  EC5C  F038         	call	_proceed	;wreg free
   803  007A42                     l1558:
   804                           
   805                           ;initialization.c: 81: buff = response();
   806  007A42  EC62  F038         	call	_response	;wreg free
   807  007A46  6E16               	movwf	init@buff,c
   808                           
   809                           ;initialization.c: 82: count++;
   810  007A48  4A12               	infsnz	init@count,f,c
   811  007A4A  2A13               	incf	init@count+1,f,c
   812                           
   813                           ;initialization.c: 83: }while((buff!=0X00) && (count<10));
   814  007A4C  5016               	movf	init@buff,w,c
   815  007A4E  B4D8               	btfsc	status,2,c
   816  007A50  D008               	goto	l1566
   817  007A52  5013               	movf	init@count+1,w,c
   818  007A54  0A80               	xorlw	128
   819  007A56  0F80               	addlw	-128
   820  007A58  0E0A               	movlw	10
   821  007A5A  B4D8               	btfsc	status,2,c
   822  007A5C  5C12               	subwf	init@count,w,c
   823  007A5E  A0D8               	btfss	status,0,c
   824  007A60  D7F0               	goto	l1558
   825  007A62                     l1566:
   826                           
   827                           ;initialization.c: 84: count = 0;
   828  007A62  0E00               	movlw	0
   829  007A64  6E13               	movwf	init@count+1,c
   830  007A66  0E00               	movlw	0
   831  007A68  6E12               	movwf	init@count,c
   832                           
   833                           ;initialization.c: 85: }while(buff!=0x00);
   834  007A6A  6616               	tstfsz	init@buff,c
   835  007A6C  D7D5               	goto	l1552
   836                           
   837                           ;initialization.c: 88: Delay_s(1);
   838  007A6E  0E01               	movlw	1
   839  007A70  ECED  F038         	call	_Delay_s
   840                           
   841                           ;initialization.c: 89: proceed();
   842  007A74  EC5C  F038         	call	_proceed	;wreg free
   843                           
   844                           ;initialization.c: 90: if (buff == 0x00)
   845  007A78  6616               	tstfsz	init@buff,c
   846  007A7A  D075               	goto	l1624
   847                           
   848                           ;initialization.c: 91: {
   849                           ;initialization.c: 93: delay_ms(1);
   850  007A7C  0E01               	movlw	1
   851  007A7E  ECB5  F038         	call	_delay_ms
   852                           
   853                           ;initialization.c: 94: count1 = 0;
   854  007A82  0E00               	movlw	0
   855  007A84  6E11               	movwf	init@count1+1,c
   856  007A86  0E00               	movlw	0
   857  007A88  6E10               	movwf	init@count1,c
   858  007A8A                     l1580:
   859                           
   860                           ;initialization.c: 96: count2 = 0;
   861  007A8A  0E00               	movlw	0
   862  007A8C  6E15               	movwf	init@count2+1,c
   863  007A8E  0E00               	movlw	0
   864  007A90  6E14               	movwf	init@count2,c
   865                           
   866                           ;initialization.c: 97: dummy_clocks(8);
   867  007A92  0E00               	movlw	0
   868  007A94  6E05               	movwf	dummy_clocks@n+1,c
   869  007A96  0E08               	movlw	8
   870  007A98  6E04               	movwf	dummy_clocks@n,c
   871  007A9A  EC49  F039         	call	_dummy_clocks	;wreg free
   872                           
   873                           ;initialization.c: 99: Command(0X77, 0X00000000, 0X95);
   874  007A9E  0E00               	movlw	0
   875  007AA0  6E03               	movwf	Command@arg,c
   876  007AA2  0E00               	movlw	0
   877  007AA4  6E04               	movwf	Command@arg+1,c
   878  007AA6  0E00               	movlw	0
   879  007AA8  6E05               	movwf	Command@arg+2,c
   880  007AAA  0E00               	movlw	0
   881  007AAC  6E06               	movwf	Command@arg+3,c
   882  007AAE  0E95               	movlw	149
   883  007AB0  6E07               	movwf	Command@CRCbits,c
   884  007AB2  0E77               	movlw	119
   885  007AB4  EC15  F039         	call	_Command
   886                           
   887                           ;initialization.c: 100: buff = 0XFF;
   888  007AB8  6816               	setf	init@buff,c
   889  007ABA                     l1586:
   890                           
   891                           ;initialization.c: 103: buff = response();
   892  007ABA  EC62  F038         	call	_response	;wreg free
   893  007ABE  6E16               	movwf	init@buff,c
   894                           
   895                           ;initialization.c: 104: count2++;
   896  007AC0  4A14               	infsnz	init@count2,f,c
   897  007AC2  2A15               	incf	init@count2+1,f,c
   898                           
   899                           ;initialization.c: 105: }while((buff!=0X01)&&(count2<10));
   900  007AC4  0416               	decf	init@buff,w,c
   901  007AC6  B4D8               	btfsc	status,2,c
   902  007AC8  D008               	goto	l1594
   903  007ACA  5015               	movf	init@count2+1,w,c
   904  007ACC  0A80               	xorlw	128
   905  007ACE  0F80               	addlw	-128
   906  007AD0  0E0A               	movlw	10
   907  007AD2  B4D8               	btfsc	status,2,c
   908  007AD4  5C14               	subwf	init@count2,w,c
   909  007AD6  A0D8               	btfss	status,0,c
   910  007AD8  D7F0               	goto	l1586
   911  007ADA                     l1594:
   912                           
   913                           ;initialization.c: 107: delay_ms(1);
   914  007ADA  0E01               	movlw	1
   915  007ADC  ECB5  F038         	call	_delay_ms
   916                           
   917                           ;initialization.c: 108: count2 = 0;
   918  007AE0  0E00               	movlw	0
   919  007AE2  6E15               	movwf	init@count2+1,c
   920  007AE4  0E00               	movlw	0
   921  007AE6  6E14               	movwf	init@count2,c
   922                           
   923                           ;initialization.c: 109: dummy_clocks(8);
   924  007AE8  0E00               	movlw	0
   925  007AEA  6E05               	movwf	dummy_clocks@n+1,c
   926  007AEC  0E08               	movlw	8
   927  007AEE  6E04               	movwf	dummy_clocks@n,c
   928  007AF0  EC49  F039         	call	_dummy_clocks	;wreg free
   929                           
   930                           ;initialization.c: 111: Command(0X69,0X40000000,0X95);
   931  007AF4  0E00               	movlw	0
   932  007AF6  6E03               	movwf	Command@arg,c
   933  007AF8  0E00               	movlw	0
   934  007AFA  6E04               	movwf	Command@arg+1,c
   935  007AFC  0E00               	movlw	0
   936  007AFE  6E05               	movwf	Command@arg+2,c
   937  007B00  0E40               	movlw	64
   938  007B02  6E06               	movwf	Command@arg+3,c
   939  007B04  0E95               	movlw	149
   940  007B06  6E07               	movwf	Command@CRCbits,c
   941  007B08  0E69               	movlw	105
   942  007B0A  EC15  F039         	call	_Command
   943                           
   944                           ;initialization.c: 112: buff = 0XFF;
   945  007B0E  6816               	setf	init@buff,c
   946                           
   947                           ;initialization.c: 114: proceed();
   948  007B10  EC5C  F038         	call	_proceed	;wreg free
   949  007B14                     l1606:
   950                           
   951                           ;initialization.c: 116: buff = response();
   952  007B14  EC62  F038         	call	_response	;wreg free
   953  007B18  6E16               	movwf	init@buff,c
   954                           
   955                           ;initialization.c: 117: count2++;
   956  007B1A  4A14               	infsnz	init@count2,f,c
   957  007B1C  2A15               	incf	init@count2+1,f,c
   958                           
   959                           ;initialization.c: 118: }while((buff!=0X00)&&(count2<10));
   960  007B1E  5016               	movf	init@buff,w,c
   961  007B20  B4D8               	btfsc	status,2,c
   962  007B22  D008               	goto	l277
   963  007B24  5015               	movf	init@count2+1,w,c
   964  007B26  0A80               	xorlw	128
   965  007B28  0F80               	addlw	-128
   966  007B2A  0E0A               	movlw	10
   967  007B2C  B4D8               	btfsc	status,2,c
   968  007B2E  5C14               	subwf	init@count2,w,c
   969  007B30  A0D8               	btfss	status,0,c
   970  007B32  D7F0               	goto	l1606
   971  007B34                     l277:
   972                           
   973                           ;initialization.c: 119: }while(buff != 0X00);
   974  007B34  6616               	tstfsz	init@buff,c
   975  007B36  D7A9               	goto	l1580
   976                           
   977                           ;initialization.c: 122: count1 = 0;
   978  007B38  0E00               	movlw	0
   979  007B3A  6E11               	movwf	init@count1+1,c
   980  007B3C  0E00               	movlw	0
   981  007B3E  6E10               	movwf	init@count1,c
   982                           
   983                           ;initialization.c: 124: delay_ms(1);
   984  007B40  0E01               	movlw	1
   985  007B42  ECB5  F038         	call	_delay_ms
   986                           
   987                           ;initialization.c: 125: putsUART_("\n\r");
   988  007B46  0E7C               	movlw	high (STR_14+8)
   989  007B48  6E06               	movwf	putsUART_@data+1,c
   990  007B4A  0EEF               	movlw	low (STR_14+8)
   991  007B4C  6E05               	movwf	putsUART_@data,c
   992  007B4E  EC01  F039         	call	_putsUART_	;wreg free
   993                           
   994                           ;initialization.c: 126: putsUART_("SUCCESS\n\r");
   995  007B52  0E7C               	movlw	high STR_13
   996  007B54  6E06               	movwf	putsUART_@data+1,c
   997  007B56  0EF2               	movlw	low STR_13
   998  007B58  6E05               	movwf	putsUART_@data,c
   999  007B5A  EC01  F039         	call	_putsUART_	;wreg free
  1000                           
  1001                           ;initialization.c: 127: Delay_s(2);
  1002  007B5E  0E02               	movlw	2
  1003  007B60  ECED  F038         	call	_Delay_s
  1004                           
  1005                           ;initialization.c: 128: }
  1006  007B64  D00D               	goto	l1630
  1007  007B66                     l1624:
  1008                           
  1009                           ;initialization.c: 130: else if(buff == 0x05)
  1010  007B66  5016               	movf	init@buff,w,c
  1011  007B68  0A05               	xorlw	5
  1012  007B6A  A4D8               	btfss	status,2,c
  1013  007B6C  D009               	goto	l1630
  1014                           
  1015                           ;initialization.c: 131: {
  1016                           ;initialization.c: 132: putsUART_("Error!!!\n\r");
  1017  007B6E  0E7C               	movlw	high STR_14
  1018  007B70  6E06               	movwf	putsUART_@data+1,c
  1019  007B72  0EE7               	movlw	low STR_14
  1020  007B74  6E05               	movwf	putsUART_@data,c
  1021  007B76  EC01  F039         	call	_putsUART_	;wreg free
  1022                           
  1023                           ;initialization.c: 133: Delay_s(3);
  1024  007B7A  0E03               	movlw	3
  1025  007B7C  ECED  F038         	call	_Delay_s
  1026  007B80                     l1630:
  1027                           
  1028                           ;initialization.c: 134: }
  1029                           ;initialization.c: 135: Delay_s(1);
  1030  007B80  0E01               	movlw	1
  1031  007B82  ECED  F038         	call	_Delay_s
  1032                           
  1033                           ;initialization.c: 137: dummy_clocks(8);
  1034  007B86  0E00               	movlw	0
  1035  007B88  6E05               	movwf	dummy_clocks@n+1,c
  1036  007B8A  0E08               	movlw	8
  1037  007B8C  6E04               	movwf	dummy_clocks@n,c
  1038  007B8E  EC49  F039         	call	_dummy_clocks	;wreg free
  1039                           
  1040                           ;initialization.c: 139: Command(0X50,0X00000200,0XFF);
  1041  007B92  0E00               	movlw	0
  1042  007B94  6E03               	movwf	Command@arg,c
  1043  007B96  0E02               	movlw	2
  1044  007B98  6E04               	movwf	Command@arg+1,c
  1045  007B9A  0E00               	movlw	0
  1046  007B9C  6E05               	movwf	Command@arg+2,c
  1047  007B9E  0E00               	movlw	0
  1048  007BA0  6E06               	movwf	Command@arg+3,c
  1049  007BA2  0EFF               	movlw	255
  1050  007BA4  6E07               	movwf	Command@CRCbits,c
  1051  007BA6  0E50               	movlw	80
  1052  007BA8  EC15  F039         	call	_Command
  1053                           
  1054                           ;initialization.c: 140: proceed();
  1055  007BAC  EC5C  F038         	call	_proceed	;wreg free
  1056  007BB0                     l1638:
  1057                           
  1058                           ;initialization.c: 142: buff = response();
  1059  007BB0  EC62  F038         	call	_response	;wreg free
  1060  007BB4  6E16               	movwf	init@buff,c
  1061                           
  1062                           ;initialization.c: 143: }while(buff!=0x00);
  1063  007BB6  6616               	tstfsz	init@buff,c
  1064  007BB8  D7FB               	goto	l1638
  1065                           
  1066                           ;initialization.c: 145: putsUART_("512 Bytes Set\n\r");
  1067  007BBA  0E7C               	movlw	high STR_15
  1068  007BBC  6E06               	movwf	putsUART_@data+1,c
  1069  007BBE  0EB9               	movlw	low STR_15
  1070  007BC0  6E05               	movwf	putsUART_@data,c
  1071  007BC2  EC01  F039         	call	_putsUART_	;wreg free
  1072                           
  1073                           ;initialization.c: 146: Delay_s(2);
  1074  007BC6  0E02               	movlw	2
  1075  007BC8  ECED  F038         	call	_Delay_s
  1076                           
  1077                           ;initialization.c: 147: return;
  1078  007BCC  0012               	return	
  1079  007BCE                     __end_of_init:
  1080                           	opt stack 0
  1081                           tblptru	equ	0xFF8
  1082                           postinc0	equ	0xFEE
  1083                           postdec1	equ	0xFE5
  1084                           fsr1h	equ	0xFE2
  1085                           fsr1l	equ	0xFE1
  1086                           status	equ	0xFD8
  1087                           
  1088 ;; *************** function _reset *****************
  1089 ;; Defined at:
  1090 ;;		line 45 in file "initialization.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  count           2   10[COMRAM] int 
  1095 ;;  i               2    8[COMRAM] int 
  1096 ;;  buff            1   12[COMRAM] unsigned char 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;		None               void
  1099 ;; Registers used:
  1100 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1106 ;;      Params:         0       0       0       0       0       0       0       0       0
  1107 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1109 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1110 ;;Total ram usage:        5 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; Hardware stack levels required when called:    4
  1113 ;; This function calls:
  1114 ;;		_Command
  1115 ;;		_Delay_s
  1116 ;;		_dummy_clocks
  1117 ;;		_proceed
  1118 ;;		_putsUART_
  1119 ;;		_response
  1120 ;; This function is called by:
  1121 ;;		_init
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text2
  1126  0073EA                     __ptext2:
  1127                           	opt stack 0
  1128  0073EA                     _reset:
  1129                           	opt stack 24
  1130                           
  1131                           ;initialization.c: 47: int i = 0, count = 0;
  1132                           
  1133                           ;incstack = 0
  1134  0073EA  0E00               	movlw	0
  1135  0073EC  6E0A               	movwf	reset@i+1,c
  1136  0073EE  0E00               	movlw	0
  1137  0073F0  6E09               	movwf	reset@i,c
  1138  0073F2  0E00               	movlw	0
  1139  0073F4  6E0C               	movwf	reset@count+1,c
  1140  0073F6  0E00               	movlw	0
  1141  0073F8  6E0B               	movwf	reset@count,c
  1142  0073FA                     l1462:
  1143                           
  1144                           ;initialization.c: 51: dummy_clocks(8);
  1145  0073FA  0E00               	movlw	0
  1146  0073FC  6E05               	movwf	dummy_clocks@n+1,c
  1147  0073FE  0E08               	movlw	8
  1148  007400  6E04               	movwf	dummy_clocks@n,c
  1149  007402  EC49  F039         	call	_dummy_clocks	;wreg free
  1150                           
  1151                           ;initialization.c: 53: Command(0X40, 0X00000000, 0X95);
  1152  007406  0E00               	movlw	0
  1153  007408  6E03               	movwf	Command@arg,c
  1154  00740A  0E00               	movlw	0
  1155  00740C  6E04               	movwf	Command@arg+1,c
  1156  00740E  0E00               	movlw	0
  1157  007410  6E05               	movwf	Command@arg+2,c
  1158  007412  0E00               	movlw	0
  1159  007414  6E06               	movwf	Command@arg+3,c
  1160  007416  0E95               	movlw	149
  1161  007418  6E07               	movwf	Command@CRCbits,c
  1162  00741A  0E40               	movlw	64
  1163  00741C  EC15  F039         	call	_Command
  1164                           
  1165                           ;initialization.c: 54: proceed(1);
  1166  007420  0E00               	movlw	0
  1167  007422  6E04               	movwf	?_proceed+1,c
  1168  007424  0E01               	movlw	1
  1169  007426  6E03               	movwf	?_proceed,c
  1170  007428  EC5C  F038         	call	_proceed	;wreg free
  1171  00742C                     l1468:
  1172                           
  1173                           ;initialization.c: 56: buff = response();
  1174  00742C  EC62  F038         	call	_response	;wreg free
  1175  007430  6E0D               	movwf	reset@buff,c
  1176                           
  1177                           ;initialization.c: 57: count++;
  1178  007432  4A0B               	infsnz	reset@count,f,c
  1179  007434  2A0C               	incf	reset@count+1,f,c
  1180                           
  1181                           ;initialization.c: 58: }while((buff!=0X01) && (count<10));
  1182  007436  040D               	decf	reset@buff,w,c
  1183  007438  B4D8               	btfsc	status,2,c
  1184  00743A  D008               	goto	l1476
  1185  00743C  500C               	movf	reset@count+1,w,c
  1186  00743E  0A80               	xorlw	128
  1187  007440  0F80               	addlw	-128
  1188  007442  0E0A               	movlw	10
  1189  007444  B4D8               	btfsc	status,2,c
  1190  007446  5C0B               	subwf	reset@count,w,c
  1191  007448  A0D8               	btfss	status,0,c
  1192  00744A  D7F0               	goto	l1468
  1193  00744C                     l1476:
  1194                           
  1195                           ;initialization.c: 59: count = 0;
  1196  00744C  0E00               	movlw	0
  1197  00744E  6E0C               	movwf	reset@count+1,c
  1198  007450  0E00               	movlw	0
  1199  007452  6E0B               	movwf	reset@count,c
  1200                           
  1201                           ;initialization.c: 60: }while(buff!=0X01);
  1202  007454  040D               	decf	reset@buff,w,c
  1203  007456  A4D8               	btfss	status,2,c
  1204  007458  D7D0               	goto	l1462
  1205                           
  1206                           ;initialization.c: 62: putsUART_("\n\rSD Card Inserted\n\r");
  1207  00745A  0E7C               	movlw	high STR_11
  1208  00745C  6E06               	movwf	putsUART_@data+1,c
  1209  00745E  0E4A               	movlw	low STR_11
  1210  007460  6E05               	movwf	putsUART_@data,c
  1211  007462  EC01  F039         	call	_putsUART_	;wreg free
  1212                           
  1213                           ;initialization.c: 63: Delay_s(2);
  1214  007466  0E02               	movlw	2
  1215  007468  ECED  F038         	call	_Delay_s
  1216                           
  1217                           ;initialization.c: 64: return;
  1218  00746C  0012               	return	
  1219  00746E                     __end_of_reset:
  1220                           	opt stack 0
  1221                           tblptru	equ	0xFF8
  1222                           postinc0	equ	0xFEE
  1223                           postdec1	equ	0xFE5
  1224                           fsr1h	equ	0xFE2
  1225                           fsr1l	equ	0xFE1
  1226                           status	equ	0xFD8
  1227                           
  1228 ;; *************** function _Soft_Hard_Init *****************
  1229 ;; Defined at:
  1230 ;;		line 16 in file "initialization.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  i               2    3[COMRAM] int 
  1235 ;;  smp_phase       1    7[COMRAM] unsigned char 
  1236 ;;  bus_mode        1    6[COMRAM] unsigned char 
  1237 ;;  sync_mode       1    5[COMRAM] unsigned char 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  2   14[COMRAM] int 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1247 ;;      Params:         0       0       0       0       0       0       0       0       0
  1248 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1250 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1251 ;;Total ram usage:        5 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    1
  1254 ;; This function calls:
  1255 ;;		_OpenSPI
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text3
  1262  0072CE                     __ptext3:
  1263                           	opt stack 0
  1264  0072CE                     _Soft_Hard_Init:
  1265                           	opt stack 28
  1266                           
  1267                           ;initialization.c: 18: unsigned char sync_mode=0;
  1268                           
  1269                           ;incstack = 0
  1270  0072CE  0E00               	movlw	0
  1271  0072D0  6E06               	movwf	Soft_Hard_Init@sync_mode,c
  1272                           
  1273                           ;initialization.c: 19: unsigned char bus_mode=0;
  1274  0072D2  0E00               	movlw	0
  1275  0072D4  6E07               	movwf	Soft_Hard_Init@bus_mode,c
  1276                           
  1277                           ;initialization.c: 20: unsigned char smp_phase=0;
  1278  0072D6  0E00               	movlw	0
  1279  0072D8  6E08               	movwf	Soft_Hard_Init@smp_phase,c
  1280                           
  1281                           ;initialization.c: 21: int i = 0;
  1282  0072DA  0E00               	movlw	0
  1283  0072DC  6E05               	movwf	Soft_Hard_Init@i+1,c
  1284  0072DE  0E00               	movlw	0
  1285  0072E0  6E04               	movwf	Soft_Hard_Init@i,c
  1286                           
  1287                           ;initialization.c: 23: (SSPCON1 &=0xDF);
  1288  0072E2  9AC6               	bcf	4038,5,c	;volatile
  1289                           
  1290                           ;initialization.c: 25: ADCON1 = 0X0F;
  1291  0072E4  0E0F               	movlw	15
  1292  0072E6  6EC1               	movwf	4033,c	;volatile
  1293                           
  1294                           ;initialization.c: 26: CMCON |= 7;
  1295  0072E8  0E07               	movlw	7
  1296  0072EA  12B4               	iorwf	4020,f,c	;volatile
  1297                           
  1298                           ;initialization.c: 28: TRISA5 = 0;
  1299  0072EC  9A92               	bcf	3986,5,c	;volatile
  1300                           
  1301                           ;initialization.c: 29: LATA5 = 0;
  1302  0072EE  9A89               	bcf	3977,5,c	;volatile
  1303                           
  1304                           ;initialization.c: 31: TRISB4 = 0;
  1305  0072F0  9893               	bcf	3987,4,c	;volatile
  1306                           
  1307                           ;initialization.c: 32: TRISC7 = 0;
  1308  0072F2  9E94               	bcf	3988,7,c	;volatile
  1309                           
  1310                           ;initialization.c: 33: TRISB1 = 0;
  1311  0072F4  9293               	bcf	3987,1,c	;volatile
  1312                           
  1313                           ;initialization.c: 34: TRISB0 = 1;
  1314  0072F6  8093               	bsf	3987,0,c	;volatile
  1315                           
  1316                           ;initialization.c: 36: sync_mode = 0b00000010;
  1317  0072F8  0E02               	movlw	2
  1318  0072FA  6E06               	movwf	Soft_Hard_Init@sync_mode,c
  1319                           
  1320                           ;initialization.c: 37: bus_mode = 0b00000000;
  1321  0072FC  0E00               	movlw	0
  1322  0072FE  6E07               	movwf	Soft_Hard_Init@bus_mode,c
  1323                           
  1324                           ;initialization.c: 38: smp_phase = 0b00000000;
  1325  007300  0E00               	movlw	0
  1326  007302  6E08               	movwf	Soft_Hard_Init@smp_phase,c
  1327                           
  1328                           ;initialization.c: 39: OpenSPI(sync_mode, bus_mode, smp_phase);
  1329  007304  C007  F001         	movff	Soft_Hard_Init@bus_mode,OpenSPI@bus_mode
  1330  007308  C008  F002         	movff	Soft_Hard_Init@smp_phase,OpenSPI@smp_phase
  1331  00730C  5006               	movf	Soft_Hard_Init@sync_mode,w,c
  1332  00730E  EC8E  F039         	call	_OpenSPI
  1333                           
  1334                           ;initialization.c: 40: SSPSTAT = 0XC0;
  1335  007312  0EC0               	movlw	192
  1336  007314  6EC7               	movwf	4039,c	;volatile
  1337                           
  1338                           ;initialization.c: 41: SSPCON1 = 0X22;
  1339  007316  0E22               	movlw	34
  1340  007318  6EC6               	movwf	4038,c	;volatile
  1341  00731A  0012               	return	
  1342  00731C                     __end_of_Soft_Hard_Init:
  1343                           	opt stack 0
  1344                           tblptru	equ	0xFF8
  1345                           postinc0	equ	0xFEE
  1346                           postdec1	equ	0xFE5
  1347                           fsr1h	equ	0xFE2
  1348                           fsr1l	equ	0xFE1
  1349                           status	equ	0xFD8
  1350                           
  1351 ;; *************** function _OpenSPI *****************
  1352 ;; Defined at:
  1353 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi_open.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  sync_mode       1    wreg     unsigned char 
  1356 ;;  bus_mode        1    0[COMRAM] unsigned char 
  1357 ;;  smp_phase       1    1[COMRAM] unsigned char 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  sync_mode       1    2[COMRAM] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;		None               void
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1369 ;;      Params:         2       0       0       0       0       0       0       0       0
  1370 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1372 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1373 ;;Total ram usage:        3 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_Soft_Hard_Init
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text4
  1383  00731C                     __ptext4:
  1384                           	opt stack 0
  1385  00731C                     _OpenSPI:
  1386                           	opt stack 28
  1387                           
  1388                           ;incstack = 0
  1389                           ;OpenSPI@sync_mode stored from wreg
  1390  00731C  6E03               	movwf	OpenSPI@sync_mode,c
  1391  00731E  0E3F               	movlw	63
  1392  007320  16C7               	andwf	4039,f,c	;volatile
  1393  007322  0E00               	movlw	0
  1394  007324  6EC6               	movwf	4038,c	;volatile
  1395  007326  5003               	movf	OpenSPI@sync_mode,w,c
  1396  007328  12C6               	iorwf	4038,f,c	;volatile
  1397  00732A  5002               	movf	OpenSPI@smp_phase,w,c
  1398  00732C  12C7               	iorwf	4039,f,c	;volatile
  1399  00732E  D005               	goto	l1452
  1400  007330                     l346:
  1401  007330  8CC7               	bsf	4039,6,c	;volatile
  1402  007332  D013               	goto	l1456
  1403  007334                     l348:
  1404  007334  8CC7               	bsf	4039,6,c	;volatile
  1405  007336                     l349:
  1406  007336  88C6               	bsf	4038,4,c	;volatile
  1407  007338  D010               	goto	l1456
  1408  00733A                     l1452:
  1409  00733A  5001               	movf	OpenSPI@bus_mode,w,c
  1410                           
  1411                           ; Switch size 1, requested type "space"
  1412                           ; Number of cases is 3, Range of values is 0 to 3
  1413                           ; switch strategies available:
  1414                           ; Name         Instructions Cycles
  1415                           ; simple_byte           10     6 (average)
  1416                           ;	Chosen strategy is simple_byte
  1417  00733C  0A00               	xorlw	0	; case 0
  1418  00733E  B4D8               	btfsc	status,2,c
  1419  007340  D7F7               	goto	l346
  1420  007342  0A02               	xorlw	2	; case 2
  1421  007344  B4D8               	btfsc	status,2,c
  1422  007346  D7F6               	goto	l348
  1423  007348  0A01               	xorlw	1	; case 3
  1424  00734A  B4D8               	btfsc	status,2,c
  1425  00734C  D7F4               	goto	l349
  1426  00734E  D005               	goto	l1456
  1427  007350                     l352:
  1428  007350  8A92               	bsf	3986,5,c	;volatile
  1429  007352                     l354:
  1430  007352  8293               	bsf	3987,1,c	;volatile
  1431  007354  D00A               	goto	l353
  1432  007356                     l355:
  1433  007356  9293               	bcf	3987,1,c	;volatile
  1434  007358  D008               	goto	l353
  1435  00735A                     l1456:
  1436  00735A  5003               	movf	OpenSPI@sync_mode,w,c
  1437                           
  1438                           ; Switch size 1, requested type "space"
  1439                           ; Number of cases is 2, Range of values is 4 to 5
  1440                           ; switch strategies available:
  1441                           ; Name         Instructions Cycles
  1442                           ; simple_byte            7     4 (average)
  1443                           ;	Chosen strategy is simple_byte
  1444  00735C  0A04               	xorlw	4	; case 4
  1445  00735E  B4D8               	btfsc	status,2,c
  1446  007360  D7F7               	goto	l352
  1447  007362  0A01               	xorlw	1	; case 5
  1448  007364  B4D8               	btfsc	status,2,c
  1449  007366  D7F5               	goto	l354
  1450  007368  D7F6               	goto	l355
  1451  00736A                     l353:
  1452  00736A  8093               	bsf	3987,0,c	;volatile
  1453  00736C  9E94               	bcf	3988,7,c	;volatile
  1454  00736E  8AC6               	bsf	4038,5,c	;volatile
  1455  007370  0012               	return	
  1456  007372                     __end_of_OpenSPI:
  1457                           	opt stack 0
  1458                           tblptru	equ	0xFF8
  1459                           postinc0	equ	0xFEE
  1460                           postdec1	equ	0xFE5
  1461                           fsr1h	equ	0xFE2
  1462                           fsr1l	equ	0xFE1
  1463                           status	equ	0xFD8
  1464                           
  1465 ;; *************** function _OpenUART_ *****************
  1466 ;; Defined at:
  1467 ;;		line 20 in file "my_openuart.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;		None
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;		None               void
  1474 ;; Registers used:
  1475 ;;		None
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1481 ;;      Params:         0       0       0       0       0       0       0       0       0
  1482 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1484 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1485 ;;Total ram usage:        0 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text5
  1495  0070AE                     __ptext5:
  1496                           	opt stack 0
  1497  0070AE                     _OpenUART_:
  1498                           	opt stack 29
  1499                           
  1500                           ;my_openuart.c: 22: TRISDbits.RD4 = 0;
  1501                           
  1502                           ;incstack = 0
  1503  0070AE  9895               	bcf	3989,4,c	;volatile
  1504                           
  1505                           ;my_openuart.c: 23: RD4 = 1;
  1506  0070B0  8883               	bsf	3971,4,c	;volatile
  1507                           
  1508                           ;my_openuart.c: 25: TRISDbits.RD5 = 1;
  1509  0070B2  8A95               	bsf	3989,5,c	;volatile
  1510                           
  1511                           ;my_openuart.c: 26: RD5 = 1;
  1512  0070B4  8A83               	bsf	3971,5,c	;volatile
  1513  0070B6  0012               	return	
  1514  0070B8                     __end_of_OpenUART_:
  1515                           	opt stack 0
  1516                           tblptru	equ	0xFF8
  1517                           postinc0	equ	0xFEE
  1518                           postdec1	equ	0xFE5
  1519                           fsr1h	equ	0xFE2
  1520                           fsr1l	equ	0xFE1
  1521                           status	equ	0xFD8
  1522                           
  1523 ;; *************** function _File_IO *****************
  1524 ;; Defined at:
  1525 ;;		line 26 in file "main.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  c               1   19[COMRAM] unsigned char 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;		None               void
  1532 ;; Registers used:
  1533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0
  1540 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1542 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1543 ;;Total ram usage:        1 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:    5
  1546 ;; This function calls:
  1547 ;;		_ReadUART_
  1548 ;;		_multi_read
  1549 ;;		_multi_write
  1550 ;;		_putsUART_
  1551 ;;		_read_block
  1552 ;;		_write_block
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text6
  1559  007372                     __ptext6:
  1560                           	opt stack 0
  1561  007372                     _File_IO:
  1562                           	opt stack 24
  1563  007372                     l21:
  1564                           
  1565                           ;main.c: 30: putsUART_("\n\rPlease select a file operation?\n\rWrite    - w\n\rRead     
      +                          - r\n\rMulti_Write   - a\n\rMulti_Read   - d\n\r");
  1566  007372  0E7B               	movlw	high STR_1
  1567  007374  6E06               	movwf	putsUART_@data+1,c
  1568  007376  0ECF               	movlw	low STR_1
  1569  007378  6E05               	movwf	putsUART_@data,c
  1570  00737A  EC01  F039         	call	_putsUART_	;wreg free
  1571                           
  1572                           ;main.c: 31: c = ReadUART_();
  1573  00737E  EC37  F03A         	call	_ReadUART_	;wreg free
  1574  007382  6E14               	movwf	File_IO@c,c
  1575                           
  1576                           ;main.c: 32: switch(c)
  1577  007384  D013               	goto	l1502
  1578  007386                     l1490:
  1579                           
  1580                           ;main.c: 35: write_block();
  1581  007386  EC8B  F03A         	call	_write_block	;wreg free
  1582                           
  1583                           ;main.c: 36: break;
  1584  00738A  D01E               	goto	l1504
  1585  00738C                     l1492:
  1586                           
  1587                           ;main.c: 38: read_block();
  1588  00738C  EC93  F03B         	call	_read_block	;wreg free
  1589                           
  1590                           ;main.c: 39: break;
  1591  007390  D01B               	goto	l1504
  1592  007392                     l1494:
  1593                           
  1594                           ;main.c: 41: multi_write();
  1595  007392  ECFF  F03A         	call	_multi_write	;wreg free
  1596                           
  1597                           ;main.c: 42: break;
  1598  007396  D018               	goto	l1504
  1599  007398                     l1496:
  1600                           
  1601                           ;main.c: 44: multi_read();
  1602  007398  EC2C  F03C         	call	_multi_read	;wreg free
  1603                           
  1604                           ;main.c: 45: break;
  1605  00739C  D015               	goto	l1504
  1606  00739E                     l1498:
  1607                           
  1608                           ;main.c: 47: putsUART_("\n\rInvalid Entry..!");
  1609  00739E  0E7C               	movlw	high STR_2
  1610  0073A0  6E06               	movwf	putsUART_@data+1,c
  1611  0073A2  0E72               	movlw	low STR_2
  1612  0073A4  6E05               	movwf	putsUART_@data,c
  1613  0073A6  EC01  F039         	call	_putsUART_	;wreg free
  1614                           
  1615                           ;main.c: 48: break;
  1616  0073AA  D00E               	goto	l1504
  1617  0073AC                     l1502:
  1618  0073AC  5014               	movf	File_IO@c,w,c
  1619                           
  1620                           ; Switch size 1, requested type "space"
  1621                           ; Number of cases is 4, Range of values is 97 to 119
  1622                           ; switch strategies available:
  1623                           ; Name         Instructions Cycles
  1624                           ; simple_byte           13     7 (average)
  1625                           ;	Chosen strategy is simple_byte
  1626  0073AE  0A61               	xorlw	97	; case 97
  1627  0073B0  B4D8               	btfsc	status,2,c
  1628  0073B2  D7EF               	goto	l1494
  1629  0073B4  0A05               	xorlw	5	; case 100
  1630  0073B6  B4D8               	btfsc	status,2,c
  1631  0073B8  D7EF               	goto	l1496
  1632  0073BA  0A16               	xorlw	22	; case 114
  1633  0073BC  B4D8               	btfsc	status,2,c
  1634  0073BE  D7E6               	goto	l1492
  1635  0073C0  0A05               	xorlw	5	; case 119
  1636  0073C2  B4D8               	btfsc	status,2,c
  1637  0073C4  D7E0               	goto	l1490
  1638  0073C6  D7EB               	goto	l1498
  1639  0073C8                     l1504:
  1640                           
  1641                           ;main.c: 50: }while((c != 'w') && (c != 'r') && (c != 'd') && (c != 'a'));
  1642  0073C8  5014               	movf	File_IO@c,w,c
  1643  0073CA  0A77               	xorlw	119
  1644  0073CC  B4D8               	btfsc	status,2,c
  1645  0073CE  D00C               	goto	l32
  1646  0073D0  5014               	movf	File_IO@c,w,c
  1647  0073D2  0A72               	xorlw	114
  1648  0073D4  B4D8               	btfsc	status,2,c
  1649  0073D6  D008               	goto	l32
  1650  0073D8  5014               	movf	File_IO@c,w,c
  1651  0073DA  0A64               	xorlw	100
  1652  0073DC  B4D8               	btfsc	status,2,c
  1653  0073DE  D004               	goto	l32
  1654  0073E0  5014               	movf	File_IO@c,w,c
  1655  0073E2  0A61               	xorlw	97
  1656  0073E4  A4D8               	btfss	status,2,c
  1657  0073E6  D7C5               	goto	l21
  1658  0073E8                     l32:
  1659  0073E8  0012               	return	
  1660  0073EA                     __end_of_File_IO:
  1661                           	opt stack 0
  1662                           tblptru	equ	0xFF8
  1663                           postinc0	equ	0xFEE
  1664                           postdec1	equ	0xFE5
  1665                           fsr1h	equ	0xFE2
  1666                           fsr1l	equ	0xFE1
  1667                           status	equ	0xFD8
  1668                           
  1669 ;; *************** function _write_block *****************
  1670 ;; Defined at:
  1671 ;;		line 18 in file "raw_io.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  i               2    8[COMRAM] int 
  1676 ;;  buff            1   10[COMRAM] unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  2    6[COMRAM] int 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1686 ;;      Params:         0       0       0       0       0       0       0       0       0
  1687 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1689 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1690 ;;Total ram usage:        3 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    4
  1693 ;; This function calls:
  1694 ;;		_Command
  1695 ;;		_Delay_s
  1696 ;;		_WriteSPI_
  1697 ;;		_dummy_clocks
  1698 ;;		_proceed
  1699 ;;		_putsUART_
  1700 ;;		_response
  1701 ;; This function is called by:
  1702 ;;		_File_IO
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text7
  1707  007516                     __ptext7:
  1708                           	opt stack 0
  1709  007516                     _write_block:
  1710                           	opt stack 24
  1711                           
  1712                           ;raw_io.c: 20: unsigned char buff;
  1713                           ;raw_io.c: 21: int i=0;
  1714                           
  1715                           ;incstack = 0
  1716  007516  0E00               	movlw	0
  1717  007518  6E0A               	movwf	write_block@i+1,c
  1718  00751A  0E00               	movlw	0
  1719  00751C  6E09               	movwf	write_block@i,c
  1720                           
  1721                           ;raw_io.c: 23: dummy_clocks(8);
  1722  00751E  0E00               	movlw	0
  1723  007520  6E05               	movwf	dummy_clocks@n+1,c
  1724  007522  0E08               	movlw	8
  1725  007524  6E04               	movwf	dummy_clocks@n,c
  1726  007526  EC49  F039         	call	_dummy_clocks	;wreg free
  1727                           
  1728                           ;raw_io.c: 24: Command(0X58, 0X00000A00, 0X00);
  1729  00752A  0E00               	movlw	0
  1730  00752C  6E03               	movwf	Command@arg,c
  1731  00752E  0E0A               	movlw	10
  1732  007530  6E04               	movwf	Command@arg+1,c
  1733  007532  0E00               	movlw	0
  1734  007534  6E05               	movwf	Command@arg+2,c
  1735  007536  0E00               	movlw	0
  1736  007538  6E06               	movwf	Command@arg+3,c
  1737  00753A  0E00               	movlw	0
  1738  00753C  6E07               	movwf	Command@CRCbits,c
  1739  00753E  0E58               	movlw	88
  1740  007540  EC15  F039         	call	_Command
  1741                           
  1742                           ;raw_io.c: 25: proceed();
  1743  007544  EC5C  F038         	call	_proceed	;wreg free
  1744  007548                     l1190:
  1745                           
  1746                           ;raw_io.c: 27: buff = response();
  1747  007548  EC62  F038         	call	_response	;wreg free
  1748  00754C  6E0B               	movwf	write_block@buff,c
  1749                           
  1750                           ;raw_io.c: 28: }while(buff!=0x00);
  1751  00754E  660B               	tstfsz	write_block@buff,c
  1752  007550  D7FB               	goto	l1190
  1753                           
  1754                           ;raw_io.c: 30: putsUART_("CMD24 Accepted");
  1755  007552  0E7C               	movlw	high STR_4
  1756  007554  6E06               	movwf	putsUART_@data+1,c
  1757  007556  0EC9               	movlw	low STR_4
  1758  007558  6E05               	movwf	putsUART_@data,c
  1759  00755A  EC01  F039         	call	_putsUART_	;wreg free
  1760                           
  1761                           ;raw_io.c: 32: Delay_s(1);
  1762  00755E  0E01               	movlw	1
  1763  007560  ECED  F038         	call	_Delay_s
  1764                           
  1765                           ;raw_io.c: 33: dummy_clocks(8);
  1766  007564  0E00               	movlw	0
  1767  007566  6E05               	movwf	dummy_clocks@n+1,c
  1768  007568  0E08               	movlw	8
  1769  00756A  6E04               	movwf	dummy_clocks@n,c
  1770  00756C  EC49  F039         	call	_dummy_clocks	;wreg free
  1771                           
  1772                           ;raw_io.c: 34: WriteSPI_(0XFE);
  1773  007570  0EFE               	movlw	254
  1774  007572  EC9D  F038         	call	_WriteSPI_
  1775                           
  1776                           ;raw_io.c: 36: for(i=0;i<(512*2);i++)
  1777  007576  0E00               	movlw	0
  1778  007578  6E0A               	movwf	write_block@i+1,c
  1779  00757A  0E00               	movlw	0
  1780  00757C  6E09               	movwf	write_block@i,c
  1781  00757E  500A               	movf	write_block@i+1,w,c
  1782  007580  0A80               	xorlw	128
  1783  007582  0F7C               	addlw	-132
  1784  007584  0E00               	movlw	0
  1785  007586  B4D8               	btfsc	status,2,c
  1786  007588  5C09               	subwf	write_block@i,w,c
  1787  00758A  B0D8               	btfsc	status,0,c
  1788  00758C  D008               	goto	l1216
  1789                           
  1790                           ;raw_io.c: 37: {
  1791                           ;raw_io.c: 38: WriteSPI_(0X41);
  1792  00758E  0E41               	movlw	65
  1793  007590  EC9D  F038         	call	_WriteSPI_
  1794                           
  1795                           ;raw_io.c: 39: i++;
  1796  007594  4A09               	infsnz	write_block@i,f,c
  1797  007596  2A0A               	incf	write_block@i+1,f,c
  1798  007598  4A09               	infsnz	write_block@i,f,c
  1799  00759A  2A0A               	incf	write_block@i+1,f,c
  1800  00759C  D7F0               	goto	L1
  1801  00759E                     l1216:
  1802                           
  1803                           ;raw_io.c: 40: }
  1804                           ;raw_io.c: 42: WriteSPI_(0XFF);
  1805  00759E  0EFF               	movlw	255
  1806  0075A0  EC9D  F038         	call	_WriteSPI_
  1807                           
  1808                           ;raw_io.c: 43: WriteSPI_(0XFF);
  1809  0075A4  0EFF               	movlw	255
  1810  0075A6  EC9D  F038         	call	_WriteSPI_
  1811                           
  1812                           ;raw_io.c: 45: dummy_clocks(1);
  1813  0075AA  0E00               	movlw	0
  1814  0075AC  6E05               	movwf	dummy_clocks@n+1,c
  1815  0075AE  0E01               	movlw	1
  1816  0075B0  6E04               	movwf	dummy_clocks@n,c
  1817  0075B2  EC49  F039         	call	_dummy_clocks	;wreg free
  1818                           
  1819                           ;raw_io.c: 48: Delay_s(1);
  1820  0075B6  0E01               	movlw	1
  1821  0075B8  ECED  F038         	call	_Delay_s
  1822                           
  1823                           ;raw_io.c: 49: dummy_clocks(8);
  1824  0075BC  0E00               	movlw	0
  1825  0075BE  6E05               	movwf	dummy_clocks@n+1,c
  1826  0075C0  0E08               	movlw	8
  1827  0075C2  6E04               	movwf	dummy_clocks@n,c
  1828  0075C4  EC49  F039         	call	_dummy_clocks	;wreg free
  1829                           
  1830                           ;raw_io.c: 50: Command(0X4D,0X00000000,0XFF);
  1831  0075C8  0E00               	movlw	0
  1832  0075CA  6E03               	movwf	Command@arg,c
  1833  0075CC  0E00               	movlw	0
  1834  0075CE  6E04               	movwf	Command@arg+1,c
  1835  0075D0  0E00               	movlw	0
  1836  0075D2  6E05               	movwf	Command@arg+2,c
  1837  0075D4  0E00               	movlw	0
  1838  0075D6  6E06               	movwf	Command@arg+3,c
  1839  0075D8  0EFF               	movlw	255
  1840  0075DA  6E07               	movwf	Command@CRCbits,c
  1841  0075DC  0E4D               	movlw	77
  1842  0075DE  EC15  F039         	call	_Command
  1843                           
  1844                           ;raw_io.c: 51: proceed();
  1845  0075E2  EC5C  F038         	call	_proceed	;wreg free
  1846  0075E6                     l1228:
  1847                           
  1848                           ;raw_io.c: 53: buff = response();
  1849  0075E6  EC62  F038         	call	_response	;wreg free
  1850  0075EA  6E0B               	movwf	write_block@buff,c
  1851                           
  1852                           ;raw_io.c: 54: }while(buff!=0x00);
  1853  0075EC  660B               	tstfsz	write_block@buff,c
  1854  0075EE  D7FB               	goto	l1228
  1855                           
  1856                           ;raw_io.c: 55: putsUART_("BLOCK WRITE OVER");
  1857  0075F0  0E7C               	movlw	high STR_5
  1858  0075F2  6E06               	movwf	putsUART_@data+1,c
  1859  0075F4  0EA8               	movlw	low STR_5
  1860  0075F6  6E05               	movwf	putsUART_@data,c
  1861  0075F8  EC01  F039         	call	_putsUART_	;wreg free
  1862                           
  1863                           ;raw_io.c: 56: return;
  1864  0075FC  0012               	return	
  1865  0075FE                     __end_of_write_block:
  1866                           	opt stack 0
  1867                           tblptru	equ	0xFF8
  1868                           postinc0	equ	0xFEE
  1869                           postdec1	equ	0xFE5
  1870                           fsr1h	equ	0xFE2
  1871                           fsr1l	equ	0xFE1
  1872                           status	equ	0xFD8
  1873                           
  1874 ;; *************** function _read_block *****************
  1875 ;; Defined at:
  1876 ;;		line 187 in file "raw_io.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  start_add       4    8[COMRAM] unsigned long 
  1881 ;;  length          2   17[COMRAM] int 
  1882 ;;  i               2   14[COMRAM] int 
  1883 ;;  count           2   12[COMRAM] int 
  1884 ;;  buff            1   16[COMRAM] unsigned char 
  1885 ;;  readdata        1    0        unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  2    8[COMRAM] int 
  1888 ;; Registers used:
  1889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1895 ;;      Params:         0       0       0       0       0       0       0       0       0
  1896 ;;      Locals:        11       0       0       0       0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1898 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1899 ;;Total ram usage:       11 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    4
  1902 ;; This function calls:
  1903 ;;		_Command
  1904 ;;		_Delay_s
  1905 ;;		_WriteUART_
  1906 ;;		_dummy_clocks
  1907 ;;		_proceed
  1908 ;;		_putsUART_
  1909 ;;		_response
  1910 ;; This function is called by:
  1911 ;;		_File_IO
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text8
  1916  007726                     __ptext8:
  1917                           	opt stack 0
  1918  007726                     _read_block:
  1919                           	opt stack 24
  1920                           
  1921                           ;raw_io.c: 189: unsigned char buff, readdata;
  1922                           ;raw_io.c: 190: int length,count,i=0;
  1923                           
  1924                           ;incstack = 0
  1925  007726  0E00               	movlw	0
  1926  007728  6E10               	movwf	read_block@i+1,c
  1927  00772A  0E00               	movlw	0
  1928  00772C  6E0F               	movwf	read_block@i,c
  1929                           
  1930                           ;raw_io.c: 191: unsigned int long start_add;
  1931                           ;raw_io.c: 192: Delay_s(1);
  1932  00772E  0E01               	movlw	1
  1933  007730  ECED  F038         	call	_Delay_s
  1934                           
  1935                           ;raw_io.c: 193: dummy_clocks(8);
  1936  007734  0E00               	movlw	0
  1937  007736  6E05               	movwf	dummy_clocks@n+1,c
  1938  007738  0E08               	movlw	8
  1939  00773A  6E04               	movwf	dummy_clocks@n,c
  1940  00773C  EC49  F039         	call	_dummy_clocks	;wreg free
  1941                           
  1942                           ;raw_io.c: 195: start_add = 0X00000000;
  1943  007740  0E00               	movlw	0
  1944  007742  6E09               	movwf	read_block@start_add,c
  1945  007744  0E00               	movlw	0
  1946  007746  6E0A               	movwf	read_block@start_add+1,c
  1947  007748  0E00               	movlw	0
  1948  00774A  6E0B               	movwf	read_block@start_add+2,c
  1949  00774C  0E00               	movlw	0
  1950  00774E  6E0C               	movwf	read_block@start_add+3,c
  1951                           
  1952                           ;raw_io.c: 196: count = 6;
  1953  007750  0E00               	movlw	0
  1954  007752  6E0E               	movwf	read_block@count+1,c
  1955  007754  0E06               	movlw	6
  1956  007756  6E0D               	movwf	read_block@count,c
  1957                           
  1958                           ;raw_io.c: 197: Command(0X51,0X00000000,0XFF);
  1959  007758  0E00               	movlw	0
  1960  00775A  6E03               	movwf	Command@arg,c
  1961  00775C  0E00               	movlw	0
  1962  00775E  6E04               	movwf	Command@arg+1,c
  1963  007760  0E00               	movlw	0
  1964  007762  6E05               	movwf	Command@arg+2,c
  1965  007764  0E00               	movlw	0
  1966  007766  6E06               	movwf	Command@arg+3,c
  1967  007768  0EFF               	movlw	255
  1968  00776A  6E07               	movwf	Command@CRCbits,c
  1969  00776C  0E51               	movlw	81
  1970  00776E  EC15  F039         	call	_Command
  1971  007772                     l1244:
  1972                           
  1973                           ;raw_io.c: 200: buff = response();
  1974  007772  EC62  F038         	call	_response	;wreg free
  1975  007776  6E11               	movwf	read_block@buff,c
  1976                           
  1977                           ;raw_io.c: 201: }while(buff!=0x00);
  1978  007778  6611               	tstfsz	read_block@buff,c
  1979  00777A  D7FB               	goto	l1244
  1980  00777C                     l1248:
  1981                           
  1982                           ;raw_io.c: 203: buff = response();
  1983  00777C  EC62  F038         	call	_response	;wreg free
  1984  007780  6E11               	movwf	read_block@buff,c
  1985                           
  1986                           ;raw_io.c: 204: }while(buff!=0xFE);
  1987  007782  5011               	movf	read_block@buff,w,c
  1988  007784  0AFE               	xorlw	254
  1989  007786  A4D8               	btfss	status,2,c
  1990  007788  D7F9               	goto	l1248
  1991                           
  1992                           ;raw_io.c: 206: length = 0;
  1993  00778A  0E00               	movlw	0
  1994  00778C  6E13               	movwf	read_block@length+1,c
  1995  00778E  0E00               	movlw	0
  1996  007790  6E12               	movwf	read_block@length,c
  1997                           
  1998                           ;raw_io.c: 209: LATB4 = 0;
  1999  007792  988A               	bcf	3978,4,c	;volatile
  2000                           
  2001                           ;raw_io.c: 211: while(length<512)
  2002  007794  D00B               	goto	l1260
  2003  007796                     l1256:
  2004                           
  2005                           ;raw_io.c: 212: {
  2006                           ;raw_io.c: 213: str[length]=response();
  2007  007796  0E00               	movlw	low _str
  2008  007798  2412               	addwf	read_block@length,w,c
  2009  00779A  6ED9               	movwf	fsr2l,c
  2010  00779C  0E06               	movlw	high _str
  2011  00779E  2013               	addwfc	read_block@length+1,w,c
  2012  0077A0  6EDA               	movwf	fsr2h,c
  2013  0077A2  EC62  F038         	call	_response	;wreg free
  2014  0077A6  6EDF               	movwf	indf2,c
  2015                           
  2016                           ;raw_io.c: 214: length++;
  2017  0077A8  4A12               	infsnz	read_block@length,f,c
  2018  0077AA  2A13               	incf	read_block@length+1,f,c
  2019  0077AC                     l1260:
  2020  0077AC  5013               	movf	read_block@length+1,w,c
  2021  0077AE  0A80               	xorlw	128
  2022  0077B0  0F7E               	addlw	-130
  2023  0077B2  0E00               	movlw	0
  2024  0077B4  B4D8               	btfsc	status,2,c
  2025  0077B6  5C12               	subwf	read_block@length,w,c
  2026  0077B8  A0D8               	btfss	status,0,c
  2027  0077BA  D7ED               	goto	l1256
  2028                           
  2029                           ;raw_io.c: 215: }
  2030                           ;raw_io.c: 216: length = 0;
  2031  0077BC  0E00               	movlw	0
  2032  0077BE  6E13               	movwf	read_block@length+1,c
  2033  0077C0  0E00               	movlw	0
  2034  0077C2  6E12               	movwf	read_block@length,c
  2035                           
  2036                           ;raw_io.c: 218: WriteUART_(0XFF);
  2037  0077C4  0EFF               	movlw	255
  2038  0077C6  EC2C  F039         	call	_WriteUART_
  2039                           
  2040                           ;raw_io.c: 219: WriteUART_(0XFF);
  2041  0077CA  0EFF               	movlw	255
  2042  0077CC  EC2C  F039         	call	_WriteUART_
  2043                           
  2044                           ;raw_io.c: 221: Delay_s(1);
  2045  0077D0  0E01               	movlw	1
  2046  0077D2  ECED  F038         	call	_Delay_s
  2047                           
  2048                           ;raw_io.c: 222: dummy_clocks(8);
  2049  0077D6  0E00               	movlw	0
  2050  0077D8  6E05               	movwf	dummy_clocks@n+1,c
  2051  0077DA  0E08               	movlw	8
  2052  0077DC  6E04               	movwf	dummy_clocks@n,c
  2053  0077DE  EC49  F039         	call	_dummy_clocks	;wreg free
  2054                           
  2055                           ;raw_io.c: 224: Command(0X4C,0X00000000,0X00);
  2056  0077E2  0E00               	movlw	0
  2057  0077E4  6E03               	movwf	Command@arg,c
  2058  0077E6  0E00               	movlw	0
  2059  0077E8  6E04               	movwf	Command@arg+1,c
  2060  0077EA  0E00               	movlw	0
  2061  0077EC  6E05               	movwf	Command@arg+2,c
  2062  0077EE  0E00               	movlw	0
  2063  0077F0  6E06               	movwf	Command@arg+3,c
  2064  0077F2  0E00               	movlw	0
  2065  0077F4  6E07               	movwf	Command@CRCbits,c
  2066  0077F6  0E4C               	movlw	76
  2067  0077F8  EC15  F039         	call	_Command
  2068                           
  2069                           ;raw_io.c: 225: proceed();
  2070  0077FC  EC5C  F038         	call	_proceed	;wreg free
  2071  007800                     l1276:
  2072                           
  2073                           ;raw_io.c: 227: buff = response();
  2074  007800  EC62  F038         	call	_response	;wreg free
  2075  007804  6E11               	movwf	read_block@buff,c
  2076                           
  2077                           ;raw_io.c: 228: }while(buff!=0xFF);
  2078  007806  2811               	incf	read_block@buff,w,c
  2079  007808  A4D8               	btfss	status,2,c
  2080  00780A  D7FA               	goto	l1276
  2081                           
  2082                           ;raw_io.c: 230: putsUART_("BLOCK READ OVER\n\r");
  2083  00780C  0E7C               	movlw	high STR_10
  2084  00780E  6E06               	movwf	putsUART_@data+1,c
  2085  007810  0E85               	movlw	low STR_10
  2086  007812  6E05               	movwf	putsUART_@data,c
  2087  007814  EC01  F039         	call	_putsUART_	;wreg free
  2088                           
  2089                           ;raw_io.c: 231: Delay_s(2);
  2090  007818  0E02               	movlw	2
  2091  00781A  ECED  F038         	call	_Delay_s
  2092                           
  2093                           ;raw_io.c: 232: length = 0;
  2094  00781E  0E00               	movlw	0
  2095  007820  6E13               	movwf	read_block@length+1,c
  2096  007822  0E00               	movlw	0
  2097  007824  6E12               	movwf	read_block@length,c
  2098                           
  2099                           ;raw_io.c: 233: i = 0;
  2100  007826  0E00               	movlw	0
  2101  007828  6E10               	movwf	read_block@i+1,c
  2102  00782A  0E00               	movlw	0
  2103  00782C  6E0F               	movwf	read_block@i,c
  2104                           
  2105                           ;raw_io.c: 235: while(length<512)
  2106  00782E  D00B               	goto	l1292
  2107  007830                     l1288:
  2108                           
  2109                           ;raw_io.c: 236: {
  2110                           ;raw_io.c: 237: WriteUART_(str[length]);
  2111  007830  0E00               	movlw	low _str
  2112  007832  2412               	addwf	read_block@length,w,c
  2113  007834  6ED9               	movwf	fsr2l,c
  2114  007836  0E06               	movlw	high _str
  2115  007838  2013               	addwfc	read_block@length+1,w,c
  2116  00783A  6EDA               	movwf	fsr2h,c
  2117  00783C  50DF               	movf	indf2,w,c
  2118  00783E  EC2C  F039         	call	_WriteUART_
  2119                           
  2120                           ;raw_io.c: 238: length++;
  2121  007842  4A12               	infsnz	read_block@length,f,c
  2122  007844  2A13               	incf	read_block@length+1,f,c
  2123  007846                     l1292:
  2124  007846  5013               	movf	read_block@length+1,w,c
  2125  007848  0A80               	xorlw	128
  2126  00784A  0F7E               	addlw	-130
  2127  00784C  0E00               	movlw	0
  2128  00784E  B4D8               	btfsc	status,2,c
  2129  007850  5C12               	subwf	read_block@length,w,c
  2130  007852  B0D8               	btfsc	status,0,c
  2131                           
  2132                           ;raw_io.c: 239: }
  2133                           ;raw_io.c: 240: return;
  2134  007854  0012               	return	
  2135  007856  D7EC               	goto	l1288
  2136  007858                     __end_of_read_block:
  2137                           	opt stack 0
  2138                           tblptru	equ	0xFF8
  2139                           postinc0	equ	0xFEE
  2140                           postdec1	equ	0xFE5
  2141                           fsr1h	equ	0xFE2
  2142                           fsr1l	equ	0xFE1
  2143                           indf2	equ	0xFDF
  2144                           fsr2h	equ	0xFDA
  2145                           fsr2l	equ	0xFD9
  2146                           status	equ	0xFD8
  2147                           
  2148 ;; *************** function _multi_write *****************
  2149 ;; Defined at:
  2150 ;;		line 59 in file "raw_io.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  j               2   11[COMRAM] int 
  2155 ;;  i               2    8[COMRAM] int 
  2156 ;;  buff            1   13[COMRAM] unsigned char 
  2157 ;;  data            1   10[COMRAM] unsigned char 
  2158 ;;  d               1    0        unsigned char 
  2159 ;;  c               1    0        unsigned char 
  2160 ;;  b               1    0        unsigned char 
  2161 ;;  a               1    0        unsigned char 
  2162 ;;  start_add       1    0        unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  2   10[COMRAM] int 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2172 ;;      Params:         0       0       0       0       0       0       0       0       0
  2173 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2175 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2176 ;;Total ram usage:        6 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    4
  2179 ;; This function calls:
  2180 ;;		_Command
  2181 ;;		_Delay_s
  2182 ;;		_WriteSPI_
  2183 ;;		_dummy_clocks
  2184 ;;		_proceed
  2185 ;;		_putsUART_
  2186 ;;		_response
  2187 ;; This function is called by:
  2188 ;;		_File_IO
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text9
  2193  0075FE                     __ptext9:
  2194                           	opt stack 0
  2195  0075FE                     _multi_write:
  2196                           	opt stack 24
  2197                           
  2198                           ;raw_io.c: 61: unsigned char start_add,a,b,c,d,data = 0X41,buff;
  2199                           
  2200                           ;incstack = 0
  2201  0075FE  0E41               	movlw	65
  2202  007600  6E0B               	movwf	multi_write@data,c
  2203                           
  2204                           ;raw_io.c: 62: int i=0,j;
  2205  007602  0E00               	movlw	0
  2206  007604  6E0A               	movwf	multi_write@i+1,c
  2207  007606  0E00               	movlw	0
  2208  007608  6E09               	movwf	multi_write@i,c
  2209                           
  2210                           ;raw_io.c: 64: dummy_clocks(8);
  2211  00760A  0E00               	movlw	0
  2212  00760C  6E05               	movwf	dummy_clocks@n+1,c
  2213  00760E  0E08               	movlw	8
  2214  007610  6E04               	movwf	dummy_clocks@n,c
  2215  007612  EC49  F039         	call	_dummy_clocks	;wreg free
  2216                           
  2217                           ;raw_io.c: 66: Command(0X59, 0X00000A00, 0X00);
  2218  007616  0E00               	movlw	0
  2219  007618  6E03               	movwf	Command@arg,c
  2220  00761A  0E0A               	movlw	10
  2221  00761C  6E04               	movwf	Command@arg+1,c
  2222  00761E  0E00               	movlw	0
  2223  007620  6E05               	movwf	Command@arg+2,c
  2224  007622  0E00               	movlw	0
  2225  007624  6E06               	movwf	Command@arg+3,c
  2226  007626  0E00               	movlw	0
  2227  007628  6E07               	movwf	Command@CRCbits,c
  2228  00762A  0E59               	movlw	89
  2229  00762C  EC15  F039         	call	_Command
  2230                           
  2231                           ;raw_io.c: 67: proceed();
  2232  007630  EC5C  F038         	call	_proceed	;wreg free
  2233  007634                     l1302:
  2234                           
  2235                           ;raw_io.c: 69: buff = response();
  2236  007634  EC62  F038         	call	_response	;wreg free
  2237  007638  6E0E               	movwf	multi_write@buff,c
  2238                           
  2239                           ;raw_io.c: 70: }while(buff!=0x00);
  2240  00763A  660E               	tstfsz	multi_write@buff,c
  2241  00763C  D7FB               	goto	l1302
  2242                           
  2243                           ;raw_io.c: 72: putsUART_("CMD25 Accepted\n\r");
  2244  00763E  0E7C               	movlw	high STR_6
  2245  007640  6E06               	movwf	putsUART_@data+1,c
  2246  007642  0E97               	movlw	low STR_6
  2247  007644  6E05               	movwf	putsUART_@data,c
  2248  007646  EC01  F039         	call	_putsUART_	;wreg free
  2249                           
  2250                           ;raw_io.c: 73: Delay_s(2);
  2251  00764A  0E02               	movlw	2
  2252  00764C  ECED  F038         	call	_Delay_s
  2253                           
  2254                           ;raw_io.c: 75: dummy_clocks(8);
  2255  007650  0E00               	movlw	0
  2256  007652  6E05               	movwf	dummy_clocks@n+1,c
  2257  007654  0E08               	movlw	8
  2258  007656  6E04               	movwf	dummy_clocks@n,c
  2259  007658  EC49  F039         	call	_dummy_clocks	;wreg free
  2260                           
  2261                           ;raw_io.c: 76: while(i!=4)
  2262  00765C  D02F               	goto	l1340
  2263  00765E                     l1312:
  2264                           
  2265                           ;raw_io.c: 77: {
  2266                           ;raw_io.c: 78: WriteSPI_(0XFC);
  2267  00765E  0EFC               	movlw	252
  2268  007660  EC9D  F038         	call	_WriteSPI_
  2269                           
  2270                           ;raw_io.c: 79: data++;
  2271  007664  2A0B               	incf	multi_write@data,f,c
  2272                           
  2273                           ;raw_io.c: 80: i++;
  2274  007666  4A09               	infsnz	multi_write@i,f,c
  2275  007668  2A0A               	incf	multi_write@i+1,f,c
  2276                           
  2277                           ;raw_io.c: 81: for(j=0;j<1024;j++)
  2278  00766A  0E00               	movlw	0
  2279  00766C  6E0D               	movwf	multi_write@j+1,c
  2280  00766E  0E00               	movlw	0
  2281  007670  6E0C               	movwf	multi_write@j,c
  2282  007672  500D               	movf	multi_write@j+1,w,c
  2283  007674  0A80               	xorlw	128
  2284  007676  0F7C               	addlw	-132
  2285  007678  0E00               	movlw	0
  2286  00767A  B4D8               	btfsc	status,2,c
  2287  00767C  5C0C               	subwf	multi_write@j,w,c
  2288  00767E  B0D8               	btfsc	status,0,c
  2289  007680  D008               	goto	l1332
  2290                           
  2291                           ;raw_io.c: 82: {
  2292                           ;raw_io.c: 83: WriteSPI_(data);
  2293  007682  500B               	movf	multi_write@data,w,c
  2294  007684  EC9D  F038         	call	_WriteSPI_
  2295                           
  2296                           ;raw_io.c: 84: j++;
  2297  007688  4A0C               	infsnz	multi_write@j,f,c
  2298  00768A  2A0D               	incf	multi_write@j+1,f,c
  2299  00768C  4A0C               	infsnz	multi_write@j,f,c
  2300  00768E  2A0D               	incf	multi_write@j+1,f,c
  2301  007690  D7F0               	goto	L2
  2302  007692                     l1332:
  2303                           
  2304                           ;raw_io.c: 85: }
  2305                           ;raw_io.c: 86: WriteSPI_(0XFF);
  2306  007692  0EFF               	movlw	255
  2307  007694  EC9D  F038         	call	_WriteSPI_
  2308                           
  2309                           ;raw_io.c: 87: WriteSPI_(0XFF);
  2310  007698  0EFF               	movlw	255
  2311  00769A  EC9D  F038         	call	_WriteSPI_
  2312                           
  2313                           ;raw_io.c: 88: dummy_clocks(1);
  2314  00769E  0E00               	movlw	0
  2315  0076A0  6E05               	movwf	dummy_clocks@n+1,c
  2316  0076A2  0E01               	movlw	1
  2317  0076A4  6E04               	movwf	dummy_clocks@n,c
  2318  0076A6  EC49  F039         	call	_dummy_clocks	;wreg free
  2319                           
  2320                           ;raw_io.c: 89: Delay_s(1);
  2321  0076AA  0E01               	movlw	1
  2322  0076AC  ECED  F038         	call	_Delay_s
  2323                           
  2324                           ;raw_io.c: 90: dummy_clocks(8);
  2325  0076B0  0E00               	movlw	0
  2326  0076B2  6E05               	movwf	dummy_clocks@n+1,c
  2327  0076B4  0E08               	movlw	8
  2328  0076B6  6E04               	movwf	dummy_clocks@n,c
  2329  0076B8  EC49  F039         	call	_dummy_clocks	;wreg free
  2330  0076BC                     l1340:
  2331  0076BC  5009               	movf	multi_write@i,w,c
  2332  0076BE  0A04               	xorlw	4
  2333  0076C0  100A               	iorwf	multi_write@i+1,w,c
  2334  0076C2  A4D8               	btfss	status,2,c
  2335  0076C4  D7CC               	goto	l1312
  2336                           
  2337                           ;raw_io.c: 91: }
  2338                           ;raw_io.c: 94: WriteSPI_(0XFD);
  2339  0076C6  0EFD               	movlw	253
  2340  0076C8  EC9D  F038         	call	_WriteSPI_
  2341                           
  2342                           ;raw_io.c: 95: dummy_clocks(1);
  2343  0076CC  0E00               	movlw	0
  2344  0076CE  6E05               	movwf	dummy_clocks@n+1,c
  2345  0076D0  0E01               	movlw	1
  2346  0076D2  6E04               	movwf	dummy_clocks@n,c
  2347  0076D4  EC49  F039         	call	_dummy_clocks	;wreg free
  2348                           
  2349                           ;raw_io.c: 96: Delay_s(1);
  2350  0076D8  0E01               	movlw	1
  2351  0076DA  ECED  F038         	call	_Delay_s
  2352                           
  2353                           ;raw_io.c: 97: dummy_clocks(8);
  2354  0076DE  0E00               	movlw	0
  2355  0076E0  6E05               	movwf	dummy_clocks@n+1,c
  2356  0076E2  0E08               	movlw	8
  2357  0076E4  6E04               	movwf	dummy_clocks@n,c
  2358  0076E6  EC49  F039         	call	_dummy_clocks	;wreg free
  2359                           
  2360                           ;raw_io.c: 99: Command(0X4D,0X00000000,0X00);
  2361  0076EA  0E00               	movlw	0
  2362  0076EC  6E03               	movwf	Command@arg,c
  2363  0076EE  0E00               	movlw	0
  2364  0076F0  6E04               	movwf	Command@arg+1,c
  2365  0076F2  0E00               	movlw	0
  2366  0076F4  6E05               	movwf	Command@arg+2,c
  2367  0076F6  0E00               	movlw	0
  2368  0076F8  6E06               	movwf	Command@arg+3,c
  2369  0076FA  0E00               	movlw	0
  2370  0076FC  6E07               	movwf	Command@CRCbits,c
  2371  0076FE  0E4D               	movlw	77
  2372  007700  EC15  F039         	call	_Command
  2373                           
  2374                           ;raw_io.c: 100: proceed();
  2375  007704  EC5C  F038         	call	_proceed	;wreg free
  2376  007708                     l1354:
  2377                           
  2378                           ;raw_io.c: 102: buff = response();
  2379  007708  EC62  F038         	call	_response	;wreg free
  2380  00770C  6E0E               	movwf	multi_write@buff,c
  2381                           
  2382                           ;raw_io.c: 103: }while(buff!=0x00);
  2383  00770E  660E               	tstfsz	multi_write@buff,c
  2384  007710  D7FB               	goto	l1354
  2385                           
  2386                           ;raw_io.c: 106: putsUART_("MULTI WRITE OVER\n\r");
  2387  007712  0E7C               	movlw	high STR_7
  2388  007714  6E06               	movwf	putsUART_@data+1,c
  2389  007716  0E5F               	movlw	low STR_7
  2390  007718  6E05               	movwf	putsUART_@data,c
  2391  00771A  EC01  F039         	call	_putsUART_	;wreg free
  2392                           
  2393                           ;raw_io.c: 107: Delay_s(2);
  2394  00771E  0E02               	movlw	2
  2395  007720  ECED  F038         	call	_Delay_s
  2396                           
  2397                           ;raw_io.c: 108: return;
  2398  007724  0012               	return	
  2399  007726                     __end_of_multi_write:
  2400                           	opt stack 0
  2401                           tblptru	equ	0xFF8
  2402                           postinc0	equ	0xFEE
  2403                           postdec1	equ	0xFE5
  2404                           fsr1h	equ	0xFE2
  2405                           fsr1l	equ	0xFE1
  2406                           indf2	equ	0xFDF
  2407                           fsr2h	equ	0xFDA
  2408                           fsr2l	equ	0xFD9
  2409                           status	equ	0xFD8
  2410                           
  2411 ;; *************** function _multi_read *****************
  2412 ;; Defined at:
  2413 ;;		line 111 in file "raw_io.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;		None
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  start_add       4    0        unsigned long 
  2418 ;;  length          2   12[COMRAM] int 
  2419 ;;  count           2    9[COMRAM] int 
  2420 ;;  buff            1   11[COMRAM] unsigned char 
  2421 ;;  ptr             1    8[COMRAM] unsigned char 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  2   12[COMRAM] int 
  2424 ;; Registers used:
  2425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2431 ;;      Params:         0       0       0       0       0       0       0       0       0
  2432 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2434 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2435 ;;Total ram usage:        6 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    4
  2438 ;; This function calls:
  2439 ;;		_Command
  2440 ;;		_Delay_s
  2441 ;;		_WriteUART_
  2442 ;;		_dummy_clocks
  2443 ;;		_proceed
  2444 ;;		_putsUART_
  2445 ;;		_response
  2446 ;; This function is called by:
  2447 ;;		_File_IO
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text10
  2452  007858                     __ptext10:
  2453                           	opt stack 0
  2454  007858                     _multi_read:
  2455                           	opt stack 24
  2456                           
  2457                           ;raw_io.c: 113: unsigned char ptr=0X00,buff;
  2458                           
  2459                           ;incstack = 0
  2460  007858  0E00               	movlw	0
  2461  00785A  6E09               	movwf	multi_read@ptr,c
  2462                           
  2463                           ;raw_io.c: 114: unsigned long int start_add;
  2464                           ;raw_io.c: 115: int length,count;
  2465                           ;raw_io.c: 117: Delay_s(1);
  2466  00785C  0E01               	movlw	1
  2467  00785E  ECED  F038         	call	_Delay_s
  2468                           
  2469                           ;raw_io.c: 118: dummy_clocks(8);
  2470  007862  0E00               	movlw	0
  2471  007864  6E05               	movwf	dummy_clocks@n+1,c
  2472  007866  0E08               	movlw	8
  2473  007868  6E04               	movwf	dummy_clocks@n,c
  2474  00786A  EC49  F039         	call	_dummy_clocks	;wreg free
  2475                           
  2476                           ;raw_io.c: 120: Command(0X52,0X00000A00,0X00);
  2477  00786E  0E00               	movlw	0
  2478  007870  6E03               	movwf	Command@arg,c
  2479  007872  0E0A               	movlw	10
  2480  007874  6E04               	movwf	Command@arg+1,c
  2481  007876  0E00               	movlw	0
  2482  007878  6E05               	movwf	Command@arg+2,c
  2483  00787A  0E00               	movlw	0
  2484  00787C  6E06               	movwf	Command@arg+3,c
  2485  00787E  0E00               	movlw	0
  2486  007880  6E07               	movwf	Command@CRCbits,c
  2487  007882  0E52               	movlw	82
  2488  007884  EC15  F039         	call	_Command
  2489                           
  2490                           ;raw_io.c: 121: proceed();
  2491  007888  EC5C  F038         	call	_proceed	;wreg free
  2492  00788C                     l1374:
  2493                           
  2494                           ;raw_io.c: 123: buff = response();
  2495  00788C  EC62  F038         	call	_response	;wreg free
  2496  007890  6E0C               	movwf	multi_read@buff,c
  2497                           
  2498                           ;raw_io.c: 124: }while(buff!=0x00);
  2499  007892  660C               	tstfsz	multi_read@buff,c
  2500  007894  D7FB               	goto	l1374
  2501                           
  2502                           ;raw_io.c: 130: dummy_clocks(1);
  2503  007896  0E00               	movlw	0
  2504  007898  6E05               	movwf	dummy_clocks@n+1,c
  2505  00789A  0E01               	movlw	1
  2506  00789C  6E04               	movwf	dummy_clocks@n,c
  2507  00789E  EC49  F039         	call	_dummy_clocks	;wreg free
  2508  0078A2                     l1380:
  2509                           
  2510                           ;raw_io.c: 133: buff = response();
  2511  0078A2  EC62  F038         	call	_response	;wreg free
  2512  0078A6  6E0C               	movwf	multi_read@buff,c
  2513                           
  2514                           ;raw_io.c: 134: }while(buff!=0xFE);
  2515  0078A8  500C               	movf	multi_read@buff,w,c
  2516  0078AA  0AFE               	xorlw	254
  2517  0078AC  A4D8               	btfss	status,2,c
  2518  0078AE  D7F9               	goto	l1380
  2519                           
  2520                           ;raw_io.c: 136: count = 2;
  2521  0078B0  0E00               	movlw	0
  2522  0078B2  6E0B               	movwf	multi_read@count+1,c
  2523  0078B4  0E02               	movlw	2
  2524  0078B6  6E0A               	movwf	multi_read@count,c
  2525                           
  2526                           ;raw_io.c: 137: length = 0;
  2527  0078B8  0E00               	movlw	0
  2528  0078BA  6E0E               	movwf	multi_read@length+1,c
  2529  0078BC  0E00               	movlw	0
  2530  0078BE  6E0D               	movwf	multi_read@length,c
  2531                           
  2532                           ;raw_io.c: 139: while(count){
  2533  0078C0  D031               	goto	l1404
  2534  0078C2                     l1386:
  2535                           
  2536                           ;raw_io.c: 141: {
  2537                           ;raw_io.c: 142: ctr[length] = response();
  2538  0078C2  0E00               	movlw	low _ctr
  2539  0078C4  240D               	addwf	multi_read@length,w,c
  2540  0078C6  6ED9               	movwf	fsr2l,c
  2541  0078C8  0E04               	movlw	high _ctr
  2542  0078CA  200E               	addwfc	multi_read@length+1,w,c
  2543  0078CC  6EDA               	movwf	fsr2h,c
  2544  0078CE  EC62  F038         	call	_response	;wreg free
  2545  0078D2  6EDF               	movwf	indf2,c
  2546                           
  2547                           ;raw_io.c: 143: length++;
  2548  0078D4  4A0D               	infsnz	multi_read@length,f,c
  2549  0078D6  2A0E               	incf	multi_read@length+1,f,c
  2550  0078D8                     l1390:
  2551  0078D8  500E               	movf	multi_read@length+1,w,c
  2552  0078DA  0A80               	xorlw	128
  2553  0078DC  0F7E               	addlw	-130
  2554  0078DE  0E00               	movlw	0
  2555  0078E0  B4D8               	btfsc	status,2,c
  2556  0078E2  5C0D               	subwf	multi_read@length,w,c
  2557  0078E4  A0D8               	btfss	status,0,c
  2558  0078E6  D7ED               	goto	l1386
  2559                           
  2560                           ;raw_io.c: 144: }
  2561                           ;raw_io.c: 145: count--;
  2562  0078E8  060A               	decf	multi_read@count,f,c
  2563  0078EA  A0D8               	btfss	status,0,c
  2564  0078EC  060B               	decf	multi_read@count+1,f,c
  2565                           
  2566                           ;raw_io.c: 146: length = 0;
  2567  0078EE  0E00               	movlw	0
  2568  0078F0  6E0E               	movwf	multi_read@length+1,c
  2569  0078F2  0E00               	movlw	0
  2570  0078F4  6E0D               	movwf	multi_read@length,c
  2571                           
  2572                           ;raw_io.c: 147: while ( length < 512 )
  2573  0078F6  D00B               	goto	l1400
  2574  0078F8                     l1396:
  2575                           
  2576                           ;raw_io.c: 148: {
  2577                           ;raw_io.c: 149: str[length] = response();
  2578  0078F8  0E00               	movlw	low _str
  2579  0078FA  240D               	addwf	multi_read@length,w,c
  2580  0078FC  6ED9               	movwf	fsr2l,c
  2581  0078FE  0E06               	movlw	high _str
  2582  007900  200E               	addwfc	multi_read@length+1,w,c
  2583  007902  6EDA               	movwf	fsr2h,c
  2584  007904  EC62  F038         	call	_response	;wreg free
  2585  007908  6EDF               	movwf	indf2,c
  2586                           
  2587                           ;raw_io.c: 150: length++;
  2588  00790A  4A0D               	infsnz	multi_read@length,f,c
  2589  00790C  2A0E               	incf	multi_read@length+1,f,c
  2590  00790E                     l1400:
  2591  00790E  500E               	movf	multi_read@length+1,w,c
  2592  007910  0A80               	xorlw	128
  2593  007912  0F7E               	addlw	-130
  2594  007914  0E00               	movlw	0
  2595  007916  B4D8               	btfsc	status,2,c
  2596  007918  5C0D               	subwf	multi_read@length,w,c
  2597  00791A  A0D8               	btfss	status,0,c
  2598  00791C  D7ED               	goto	l1396
  2599                           
  2600                           ;raw_io.c: 151: }
  2601                           ;raw_io.c: 152: count--;
  2602  00791E  060A               	decf	multi_read@count,f,c
  2603  007920  A0D8               	btfss	status,0,c
  2604  007922  060B               	decf	multi_read@count+1,f,c
  2605  007924                     l1404:
  2606  007924  500B               	movf	multi_read@count+1,w,c
  2607  007926  100A               	iorwf	multi_read@count,w,c
  2608  007928  A4D8               	btfss	status,2,c
  2609  00792A  D7D6               	goto	l1390
  2610                           
  2611                           ;raw_io.c: 153: }
  2612                           ;raw_io.c: 154: length = 0;
  2613  00792C  0E00               	movlw	0
  2614  00792E  6E0E               	movwf	multi_read@length+1,c
  2615  007930  0E00               	movlw	0
  2616  007932  6E0D               	movwf	multi_read@length,c
  2617                           
  2618                           ;raw_io.c: 157: Delay_s(1);
  2619  007934  0E01               	movlw	1
  2620  007936  ECED  F038         	call	_Delay_s
  2621                           
  2622                           ;raw_io.c: 158: dummy_clocks(8);
  2623  00793A  0E00               	movlw	0
  2624  00793C  6E05               	movwf	dummy_clocks@n+1,c
  2625  00793E  0E08               	movlw	8
  2626  007940  6E04               	movwf	dummy_clocks@n,c
  2627  007942  EC49  F039         	call	_dummy_clocks	;wreg free
  2628                           
  2629                           ;raw_io.c: 160: Command(0X4C,0X00000600,0X00);
  2630  007946  0E00               	movlw	0
  2631  007948  6E03               	movwf	Command@arg,c
  2632  00794A  0E06               	movlw	6
  2633  00794C  6E04               	movwf	Command@arg+1,c
  2634  00794E  0E00               	movlw	0
  2635  007950  6E05               	movwf	Command@arg+2,c
  2636  007952  0E00               	movlw	0
  2637  007954  6E06               	movwf	Command@arg+3,c
  2638  007956  0E00               	movlw	0
  2639  007958  6E07               	movwf	Command@CRCbits,c
  2640  00795A  0E4C               	movlw	76
  2641  00795C  EC15  F039         	call	_Command
  2642                           
  2643                           ;raw_io.c: 161: proceed();
  2644  007960  EC5C  F038         	call	_proceed	;wreg free
  2645  007964                     l1416:
  2646                           
  2647                           ;raw_io.c: 163: buff = response();
  2648  007964  EC62  F038         	call	_response	;wreg free
  2649  007968  6E0C               	movwf	multi_read@buff,c
  2650                           
  2651                           ;raw_io.c: 164: }while(buff!=0xFF);
  2652  00796A  280C               	incf	multi_read@buff,w,c
  2653  00796C  B4D8               	btfsc	status,2,c
  2654  00796E  D00C               	goto	l1424
  2655  007970  D7F9               	goto	l1416
  2656  007972                     l1420:
  2657                           
  2658                           ;raw_io.c: 167: {
  2659                           ;raw_io.c: 168: WriteUART_(ctr[length]);
  2660  007972  0E00               	movlw	low _ctr
  2661  007974  240D               	addwf	multi_read@length,w,c
  2662  007976  6ED9               	movwf	fsr2l,c
  2663  007978  0E04               	movlw	high _ctr
  2664  00797A  200E               	addwfc	multi_read@length+1,w,c
  2665  00797C  6EDA               	movwf	fsr2h,c
  2666  00797E  50DF               	movf	indf2,w,c
  2667  007980  EC2C  F039         	call	_WriteUART_
  2668                           
  2669                           ;raw_io.c: 169: length++;
  2670  007984  4A0D               	infsnz	multi_read@length,f,c
  2671  007986  2A0E               	incf	multi_read@length+1,f,c
  2672  007988                     l1424:
  2673  007988  500E               	movf	multi_read@length+1,w,c
  2674  00798A  0A80               	xorlw	128
  2675  00798C  0F7E               	addlw	-130
  2676  00798E  0E00               	movlw	0
  2677  007990  B4D8               	btfsc	status,2,c
  2678  007992  5C0D               	subwf	multi_read@length,w,c
  2679  007994  A0D8               	btfss	status,0,c
  2680  007996  D7ED               	goto	l1420
  2681                           
  2682                           ;raw_io.c: 170: }
  2683                           ;raw_io.c: 172: Delay_s(1);
  2684  007998  0E01               	movlw	1
  2685  00799A  ECED  F038         	call	_Delay_s
  2686                           
  2687                           ;raw_io.c: 173: putsUART_("\r\n");
  2688  00799E  0E7C               	movlw	high STR_8
  2689  0079A0  6E06               	movwf	putsUART_@data+1,c
  2690  0079A2  0EFC               	movlw	low STR_8
  2691  0079A4  6E05               	movwf	putsUART_@data,c
  2692  0079A6  EC01  F039         	call	_putsUART_	;wreg free
  2693                           
  2694                           ;raw_io.c: 174: length = 0;
  2695  0079AA  0E00               	movlw	0
  2696  0079AC  6E0E               	movwf	multi_read@length+1,c
  2697  0079AE  0E00               	movlw	0
  2698  0079B0  6E0D               	movwf	multi_read@length,c
  2699                           
  2700                           ;raw_io.c: 176: while(length < 512)
  2701  0079B2  D00B               	goto	l1436
  2702  0079B4                     l1432:
  2703                           
  2704                           ;raw_io.c: 177: {
  2705                           ;raw_io.c: 178: WriteUART_(str[length]);
  2706  0079B4  0E00               	movlw	low _str
  2707  0079B6  240D               	addwf	multi_read@length,w,c
  2708  0079B8  6ED9               	movwf	fsr2l,c
  2709  0079BA  0E06               	movlw	high _str
  2710  0079BC  200E               	addwfc	multi_read@length+1,w,c
  2711  0079BE  6EDA               	movwf	fsr2h,c
  2712  0079C0  50DF               	movf	indf2,w,c
  2713  0079C2  EC2C  F039         	call	_WriteUART_
  2714                           
  2715                           ;raw_io.c: 179: length++;
  2716  0079C6  4A0D               	infsnz	multi_read@length,f,c
  2717  0079C8  2A0E               	incf	multi_read@length+1,f,c
  2718  0079CA                     l1436:
  2719  0079CA  500E               	movf	multi_read@length+1,w,c
  2720  0079CC  0A80               	xorlw	128
  2721  0079CE  0F7E               	addlw	-130
  2722  0079D0  0E00               	movlw	0
  2723  0079D2  B4D8               	btfsc	status,2,c
  2724  0079D4  5C0D               	subwf	multi_read@length,w,c
  2725  0079D6  A0D8               	btfss	status,0,c
  2726  0079D8  D7ED               	goto	l1432
  2727                           
  2728                           ;raw_io.c: 180: }
  2729                           ;raw_io.c: 182: Delay_s(1);
  2730  0079DA  0E01               	movlw	1
  2731  0079DC  ECED  F038         	call	_Delay_s
  2732                           
  2733                           ;raw_io.c: 183: putsUART_("\r\n\r\nMulti Read Over\n\r");
  2734  0079E0  0E7C               	movlw	high STR_9
  2735  0079E2  6E06               	movwf	putsUART_@data+1,c
  2736  0079E4  0E34               	movlw	low STR_9
  2737  0079E6  6E05               	movwf	putsUART_@data,c
  2738  0079E8  EC01  F039         	call	_putsUART_	;wreg free
  2739  0079EC  0012               	return	
  2740  0079EE                     __end_of_multi_read:
  2741                           	opt stack 0
  2742                           tblptru	equ	0xFF8
  2743                           postinc0	equ	0xFEE
  2744                           postdec1	equ	0xFE5
  2745                           fsr1h	equ	0xFE2
  2746                           fsr1l	equ	0xFE1
  2747                           indf2	equ	0xFDF
  2748                           fsr2h	equ	0xFDA
  2749                           fsr2l	equ	0xFD9
  2750                           status	equ	0xFD8
  2751                           
  2752 ;; *************** function _response *****************
  2753 ;; Defined at:
  2754 ;;		line 57 in file "transceiver.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;		None
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  buff            1    1[COMRAM] unsigned char 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      unsigned char 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2768 ;;      Params:         0       0       0       0       0       0       0       0       0
  2769 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2771 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2772 ;;Total ram usage:        1 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    1
  2775 ;; This function calls:
  2776 ;;		_ReadSPI__
  2777 ;; This function is called by:
  2778 ;;		_write_block
  2779 ;;		_multi_write
  2780 ;;		_multi_read
  2781 ;;		_read_block
  2782 ;;		_reset
  2783 ;;		_init
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text11
  2788  0070C4                     __ptext11:
  2789                           	opt stack 0
  2790  0070C4                     _response:
  2791                           	opt stack 27
  2792                           
  2793                           ;transceiver.c: 59: unsigned char buff;
  2794                           ;transceiver.c: 60: LATB4 = 0;
  2795                           
  2796                           ;incstack = 0
  2797  0070C4  988A               	bcf	3978,4,c	;volatile
  2798                           
  2799                           ;transceiver.c: 61: buff=ReadSPI__();
  2800  0070C6  EC81  F038         	call	_ReadSPI__	;wreg free
  2801  0070CA  6E02               	movwf	response@buff,c
  2802                           
  2803                           ;transceiver.c: 62: LATB4 = 1;
  2804  0070CC  888A               	bsf	3978,4,c	;volatile
  2805                           
  2806                           ;transceiver.c: 63: return buff;
  2807  0070CE  5002               	movf	response@buff,w,c
  2808  0070D0  0012               	return	
  2809  0070D2                     __end_of_response:
  2810                           	opt stack 0
  2811                           tblptru	equ	0xFF8
  2812                           postinc0	equ	0xFEE
  2813                           postdec1	equ	0xFE5
  2814                           fsr1h	equ	0xFE2
  2815                           fsr1l	equ	0xFE1
  2816                           indf2	equ	0xFDF
  2817                           fsr2h	equ	0xFDA
  2818                           fsr2l	equ	0xFD9
  2819                           status	equ	0xFD8
  2820                           
  2821 ;; *************** function _ReadSPI__ *****************
  2822 ;; Defined at:
  2823 ;;		line 13 in file "transceiver.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  TempVar         1    0[COMRAM] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      unsigned char 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2837 ;;      Params:         0       0       0       0       0       0       0       0       0
  2838 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2840 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2841 ;;Total ram usage:        1 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_response
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text12
  2851  007102                     __ptext12:
  2852                           	opt stack 0
  2853  007102                     _ReadSPI__:
  2854                           	opt stack 27
  2855                           
  2856                           ;transceiver.c: 15: unsigned char TempVar;
  2857                           ;transceiver.c: 16: TempVar = SSPBUF;
  2858                           
  2859                           ;incstack = 0
  2860  007102  CFC9 F001          	movff	4041,ReadSPI__@TempVar	;volatile
  2861                           
  2862                           ;transceiver.c: 17: PIR1bits.SSPIF = 0;
  2863  007106  969E               	bcf	3998,3,c	;volatile
  2864                           
  2865                           ;transceiver.c: 18: SSPBUF = 0xFF;
  2866  007108  68C9               	setf	4041,c	;volatile
  2867  00710A                     l296:
  2868  00710A  A69E               	btfss	3998,3,c	;volatile
  2869  00710C  D7FE               	goto	l296
  2870                           
  2871                           ;transceiver.c: 21: return ( SSPBUF );
  2872  00710E  50C9               	movf	4041,w,c	;volatile
  2873  007110  0012               	return	
  2874  007112                     __end_of_ReadSPI__:
  2875                           	opt stack 0
  2876                           tblptru	equ	0xFF8
  2877                           postinc0	equ	0xFEE
  2878                           postdec1	equ	0xFE5
  2879                           fsr1h	equ	0xFE2
  2880                           fsr1l	equ	0xFE1
  2881                           indf2	equ	0xFDF
  2882                           fsr2h	equ	0xFDA
  2883                           fsr2l	equ	0xFD9
  2884                           status	equ	0xFD8
  2885                           
  2886 ;; *************** function _putsUART_ *****************
  2887 ;; Defined at:
  2888 ;;		line 71 in file "my_sw_uart.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  data            2    4[COMRAM] PTR unsigned char 
  2891 ;;		 -> STR_15(16), STR_14(11), STR_13(10), STR_12(3), 
  2892 ;;		 -> STR_11(21), STR_10(18), STR_9(22), STR_8(3), 
  2893 ;;		 -> STR_7(19), STR_6(17), STR_5(17), STR_4(15), 
  2894 ;;		 -> STR_3(15), STR_2(19), STR_1(101), 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;		None               void
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2906 ;;      Params:         2       0       0       0       0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2909 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2910 ;;Total ram usage:        2 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    3
  2913 ;; This function calls:
  2914 ;;		_WriteUART_
  2915 ;; This function is called by:
  2916 ;;		_File_IO
  2917 ;;		_main
  2918 ;;		_write_block
  2919 ;;		_multi_write
  2920 ;;		_multi_read
  2921 ;;		_read_block
  2922 ;;		_reset
  2923 ;;		_init
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text13
  2928  007202                     __ptext13:
  2929                           	opt stack 0
  2930  007202                     _putsUART_:
  2931                           	opt stack 26
  2932  007202                     l109:
  2933                           
  2934                           ;my_sw_uart.c: 74: {
  2935                           ;my_sw_uart.c: 75: WriteUART_(*data);
  2936  007202  C005  FFF6         	movff	putsUART_@data,tblptrl
  2937  007206  C006  FFF7         	movff	putsUART_@data+1,tblptrh
  2938  00720A                     	if	0	;tblptru may be non-zero
  2939  00720A                     	endif
  2940  00720A                     	if	0	;tblptru may be non-zero
  2941  00720A                     	endif
  2942  00720A  0008               	tblrd		*
  2943  00720C  50F5               	movf	tablat,w,c
  2944  00720E  EC2C  F039         	call	_WriteUART_
  2945                           
  2946                           ;my_sw_uart.c: 76: } while( *data++ );
  2947  007212  C005  FFF6         	movff	putsUART_@data,tblptrl
  2948  007216  C006  FFF7         	movff	putsUART_@data+1,tblptrh
  2949  00721A  4A05               	infsnz	putsUART_@data,f,c
  2950  00721C  2A06               	incf	putsUART_@data+1,f,c
  2951  00721E                     	if	0	;tblptru may be non-zero
  2952  00721E                     	endif
  2953  00721E                     	if	0	;tblptru may be non-zero
  2954  00721E                     	endif
  2955  00721E  0008               	tblrd		*
  2956  007220  50F5               	movf	tablat,w,c
  2957  007222  0900               	iorlw	0
  2958  007224  B4D8               	btfsc	status,2,c
  2959  007226  0012               	return	
  2960  007228  D7EC               	goto	l109
  2961  00722A                     __end_of_putsUART_:
  2962                           	opt stack 0
  2963                           tblptru	equ	0xFF8
  2964                           tblptrh	equ	0xFF7
  2965                           tblptrl	equ	0xFF6
  2966                           tablat	equ	0xFF5
  2967                           postinc0	equ	0xFEE
  2968                           postdec1	equ	0xFE5
  2969                           fsr1h	equ	0xFE2
  2970                           fsr1l	equ	0xFE1
  2971                           indf2	equ	0xFDF
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           status	equ	0xFD8
  2975                           
  2976 ;; *************** function _WriteUART_ *****************
  2977 ;; Defined at:
  2978 ;;		line 51 in file "my_sw_uart.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  uartdata        1    wreg     unsigned char 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  uartdata        1    2[COMRAM] unsigned char 
  2983 ;;  bitcount        1    3[COMRAM] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;		None               void
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, status,0, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2993 ;;      Params:         0       0       0       0       0       0       0       0       0
  2994 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2995 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2996 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2997 ;;Total ram usage:        3 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    2
  3000 ;; This function calls:
  3001 ;;		_DelayTXBitUART_
  3002 ;; This function is called by:
  3003 ;;		_putsUART_
  3004 ;;		_multi_read
  3005 ;;		_read_block
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text14
  3010  007258                     __ptext14:
  3011                           	opt stack 0
  3012  007258                     _WriteUART_:
  3013                           	opt stack 26
  3014                           
  3015                           ;incstack = 0
  3016                           ;WriteUART_@uartdata stored from wreg
  3017  007258  6E03               	movwf	WriteUART_@uartdata,c
  3018                           
  3019                           ;my_sw_uart.c: 53: unsigned char bitcount = 8;
  3020  00725A  0E08               	movlw	8
  3021  00725C  6E04               	movwf	WriteUART_@bitcount,c
  3022                           
  3023                           ;my_sw_uart.c: 56: PORTDbits.RD4 = 0;
  3024  00725E  9883               	bcf	3971,4,c	;volatile
  3025                           
  3026                           ;my_sw_uart.c: 57: DelayTXBitUART_();
  3027  007260  ECC2  F038         	call	_DelayTXBitUART_	;wreg free
  3028                           
  3029                           ;my_sw_uart.c: 59: while (bitcount--){
  3030  007264  D00E               	goto	l1044
  3031  007266                     l1038:
  3032                           
  3033                           ;my_sw_uart.c: 61: PORTDbits.RD4 = (uartdata&0x01);
  3034  007266  C003  F002         	movff	WriteUART_@uartdata,??_WriteUART_
  3035  00726A  0E01               	movlw	1
  3036  00726C  1602               	andwf	??_WriteUART_,f,c
  3037  00726E  3A02               	swapf	??_WriteUART_,f,c
  3038  007270  5083               	movf	3971,w,c	;volatile
  3039  007272  1802               	xorwf	??_WriteUART_,w,c
  3040  007274  0BEF               	andlw	-17
  3041  007276  1802               	xorwf	??_WriteUART_,w,c
  3042  007278  6E83               	movwf	3971,c	;volatile
  3043                           
  3044                           ;my_sw_uart.c: 62: DelayTXBitUART_();
  3045  00727A  ECC2  F038         	call	_DelayTXBitUART_	;wreg free
  3046                           
  3047                           ;my_sw_uart.c: 63: uartdata >>= 1;
  3048  00727E  90D8               	bcf	status,0,c
  3049  007280  3203               	rrcf	WriteUART_@uartdata,f,c
  3050  007282                     l1044:
  3051  007282  0604               	decf	WriteUART_@bitcount,f,c
  3052  007284  2804               	incf	WriteUART_@bitcount& (0+255),w,c
  3053  007286  A4D8               	btfss	status,2,c
  3054  007288  D7EE               	goto	l1038
  3055                           
  3056                           ;my_sw_uart.c: 64: }
  3057                           ;my_sw_uart.c: 67: PORTDbits.RD4 = 1;
  3058  00728A  8883               	bsf	3971,4,c	;volatile
  3059                           
  3060                           ;my_sw_uart.c: 68: DelayTXBitUART_();
  3061  00728C  ECC2  F038         	call	_DelayTXBitUART_	;wreg free
  3062  007290  0012               	return	
  3063  007292                     __end_of_WriteUART_:
  3064                           	opt stack 0
  3065                           tblptru	equ	0xFF8
  3066                           tblptrh	equ	0xFF7
  3067                           tblptrl	equ	0xFF6
  3068                           tablat	equ	0xFF5
  3069                           postinc0	equ	0xFEE
  3070                           postdec1	equ	0xFE5
  3071                           fsr1h	equ	0xFE2
  3072                           fsr1l	equ	0xFE1
  3073                           indf2	equ	0xFDF
  3074                           fsr2h	equ	0xFDA
  3075                           fsr2l	equ	0xFD9
  3076                           status	equ	0xFD8
  3077                           
  3078 ;; *************** function _DelayTXBitUART_ *****************
  3079 ;; Defined at:
  3080 ;;		line 29 in file "my_sw_uart.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;		None               void
  3087 ;; Registers used:
  3088 ;;		wreg, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3094 ;;      Params:         0       0       0       0       0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3097 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3098 ;;Total ram usage:        0 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    1
  3101 ;; This function calls:
  3102 ;;		_Delay100TCYx
  3103 ;; This function is called by:
  3104 ;;		_WriteUART_
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text15
  3109  007184                     __ptext15:
  3110                           	opt stack 0
  3111  007184                     _DelayTXBitUART_:
  3112                           	opt stack 26
  3113                           
  3114                           ;my_sw_uart.c: 31: Delay100TCYx( 5 );
  3115                           
  3116                           ;incstack = 0
  3117  007184  0E05               	movlw	5
  3118  007186  EC69  F038         	call	_Delay100TCYx
  3119                           
  3120                           ;my_sw_uart.c: 33: _delay(1); _delay(1); _delay(1); _delay(1); _delay(1);
  3121  00718A  F000               	nop	
  3122  00718C  F000               	nop	
  3123  00718E  F000               	nop	
  3124  007190  F000               	nop	
  3125  007192  F000               	nop	
  3126                           
  3127                           ;my_sw_uart.c: 34: _delay(1); _delay(1); _delay(1); _delay(1);
  3128  007194  F000               	nop	
  3129  007196  F000               	nop	
  3130  007198  F000               	nop	
  3131  00719A  F000               	nop	
  3132  00719C  0012               	return	
  3133  00719E                     __end_of_DelayTXBitUART_:
  3134                           	opt stack 0
  3135                           tblptru	equ	0xFF8
  3136                           tblptrh	equ	0xFF7
  3137                           tblptrl	equ	0xFF6
  3138                           tablat	equ	0xFF5
  3139                           postinc0	equ	0xFEE
  3140                           postdec1	equ	0xFE5
  3141                           fsr1h	equ	0xFE2
  3142                           fsr1l	equ	0xFE1
  3143                           indf2	equ	0xFDF
  3144                           fsr2h	equ	0xFDA
  3145                           fsr2l	equ	0xFD9
  3146                           status	equ	0xFD8
  3147                           
  3148 ;; *************** function _proceed *****************
  3149 ;; Defined at:
  3150 ;;		line 25 in file "clocks.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;		None               void
  3157 ;; Registers used:
  3158 ;;		wreg, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3164 ;;      Params:         2       0       0       0       0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3167 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3168 ;;Total ram usage:        2 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    1
  3171 ;; This function calls:
  3172 ;;		_WriteSPI
  3173 ;; This function is called by:
  3174 ;;		_write_block
  3175 ;;		_multi_write
  3176 ;;		_multi_read
  3177 ;;		_read_block
  3178 ;;		_reset
  3179 ;;		_init
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text16
  3184  0070B8                     __ptext16:
  3185                           	opt stack 0
  3186  0070B8                     _proceed:
  3187                           	opt stack 26
  3188                           
  3189                           ;clocks.c: 27: LATB4 = 0;
  3190                           
  3191                           ;incstack = 0
  3192  0070B8  988A               	bcf	3978,4,c	;volatile
  3193                           
  3194                           ;clocks.c: 28: WriteSPI(0XFF);
  3195  0070BA  0EFF               	movlw	255
  3196  0070BC  ECA9  F038         	call	_WriteSPI
  3197                           
  3198                           ;clocks.c: 29: LATB4 = 1;
  3199  0070C0  888A               	bsf	3978,4,c	;volatile
  3200  0070C2  0012               	return	
  3201  0070C4                     __end_of_proceed:
  3202                           	opt stack 0
  3203                           tblptru	equ	0xFF8
  3204                           tblptrh	equ	0xFF7
  3205                           tblptrl	equ	0xFF6
  3206                           tablat	equ	0xFF5
  3207                           postinc0	equ	0xFEE
  3208                           postdec1	equ	0xFE5
  3209                           fsr1h	equ	0xFE2
  3210                           fsr1l	equ	0xFE1
  3211                           indf2	equ	0xFDF
  3212                           fsr2h	equ	0xFDA
  3213                           fsr2l	equ	0xFD9
  3214                           status	equ	0xFD8
  3215                           
  3216 ;; *************** function _dummy_clocks *****************
  3217 ;; Defined at:
  3218 ;;		line 13 in file "clocks.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  n               2    3[COMRAM] int 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  i               2    6[COMRAM] int 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;		None               void
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3232 ;;      Params:         2       0       0       0       0       0       0       0       0
  3233 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3234 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3235 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3236 ;;Total ram usage:        5 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    2
  3239 ;; This function calls:
  3240 ;;		_WriteSPI
  3241 ;;		_delay_ms
  3242 ;; This function is called by:
  3243 ;;		_write_block
  3244 ;;		_multi_write
  3245 ;;		_multi_read
  3246 ;;		_read_block
  3247 ;;		_reset
  3248 ;;		_init
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text17
  3253  007292                     __ptext17:
  3254                           	opt stack 0
  3255  007292                     _dummy_clocks:
  3256                           	opt stack 25
  3257                           
  3258                           ;clocks.c: 15: int i = 0;
  3259                           
  3260                           ;incstack = 0
  3261  007292  0E00               	movlw	0
  3262  007294  6E08               	movwf	dummy_clocks@i+1,c
  3263  007296  0E00               	movlw	0
  3264  007298  6E07               	movwf	dummy_clocks@i,c
  3265                           
  3266                           ;clocks.c: 16: delay_ms(1);
  3267  00729A  0E01               	movlw	1
  3268  00729C  ECB5  F038         	call	_delay_ms
  3269                           
  3270                           ;clocks.c: 17: for(i=0;i<n;i++)
  3271  0072A0  0E00               	movlw	0
  3272  0072A2  6E08               	movwf	dummy_clocks@i+1,c
  3273  0072A4  0E00               	movlw	0
  3274  0072A6  6E07               	movwf	dummy_clocks@i,c
  3275  0072A8  D007               	goto	l1130
  3276  0072AA                     l323:
  3277                           
  3278                           ;clocks.c: 18: {
  3279                           ;clocks.c: 19: LATB4 = 1;
  3280  0072AA  888A               	bsf	3978,4,c	;volatile
  3281                           
  3282                           ;clocks.c: 20: WriteSPI(0XFF);
  3283  0072AC  0EFF               	movlw	255
  3284  0072AE  ECA9  F038         	call	_WriteSPI
  3285                           
  3286                           ;clocks.c: 21: LATB4 = 0;
  3287  0072B2  988A               	bcf	3978,4,c	;volatile
  3288  0072B4  4A07               	infsnz	dummy_clocks@i,f,c
  3289  0072B6  2A08               	incf	dummy_clocks@i+1,f,c
  3290  0072B8                     l1130:
  3291  0072B8  5008               	movf	dummy_clocks@i+1,w,c
  3292  0072BA  0A80               	xorlw	128
  3293  0072BC  6E06               	movwf	??_dummy_clocks& (0+255),c
  3294  0072BE  5004               	movf	dummy_clocks@n,w,c
  3295  0072C0  5C07               	subwf	dummy_clocks@i,w,c
  3296  0072C2  5005               	movf	dummy_clocks@n+1,w,c
  3297  0072C4  0A80               	xorlw	128
  3298  0072C6  5806               	subwfb	??_dummy_clocks& (0+255),w,c
  3299  0072C8  B0D8               	btfsc	status,0,c
  3300  0072CA  0012               	return	
  3301  0072CC  D7EE               	goto	l323
  3302  0072CE                     __end_of_dummy_clocks:
  3303                           	opt stack 0
  3304                           tblptru	equ	0xFF8
  3305                           tblptrh	equ	0xFF7
  3306                           tblptrl	equ	0xFF6
  3307                           tablat	equ	0xFF5
  3308                           postinc0	equ	0xFEE
  3309                           postdec1	equ	0xFE5
  3310                           fsr1h	equ	0xFE2
  3311                           fsr1l	equ	0xFE1
  3312                           indf2	equ	0xFDF
  3313                           fsr2h	equ	0xFDA
  3314                           fsr2l	equ	0xFD9
  3315                           status	equ	0xFD8
  3316                           
  3317 ;; *************** function _WriteSPI *****************
  3318 ;; Defined at:
  3319 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi_writ.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  data_out        1    wreg     unsigned char 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;  data_out        1    1[COMRAM] unsigned char 
  3324 ;;  TempVar         1    0[COMRAM] unsigned char 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      char 
  3327 ;; Registers used:
  3328 ;;		wreg
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3334 ;;      Params:         0       0       0       0       0       0       0       0       0
  3335 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3337 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3338 ;;Total ram usage:        2 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_dummy_clocks
  3344 ;;		_proceed
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text18
  3349  007152                     __ptext18:
  3350                           	opt stack 0
  3351  007152                     _WriteSPI:
  3352                           	opt stack 26
  3353                           
  3354                           ;incstack = 0
  3355                           ;WriteSPI@data_out stored from wreg
  3356  007152  6E02               	movwf	WriteSPI@data_out,c
  3357  007154  CFC9 F001          	movff	4041,WriteSPI@TempVar	;volatile
  3358  007158  969E               	bcf	3998,3,c	;volatile
  3359  00715A  9EC6               	bcf	4038,7,c	;volatile
  3360  00715C  C002  FFC9         	movff	WriteSPI@data_out,4041	;volatile
  3361  007160  BEC6               	btfsc	4038,7,c	;volatile
  3362  007162  D002               	goto	l368
  3363  007164                     l370:
  3364  007164  A69E               	btfss	3998,3,c	;volatile
  3365  007166  D7FE               	goto	l370
  3366  007168                     l368:
  3367  007168  0012               	return	
  3368  00716A                     __end_of_WriteSPI:
  3369                           	opt stack 0
  3370                           tblptru	equ	0xFF8
  3371                           tblptrh	equ	0xFF7
  3372                           tblptrl	equ	0xFF6
  3373                           tablat	equ	0xFF5
  3374                           postinc0	equ	0xFEE
  3375                           postdec1	equ	0xFE5
  3376                           fsr1h	equ	0xFE2
  3377                           fsr1l	equ	0xFE1
  3378                           indf2	equ	0xFDF
  3379                           fsr2h	equ	0xFDA
  3380                           fsr2l	equ	0xFD9
  3381                           status	equ	0xFD8
  3382                           
  3383 ;; *************** function _Delay_s *****************
  3384 ;; Defined at:
  3385 ;;		line 44 in file "delay.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  t               1    wreg     unsigned char 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  t               1    3[COMRAM] unsigned char 
  3390 ;;  j               1    5[COMRAM] unsigned char 
  3391 ;;  i               1    4[COMRAM] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;		None               void
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3401 ;;      Params:         0       0       0       0       0       0       0       0       0
  3402 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3404 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3405 ;;Total ram usage:        3 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    2
  3408 ;; This function calls:
  3409 ;;		_delay_ms
  3410 ;; This function is called by:
  3411 ;;		_write_block
  3412 ;;		_multi_write
  3413 ;;		_multi_read
  3414 ;;		_read_block
  3415 ;;		_reset
  3416 ;;		_init
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text19
  3421  0071DA                     __ptext19:
  3422                           	opt stack 0
  3423  0071DA                     _Delay_s:
  3424                           	opt stack 25
  3425                           
  3426                           ;incstack = 0
  3427                           ;Delay_s@t stored from wreg
  3428  0071DA  6E04               	movwf	Delay_s@t,c
  3429                           
  3430                           ;delay.c: 46: unsigned char i,j;
  3431                           ;delay.c: 47: for(i=0;i<t;i++)
  3432  0071DC  0E00               	movlw	0
  3433  0071DE  6E05               	movwf	Delay_s@i,c
  3434  0071E0  D00B               	goto	l1094
  3435  0071E2                     l1080:
  3436                           
  3437                           ;delay.c: 48: for(j=0;j<10;j++)
  3438  0071E2  0E00               	movlw	0
  3439  0071E4  6E06               	movwf	Delay_s@j,c
  3440  0071E6  D004               	goto	L3
  3441  0071E8                     l1086:
  3442                           
  3443                           ;delay.c: 49: delay_ms(100);
  3444  0071E8  0E64               	movlw	100
  3445  0071EA  ECB5  F038         	call	_delay_ms
  3446  0071EE  2A06               	incf	Delay_s@j,f,c
  3447  0071F0                     L3:
  3448  0071F0  0E09               	movlw	9
  3449  0071F2  6406               	cpfsgt	Delay_s@j,c
  3450  0071F4  D7F9               	goto	l1086
  3451  0071F6  2A05               	incf	Delay_s@i,f,c
  3452  0071F8                     l1094:
  3453  0071F8  5004               	movf	Delay_s@t,w,c
  3454  0071FA  5C05               	subwf	Delay_s@i,w,c
  3455  0071FC  B0D8               	btfsc	status,0,c
  3456  0071FE  0012               	return	
  3457  007200  D7F0               	goto	l1080
  3458  007202                     __end_of_Delay_s:
  3459                           	opt stack 0
  3460                           tblptru	equ	0xFF8
  3461                           tblptrh	equ	0xFF7
  3462                           tblptrl	equ	0xFF6
  3463                           tablat	equ	0xFF5
  3464                           postinc0	equ	0xFEE
  3465                           postdec1	equ	0xFE5
  3466                           fsr1h	equ	0xFE2
  3467                           fsr1l	equ	0xFE1
  3468                           indf2	equ	0xFDF
  3469                           fsr2h	equ	0xFDA
  3470                           fsr2l	equ	0xFD9
  3471                           status	equ	0xFD8
  3472                           
  3473 ;; *************** function _delay_ms *****************
  3474 ;; Defined at:
  3475 ;;		line 33 in file "delay.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  t               1    wreg     unsigned char 
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  t               1    1[COMRAM] unsigned char 
  3480 ;;  i               1    2[COMRAM] unsigned char 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;		None               void
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3490 ;;      Params:         0       0       0       0       0       0       0       0       0
  3491 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3493 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3494 ;;Total ram usage:        2 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    1
  3497 ;; This function calls:
  3498 ;;		_Delay1KTCYx
  3499 ;; This function is called by:
  3500 ;;		_Delay_s
  3501 ;;		_init
  3502 ;;		_dummy_clocks
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text20
  3507  00716A                     __ptext20:
  3508                           	opt stack 0
  3509  00716A                     _delay_ms:
  3510                           	opt stack 25
  3511                           
  3512                           ;incstack = 0
  3513                           ;delay_ms@t stored from wreg
  3514  00716A  6E02               	movwf	delay_ms@t,c
  3515                           
  3516                           ;delay.c: 35: unsigned char i;
  3517                           ;delay.c: 36: for (i=0;i<=t;i++)
  3518  00716C  0E00               	movlw	0
  3519  00716E  6E03               	movwf	delay_ms@i,c
  3520  007170  D004               	goto	l1030
  3521  007172                     l1026:
  3522                           
  3523                           ;delay.c: 37: Delay1KTCYx(5);
  3524  007172  0E05               	movlw	5
  3525  007174  EC79  F038         	call	_Delay1KTCYx
  3526  007178  2A03               	incf	delay_ms@i,f,c
  3527  00717A                     l1030:
  3528  00717A  5003               	movf	delay_ms@i,w,c
  3529  00717C  5C02               	subwf	delay_ms@t,w,c
  3530  00717E  A0D8               	btfss	status,0,c
  3531                           
  3532                           ;delay.c: 41: return;
  3533  007180  0012               	return	
  3534  007182  D7F7               	goto	l1026
  3535  007184                     __end_of_delay_ms:
  3536                           	opt stack 0
  3537                           tblptru	equ	0xFF8
  3538                           tblptrh	equ	0xFF7
  3539                           tblptrl	equ	0xFF6
  3540                           tablat	equ	0xFF5
  3541                           postinc0	equ	0xFEE
  3542                           postdec1	equ	0xFE5
  3543                           fsr1h	equ	0xFE2
  3544                           fsr1l	equ	0xFE1
  3545                           indf2	equ	0xFDF
  3546                           fsr2h	equ	0xFDA
  3547                           fsr2l	equ	0xFD9
  3548                           status	equ	0xFD8
  3549                           
  3550 ;; *************** function _Delay1KTCYx *****************
  3551 ;; Defined at:
  3552 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d1ktcyx.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  unit            1    wreg     unsigned char 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  unit            1    0[COMRAM] unsigned char 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;		None               void
  3559 ;; Registers used:
  3560 ;;		wreg
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3566 ;;      Params:         0       0       0       0       0       0       0       0       0
  3567 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3569 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3570 ;;Total ram usage:        1 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_delay_ms
  3576 ;;		_DelayPORXLCD
  3577 ;;		_DelayXLCD
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text21
  3582  0070F2                     __ptext21:
  3583                           	opt stack 0
  3584  0070F2                     _Delay1KTCYx:
  3585                           	opt stack 25
  3586                           
  3587                           ;incstack = 0
  3588                           ;Delay1KTCYx@unit stored from wreg
  3589  0070F2  6E01               	movwf	Delay1KTCYx@unit,c
  3590  0070F4                     l619:
  3591  0070F4  0EFA               	movlw	250
  3592  0070F6                     u637:
  3593  0070F6  F000               	nop	
  3594  0070F8  2EE8               	decfsz	wreg,f,c
  3595  0070FA  D7FD               	goto	u637
  3596  0070FC  2E01               	decfsz	Delay1KTCYx@unit,f,c
  3597  0070FE  D7FA               	goto	l619
  3598  007100  0012               	return	
  3599  007102                     __end_of_Delay1KTCYx:
  3600                           	opt stack 0
  3601                           tblptru	equ	0xFF8
  3602                           tblptrh	equ	0xFF7
  3603                           tblptrl	equ	0xFF6
  3604                           tablat	equ	0xFF5
  3605                           postinc0	equ	0xFEE
  3606                           wreg	equ	0xFE8
  3607                           postdec1	equ	0xFE5
  3608                           fsr1h	equ	0xFE2
  3609                           fsr1l	equ	0xFE1
  3610                           indf2	equ	0xFDF
  3611                           fsr2h	equ	0xFDA
  3612                           fsr2l	equ	0xFD9
  3613                           status	equ	0xFD8
  3614                           
  3615 ;; *************** function _Command *****************
  3616 ;; Defined at:
  3617 ;;		line 44 in file "transceiver.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  cmd             1    wreg     unsigned char 
  3620 ;;  arg             4    2[COMRAM] unsigned long 
  3621 ;;  CRCbits         1    6[COMRAM] unsigned char 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  cmd             1    7[COMRAM] unsigned char 
  3624 ;;  temp            1    0        unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;		None               void
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3634 ;;      Params:         5       0       0       0       0       0       0       0       0
  3635 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3637 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3638 ;;Total ram usage:        6 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    1
  3641 ;; This function calls:
  3642 ;;		_WriteSPI_
  3643 ;; This function is called by:
  3644 ;;		_write_block
  3645 ;;		_multi_write
  3646 ;;		_multi_read
  3647 ;;		_read_block
  3648 ;;		_reset
  3649 ;;		_init
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text22
  3654  00722A                     __ptext22:
  3655                           	opt stack 0
  3656  00722A                     _Command:
  3657                           	opt stack 26
  3658                           
  3659                           ;incstack = 0
  3660                           ;Command@cmd stored from wreg
  3661  00722A  6E08               	movwf	Command@cmd,c
  3662                           
  3663                           ;transceiver.c: 46: unsigned char temp;
  3664                           ;transceiver.c: 47: WriteSPI_(0xff);
  3665  00722C  0EFF               	movlw	255
  3666  00722E  EC9D  F038         	call	_WriteSPI_
  3667                           
  3668                           ;transceiver.c: 48: WriteSPI_(cmd);
  3669  007232  5008               	movf	Command@cmd,w,c
  3670  007234  EC9D  F038         	call	_WriteSPI_
  3671                           
  3672                           ;transceiver.c: 49: WriteSPI_((unsigned char) (arg >> 24));
  3673  007238  5006               	movf	Command@arg+3,w,c
  3674  00723A  EC9D  F038         	call	_WriteSPI_
  3675                           
  3676                           ;transceiver.c: 50: WriteSPI_((unsigned char) (arg >> 16));
  3677  00723E  5005               	movf	Command@arg+2,w,c
  3678  007240  EC9D  F038         	call	_WriteSPI_
  3679                           
  3680                           ;transceiver.c: 51: WriteSPI_((unsigned char) (arg >> 8));
  3681  007244  5004               	movf	Command@arg+1,w,c
  3682  007246  EC9D  F038         	call	_WriteSPI_
  3683                           
  3684                           ;transceiver.c: 52: WriteSPI_((unsigned char) arg);
  3685  00724A  5003               	movf	Command@arg,w,c
  3686  00724C  EC9D  F038         	call	_WriteSPI_
  3687                           
  3688                           ;transceiver.c: 53: WriteSPI_(CRCbits);
  3689  007250  5007               	movf	Command@CRCbits,w,c
  3690  007252  EC9D  F038         	call	_WriteSPI_
  3691  007256  0012               	return	
  3692  007258                     __end_of_Command:
  3693                           	opt stack 0
  3694                           tblptru	equ	0xFF8
  3695                           tblptrh	equ	0xFF7
  3696                           tblptrl	equ	0xFF6
  3697                           tablat	equ	0xFF5
  3698                           postinc0	equ	0xFEE
  3699                           wreg	equ	0xFE8
  3700                           postdec1	equ	0xFE5
  3701                           fsr1h	equ	0xFE2
  3702                           fsr1l	equ	0xFE1
  3703                           indf2	equ	0xFDF
  3704                           fsr2h	equ	0xFDA
  3705                           fsr2l	equ	0xFD9
  3706                           status	equ	0xFD8
  3707                           
  3708 ;; *************** function _WriteSPI_ *****************
  3709 ;; Defined at:
  3710 ;;		line 24 in file "transceiver.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  data_out        1    wreg     unsigned char 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  data_out        1    1[COMRAM] unsigned char 
  3715 ;;  TempVar         1    0[COMRAM] unsigned char 
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      char 
  3718 ;; Registers used:
  3719 ;;		wreg
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0
  3726 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3728 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3729 ;;Total ram usage:        2 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_write_block
  3735 ;;		_multi_write
  3736 ;;		_Command
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text23
  3741  00713A                     __ptext23:
  3742                           	opt stack 0
  3743  00713A                     _WriteSPI_:
  3744                           	opt stack 26
  3745                           
  3746                           ;incstack = 0
  3747                           ;WriteSPI_@data_out stored from wreg
  3748  00713A  6E02               	movwf	WriteSPI_@data_out,c
  3749                           
  3750                           ;transceiver.c: 26: unsigned char TempVar;
  3751                           ;transceiver.c: 29: TempVar = SSPBUF;
  3752  00713C  CFC9 F001          	movff	4041,WriteSPI_@TempVar	;volatile
  3753                           
  3754                           ;transceiver.c: 30: PIR1bits.SSPIF = 0;
  3755  007140  969E               	bcf	3998,3,c	;volatile
  3756                           
  3757                           ;transceiver.c: 31: SSPCON1bits.WCOL = 0;
  3758  007142  9EC6               	bcf	4038,7,c	;volatile
  3759                           
  3760                           ;transceiver.c: 32: SSPBUF = data_out;
  3761  007144  C002  FFC9         	movff	WriteSPI_@data_out,4041	;volatile
  3762                           
  3763                           ;transceiver.c: 33: if ( SSPCON1 & 0x80 )
  3764  007148  BEC6               	btfsc	4038,7,c	;volatile
  3765  00714A  D002               	goto	l303
  3766  00714C                     l305:
  3767  00714C  A69E               	btfss	3998,3,c	;volatile
  3768  00714E  D7FE               	goto	l305
  3769  007150                     l303:
  3770  007150  0012               	return	
  3771  007152                     __end_of_WriteSPI_:
  3772                           	opt stack 0
  3773                           tblptru	equ	0xFF8
  3774                           tblptrh	equ	0xFF7
  3775                           tblptrl	equ	0xFF6
  3776                           tablat	equ	0xFF5
  3777                           postinc0	equ	0xFEE
  3778                           wreg	equ	0xFE8
  3779                           postdec1	equ	0xFE5
  3780                           fsr1h	equ	0xFE2
  3781                           fsr1l	equ	0xFE1
  3782                           indf2	equ	0xFDF
  3783                           fsr2h	equ	0xFDA
  3784                           fsr2l	equ	0xFD9
  3785                           status	equ	0xFD8
  3786                           
  3787 ;; *************** function _ReadUART_ *****************
  3788 ;; Defined at:
  3789 ;;		line 101 in file "my_sw_uart.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  i               2    0        int 
  3794 ;;  uartdata        1    7[COMRAM] unsigned char 
  3795 ;;  datauart        1    6[COMRAM] unsigned char 
  3796 ;;  c               1    5[COMRAM] unsigned char 
  3797 ;;  bitcount        1    4[COMRAM] unsigned char 
  3798 ;;  d               1    3[COMRAM] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      unsigned char 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0
  3809 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3810 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3811 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3812 ;;Total ram usage:        7 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    2
  3815 ;; This function calls:
  3816 ;;		_DelayRXBitUART_
  3817 ;;		_DelayRXHalfBitUART_
  3818 ;; This function is called by:
  3819 ;;		_File_IO
  3820 ;;		_getsUART_
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           	psect	text24
  3825  00746E                     __ptext24:
  3826                           	opt stack 0
  3827  00746E                     _ReadUART_:
  3828                           	opt stack 26
  3829                           
  3830                           ;my_sw_uart.c: 103: unsigned char bitcount=8;
  3831                           
  3832                           ;incstack = 0
  3833  00746E  0E08               	movlw	8
  3834  007470  6E05               	movwf	ReadUART_@bitcount,c
  3835                           
  3836                           ;my_sw_uart.c: 104: unsigned char uartdata,datauart = 0, c, d = 0X01;
  3837  007472  0E00               	movlw	0
  3838  007474  6E07               	movwf	ReadUART_@datauart,c
  3839  007476  0E01               	movlw	1
  3840  007478  6E04               	movwf	ReadUART_@d,c
  3841                           
  3842                           ;my_sw_uart.c: 105: int i;
  3843                           ;my_sw_uart.c: 106: while (PORTDbits.RD5){
  3844  00747A  D004               	goto	l1166
  3845  00747C                     l116:
  3846  00747C  BA83               	btfsc	3971,5,c	;volatile
  3847  00747E  D7FE               	goto	l116
  3848                           
  3849                           ;my_sw_uart.c: 108: DelayRXHalfBitUART_();
  3850  007480  EC89  F038         	call	_DelayRXHalfBitUART_	;wreg free
  3851  007484                     l1166:
  3852  007484  AA83               	btfss	3971,5,c	;volatile
  3853  007486  D00B               	goto	l1174
  3854  007488  D7F9               	goto	l116
  3855  00748A                     l1168:
  3856                           
  3857                           ;my_sw_uart.c: 112: DelayRXBitUART_();
  3858  00748A  EC92  F038         	call	_DelayRXBitUART_	;wreg free
  3859                           
  3860                           ;my_sw_uart.c: 113: c = ((PORTDbits.RD5)?1:0);
  3861  00748E  0E00               	movlw	0
  3862  007490  BA83               	btfsc	3971,5,c	;volatile
  3863  007492  0E01               	movlw	1
  3864  007494  6E06               	movwf	ReadUART_@c,c
  3865                           
  3866                           ;my_sw_uart.c: 116: uartdata = ((uartdata<<1)|(c));
  3867  007496  5008               	movf	ReadUART_@uartdata,w,c
  3868  007498  2408               	addwf	ReadUART_@uartdata,w,c
  3869  00749A  1006               	iorwf	ReadUART_@c,w,c
  3870  00749C  6E08               	movwf	ReadUART_@uartdata,c
  3871  00749E                     l1174:
  3872  00749E  0605               	decf	ReadUART_@bitcount,f,c
  3873  0074A0  2805               	incf	ReadUART_@bitcount& (0+255),w,c
  3874  0074A2  A4D8               	btfss	status,2,c
  3875  0074A4  D7F2               	goto	l1168
  3876                           
  3877                           ;my_sw_uart.c: 117: }
  3878                           ;my_sw_uart.c: 119: datauart |= (((uartdata<<7)&0X80) | ((uartdata>>7)&0X01));
  3879  0074A6  6A02               	clrf	??_ReadUART_& (0+255),c
  3880  0074A8  AE08               	btfss	ReadUART_@uartdata,7,c
  3881  0074AA  D001               	bra	u165
  3882  0074AC  2A02               	incf	??_ReadUART_& (0+255),f,c
  3883  0074AE                     u165:
  3884  0074AE  0E01               	movlw	1
  3885  0074B0  1602               	andwf	??_ReadUART_,f,c
  3886  0074B2  4008               	rrncf	ReadUART_@uartdata,w,c
  3887  0074B4  0B80               	andlw	128
  3888  0074B6  0B80               	andlw	128
  3889  0074B8  1002               	iorwf	??_ReadUART_,w,c
  3890  0074BA  1207               	iorwf	ReadUART_@datauart,f,c
  3891                           
  3892                           ;my_sw_uart.c: 120: datauart |= (((uartdata<<5)&0X40) | ((uartdata>>5)&0X02));
  3893  0074BC  C008  F002         	movff	ReadUART_@uartdata,??_ReadUART_
  3894  0074C0  0E05               	movlw	5
  3895  0074C2  6E03               	movwf	(??_ReadUART_+1)& (0+255),c
  3896  0074C4                     u175:
  3897  0074C4  90D8               	bcf	status,0,c
  3898  0074C6  3202               	rrcf	??_ReadUART_,f,c
  3899  0074C8  2E03               	decfsz	(??_ReadUART_+1)& (0+255),f,c
  3900  0074CA  D7FC               	goto	u175
  3901  0074CC  0E02               	movlw	2
  3902  0074CE  1602               	andwf	??_ReadUART_,f,c
  3903  0074D0  3808               	swapf	ReadUART_@uartdata,w,c
  3904  0074D2  46E8               	rlncf	wreg,f,c
  3905  0074D4  0BE0               	andlw	224
  3906  0074D6  0B40               	andlw	64
  3907  0074D8  1002               	iorwf	??_ReadUART_,w,c
  3908  0074DA  1207               	iorwf	ReadUART_@datauart,f,c
  3909                           
  3910                           ;my_sw_uart.c: 121: datauart |= (((uartdata<<3)&0X20) | ((uartdata>>3)&0X04));
  3911  0074DC  C008  F002         	movff	ReadUART_@uartdata,??_ReadUART_
  3912  0074E0  90D8               	bcf	status,0,c
  3913  0074E2  3202               	rrcf	??_ReadUART_,f,c
  3914  0074E4  90D8               	bcf	status,0,c
  3915  0074E6  3202               	rrcf	??_ReadUART_,f,c
  3916  0074E8  90D8               	bcf	status,0,c
  3917  0074EA  3202               	rrcf	??_ReadUART_,f,c
  3918  0074EC  0E04               	movlw	4
  3919  0074EE  1602               	andwf	??_ReadUART_,f,c
  3920  0074F0  3808               	swapf	ReadUART_@uartdata,w,c
  3921  0074F2  42E8               	rrncf	wreg,f,c
  3922  0074F4  0BF8               	andlw	248
  3923  0074F6  0B20               	andlw	32
  3924  0074F8  1002               	iorwf	??_ReadUART_,w,c
  3925  0074FA  1207               	iorwf	ReadUART_@datauart,f,c
  3926                           
  3927                           ;my_sw_uart.c: 122: datauart |= (((uartdata<<1)&0X10) | ((uartdata>>1)&0X08));
  3928  0074FC  C008  F002         	movff	ReadUART_@uartdata,??_ReadUART_
  3929  007500  90D8               	bcf	status,0,c
  3930  007502  3202               	rrcf	??_ReadUART_,f,c
  3931  007504  0E08               	movlw	8
  3932  007506  1602               	andwf	??_ReadUART_,f,c
  3933  007508  5008               	movf	ReadUART_@uartdata,w,c
  3934  00750A  2408               	addwf	ReadUART_@uartdata,w,c
  3935  00750C  0B10               	andlw	16
  3936  00750E  1002               	iorwf	??_ReadUART_,w,c
  3937  007510  1207               	iorwf	ReadUART_@datauart,f,c
  3938                           
  3939                           ;my_sw_uart.c: 124: return datauart;
  3940  007512  5007               	movf	ReadUART_@datauart,w,c
  3941  007514  0012               	return	
  3942  007516                     __end_of_ReadUART_:
  3943                           	opt stack 0
  3944                           tblptru	equ	0xFF8
  3945                           tblptrh	equ	0xFF7
  3946                           tblptrl	equ	0xFF6
  3947                           tablat	equ	0xFF5
  3948                           postinc0	equ	0xFEE
  3949                           wreg	equ	0xFE8
  3950                           postdec1	equ	0xFE5
  3951                           fsr1h	equ	0xFE2
  3952                           fsr1l	equ	0xFE1
  3953                           indf2	equ	0xFDF
  3954                           fsr2h	equ	0xFDA
  3955                           fsr2l	equ	0xFD9
  3956                           status	equ	0xFD8
  3957                           
  3958 ;; *************** function _DelayRXHalfBitUART_ *****************
  3959 ;; Defined at:
  3960 ;;		line 12 in file "my_sw_uart.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;		None
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;		None
  3965 ;; Return value:  Size  Location     Type
  3966 ;;		None               void
  3967 ;; Registers used:
  3968 ;;		wreg, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0
  3975 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3977 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3978 ;;Total ram usage:        0 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    1
  3981 ;; This function calls:
  3982 ;;		_Delay100TCYx
  3983 ;;		_Delay10TCYx
  3984 ;; This function is called by:
  3985 ;;		_ReadUART_
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text25
  3990  007112                     __ptext25:
  3991                           	opt stack 0
  3992  007112                     _DelayRXHalfBitUART_:
  3993                           	opt stack 26
  3994                           
  3995                           ;my_sw_uart.c: 14: Delay100TCYx(2);
  3996                           
  3997                           ;incstack = 0
  3998  007112  0E02               	movlw	2
  3999  007114  EC69  F038         	call	_Delay100TCYx
  4000                           
  4001                           ;my_sw_uart.c: 15: Delay10TCYx(5);
  4002  007118  0E05               	movlw	5
  4003  00711A  EC71  F038         	call	_Delay10TCYx
  4004                           
  4005                           ;my_sw_uart.c: 16: _delay(1); _delay(1);
  4006  00711E  F000               	nop	
  4007  007120  F000               	nop	
  4008  007122  0012               	return	
  4009  007124                     __end_of_DelayRXHalfBitUART_:
  4010                           	opt stack 0
  4011                           tblptru	equ	0xFF8
  4012                           tblptrh	equ	0xFF7
  4013                           tblptrl	equ	0xFF6
  4014                           tablat	equ	0xFF5
  4015                           postinc0	equ	0xFEE
  4016                           wreg	equ	0xFE8
  4017                           postdec1	equ	0xFE5
  4018                           fsr1h	equ	0xFE2
  4019                           fsr1l	equ	0xFE1
  4020                           indf2	equ	0xFDF
  4021                           fsr2h	equ	0xFDA
  4022                           fsr2l	equ	0xFD9
  4023                           status	equ	0xFD8
  4024                           
  4025 ;; *************** function _Delay10TCYx *****************
  4026 ;; Defined at:
  4027 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d10tcyx.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;  unit            1    wreg     unsigned char 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  unit            1    0[COMRAM] unsigned char 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;		None               void
  4034 ;; Registers used:
  4035 ;;		wreg
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4041 ;;      Params:         0       0       0       0       0       0       0       0       0
  4042 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4044 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4045 ;;Total ram usage:        1 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; This function calls:
  4048 ;;		Nothing
  4049 ;; This function is called by:
  4050 ;;		_DelayRXHalfBitUART_
  4051 ;;		_DelayFor18TCY
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text26
  4056  0070E2                     __ptext26:
  4057                           	opt stack 0
  4058  0070E2                     _Delay10TCYx:
  4059                           	opt stack 26
  4060                           
  4061                           ;incstack = 0
  4062                           ;Delay10TCYx@unit stored from wreg
  4063  0070E2  6E01               	movwf	Delay10TCYx@unit,c
  4064  0070E4                     l612:
  4065  0070E4  0E03               	movlw	3
  4066  0070E6                     u647:
  4067  0070E6  2EE8               	decfsz	wreg,f,c
  4068  0070E8  D7FE               	goto	u647
  4069  0070EA  F000               	nop	
  4070  0070EC  2E01               	decfsz	Delay10TCYx@unit,f,c
  4071  0070EE  D7FA               	goto	l612
  4072  0070F0  0012               	return	
  4073  0070F2                     __end_of_Delay10TCYx:
  4074                           	opt stack 0
  4075                           tblptru	equ	0xFF8
  4076                           tblptrh	equ	0xFF7
  4077                           tblptrl	equ	0xFF6
  4078                           tablat	equ	0xFF5
  4079                           postinc0	equ	0xFEE
  4080                           wreg	equ	0xFE8
  4081                           postdec1	equ	0xFE5
  4082                           fsr1h	equ	0xFE2
  4083                           fsr1l	equ	0xFE1
  4084                           indf2	equ	0xFDF
  4085                           fsr2h	equ	0xFDA
  4086                           fsr2l	equ	0xFD9
  4087                           status	equ	0xFD8
  4088                           
  4089 ;; *************** function _DelayRXBitUART_ *****************
  4090 ;; Defined at:
  4091 ;;		line 20 in file "my_sw_uart.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;		None               void
  4098 ;; Registers used:
  4099 ;;		wreg, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4105 ;;      Params:         0       0       0       0       0       0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4108 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4109 ;;Total ram usage:        0 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    1
  4112 ;; This function calls:
  4113 ;;		_Delay100TCYx
  4114 ;; This function is called by:
  4115 ;;		_ReadUART_
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text27
  4120  007124                     __ptext27:
  4121                           	opt stack 0
  4122  007124                     _DelayRXBitUART_:
  4123                           	opt stack 26
  4124                           
  4125                           ;my_sw_uart.c: 22: Delay100TCYx( 5 );
  4126                           
  4127                           ;incstack = 0
  4128  007124  0E05               	movlw	5
  4129  007126  EC69  F038         	call	_Delay100TCYx
  4130                           
  4131                           ;my_sw_uart.c: 23: _delay(1); _delay(1); _delay(1); _delay(1); _delay(1);
  4132  00712A  F000               	nop	
  4133  00712C  F000               	nop	
  4134  00712E  F000               	nop	
  4135  007130  F000               	nop	
  4136  007132  F000               	nop	
  4137                           
  4138                           ;my_sw_uart.c: 24: _delay(1); _delay(1);
  4139  007134  F000               	nop	
  4140  007136  F000               	nop	
  4141  007138  0012               	return	
  4142  00713A                     __end_of_DelayRXBitUART_:
  4143                           	opt stack 0
  4144                           tblptru	equ	0xFF8
  4145                           tblptrh	equ	0xFF7
  4146                           tblptrl	equ	0xFF6
  4147                           tablat	equ	0xFF5
  4148                           postinc0	equ	0xFEE
  4149                           wreg	equ	0xFE8
  4150                           postdec1	equ	0xFE5
  4151                           fsr1h	equ	0xFE2
  4152                           fsr1l	equ	0xFE1
  4153                           indf2	equ	0xFDF
  4154                           fsr2h	equ	0xFDA
  4155                           fsr2l	equ	0xFD9
  4156                           status	equ	0xFD8
  4157                           
  4158 ;; *************** function _Delay100TCYx *****************
  4159 ;; Defined at:
  4160 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d100tcyx.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  unit            1    wreg     unsigned char 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  unit            1    0[COMRAM] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;		None               void
  4167 ;; Registers used:
  4168 ;;		wreg
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4174 ;;      Params:         0       0       0       0       0       0       0       0       0
  4175 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4177 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4178 ;;Total ram usage:        1 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_DelayRXHalfBitUART_
  4184 ;;		_DelayRXBitUART_
  4185 ;;		_DelayTXBitUART_
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text28
  4190  0070D2                     __ptext28:
  4191                           	opt stack 0
  4192  0070D2                     _Delay100TCYx:
  4193                           	opt stack 26
  4194                           
  4195                           ;incstack = 0
  4196                           ;Delay100TCYx@unit stored from wreg
  4197  0070D2  6E01               	movwf	Delay100TCYx@unit,c
  4198  0070D4                     l598:
  4199  0070D4  0E21               	movlw	33
  4200  0070D6                     u657:
  4201  0070D6  2EE8               	decfsz	wreg,f,c
  4202  0070D8  D7FE               	goto	u657
  4203  0070DA  F000               	nop	
  4204  0070DC  2E01               	decfsz	Delay100TCYx@unit,f,c
  4205  0070DE  D7FA               	goto	l598
  4206  0070E0  0012               	return	
  4207  0070E2                     __end_of_Delay100TCYx:
  4208                           	opt stack 0
  4209                           tblptru	equ	0xFF8
  4210                           tblptrh	equ	0xFF7
  4211                           tblptrl	equ	0xFF6
  4212                           tablat	equ	0xFF5
  4213                           postinc0	equ	0xFEE
  4214                           wreg	equ	0xFE8
  4215                           postdec1	equ	0xFE5
  4216                           fsr1h	equ	0xFE2
  4217                           fsr1l	equ	0xFE1
  4218                           indf2	equ	0xFDF
  4219                           fsr2h	equ	0xFDA
  4220                           fsr2l	equ	0xFD9
  4221                           status	equ	0xFD8
  4222                           tblptru	equ	0xFF8
  4223                           tblptrh	equ	0xFF7
  4224                           tblptrl	equ	0xFF6
  4225                           tablat	equ	0xFF5
  4226                           postinc0	equ	0xFEE
  4227                           wreg	equ	0xFE8
  4228                           postdec1	equ	0xFE5
  4229                           fsr1h	equ	0xFE2
  4230                           fsr1l	equ	0xFE1
  4231                           indf2	equ	0xFDF
  4232                           fsr2h	equ	0xFDA
  4233                           fsr2l	equ	0xFD9
  4234                           status	equ	0xFD8
  4235                           
  4236                           	psect	rparam
  4237  0000                     tblptru	equ	0xFF8
  4238                           tblptrh	equ	0xFF7
  4239                           tblptrl	equ	0xFF6
  4240                           tablat	equ	0xFF5
  4241                           postinc0	equ	0xFEE
  4242                           wreg	equ	0xFE8
  4243                           postdec1	equ	0xFE5
  4244                           fsr1h	equ	0xFE2
  4245                           fsr1l	equ	0xFE1
  4246                           indf2	equ	0xFDF
  4247                           fsr2h	equ	0xFDA
  4248                           fsr2l	equ	0xFD9
  4249                           status	equ	0xFD8


Data Sizes:
    Strings     304
    Constant    0
    Data        0
    BSS         1024
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsUART_@data	PTR unsigned char  size(2) Largest target is 101
		 -> STR_15(CODE[16]), STR_14(CODE[11]), STR_13(CODE[10]), STR_12(CODE[3]), 
		 -> STR_11(CODE[21]), STR_10(CODE[18]), STR_9(CODE[22]), STR_8(CODE[3]), 
		 -> STR_7(CODE[19]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[15]), 
		 -> STR_3(CODE[15]), STR_2(CODE[19]), STR_1(CODE[101]), 


Critical Paths under _main in COMRAM

    _main->_init
    _init->_reset
    _reset->_Command
    _reset->_dummy_clocks
    _Soft_Hard_Init->_OpenSPI
    _File_IO->_read_block
    _write_block->_Command
    _write_block->_dummy_clocks
    _read_block->_Command
    _read_block->_dummy_clocks
    _multi_write->_Command
    _multi_write->_dummy_clocks
    _multi_read->_Command
    _multi_read->_dummy_clocks
    _response->_ReadSPI__
    _putsUART_->_WriteUART_
    _DelayTXBitUART_->_Delay100TCYx
    _proceed->_WriteSPI
    _dummy_clocks->_delay_ms
    _Delay_s->_delay_ms
    _delay_ms->_Delay1KTCYx
    _Command->_WriteSPI_
    _DelayRXHalfBitUART_->_Delay100TCYx
    _DelayRXHalfBitUART_->_Delay10TCYx
    _DelayRXBitUART_->_Delay100TCYx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24889
                            _File_IO
                          _OpenUART_
                     _Soft_Hard_Init
                               _init
                          _putsUART_
 ---------------------------------------------------------------------------------
 (1) _init                                                 9     9      0    7531
                                             13 COMRAM     9     9      0
                            _Command
                            _Delay_s
                           _delay_ms
                       _dummy_clocks
                            _proceed
                          _putsUART_
                              _reset
                           _response
 ---------------------------------------------------------------------------------
 (2) _reset                                                5     5      0    3683
                                              8 COMRAM     5     5      0
                            _Command
                            _Delay_s
                       _dummy_clocks
                            _proceed
                          _putsUART_
                           _response
 ---------------------------------------------------------------------------------
 (1) _Soft_Hard_Init                                       5     5      0     211
                                              3 COMRAM     5     5      0
                            _OpenSPI
 ---------------------------------------------------------------------------------
 (2) _OpenSPI                                              3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _OpenUART_                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _File_IO                                              1     1      0   16277
                                             19 COMRAM     1     1      0
                          _ReadUART_
                         _multi_read
                        _multi_write
                          _putsUART_
                         _read_block
                        _write_block
 ---------------------------------------------------------------------------------
 (2) _write_block                                          3     3      0    3713
                                              8 COMRAM     3     3      0
                            _Command
                            _Delay_s
                          _WriteSPI_
                       _dummy_clocks
                            _proceed
                          _putsUART_
                           _response
 ---------------------------------------------------------------------------------
 (2) _read_block                                          12    12      0    3788
                                              8 COMRAM    11    11      0
                            _Command
                            _Delay_s
                         _WriteUART_
                       _dummy_clocks
                            _proceed
                          _putsUART_
                           _response
 ---------------------------------------------------------------------------------
 (2) _multi_write                                         11    11      0    3743
                                              8 COMRAM     6     6      0
                            _Command
                            _Delay_s
                          _WriteSPI_
                       _dummy_clocks
                            _proceed
                          _putsUART_
                           _response
 ---------------------------------------------------------------------------------
 (2) _multi_read                                          10    10      0    3863
                                              8 COMRAM     6     6      0
                            _Command
                            _Delay_s
                         _WriteUART_
                       _dummy_clocks
                            _proceed
                          _putsUART_
                           _response
 ---------------------------------------------------------------------------------
 (2) _response                                             1     1      0      15
                                              1 COMRAM     1     1      0
                          _ReadSPI__
 ---------------------------------------------------------------------------------
 (3) _ReadSPI__                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _putsUART_                                            2     0      2     870
                                              4 COMRAM     2     0      2
                         _WriteUART_
 ---------------------------------------------------------------------------------
 (2) _WriteUART_                                           3     3      0      45
                                              1 COMRAM     3     3      0
                    _DelayTXBitUART_
 ---------------------------------------------------------------------------------
 (3) _DelayTXBitUART_                                      0     0      0      15
                       _Delay100TCYx
 ---------------------------------------------------------------------------------
 (3) _proceed                                              2     0      2      15
                                              2 COMRAM     2     0      2
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _dummy_clocks                                         5     3      2    1150
                                              3 COMRAM     5     3      2
                           _WriteSPI
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _WriteSPI                                             2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay_s                                              3     3      0     105
                                              3 COMRAM     3     3      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             2     2      0      45
                                              1 COMRAM     2     2      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (5) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Command                                              7     2      5    1483
                                              2 COMRAM     6     1      5
                          _WriteSPI_
 ---------------------------------------------------------------------------------
 (4) _WriteSPI_                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadUART_                                            9     9      0     225
                                              1 COMRAM     7     7      0
                    _DelayRXBitUART_
                _DelayRXHalfBitUART_
 ---------------------------------------------------------------------------------
 (3) _DelayRXHalfBitUART_                                  0     0      0      30
                       _Delay100TCYx
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DelayRXBitUART_                                      0     0      0      15
                       _Delay100TCYx
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _File_IO
     _ReadUART_
       _DelayRXBitUART_
         _Delay100TCYx
       _DelayRXHalfBitUART_
         _Delay100TCYx
         _Delay10TCYx
     _multi_read
       _Command
         _WriteSPI_
       _Delay_s
         _delay_ms
           _Delay1KTCYx
       _WriteUART_
         _DelayTXBitUART_
           _Delay100TCYx
       _dummy_clocks
         _WriteSPI
         _delay_ms
           _Delay1KTCYx
       _proceed
         _WriteSPI
       _putsUART_
         _WriteUART_
           _DelayTXBitUART_
             _Delay100TCYx
       _response
         _ReadSPI__
     _multi_write
       _Command
         _WriteSPI_
       _Delay_s
         _delay_ms
           _Delay1KTCYx
       _WriteSPI_
       _dummy_clocks
         _WriteSPI
         _delay_ms
           _Delay1KTCYx
       _proceed
         _WriteSPI
       _putsUART_
         _WriteUART_
           _DelayTXBitUART_
             _Delay100TCYx
       _response
         _ReadSPI__
     _putsUART_
       _WriteUART_
         _DelayTXBitUART_
           _Delay100TCYx
     _read_block
       _Command
         _WriteSPI_
       _Delay_s
         _delay_ms
           _Delay1KTCYx
       _WriteUART_
         _DelayTXBitUART_
           _Delay100TCYx
       _dummy_clocks
         _WriteSPI
         _delay_ms
           _Delay1KTCYx
       _proceed
         _WriteSPI
       _putsUART_
         _WriteUART_
           _DelayTXBitUART_
             _Delay100TCYx
       _response
         _ReadSPI__
     _write_block
       _Command
         _WriteSPI_
       _Delay_s
         _delay_ms
           _Delay1KTCYx
       _WriteSPI_
       _dummy_clocks
         _WriteSPI
         _delay_ms
           _Delay1KTCYx
       _proceed
         _WriteSPI
       _putsUART_
         _WriteUART_
           _DelayTXBitUART_
             _Delay100TCYx
       _response
         _ReadSPI__
   _OpenUART_
   _Soft_Hard_Init
     _OpenSPI
   _init
     _Command
       _WriteSPI_
     _Delay_s
       _delay_ms
         _Delay1KTCYx
     _delay_ms
       _Delay1KTCYx
     _dummy_clocks
       _WriteSPI
       _delay_ms
         _Delay1KTCYx
     _proceed
       _WriteSPI
     _putsUART_
       _WriteUART_
         _DelayTXBitUART_
           _Delay100TCYx
     _reset
       _Command
         _WriteSPI_
       _Delay_s
         _delay_ms
           _Delay1KTCYx
       _dummy_clocks
         _WriteSPI
         _delay_ms
           _Delay1KTCYx
       _proceed
         _WriteSPI
       _putsUART_
         _WriteUART_
           _DelayTXBitUART_
             _Delay100TCYx
       _response
         _ReadSPI__
     _response
       _ReadSPI__
   _putsUART_
     _WriteUART_
       _DelayTXBitUART_
         _Delay100TCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0     400      21      100.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      16       1       23.2%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      11        0.0%
DATA                 0      0     416       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Jan 11 14:14:08 2017

     Soft_Hard_Init@smp_phase 0008                   _SSPSTATbits 000FC7                            l21 7372  
                          l32 73E8                   __CFG_BOR$ON 000000                   __CFG_BORV$3 000000  
         read_block@start_add 0009                           l116 747C                           l109 7202  
                         l303 7150                           l305 714C                           l323 72AA  
                         l352 7350                           l353 736A                           l370 7164  
                         l354 7352                           l346 7330                           l355 7356  
                         l612 70E4                           l348 7334                           l349 7336  
                         l277 7B34                           l368 7168                           l296 710A  
                         l619 70F4                           l598 70D4                           _RD4 007C1C  
                         _RD5 007C1D                           u165 74AE                           u175 74C4  
                         u637 70F6                           u647 70E6                           u657 70D6  
     Soft_Hard_Init@sync_mode 0006                           _ctr 0400                           _str 0600  
                         wreg 000FE8                  __CFG_FOSC$HS 000000           _DelayRXHalfBitUART_ 7112  
                  ReadUART_@c 0006                    ReadUART_@d 0004                  multi_write@i 0009  
                multi_write@j 000C                  __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000  
                        l1030 717A                          l1026 7172                          l1130 72B8  
                        l1044 7282                          l1038 7266                          l1302 7634  
                        l1080 71E2                          l1400 790E                          l1312 765E  
                        l1216 759E                          l1420 7972                          l1404 7924  
                        l1332 7692                          l1340 76BC                          l1260 77AC  
                        l1244 7772                          l1228 75E6                          l1174 749E  
                        l1166 7484                          l1086 71E8                          l1094 71F8  
                        l1190 7548                          l1502 73AC                          l1168 748A  
                        l1432 79B4                          l1424 7988                          l1416 7964  
                        l1256 7796                          l1248 777C                          l1504 73C8  
                        l1354 7708                          l1436 79CA                          l1380 78A2  
                        l1292 7846                          l1276 7800                          l1452 733A  
               multi_read@ptr 0009                          l1390 78D8                          l1374 788C  
                        l1462 73FA                          l1630 7B80                          l1606 7B14  
                        l1288 7830                          l1456 735A                          l1624 7B66  
                        l1552 7A18                          l1386 78C2                          l1490 7386  
                        l1396 78F8                          l1492 738C                          l1476 744C  
                        l1468 742C                          l1580 7A8A                          l1494 7392  
                        l1638 7BB0                          l1566 7A62                          l1558 7A42  
                        l1496 7398                          l1656 71B6                          l1498 739E  
                        l1594 7ADA                          l1586 7ABA                          STR_1 7BCF  
                        STR_2 7C72                          STR_3 7CD8                          STR_4 7CC9  
                        STR_5 7CA8                          STR_6 7C97                          STR_7 7C5F  
                        STR_8 7CFC                          STR_9 7C34             WriteSPI_@data_out 0002  
                        _main 719E                          _init 79EE                          fsr1h 000FE2  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        start 0002                 __CFG_IESO$OFF 000000               __end_of_Delay_s 7202  
             __end_of_File_IO 73EA          ?_DelayRXHalfBitUART_ 0001                 __CFG_MCLRE$ON 000000  
             __end_of_Command 7258                   _Delay10TCYx 70E2               __end_of_OpenSPI 7372  
                 _Delay1KTCYx 70F2                 __CFG_PLLDIV$5 000000                multi_read@buff 000C  
                       ?_main 0001                         ?_init 0001                         STR_10 7C85  
                       STR_11 7C4A                         STR_12 7CEF                         STR_13 7CF2  
                       STR_14 7CE7                         STR_15 7CB9         __size_of_Delay100TCYx 0010  
                       _CMCON 000FB4                         _LATA5 007C4D                         _LATB4 007C54  
               __CFG_USBDIV$1 000000                 __CFG_PWRT$OFF 000000                   _write_block 7516  
              __CFG_FCMEN$OFF 000000                         _reset 73EA                         init@i 000E  
                       tablat 000FF5               __end_of_proceed 70C4                         status 000FD8  
       ??_DelayRXHalfBitUART_ 0002               __initialization 71BC                  _Delay100TCYx 70D2  
                __end_of_main 71BC                  __end_of_init 7BCE                        ??_main 0017  
                      ??_init 000E                 __activetblptr 000002               write_block@buff 000B  
             __CFG_CCP2MX$OFF 000000               multi_read@count 000A                        _ADCON1 000FC1  
                      ?_reset 0001              __end_of_WriteSPI 716A                 ?_dummy_clocks 0004  
          __size_of_ReadUART_ 00A8                     ??_Delay_s 0004            __size_of_ReadSPI__ 0010  
                   ??_File_IO 0014                        _TRISB0 007C98                        _TRISB1 007C99  
                      _TRISA5 007C95                        _TRISB4 007C9C                        _TRISC7 007CA7  
                      _SSPBUF 000FC9                     ??_Command 0008              __end_of_delay_ms 7184  
                   ??_OpenSPI 0003            __size_of_OpenUART_ 000A                __CFG_STVREN$ON 000000  
                      clear_0 71C4               WriteSPI@TempVar 0001      __size_of_DelayRXBitUART_ 0016  
            __end_of_response 70D2                   read_block@i 000F                  __mediumconst 7BCE  
                      reset@i 0009                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                     ??_proceed 0005       __size_of_Soft_Hard_Init 004E  
                ?_multi_write 0001      __size_of_DelayTXBitUART_ 001A                ??_dummy_clocks 0006  
                  __accesstop 0060       __end_of__initialization 71D0               __CFG_PBADEN$OFF 000000  
          __size_of_WriteSPI_ 0018                    _WriteUART_ 7258                __pcstackCOMRAM 0001  
               __end_of_reset 746E             __end_of_ReadUART_ 7516             __end_of_ReadSPI__ 7112  
           __end_of_OpenUART_ 70B8               multi_write@data 000B               multi_write@buff 000E  
                     ??_reset 0009                 putsUART_@data 0005             ReadUART_@datauart 0007  
            multi_read@length 000D                  ?_Delay10TCYx 0001             ReadUART_@bitcount 0005  
                ?_Delay1KTCYx 0001                     ?_WriteSPI 0001             __end_of_WriteSPI_ 7152  
                ?_write_block 0001                     ?_delay_ms 0001            __size_of_putsUART_ 0028  
            read_block@length 0012             ReadUART_@uartdata 0008                       _SSPCON1 000FC6  
                     _SSPSTAT 000FC7             ??_DelayRXBitUART_ 0002                       _Delay_s 71DA  
             __CFG_VREGEN$OFF 000000                       _File_IO 7372                       _Command 722A  
           ??_DelayTXBitUART_ 0002                       _OpenSPI 731C                       __Hparam 0000  
                     __Lparam 0000                   ?_WriteUART_ 0001                     ?_response 0001  
        __end_of_dummy_clocks 72CE                       __pcinit 71BC                    _read_block 7726  
             Delay10TCYx@unit 0001                       __ramtop 0800                    ??_WriteSPI 0001  
                     __ptext0 719E                       __ptext1 79EE                       __ptext2 73EA  
                     __ptext3 72CE                       __ptext4 731C                       __ptext5 70AE  
                     __ptext6 7372                       __ptext7 7516                       __ptext8 7726  
                     __ptext9 75FE                    ??_delay_ms 0002                       _proceed 70B8  
              _Soft_Hard_Init 72CE          end_of_initialization 71D0   __end_of_DelayRXHalfBitUART_ 7124  
        __size_of_multi_write 0128                 __Lmediumconst 7BCE              ReadSPI__@TempVar 0001  
                  ??_response 0002                       postdec1 000FE5              WriteSPI@data_out 0002  
           __end_of_putsUART_ 722A                       postinc0 000FEE                    _multi_read 7858  
                   _PORTDbits 000F83        __end_of_Soft_Hard_Init 731C                     _TRISAbits 000F92  
                   _TRISBbits 000F93                     _TRISCbits 000F94                     _TRISDbits 000F95  
               __pbssBIGRAM_1 0400           __size_of_WriteUART_ 003A              WriteSPI_@TempVar 0001  
                write_block@i 0009              Delay100TCYx@unit 0001                Command@CRCbits 0007  
        __size_of_Delay10TCYx 0010                   ?_read_block 0001              OpenSPI@smp_phase 0002  
        __size_of_Delay1KTCYx 0010           start_initialization 71BC                     _ReadUART_ 746E  
                   _ReadSPI__ 7102               ?_Soft_Hard_Init 0001          __size_of_write_block 00E8  
            OpenSPI@sync_mode 0003                    init@count1 0010                    init@count2 0014  
          WriteUART_@bitcount 0004                     _OpenUART_ 70AE         __size_of_dummy_clocks 003C  
            __CFG_LPT1OSC$OFF 000000            WriteUART_@uartdata 0003                   ?_multi_read 0001  
             _DelayRXBitUART_ 7124             __size_of_WriteSPI 0018                    ?_ReadUART_ 0001  
                  ?_ReadSPI__ 0001                     _WriteSPI_ 713A           __end_of__stringdata 7CFF  
             _DelayTXBitUART_ 7184             __size_of_delay_ms 001A               Delay1KTCYx@unit 0001  
                _dummy_clocks 7292                      ?_Delay_s 0001                    ?_OpenUART_ 0001  
                    ?_File_IO 0001           __size_of_read_block 0132                      ?_Command 0003  
                    ?_OpenSPI 0001                  ??_WriteUART_ 0002                 ?_Delay100TCYx 0001  
               __pmediumconst 7BCE             __size_of_response 000E               read_block@count 000D  
                  reset@count 000B                    ?_WriteSPI_ 0001                      ?_proceed 0003  
          __end_of_WriteUART_ 7292                __size_of_reset 0084                     delay_ms@i 0003  
                   delay_ms@t 0002           __size_of_multi_read 0196                      Delay_s@i 0005  
                    Delay_s@j 0006                      Delay_s@t 0004                ??_Delay100TCYx 0001  
                    File_IO@c 0014                      _PIR1bits 000F9E       __end_of_DelayRXBitUART_ 713A  
             OpenSPI@bus_mode 0001                     _putsUART_ 7202                   __stringdata 7BCF  
     __end_of_DelayTXBitUART_ 719E                   ??_ReadUART_ 0002                   ??_ReadSPI__ 0001  
               ??_multi_write 0009                   ??_OpenUART_ 0001              __size_of_Delay_s 0028  
                   init@count 0012              __size_of_File_IO 0078              __size_of_Command 002E  
                    __Hrparam 0000  __size_of_DelayRXHalfBitUART_ 0012                      __Lrparam 0000  
            __size_of_OpenSPI 0056                  ??_read_block 0009              ??_Soft_Hard_Init 0004  
                    _WriteSPI 7152                    ?_putsUART_ 0005                      _delay_ms 716A  
                 ??_WriteSPI_ 0001               Soft_Hard_Init@i 0004                      __ptext10 7858  
                    __ptext11 70C4                      __ptext20 716A                      __ptext12 7102  
                    __ptext21 70F2                      __ptext13 7202                      __ptext22 722A  
                    __ptext14 7258                      __ptext23 713A                      __ptext15 7184  
                    __ptext24 746E                      __ptext16 70B8                      __ptext25 7112  
                    __ptext17 7292                      __ptext26 70E2                      __ptext18 7152  
                    __ptext27 7124                      __ptext19 71DA                      __ptext28 70D2  
            __size_of_proceed 000C                read_block@buff 0011                     reset@buff 000D  
               __size_of_main 001E                 __size_of_init 01E0            __end_of_read_block 7858  
         __end_of_multi_write 7726                 dummy_clocks@i 0007                 dummy_clocks@n 0004  
                    _response 70C4                 ??_Delay10TCYx 0001              ?_DelayRXBitUART_ 0001  
               ??_Delay1KTCYx 0001                  ??_multi_read 0009         __CFG_CPUDIV$OSC1_PLL2 000000  
            ?_DelayTXBitUART_ 0001                      init@buff 0016                 ??_write_block 0009  
        __end_of_Delay100TCYx 70E2            __end_of_multi_read 79EE                   ??_putsUART_ 0007  
                response@buff 0002           __end_of_Delay10TCYx 70F2           __end_of_Delay1KTCYx 7102  
                 _SSPCON1bits 000FC6                    Command@cmd 0008                    Command@arg 0003  
      Soft_Hard_Init@bus_mode 0007                   _multi_write 75FE           __end_of_write_block 75FE  
