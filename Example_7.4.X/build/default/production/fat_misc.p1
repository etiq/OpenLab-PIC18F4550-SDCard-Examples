Version 3.2 HI-TECH Software Intermediate Code
[v F289 `uc ~T0 @X0 -> 5 `i t ]
"30 fat_misc.h
[s S7 `F289 -> 10 `i `uc 1 `uc 1 ]
[n S7 lfn_cache String Null no_of_strings ]
"24 C:\Program Files (x86)\Microchip\xc8\v1.32\include\string.h
[v _memset `(*v ~T0 @X0 0 ef3`*v`i`ui ]
"111 fat_defs.h
[s S6 `uc -> 11 `i `uc 1 `uc 1 `uc 1 `uc -> 2 `i `uc -> 2 `i `uc -> 2 `i `us 1 `uc -> 2 `i `uc -> 2 `i `us 1 `ul 1 ]
[n S6 fat_dir_entry Name Attr NTRes CrtTimeTenth CrtTime CrtDate LstAccDate FstClusHI WrtTime WrtDate FstClusLO FileSize ]
"62 C:\Program Files (x86)\Microchip\xc8\v1.32\include\string.h
[v _strlen `(ui ~T0 @X0 0 ef1`*Cuc ]
"22
[v _memcpy `(*v ~T0 @X0 0 ef3`*v`*Cv`ui ]
[; ;stdlib.h: 4: typedef int ptrdiff_t;
[; ;stdlib.h: 5: typedef unsigned size_t;
[; ;stdlib.h: 6: typedef unsigned short wchar_t;
[; ;stdlib.h: 16: extern int errno;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: int rem;
[; ;stdlib.h: 29: int quot;
[; ;stdlib.h: 30: } div_t;
[; ;stdlib.h: 31: typedef struct {
[; ;stdlib.h: 32: unsigned rem;
[; ;stdlib.h: 33: unsigned quot;
[; ;stdlib.h: 34: } udiv_t;
[; ;stdlib.h: 35: typedef struct {
[; ;stdlib.h: 36: long quot;
[; ;stdlib.h: 37: long rem;
[; ;stdlib.h: 38: } ldiv_t;
[; ;stdlib.h: 39: typedef struct {
[; ;stdlib.h: 40: unsigned long quot;
[; ;stdlib.h: 41: unsigned long rem;
[; ;stdlib.h: 42: } uldiv_t;
[; ;stdlib.h: 65: extern double atof(const char *);
[; ;stdlib.h: 66: extern double strtod(const char *, const char **);
[; ;stdlib.h: 67: extern int atoi(const char *);
[; ;stdlib.h: 68: extern unsigned xtoi(const char *);
[; ;stdlib.h: 69: extern long atol(const char *);
[; ;stdlib.h: 70: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 72: extern int rand(void);
[; ;stdlib.h: 73: extern void srand(unsigned int);
[; ;stdlib.h: 74: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 75: extern div_t div(int numer, int denom);
[; ;stdlib.h: 76: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 77: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 78: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 79: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 80: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 81: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 82: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 87: extern void * malloc(size_t);
[; ;stdlib.h: 88: extern void free(void *);
[; ;stdlib.h: 89: extern void * realloc(void *, size_t);
[; ;stdlib.h: 91: extern void abort(void);
[; ;stdlib.h: 92: extern void exit(int);
[; ;stdlib.h: 93: extern int atexit(void (*)(void));
[; ;stdlib.h: 94: extern char * getenv(const char *);
[; ;stdlib.h: 95: extern char ** environ;
[; ;stdlib.h: 96: extern int system(char *);
[; ;stdlib.h: 97: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 98: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 99: extern int abs(int);
[; ;stdlib.h: 100: extern long labs(long);
[; ;stdlib.h: 103: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 104: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 109: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 110: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 112: extern char * ftoa(float f, int * status);
[; ;string.h: 22: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 23: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 24: extern void * memset(void *, int, size_t);
[; ;string.h: 42: extern char * strcat(char *, const char *);
[; ;string.h: 43: extern char * strcpy(char *, const char *);
[; ;string.h: 44: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 45: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 46: extern char * strdup(const char *);
[; ;string.h: 47: extern char * strtok(char *, const char *);
[; ;string.h: 50: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 51: extern int strcmp(const char *, const char *);
[; ;string.h: 52: extern int stricmp(const char *, const char *);
[; ;string.h: 53: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 54: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 55: extern void * memchr(const void *, int, size_t);
[; ;string.h: 56: extern size_t strcspn(const char *, const char *);
[; ;string.h: 57: extern char * strpbrk(const char *, const char *);
[; ;string.h: 58: extern size_t strspn(const char *, const char *);
[; ;string.h: 59: extern char * strstr(const char *, const char *);
[; ;string.h: 60: extern char * stristr(const char *, const char *);
[; ;string.h: 61: extern char * strerror(int);
[; ;string.h: 62: extern size_t strlen(const char *);
[; ;string.h: 63: extern char * strchr(const char *, int);
[; ;string.h: 64: extern char * strichr(const char *, int);
[; ;string.h: 65: extern char * strrchr(const char *, int);
[; ;string.h: 66: extern char * strrichr(const char *, int);
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 23: extern int errno;
[; ;stdio.h: 54: struct __prbuf
[; ;stdio.h: 55: {
[; ;stdio.h: 56: char * ptr;
[; ;stdio.h: 57: void (* func)(char);
[; ;stdio.h: 58: };
[; ;conio.h: 17: extern int errno;
[; ;conio.h: 20: extern void init_uart(void);
[; ;conio.h: 22: extern char getch(void);
[; ;conio.h: 23: extern char getche(void);
[; ;conio.h: 24: extern void putch(char);
[; ;conio.h: 25: extern void ungetch(char);
[; ;conio.h: 27: extern __bit kbhit(void);
[; ;conio.h: 31: extern char * cgets(char *);
[; ;conio.h: 32: extern void cputs(const char *);
[; ;stdio.h: 99: extern int cprintf(char *, ...);
[; ;stdio.h: 104: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 194: extern char * gets(char *);
[; ;stdio.h: 195: extern int puts(const char *);
[; ;stdio.h: 196: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 197: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 198: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 199: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 200: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 201: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 205: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 206: extern int printf(const char *, ...);
[; ;fat_types.h: 15: typedef unsigned char uint8;
[; ;fat_types.h: 16: typedef unsigned short uint16;
[; ;fat_types.h: 23: typedef unsigned long uint32;
[; ;fat_defs.h: 111: struct fat_dir_entry 
[; ;fat_defs.h: 112: {
[; ;fat_defs.h: 113: uint8 Name[11];
[; ;fat_defs.h: 114: uint8 Attr;
[; ;fat_defs.h: 115: uint8 NTRes;
[; ;fat_defs.h: 116: uint8 CrtTimeTenth;
[; ;fat_defs.h: 117: uint8 CrtTime[2];
[; ;fat_defs.h: 118: uint8 CrtDate[2];
[; ;fat_defs.h: 119: uint8 LstAccDate[2];
[; ;fat_defs.h: 120: uint16 FstClusHI;
[; ;fat_defs.h: 121: uint8 WrtTime[2];
[; ;fat_defs.h: 122: uint8 WrtDate[2];
[; ;fat_defs.h: 123: uint16 FstClusLO;
[; ;fat_defs.h: 124: uint32 FileSize;
[; ;fat_defs.h: 125: } ;
[; ;fat_misc.h: 30: struct lfn_cache
[; ;fat_misc.h: 31: {
[; ;fat_misc.h: 34: uint8 String[10][5];
[; ;fat_misc.h: 35: uint8 Null;
[; ;fat_misc.h: 37: uint8 no_of_strings;
[; ;fat_misc.h: 38: };
[; ;fat_misc.h: 43: void fatfs_lfn_cache_init(struct lfn_cache *lfn, int wipeTable);
[; ;fat_misc.h: 44: void fatfs_lfn_cache_entry(struct lfn_cache *lfn, uint8 *entryBuffer);
[; ;fat_misc.h: 45: char* fatfs_lfn_cache_get(struct lfn_cache *lfn);
[; ;fat_misc.h: 46: int fatfs_entry_lfn_text(struct fat_dir_entry *entry);
[; ;fat_misc.h: 47: int fatfs_entry_lfn_invalid(struct fat_dir_entry *entry);
[; ;fat_misc.h: 48: int fatfs_entry_lfn_exists(struct lfn_cache *lfn, struct fat_dir_entry *entry);
[; ;fat_misc.h: 49: int fatfs_entry_sfn_only(struct fat_dir_entry *entry);
[; ;fat_misc.h: 50: int fatfs_entry_is_dir(struct fat_dir_entry *entry);
[; ;fat_misc.h: 51: int fatfs_entry_is_file(struct fat_dir_entry *entry);
[; ;fat_misc.h: 52: int fatfs_lfn_entries_required(char *filename);
[; ;fat_misc.h: 53: void fatfs_filename_to_lfn(char *filename, uint8 *buffer, int entry, uint8 sfnChk);
[; ;fat_misc.h: 54: void fatfs_sfn_create_entry(char *shortfilename, uint32 size, uint32 startCluster, struct fat_dir_entry *entry, int dir);
[; ;fat_misc.h: 55: int fatfs_lfn_create_sfn(char *sfn_output, char *filename);
[; ;fat_misc.h: 56: int fatfs_lfn_generate_tail(char *sfn_output, char *sfn_input, uint32 tailNum);
[; ;fat_misc.h: 57: void fatfs_convert_from_fat_time(uint16 fat_time, int *hours, int *minutes, int *seconds);
[; ;fat_misc.h: 58: void fatfs_convert_from_fat_date(uint16 fat_date, int *day, int *month, int *year);
[; ;fat_misc.h: 59: uint16 fatfs_convert_to_fat_time(int hours, int minutes, int seconds);
[; ;fat_misc.h: 60: uint16 fatfs_convert_to_fat_date(int day, int month, int year);
[; ;fat_misc.h: 61: void fatfs_print_sector(uint32 sector, uint8 *data);
"39 fat_misc.c
[v _fatfs_lfn_cache_init `(v ~T0 @X0 1 ef2`*S7`i ]
"40
{
[; ;fat_misc.c: 39: void fatfs_lfn_cache_init(struct lfn_cache *lfn, int wipeTable)
[; ;fat_misc.c: 40: {
[e :U _fatfs_lfn_cache_init ]
"39
[v _lfn `*S7 ~T0 @X0 1 r1 ]
[v _wipeTable `i ~T0 @X0 1 r2 ]
"40
[f ]
"41
[v _i `i ~T0 @X0 1 a ]
[; ;fat_misc.c: 41: int i = 0;
[e = _i -> 0 `i ]
[; ;fat_misc.c: 43: lfn->no_of_strings = 0;
"43
[e = . *U _lfn 2 -> -> 0 `i `uc ]
[; ;fat_misc.c: 48: if (wipeTable)
"48
[e $ ! != _wipeTable -> 0 `i 9  ]
[; ;fat_misc.c: 49: for (i=0;i<10;i++)
"49
{
[e = _i -> 0 `i ]
[e $ < _i -> 10 `i 10  ]
[e $U 11  ]
"50
[e :U 10 ]
[; ;fat_misc.c: 50: memset(lfn->String[i], 0x00, 5);
[e ( _memset (3 , , -> &U *U + &U . *U _lfn 0 * -> -> _i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `*v -> 0 `i -> -> 5 `i `ui ]
"49
[e ++ _i -> 1 `i ]
[e $ < _i -> 10 `i 10  ]
[e :U 11 ]
"50
}
[e :U 9 ]
[; ;fat_misc.c: 52: }
"52
[e :UE 8 ]
}
"58
[v _fatfs_lfn_cache_entry `(v ~T0 @X0 1 ef2`*S7`*uc ]
"59
{
[; ;fat_misc.c: 58: void fatfs_lfn_cache_entry(struct lfn_cache *lfn, uint8 *entryBuffer)
[; ;fat_misc.c: 59: {
[e :U _fatfs_lfn_cache_entry ]
"58
[v _lfn `*S7 ~T0 @X0 1 r1 ]
[v _entryBuffer `*uc ~T0 @X0 1 r2 ]
"59
[f ]
"60
[v _LFNIndex `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
[; ;fat_misc.c: 60: uint8 LFNIndex, i;
[; ;fat_misc.c: 61: LFNIndex = entryBuffer[0] & 0x1F;
"61
[e = _LFNIndex -> & -> *U + _entryBuffer * -> -> 0 `i `x -> -> # *U _entryBuffer `i `x `i -> 31 `i `uc ]
[; ;fat_misc.c: 64: if (LFNIndex > 10)
"64
[e $ ! > -> _LFNIndex `i -> 10 `i 14  ]
[; ;fat_misc.c: 65: return ;
"65
[e $UE 13  ]
[e :U 14 ]
[; ;fat_misc.c: 68: if (LFNIndex == 0)
"68
[e $ ! == -> _LFNIndex `i -> 0 `i 15  ]
[; ;fat_misc.c: 69: return ;
"69
[e $UE 13  ]
[e :U 15 ]
[; ;fat_misc.c: 71: if (lfn->no_of_strings == 0)
"71
[e $ ! == -> . *U _lfn 2 `i -> 0 `i 16  ]
[; ;fat_misc.c: 72: lfn->no_of_strings = LFNIndex;
"72
[e = . *U _lfn 2 _LFNIndex ]
[e :U 16 ]
[; ;fat_misc.c: 74: lfn->String[LFNIndex-1][0] = entryBuffer[1];
"74
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 0 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux *U + _entryBuffer * -> -> 1 `i `x -> -> # *U _entryBuffer `i `x ]
[; ;fat_misc.c: 75: lfn->String[LFNIndex-1][1] = entryBuffer[3];
"75
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 1 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux *U + _entryBuffer * -> -> 3 `i `x -> -> # *U _entryBuffer `i `x ]
[; ;fat_misc.c: 76: lfn->String[LFNIndex-1][2] = entryBuffer[5];
"76
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 2 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux *U + _entryBuffer * -> -> 5 `i `x -> -> # *U _entryBuffer `i `x ]
[; ;fat_misc.c: 77: lfn->String[LFNIndex-1][3] = entryBuffer[7];
"77
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 3 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux *U + _entryBuffer * -> -> 7 `i `x -> -> # *U _entryBuffer `i `x ]
[; ;fat_misc.c: 78: lfn->String[LFNIndex-1][4] = entryBuffer[9];
"78
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 4 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux *U + _entryBuffer * -> -> 9 `i `x -> -> # *U _entryBuffer `i `x ]
[; ;fat_misc.c: 79: lfn->String[LFNIndex-1][5] = entryBuffer[0x0E];
"79
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 5 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux *U + _entryBuffer * -> -> 14 `i `x -> -> # *U _entryBuffer `i `x ]
[; ;fat_misc.c: 80: lfn->String[LFNIndex-1][6] = entryBuffer[0x10];
"80
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 6 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux *U + _entryBuffer * -> -> 16 `i `x -> -> # *U _entryBuffer `i `x ]
[; ;fat_misc.c: 81: lfn->String[LFNIndex-1][7] = entryBuffer[0x12];
"81
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 7 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux *U + _entryBuffer * -> -> 18 `i `x -> -> # *U _entryBuffer `i `x ]
[; ;fat_misc.c: 82: lfn->String[LFNIndex-1][8] = entryBuffer[0x14];
"82
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 8 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux *U + _entryBuffer * -> -> 20 `i `x -> -> # *U _entryBuffer `i `x ]
[; ;fat_misc.c: 83: lfn->String[LFNIndex-1][9] = entryBuffer[0x16];
"83
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 9 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux *U + _entryBuffer * -> -> 22 `i `x -> -> # *U _entryBuffer `i `x ]
[; ;fat_misc.c: 84: lfn->String[LFNIndex-1][10] = entryBuffer[0x18];
"84
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 10 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux *U + _entryBuffer * -> -> 24 `i `x -> -> # *U _entryBuffer `i `x ]
[; ;fat_misc.c: 85: lfn->String[LFNIndex-1][11] = entryBuffer[0x1C];
"85
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 11 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux *U + _entryBuffer * -> -> 28 `i `x -> -> # *U _entryBuffer `i `x ]
[; ;fat_misc.c: 86: lfn->String[LFNIndex-1][12] = entryBuffer[0x1E];
"86
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 12 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux *U + _entryBuffer * -> -> 30 `i `x -> -> # *U _entryBuffer `i `x ]
[; ;fat_misc.c: 88: for (i=0; i<5; i++)
"88
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 5 `i 17  ]
[e $U 18  ]
"89
[e :U 17 ]
[; ;fat_misc.c: 89: if (lfn->String[LFNIndex-1][i]==0xFF)
[e $ ! == -> *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux `i -> 255 `i 20  ]
[; ;fat_misc.c: 90: lfn->String[LFNIndex-1][i] = 0x20;
"90
[e = *U + &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> - -> _LFNIndex `i -> 1 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux -> -> 32 `i `uc ]
[e :U 20 ]
"88
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 5 `i 17  ]
[e :U 18 ]
"91
}
[; ;fat_misc.c: 91: }
[e :UE 13 ]
}
"97
[v _fatfs_lfn_cache_get `(*uc ~T0 @X0 1 ef1`*S7 ]
"98
{
[; ;fat_misc.c: 97: char* fatfs_lfn_cache_get(struct lfn_cache *lfn)
[; ;fat_misc.c: 98: {
[e :U _fatfs_lfn_cache_get ]
"97
[v _lfn `*S7 ~T0 @X0 1 r1 ]
"98
[f ]
[; ;fat_misc.c: 100: if (lfn->no_of_strings == 10)
"100
[e $ ! == -> . *U _lfn 2 `i -> 10 `i 22  ]
[; ;fat_misc.c: 101: lfn->Null = '\0';
"101
[e = . *U _lfn 1 -> -> 0 `ui `uc ]
[e $U 23  ]
"102
[e :U 22 ]
[; ;fat_misc.c: 102: else if (lfn->no_of_strings)
[e $ ! != -> . *U _lfn 2 `i -> -> -> 0 `i `uc `i 24  ]
[; ;fat_misc.c: 103: lfn->String[lfn->no_of_strings][0] = '\0';
"103
[e = *U + &U *U + &U . *U _lfn 0 * -> . *U _lfn 2 `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 0 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> . *U _lfn 2 `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux -> -> 0 `ui `uc ]
[e $U 25  ]
"104
[e :U 24 ]
[; ;fat_misc.c: 104: else
[; ;fat_misc.c: 105: lfn->String[0][0] = '\0';
"105
[e = *U + &U *U + &U . *U _lfn 0 * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 0 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux -> -> 0 `ui `uc ]
[e :U 25 ]
[e :U 23 ]
[; ;fat_misc.c: 107: return (char*)&lfn->String[0][0];
"107
[e ) &U *U + &U *U + &U . *U _lfn 0 * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux * -> -> -> 0 `i `ui `ux -> -> # *U &U *U + &U . *U _lfn 0 * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U . *U _lfn 0 `ui -> -> 5 `i `ui `ux `ui `ux ]
[e $UE 21  ]
[; ;fat_misc.c: 108: }
"108
[e :UE 21 ]
}
"114
[v _fatfs_entry_lfn_text `(i ~T0 @X0 1 ef1`*S6 ]
"115
{
[; ;fat_misc.c: 114: int fatfs_entry_lfn_text(struct fat_dir_entry *entry)
[; ;fat_misc.c: 115: {
[e :U _fatfs_entry_lfn_text ]
"114
[v _entry `*S6 ~T0 @X0 1 r1 ]
"115
[f ]
[; ;fat_misc.c: 116: if ((entry->Attr & 0x0F) == 0x0F)
"116
[e $ ! == & -> . *U _entry 1 `i -> 15 `i -> 15 `i 27  ]
[; ;fat_misc.c: 117: return 1;
"117
[e ) -> 1 `i ]
[e $UE 26  ]
[e $U 28  ]
"118
[e :U 27 ]
[; ;fat_misc.c: 118: else
[; ;fat_misc.c: 119: return 0;
"119
[e ) -> 0 `i ]
[e $UE 26  ]
[e :U 28 ]
[; ;fat_misc.c: 120: }
"120
[e :UE 26 ]
}
"126
[v _fatfs_entry_lfn_invalid `(i ~T0 @X0 1 ef1`*S6 ]
"127
{
[; ;fat_misc.c: 126: int fatfs_entry_lfn_invalid(struct fat_dir_entry *entry)
[; ;fat_misc.c: 127: {
[e :U _fatfs_entry_lfn_invalid ]
"126
[v _entry `*S6 ~T0 @X0 1 r1 ]
"127
[f ]
[; ;fat_misc.c: 128: if ( (entry->Name[0]==0x00) ||
[; ;fat_misc.c: 129: (entry->Name[0]==0xE5)||
[; ;fat_misc.c: 130: (entry->Attr==0x08) ||
[; ;fat_misc.c: 131: (entry->Attr & 0x06) )
"131
[e $ ! || || || == -> *U + &U . *U _entry 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _entry 0 `ui `ux `i -> 0 `i == -> *U + &U . *U _entry 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _entry 0 `ui `ux `i -> 229 `i == -> . *U _entry 1 `i -> 8 `i != & -> . *U _entry 1 `i -> 6 `i -> 0 `i 30  ]
[; ;fat_misc.c: 132: return 1;
"132
[e ) -> 1 `i ]
[e $UE 29  ]
[e $U 31  ]
"133
[e :U 30 ]
[; ;fat_misc.c: 133: else
[; ;fat_misc.c: 134: return 0;
"134
[e ) -> 0 `i ]
[e $UE 29  ]
[e :U 31 ]
[; ;fat_misc.c: 135: }
"135
[e :UE 29 ]
}
"141
[v _fatfs_entry_lfn_exists `(i ~T0 @X0 1 ef2`*S7`*S6 ]
"142
{
[; ;fat_misc.c: 141: int fatfs_entry_lfn_exists(struct lfn_cache *lfn, struct fat_dir_entry *entry)
[; ;fat_misc.c: 142: {
[e :U _fatfs_entry_lfn_exists ]
"141
[v _lfn `*S7 ~T0 @X0 1 r1 ]
[v _entry `*S6 ~T0 @X0 1 r2 ]
"142
[f ]
[; ;fat_misc.c: 143: if ( (entry->Attr!=0x0F) &&
[; ;fat_misc.c: 144: (entry->Name[0]!=0x00) &&
[; ;fat_misc.c: 145: (entry->Name[0]!=0xE5) &&
[; ;fat_misc.c: 146: (entry->Attr!=0x08) &&
[; ;fat_misc.c: 147: (!(entry->Attr&0x06)) &&
[; ;fat_misc.c: 148: (lfn->no_of_strings) )
"148
[e $ ! && && && && && != -> . *U _entry 1 `i -> 15 `i != -> *U + &U . *U _entry 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _entry 0 `ui `ux `i -> 0 `i != -> *U + &U . *U _entry 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _entry 0 `ui `ux `i -> 229 `i != -> . *U _entry 1 `i -> 8 `i ! != & -> . *U _entry 1 `i -> 6 `i -> 0 `i != -> . *U _lfn 2 `i -> -> -> 0 `i `uc `i 33  ]
[; ;fat_misc.c: 149: return 1;
"149
[e ) -> 1 `i ]
[e $UE 32  ]
[e $U 34  ]
"150
[e :U 33 ]
[; ;fat_misc.c: 150: else
[; ;fat_misc.c: 151: return 0;
"151
[e ) -> 0 `i ]
[e $UE 32  ]
[e :U 34 ]
[; ;fat_misc.c: 152: }
"152
[e :UE 32 ]
}
"157
[v _fatfs_entry_sfn_only `(i ~T0 @X0 1 ef1`*S6 ]
"158
{
[; ;fat_misc.c: 157: int fatfs_entry_sfn_only(struct fat_dir_entry *entry)
[; ;fat_misc.c: 158: {
[e :U _fatfs_entry_sfn_only ]
"157
[v _entry `*S6 ~T0 @X0 1 r1 ]
"158
[f ]
[; ;fat_misc.c: 159: if ( (entry->Attr!=0x0F) &&
[; ;fat_misc.c: 160: (entry->Name[0]!=0x00) &&
[; ;fat_misc.c: 161: (entry->Name[0]!=0xE5) &&
[; ;fat_misc.c: 162: (entry->Attr!=0x08) &&
[; ;fat_misc.c: 163: (!(entry->Attr&0x06)) )
"163
[e $ ! && && && && != -> . *U _entry 1 `i -> 15 `i != -> *U + &U . *U _entry 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _entry 0 `ui `ux `i -> 0 `i != -> *U + &U . *U _entry 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _entry 0 `ui `ux `i -> 229 `i != -> . *U _entry 1 `i -> 8 `i ! != & -> . *U _entry 1 `i -> 6 `i -> 0 `i 36  ]
[; ;fat_misc.c: 164: return 1;
"164
[e ) -> 1 `i ]
[e $UE 35  ]
[e $U 37  ]
"165
[e :U 36 ]
[; ;fat_misc.c: 165: else
[; ;fat_misc.c: 166: return 0;
"166
[e ) -> 0 `i ]
[e $UE 35  ]
[e :U 37 ]
[; ;fat_misc.c: 167: }
"167
[e :UE 35 ]
}
"172
[v _fatfs_entry_is_dir `(i ~T0 @X0 1 ef1`*S6 ]
"173
{
[; ;fat_misc.c: 172: int fatfs_entry_is_dir(struct fat_dir_entry *entry)
[; ;fat_misc.c: 173: {
[e :U _fatfs_entry_is_dir ]
"172
[v _entry `*S6 ~T0 @X0 1 r1 ]
"173
[f ]
[; ;fat_misc.c: 174: if (entry->Attr & 0x10)
"174
[e $ ! != & -> . *U _entry 1 `i -> 16 `i -> 0 `i 39  ]
[; ;fat_misc.c: 175: return 1;
"175
[e ) -> 1 `i ]
[e $UE 38  ]
[e $U 40  ]
"176
[e :U 39 ]
[; ;fat_misc.c: 176: else
[; ;fat_misc.c: 177: return 0;
"177
[e ) -> 0 `i ]
[e $UE 38  ]
[e :U 40 ]
[; ;fat_misc.c: 178: }
"178
[e :UE 38 ]
}
"182
[v _fatfs_entry_is_file `(i ~T0 @X0 1 ef1`*S6 ]
"183
{
[; ;fat_misc.c: 182: int fatfs_entry_is_file(struct fat_dir_entry *entry)
[; ;fat_misc.c: 183: {
[e :U _fatfs_entry_is_file ]
"182
[v _entry `*S6 ~T0 @X0 1 r1 ]
"183
[f ]
[; ;fat_misc.c: 184: if (entry->Attr & 0x20)
"184
[e $ ! != & -> . *U _entry 1 `i -> 32 `i -> 0 `i 42  ]
[; ;fat_misc.c: 185: return 1;
"185
[e ) -> 1 `i ]
[e $UE 41  ]
[e $U 43  ]
"186
[e :U 42 ]
[; ;fat_misc.c: 186: else
[; ;fat_misc.c: 187: return 0;
"187
[e ) -> 0 `i ]
[e $UE 41  ]
[e :U 43 ]
[; ;fat_misc.c: 188: }
"188
[e :UE 41 ]
}
"193
[v _fatfs_lfn_entries_required `(i ~T0 @X0 1 ef1`*uc ]
"194
{
[; ;fat_misc.c: 193: int fatfs_lfn_entries_required(char *filename)
[; ;fat_misc.c: 194: {
[e :U _fatfs_lfn_entries_required ]
"193
[v _filename `*uc ~T0 @X0 1 r1 ]
"194
[f ]
"195
[v _length `i ~T0 @X0 1 a ]
[; ;fat_misc.c: 195: int length = (int)strlen(filename);
[e = _length -> ( _strlen (1 -> _filename `*Cuc `i ]
[; ;fat_misc.c: 197: if (length)
"197
[e $ ! != _length -> 0 `i 45  ]
[; ;fat_misc.c: 198: return (length + 5 - 1) / 5;
"198
[e ) / - + _length -> 5 `i -> 1 `i -> 5 `i ]
[e $UE 44  ]
[e $U 46  ]
"199
[e :U 45 ]
[; ;fat_misc.c: 199: else
[; ;fat_misc.c: 200: return 0;
"200
[e ) -> 0 `i ]
[e $UE 44  ]
[e :U 46 ]
[; ;fat_misc.c: 201: }
"201
[e :UE 44 ]
}
"207
[v _fatfs_filename_to_lfn `(v ~T0 @X0 1 ef4`*uc`*uc`i`uc ]
"208
{
[; ;fat_misc.c: 207: void fatfs_filename_to_lfn(char *filename, uint8 *buffer, int entry, uint8 sfnChk)
[; ;fat_misc.c: 208: {
[e :U _fatfs_filename_to_lfn ]
"207
[v _filename `*uc ~T0 @X0 1 r1 ]
[v _buffer `*uc ~T0 @X0 1 r2 ]
[v _entry `i ~T0 @X0 1 r3 ]
[v _sfnChk `uc ~T0 @X0 1 r4 ]
"208
[f ]
"209
[v _i `i ~T0 @X0 1 a ]
[v F379 `i ~T0 @X0 -> 5 `i s ]
[i F379
:U ..
"210
-> 1 `i
-> 3 `i
-> 5 `i
-> 7 `i
-> 9 `i
..
]
[v _nameIndexes `i ~T0 @X0 -> 5 `i a ]
[; ;fat_misc.c: 209: int i;
[; ;fat_misc.c: 210: int nameIndexes[5] = {1,3,5,7,9};
[e = _nameIndexes F379 ]
"213
[v _length `i ~T0 @X0 1 a ]
[; ;fat_misc.c: 213: int length = (int)strlen(filename);
[e = _length -> ( _strlen (1 -> _filename `*Cuc `i ]
"214
[v _entriesRequired `i ~T0 @X0 1 a ]
[; ;fat_misc.c: 214: int entriesRequired = fatfs_lfn_entries_required(filename);
[e = _entriesRequired ( _fatfs_lfn_entries_required (1 _filename ]
"217
[v _start `i ~T0 @X0 1 a ]
[; ;fat_misc.c: 217: int start = entry * 5;
[e = _start * _entry -> 5 `i ]
[; ;fat_misc.c: 220: memset(buffer, 0x00, 32);
"220
[e ( _memset (3 , , -> _buffer `*v -> 0 `i -> -> 32 `i `ui ]
[; ;fat_misc.c: 223: buffer[0] = (uint8)(((entriesRequired-1)==entry)?(0x40|(entry+1)):(entry+1));
"223
[e = *U + _buffer * -> -> 0 `i `x -> -> # *U _buffer `i `x -> ? == - _entriesRequired -> 1 `i _entry : | -> 64 `i + _entry -> 1 `i + _entry -> 1 `i `uc ]
[; ;fat_misc.c: 226: buffer[11] = 0x0F;
"226
[e = *U + _buffer * -> -> 11 `i `x -> -> # *U _buffer `i `x -> -> 15 `i `uc ]
[; ;fat_misc.c: 229: buffer[13] = sfnChk;
"229
[e = *U + _buffer * -> -> 13 `i `x -> -> # *U _buffer `i `x _sfnChk ]
[; ;fat_misc.c: 232: for (i=0;i<5;i++)
"232
{
[e = _i -> 0 `i ]
[e $ < _i -> 5 `i 48  ]
[e $U 49  ]
"233
[e :U 48 ]
[; ;fat_misc.c: 233: {
{
[; ;fat_misc.c: 234: if ( (start+i) < length )
"234
[e $ ! < + _start _i _length 51  ]
[; ;fat_misc.c: 235: buffer[nameIndexes[i]] = filename[start+i];
"235
[e = *U + _buffer * -> *U + &U _nameIndexes * -> -> _i `ui `ux -> -> # *U &U _nameIndexes `ui `ux `x -> -> # *U _buffer `i `x *U + _filename * -> + _start _i `x -> -> # *U _filename `i `x ]
[e $U 52  ]
"236
[e :U 51 ]
[; ;fat_misc.c: 236: else if ( (start+i) == length )
[e $ ! == + _start _i _length 53  ]
[; ;fat_misc.c: 237: buffer[nameIndexes[i]] = 0x00;
"237
[e = *U + _buffer * -> *U + &U _nameIndexes * -> -> _i `ui `ux -> -> # *U &U _nameIndexes `ui `ux `x -> -> # *U _buffer `i `x -> -> 0 `i `uc ]
[e $U 54  ]
"238
[e :U 53 ]
[; ;fat_misc.c: 238: else
[; ;fat_misc.c: 239: {
"239
{
[; ;fat_misc.c: 240: buffer[nameIndexes[i]] = 0xFF;
"240
[e = *U + _buffer * -> *U + &U _nameIndexes * -> -> _i `ui `ux -> -> # *U &U _nameIndexes `ui `ux `x -> -> # *U _buffer `i `x -> -> 255 `i `uc ]
[; ;fat_misc.c: 241: buffer[nameIndexes[i]+1] = 0xFF;
"241
[e = *U + _buffer * -> + *U + &U _nameIndexes * -> -> _i `ui `ux -> -> # *U &U _nameIndexes `ui `ux -> 1 `i `x -> -> # *U _buffer `i `x -> -> 255 `i `uc ]
"242
}
[e :U 54 ]
[e :U 52 ]
"243
}
"232
[e ++ _i -> 1 `i ]
[e $ < _i -> 5 `i 48  ]
[e :U 49 ]
"243
}
[; ;fat_misc.c: 242: }
[; ;fat_misc.c: 243: }
[; ;fat_misc.c: 244: }
"244
[e :UE 47 ]
}
"250
[v _fatfs_sfn_create_entry `(v ~T0 @X0 1 ef5`*uc`ul`ul`*S6`i ]
"251
{
[; ;fat_misc.c: 250: void fatfs_sfn_create_entry(char *shortfilename, uint32 size, uint32 startCluster, struct fat_dir_entry *entry, int dir)
[; ;fat_misc.c: 251: {
[e :U _fatfs_sfn_create_entry ]
"250
[v _shortfilename `*uc ~T0 @X0 1 r1 ]
[v _size `ul ~T0 @X0 1 r2 ]
[v _startCluster `ul ~T0 @X0 1 r3 ]
[v _entry `*S6 ~T0 @X0 1 r4 ]
[v _dir `i ~T0 @X0 1 r5 ]
"251
[f ]
"252
[v _i `i ~T0 @X0 1 a ]
[; ;fat_misc.c: 252: int i;
[; ;fat_misc.c: 255: for (i=0;i<11;i++)
"255
{
[e = _i -> 0 `i ]
[e $ < _i -> 11 `i 56  ]
[e $U 57  ]
"256
[e :U 56 ]
[; ;fat_misc.c: 256: entry->Name[i] = shortfilename[i];
[e = *U + &U . *U _entry 0 * -> -> _i `ui `ux -> -> # *U &U . *U _entry 0 `ui `ux *U + _shortfilename * -> _i `x -> -> # *U _shortfilename `i `x ]
"255
[e ++ _i -> 1 `i ]
[e $ < _i -> 11 `i 56  ]
[e :U 57 ]
"256
}
[; ;fat_misc.c: 259: entry->CrtTimeTenth = 0x00;
"259
[e = . *U _entry 3 -> -> 0 `i `uc ]
[; ;fat_misc.c: 260: entry->CrtTime[1] = entry->CrtTime[0] = 0x00;
"260
[e = *U + &U . *U _entry 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _entry 4 `ui `ux = *U + &U . *U _entry 4 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _entry 4 `ui `ux -> -> 0 `i `uc ]
[; ;fat_misc.c: 261: entry->CrtDate[1] = 0x00;
"261
[e = *U + &U . *U _entry 5 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _entry 5 `ui `ux -> -> 0 `i `uc ]
[; ;fat_misc.c: 262: entry->CrtDate[0] = 0x20;
"262
[e = *U + &U . *U _entry 5 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _entry 5 `ui `ux -> -> 32 `i `uc ]
[; ;fat_misc.c: 263: entry->LstAccDate[1] = 0x00;
"263
[e = *U + &U . *U _entry 6 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _entry 6 `ui `ux -> -> 0 `i `uc ]
[; ;fat_misc.c: 264: entry->LstAccDate[0] = 0x20;
"264
[e = *U + &U . *U _entry 6 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _entry 6 `ui `ux -> -> 32 `i `uc ]
[; ;fat_misc.c: 265: entry->WrtTime[1] = entry->WrtTime[0] = 0x00;
"265
[e = *U + &U . *U _entry 8 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _entry 8 `ui `ux = *U + &U . *U _entry 8 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _entry 8 `ui `ux -> -> 0 `i `uc ]
[; ;fat_misc.c: 266: entry->WrtDate[1] = 0x00;
"266
[e = *U + &U . *U _entry 9 * -> -> -> 1 `i `ui `ux -> -> # *U &U . *U _entry 9 `ui `ux -> -> 0 `i `uc ]
[; ;fat_misc.c: 267: entry->WrtDate[0] = 0x20;
"267
[e = *U + &U . *U _entry 9 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _entry 9 `ui `ux -> -> 32 `i `uc ]
[; ;fat_misc.c: 269: if (!dir)
"269
[e $ ! ! != _dir -> 0 `i 59  ]
[; ;fat_misc.c: 270: entry->Attr = 0x20;
"270
[e = . *U _entry 1 -> -> 32 `i `uc ]
[e $U 60  ]
"271
[e :U 59 ]
[; ;fat_misc.c: 271: else
[; ;fat_misc.c: 272: entry->Attr = 0x10;
"272
[e = . *U _entry 1 -> -> 16 `i `uc ]
[e :U 60 ]
[; ;fat_misc.c: 274: entry->NTRes = 0x00;
"274
[e = . *U _entry 2 -> -> 0 `i `uc ]
[; ;fat_misc.c: 276: entry->FstClusHI = ((uint16)((startCluster>>16) & 0xFFFF));
"276
[e = . *U _entry 7 -> & >> _startCluster -> 16 `i -> -> 65535 `ui `ul `us ]
[; ;fat_misc.c: 277: entry->FstClusLO = ((uint16)((startCluster>>0) & 0xFFFF));
"277
[e = . *U _entry 10 -> & >> _startCluster -> 0 `i -> -> 65535 `ui `ul `us ]
[; ;fat_misc.c: 278: entry->FileSize = (size);
"278
[e = . *U _entry 11 _size ]
[; ;fat_misc.c: 279: }
"279
[e :UE 55 ]
}
"285
[v _fatfs_lfn_create_sfn `(i ~T0 @X0 1 ef2`*uc`*uc ]
"286
{
[; ;fat_misc.c: 285: int fatfs_lfn_create_sfn(char *sfn_output, char *filename)
[; ;fat_misc.c: 286: {
[e :U _fatfs_lfn_create_sfn ]
"285
[v _sfn_output `*uc ~T0 @X0 1 r1 ]
[v _filename `*uc ~T0 @X0 1 r2 ]
"286
[f ]
"287
[v _i `i ~T0 @X0 1 a ]
"288
[v _dotPos `i ~T0 @X0 1 a ]
[; ;fat_misc.c: 287: int i;
[; ;fat_misc.c: 288: int dotPos = -1;
[e = _dotPos -U -> 1 `i ]
"289
[v _ext `uc ~T0 @X0 -> 3 `i a ]
"290
[v _pos `i ~T0 @X0 1 a ]
"291
[v _len `i ~T0 @X0 1 a ]
[; ;fat_misc.c: 289: char ext[3];
[; ;fat_misc.c: 290: int pos;
[; ;fat_misc.c: 291: int len = (int)strlen(filename);
[e = _len -> ( _strlen (1 -> _filename `*Cuc `i ]
[; ;fat_misc.c: 294: if (filename[0]=='.')
"294
[e $ ! == -> *U + _filename * -> -> 0 `i `x -> -> # *U _filename `i `x `ui -> 46 `ui 62  ]
[; ;fat_misc.c: 295: return 0;
"295
[e ) -> 0 `i ]
[e $UE 61  ]
[e :U 62 ]
[; ;fat_misc.c: 297: memset(sfn_output, ' ', 11);
"297
[e ( _memset (3 , , -> _sfn_output `*v -> -> 32 `ui `i -> -> 11 `i `ui ]
[; ;fat_misc.c: 298: memset(ext, ' ', 3);
"298
[e ( _memset (3 , , -> &U _ext `*v -> -> 32 `ui `i -> -> 3 `i `ui ]
[; ;fat_misc.c: 301: for (i = 0; i< len; i++)
"301
{
[e = _i -> 0 `i ]
[e $U 66  ]
"302
[e :U 63 ]
[; ;fat_misc.c: 302: {
{
[; ;fat_misc.c: 303: if (filename[i]=='.')
"303
[e $ ! == -> *U + _filename * -> _i `x -> -> # *U _filename `i `x `ui -> 46 `ui 67  ]
[; ;fat_misc.c: 304: dotPos = i;
"304
[e = _dotPos _i ]
[e :U 67 ]
"305
}
"301
[e ++ _i -> 1 `i ]
[e :U 66 ]
[e $ < _i _len 63  ]
[e :U 64 ]
"305
}
[; ;fat_misc.c: 305: }
[; ;fat_misc.c: 308: if (dotPos!=-1)
"308
[e $ ! != _dotPos -U -> 1 `i 68  ]
[; ;fat_misc.c: 309: {
"309
{
[; ;fat_misc.c: 311: for (i = (dotPos+1); i < (dotPos+1+3); i++)
"311
{
[e = _i + _dotPos -> 1 `i ]
[e $U 72  ]
"312
[e :U 69 ]
[; ;fat_misc.c: 312: if (i<len)
[e $ ! < _i _len 73  ]
[; ;fat_misc.c: 313: ext[i-(dotPos+1)] = filename[i];
"313
[e = *U + &U _ext * -> -> - _i + _dotPos -> 1 `i `ui `ux -> -> # *U &U _ext `ui `ux *U + _filename * -> _i `x -> -> # *U _filename `i `x ]
[e :U 73 ]
"311
[e ++ _i -> 1 `i ]
[e :U 72 ]
[e $ < _i + + _dotPos -> 1 `i -> 3 `i 69  ]
[e :U 70 ]
"316
}
[; ;fat_misc.c: 316: len = dotPos;
[e = _len _dotPos ]
"317
}
[e :U 68 ]
[; ;fat_misc.c: 317: }
[; ;fat_misc.c: 320: pos = 0;
"320
[e = _pos -> 0 `i ]
[; ;fat_misc.c: 321: for (i=0;i<len;i++)
"321
{
[e = _i -> 0 `i ]
[e $U 77  ]
"322
[e :U 74 ]
[; ;fat_misc.c: 322: {
{
[; ;fat_misc.c: 323: if ( (filename[i]!=' ') && (filename[i]!='.') )
"323
[e $ ! && != -> *U + _filename * -> _i `x -> -> # *U _filename `i `x `ui -> 32 `ui != -> *U + _filename * -> _i `x -> -> # *U _filename `i `x `ui -> 46 `ui 78  ]
[; ;fat_misc.c: 324: {
"324
{
[; ;fat_misc.c: 325: if (filename[i] >= 'a' && filename[i] <= 'z')
"325
[e $ ! && >= -> *U + _filename * -> _i `x -> -> # *U _filename `i `x `ui -> 97 `ui <= -> *U + _filename * -> _i `x -> -> # *U _filename `i `x `ui -> 122 `ui 79  ]
[; ;fat_misc.c: 326: sfn_output[pos++] = filename[i] - 'a' + 'A';
"326
[e = *U + _sfn_output * -> ++ _pos -> 1 `i `x -> -> # *U _sfn_output `i `x -> + - -> *U + _filename * -> _i `x -> -> # *U _filename `i `x `ui -> 97 `ui -> 65 `ui `uc ]
[e $U 80  ]
"327
[e :U 79 ]
[; ;fat_misc.c: 327: else
[; ;fat_misc.c: 328: sfn_output[pos++] = filename[i];
"328
[e = *U + _sfn_output * -> ++ _pos -> 1 `i `x -> -> # *U _sfn_output `i `x *U + _filename * -> _i `x -> -> # *U _filename `i `x ]
[e :U 80 ]
"329
}
[e :U 78 ]
[; ;fat_misc.c: 329: }
[; ;fat_misc.c: 332: if (pos==8)
"332
[e $ ! == _pos -> 8 `i 81  ]
[; ;fat_misc.c: 333: break;
"333
[e $U 75  ]
[e :U 81 ]
"334
}
"321
[e ++ _i -> 1 `i ]
[e :U 77 ]
[e $ < _i _len 74  ]
[e :U 75 ]
"334
}
[; ;fat_misc.c: 334: }
[; ;fat_misc.c: 337: for (i=8;i<11;i++)
"337
{
[e = _i -> 8 `i ]
[e $ < _i -> 11 `i 82  ]
[e $U 83  ]
"338
[e :U 82 ]
[; ;fat_misc.c: 338: {
{
[; ;fat_misc.c: 339: if (ext[i-8] >= 'a' && ext[i-8] <= 'z')
"339
[e $ ! && >= -> *U + &U _ext * -> -> - _i -> 8 `i `ui `ux -> -> # *U &U _ext `ui `ux `ui -> 97 `ui <= -> *U + &U _ext * -> -> - _i -> 8 `i `ui `ux -> -> # *U &U _ext `ui `ux `ui -> 122 `ui 85  ]
[; ;fat_misc.c: 340: sfn_output[i] = ext[i-8] - 'a' + 'A';
"340
[e = *U + _sfn_output * -> _i `x -> -> # *U _sfn_output `i `x -> + - -> *U + &U _ext * -> -> - _i -> 8 `i `ui `ux -> -> # *U &U _ext `ui `ux `ui -> 97 `ui -> 65 `ui `uc ]
[e $U 86  ]
"341
[e :U 85 ]
[; ;fat_misc.c: 341: else
[; ;fat_misc.c: 342: sfn_output[i] = ext[i-8];
"342
[e = *U + _sfn_output * -> _i `x -> -> # *U _sfn_output `i `x *U + &U _ext * -> -> - _i -> 8 `i `ui `ux -> -> # *U &U _ext `ui `ux ]
[e :U 86 ]
"343
}
"337
[e ++ _i -> 1 `i ]
[e $ < _i -> 11 `i 82  ]
[e :U 83 ]
"343
}
[; ;fat_misc.c: 343: }
[; ;fat_misc.c: 345: return 1;
"345
[e ) -> 1 `i ]
[e $UE 61  ]
[; ;fat_misc.c: 346: }
"346
[e :UE 61 ]
}
"350
[v _fatfs_itoa `(v ~T0 @X0 1 sf2`ul`*uc ]
"351
{
[; ;fat_misc.c: 350: static void fatfs_itoa(uint32 num, char *s)
[; ;fat_misc.c: 351: {
[e :U _fatfs_itoa ]
"350
[v _num `ul ~T0 @X0 1 r1 ]
[v _s `*uc ~T0 @X0 1 r2 ]
"351
[f ]
"352
[v _cp `*uc ~T0 @X0 1 a ]
"353
[v _outbuf `uc ~T0 @X0 -> 12 `i a ]
[v F407 `Cuc ~T0 @X0 -> 0 `x s ]
[i F407
:U ..
-> 48 `c
-> 49 `c
-> 50 `c
-> 51 `c
-> 52 `c
-> 53 `c
-> 54 `c
-> 55 `c
-> 56 `c
-> 57 `c
-> 65 `c
-> 66 `c
-> 67 `c
-> 68 `c
-> 69 `c
-> 70 `c
-> 0 `c
..
]
"354
[v _digits `Cuc ~T0 @X0 17  a ]
[; ;fat_misc.c: 352: char* cp;
[; ;fat_misc.c: 353: char outbuf[12];
[; ;fat_misc.c: 354: const char digits[] = "0123456789ABCDEF";
[e = _digits F407 ]
[; ;fat_misc.c: 357: cp = outbuf;
"357
[e = _cp &U _outbuf ]
[; ;fat_misc.c: 358: do
"358
[e :U 90 ]
[; ;fat_misc.c: 359: {
"359
{
[; ;fat_misc.c: 360: *cp++ = digits[(int)(num % 10)];
"360
[e = *U ++ _cp * -> -> 1 `i `x -> -> # *U _cp `i `x *U + &U _digits * -> -> -> % _num -> -> -> 10 `i `l `ul `i `ui `ux -> -> # *U &U _digits `ui `ux ]
"361
}
[; ;fat_misc.c: 361: }
[; ;fat_misc.c: 362: while ((num /= 10) > 0);
"362
[e $ > =/ _num -> -> 10 `uc `ul -> -> -> 0 `i `l `ul 90  ]
[e :U 89 ]
[; ;fat_misc.c: 364: *cp-- = 0;
"364
[e = *U -- _cp * -> -> 1 `i `x -> -> # *U _cp `i `x -> -> 0 `i `uc ]
[; ;fat_misc.c: 367: while (cp >= outbuf)
"367
[e $U 91  ]
[e :U 92 ]
[; ;fat_misc.c: 368: *s++ = *cp--;
"368
[e = *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x *U -- _cp * -> -> 1 `i `x -> -> # *U _cp `i `x ]
[e :U 91 ]
"367
[e $ >= _cp &U _outbuf 92  ]
[e :U 93 ]
[; ;fat_misc.c: 370: *s = 0;
"370
[e = *U _s -> -> 0 `i `uc ]
[; ;fat_misc.c: 371: }
"371
[e :UE 87 ]
}
"380
[v _fatfs_lfn_generate_tail `(i ~T0 @X0 1 ef3`*uc`*uc`ul ]
"381
{
[; ;fat_misc.c: 380: int fatfs_lfn_generate_tail(char *sfn_output, char *sfn_input, uint32 tailNum)
[; ;fat_misc.c: 381: {
[e :U _fatfs_lfn_generate_tail ]
"380
[v _sfn_output `*uc ~T0 @X0 1 r1 ]
[v _sfn_input `*uc ~T0 @X0 1 r2 ]
[v _tailNum `ul ~T0 @X0 1 r3 ]
"381
[f ]
"382
[v _tail_chars `i ~T0 @X0 1 a ]
"383
[v _tail_str `uc ~T0 @X0 -> 12 `i a ]
[; ;fat_misc.c: 382: int tail_chars;
[; ;fat_misc.c: 383: char tail_str[12];
[; ;fat_misc.c: 385: if (tailNum > 99999)
"385
[e $ ! > _tailNum -> -> 99999 `l `ul 95  ]
[; ;fat_misc.c: 386: return 0;
"386
[e ) -> 0 `i ]
[e $UE 94  ]
[e :U 95 ]
[; ;fat_misc.c: 389: memset(tail_str, 0x00, sizeof(tail_str));
"389
[e ( _memset (3 , , -> &U _tail_str `*v -> 0 `i -> # _tail_str `ui ]
[; ;fat_misc.c: 390: tail_str[0] = '~';
"390
[e = *U + &U _tail_str * -> -> -> 0 `i `ui `ux -> -> # *U &U _tail_str `ui `ux -> -> 126 `ui `uc ]
[; ;fat_misc.c: 391: fatfs_itoa(tailNum, tail_str+1);
"391
[e ( _fatfs_itoa (2 , _tailNum + &U _tail_str * -> -> 1 `i `x -> -> # *U &U _tail_str `i `x ]
[; ;fat_misc.c: 394: memcpy(sfn_output, sfn_input, 11);
"394
[e ( _memcpy (3 , , -> _sfn_output `*v -> _sfn_input `*Cv -> -> 11 `i `ui ]
[; ;fat_misc.c: 397: tail_chars = (int)strlen(tail_str);
"397
[e = _tail_chars -> ( _strlen (1 -> &U _tail_str `*Cuc `i ]
[; ;fat_misc.c: 398: memcpy(sfn_output+(8-tail_chars), tail_str, tail_chars);
"398
[e ( _memcpy (3 , , -> + _sfn_output * -> - -> 8 `i _tail_chars `x -> -> # *U _sfn_output `i `x `*v -> &U _tail_str `*Cv -> _tail_chars `ui ]
[; ;fat_misc.c: 400: return 1;
"400
[e ) -> 1 `i ]
[e $UE 94  ]
[; ;fat_misc.c: 401: }
"401
[e :UE 94 ]
}
