

Microchip Technology PIC18 STD Macro Assembler V1.32 build 58300 
                                                                                               Tue Sep 23 15:02:12 2014

Microchip Technology Omniscient Code Generator (Standard mode) build 58300
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	sm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	idataBANK2,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,delta=1
   160                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   163  0000                     
   164                           	psect	idataBANK1
   165  003EB7                     __pidataBANK1:
   166                           	opt stack 0
   167                           
   168                           ;initializer for fatfs_filename_to_lfn@F379
   169  003EB7  0001               	dw	1
   170  003EB9  0003               	dw	3
   171  003EBB  0005               	dw	5
   172  003EBD  0007               	dw	7
   173  003EBF  0009               	dw	9
   174                           
   175                           ;initializer for Switch@F4803
   176  003EC1  65                 	db	101
   177  003EC2  78                 	db	120
   178  003EC3  69                 	db	105
   179  003EC4  74                 	db	116
   180  003EC5  00                 	db	0
   181                           
   182                           ;initializer for Check_extension@F4792
   183  003EC6  62                 	db	98
   184  003EC7  69                 	db	105
   185  003EC8  6E                 	db	110
   186  003EC9  00                 	db	0
   187                           
   188                           ;initializer for Check_extension@F4794
   189  003ECA  74                 	db	116
   190  003ECB  78                 	db	120
   191  003ECC  74                 	db	116
   192  003ECD  00                 	db	0
   193                           
   194                           ;initializer for _Stat
   195  003ECE  01                 	db	1
   196                           
   197                           ;initializer for _config_1
   198  003ECF  2C                 	db	44
   199                           
   200                           ;initializer for _data
   201  003ED0  20                 	db	32
   202                           
   203                           ;initializer for _w
   204  003ED1  79                 	db	121
   205                           
   206                           	psect	idataBANK2
   207  004866                     __pidataBANK2:
   208                           	opt stack 0
   209                           
   210                           ;initializer for __cluster_size_table16
   211  004866  7FA8               	dw	32680
   212  004868  0000               	dw	0
   213  00486A  02                 	db	2
   214  00486B  0000               	dw	0
   215  00486D  0004               	dw	4
   216  00486F  04                 	db	4
   217  004870  0000               	dw	0
   218  004872  0008               	dw	8
   219  004874  08                 	db	8
   220  004875  0000               	dw	0
   221  004877  0010               	dw	16
   222  004879  10                 	db	16
   223  00487A  0000               	dw	0
   224  00487C  0020               	dw	32
   225  00487E  20                 	db	32
   226  00487F  0000               	dw	0
   227  004881  0040               	dw	64
   228  004883  40                 	db	64
   229  004884  0000               	dw	0
   230  004886  0080               	dw	128
   231  004888  80                 	db	128
   232  004889  0000               	dw	0
   233  00488B  0000               	dw	0
   234  00488D  00                 	db	0
   235                           
   236                           ;initializer for __cluster_size_table32
   237  00488E  2000               	dw	8192
   238  004890  0008               	dw	8
   239  004892  01                 	db	1
   240  004893  0000               	dw	0
   241  004895  0100               	dw	256
   242  004897  08                 	db	8
   243  004898  0000               	dw	0
   244  00489A  0200               	dw	512
   245  00489C  10                 	db	16
   246  00489D  0000               	dw	0
   247  00489F  0400               	dw	1024
   248  0048A1  20                 	db	32
   249  0048A2  FFFF               	dw	65535
   250  0048A4  FFFF               	dw	65535
   251  0048A6  40                 	db	64
   252  0048A7  0000               	dw	0
   253  0048A9  0000               	dw	0
   254  0048AB  00                 	db	0
   255                           
   256                           ;initializer for _str_0
   257  0048AC  20                 	db	32
   258  0048AD  20                 	db	32
   259  0048AE  20                 	db	32
   260  0048AF  20                 	db	32
   261  0048B0  20                 	db	32
   262  0048B1  20                 	db	32
   263  0048B2  20                 	db	32
   264  0048B3  20                 	db	32
   265  0048B4  20                 	db	32
   266  0048B5  20                 	db	32
   267  0048B6  20                 	db	32
   268  0048B7  20                 	db	32
   269  0048B8  20                 	db	32
   270  0048B9  20                 	db	32
   271  0048BA  20                 	db	32
   272  0048BB  20                 	db	32
   273  0048BC  20                 	db	32
   274  0048BD  20                 	db	32
   275  0048BE  20                 	db	32
   276  0048BF  20                 	db	32
   277  0048C0  20                 	db	32
   278  0048C1  20                 	db	32
   279  0048C2  20                 	db	32
   280  0048C3  20                 	db	32
   281  0048C4  20                 	db	32
   282  0048C5  00                 	db	0
   283                           
   284                           	psect	mediumconst
   285  00FA46                     __pmediumconst:
   286                           	opt stack 0
   287  00FA46  00                 	db	0
   288  00FA47                     fatfs_itoa@F407:
   289                           	opt stack 0
   290  00FA47  30                 	db	48
   291  00FA48  31                 	db	49
   292  00FA49  32                 	db	50
   293  00FA4A  33                 	db	51
   294  00FA4B  34                 	db	52
   295  00FA4C  35                 	db	53
   296  00FA4D  36                 	db	54
   297  00FA4E  37                 	db	55
   298  00FA4F  38                 	db	56
   299  00FA50  39                 	db	57
   300  00FA51  41                 	db	65
   301  00FA52  42                 	db	66
   302  00FA53  43                 	db	67
   303  00FA54  44                 	db	68
   304  00FA55  45                 	db	69
   305  00FA56  46                 	db	70
   306  00FA57  00                 	db	0
   307  00FA58                     __end_offatfs_itoa@F407:
   308                           	opt stack 0
   309  00FA58                     _dpowers:
   310                           	opt stack 0
   311  00FA58  0001               	dw	1
   312  00FA5A  000A               	dw	10
   313  00FA5C  0064               	dw	100
   314  00FA5E  03E8               	dw	1000
   315  00FA60  2710               	dw	10000
   316  00FA62                     __end_of_dpowers:
   317                           	opt stack 0
   318  00FA62                     _hexpowers:
   319                           	opt stack 0
   320  00FA62  0001               	dw	1
   321  00FA64  0010               	dw	16
   322  00FA66  0100               	dw	256
   323  00FA68  1000               	dw	4096
   324  00FA6A                     __end_of_hexpowers:
   325                           	opt stack 0
   326  0000                     _ADCON1	set	4033
   327  0000                     _CMCON	set	4020
   328  0000                     _LATA	set	3977
   329  0000                     _LATBbits	set	3978
   330  0000                     _LATCbits	set	3979
   331  0000                     _LATE	set	3981
   332  0000                     _PIE1bits	set	3997
   333  0000                     _PIR1bits	set	3998
   334  0000                     _PORTB	set	3969
   335  0000                     _RCREG	set	4014
   336  0000                     _RCSTA	set	4011
   337  0000                     _RCSTAbits	set	4011
   338  0000                     _SPBRG	set	4015
   339  0000                     _SPBRGH	set	4016
   340  0000                     _SSPBUF	set	4041
   341  0000                     _SSPCON1	set	4038
   342  0000                     _SSPCON1bits	set	4038
   343  0000                     _SSPSTAT	set	4039
   344  0000                     _SSPSTATbits	set	4039
   345  0000                     _TRISA	set	3986
   346  0000                     _TRISBbits	set	3987
   347  0000                     _TRISCbits	set	3988
   348  0000                     _TRISE	set	3990
   349  0000                     _TXREG	set	4013
   350  0000                     _TXSTA	set	4012
   351  0000                     _TXSTAbits	set	4012
   352  0000                     _BF	set	32312
   353  0000                     _CKE	set	32318
   354  0000                     _CKP	set	32308
   355  0000                     _LATB4	set	31828
   356  0000                     _SMP	set	32319
   357  0000                     _SSPEN	set	32309
   358  00FA6A                     __stringdata:
   359                           	opt stack 0
   360  00FA6A                     STR_65:
   361  00FA6A  0A                 	db	10
   362  00FA6B  0D                 	db	13
   363  00FA6C  50                 	db	80	;'P'
   364  00FA6D  6C                 	db	108	;'l'
   365  00FA6E  65                 	db	101	;'e'
   366  00FA6F  61                 	db	97	;'a'
   367  00FA70  73                 	db	115	;'s'
   368  00FA71  65                 	db	101	;'e'
   369  00FA72  20                 	db	32
   370  00FA73  73                 	db	115	;'s'
   371  00FA74  65                 	db	101	;'e'
   372  00FA75  6C                 	db	108	;'l'
   373  00FA76  65                 	db	101	;'e'
   374  00FA77  63                 	db	99	;'c'
   375  00FA78  74                 	db	116	;'t'
   376  00FA79  20                 	db	32
   377  00FA7A  61                 	db	97	;'a'
   378  00FA7B  6E                 	db	110	;'n'
   379  00FA7C  20                 	db	32
   380  00FA7D  6F                 	db	111	;'o'
   381  00FA7E  70                 	db	112	;'p'
   382  00FA7F  65                 	db	101	;'e'
   383  00FA80  72                 	db	114	;'r'
   384  00FA81  61                 	db	97	;'a'
   385  00FA82  74                 	db	116	;'t'
   386  00FA83  69                 	db	105	;'i'
   387  00FA84  6F                 	db	111	;'o'
   388  00FA85  6E                 	db	110	;'n'
   389  00FA86  3F                 	db	63	;'?'
   390  00FA87  0A                 	db	10
   391  00FA88  0D                 	db	13
   392  00FA89  46                 	db	70	;'F'
   393  00FA8A  69                 	db	105	;'i'
   394  00FA8B  6C                 	db	108	;'l'
   395  00FA8C  65                 	db	101	;'e'
   396  00FA8D  20                 	db	32
   397  00FA8E  3A                 	db	58	;':'
   398  00FA8F  20                 	db	32
   399  00FA90  0D                 	db	13
   400  00FA91  09                 	db	9
   401  00FA92  57                 	db	87	;'W'
   402  00FA93  72                 	db	114	;'r'
   403  00FA94  69                 	db	105	;'i'
   404  00FA95  74                 	db	116	;'t'
   405  00FA96  65                 	db	101	;'e'
   406  00FA97  20                 	db	32
   407  00FA98  20                 	db	32
   408  00FA99  20                 	db	32
   409  00FA9A  20                 	db	32
   410  00FA9B  2D                 	db	45
   411  00FA9C  20                 	db	32
   412  00FA9D  77                 	db	119	;'w'
   413  00FA9E  0A                 	db	10
   414  00FA9F  0D                 	db	13
   415  00FAA0  09                 	db	9
   416  00FAA1  52                 	db	82	;'R'
   417  00FAA2  65                 	db	101	;'e'
   418  00FAA3  61                 	db	97	;'a'
   419  00FAA4  64                 	db	100	;'d'
   420  00FAA5  20                 	db	32
   421  00FAA6  20                 	db	32
   422  00FAA7  20                 	db	32
   423  00FAA8  20                 	db	32
   424  00FAA9  20                 	db	32
   425  00FAAA  2D                 	db	45
   426  00FAAB  20                 	db	32
   427  00FAAC  72                 	db	114	;'r'
   428  00FAAD  0A                 	db	10
   429  00FAAE  0D                 	db	13
   430  00FAAF  09                 	db	9
   431  00FAB0  44                 	db	68	;'D'
   432  00FAB1  65                 	db	101	;'e'
   433  00FAB2  6C                 	db	108	;'l'
   434  00FAB3  65                 	db	101	;'e'
   435  00FAB4  74                 	db	116	;'t'
   436  00FAB5  65                 	db	101	;'e'
   437  00FAB6  20                 	db	32
   438  00FAB7  20                 	db	32
   439  00FAB8  20                 	db	32
   440  00FAB9  2D                 	db	45
   441  00FABA  20                 	db	32
   442  00FABB  64                 	db	100	;'d'
   443  00FABC  0A                 	db	10
   444  00FABD  0D                 	db	13
   445  00FABE  09                 	db	9
   446  00FABF  41                 	db	65	;'A'
   447  00FAC0  70                 	db	112	;'p'
   448  00FAC1  70                 	db	112	;'p'
   449  00FAC2  65                 	db	101	;'e'
   450  00FAC3  6E                 	db	110	;'n'
   451  00FAC4  64                 	db	100	;'d'
   452  00FAC5  20                 	db	32
   453  00FAC6  20                 	db	32
   454  00FAC7  20                 	db	32
   455  00FAC8  2D                 	db	45
   456  00FAC9  20                 	db	32
   457  00FACA  61                 	db	97	;'a'
   458  00FACB  0A                 	db	10
   459  00FACC  0D                 	db	13
   460  00FACD  09                 	db	9
   461  00FACE  4E                 	db	78	;'N'
   462  00FACF  65                 	db	101	;'e'
   463  00FAD0  77                 	db	119	;'w'
   464  00FAD1  20                 	db	32
   465  00FAD2  44                 	db	68	;'D'
   466  00FAD3  69                 	db	105	;'i'
   467  00FAD4  72                 	db	114	;'r'
   468  00FAD5  20                 	db	32
   469  00FAD6  20                 	db	32
   470  00FAD7  2D                 	db	45
   471  00FAD8  20                 	db	32
   472  00FAD9  6E                 	db	110	;'n'
   473  00FADA  0A                 	db	10
   474  00FADB  0D                 	db	13
   475  00FADC  09                 	db	9
   476  00FADD  46                 	db	70	;'F'
   477  00FADE  6F                 	db	111	;'o'
   478  00FADF  72                 	db	114	;'r'
   479  00FAE0  6D                 	db	109	;'m'
   480  00FAE1  61                 	db	97	;'a'
   481  00FAE2  74                 	db	116	;'t'
   482  00FAE3  20                 	db	32
   483  00FAE4  20                 	db	32
   484  00FAE5  20                 	db	32
   485  00FAE6  2D                 	db	45
   486  00FAE7  20                 	db	32
   487  00FAE8  66                 	db	102	;'f'
   488  00FAE9  0A                 	db	10
   489  00FAEA  0D                 	db	13
   490  00FAEB  09                 	db	9
   491  00FAEC  4F                 	db	79	;'O'
   492  00FAED  70                 	db	112	;'p'
   493  00FAEE  65                 	db	101	;'e'
   494  00FAEF  6E                 	db	110	;'n'
   495  00FAF0  20                 	db	32
   496  00FAF1  44                 	db	68	;'D'
   497  00FAF2  69                 	db	105	;'i'
   498  00FAF3  72                 	db	114	;'r'
   499  00FAF4  20                 	db	32
   500  00FAF5  2D                 	db	45
   501  00FAF6  20                 	db	32
   502  00FAF7  78                 	db	120	;'x'
   503  00FAF8  0A                 	db	10
   504  00FAF9  0D                 	db	13
   505  00FAFA  00                 	db	0
   506  00FAFB                     STR_17:
   507  00FAFB  0A                 	db	10
   508  00FAFC  0D                 	db	13
   509  00FAFD  45                 	db	69	;'E'
   510  00FAFE  6E                 	db	110	;'n'
   511  00FAFF  74                 	db	116	;'t'
   512  00FB00  65                 	db	101	;'e'
   513  00FB01  72                 	db	114	;'r'
   514  00FB02  20                 	db	32
   515  00FB03  74                 	db	116	;'t'
   516  00FB04  68                 	db	104	;'h'
   517  00FB05  65                 	db	101	;'e'
   518  00FB06  20                 	db	32
   519  00FB07  66                 	db	102	;'f'
   520  00FB08  69                 	db	105	;'i'
   521  00FB09  6C                 	db	108	;'l'
   522  00FB0A  65                 	db	101	;'e'
   523  00FB0B  20                 	db	32
   524  00FB0C  6E                 	db	110	;'n'
   525  00FB0D  61                 	db	97	;'a'
   526  00FB0E  6D                 	db	109	;'m'
   527  00FB0F  65                 	db	101	;'e'
   528  00FB10  2F                 	db	47
   529  00FB11  20                 	db	32
   530  00FB12  70                 	db	112	;'p'
   531  00FB13  61                 	db	97	;'a'
   532  00FB14  74                 	db	116	;'t'
   533  00FB15  68                 	db	104	;'h'
   534  00FB16  3F                 	db	63	;'?'
   535  00FB17  0A                 	db	10
   536  00FB18  0D                 	db	13
   537  00FB19  35                 	db	53	;'5'
   538  00FB1A  20                 	db	32
   539  00FB1B  63                 	db	99	;'c'
   540  00FB1C  68                 	db	104	;'h'
   541  00FB1D  61                 	db	97	;'a'
   542  00FB1E  72                 	db	114	;'r'
   543  00FB1F  61                 	db	97	;'a'
   544  00FB20  63                 	db	99	;'c'
   545  00FB21  74                 	db	116	;'t'
   546  00FB22  65                 	db	101	;'e'
   547  00FB23  72                 	db	114	;'r'
   548  00FB24  73                 	db	115	;'s'
   549  00FB25  20                 	db	32
   550  00FB26  77                 	db	119	;'w'
   551  00FB27  69                 	db	105	;'i'
   552  00FB28  74                 	db	116	;'t'
   553  00FB29  68                 	db	104	;'h'
   554  00FB2A  20                 	db	32
   555  00FB2B  66                 	db	102	;'f'
   556  00FB2C  69                 	db	105	;'i'
   557  00FB2D  6C                 	db	108	;'l'
   558  00FB2E  65                 	db	101	;'e'
   559  00FB2F  20                 	db	32
   560  00FB30  65                 	db	101	;'e'
   561  00FB31  78                 	db	120	;'x'
   562  00FB32  74                 	db	116	;'t'
   563  00FB33  65                 	db	101	;'e'
   564  00FB34  6E                 	db	110	;'n'
   565  00FB35  73                 	db	115	;'s'
   566  00FB36  69                 	db	105	;'i'
   567  00FB37  6F                 	db	111	;'o'
   568  00FB38  6E                 	db	110	;'n'
   569  00FB39  20                 	db	32
   570  00FB3A  2E                 	db	46
   571  00FB3B  74                 	db	116	;'t'
   572  00FB3C  78                 	db	120	;'x'
   573  00FB3D  74                 	db	116	;'t'
   574  00FB3E  20                 	db	32
   575  00FB3F  6F                 	db	111	;'o'
   576  00FB40  72                 	db	114	;'r'
   577  00FB41  20                 	db	32
   578  00FB42  2E                 	db	46
   579  00FB43  62                 	db	98	;'b'
   580  00FB44  69                 	db	105	;'i'
   581  00FB45  6E                 	db	110	;'n'
   582  00FB46  0A                 	db	10
   583  00FB47  0D                 	db	13
   584  00FB48  00                 	db	0
   585  00FB49                     STR_19:
   586  00FB49  0A                 	db	10
   587  00FB4A  0D                 	db	13
   588  00FB4B  46                 	db	70	;'F'
   589  00FB4C  69                 	db	105	;'i'
   590  00FB4D  6C                 	db	108	;'l'
   591  00FB4E  65                 	db	101	;'e'
   592  00FB4F  20                 	db	32
   593  00FB50  61                 	db	97	;'a'
   594  00FB51  6C                 	db	108	;'l'
   595  00FB52  72                 	db	114	;'r'
   596  00FB53  65                 	db	101	;'e'
   597  00FB54  61                 	db	97	;'a'
   598  00FB55  64                 	db	100	;'d'
   599  00FB56  79                 	db	121	;'y'
   600  00FB57  20                 	db	32
   601  00FB58  65                 	db	101	;'e'
   602  00FB59  78                 	db	120	;'x'
   603  00FB5A  69                 	db	105	;'i'
   604  00FB5B  73                 	db	115	;'s'
   605  00FB5C  74                 	db	116	;'t'
   606  00FB5D  73                 	db	115	;'s'
   607  00FB5E  2E                 	db	46
   608  00FB5F  2E                 	db	46
   609  00FB60  21                 	db	33
   610  00FB61  0A                 	db	10
   611  00FB62  0D                 	db	13
   612  00FB63  44                 	db	68	;'D'
   613  00FB64  6F                 	db	111	;'o'
   614  00FB65  20                 	db	32
   615  00FB66  79                 	db	121	;'y'
   616  00FB67  6F                 	db	111	;'o'
   617  00FB68  75                 	db	117	;'u'
   618  00FB69  20                 	db	32
   619  00FB6A  77                 	db	119	;'w'
   620  00FB6B  61                 	db	97	;'a'
   621  00FB6C  6E                 	db	110	;'n'
   622  00FB6D  74                 	db	116	;'t'
   623  00FB6E  20                 	db	32
   624  00FB6F  74                 	db	116	;'t'
   625  00FB70  6F                 	db	111	;'o'
   626  00FB71  20                 	db	32
   627  00FB72  72                 	db	114	;'r'
   628  00FB73  65                 	db	101	;'e'
   629  00FB74  70                 	db	112	;'p'
   630  00FB75  6C                 	db	108	;'l'
   631  00FB76  61                 	db	97	;'a'
   632  00FB77  63                 	db	99	;'c'
   633  00FB78  65                 	db	101	;'e'
   634  00FB79  3F                 	db	63	;'?'
   635  00FB7A  20                 	db	32
   636  00FB7B  79                 	db	121	;'y'
   637  00FB7C  2F                 	db	47
   638  00FB7D  6E                 	db	110	;'n'
   639  00FB7E  00                 	db	0
   640  00FB7F                     STR_9:
   641  00FB7F  46                 	db	70	;'F'
   642  00FB80  41                 	db	65	;'A'
   643  00FB81  54                 	db	84	;'T'
   644  00FB82  5F                 	db	95	;'_'
   645  00FB83  46                 	db	70	;'F'
   646  00FB84  53                 	db	83	;'S'
   647  00FB85  3A                 	db	58	;':'
   648  00FB86  20                 	db	32
   649  00FB87  45                 	db	69	;'E'
   650  00FB88  72                 	db	114	;'r'
   651  00FB89  72                 	db	114	;'r'
   652  00FB8A  6F                 	db	111	;'o'
   653  00FB8B  72                 	db	114	;'r'
   654  00FB8C  20                 	db	32
   655  00FB8D  63                 	db	99	;'c'
   656  00FB8E  6F                 	db	111	;'o'
   657  00FB8F  75                 	db	117	;'u'
   658  00FB90  6C                 	db	108	;'l'
   659  00FB91  64                 	db	100	;'d'
   660  00FB92  20                 	db	32
   661  00FB93  6E                 	db	110	;'n'
   662  00FB94  6F                 	db	111	;'o'
   663  00FB95  74                 	db	116	;'t'
   664  00FB96  20                 	db	32
   665  00FB97  6C                 	db	108	;'l'
   666  00FB98  6F                 	db	111	;'o'
   667  00FB99  61                 	db	97	;'a'
   668  00FB9A  64                 	db	100	;'d'
   669  00FB9B  20                 	db	32
   670  00FB9C  46                 	db	70	;'F'
   671  00FB9D  41                 	db	65	;'A'
   672  00FB9E  54                 	db	84	;'T'
   673  00FB9F  20                 	db	32
   674  00FBA0  64                 	db	100	;'d'
   675  00FBA1  65                 	db	101	;'e'
   676  00FBA2  74                 	db	116	;'t'
   677  00FBA3  61                 	db	97	;'a'
   678  00FBA4  69                 	db	105	;'i'
   679  00FBA5  6C                 	db	108	;'l'
   680  00FBA6  73                 	db	115	;'s'
   681  00FBA7  20                 	db	32
   682  00FBA8  28                 	db	40
   683  00FBA9  25                 	db	37
   684  00FBAA  64                 	db	100	;'d'
   685  00FBAB  29                 	db	41
   686  00FBAC  21                 	db	33
   687  00FBAD  0D                 	db	13
   688  00FBAE  0A                 	db	10
   689  00FBAF  00                 	db	0
   690  00FBB0                     STR_30:
   691  00FBB0  0A                 	db	10
   692  00FBB1  0D                 	db	13
   693  00FBB2  45                 	db	69	;'E'
   694  00FBB3  6E                 	db	110	;'n'
   695  00FBB4  74                 	db	116	;'t'
   696  00FBB5  65                 	db	101	;'e'
   697  00FBB6  72                 	db	114	;'r'
   698  00FBB7  20                 	db	32
   699  00FBB8  74                 	db	116	;'t'
   700  00FBB9  68                 	db	104	;'h'
   701  00FBBA  65                 	db	101	;'e'
   702  00FBBB  20                 	db	32
   703  00FBBC  64                 	db	100	;'d'
   704  00FBBD  61                 	db	97	;'a'
   705  00FBBE  74                 	db	116	;'t'
   706  00FBBF  61                 	db	97	;'a'
   707  00FBC0  20                 	db	32
   708  00FBC1  74                 	db	116	;'t'
   709  00FBC2  6F                 	db	111	;'o'
   710  00FBC3  20                 	db	32
   711  00FBC4  62                 	db	98	;'b'
   712  00FBC5  65                 	db	101	;'e'
   713  00FBC6  20                 	db	32
   714  00FBC7  61                 	db	97	;'a'
   715  00FBC8  70                 	db	112	;'p'
   716  00FBC9  70                 	db	112	;'p'
   717  00FBCA  65                 	db	101	;'e'
   718  00FBCB  6E                 	db	110	;'n'
   719  00FBCC  64                 	db	100	;'d'
   720  00FBCD  65                 	db	101	;'e'
   721  00FBCE  64                 	db	100	;'d'
   722  00FBCF  20                 	db	32
   723  00FBD0  74                 	db	116	;'t'
   724  00FBD1  6F                 	db	111	;'o'
   725  00FBD2  20                 	db	32
   726  00FBD3  74                 	db	116	;'t'
   727  00FBD4  68                 	db	104	;'h'
   728  00FBD5  65                 	db	101	;'e'
   729  00FBD6  20                 	db	32
   730  00FBD7  66                 	db	102	;'f'
   731  00FBD8  69                 	db	105	;'i'
   732  00FBD9  6C                 	db	108	;'l'
   733  00FBDA  65                 	db	101	;'e'
   734  00FBDB  2E                 	db	46
   735  00FBDC  2E                 	db	46
   736  00FBDD  0A                 	db	10
   737  00FBDE  0D                 	db	13
   738  00FBDF  00                 	db	0
   739  00FBE0                     STR_58:
   740  00FBE0  0A                 	db	10
   741  00FBE1  0D                 	db	13
   742  00FBE2  41                 	db	65	;'A'
   743  00FBE3  6C                 	db	108	;'l'
   744  00FBE4  6C                 	db	108	;'l'
   745  00FBE5  20                 	db	32
   746  00FBE6  64                 	db	100	;'d'
   747  00FBE7  61                 	db	97	;'a'
   748  00FBE8  74                 	db	116	;'t'
   749  00FBE9  61                 	db	97	;'a'
   750  00FBEA  20                 	db	32
   751  00FBEB  77                 	db	119	;'w'
   752  00FBEC  69                 	db	105	;'i'
   753  00FBED  6C                 	db	108	;'l'
   754  00FBEE  6C                 	db	108	;'l'
   755  00FBEF  20                 	db	32
   756  00FBF0  62                 	db	98	;'b'
   757  00FBF1  65                 	db	101	;'e'
   758  00FBF2  20                 	db	32
   759  00FBF3  6C                 	db	108	;'l'
   760  00FBF4  6F                 	db	111	;'o'
   761  00FBF5  73                 	db	115	;'s'
   762  00FBF6  74                 	db	116	;'t'
   763  00FBF7  2E                 	db	46
   764  00FBF8  2E                 	db	46
   765  00FBF9  21                 	db	33
   766  00FBFA  0A                 	db	10
   767  00FBFB  0D                 	db	13
   768  00FBFC  41                 	db	65	;'A'
   769  00FBFD  72                 	db	114	;'r'
   770  00FBFE  65                 	db	101	;'e'
   771  00FBFF  20                 	db	32
   772  00FC00  79                 	db	121	;'y'
   773  00FC01  6F                 	db	111	;'o'
   774  00FC02  75                 	db	117	;'u'
   775  00FC03  20                 	db	32
   776  00FC04  73                 	db	115	;'s'
   777  00FC05  75                 	db	117	;'u'
   778  00FC06  72                 	db	114	;'r'
   779  00FC07  65                 	db	101	;'e'
   780  00FC08  3F                 	db	63	;'?'
   781  00FC09  20                 	db	32
   782  00FC0A  79                 	db	121	;'y'
   783  00FC0B  2F                 	db	47
   784  00FC0C  6E                 	db	110	;'n'
   785  00FC0D  0A                 	db	10
   786  00FC0E  0D                 	db	13
   787  00FC0F  00                 	db	0
   788  00FC10                     STR_47:
   789  00FC10  0A                 	db	10
   790  00FC11  0D                 	db	13
   791  00FC12  45                 	db	69	;'E'
   792  00FC13  6E                 	db	110	;'n'
   793  00FC14  74                 	db	116	;'t'
   794  00FC15  65                 	db	101	;'e'
   795  00FC16  72                 	db	114	;'r'
   796  00FC17  20                 	db	32
   797  00FC18  74                 	db	116	;'t'
   798  00FC19  68                 	db	104	;'h'
   799  00FC1A  65                 	db	101	;'e'
   800  00FC1B  20                 	db	32
   801  00FC1C  66                 	db	102	;'f'
   802  00FC1D  69                 	db	105	;'i'
   803  00FC1E  6C                 	db	108	;'l'
   804  00FC1F  65                 	db	101	;'e'
   805  00FC20  20                 	db	32
   806  00FC21  4E                 	db	78	;'N'
   807  00FC22  61                 	db	97	;'a'
   808  00FC23  6D                 	db	109	;'m'
   809  00FC24  65                 	db	101	;'e'
   810  00FC25  2F                 	db	47
   811  00FC26  70                 	db	112	;'p'
   812  00FC27  61                 	db	97	;'a'
   813  00FC28  74                 	db	116	;'t'
   814  00FC29  68                 	db	104	;'h'
   815  00FC2A  3F                 	db	63	;'?'
   816  00FC2B  20                 	db	32
   817  00FC2C  35                 	db	53	;'5'
   818  00FC2D  20                 	db	32
   819  00FC2E  63                 	db	99	;'c'
   820  00FC2F  68                 	db	104	;'h'
   821  00FC30  61                 	db	97	;'a'
   822  00FC31  72                 	db	114	;'r'
   823  00FC32  61                 	db	97	;'a'
   824  00FC33  63                 	db	99	;'c'
   825  00FC34  74                 	db	116	;'t'
   826  00FC35  65                 	db	101	;'e'
   827  00FC36  72                 	db	114	;'r'
   828  00FC37  73                 	db	115	;'s'
   829  00FC38  0A                 	db	10
   830  00FC39  0D                 	db	13
   831  00FC3A  00                 	db	0
   832  00FC3B                     STR_27:
   833  00FC3B  0A                 	db	10
   834  00FC3C  0D                 	db	13
   835  00FC3D  46                 	db	70	;'F'
   836  00FC3E  69                 	db	105	;'i'
   837  00FC3F  6C                 	db	108	;'l'
   838  00FC40  65                 	db	101	;'e'
   839  00FC41  20                 	db	32
   840  00FC42  77                 	db	119	;'w'
   841  00FC43  72                 	db	114	;'r'
   842  00FC44  69                 	db	105	;'i'
   843  00FC45  74                 	db	116	;'t'
   844  00FC46  65                 	db	101	;'e'
   845  00FC47  20                 	db	32
   846  00FC48  66                 	db	102	;'f'
   847  00FC49  61                 	db	97	;'a'
   848  00FC4A  69                 	db	105	;'i'
   849  00FC4B  6C                 	db	108	;'l'
   850  00FC4C  65                 	db	101	;'e'
   851  00FC4D  64                 	db	100	;'d'
   852  00FC4E  2F                 	db	47
   853  00FC4F  20                 	db	32
   854  00FC50  49                 	db	73	;'I'
   855  00FC51  6E                 	db	110	;'n'
   856  00FC52  76                 	db	118	;'v'
   857  00FC53  61                 	db	97	;'a'
   858  00FC54  6C                 	db	108	;'l'
   859  00FC55  69                 	db	105	;'i'
   860  00FC56  64                 	db	100	;'d'
   861  00FC57  20                 	db	32
   862  00FC58  44                 	db	68	;'D'
   863  00FC59  69                 	db	105	;'i'
   864  00FC5A  72                 	db	114	;'r'
   865  00FC5B  65                 	db	101	;'e'
   866  00FC5C  63                 	db	99	;'c'
   867  00FC5D  74                 	db	116	;'t'
   868  00FC5E  6F                 	db	111	;'o'
   869  00FC5F  72                 	db	114	;'r'
   870  00FC60  79                 	db	121	;'y'
   871  00FC61  00                 	db	0
   872  00FC62                     STR_28:
   873  00FC62  0A                 	db	10
   874  00FC63  0D                 	db	13
   875  00FC64  45                 	db	69	;'E'
   876  00FC65  6E                 	db	110	;'n'
   877  00FC66  74                 	db	116	;'t'
   878  00FC67  65                 	db	101	;'e'
   879  00FC68  72                 	db	114	;'r'
   880  00FC69  20                 	db	32
   881  00FC6A  74                 	db	116	;'t'
   882  00FC6B  68                 	db	104	;'h'
   883  00FC6C  65                 	db	101	;'e'
   884  00FC6D  20                 	db	32
   885  00FC6E  66                 	db	102	;'f'
   886  00FC6F  69                 	db	105	;'i'
   887  00FC70  6C                 	db	108	;'l'
   888  00FC71  65                 	db	101	;'e'
   889  00FC72  20                 	db	32
   890  00FC73  4E                 	db	78	;'N'
   891  00FC74  61                 	db	97	;'a'
   892  00FC75  6D                 	db	109	;'m'
   893  00FC76  65                 	db	101	;'e'
   894  00FC77  3F                 	db	63	;'?'
   895  00FC78  20                 	db	32
   896  00FC79  35                 	db	53	;'5'
   897  00FC7A  20                 	db	32
   898  00FC7B  63                 	db	99	;'c'
   899  00FC7C  68                 	db	104	;'h'
   900  00FC7D  61                 	db	97	;'a'
   901  00FC7E  72                 	db	114	;'r'
   902  00FC7F  61                 	db	97	;'a'
   903  00FC80  63                 	db	99	;'c'
   904  00FC81  74                 	db	116	;'t'
   905  00FC82  65                 	db	101	;'e'
   906  00FC83  72                 	db	114	;'r'
   907  00FC84  73                 	db	115	;'s'
   908  00FC85  0A                 	db	10
   909  00FC86  0D                 	db	13
   910  00FC87  00                 	db	0
   911  00FC88                     STR_24:
   912  00FC88  0A                 	db	10
   913  00FC89  0D                 	db	13
   914  00FC8A  45                 	db	69	;'E'
   915  00FC8B  6E                 	db	110	;'n'
   916  00FC8C  74                 	db	116	;'t'
   917  00FC8D  65                 	db	101	;'e'
   918  00FC8E  72                 	db	114	;'r'
   919  00FC8F  20                 	db	32
   920  00FC90  74                 	db	116	;'t'
   921  00FC91  68                 	db	104	;'h'
   922  00FC92  65                 	db	101	;'e'
   923  00FC93  20                 	db	32
   924  00FC94  64                 	db	100	;'d'
   925  00FC95  61                 	db	97	;'a'
   926  00FC96  74                 	db	116	;'t'
   927  00FC97  61                 	db	97	;'a'
   928  00FC98  2E                 	db	46
   929  00FC99  2E                 	db	46
   930  00FC9A  28                 	db	40
   931  00FC9B  63                 	db	99	;'c'
   932  00FC9C  74                 	db	116	;'t'
   933  00FC9D  72                 	db	114	;'r'
   934  00FC9E  6C                 	db	108	;'l'
   935  00FC9F  2B                 	db	43
   936  00FCA0  73                 	db	115	;'s'
   937  00FCA1  20                 	db	32
   938  00FCA2  74                 	db	116	;'t'
   939  00FCA3  6F                 	db	111	;'o'
   940  00FCA4  20                 	db	32
   941  00FCA5  73                 	db	115	;'s'
   942  00FCA6  61                 	db	97	;'a'
   943  00FCA7  76                 	db	118	;'v'
   944  00FCA8  65                 	db	101	;'e'
   945  00FCA9  29                 	db	41
   946  00FCAA  0A                 	db	10
   947  00FCAB  0D                 	db	13
   948  00FCAC  00                 	db	0
   949  00FCAD                     STR_54:
   950  00FCAD  0A                 	db	10
   951  00FCAE  0D                 	db	13
   952  00FCAF  45                 	db	69	;'E'
   953  00FCB0  6E                 	db	110	;'n'
   954  00FCB1  74                 	db	116	;'t'
   955  00FCB2  65                 	db	101	;'e'
   956  00FCB3  72                 	db	114	;'r'
   957  00FCB4  20                 	db	32
   958  00FCB5  74                 	db	116	;'t'
   959  00FCB6  68                 	db	104	;'h'
   960  00FCB7  65                 	db	101	;'e'
   961  00FCB8  20                 	db	32
   962  00FCB9  6E                 	db	110	;'n'
   963  00FCBA  61                 	db	97	;'a'
   964  00FCBB  6D                 	db	109	;'m'
   965  00FCBC  65                 	db	101	;'e'
   966  00FCBD  20                 	db	32
   967  00FCBE  6F                 	db	111	;'o'
   968  00FCBF  66                 	db	102	;'f'
   969  00FCC0  20                 	db	32
   970  00FCC1  74                 	db	116	;'t'
   971  00FCC2  68                 	db	104	;'h'
   972  00FCC3  65                 	db	101	;'e'
   973  00FCC4  20                 	db	32
   974  00FCC5  64                 	db	100	;'d'
   975  00FCC6  69                 	db	105	;'i'
   976  00FCC7  72                 	db	114	;'r'
   977  00FCC8  65                 	db	101	;'e'
   978  00FCC9  63                 	db	99	;'c'
   979  00FCCA  74                 	db	116	;'t'
   980  00FCCB  6F                 	db	111	;'o'
   981  00FCCC  72                 	db	114	;'r'
   982  00FCCD  79                 	db	121	;'y'
   983  00FCCE  0A                 	db	10
   984  00FCCF  0D                 	db	13
   985  00FCD0  00                 	db	0
   986  00FCD1                     STR_53:
   987  00FCD1  0A                 	db	10
   988  00FCD2  0D                 	db	13
   989  00FCD3  46                 	db	70	;'F'
   990  00FCD4  6F                 	db	111	;'o'
   991  00FCD5  6C                 	db	108	;'l'
   992  00FCD6  64                 	db	100	;'d'
   993  00FCD7  65                 	db	101	;'e'
   994  00FCD8  72                 	db	114	;'r'
   995  00FCD9  20                 	db	32
   996  00FCDA  61                 	db	97	;'a'
   997  00FCDB  6C                 	db	108	;'l'
   998  00FCDC  72                 	db	114	;'r'
   999  00FCDD  65                 	db	101	;'e'
  1000  00FCDE  61                 	db	97	;'a'
  1001  00FCDF  64                 	db	100	;'d'
  1002  00FCE0  79                 	db	121	;'y'
  1003  00FCE1  20                 	db	32
  1004  00FCE2  65                 	db	101	;'e'
  1005  00FCE3  78                 	db	120	;'x'
  1006  00FCE4  69                 	db	105	;'i'
  1007  00FCE5  73                 	db	115	;'s'
  1008  00FCE6  74                 	db	116	;'t'
  1009  00FCE7  73                 	db	115	;'s'
  1010  00FCE8  2F                 	db	47
  1011  00FCE9  20                 	db	32
  1012  00FCEA  65                 	db	101	;'e'
  1013  00FCEB  72                 	db	114	;'r'
  1014  00FCEC  72                 	db	114	;'r'
  1015  00FCED  6F                 	db	111	;'o'
  1016  00FCEE  72                 	db	114	;'r'
  1017  00FCEF  2E                 	db	46
  1018  00FCF0  2E                 	db	46
  1019  00FCF1  21                 	db	33
  1020  00FCF2  00                 	db	0
  1021  00FCF3                     STR_49:
  1022  00FCF3  0A                 	db	10
  1023  00FCF4  0D                 	db	13
  1024  00FCF5  44                 	db	68	;'D'
  1025  00FCF6  65                 	db	101	;'e'
  1026  00FCF7  6C                 	db	108	;'l'
  1027  00FCF8  65                 	db	101	;'e'
  1028  00FCF9  74                 	db	116	;'t'
  1029  00FCFA  65                 	db	101	;'e'
  1030  00FCFB  20                 	db	32
  1031  00FCFC  66                 	db	102	;'f'
  1032  00FCFD  69                 	db	105	;'i'
  1033  00FCFE  6C                 	db	108	;'l'
  1034  00FCFF  65                 	db	101	;'e'
  1035  00FD00  20                 	db	32
  1036  00FD01  77                 	db	119	;'w'
  1037  00FD02  61                 	db	97	;'a'
  1038  00FD03  73                 	db	115	;'s'
  1039  00FD04  20                 	db	32
  1040  00FD05  73                 	db	115	;'s'
  1041  00FD06  75                 	db	117	;'u'
  1042  00FD07  63                 	db	99	;'c'
  1043  00FD08  63                 	db	99	;'c'
  1044  00FD09  65                 	db	101	;'e'
  1045  00FD0A  73                 	db	115	;'s'
  1046  00FD0B  73                 	db	115	;'s'
  1047  00FD0C  66                 	db	102	;'f'
  1048  00FD0D  75                 	db	117	;'u'
  1049  00FD0E  6C                 	db	108	;'l'
  1050  00FD0F  2E                 	db	46
  1051  00FD10  2E                 	db	46
  1052  00FD11  21                 	db	33
  1053  00FD12  0A                 	db	10
  1054  00FD13  00                 	db	0
  1055  00FD14                     STR_31:
  1056  00FD14  0A                 	db	10
  1057  00FD15  0D                 	db	13
  1058  00FD16  45                 	db	69	;'E'
  1059  00FD17  6E                 	db	110	;'n'
  1060  00FD18  74                 	db	116	;'t'
  1061  00FD19  65                 	db	101	;'e'
  1062  00FD1A  72                 	db	114	;'r'
  1063  00FD1B  20                 	db	32
  1064  00FD1C  74                 	db	116	;'t'
  1065  00FD1D  68                 	db	104	;'h'
  1066  00FD1E  65                 	db	101	;'e'
  1067  00FD1F  20                 	db	32
  1068  00FD20  6C                 	db	108	;'l'
  1069  00FD21  69                 	db	105	;'i'
  1070  00FD22  6E                 	db	110	;'n'
  1071  00FD23  65                 	db	101	;'e'
  1072  00FD24  20                 	db	32
  1073  00FD25  4E                 	db	78	;'N'
  1074  00FD26  6F                 	db	111	;'o'
  1075  00FD27  2E                 	db	46
  1076  00FD28  20                 	db	32
  1077  00FD29  74                 	db	116	;'t'
  1078  00FD2A  6F                 	db	111	;'o'
  1079  00FD2B  20                 	db	32
  1080  00FD2C  44                 	db	68	;'D'
  1081  00FD2D  65                 	db	101	;'e'
  1082  00FD2E  6C                 	db	108	;'l'
  1083  00FD2F  65                 	db	101	;'e'
  1084  00FD30  74                 	db	116	;'t'
  1085  00FD31  65                 	db	101	;'e'
  1086  00FD32  0A                 	db	10
  1087  00FD33  0D                 	db	13
  1088  00FD34  00                 	db	0
  1089  00FD35                     STR_62:
  1090  00FD35  0A                 	db	10
  1091  00FD36  63                 	db	99	;'c'
  1092  00FD37  61                 	db	97	;'a'
  1093  00FD38  72                 	db	114	;'r'
  1094  00FD39  64                 	db	100	;'d'
  1095  00FD3A  20                 	db	32
  1096  00FD3B  69                 	db	105	;'i'
  1097  00FD3C  6E                 	db	110	;'n'
  1098  00FD3D  69                 	db	105	;'i'
  1099  00FD3E  74                 	db	116	;'t'
  1100  00FD3F  69                 	db	105	;'i'
  1101  00FD40  61                 	db	97	;'a'
  1102  00FD41  6C                 	db	108	;'l'
  1103  00FD42  69                 	db	105	;'i'
  1104  00FD43  7A                 	db	122	;'z'
  1105  00FD44  61                 	db	97	;'a'
  1106  00FD45  74                 	db	116	;'t'
  1107  00FD46  69                 	db	105	;'i'
  1108  00FD47  6F                 	db	111	;'o'
  1109  00FD48  6E                 	db	110	;'n'
  1110  00FD49  20                 	db	32
  1111  00FD4A  66                 	db	102	;'f'
  1112  00FD4B  61                 	db	97	;'a'
  1113  00FD4C  69                 	db	105	;'i'
  1114  00FD4D  6C                 	db	108	;'l'
  1115  00FD4E  65                 	db	101	;'e'
  1116  00FD4F  64                 	db	100	;'d'
  1117  00FD50  2E                 	db	46
  1118  00FD51  2E                 	db	46
  1119  00FD52  2E                 	db	46
  1120  00FD53  21                 	db	33
  1121  00FD54  00                 	db	0
  1122  00FD55                     STR_59:
  1123  00FD55  0A                 	db	10
  1124  00FD56  0D                 	db	13
  1125  00FD57  45                 	db	69	;'E'
  1126  00FD58  6E                 	db	110	;'n'
  1127  00FD59  74                 	db	116	;'t'
  1128  00FD5A  65                 	db	101	;'e'
  1129  00FD5B  72                 	db	114	;'r'
  1130  00FD5C  20                 	db	32
  1131  00FD5D  74                 	db	116	;'t'
  1132  00FD5E  68                 	db	104	;'h'
  1133  00FD5F  65                 	db	101	;'e'
  1134  00FD60  20                 	db	32
  1135  00FD61  6E                 	db	110	;'n'
  1136  00FD62  61                 	db	97	;'a'
  1137  00FD63  6D                 	db	109	;'m'
  1138  00FD64  65                 	db	101	;'e'
  1139  00FD65  20                 	db	32
  1140  00FD66  6F                 	db	111	;'o'
  1141  00FD67  66                 	db	102	;'f'
  1142  00FD68  20                 	db	32
  1143  00FD69  74                 	db	116	;'t'
  1144  00FD6A  68                 	db	104	;'h'
  1145  00FD6B  65                 	db	101	;'e'
  1146  00FD6C  20                 	db	32
  1147  00FD6D  44                 	db	68	;'D'
  1148  00FD6E  69                 	db	105	;'i'
  1149  00FD6F  73                 	db	115	;'s'
  1150  00FD70  6B                 	db	107	;'k'
  1151  00FD71  0A                 	db	10
  1152  00FD72  0D                 	db	13
  1153  00FD73  00                 	db	0
  1154  00FD74  20                 	db	32
  1155  00FD75  52                 	db	82	;'R'
  1156  00FD76  6F                 	db	111	;'o'
  1157  00FD77  6F                 	db	111	;'o'
  1158  00FD78  74                 	db	116	;'t'
  1159  00FD79  20                 	db	32
  1160  00FD7A  44                 	db	68	;'D'
  1161  00FD7B  69                 	db	105	;'i'
  1162  00FD7C  72                 	db	114	;'r'
  1163  00FD7D  20                 	db	32
  1164  00FD7E  46                 	db	70	;'F'
  1165  00FD7F  69                 	db	105	;'i'
  1166  00FD80  72                 	db	114	;'r'
  1167  00FD81  73                 	db	115	;'s'
  1168  00FD82  74                 	db	116	;'t'
  1169  00FD83  20                 	db	32
  1170  00FD84  43                 	db	67	;'C'
  1171  00FD85  6C                 	db	108	;'l'
  1172  00FD86  75                 	db	117	;'u'
  1173  00FD87  73                 	db	115	;'s'
  1174  00FD88  74                 	db	116	;'t'
  1175  00FD89  65                 	db	101	;'e'
  1176  00FD8A  72                 	db	114	;'r'
  1177  00FD8B  20                 	db	32
  1178  00FD8C  3D                 	db	61	;'='
  1179  00FD8D  20                 	db	32
  1180  00FD8E  25                 	db	37
  1181  00FD8F  78                 	db	120	;'x'
  1182  00FD90  0D                 	db	13
  1183  00FD91  0A                 	db	10
  1184  00FD92  00                 	db	0
  1185  00FD93                     STR_63:
  1186  00FD93  45                 	db	69	;'E'
  1187  00FD94  52                 	db	82	;'R'
  1188  00FD95  52                 	db	82	;'R'
  1189  00FD96  4F                 	db	79	;'O'
  1190  00FD97  52                 	db	82	;'R'
  1191  00FD98  3A                 	db	58	;':'
  1192  00FD99  20                 	db	32
  1193  00FD9A  4D                 	db	77	;'M'
  1194  00FD9B  65                 	db	101	;'e'
  1195  00FD9C  64                 	db	100	;'d'
  1196  00FD9D  69                 	db	105	;'i'
  1197  00FD9E  61                 	db	97	;'a'
  1198  00FD9F  20                 	db	32
  1199  00FDA0  61                 	db	97	;'a'
  1200  00FDA1  74                 	db	116	;'t'
  1201  00FDA2  74                 	db	116	;'t'
  1202  00FDA3  61                 	db	97	;'a'
  1203  00FDA4  63                 	db	99	;'c'
  1204  00FDA5  68                 	db	104	;'h'
  1205  00FDA6  20                 	db	32
  1206  00FDA7  66                 	db	102	;'f'
  1207  00FDA8  61                 	db	97	;'a'
  1208  00FDA9  69                 	db	105	;'i'
  1209  00FDAA  6C                 	db	108	;'l'
  1210  00FDAB  65                 	db	101	;'e'
  1211  00FDAC  64                 	db	100	;'d'
  1212  00FDAD  0A                 	db	10
  1213  00FDAE  00                 	db	0
  1214  00FDAF                     STR_26:
  1215  00FDAF  0A                 	db	10
  1216  00FDB0  0D                 	db	13
  1217  00FDB1  0A                 	db	10
  1218  00FDB2  0D                 	db	13
  1219  00FDB3  46                 	db	70	;'F'
  1220  00FDB4  69                 	db	105	;'i'
  1221  00FDB5  6C                 	db	108	;'l'
  1222  00FDB6  65                 	db	101	;'e'
  1223  00FDB7  20                 	db	32
  1224  00FDB8  77                 	db	119	;'w'
  1225  00FDB9  72                 	db	114	;'r'
  1226  00FDBA  69                 	db	105	;'i'
  1227  00FDBB  74                 	db	116	;'t'
  1228  00FDBC  65                 	db	101	;'e'
  1229  00FDBD  20                 	db	32
  1230  00FDBE  63                 	db	99	;'c'
  1231  00FDBF  6F                 	db	111	;'o'
  1232  00FDC0  6D                 	db	109	;'m'
  1233  00FDC1  70                 	db	112	;'p'
  1234  00FDC2  6C                 	db	108	;'l'
  1235  00FDC3  65                 	db	101	;'e'
  1236  00FDC4  74                 	db	116	;'t'
  1237  00FDC5  65                 	db	101	;'e'
  1238  00FDC6  64                 	db	100	;'d'
  1239  00FDC7  2E                 	db	46
  1240  00FDC8  2E                 	db	46
  1241  00FDC9  21                 	db	33
  1242  00FDCA  00                 	db	0
  1243  00FDCB                     STR_48:
  1244  00FDCB  0A                 	db	10
  1245  00FDCC  0D                 	db	13
  1246  00FDCD  45                 	db	69	;'E'
  1247  00FDCE  52                 	db	82	;'R'
  1248  00FDCF  52                 	db	82	;'R'
  1249  00FDD0  4F                 	db	79	;'O'
  1250  00FDD1  52                 	db	82	;'R'
  1251  00FDD2  3A                 	db	58	;':'
  1252  00FDD3  20                 	db	32
  1253  00FDD4  44                 	db	68	;'D'
  1254  00FDD5  65                 	db	101	;'e'
  1255  00FDD6  6C                 	db	108	;'l'
  1256  00FDD7  65                 	db	101	;'e'
  1257  00FDD8  74                 	db	116	;'t'
  1258  00FDD9  65                 	db	101	;'e'
  1259  00FDDA  20                 	db	32
  1260  00FDDB  66                 	db	102	;'f'
  1261  00FDDC  69                 	db	105	;'i'
  1262  00FDDD  6C                 	db	108	;'l'
  1263  00FDDE  65                 	db	101	;'e'
  1264  00FDDF  20                 	db	32
  1265  00FDE0  66                 	db	102	;'f'
  1266  00FDE1  61                 	db	97	;'a'
  1267  00FDE2  69                 	db	105	;'i'
  1268  00FDE3  6C                 	db	108	;'l'
  1269  00FDE4  65                 	db	101	;'e'
  1270  00FDE5  64                 	db	100	;'d'
  1271  00FDE6  00                 	db	0
  1272  00FDE7  20                 	db	32
  1273  00FDE8  53                 	db	83	;'S'
  1274  00FDE9  65                 	db	101	;'e'
  1275  00FDEA  63                 	db	99	;'c'
  1276  00FDEB  74                 	db	116	;'t'
  1277  00FDEC  6F                 	db	111	;'o'
  1278  00FDED  72                 	db	114	;'r'
  1279  00FDEE  73                 	db	115	;'s'
  1280  00FDEF  20                 	db	32
  1281  00FDF0  50                 	db	80	;'P'
  1282  00FDF1  65                 	db	101	;'e'
  1283  00FDF2  72                 	db	114	;'r'
  1284  00FDF3  20                 	db	32
  1285  00FDF4  43                 	db	67	;'C'
  1286  00FDF5  6C                 	db	108	;'l'
  1287  00FDF6  75                 	db	117	;'u'
  1288  00FDF7  73                 	db	115	;'s'
  1289  00FDF8  74                 	db	116	;'t'
  1290  00FDF9  65                 	db	101	;'e'
  1291  00FDFA  72                 	db	114	;'r'
  1292  00FDFB  20                 	db	32
  1293  00FDFC  3D                 	db	61	;'='
  1294  00FDFD  20                 	db	32
  1295  00FDFE  25                 	db	37
  1296  00FDFF  64                 	db	100	;'d'
  1297  00FE00  0D                 	db	13
  1298  00FE01  0A                 	db	10
  1299  00FE02  00                 	db	0
  1300  00FE03  20                 	db	32
  1301  00FE04  43                 	db	67	;'C'
  1302  00FE05  6C                 	db	108	;'l'
  1303  00FE06  75                 	db	117	;'u'
  1304  00FE07  73                 	db	115	;'s'
  1305  00FE08  74                 	db	116	;'t'
  1306  00FE09  65                 	db	101	;'e'
  1307  00FE0A  72                 	db	114	;'r'
  1308  00FE0B  20                 	db	32
  1309  00FE0C  42                 	db	66	;'B'
  1310  00FE0D  65                 	db	101	;'e'
  1311  00FE0E  67                 	db	103	;'g'
  1312  00FE0F  69                 	db	105	;'i'
  1313  00FE10  6E                 	db	110	;'n'
  1314  00FE11  20                 	db	32
  1315  00FE12  4C                 	db	76	;'L'
  1316  00FE13  42                 	db	66	;'B'
  1317  00FE14  41                 	db	65	;'A'
  1318  00FE15  20                 	db	32
  1319  00FE16  3D                 	db	61	;'='
  1320  00FE17  20                 	db	32
  1321  00FE18  30                 	db	48	;'0'
  1322  00FE19  78                 	db	120	;'x'
  1323  00FE1A  25                 	db	37
  1324  00FE1B  78                 	db	120	;'x'
  1325  00FE1C  0D                 	db	13
  1326  00FE1D  0A                 	db	10
  1327  00FE1E  00                 	db	0
  1328  00FE1F                     STR_37:
  1329  00FE1F  0A                 	db	10
  1330  00FE20  0D                 	db	13
  1331  00FE21  46                 	db	70	;'F'
  1332  00FE22  69                 	db	105	;'i'
  1333  00FE23  6C                 	db	108	;'l'
  1334  00FE24  65                 	db	101	;'e'
  1335  00FE25  20                 	db	32
  1336  00FE26  6F                 	db	111	;'o'
  1337  00FE27  70                 	db	112	;'p'
  1338  00FE28  65                 	db	101	;'e'
  1339  00FE29  6E                 	db	110	;'n'
  1340  00FE2A  20                 	db	32
  1341  00FE2B  73                 	db	115	;'s'
  1342  00FE2C  75                 	db	117	;'u'
  1343  00FE2D  63                 	db	99	;'c'
  1344  00FE2E  63                 	db	99	;'c'
  1345  00FE2F  65                 	db	101	;'e'
  1346  00FE30  73                 	db	115	;'s'
  1347  00FE31  73                 	db	115	;'s'
  1348  00FE32  2E                 	db	46
  1349  00FE33  2E                 	db	46
  1350  00FE34  21                 	db	33
  1351  00FE35  0A                 	db	10
  1352  00FE36  0D                 	db	13
  1353  00FE37  00                 	db	0
  1354  00FE38                     STR_61:
  1355  00FE38  0A                 	db	10
  1356  00FE39  0D                 	db	13
  1357  00FE3A  63                 	db	99	;'c'
  1358  00FE3B  61                 	db	97	;'a'
  1359  00FE3C  72                 	db	114	;'r'
  1360  00FE3D  64                 	db	100	;'d'
  1361  00FE3E  20                 	db	32
  1362  00FE3F  69                 	db	105	;'i'
  1363  00FE40  6E                 	db	110	;'n'
  1364  00FE41  69                 	db	105	;'i'
  1365  00FE42  74                 	db	116	;'t'
  1366  00FE43  69                 	db	105	;'i'
  1367  00FE44  61                 	db	97	;'a'
  1368  00FE45  6C                 	db	108	;'l'
  1369  00FE46  69                 	db	105	;'i'
  1370  00FE47  7A                 	db	122	;'z'
  1371  00FE48  65                 	db	101	;'e'
  1372  00FE49  64                 	db	100	;'d'
  1373  00FE4A  2E                 	db	46
  1374  00FE4B  2E                 	db	46
  1375  00FE4C  21                 	db	33
  1376  00FE4D  0D                 	db	13
  1377  00FE4E  0A                 	db	10
  1378  00FE4F  00                 	db	0
  1379  00FE50                     STR_52:
  1380  00FE50  0A                 	db	10
  1381  00FE51  0D                 	db	13
  1382  00FE52  4E                 	db	78	;'N'
  1383  00FE53  65                 	db	101	;'e'
  1384  00FE54  77                 	db	119	;'w'
  1385  00FE55  20                 	db	32
  1386  00FE56  66                 	db	102	;'f'
  1387  00FE57  6F                 	db	111	;'o'
  1388  00FE58  6C                 	db	108	;'l'
  1389  00FE59  64                 	db	100	;'d'
  1390  00FE5A  65                 	db	101	;'e'
  1391  00FE5B  72                 	db	114	;'r'
  1392  00FE5C  20                 	db	32
  1393  00FE5D  63                 	db	99	;'c'
  1394  00FE5E  72                 	db	114	;'r'
  1395  00FE5F  65                 	db	101	;'e'
  1396  00FE60  61                 	db	97	;'a'
  1397  00FE61  74                 	db	116	;'t'
  1398  00FE62  65                 	db	101	;'e'
  1399  00FE63  64                 	db	100	;'d'
  1400  00FE64  2E                 	db	46
  1401  00FE65  2E                 	db	46
  1402  00FE66  21                 	db	33
  1403  00FE67  00                 	db	0
  1404  00FE68                     STR_15:
  1405  00FE68  0A                 	db	10
  1406  00FE69  0D                 	db	13
  1407  00FE6A  46                 	db	70	;'F'
  1408  00FE6B  69                 	db	105	;'i'
  1409  00FE6C  6C                 	db	108	;'l'
  1410  00FE6D  65                 	db	101	;'e'
  1411  00FE6E  20                 	db	32
  1412  00FE6F  65                 	db	101	;'e'
  1413  00FE70  78                 	db	120	;'x'
  1414  00FE71  74                 	db	116	;'t'
  1415  00FE72  65                 	db	101	;'e'
  1416  00FE73  6E                 	db	110	;'n'
  1417  00FE74  73                 	db	115	;'s'
  1418  00FE75  69                 	db	105	;'i'
  1419  00FE76  6F                 	db	111	;'o'
  1420  00FE77  6E                 	db	110	;'n'
  1421  00FE78  20                 	db	32
  1422  00FE79  65                 	db	101	;'e'
  1423  00FE7A  72                 	db	114	;'r'
  1424  00FE7B  72                 	db	114	;'r'
  1425  00FE7C  6F                 	db	111	;'o'
  1426  00FE7D  72                 	db	114	;'r'
  1427  00FE7E  21                 	db	33
  1428  00FE7F  00                 	db	0
  1429  00FE80  20                 	db	32
  1430  00FE81  46                 	db	70	;'F'
  1431  00FE82  41                 	db	65	;'A'
  1432  00FE83  54                 	db	84	;'T'
  1433  00FE84  20                 	db	32
  1434  00FE85  42                 	db	66	;'B'
  1435  00FE86  65                 	db	101	;'e'
  1436  00FE87  67                 	db	103	;'g'
  1437  00FE88  69                 	db	105	;'i'
  1438  00FE89  6E                 	db	110	;'n'
  1439  00FE8A  20                 	db	32
  1440  00FE8B  4C                 	db	76	;'L'
  1441  00FE8C  42                 	db	66	;'B'
  1442  00FE8D  41                 	db	65	;'A'
  1443  00FE8E  20                 	db	32
  1444  00FE8F  3D                 	db	61	;'='
  1445  00FE90  20                 	db	32
  1446  00FE91  30                 	db	48	;'0'
  1447  00FE92  78                 	db	120	;'x'
  1448  00FE93  25                 	db	37
  1449  00FE94  78                 	db	120	;'x'
  1450  00FE95  0D                 	db	13
  1451  00FE96  0A                 	db	10
  1452  00FE97  00                 	db	0
  1453  00FE98                     STR_50:
  1454  00FE98  0A                 	db	10
  1455  00FE99  0D                 	db	13
  1456  00FE9A  45                 	db	69	;'E'
  1457  00FE9B  6E                 	db	110	;'n'
  1458  00FE9C  74                 	db	116	;'t'
  1459  00FE9D  65                 	db	101	;'e'
  1460  00FE9E  72                 	db	114	;'r'
  1461  00FE9F  20                 	db	32
  1462  00FEA0  61                 	db	97	;'a'
  1463  00FEA1  20                 	db	32
  1464  00FEA2  6E                 	db	110	;'n'
  1465  00FEA3  61                 	db	97	;'a'
  1466  00FEA4  6D                 	db	109	;'m'
  1467  00FEA5  65                 	db	101	;'e'
  1468  00FEA6  2F                 	db	47
  1469  00FEA7  20                 	db	32
  1470  00FEA8  70                 	db	112	;'p'
  1471  00FEA9  61                 	db	97	;'a'
  1472  00FEAA  74                 	db	116	;'t'
  1473  00FEAB  68                 	db	104	;'h'
  1474  00FEAC  0A                 	db	10
  1475  00FEAD  0D                 	db	13
  1476  00FEAE  00                 	db	0
  1477  00FEAF                     STR_32:
  1478  00FEAF  0A                 	db	10
  1479  00FEB0  0D                 	db	13
  1480  00FEB1  53                 	db	83	;'S'
  1481  00FEB2  61                 	db	97	;'a'
  1482  00FEB3  76                 	db	118	;'v'
  1483  00FEB4  65                 	db	101	;'e'
  1484  00FEB5  20                 	db	32
  1485  00FEB6  74                 	db	116	;'t'
  1486  00FEB7  68                 	db	104	;'h'
  1487  00FEB8  65                 	db	101	;'e'
  1488  00FEB9  20                 	db	32
  1489  00FEBA  64                 	db	100	;'d'
  1490  00FEBB  61                 	db	97	;'a'
  1491  00FEBC  74                 	db	116	;'t'
  1492  00FEBD  61                 	db	97	;'a'
  1493  00FEBE  3F                 	db	63	;'?'
  1494  00FEBF  20                 	db	32
  1495  00FEC0  79                 	db	121	;'y'
  1496  00FEC1  2F                 	db	47
  1497  00FEC2  6E                 	db	110	;'n'
  1498  00FEC3  3F                 	db	63	;'?'
  1499  00FEC4  00                 	db	0
  1500  00FEC5                     STR_20:
  1501  00FEC5  0A                 	db	10
  1502  00FEC6  0D                 	db	13
  1503  00FEC7  46                 	db	70	;'F'
  1504  00FEC8  69                 	db	105	;'i'
  1505  00FEC9  6C                 	db	108	;'l'
  1506  00FECA  65                 	db	101	;'e'
  1507  00FECB  20                 	db	32
  1508  00FECC  72                 	db	114	;'r'
  1509  00FECD  65                 	db	101	;'e'
  1510  00FECE  70                 	db	112	;'p'
  1511  00FECF  6C                 	db	108	;'l'
  1512  00FED0  61                 	db	97	;'a'
  1513  00FED1  63                 	db	99	;'c'
  1514  00FED2  65                 	db	101	;'e'
  1515  00FED3  64                 	db	100	;'d'
  1516  00FED4  2E                 	db	46
  1517  00FED5  2E                 	db	46
  1518  00FED6  21                 	db	33
  1519  00FED7  0A                 	db	10
  1520  00FED8  0D                 	db	13
  1521  00FED9  00                 	db	0
  1522  00FEDA                     STR_56:
  1523  00FEDA  0A                 	db	10
  1524  00FEDB  0D                 	db	13
  1525  00FEDC  46                 	db	70	;'F'
  1526  00FEDD  6F                 	db	111	;'o'
  1527  00FEDE  72                 	db	114	;'r'
  1528  00FEDF  6D                 	db	109	;'m'
  1529  00FEE0  61                 	db	97	;'a'
  1530  00FEE1  74                 	db	116	;'t'
  1531  00FEE2  20                 	db	32
  1532  00FEE3  63                 	db	99	;'c'
  1533  00FEE4  6F                 	db	111	;'o'
  1534  00FEE5  6D                 	db	109	;'m'
  1535  00FEE6  70                 	db	112	;'p'
  1536  00FEE7  6C                 	db	108	;'l'
  1537  00FEE8  65                 	db	101	;'e'
  1538  00FEE9  74                 	db	116	;'t'
  1539  00FEEA  65                 	db	101	;'e'
  1540  00FEEB  2E                 	db	46
  1541  00FEEC  2E                 	db	46
  1542  00FEED  21                 	db	33
  1543  00FEEE  00                 	db	0
  1544  00FEEF                     STR_40:
  1545  00FEEF  0A                 	db	10
  1546  00FEF0  0D                 	db	13
  1547  00FEF1  66                 	db	102	;'f'
  1548  00FEF2  69                 	db	105	;'i'
  1549  00FEF3  6C                 	db	108	;'l'
  1550  00FEF4  65                 	db	101	;'e'
  1551  00FEF5  20                 	db	32
  1552  00FEF6  6E                 	db	110	;'n'
  1553  00FEF7  6F                 	db	111	;'o'
  1554  00FEF8  74                 	db	116	;'t'
  1555  00FEF9  20                 	db	32
  1556  00FEFA  66                 	db	102	;'f'
  1557  00FEFB  6F                 	db	111	;'o'
  1558  00FEFC  75                 	db	117	;'u'
  1559  00FEFD  6E                 	db	110	;'n'
  1560  00FEFE  64                 	db	100	;'d'
  1561  00FEFF  2E                 	db	46
  1562  00FF00  2E                 	db	46
  1563  00FF01  21                 	db	33
  1564  00FF02  00                 	db	0
  1565  00FF03                     STR_22:
  1566  00FF03  0A                 	db	10
  1567  00FF04  0D                 	db	13
  1568  00FF05  50                 	db	80	;'P'
  1569  00FF06  6C                 	db	108	;'l'
  1570  00FF07  65                 	db	101	;'e'
  1571  00FF08  61                 	db	97	;'a'
  1572  00FF09  73                 	db	115	;'s'
  1573  00FF0A  65                 	db	101	;'e'
  1574  00FF0B  20                 	db	32
  1575  00FF0C  65                 	db	101	;'e'
  1576  00FF0D  6E                 	db	110	;'n'
  1577  00FF0E  74                 	db	116	;'t'
  1578  00FF0F  65                 	db	101	;'e'
  1579  00FF10  72                 	db	114	;'r'
  1580  00FF11  20                 	db	32
  1581  00FF12  79                 	db	121	;'y'
  1582  00FF13  2F                 	db	47
  1583  00FF14  6E                 	db	110	;'n'
  1584  00FF15  3F                 	db	63	;'?'
  1585  00FF16  00                 	db	0
  1586  00FF17                     STR_57:
  1587  00FF17  0A                 	db	10
  1588  00FF18  0D                 	db	13
  1589  00FF19  46                 	db	70	;'F'
  1590  00FF1A  6F                 	db	111	;'o'
  1591  00FF1B  72                 	db	114	;'r'
  1592  00FF1C  6D                 	db	109	;'m'
  1593  00FF1D  61                 	db	97	;'a'
  1594  00FF1E  74                 	db	116	;'t'
  1595  00FF1F  20                 	db	32
  1596  00FF20  66                 	db	102	;'f'
  1597  00FF21  61                 	db	97	;'a'
  1598  00FF22  69                 	db	105	;'i'
  1599  00FF23  6C                 	db	108	;'l'
  1600  00FF24  65                 	db	101	;'e'
  1601  00FF25  64                 	db	100	;'d'
  1602  00FF26  2E                 	db	46
  1603  00FF27  2E                 	db	46
  1604  00FF28  21                 	db	33
  1605  00FF29  00                 	db	0
  1606  00FF2A                     STR_66:
  1607  00FF2A  0A                 	db	10
  1608  00FF2B  0D                 	db	13
  1609  00FF2C  49                 	db	73	;'I'
  1610  00FF2D  6E                 	db	110	;'n'
  1611  00FF2E  76                 	db	118	;'v'
  1612  00FF2F  61                 	db	97	;'a'
  1613  00FF30  6C                 	db	108	;'l'
  1614  00FF31  69                 	db	105	;'i'
  1615  00FF32  64                 	db	100	;'d'
  1616  00FF33  20                 	db	32
  1617  00FF34  45                 	db	69	;'E'
  1618  00FF35  6E                 	db	110	;'n'
  1619  00FF36  74                 	db	116	;'t'
  1620  00FF37  72                 	db	114	;'r'
  1621  00FF38  79                 	db	121	;'y'
  1622  00FF39  2E                 	db	46
  1623  00FF3A  2E                 	db	46
  1624  00FF3B  21                 	db	33
  1625  00FF3C  00                 	db	0
  1626  00FF3D                     STR_14:
  1627  00FF3D  0A                 	db	10
  1628  00FF3E  0D                 	db	13
  1629  00FF3F  45                 	db	69	;'E'
  1630  00FF40  78                 	db	120	;'x'
  1631  00FF41  74                 	db	116	;'t'
  1632  00FF42  65                 	db	101	;'e'
  1633  00FF43  6E                 	db	110	;'n'
  1634  00FF44  73                 	db	115	;'s'
  1635  00FF45  69                 	db	105	;'i'
  1636  00FF46  6F                 	db	111	;'o'
  1637  00FF47  6E                 	db	110	;'n'
  1638  00FF48  20                 	db	32
  1639  00FF49  46                 	db	70	;'F'
  1640  00FF4A  61                 	db	97	;'a'
  1641  00FF4B  69                 	db	105	;'i'
  1642  00FF4C  6C                 	db	108	;'l'
  1643  00FF4D  65                 	db	101	;'e'
  1644  00FF4E  64                 	db	100	;'d'
  1645  00FF4F  00                 	db	0
  1646  00FF50                     STR_34:
  1647  00FF50  0A                 	db	10
  1648  00FF51  0D                 	db	13
  1649  00FF52  46                 	db	70	;'F'
  1650  00FF53  69                 	db	105	;'i'
  1651  00FF54  6C                 	db	108	;'l'
  1652  00FF55  65                 	db	101	;'e'
  1653  00FF56  20                 	db	32
  1654  00FF57  6F                 	db	111	;'o'
  1655  00FF58  70                 	db	112	;'p'
  1656  00FF59  65                 	db	101	;'e'
  1657  00FF5A  6E                 	db	110	;'n'
  1658  00FF5B  20                 	db	32
  1659  00FF5C  66                 	db	102	;'f'
  1660  00FF5D  61                 	db	97	;'a'
  1661  00FF5E  69                 	db	105	;'i'
  1662  00FF5F  6C                 	db	108	;'l'
  1663  00FF60  65                 	db	101	;'e'
  1664  00FF61  64                 	db	100	;'d'
  1665  00FF62  00                 	db	0
  1666  00FF63                     STR_25:
  1667  00FF63  0A                 	db	10
  1668  00FF64  0D                 	db	13
  1669  00FF65  53                 	db	83	;'S'
  1670  00FF66  61                 	db	97	;'a'
  1671  00FF67  76                 	db	118	;'v'
  1672  00FF68  65                 	db	101	;'e'
  1673  00FF69  20                 	db	32
  1674  00FF6A  64                 	db	100	;'d'
  1675  00FF6B  61                 	db	97	;'a'
  1676  00FF6C  74                 	db	116	;'t'
  1677  00FF6D  61                 	db	97	;'a'
  1678  00FF6E  3F                 	db	63	;'?'
  1679  00FF6F  20                 	db	32
  1680  00FF70  79                 	db	121	;'y'
  1681  00FF71  2F                 	db	47
  1682  00FF72  6E                 	db	110	;'n'
  1683  00FF73  3F                 	db	63	;'?'
  1684  00FF74  00                 	db	0
  1685  00FF75                     STR_69:
  1686  00FF75  30                 	db	48	;'0'
  1687  00FF76  31                 	db	49	;'1'
  1688  00FF77  32                 	db	50	;'2'
  1689  00FF78  33                 	db	51	;'3'
  1690  00FF79  34                 	db	52	;'4'
  1691  00FF7A  35                 	db	53	;'5'
  1692  00FF7B  36                 	db	54	;'6'
  1693  00FF7C  37                 	db	55	;'7'
  1694  00FF7D  38                 	db	56	;'8'
  1695  00FF7E  39                 	db	57	;'9'
  1696  00FF7F  61                 	db	97	;'a'
  1697  00FF80  62                 	db	98	;'b'
  1698  00FF81  63                 	db	99	;'c'
  1699  00FF82  64                 	db	100	;'d'
  1700  00FF83  65                 	db	101	;'e'
  1701  00FF84  66                 	db	102	;'f'
  1702  00FF85  00                 	db	0
  1703  00FF86                     STR_11:
  1704  00FF86  0D                 	db	13
  1705  00FF87  0A                 	db	10
  1706  00FF88  44                 	db	68	;'D'
  1707  00FF89  69                 	db	105	;'i'
  1708  00FF8A  72                 	db	114	;'r'
  1709  00FF8B  65                 	db	101	;'e'
  1710  00FF8C  63                 	db	99	;'c'
  1711  00FF8D  74                 	db	116	;'t'
  1712  00FF8E  6F                 	db	111	;'o'
  1713  00FF8F  72                 	db	114	;'r'
  1714  00FF90  79                 	db	121	;'y'
  1715  00FF91  20                 	db	32
  1716  00FF92  25                 	db	37
  1717  00FF93  73                 	db	115	;'s'
  1718  00FF94  0D                 	db	13
  1719  00FF95  0A                 	db	10
  1720  00FF96  00                 	db	0
  1721  00FF97                     STR_13:
  1722  00FF97  25                 	db	37
  1723  00FF98  73                 	db	115	;'s'
  1724  00FF99  20                 	db	32
  1725  00FF9A  5B                 	db	91	;'['
  1726  00FF9B  25                 	db	37
  1727  00FF9C  64                 	db	100	;'d'
  1728  00FF9D  20                 	db	32
  1729  00FF9E  62                 	db	98	;'b'
  1730  00FF9F  79                 	db	121	;'y'
  1731  00FFA0  74                 	db	116	;'t'
  1732  00FFA1  65                 	db	101	;'e'
  1733  00FFA2  73                 	db	115	;'s'
  1734  00FFA3  5D                 	db	93	;']'
  1735  00FFA4  0D                 	db	13
  1736  00FFA5  0A                 	db	10
  1737  00FFA6  00                 	db	0
  1738  00FFA7  46                 	db	70	;'F'
  1739  00FFA8  41                 	db	65	;'A'
  1740  00FFA9  54                 	db	84	;'T'
  1741  00FFAA  20                 	db	32
  1742  00FFAB  64                 	db	100	;'d'
  1743  00FFAC  65                 	db	101	;'e'
  1744  00FFAD  74                 	db	116	;'t'
  1745  00FFAE  61                 	db	97	;'a'
  1746  00FFAF  69                 	db	105	;'i'
  1747  00FFB0  6C                 	db	108	;'l'
  1748  00FFB1  73                 	db	115	;'s'
  1749  00FFB2  3A                 	db	58	;':'
  1750  00FFB3  0D                 	db	13
  1751  00FFB4  0A                 	db	10
  1752  00FFB5  00                 	db	0
  1753  00FFB6                     STR_38:
  1754  00FFB6  46                 	db	70	;'F'
  1755  00FFB7  69                 	db	105	;'i'
  1756  00FFB8  6C                 	db	108	;'l'
  1757  00FFB9  65                 	db	101	;'e'
  1758  00FFBA  20                 	db	32
  1759  00FFBB  6E                 	db	110	;'n'
  1760  00FFBC  61                 	db	97	;'a'
  1761  00FFBD  6D                 	db	109	;'m'
  1762  00FFBE  65                 	db	101	;'e'
  1763  00FFBF  09                 	db	9
  1764  00FFC0  3A                 	db	58	;':'
  1765  00FFC1  09                 	db	9
  1766  00FFC2  00                 	db	0
  1767  00FFC3                     STR_12:
  1768  00FFC3  25                 	db	37
  1769  00FFC4  73                 	db	115	;'s'
  1770  00FFC5  20                 	db	32
  1771  00FFC6  3C                 	db	60	;'<'
  1772  00FFC7  44                 	db	68	;'D'
  1773  00FFC8  49                 	db	73	;'I'
  1774  00FFC9  52                 	db	82	;'R'
  1775  00FFCA  3E                 	db	62	;'>'
  1776  00FFCB  0D                 	db	13
  1777  00FFCC  0A                 	db	10
  1778  00FFCD  00                 	db	0
  1779  00FFCE  20                 	db	32
  1780  00FFCF  54                 	db	84	;'T'
  1781  00FFD0  79                 	db	121	;'y'
  1782  00FFD1  70                 	db	112	;'p'
  1783  00FFD2  65                 	db	101	;'e'
  1784  00FFD3  20                 	db	32
  1785  00FFD4  3D                 	db	61	;'='
  1786  00FFD5  25                 	db	37
  1787  00FFD6  73                 	db	115	;'s'
  1788  00FFD7  00                 	db	0
  1789  00FFD8                     STR_68:
  1790  00FFD8  28                 	db	40
  1791  00FFD9  6E                 	db	110	;'n'
  1792  00FFDA  75                 	db	117	;'u'
  1793  00FFDB  6C                 	db	108	;'l'
  1794  00FFDC  6C                 	db	108	;'l'
  1795  00FFDD  29                 	db	41
  1796  00FFDE  00                 	db	0
  1797  00FFDF                     STR_60:
  1798  00FFDF  44                 	db	68	;'D'
  1799  00FFE0  49                 	db	73	;'I'
  1800  00FFE1  53                 	db	83	;'S'
  1801  00FFE2  4B                 	db	75	;'K'
  1802  00FFE3  5F                 	db	95	;'_'
  1803  00FFE4  00                 	db	0
  1804  00FFE5  46                 	db	70	;'F'
  1805  00FFE6  41                 	db	65	;'A'
  1806  00FFE7  54                 	db	84	;'T'
  1807  00FFE8  33                 	db	51	;'3'
  1808  00FFE9  32                 	db	50	;'2'
  1809  00FFEA  00                 	db	0
  1810  00FFEB  46                 	db	70	;'F'
  1811  00FFEC  41                 	db	65	;'A'
  1812  00FFED  54                 	db	84	;'T'
  1813  00FFEE  31                 	db	49	;'1'
  1814  00FFEF  36                 	db	54	;'6'
  1815  00FFF0  00                 	db	0
  1816  00FFF1                     STR_55:
  1817  00FFF1  0A                 	db	10
  1818  00FFF2  0D                 	db	13
  1819  00FFF3  25                 	db	37
  1820  00FFF4  73                 	db	115	;'s'
  1821  00FFF5  00                 	db	0
  1822  00FFF6                     STR_64:
  1823  00FFF6  2F                 	db	47
  1824  00FFF7  00                 	db	0
  1825  00FFF8                     STR_29:
  1826  00FFF8  61                 	db	97	;'a'
  1827  00FFF9  00                 	db	0
  1828  00FFFA                     STR_23:
  1829  00FFFA  77                 	db	119	;'w'
  1830  00FFFB  00                 	db	0
  1831  00FFFC                     STR_10:
  1832  00FFFC  72                 	db	114	;'r'
  1833  00FFFD  00                 	db	0
  1834  00FFFE                     __end_of__stringdata:
  1835                           	opt stack 0
  1836                           
  1837                           ; #config settings
  1838  00FFFE  00                 	db	0	; dummy byte at the end
  1839  0000                     
  1840                           	psect	cinit
  1841  0051EA                     __pcinit:
  1842                           	opt stack 0
  1843  0051EA                     start_initialization:
  1844                           	opt stack 0
  1845  0051EA                     __initialization:
  1846                           	opt stack 0
  1847                           
  1848                           ; Clear objects allocated to BIGRAM (2255 bytes)
  1849  0051EA  EE04  F0F0         	lfsr	0,__pbssBIGRAM
  1850  0051EE  EE18 F0CF          	lfsr	1,2255
  1851  0051F2                     clear_0:
  1852  0051F2  6AEE               	clrf	postinc0,c
  1853  0051F4  50E5               	movf	postdec1,w,c
  1854  0051F6  50E1               	movf	fsr1l,w,c
  1855  0051F8  E1FC               	bnz	clear_0
  1856  0051FA  50E2               	movf	fsr1h,w,c
  1857  0051FC  E1FA               	bnz	clear_0
  1858                           
  1859                           ; Clear objects allocated to BANK4 (240 bytes)
  1860  0051FE  EE04  F000         	lfsr	0,__pbssBANK4
  1861  005202  0EF0               	movlw	240
  1862  005204                     clear_1:
  1863  005204  6AEE               	clrf	postinc0,c
  1864  005206  06E8               	decf	wreg,f,c
  1865  005208  E1FD               	bnz	clear_1
  1866                           
  1867                           ; Clear objects allocated to BANK3 (240 bytes)
  1868  00520A  EE03  F000         	lfsr	0,__pbssBANK3
  1869  00520E  0EF0               	movlw	240
  1870  005210                     clear_2:
  1871  005210  6AEE               	clrf	postinc0,c
  1872  005212  06E8               	decf	wreg,f,c
  1873  005214  E1FD               	bnz	clear_2
  1874                           
  1875                           ; Clear objects allocated to BANK2 (88 bytes)
  1876  005216  EE02  F060         	lfsr	0,__pbssBANK2
  1877  00521A  0E58               	movlw	88
  1878  00521C                     clear_3:
  1879  00521C  6AEE               	clrf	postinc0,c
  1880  00521E  06E8               	decf	wreg,f,c
  1881  005220  E1FD               	bnz	clear_3
  1882                           
  1883                           ; Clear objects allocated to BANK1 (83 bytes)
  1884  005222  EE01  F08B         	lfsr	0,__pbssBANK1
  1885  005226  0E53               	movlw	83
  1886  005228                     clear_4:
  1887  005228  6AEE               	clrf	postinc0,c
  1888  00522A  06E8               	decf	wreg,f,c
  1889  00522C  E1FD               	bnz	clear_4
  1890                           
  1891                           ; Initialize objects allocated to BANK2 (96 bytes)
  1892                           ; load TBLPTR registers with __pidataBANK2
  1893  00522E  0E66               	movlw	low __pidataBANK2
  1894  005230  6EF6               	movwf	tblptrl,c
  1895  005232  0E48               	movlw	high __pidataBANK2
  1896  005234  6EF7               	movwf	tblptrh,c
  1897  005236  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1898  005238  6EF8               	movwf	tblptru,c
  1899  00523A  EE02  F000         	lfsr	0,__pdataBANK2
  1900  00523E  EE10 F060          	lfsr	1,96
  1901  005242                     copy_data0:
  1902  005242  0009               	tblrd		*+
  1903  005244  CFF5 FFEE          	movff	tablat,postinc0
  1904  005248  50E5               	movf	postdec1,w,c
  1905  00524A  50E1               	movf	fsr1l,w,c
  1906  00524C  E1FA               	bnz	copy_data0
  1907                           
  1908                           ; Initialize objects allocated to BANK1 (27 bytes)
  1909                           ; load TBLPTR registers with __pidataBANK1
  1910  00524E  0EB7               	movlw	low __pidataBANK1
  1911  005250  6EF6               	movwf	tblptrl,c
  1912  005252  0E3E               	movlw	high __pidataBANK1
  1913  005254  6EF7               	movwf	tblptrh,c
  1914  005256  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1915  005258  6EF8               	movwf	tblptru,c
  1916  00525A  EE01  F0DE         	lfsr	0,__pdataBANK1
  1917  00525E  EE10 F01B          	lfsr	1,27
  1918  005262                     copy_data1:
  1919  005262  0009               	tblrd		*+
  1920  005264  CFF5 FFEE          	movff	tablat,postinc0
  1921  005268  50E5               	movf	postdec1,w,c
  1922  00526A  50E1               	movf	fsr1l,w,c
  1923  00526C  E1FA               	bnz	copy_data1
  1924  00526E                     end_of_initialization:
  1925                           	opt stack 0
  1926  00526E                     __end_of__initialization:
  1927                           	opt stack 0
  1928  00526E  0100               	movlb	0
  1929  005270  EF6C  F033         	goto	_main	;jump to C main() function
  1930                           tblptru	equ	0xFF8
  1931                           tblptrh	equ	0xFF7
  1932                           tblptrl	equ	0xFF6
  1933                           tablat	equ	0xFF5
  1934                           postinc0	equ	0xFEE
  1935                           wreg	equ	0xFE8
  1936                           postdec1	equ	0xFE5
  1937                           fsr1h	equ	0xFE2
  1938                           fsr1l	equ	0xFE1
  1939                           
  1940                           	psect	bssBANK1
  1941  00018B                     __pbssBANK1:
  1942                           	opt stack 0
  1943  00018B                     _CardType:
  1944                           	opt stack 0
  1945  00018B                     	ds	2
  1946  00018D                     _Timer1:
  1947                           	opt stack 0
  1948  00018D                     	ds	2
  1949  00018F                     _Timer2:
  1950                           	opt stack 0
  1951  00018F                     	ds	2
  1952  000191                     __filelib_init:
  1953                           	opt stack 0
  1954  000191                     	ds	2
  1955  000193                     __filelib_valid:
  1956                           	opt stack 0
  1957  000193                     	ds	2
  1958  000195                     _count:
  1959                           	opt stack 0
  1960  000195                     	ds	2
  1961  000197                     _file:
  1962                           	opt stack 0
  1963  000197                     	ds	2
  1964  000199                     _fptr:
  1965                           	opt stack 0
  1966  000199                     	ds	2
  1967  00019B                     _i:
  1968                           	opt stack 0
  1969  00019B                     	ds	2
  1970  00019D                     _j:
  1971                           	opt stack 0
  1972  00019D                     	ds	2
  1973  00019F                     _n:
  1974                           	opt stack 0
  1975  00019F                     	ds	2
  1976  0001A1                     _res:
  1977                           	opt stack 0
  1978  0001A1                     	ds	2
  1979  0001A3                     _v:
  1980                           	opt stack 0
  1981  0001A3                     	ds	2
  1982  0001A5                     _USART_Status:
  1983                           	opt stack 0
  1984  0001A5                     	ds	1
  1985  0001A6                     _c:
  1986                           	opt stack 0
  1987  0001A6                     	ds	1
  1988  0001A7                     _d:
  1989                           	opt stack 0
  1990  0001A7                     	ds	1
  1991  0001A8                     _f:
  1992                           	opt stack 0
  1993  0001A8                     	ds	1
  1994  0001A9                     _flag:
  1995                           	opt stack 0
  1996  0001A9                     	ds	1
  1997  0001AA                     _flag_1:
  1998                           	opt stack 0
  1999  0001AA                     	ds	1
  2000  0001AB                     _readdata:
  2001                           	opt stack 0
  2002  0001AB                     	ds	1
  2003  0001AC                     _t:
  2004                           	opt stack 0
  2005  0001AC                     	ds	1
  2006  0001AD                     _x:
  2007                           	opt stack 0
  2008  0001AD                     	ds	1
  2009  0001AE                     _z:
  2010                           	opt stack 0
  2011  0001AE                     	ds	1
  2012  0001AF                     _string:
  2013                           	opt stack 0
  2014  0001AF                     	ds	30
  2015  0001CD                     _dptr:
  2016                           	opt stack 0
  2017  0001CD                     	ds	9
  2018  0001D6                     __free_file_list:
  2019                           	opt stack 0
  2020  0001D6                     	ds	4
  2021  0001DA                     __open_file_list:
  2022                           	opt stack 0
  2023  0001DA                     	ds	4
  2024                           tblptru	equ	0xFF8
  2025                           tblptrh	equ	0xFF7
  2026                           tblptrl	equ	0xFF6
  2027                           tablat	equ	0xFF5
  2028                           postinc0	equ	0xFEE
  2029                           wreg	equ	0xFE8
  2030                           postdec1	equ	0xFE5
  2031                           fsr1h	equ	0xFE2
  2032                           fsr1l	equ	0xFE1
  2033                           
  2034                           	psect	dataBANK1
  2035  0001DE                     __pdataBANK1:
  2036                           	opt stack 0
  2037  0001DE                     fatfs_filename_to_lfn@F379:
  2038                           	opt stack 0
  2039  0001DE                     	ds	10
  2040  0001E8                     Switch@F4803:
  2041                           	opt stack 0
  2042  0001E8                     	ds	5
  2043  0001ED                     Check_extension@F4792:
  2044                           	opt stack 0
  2045  0001ED                     	ds	4
  2046  0001F1                     Check_extension@F4794:
  2047                           	opt stack 0
  2048  0001F1                     	ds	4
  2049  0001F5                     _Stat:
  2050                           	opt stack 0
  2051  0001F5                     	ds	1
  2052  0001F6                     _config_1:
  2053                           	opt stack 0
  2054  0001F6                     	ds	1
  2055  0001F7                     _data:
  2056                           	opt stack 0
  2057  0001F7                     	ds	1
  2058  0001F8                     _w:
  2059                           	opt stack 0
  2060  0001F8                     	ds	1
  2061                           tblptru	equ	0xFF8
  2062                           tblptrh	equ	0xFF7
  2063                           tblptrl	equ	0xFF6
  2064                           tablat	equ	0xFF5
  2065                           postinc0	equ	0xFEE
  2066                           wreg	equ	0xFE8
  2067                           postdec1	equ	0xFE5
  2068                           fsr1h	equ	0xFE2
  2069                           fsr1l	equ	0xFE1
  2070                           
  2071                           	psect	bssBANK2
  2072  000260                     __pbssBANK2:
  2073                           	opt stack 0
  2074  000260                     _array:
  2075                           	opt stack 0
  2076  000260                     	ds	41
  2077  000289                     _m:
  2078                           	opt stack 0
  2079  000289                     	ds	30
  2080  0002A7                     _s:
  2081                           	opt stack 0
  2082  0002A7                     	ds	17
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           postinc0	equ	0xFEE
  2088                           wreg	equ	0xFE8
  2089                           postdec1	equ	0xFE5
  2090                           fsr1h	equ	0xFE2
  2091                           fsr1l	equ	0xFE1
  2092                           
  2093                           	psect	dataBANK2
  2094  000200                     __pdataBANK2:
  2095                           	opt stack 0
  2096  000200                     __cluster_size_table16:
  2097                           	opt stack 0
  2098  000200                     	ds	40
  2099  000228                     __cluster_size_table32:
  2100                           	opt stack 0
  2101  000228                     	ds	30
  2102  000246                     _str_0:
  2103                           	opt stack 0
  2104  000246                     	ds	26
  2105                           tblptru	equ	0xFF8
  2106                           tblptrh	equ	0xFF7
  2107                           tblptrl	equ	0xFF6
  2108                           tablat	equ	0xFF5
  2109                           postinc0	equ	0xFEE
  2110                           wreg	equ	0xFE8
  2111                           postdec1	equ	0xFE5
  2112                           fsr1h	equ	0xFE2
  2113                           fsr1l	equ	0xFE1
  2114                           
  2115                           	psect	bssBANK3
  2116  000300                     __pbssBANK3:
  2117                           	opt stack 0
  2118  000300                     _str_1:
  2119                           	opt stack 0
  2120  000300                     	ds	240
  2121                           tblptru	equ	0xFF8
  2122                           tblptrh	equ	0xFF7
  2123                           tblptrl	equ	0xFF6
  2124                           tablat	equ	0xFF5
  2125                           postinc0	equ	0xFEE
  2126                           wreg	equ	0xFE8
  2127                           postdec1	equ	0xFE5
  2128                           fsr1h	equ	0xFE2
  2129                           fsr1l	equ	0xFE1
  2130                           
  2131                           	psect	bssBANK4
  2132  000400                     __pbssBANK4:
  2133                           	opt stack 0
  2134  000400                     _str:
  2135                           	opt stack 0
  2136  000400                     	ds	240
  2137                           tblptru	equ	0xFF8
  2138                           tblptrh	equ	0xFF7
  2139                           tblptrl	equ	0xFF6
  2140                           tablat	equ	0xFF5
  2141                           postinc0	equ	0xFEE
  2142                           wreg	equ	0xFE8
  2143                           postdec1	equ	0xFE5
  2144                           fsr1h	equ	0xFE2
  2145                           fsr1l	equ	0xFE1
  2146                           
  2147                           	psect	bssBIGRAM
  2148  0004F0                     __pbssBIGRAM:
  2149                           	opt stack 0
  2150  0004F0                     __files:
  2151                           	opt stack 0
  2152  0004F0                     	ds	1160
  2153  000978                     __fs:
  2154                           	opt stack 0
  2155  000978                     	ds	1095
  2156                           tblptru	equ	0xFF8
  2157                           tblptrh	equ	0xFF7
  2158                           tblptrl	equ	0xFF6
  2159                           tablat	equ	0xFF5
  2160                           postinc0	equ	0xFEE
  2161                           wreg	equ	0xFE8
  2162                           postdec1	equ	0xFE5
  2163                           fsr1h	equ	0xFE2
  2164                           fsr1l	equ	0xFE1
  2165                           
  2166                           	psect	cstackBANK1
  2167  000100                     __pcstackBANK1:
  2168                           	opt stack 0
  2169  000100                     fatfs_add_file_entry@pSname:
  2170                           	opt stack 0
  2171  000100                     fl_fwrite@buffer:
  2172                           	opt stack 0
  2173  000100                     fl_fread@sectorsRead:
  2174                           	opt stack 0
  2175  000100                     fatfs_get_file_entry@short_filename:
  2176                           	opt stack 0
  2177  000100                     fatfs_list_directory_next@short_filename:
  2178                           	opt stack 0
  2179                           
  2180                           ; 13 bytes @ 0x0
  2181  000100                     	ds	2
  2182  000102                     _fatfs_add_file_entry$3211:
  2183                           	opt stack 0
  2184                           
  2185                           ; 2 bytes @ 0x2
  2186  000102                     	ds	1
  2187  000103                     fl_fwrite@sectorsWrote:
  2188                           	opt stack 0
  2189                           
  2190                           ; 4 bytes @ 0x3
  2191  000103                     	ds	1
  2192  000104                     fatfs_add_file_entry@dirtySector:
  2193                           	opt stack 0
  2194  000104                     fl_fread@offset:
  2195                           	opt stack 0
  2196                           
  2197                           ; 4 bytes @ 0x4
  2198  000104                     	ds	2
  2199  000106                     fatfs_add_file_entry@x:
  2200                           	opt stack 0
  2201                           
  2202                           ; 4 bytes @ 0x6
  2203  000106                     	ds	1
  2204  000107                     fl_fwrite@offset:
  2205                           	opt stack 0
  2206                           
  2207                           ; 4 bytes @ 0x7
  2208  000107                     	ds	1
  2209  000108                     fl_fread@sector:
  2210                           	opt stack 0
  2211                           
  2212                           ; 4 bytes @ 0x8
  2213  000108                     	ds	2
  2214  00010A                     fatfs_add_file_entry@recordoffset:
  2215                           	opt stack 0
  2216                           
  2217                           ; 2 bytes @ 0xA
  2218  00010A                     	ds	1
  2219  00010B                     fl_fwrite@sector:
  2220                           	opt stack 0
  2221                           
  2222                           ; 4 bytes @ 0xB
  2223  00010B                     	ds	1
  2224  00010C                     fl_fread@copyCount:
  2225                           	opt stack 0
  2226  00010C                     fatfs_add_file_entry@foundEnd:
  2227                           	opt stack 0
  2228                           
  2229                           ; 2 bytes @ 0xC
  2230  00010C                     	ds	1
  2231  00010D                     fatfs_get_file_entry@x:
  2232                           	opt stack 0
  2233  00010D                     fatfs_list_directory_next@long_filename:
  2234                           	opt stack 0
  2235                           
  2236                           ; 2 bytes @ 0xD
  2237  00010D                     	ds	1
  2238  00010E                     fatfs_add_file_entry@i:
  2239                           	opt stack 0
  2240  00010E                     fl_fread@count:
  2241                           	opt stack 0
  2242                           
  2243                           ; 2 bytes @ 0xE
  2244  00010E                     	ds	1
  2245  00010F                     fatfs_add_file_entry@checksum:
  2246                           	opt stack 0
  2247  00010F                     fatfs_get_file_entry@long_filename:
  2248                           	opt stack 0
  2249  00010F                     fatfs_list_directory_next@dotRequired:
  2250                           	opt stack 0
  2251  00010F                     fl_fwrite@length:
  2252                           	opt stack 0
  2253                           
  2254                           ; 4 bytes @ 0xF
  2255  00010F                     	ds	1
  2256  000110                     fl_fread@bytesRead:
  2257                           	opt stack 0
  2258  000110                     fatfs_add_file_entry@entryCount:
  2259                           	opt stack 0
  2260                           
  2261                           ; 2 bytes @ 0x10
  2262  000110                     	ds	1
  2263  000111                     fatfs_get_file_entry@dotRequired:
  2264                           	opt stack 0
  2265  000111                     fatfs_list_directory_next@result:
  2266                           	opt stack 0
  2267                           
  2268                           ; 2 bytes @ 0x11
  2269  000111                     	ds	1
  2270  000112                     fatfs_add_file_entry@dirOffset:
  2271                           	opt stack 0
  2272  000112                     fl_fread@file:
  2273                           	opt stack 0
  2274                           
  2275                           ; 2 bytes @ 0x12
  2276  000112                     	ds	1
  2277  000113                     fatfs_add_file_entry@item:
  2278                           	opt stack 0
  2279  000113                     fatfs_get_file_entry@recordoffset:
  2280                           	opt stack 0
  2281  000113                     fatfs_list_directory_next@recordoffset:
  2282                           	opt stack 0
  2283  000113                     fl_fwrite@bytesWritten:
  2284                           	opt stack 0
  2285                           
  2286                           ; 4 bytes @ 0x13
  2287  000113                     	ds	1
  2288  000114                     fatfs_add_file_entry@dirSector:
  2289                           	opt stack 0
  2290                           
  2291                           ; 4 bytes @ 0x14
  2292  000114                     	ds	1
  2293  000115                     fatfs_get_file_entry@item:
  2294                           	opt stack 0
  2295  000115                     fatfs_list_directory_next@item:
  2296                           	opt stack 0
  2297                           
  2298                           ; 1 bytes @ 0x15
  2299  000115                     	ds	1
  2300  000116                     fatfs_list_directory_next@i:
  2301                           	opt stack 0
  2302  000116                     fatfs_get_file_entry@directoryEntry:
  2303                           	opt stack 0
  2304                           
  2305                           ; 2 bytes @ 0x16
  2306  000116                     	ds	1
  2307  000117                     fl_fwrite@copyCount:
  2308                           	opt stack 0
  2309  000117                     fatfs_list_directory_next@lfn:
  2310                           	opt stack 0
  2311                           
  2312                           ; 52 bytes @ 0x17
  2313  000117                     	ds	1
  2314  000118                     fatfs_get_file_entry@i:
  2315                           	opt stack 0
  2316  000118                     fatfs_add_file_entry@shortEntry:
  2317                           	opt stack 0
  2318                           
  2319                           ; 32 bytes @ 0x18
  2320  000118                     	ds	1
  2321  000119                     fatfs_get_file_entry@lfn:
  2322                           	opt stack 0
  2323                           
  2324                           ; 52 bytes @ 0x19
  2325  000119                     	ds	2
  2326  00011B                     fl_fwrite@file:
  2327                           	opt stack 0
  2328                           
  2329                           ; 2 bytes @ 0x1B
  2330  00011B                     	ds	48
  2331  00014B                     fatfs_list_directory_next@directoryEntry:
  2332                           	opt stack 0
  2333                           
  2334                           ; 2 bytes @ 0x4B
  2335  00014B                     	ds	2
  2336  00014D                     __open_file@file:
  2337                           	opt stack 0
  2338  00014D                     fl_listdirectory@path:
  2339                           	opt stack 0
  2340  00014D                     __create_directory@shortFilename:
  2341                           	opt stack 0
  2342  00014D                     __create_file@shortFilename:
  2343                           	opt stack 0
  2344                           
  2345                           ; 11 bytes @ 0x4D
  2346  00014D                     	ds	2
  2347  00014F                     fl_listdirectory@dirstat:
  2348                           	opt stack 0
  2349  00014F                     __open_file@sfEntry:
  2350                           	opt stack 0
  2351                           
  2352                           ; 32 bytes @ 0x4F
  2353  00014F                     	ds	9
  2354  000158                     fl_listdirectory@dirent:
  2355                           	opt stack 0
  2356  000158                     __create_directory@sfEntry:
  2357                           	opt stack 0
  2358  000158                     __create_file@sfEntry:
  2359                           	opt stack 0
  2360                           
  2361                           ; 32 bytes @ 0x58
  2362  000158                     	ds	32
  2363  000178                     __create_directory@i:
  2364                           	opt stack 0
  2365  000178                     __create_file@tailNum:
  2366                           	opt stack 0
  2367                           
  2368                           ; 2 bytes @ 0x78
  2369  000178                     	ds	2
  2370  00017A                     __create_directory@tailNum:
  2371                           	opt stack 0
  2372  00017A                     __create_file@file:
  2373                           	opt stack 0
  2374                           
  2375                           ; 2 bytes @ 0x7A
  2376  00017A                     	ds	2
  2377  00017C                     ??_fl_fopen:
  2378  00017C                     __create_directory@file:
  2379                           	opt stack 0
  2380                           
  2381                           ; 2 bytes @ 0x7C
  2382  00017C                     	ds	2
  2383  00017E                     fl_fopen@i:
  2384                           	opt stack 0
  2385                           
  2386                           ; 2 bytes @ 0x7E
  2387  00017E                     	ds	2
  2388  000180                     fl_fopen@file:
  2389                           	opt stack 0
  2390                           
  2391                           ; 2 bytes @ 0x80
  2392  000180                     	ds	2
  2393  000182                     fl_fopen@flags:
  2394                           	opt stack 0
  2395                           
  2396                           ; 1 bytes @ 0x82
  2397  000182                     	ds	1
  2398  000183                     ??_File_append:
  2399  000183                     ?_fl_remove:
  2400                           	opt stack 0
  2401  000183                     fl_remove@filename:
  2402                           	opt stack 0
  2403                           
  2404                           ; 2 bytes @ 0x83
  2405  000183                     	ds	2
  2406  000185                     fl_remove@res:
  2407                           	opt stack 0
  2408                           
  2409                           ; 2 bytes @ 0x85
  2410  000185                     	ds	2
  2411  000187                     fl_remove@file:
  2412                           	opt stack 0
  2413                           
  2414                           ; 2 bytes @ 0x87
  2415  000187                     	ds	2
  2416  000189                     ??_File_write:
  2417                           
  2418                           ; 0 bytes @ 0x89
  2419  000189                     	ds	1
  2420  00018A                     ??_main:
  2421                           
  2422                           ; 0 bytes @ 0x8A
  2423  00018A                     	ds	1
  2424                           tblptru	equ	0xFF8
  2425                           tblptrh	equ	0xFF7
  2426                           tblptrl	equ	0xFF6
  2427                           tablat	equ	0xFF5
  2428                           postinc0	equ	0xFEE
  2429                           wreg	equ	0xFE8
  2430                           postdec1	equ	0xFE5
  2431                           fsr1h	equ	0xFE2
  2432                           fsr1l	equ	0xFE1
  2433                           
  2434                           	psect	cstackBANK0
  2435  000080                     __pcstackBANK0:
  2436                           	opt stack 0
  2437  000080                     ?_fatfs_free_cluster_chain:
  2438                           	opt stack 0
  2439  000080                     ?_fatfs_sector_reader:
  2440                           	opt stack 0
  2441  000080                     ?_fatfs_fat_add_cluster_to_chain:
  2442                           	opt stack 0
  2443  000080                     ?__read_sectors:
  2444                           	opt stack 0
  2445  000080                     fatfs_sector_reader@fs:
  2446                           	opt stack 0
  2447  000080                     __read_sectors@file:
  2448                           	opt stack 0
  2449  000080                     fatfs_free_cluster_chain@fs:
  2450                           	opt stack 0
  2451  000080                     fatfs_fat_add_cluster_to_chain@fs:
  2452                           	opt stack 0
  2453  000080                     fatfs_find_blank_cluster@nextcluster:
  2454                           	opt stack 0
  2455                           
  2456                           ; 4 bytes @ 0x0
  2457  000080                     	ds	2
  2458  000082                     fatfs_sector_reader@start_cluster:
  2459                           	opt stack 0
  2460  000082                     __read_sectors@offset:
  2461                           	opt stack 0
  2462  000082                     fatfs_free_cluster_chain@start_cluster:
  2463                           	opt stack 0
  2464  000082                     fatfs_fat_add_cluster_to_chain@start_cluster:
  2465                           	opt stack 0
  2466                           
  2467                           ; 4 bytes @ 0x2
  2468  000082                     	ds	2
  2469  000084                     fatfs_find_blank_cluster@fat_sector_offset:
  2470                           	opt stack 0
  2471                           
  2472                           ; 4 bytes @ 0x4
  2473  000084                     	ds	2
  2474  000086                     __read_sectors@buffer:
  2475                           	opt stack 0
  2476  000086                     fatfs_sector_reader@offset:
  2477                           	opt stack 0
  2478  000086                     fatfs_free_cluster_chain@last_cluster:
  2479                           	opt stack 0
  2480  000086                     fatfs_fat_add_cluster_to_chain@newEntry:
  2481                           	opt stack 0
  2482                           
  2483                           ; 4 bytes @ 0x6
  2484  000086                     	ds	2
  2485  000088                     __read_sectors@count:
  2486                           	opt stack 0
  2487  000088                     fatfs_find_blank_cluster@current_cluster:
  2488                           	opt stack 0
  2489                           
  2490                           ; 4 bytes @ 0x8
  2491  000088                     	ds	2
  2492  00008A                     fatfs_sector_reader@target:
  2493                           	opt stack 0
  2494  00008A                     fatfs_free_cluster_chain@next_cluster:
  2495                           	opt stack 0
  2496  00008A                     fatfs_fat_add_cluster_to_chain@last_cluster:
  2497                           	opt stack 0
  2498                           
  2499                           ; 4 bytes @ 0xA
  2500  00008A                     	ds	2
  2501  00008C                     ??_fatfs_sector_reader:
  2502  00008C                     ??__read_sectors:
  2503  00008C                     fatfs_find_blank_cluster@position:
  2504                           	opt stack 0
  2505                           
  2506                           ; 4 bytes @ 0xC
  2507  00008C                     	ds	2
  2508  00008E                     fatfs_fat_add_cluster_to_chain@next_cluster:
  2509                           	opt stack 0
  2510                           
  2511                           ; 4 bytes @ 0xE
  2512  00008E                     	ds	2
  2513  000090                     fatfs_find_blank_cluster@pbuf:
  2514                           	opt stack 0
  2515                           
  2516                           ; 2 bytes @ 0x10
  2517  000090                     	ds	2
  2518  000092                     fatfs_add_free_space@start:
  2519                           	opt stack 0
  2520                           
  2521                           ; 4 bytes @ 0x12
  2522  000092                     	ds	3
  2523  000095                     __read_sectors@lba:
  2524                           	opt stack 0
  2525                           
  2526                           ; 4 bytes @ 0x15
  2527  000095                     	ds	1
  2528  000096                     fatfs_add_free_space@i:
  2529                           	opt stack 0
  2530                           
  2531                           ; 4 bytes @ 0x16
  2532  000096                     	ds	2
  2533  000098                     fatfs_sector_reader@sector_to_read:
  2534                           	opt stack 0
  2535                           
  2536                           ; 4 bytes @ 0x18
  2537  000098                     	ds	1
  2538  000099                     __read_sectors@nextCluster:
  2539                           	opt stack 0
  2540                           
  2541                           ; 4 bytes @ 0x19
  2542  000099                     	ds	1
  2543  00009A                     fatfs_add_free_space@nextcluster:
  2544                           	opt stack 0
  2545                           
  2546                           ; 4 bytes @ 0x1A
  2547  00009A                     	ds	2
  2548  00009C                     fatfs_sector_reader@i:
  2549                           	opt stack 0
  2550                           
  2551                           ; 4 bytes @ 0x1C
  2552  00009C                     	ds	1
  2553  00009D                     __read_sectors@Sector:
  2554                           	opt stack 0
  2555                           
  2556                           ; 4 bytes @ 0x1D
  2557  00009D                     	ds	1
  2558  00009E                     ?_fatfs_allocate_free_space:
  2559                           	opt stack 0
  2560  00009E                     ?__write_sectors:
  2561                           	opt stack 0
  2562  00009E                     __write_sectors@file:
  2563                           	opt stack 0
  2564  00009E                     fatfs_allocate_free_space@fs:
  2565                           	opt stack 0
  2566                           
  2567                           ; 2 bytes @ 0x1E
  2568  00009E                     	ds	2
  2569  0000A0                     fatfs_allocate_free_space@newFile:
  2570                           	opt stack 0
  2571  0000A0                     fatfs_sector_reader@cluster_to_read:
  2572                           	opt stack 0
  2573  0000A0                     __write_sectors@offset:
  2574                           	opt stack 0
  2575                           
  2576                           ; 4 bytes @ 0x20
  2577  0000A0                     	ds	1
  2578  0000A1                     __read_sectors@i:
  2579                           	opt stack 0
  2580                           
  2581                           ; 4 bytes @ 0x21
  2582  0000A1                     	ds	1
  2583  0000A2                     fatfs_allocate_free_space@startCluster:
  2584                           	opt stack 0
  2585                           
  2586                           ; 2 bytes @ 0x22
  2587  0000A2                     	ds	2
  2588  0000A4                     __write_sectors@buf:
  2589                           	opt stack 0
  2590  0000A4                     fatfs_sector_reader@lba:
  2591                           	opt stack 0
  2592  0000A4                     fatfs_allocate_free_space@size:
  2593                           	opt stack 0
  2594                           
  2595                           ; 4 bytes @ 0x24
  2596  0000A4                     	ds	1
  2597  0000A5                     __read_sectors@Cluster:
  2598                           	opt stack 0
  2599                           
  2600                           ; 4 bytes @ 0x25
  2601  0000A5                     	ds	2
  2602  0000A7                     __write_sectors@count:
  2603                           	opt stack 0
  2604                           
  2605                           ; 4 bytes @ 0x27
  2606  0000A7                     	ds	1
  2607  0000A8                     ??_fatfs_allocate_free_space:
  2608  0000A8                     fatfs_sector_reader@cluster_chain:
  2609                           	opt stack 0
  2610                           
  2611                           ; 4 bytes @ 0x28
  2612  0000A8                     	ds	1
  2613  0000A9                     __read_sectors@ClusterIdx:
  2614                           	opt stack 0
  2615                           
  2616                           ; 4 bytes @ 0x29
  2617  0000A9                     	ds	2
  2618  0000AB                     ??__write_sectors:
  2619                           
  2620                           ; 0 bytes @ 0x2B
  2621  0000AB                     	ds	1
  2622  0000AC                     ?_fatfs_sfn_exists:
  2623                           	opt stack 0
  2624  0000AC                     ?_fatfs_mark_file_deleted:
  2625                           	opt stack 0
  2626  0000AC                     ?_fatfs_list_directory_next:
  2627                           	opt stack 0
  2628  0000AC                     ?_fatfs_find_free_dir_offset:
  2629                           	opt stack 0
  2630  0000AC                     ?_fatfs_get_file_entry:
  2631                           	opt stack 0
  2632  0000AC                     fatfs_get_file_entry@fs:
  2633                           	opt stack 0
  2634  0000AC                     fatfs_sfn_exists@fs:
  2635                           	opt stack 0
  2636  0000AC                     fatfs_update_file_length@fs:
  2637                           	opt stack 0
  2638  0000AC                     fatfs_mark_file_deleted@fs:
  2639                           	opt stack 0
  2640  0000AC                     fatfs_list_directory_next@fs:
  2641                           	opt stack 0
  2642  0000AC                     fatfs_find_free_dir_offset@fs:
  2643                           	opt stack 0
  2644                           
  2645                           ; 2 bytes @ 0x2C
  2646  0000AC                     	ds	2
  2647  0000AE                     fatfs_list_directory_next@dirls:
  2648                           	opt stack 0
  2649  0000AE                     fatfs_get_file_entry@Cluster:
  2650                           	opt stack 0
  2651  0000AE                     fatfs_sfn_exists@Cluster:
  2652                           	opt stack 0
  2653  0000AE                     fatfs_update_file_length@Cluster:
  2654                           	opt stack 0
  2655  0000AE                     fatfs_mark_file_deleted@Cluster:
  2656                           	opt stack 0
  2657  0000AE                     fatfs_find_free_dir_offset@dirCluster:
  2658                           	opt stack 0
  2659                           
  2660                           ; 4 bytes @ 0x2E
  2661  0000AE                     	ds	2
  2662  0000B0                     fatfs_list_directory_next@entry:
  2663                           	opt stack 0
  2664  0000B0                     fatfs_allocate_free_space@clusterSize:
  2665                           	opt stack 0
  2666                           
  2667                           ; 4 bytes @ 0x30
  2668  0000B0                     	ds	2
  2669  0000B2                     ??_fatfs_list_directory_next:
  2670  0000B2                     fatfs_get_file_entry@name_to_find:
  2671                           	opt stack 0
  2672  0000B2                     fatfs_sfn_exists@shortname:
  2673                           	opt stack 0
  2674  0000B2                     fatfs_update_file_length@shortname:
  2675                           	opt stack 0
  2676  0000B2                     fatfs_mark_file_deleted@shortname:
  2677                           	opt stack 0
  2678  0000B2                     fatfs_find_free_dir_offset@entryCount:
  2679                           	opt stack 0
  2680                           
  2681                           ; 2 bytes @ 0x32
  2682  0000B2                     	ds	2
  2683  0000B4                     ??_fatfs_sfn_exists:
  2684  0000B4                     ??_fatfs_mark_file_deleted:
  2685  0000B4                     fatfs_get_file_entry@sfEntry:
  2686                           	opt stack 0
  2687  0000B4                     fatfs_find_free_dir_offset@pSector:
  2688                           	opt stack 0
  2689  0000B4                     fatfs_update_file_length@fileLength:
  2690                           	opt stack 0
  2691  0000B4                     __write_sectors@lba:
  2692                           	opt stack 0
  2693  0000B4                     fatfs_allocate_free_space@clusterCount:
  2694                           	opt stack 0
  2695                           
  2696                           ; 4 bytes @ 0x34
  2697  0000B4                     	ds	2
  2698  0000B6                     ??_fatfs_get_file_entry:
  2699  0000B6                     fatfs_sfn_exists@x:
  2700                           	opt stack 0
  2701  0000B6                     fatfs_find_free_dir_offset@pOffset:
  2702                           	opt stack 0
  2703                           
  2704                           ; 2 bytes @ 0x36
  2705  0000B6                     	ds	2
  2706  0000B8                     ??_fatfs_update_file_length:
  2707  0000B8                     ??_fatfs_find_free_dir_offset:
  2708  0000B8                     ?__open_directory:
  2709                           	opt stack 0
  2710  0000B8                     fatfs_sfn_exists@recordoffset:
  2711                           	opt stack 0
  2712  0000B8                     fatfs_mark_file_deleted@x:
  2713                           	opt stack 0
  2714  0000B8                     __open_directory@path:
  2715                           	opt stack 0
  2716  0000B8                     __write_sectors@TotalWriteCount:
  2717                           	opt stack 0
  2718  0000B8                     fatfs_allocate_free_space@nextcluster:
  2719                           	opt stack 0
  2720                           
  2721                           ; 4 bytes @ 0x38
  2722  0000B8                     	ds	2
  2723  0000BA                     ?_fl_readdir:
  2724                           	opt stack 0
  2725  0000BA                     fatfs_sfn_exists@item:
  2726                           	opt stack 0
  2727  0000BA                     fatfs_mark_file_deleted@recordoffset:
  2728                           	opt stack 0
  2729  0000BA                     __open_directory@pathCluster:
  2730                           	opt stack 0
  2731  0000BA                     fl_readdir@dirls:
  2732                           	opt stack 0
  2733                           
  2734                           ; 2 bytes @ 0x3A
  2735  0000BA                     	ds	1
  2736  0000BB                     fatfs_sfn_exists@directoryEntry:
  2737                           	opt stack 0
  2738                           
  2739                           ; 2 bytes @ 0x3B
  2740  0000BB                     	ds	1
  2741  0000BC                     ??__open_directory:
  2742  0000BC                     fatfs_mark_file_deleted@item:
  2743                           	opt stack 0
  2744  0000BC                     fatfs_update_file_length@x:
  2745                           	opt stack 0
  2746  0000BC                     fl_readdir@entry:
  2747                           	opt stack 0
  2748  0000BC                     fatfs_find_free_dir_offset@directoryEntry:
  2749                           	opt stack 0
  2750  0000BC                     __write_sectors@LastCluster:
  2751                           	opt stack 0
  2752                           
  2753                           ; 4 bytes @ 0x3C
  2754  0000BC                     	ds	1
  2755  0000BD                     fatfs_mark_file_deleted@directoryEntry:
  2756                           	opt stack 0
  2757                           
  2758                           ; 2 bytes @ 0x3D
  2759  0000BD                     	ds	1
  2760  0000BE                     fatfs_update_file_length@recordoffset:
  2761                           	opt stack 0
  2762  0000BE                     fl_readdir@res:
  2763                           	opt stack 0
  2764  0000BE                     fatfs_find_free_dir_offset@start_recorded:
  2765                           	opt stack 0
  2766                           
  2767                           ; 2 bytes @ 0x3E
  2768  0000BE                     	ds	2
  2769  0000C0                     fatfs_update_file_length@item:
  2770                           	opt stack 0
  2771  0000C0                     fatfs_find_free_dir_offset@i:
  2772                           	opt stack 0
  2773  0000C0                     __write_sectors@nextCluster:
  2774                           	opt stack 0
  2775  0000C0                     __open_directory@currentfolder:
  2776                           	opt stack 0
  2777                           
  2778                           ; 10 bytes @ 0x40
  2779  0000C0                     	ds	1
  2780  0000C1                     fatfs_update_file_length@directoryEntry:
  2781                           	opt stack 0
  2782  0000C1                     fatfs_find_free_dir_offset@newCluster:
  2783                           	opt stack 0
  2784                           
  2785                           ; 4 bytes @ 0x41
  2786  0000C1                     	ds	3
  2787  0000C4                     __write_sectors@SectorNumber:
  2788                           	opt stack 0
  2789                           
  2790                           ; 4 bytes @ 0x44
  2791  0000C4                     	ds	1
  2792  0000C5                     fatfs_find_free_dir_offset@recordoffset:
  2793                           	opt stack 0
  2794                           
  2795                           ; 2 bytes @ 0x45
  2796  0000C5                     	ds	2
  2797  0000C7                     fatfs_find_free_dir_offset@x:
  2798                           	opt stack 0
  2799                           
  2800                           ; 2 bytes @ 0x47
  2801  0000C7                     	ds	1
  2802  0000C8                     __write_sectors@i:
  2803                           	opt stack 0
  2804                           
  2805                           ; 4 bytes @ 0x48
  2806  0000C8                     	ds	1
  2807  0000C9                     fatfs_find_free_dir_offset@possible_spaces:
  2808                           	opt stack 0
  2809                           
  2810                           ; 2 bytes @ 0x49
  2811  0000C9                     	ds	1
  2812  0000CA                     __open_directory@levels:
  2813                           	opt stack 0
  2814                           
  2815                           ; 2 bytes @ 0x4A
  2816  0000CA                     	ds	1
  2817  0000CB                     fatfs_find_free_dir_offset@item:
  2818                           	opt stack 0
  2819                           
  2820                           ; 1 bytes @ 0x4B
  2821  0000CB                     	ds	1
  2822  0000CC                     ?_fatfs_add_file_entry:
  2823                           	opt stack 0
  2824  0000CC                     fatfs_add_file_entry@fs:
  2825                           	opt stack 0
  2826  0000CC                     __open_directory@startcluster:
  2827                           	opt stack 0
  2828  0000CC                     __write_sectors@ClusterIdx:
  2829                           	opt stack 0
  2830                           
  2831                           ; 4 bytes @ 0x4C
  2832  0000CC                     	ds	2
  2833  0000CE                     fatfs_add_file_entry@dirCluster:
  2834                           	opt stack 0
  2835                           
  2836                           ; 4 bytes @ 0x4E
  2837  0000CE                     	ds	2
  2838  0000D0                     __open_directory@sublevel:
  2839                           	opt stack 0
  2840  0000D0                     __write_sectors@Cluster:
  2841                           	opt stack 0
  2842                           
  2843                           ; 4 bytes @ 0x50
  2844  0000D0                     	ds	2
  2845  0000D2                     fatfs_add_file_entry@filename:
  2846                           	opt stack 0
  2847  0000D2                     __open_directory@sfEntry:
  2848                           	opt stack 0
  2849                           
  2850                           ; 32 bytes @ 0x52
  2851  0000D2                     	ds	2
  2852  0000D4                     fl_fflush@f:
  2853                           	opt stack 0
  2854  0000D4                     fatfs_add_file_entry@shortfilename:
  2855                           	opt stack 0
  2856                           
  2857                           ; 2 bytes @ 0x54
  2858  0000D4                     	ds	2
  2859  0000D6                     ??_fl_fflush:
  2860  0000D6                     fatfs_add_file_entry@startCluster:
  2861                           	opt stack 0
  2862                           
  2863                           ; 4 bytes @ 0x56
  2864  0000D6                     	ds	4
  2865  0000DA                     fatfs_add_file_entry@size:
  2866                           	opt stack 0
  2867                           
  2868                           ; 4 bytes @ 0x5A
  2869  0000DA                     	ds	2
  2870  0000DC                     fl_fflush@file:
  2871                           	opt stack 0
  2872                           
  2873                           ; 2 bytes @ 0x5C
  2874  0000DC                     	ds	2
  2875  0000DE                     ?_fl_fread:
  2876                           	opt stack 0
  2877  0000DE                     ?_fl_fwrite:
  2878                           	opt stack 0
  2879  0000DE                     fl_fclose@f:
  2880                           	opt stack 0
  2881  0000DE                     fl_fread@buffer:
  2882                           	opt stack 0
  2883  0000DE                     fatfs_add_file_entry@dir:
  2884                           	opt stack 0
  2885  0000DE                     fl_fwrite@data:
  2886                           	opt stack 0
  2887                           
  2888                           ; 3 bytes @ 0x5E
  2889  0000DE                     	ds	2
  2890  0000E0                     ??_fatfs_add_file_entry:
  2891  0000E0                     fl_fclose@file:
  2892                           	opt stack 0
  2893  0000E0                     fl_fread@size:
  2894                           	opt stack 0
  2895                           
  2896                           ; 2 bytes @ 0x60
  2897  0000E0                     	ds	1
  2898  0000E1                     fl_fwrite@size:
  2899                           	opt stack 0
  2900                           
  2901                           ; 2 bytes @ 0x61
  2902  0000E1                     	ds	1
  2903  0000E2                     fl_fread@length:
  2904                           	opt stack 0
  2905                           
  2906                           ; 2 bytes @ 0x62
  2907  0000E2                     	ds	1
  2908  0000E3                     fl_fwrite@count:
  2909                           	opt stack 0
  2910                           
  2911                           ; 2 bytes @ 0x63
  2912  0000E3                     	ds	1
  2913  0000E4                     fl_fread@f:
  2914                           	opt stack 0
  2915                           
  2916                           ; 2 bytes @ 0x64
  2917  0000E4                     	ds	1
  2918  0000E5                     fl_fwrite@f:
  2919                           	opt stack 0
  2920                           
  2921                           ; 2 bytes @ 0x65
  2922  0000E5                     	ds	1
  2923  0000E6                     ??_fl_fread:
  2924                           
  2925                           ; 0 bytes @ 0x66
  2926  0000E6                     	ds	1
  2927  0000E7                     ??_fl_fwrite:
  2928                           
  2929                           ; 0 bytes @ 0x67
  2930  0000E7                     	ds	11
  2931  0000F2                     ?_fl_opendir:
  2932                           	opt stack 0
  2933  0000F2                     ?__create_directory:
  2934                           	opt stack 0
  2935  0000F2                     ?__open_file:
  2936                           	opt stack 0
  2937  0000F2                     ?__create_file:
  2938                           	opt stack 0
  2939  0000F2                     __create_directory@path:
  2940                           	opt stack 0
  2941  0000F2                     __open_file@path:
  2942                           	opt stack 0
  2943  0000F2                     __create_file@filename:
  2944                           	opt stack 0
  2945  0000F2                     fl_opendir@path:
  2946                           	opt stack 0
  2947                           
  2948                           ; 2 bytes @ 0x72
  2949  0000F2                     	ds	2
  2950  0000F4                     ??__create_directory:
  2951  0000F4                     ??__open_file:
  2952  0000F4                     ??__create_file:
  2953  0000F4                     fl_opendir@dir:
  2954                           	opt stack 0
  2955                           
  2956                           ; 2 bytes @ 0x74
  2957  0000F4                     	ds	2
  2958  0000F6                     ?_fl_fgetc:
  2959                           	opt stack 0
  2960  0000F6                     fl_fgetc@f:
  2961                           	opt stack 0
  2962  0000F6                     fl_opendir@levels:
  2963                           	opt stack 0
  2964                           
  2965                           ; 2 bytes @ 0x76
  2966  0000F6                     	ds	2
  2967  0000F8                     ?_fl_createdirectory:
  2968                           	opt stack 0
  2969  0000F8                     fl_fgetc@res:
  2970                           	opt stack 0
  2971  0000F8                     fl_createdirectory@path:
  2972                           	opt stack 0
  2973  0000F8                     fl_opendir@res:
  2974                           	opt stack 0
  2975                           
  2976                           ; 2 bytes @ 0x78
  2977  0000F8                     	ds	2
  2978  0000FA                     fl_fgetc@data:
  2979                           	opt stack 0
  2980  0000FA                     fl_createdirectory@res:
  2981                           	opt stack 0
  2982  0000FA                     fl_opendir@cluster:
  2983                           	opt stack 0
  2984                           
  2985                           ; 4 bytes @ 0x7A
  2986  0000FA                     	ds	2
  2987  0000FC                     ?_fl_fopen:
  2988                           	opt stack 0
  2989  0000FC                     fl_fopen@path:
  2990                           	opt stack 0
  2991                           
  2992                           ; 2 bytes @ 0x7C
  2993  0000FC                     	ds	2
  2994  0000FE                     fl_fopen@mode:
  2995                           	opt stack 0
  2996                           
  2997                           ; 2 bytes @ 0x7E
  2998  0000FE                     	ds	2
  2999                           tblptru	equ	0xFF8
  3000                           tblptrh	equ	0xFF7
  3001                           tblptrl	equ	0xFF6
  3002                           tablat	equ	0xFF5
  3003                           postinc0	equ	0xFEE
  3004                           wreg	equ	0xFE8
  3005                           postdec1	equ	0xFE5
  3006                           fsr1h	equ	0xFE2
  3007                           fsr1l	equ	0xFE1
  3008                           
  3009                           	psect	cstackCOMRAM
  3010  000001                     __pcstackCOMRAM:
  3011                           	opt stack 0
  3012  000001                     ?_fatfs_entry_lfn_text:
  3013                           	opt stack 0
  3014  000001                     ?_fatfs_entry_lfn_invalid:
  3015                           	opt stack 0
  3016  000001                     ?_fatfs_entry_lfn_exists:
  3017                           	opt stack 0
  3018  000001                     ?_fatfs_lfn_cache_get:
  3019                           	opt stack 0
  3020  000001                     ?_fatfs_entry_sfn_only:
  3021                           	opt stack 0
  3022  000001                     ?_strncmp:
  3023                           	opt stack 0
  3024  000001                     ?_fatfs_entry_is_dir:
  3025                           	opt stack 0
  3026  000001                     ?_fatfs_total_path_levels:
  3027                           	opt stack 0
  3028  000001                     ?_fatfs_entry_is_file:
  3029                           	opt stack 0
  3030  000001                     ?_strlen:
  3031                           	opt stack 0
  3032  000001                     ?_strcmp:
  3033                           	opt stack 0
  3034  000001                     ?_fatfs_cache_get_next_cluster:
  3035                           	opt stack 0
  3036  000001                     ?_fl_feof:
  3037                           	opt stack 0
  3038  000001                     ?_FileString_GetExtension:
  3039                           	opt stack 0
  3040  000001                     ?_FileString_TrimLength:
  3041                           	opt stack 0
  3042  000001                     ?___awdiv:
  3043                           	opt stack 0
  3044  000001                     ?___lwdiv:
  3045                           	opt stack 0
  3046  000001                     ?_fatfs_lba_of_cluster:
  3047                           	opt stack 0
  3048  000001                     ?_fatfs_get_root_cluster:
  3049                           	opt stack 0
  3050  000001                     ?___lldiv:
  3051                           	opt stack 0
  3052  000001                     ?___llmod:
  3053                           	opt stack 0
  3054  000001                     ReadBUF@u:
  3055                           	opt stack 0
  3056  000001                     WriteSPI_@TempVar:
  3057                           	opt stack 0
  3058  000001                     ReadUSART@data:
  3059                           	opt stack 0
  3060  000001                     WriteUSART@data:
  3061                           	opt stack 0
  3062  000001                     fatfs_lba_of_cluster@fs:
  3063                           	opt stack 0
  3064  000001                     fatfs_get_root_cluster@fs:
  3065                           	opt stack 0
  3066  000001                     fatfs_list_directory_start@fs:
  3067                           	opt stack 0
  3068  000001                     fatfs_cache_init@fs:
  3069                           	opt stack 0
  3070  000001                     fatfs_cache_get_next_cluster@fs:
  3071                           	opt stack 0
  3072  000001                     fatfs_cache_set_next_cluster@fs:
  3073                           	opt stack 0
  3074  000001                     fat_list@fat_list_init@list:
  3075                           	opt stack 0
  3076  000001                     fat_list@fat_list_remove@list:
  3077                           	opt stack 0
  3078  000001                     fat_list@fat_list_insert_after@list:
  3079                           	opt stack 0
  3080  000001                     fat_list@fat_list_insert_before@list:
  3081                           	opt stack 0
  3082  000001                     fl_fgetpos@f:
  3083                           	opt stack 0
  3084  000001                     fl_feof@f:
  3085                           	opt stack 0
  3086  000001                     fl_closedir@dir:
  3087                           	opt stack 0
  3088  000001                     fatfs_lfn_cache_entry@lfn:
  3089                           	opt stack 0
  3090  000001                     fatfs_lfn_cache_get@lfn:
  3091                           	opt stack 0
  3092  000001                     fatfs_entry_lfn_text@entry:
  3093                           	opt stack 0
  3094  000001                     fatfs_entry_lfn_invalid@entry:
  3095                           	opt stack 0
  3096  000001                     fatfs_entry_lfn_exists@lfn:
  3097                           	opt stack 0
  3098  000001                     fatfs_entry_sfn_only@entry:
  3099                           	opt stack 0
  3100  000001                     fatfs_entry_is_dir@entry:
  3101                           	opt stack 0
  3102  000001                     fatfs_entry_is_file@entry:
  3103                           	opt stack 0
  3104  000001                     fatfs_sfn_create_entry@shortfilename:
  3105                           	opt stack 0
  3106  000001                     fatfs_total_path_levels@path:
  3107                           	opt stack 0
  3108  000001                     FileString_GetExtension@str:
  3109                           	opt stack 0
  3110  000001                     FileString_TrimLength@str:
  3111                           	opt stack 0
  3112  000001                     fatfs_get_sfn_display_name@out:
  3113                           	opt stack 0
  3114  000001                     Clr_str@buffer:
  3115                           	opt stack 0
  3116  000001                     Format_string@buf_1:
  3117                           	opt stack 0
  3118  000001                     OpenUSART@spbrg:
  3119                           	opt stack 0
  3120  000001                     ___awdiv@dividend:
  3121                           	opt stack 0
  3122  000001                     ___lwdiv@dividend:
  3123                           	opt stack 0
  3124  000001                     memcpy@d1:
  3125                           	opt stack 0
  3126  000001                     memset@p1:
  3127                           	opt stack 0
  3128  000001                     strcmp@s1:
  3129                           	opt stack 0
  3130  000001                     strlen@s:
  3131                           	opt stack 0
  3132  000001                     strncmp@s1:
  3133                           	opt stack 0
  3134  000001                     strncpy@to:
  3135                           	opt stack 0
  3136  000001                     fatfs_calc_cluster_size@sectors:
  3137                           	opt stack 0
  3138  000001                     ___lldiv@dividend:
  3139                           	opt stack 0
  3140  000001                     ___llmod@dividend:
  3141                           	opt stack 0
  3142                           
  3143                           ; 4 bytes @ 0x0
  3144  000001                     	ds	1
  3145  000002                     WriteSPI_@data_out:
  3146                           	opt stack 0
  3147  000002                     Write@data:
  3148                           	opt stack 0
  3149  000002                     Read_str@buffer:
  3150                           	opt stack 0
  3151  000002                     putsUSART@data:
  3152                           	opt stack 0
  3153                           
  3154                           ; 2 bytes @ 0x1
  3155  000002                     	ds	1
  3156  000003                     ??_fatfs_entry_lfn_text:
  3157  000003                     ??_fatfs_entry_lfn_invalid:
  3158  000003                     ??_fatfs_lfn_cache_get:
  3159  000003                     ??_fatfs_entry_sfn_only:
  3160  000003                     ??_fatfs_entry_is_dir:
  3161  000003                     ??_fatfs_total_path_levels:
  3162  000003                     ??_fatfs_entry_is_file:
  3163  000003                     ??_strlen:
  3164  000003                     ??_OpenUSART:
  3165  000003                     ??_fl_feof:
  3166  000003                     ??_FileString_GetExtension:
  3167  000003                     Draw_Line@length:
  3168                           	opt stack 0
  3169  000003                     putch@byte:
  3170                           	opt stack 0
  3171  000003                     fatfs_list_directory_start@dirls:
  3172                           	opt stack 0
  3173  000003                     fatfs_cache_init@file:
  3174                           	opt stack 0
  3175  000003                     fatfs_cache_get_next_cluster@file:
  3176                           	opt stack 0
  3177  000003                     fatfs_cache_set_next_cluster@file:
  3178                           	opt stack 0
  3179  000003                     fat_list@fat_list_remove@node:
  3180                           	opt stack 0
  3181  000003                     fat_list@fat_list_insert_after@node:
  3182                           	opt stack 0
  3183  000003                     fat_list@fat_list_insert_before@node:
  3184                           	opt stack 0
  3185  000003                     fl_fgetpos@position:
  3186                           	opt stack 0
  3187  000003                     fatfs_lfn_cache_entry@entryBuffer:
  3188                           	opt stack 0
  3189  000003                     fatfs_entry_lfn_exists@entry:
  3190                           	opt stack 0
  3191  000003                     FileString_TrimLength@strLen:
  3192                           	opt stack 0
  3193  000003                     fatfs_get_sfn_display_name@in:
  3194                           	opt stack 0
  3195  000003                     Format_string@buf_2:
  3196                           	opt stack 0
  3197  000003                     ___awdiv@divisor:
  3198                           	opt stack 0
  3199  000003                     ___lwdiv@divisor:
  3200                           	opt stack 0
  3201  000003                     memset@c:
  3202                           	opt stack 0
  3203  000003                     strcmp@s2:
  3204                           	opt stack 0
  3205  000003                     strncmp@s2:
  3206                           	opt stack 0
  3207  000003                     strncpy@from:
  3208                           	opt stack 0
  3209  000003                     memcpy@s1:
  3210                           	opt stack 0
  3211  000003                     fatfs_lba_of_cluster@Cluster_Number:
  3212                           	opt stack 0
  3213  000003                     fatfs_sfn_create_entry@size:
  3214                           	opt stack 0
  3215  000003                     command@fourbyte_arg:
  3216                           	opt stack 0
  3217                           
  3218                           ; 4 bytes @ 0x2
  3219  000003                     	ds	1
  3220  000004                     ??_putsUSART:
  3221  000004                     ??_Draw_Line:
  3222  000004                     Read_str@i:
  3223                           	opt stack 0
  3224                           
  3225                           ; 1 bytes @ 0x3
  3226  000004                     	ds	1
  3227  000005                     ??_fatfs_lfn_cache_entry:
  3228  000005                     ??_fatfs_entry_lfn_exists:
  3229  000005                     ??_strcmp:
  3230  000005                     ??fat_list@fat_list_remove:
  3231  000005                     ??_FileString_TrimLength:
  3232  000005                     Format_string@c:
  3233                           	opt stack 0
  3234  000005                     Read_str@data:
  3235                           	opt stack 0
  3236  000005                     ___awdiv@counter:
  3237                           	opt stack 0
  3238  000005                     fat_list@fat_list_insert_after@new_node:
  3239                           	opt stack 0
  3240  000005                     fat_list@fat_list_insert_before@new_node:
  3241                           	opt stack 0
  3242  000005                     fl_fgetpos@file:
  3243                           	opt stack 0
  3244  000005                     fatfs_calc_cluster_size@is_fat32:
  3245                           	opt stack 0
  3246  000005                     fatfs_total_path_levels@levels:
  3247                           	opt stack 0
  3248  000005                     FileString_GetExtension@dotPos:
  3249                           	opt stack 0
  3250  000005                     fatfs_get_sfn_display_name@len:
  3251                           	opt stack 0
  3252  000005                     ___lwdiv@quotient:
  3253                           	opt stack 0
  3254  000005                     memset@n:
  3255                           	opt stack 0
  3256  000005                     strlen@cp:
  3257                           	opt stack 0
  3258  000005                     strncmp@len:
  3259                           	opt stack 0
  3260  000005                     strncpy@size:
  3261                           	opt stack 0
  3262  000005                     fatfs_list_directory_start@StartCluster:
  3263                           	opt stack 0
  3264  000005                     fatfs_cache_get_next_cluster@clusterIdx:
  3265                           	opt stack 0
  3266  000005                     fatfs_cache_set_next_cluster@clusterIdx:
  3267                           	opt stack 0
  3268  000005                     ___lldiv@divisor:
  3269                           	opt stack 0
  3270  000005                     ___llmod@divisor:
  3271                           	opt stack 0
  3272                           
  3273                           ; 4 bytes @ 0x4
  3274  000005                     	ds	1
  3275  000006                     OpenUSART@config:
  3276                           	opt stack 0
  3277  000006                     ___awdiv@sign:
  3278                           	opt stack 0
  3279  000006                     Write_str@str:
  3280                           	opt stack 0
  3281  000006                     memcpy@n:
  3282                           	opt stack 0
  3283                           
  3284                           ; 2 bytes @ 0x5
  3285  000006                     	ds	1
  3286  000007                     ??_strncmp:
  3287  000007                     ??_fatfs_lba_of_cluster:
  3288  000007                     ??fat_list@fat_list_insert_after:
  3289  000007                     ??_fatfs_calc_cluster_size:
  3290  000007                     ?_fatfs_get_substring:
  3291                           	opt stack 0
  3292  000007                     ?fat_list@fat_list_pop_head:
  3293                           	opt stack 0
  3294  000007                     ?_FileString_StrCmpNoCase:
  3295                           	opt stack 0
  3296  000007                     ?_fl_ftell:
  3297                           	opt stack 0
  3298  000007                     fatfs_total_path_levels@expectedchar:
  3299                           	opt stack 0
  3300  000007                     fatfs_get_sfn_display_name@a:
  3301                           	opt stack 0
  3302  000007                     command@CRCbits:
  3303                           	opt stack 0
  3304  000007                     Draw_Line@line:
  3305                           	opt stack 0
  3306  000007                     ConfigUSART@config_2:
  3307                           	opt stack 0
  3308  000007                     ___lwdiv@counter:
  3309                           	opt stack 0
  3310  000007                     strcmp@t0:
  3311                           	opt stack 0
  3312  000007                     fat_list@fat_list_insert_first@list:
  3313                           	opt stack 0
  3314  000007                     fat_list@fat_list_pop_head@list:
  3315                           	opt stack 0
  3316  000007                     fl_ftell@f:
  3317                           	opt stack 0
  3318  000007                     fatfs_get_substring@path:
  3319                           	opt stack 0
  3320  000007                     FileString_StrCmpNoCase@s1:
  3321                           	opt stack 0
  3322  000007                     FileString_GetExtension@strSrc:
  3323                           	opt stack 0
  3324  000007                     FileString_TrimLength@length:
  3325                           	opt stack 0
  3326  000007                     ___awdiv@quotient:
  3327                           	opt stack 0
  3328  000007                     memset@p:
  3329                           	opt stack 0
  3330  000007                     strncpy@cp:
  3331                           	opt stack 0
  3332  000007                     fatfs_sfn_create_entry@startCluster:
  3333                           	opt stack 0
  3334                           
  3335                           ; 4 bytes @ 0x6
  3336  000007                     	ds	1
  3337  000008                     ?___lwmod:
  3338                           	opt stack 0
  3339  000008                     command@command:
  3340                           	opt stack 0
  3341  000008                     ConfigUSART@config_1:
  3342                           	opt stack 0
  3343  000008                     strcmp@t2:
  3344                           	opt stack 0
  3345  000008                     ___lwmod@dividend:
  3346                           	opt stack 0
  3347  000008                     memcpy@s:
  3348                           	opt stack 0
  3349                           
  3350                           ; 3 bytes @ 0x7
  3351  000008                     	ds	1
  3352  000009                     ??_mmc_init:
  3353  000009                     ?_fatfs_lfn_entries_required:
  3354                           	opt stack 0
  3355  000009                     ?_media_read:
  3356                           	opt stack 0
  3357  000009                     ?_media_write:
  3358                           	opt stack 0
  3359  000009                     ___llmod@counter:
  3360                           	opt stack 0
  3361  000009                     strcmp@t1:
  3362                           	opt stack 0
  3363  000009                     fatfs_cache_get_next_cluster@pNextCluster:
  3364                           	opt stack 0
  3365  000009                     fat_list@fat_list_insert_first@node:
  3366                           	opt stack 0
  3367  000009                     fat_list@fat_list_pop_head@node:
  3368                           	opt stack 0
  3369  000009                     fatfs_lfn_cache_init@lfn:
  3370                           	opt stack 0
  3371  000009                     fatfs_lfn_entries_required@filename:
  3372                           	opt stack 0
  3373  000009                     fatfs_lfn_create_sfn@sfn_output:
  3374                           	opt stack 0
  3375  000009                     fatfs_get_substring@levelreq:
  3376                           	opt stack 0
  3377  000009                     FileString_StrCmpNoCase@s2:
  3378                           	opt stack 0
  3379  000009                     FileString_TrimLength@strSrc:
  3380                           	opt stack 0
  3381  000009                     fatfs_fat_init@fs:
  3382                           	opt stack 0
  3383  000009                     fatfs_cache_set_next_cluster@nextCluster:
  3384                           	opt stack 0
  3385  000009                     media_read@sector:
  3386                           	opt stack 0
  3387  000009                     media_write@sector:
  3388                           	opt stack 0
  3389  000009                     ___lldiv@quotient:
  3390                           	opt stack 0
  3391                           
  3392                           ; 4 bytes @ 0x8
  3393  000009                     	ds	1
  3394  00000A                     mmc_init@i:
  3395                           	opt stack 0
  3396  00000A                     Check_extension@xtn:
  3397                           	opt stack 0
  3398  00000A                     ___lwmod@divisor:
  3399                           	opt stack 0
  3400                           
  3401                           ; 2 bytes @ 0x9
  3402  00000A                     	ds	1
  3403  00000B                     ??_fatfs_fat_init:
  3404  00000B                     mmc_init@u:
  3405                           	opt stack 0
  3406  00000B                     fat_list@fat_list_insert_last@list:
  3407                           	opt stack 0
  3408  00000B                     fl_feof@res:
  3409                           	opt stack 0
  3410  00000B                     fatfs_lfn_cache_init@wipeTable:
  3411                           	opt stack 0
  3412  00000B                     fatfs_lfn_entries_required@length:
  3413                           	opt stack 0
  3414  00000B                     fatfs_sfn_create_entry@entry:
  3415                           	opt stack 0
  3416  00000B                     fatfs_lfn_create_sfn@filename:
  3417                           	opt stack 0
  3418  00000B                     fatfs_get_substring@output:
  3419                           	opt stack 0
  3420  00000B                     FileString_StrCmpNoCase@n:
  3421                           	opt stack 0
  3422  00000B                     memcpy@d:
  3423                           	opt stack 0
  3424  00000B                     fl_ftell@pos:
  3425                           	opt stack 0
  3426                           
  3427                           ; 4 bytes @ 0xA
  3428  00000B                     	ds	1
  3429  00000C                     Check_extension@str_1:
  3430                           	opt stack 0
  3431  00000C                     ___lwmod@counter:
  3432                           	opt stack 0
  3433                           
  3434                           ; 1 bytes @ 0xB
  3435  00000C                     	ds	1
  3436  00000D                     ??_fatfs_lfn_cache_init:
  3437  00000D                     ??_fatfs_lfn_create_sfn:
  3438  00000D                     ??_FileString_StrCmpNoCase:
  3439  00000D                     ?_printf:
  3440                           	opt stack 0
  3441  00000D                     ___lldiv@counter:
  3442                           	opt stack 0
  3443  00000D                     fat_list@fat_list_insert_last@node:
  3444                           	opt stack 0
  3445  00000D                     fl_feof@file:
  3446                           	opt stack 0
  3447  00000D                     fatfs_calc_cluster_size@i:
  3448                           	opt stack 0
  3449  00000D                     fatfs_filename_to_lfn@filename:
  3450                           	opt stack 0
  3451  00000D                     fatfs_sfn_create_entry@dir:
  3452                           	opt stack 0
  3453  00000D                     fatfs_get_substring@max_len:
  3454                           	opt stack 0
  3455  00000D                     media_read@buffer:
  3456                           	opt stack 0
  3457  00000D                     printf@f:
  3458                           	opt stack 0
  3459  00000D                     media_write@buffer:
  3460                           	opt stack 0
  3461  00000D                     Check_extension@s_1:
  3462                           	opt stack 0
  3463                           
  3464                           ; 4 bytes @ 0xC
  3465  00000D                     	ds	1
  3466  00000E                     fatfs_itoa@num:
  3467                           	opt stack 0
  3468                           
  3469                           ; 4 bytes @ 0xD
  3470  00000E                     	ds	1
  3471  00000F                     ??_fatfs_get_substring:
  3472  00000F                     ??_fl_init:
  3473  00000F                     ?__allocate_file:
  3474                           	opt stack 0
  3475  00000F                     fatfs_lfn_cache_entry@i:
  3476                           	opt stack 0
  3477  00000F                     __free_file@file:
  3478                           	opt stack 0
  3479  00000F                     fatfs_lfn_cache_init@i:
  3480                           	opt stack 0
  3481  00000F                     fatfs_filename_to_lfn@buffer:
  3482                           	opt stack 0
  3483  00000F                     fatfs_sfn_create_entry@i:
  3484                           	opt stack 0
  3485  00000F                     FileString_StrCmpNoCase@diff:
  3486                           	opt stack 0
  3487  00000F                     media_read@sector_count:
  3488                           	opt stack 0
  3489                           
  3490                           ; 4 bytes @ 0xE
  3491  00000F                     	ds	1
  3492  000010                     fatfs_lfn_cache_entry@LFNIndex:
  3493                           	opt stack 0
  3494  000010                     media_write@sector_count:
  3495                           	opt stack 0
  3496                           
  3497                           ; 4 bytes @ 0xF
  3498  000010                     	ds	1
  3499  000011                     FileString_StrCmpNoCase@a:
  3500                           	opt stack 0
  3501  000011                     __allocate_file@node:
  3502                           	opt stack 0
  3503  000011                     fatfs_filename_to_lfn@entry:
  3504                           	opt stack 0
  3505  000011                     Check_extension@s_2:
  3506                           	opt stack 0
  3507                           
  3508                           ; 4 bytes @ 0x10
  3509  000011                     	ds	1
  3510  000012                     FileString_StrCmpNoCase@b:
  3511                           	opt stack 0
  3512  000012                     fatfs_itoa@s:
  3513                           	opt stack 0
  3514  000012                     fatfs_lfn_create_sfn@ext:
  3515                           	opt stack 0
  3516                           
  3517                           ; 3 bytes @ 0x11
  3518  000012                     	ds	1
  3519  000013                     ??_media_read:
  3520  000013                     ?_fatfs_compare_names:
  3521                           	opt stack 0
  3522  000013                     fatfs_filename_to_lfn@sfnChk:
  3523                           	opt stack 0
  3524  000013                     fatfs_compare_names@strA:
  3525                           	opt stack 0
  3526  000013                     fatfs_fat_init@i:
  3527                           	opt stack 0
  3528                           
  3529                           ; 2 bytes @ 0x12
  3530  000013                     	ds	1
  3531  000014                     ??_fatfs_filename_to_lfn:
  3532  000014                     ??_fatfs_itoa:
  3533  000014                     ??_media_write:
  3534  000014                     fatfs_get_substring@i:
  3535                           	opt stack 0
  3536                           
  3537                           ; 2 bytes @ 0x13
  3538  000014                     	ds	1
  3539  000015                     ??_printf:
  3540  000015                     Check_extension@j:
  3541                           	opt stack 0
  3542  000015                     fl_init@i:
  3543                           	opt stack 0
  3544  000015                     fatfs_lfn_create_sfn@len:
  3545                           	opt stack 0
  3546  000015                     fatfs_compare_names@strB:
  3547                           	opt stack 0
  3548                           
  3549                           ; 2 bytes @ 0x14
  3550  000015                     	ds	1
  3551  000016                     fatfs_get_substring@pathlen:
  3552                           	opt stack 0
  3553  000016                     Switch@exit:
  3554                           	opt stack 0
  3555                           
  3556                           ; 5 bytes @ 0x15
  3557  000016                     	ds	1
  3558  000017                     ??_fatfs_compare_names:
  3559  000017                     printf@idx:
  3560                           	opt stack 0
  3561  000017                     fl_fseek@f:
  3562                           	opt stack 0
  3563  000017                     fatfs_lfn_create_sfn@pos:
  3564                           	opt stack 0
  3565  000017                     media_read@Start_Addr:
  3566                           	opt stack 0
  3567                           
  3568                           ; 4 bytes @ 0x16
  3569  000017                     	ds	1
  3570  000018                     printf@prec:
  3571                           	opt stack 0
  3572  000018                     fatfs_get_substring@levels:
  3573                           	opt stack 0
  3574  000018                     media_write@Start_Addr:
  3575                           	opt stack 0
  3576  000018                     fatfs_itoa@digits:
  3577                           	opt stack 0
  3578                           
  3579                           ; 17 bytes @ 0x17
  3580  000018                     	ds	1
  3581  000019                     fatfs_lfn_create_sfn@dotPos:
  3582                           	opt stack 0
  3583  000019                     fatfs_compare_names@ext2:
  3584                           	opt stack 0
  3585  000019                     printf@ap:
  3586                           	opt stack 0
  3587  000019                     fl_fseek@offset:
  3588                           	opt stack 0
  3589                           
  3590                           ; 4 bytes @ 0x18
  3591  000019                     	ds	1
  3592  00001A                     fatfs_get_substring@expectedchar:
  3593                           	opt stack 0
  3594  00001A                     fatfs_filename_to_lfn@nameIndexes:
  3595                           	opt stack 0
  3596                           
  3597                           ; 10 bytes @ 0x19
  3598  00001A                     	ds	1
  3599  00001B                     Switch@c:
  3600                           	opt stack 0
  3601  00001B                     printf@flag:
  3602                           	opt stack 0
  3603  00001B                     fatfs_lfn_create_sfn@i:
  3604                           	opt stack 0
  3605  00001B                     fatfs_get_substring@copypnt:
  3606                           	opt stack 0
  3607  00001B                     fatfs_compare_names@file2Len:
  3608                           	opt stack 0
  3609  00001B                     media_read@i:
  3610                           	opt stack 0
  3611                           
  3612                           ; 4 bytes @ 0x1A
  3613  00001B                     	ds	1
  3614  00001C                     media_write@i:
  3615                           	opt stack 0
  3616  00001C                     printf@_val:
  3617                           	opt stack 0
  3618                           
  3619                           ; 4 bytes @ 0x1B
  3620  00001C                     	ds	1
  3621  00001D                     ?_fatfs_split_path:
  3622                           	opt stack 0
  3623  00001D                     fl_fseek@origin:
  3624                           	opt stack 0
  3625  00001D                     fatfs_split_path@full_path:
  3626                           	opt stack 0
  3627  00001D                     fatfs_compare_names@ext1:
  3628                           	opt stack 0
  3629                           
  3630                           ; 2 bytes @ 0x1C
  3631  00001D                     	ds	2
  3632  00001F                     ??_fl_fseek:
  3633  00001F                     ?_fatfs_init:
  3634                           	opt stack 0
  3635  00001F                     ?_fatfs_sector_read:
  3636                           	opt stack 0
  3637  00001F                     fatfs_init@fs:
  3638                           	opt stack 0
  3639  00001F                     fatfs_sector_read@fs:
  3640                           	opt stack 0
  3641  00001F                     fatfs_split_path@path:
  3642                           	opt stack 0
  3643  00001F                     fatfs_compare_names@file1Len:
  3644                           	opt stack 0
  3645                           
  3646                           ; 2 bytes @ 0x1E
  3647  00001F                     	ds	1
  3648  000020                     ?_fatfs_sector_write:
  3649                           	opt stack 0
  3650  000020                     ?_fatfs_write_sector:
  3651                           	opt stack 0
  3652  000020                     ?_fatfs_erase_sectors:
  3653                           	opt stack 0
  3654  000020                     ?_fatfs_create_boot_sector:
  3655                           	opt stack 0
  3656  000020                     ?_fatfs_create_fsinfo_sector:
  3657                           	opt stack 0
  3658  000020                     ?_fatfs_erase_fat:
  3659                           	opt stack 0
  3660  000020                     ?_fatfs_fat_writeback:
  3661                           	opt stack 0
  3662  000020                     printf@c:
  3663                           	opt stack 0
  3664  000020                     fatfs_sector_write@fs:
  3665                           	opt stack 0
  3666  000020                     fatfs_write_sector@fs:
  3667                           	opt stack 0
  3668  000020                     fatfs_erase_sectors@fs:
  3669                           	opt stack 0
  3670  000020                     fatfs_create_boot_sector@fs:
  3671                           	opt stack 0
  3672  000020                     fatfs_create_fsinfo_sector@fs:
  3673                           	opt stack 0
  3674  000020                     fatfs_erase_fat@fs:
  3675                           	opt stack 0
  3676  000020                     fatfs_fat_writeback@fs:
  3677                           	opt stack 0
  3678                           
  3679                           ; 2 bytes @ 0x1F
  3680  000020                     	ds	1
  3681  000021                     ??_fatfs_init:
  3682  000021                     fatfs_split_path@max_path:
  3683                           	opt stack 0
  3684  000021                     fatfs_compare_names@ext2Pos:
  3685                           	opt stack 0
  3686  000021                     fatfs_sector_read@lba:
  3687                           	opt stack 0
  3688                           
  3689                           ; 4 bytes @ 0x20
  3690  000021                     	ds	1
  3691  000022                     fatfs_erase_fat@is_fat32:
  3692                           	opt stack 0
  3693  000022                     fatfs_fat_writeback@pcur:
  3694                           	opt stack 0
  3695  000022                     fatfs_sector_write@lba:
  3696                           	opt stack 0
  3697  000022                     fatfs_write_sector@cluster:
  3698                           	opt stack 0
  3699  000022                     fatfs_erase_sectors@lba:
  3700                           	opt stack 0
  3701  000022                     fatfs_create_boot_sector@boot_sector_lba:
  3702                           	opt stack 0
  3703  000022                     fatfs_create_fsinfo_sector@sector_lba:
  3704                           	opt stack 0
  3705                           
  3706                           ; 4 bytes @ 0x21
  3707  000022                     	ds	1
  3708  000023                     fatfs_split_path@filename:
  3709                           	opt stack 0
  3710  000023                     fatfs_compare_names@ext1Pos:
  3711                           	opt stack 0
  3712                           
  3713                           ; 2 bytes @ 0x22
  3714  000023                     	ds	1
  3715  000024                     ??_fatfs_erase_fat:
  3716  000024                     ??_fatfs_fat_writeback:
  3717  000024                     fatfs_filename_to_lfn@entriesRequired:
  3718                           	opt stack 0
  3719                           
  3720                           ; 2 bytes @ 0x23
  3721  000024                     	ds	1
  3722  000025                     ?__check_file_open:
  3723                           	opt stack 0
  3724  000025                     fatfs_sector_read@target:
  3725                           	opt stack 0
  3726  000025                     __check_file_open@file:
  3727                           	opt stack 0
  3728  000025                     fatfs_split_path@max_filename:
  3729                           	opt stack 0
  3730                           
  3731                           ; 2 bytes @ 0x24
  3732  000025                     	ds	1
  3733  000026                     ??_fatfs_create_fsinfo_sector:
  3734  000026                     fatfs_erase_sectors@count:
  3735                           	opt stack 0
  3736  000026                     _fatfs_filename_to_lfn$2422:
  3737                           	opt stack 0
  3738  000026                     fatfs_sector_write@target:
  3739                           	opt stack 0
  3740  000026                     fatfs_write_sector@sector:
  3741                           	opt stack 0
  3742  000026                     fatfs_create_boot_sector@vol_sectors:
  3743                           	opt stack 0
  3744                           
  3745                           ; 4 bytes @ 0x25
  3746  000026                     	ds	1
  3747  000027                     ??_fatfs_split_path:
  3748  000027                     __check_file_open@openFile:
  3749                           	opt stack 0
  3750  000027                     fl_fseek@res:
  3751                           	opt stack 0
  3752  000027                     fatfs_sector_read@count:
  3753                           	opt stack 0
  3754                           
  3755                           ; 4 bytes @ 0x26
  3756  000027                     	ds	1
  3757  000028                     ??_fatfs_erase_sectors:
  3758  000028                     fatfs_filename_to_lfn@length:
  3759                           	opt stack 0
  3760                           
  3761                           ; 2 bytes @ 0x27
  3762  000028                     	ds	1
  3763  000029                     __check_file_open@node:
  3764                           	opt stack 0
  3765  000029                     fl_fseek@file:
  3766                           	opt stack 0
  3767  000029                     fatfs_sector_write@count:
  3768                           	opt stack 0
  3769  000029                     fatfs_itoa@outbuf:
  3770                           	opt stack 0
  3771                           
  3772                           ; 12 bytes @ 0x28
  3773  000029                     	ds	1
  3774  00002A                     fatfs_write_sector@target:
  3775                           	opt stack 0
  3776  00002A                     fatfs_create_boot_sector@name:
  3777                           	opt stack 0
  3778  00002A                     fatfs_filename_to_lfn@start:
  3779                           	opt stack 0
  3780                           
  3781                           ; 2 bytes @ 0x29
  3782  00002A                     	ds	1
  3783  00002B                     ??_fatfs_sector_read:
  3784  00002B                     fatfs_split_path@levels:
  3785                           	opt stack 0
  3786                           
  3787                           ; 2 bytes @ 0x2A
  3788  00002B                     	ds	1
  3789  00002C                     ??_fatfs_write_sector:
  3790  00002C                     fatfs_create_boot_sector@is_fat32:
  3791                           	opt stack 0
  3792  00002C                     fatfs_filename_to_lfn@i:
  3793                           	opt stack 0
  3794  00002C                     fatfs_fat_writeback@sectors:
  3795                           	opt stack 0
  3796                           
  3797                           ; 4 bytes @ 0x2B
  3798  00002C                     	ds	1
  3799  00002D                     ??_fatfs_sector_write:
  3800  00002D                     fatfs_split_path@strindex:
  3801                           	opt stack 0
  3802                           
  3803                           ; 2 bytes @ 0x2C
  3804  00002D                     	ds	1
  3805  00002E                     ??_fatfs_create_boot_sector:
  3806                           
  3807                           ; 0 bytes @ 0x2D
  3808  00002E                     	ds	2
  3809  000030                     fatfs_erase_sectors@i:
  3810                           	opt stack 0
  3811  000030                     fatfs_fat_writeback@offset:
  3812                           	opt stack 0
  3813                           
  3814                           ; 4 bytes @ 0x2F
  3815  000030                     	ds	1
  3816  000031                     fatfs_erase_fat@i:
  3817                           	opt stack 0
  3818                           
  3819                           ; 4 bytes @ 0x30
  3820  000031                     	ds	3
  3821  000034                     ?_fatfs_fat_read_sector:
  3822                           	opt stack 0
  3823  000034                     fatfs_fat_read_sector@fs:
  3824                           	opt stack 0
  3825  000034                     fatfs_fat_purge@fs:
  3826                           	opt stack 0
  3827                           
  3828                           ; 2 bytes @ 0x33
  3829  000034                     	ds	1
  3830  000035                     fatfs_itoa@cp:
  3831                           	opt stack 0
  3832                           
  3833                           ; 2 bytes @ 0x34
  3834  000035                     	ds	1
  3835  000036                     fatfs_fat_purge@pcur:
  3836                           	opt stack 0
  3837  000036                     fatfs_create_boot_sector@total_clusters:
  3838                           	opt stack 0
  3839  000036                     fatfs_fat_read_sector@sector:
  3840                           	opt stack 0
  3841                           
  3842                           ; 4 bytes @ 0x35
  3843  000036                     	ds	1
  3844  000037                     fatfs_lfn_generate_tail@sfn_output:
  3845                           	opt stack 0
  3846                           
  3847                           ; 2 bytes @ 0x36
  3848  000037                     	ds	1
  3849  000038                     fatfs_write_sector@lba_440:
  3850                           	opt stack 0
  3851                           
  3852                           ; 4 bytes @ 0x37
  3853  000038                     	ds	1
  3854  000039                     fatfs_lfn_generate_tail@sfn_input:
  3855                           	opt stack 0
  3856                           
  3857                           ; 2 bytes @ 0x38
  3858  000039                     	ds	1
  3859  00003A                     ??_fatfs_fat_read_sector:
  3860  00003A                     fatfs_create_boot_sector@i:
  3861                           	opt stack 0
  3862                           
  3863                           ; 2 bytes @ 0x39
  3864  00003A                     	ds	1
  3865  00003B                     fatfs_lfn_generate_tail@tailNum:
  3866                           	opt stack 0
  3867                           
  3868                           ; 4 bytes @ 0x3A
  3869  00003B                     	ds	1
  3870  00003C                     ?_fatfs_format_fat16:
  3871                           	opt stack 0
  3872  00003C                     ?_fatfs_format_fat32:
  3873                           	opt stack 0
  3874  00003C                     fatfs_format_fat16@fs:
  3875                           	opt stack 0
  3876  00003C                     fatfs_format_fat32@fs:
  3877                           	opt stack 0
  3878  00003C                     fatfs_write_sector@lba:
  3879                           	opt stack 0
  3880                           
  3881                           ; 4 bytes @ 0x3B
  3882  00003C                     	ds	1
  3883  00003D                     fatfs_init@root_dir_sectors:
  3884                           	opt stack 0
  3885                           
  3886                           ; 4 bytes @ 0x3C
  3887  00003D                     	ds	1
  3888  00003E                     fatfs_format_fat16@volume_sectors:
  3889                           	opt stack 0
  3890  00003E                     fatfs_format_fat32@volume_sectors:
  3891                           	opt stack 0
  3892                           
  3893                           ; 4 bytes @ 0x3D
  3894  00003E                     	ds	1
  3895  00003F                     ??_fatfs_lfn_generate_tail:
  3896                           
  3897                           ; 0 bytes @ 0x3E
  3898  00003F                     	ds	2
  3899  000041                     fatfs_init@data_sectors:
  3900                           	opt stack 0
  3901  000041                     fatfs_lfn_generate_tail@tail_str:
  3902                           	opt stack 0
  3903                           
  3904                           ; 12 bytes @ 0x40
  3905  000041                     	ds	1
  3906  000042                     fatfs_format_fat16@name:
  3907                           	opt stack 0
  3908  000042                     fatfs_format_fat32@name:
  3909                           	opt stack 0
  3910  000042                     fatfs_fat_read_sector@last:
  3911                           	opt stack 0
  3912                           
  3913                           ; 2 bytes @ 0x41
  3914  000042                     	ds	2
  3915  000044                     ??_fatfs_format_fat16:
  3916  000044                     ??_fatfs_format_fat32:
  3917  000044                     fatfs_fat_read_sector@pcur:
  3918                           	opt stack 0
  3919                           
  3920                           ; 2 bytes @ 0x43
  3921  000044                     	ds	1
  3922  000045                     fatfs_init@FATSz:
  3923                           	opt stack 0
  3924                           
  3925                           ; 4 bytes @ 0x44
  3926  000045                     	ds	1
  3927  000046                     ?_fatfs_find_blank_cluster:
  3928                           	opt stack 0
  3929  000046                     ?_fatfs_find_next_cluster:
  3930                           	opt stack 0
  3931  000046                     fatfs_find_next_cluster@fs:
  3932                           	opt stack 0
  3933  000046                     fatfs_set_fs_info_next_free_cluster@fs:
  3934                           	opt stack 0
  3935  000046                     fatfs_find_blank_cluster@fs:
  3936                           	opt stack 0
  3937  000046                     fatfs_fat_set_cluster@fs:
  3938                           	opt stack 0
  3939                           
  3940                           ; 2 bytes @ 0x45
  3941  000046                     	ds	2
  3942  000048                     fatfs_find_next_cluster@current_cluster:
  3943                           	opt stack 0
  3944  000048                     fatfs_set_fs_info_next_free_cluster@newValue:
  3945                           	opt stack 0
  3946  000048                     fatfs_find_blank_cluster@start_cluster:
  3947                           	opt stack 0
  3948  000048                     fatfs_fat_set_cluster@cluster:
  3949                           	opt stack 0
  3950                           
  3951                           ; 4 bytes @ 0x47
  3952  000048                     	ds	1
  3953  000049                     fatfs_init@total_sectors:
  3954                           	opt stack 0
  3955                           
  3956                           ; 4 bytes @ 0x48
  3957  000049                     	ds	3
  3958  00004C                     ??_fatfs_find_next_cluster:
  3959  00004C                     ??_fatfs_set_fs_info_next_free_cluster:
  3960  00004C                     fatfs_find_blank_cluster@free_cluster:
  3961                           	opt stack 0
  3962  00004C                     fatfs_fat_set_cluster@next_cluster:
  3963                           	opt stack 0
  3964                           
  3965                           ; 4 bytes @ 0x4B
  3966  00004C                     	ds	1
  3967  00004D                     fatfs_lfn_generate_tail@tail_chars:
  3968                           	opt stack 0
  3969  00004D                     fatfs_init@count_of_clusters:
  3970                           	opt stack 0
  3971                           
  3972                           ; 4 bytes @ 0x4C
  3973  00004D                     	ds	1
  3974  00004E                     ??_fatfs_find_blank_cluster:
  3975                           
  3976                           ; 0 bytes @ 0x4D
  3977  00004E                     	ds	2
  3978  000050                     ??_fatfs_fat_set_cluster:
  3979                           
  3980                           ; 0 bytes @ 0x4F
  3981  000050                     	ds	1
  3982  000051                     fatfs_init@reserved_sectors:
  3983                           	opt stack 0
  3984                           
  3985                           ; 2 bytes @ 0x50
  3986  000051                     	ds	1
  3987  000052                     fatfs_set_fs_info_next_free_cluster@pbuf:
  3988                           	opt stack 0
  3989                           
  3990                           ; 2 bytes @ 0x51
  3991  000052                     	ds	1
  3992  000053                     fatfs_init@valid_partition:
  3993                           	opt stack 0
  3994                           
  3995                           ; 1 bytes @ 0x52
  3996  000053                     	ds	1
  3997  000054                     fatfs_init@num_of_fats:
  3998                           	opt stack 0
  3999                           
  4000                           ; 1 bytes @ 0x53
  4001  000054                     	ds	1
  4002  000055                     ?_fl_attach_media:
  4003                           	opt stack 0
  4004  000055                     fl_attach_media@rd:
  4005                           	opt stack 0
  4006                           
  4007                           ; 2 bytes @ 0x54
  4008  000055                     	ds	2
  4009  000057                     fl_attach_media@wr:
  4010                           	opt stack 0
  4011                           
  4012                           ; 2 bytes @ 0x56
  4013  000057                     	ds	1
  4014  000058                     fatfs_fat_set_cluster@fat_sector_offset:
  4015                           	opt stack 0
  4016                           
  4017                           ; 4 bytes @ 0x57
  4018  000058                     	ds	1
  4019  000059                     ?_fatfs_format:
  4020                           	opt stack 0
  4021  000059                     fl_attach_media@res:
  4022                           	opt stack 0
  4023  000059                     fatfs_format@fs:
  4024                           	opt stack 0
  4025                           
  4026                           ; 2 bytes @ 0x58
  4027  000059                     	ds	2
  4028  00005B                     fatfs_format@volume_sectors:
  4029                           	opt stack 0
  4030                           
  4031                           ; 4 bytes @ 0x5A
  4032  00005B                     	ds	1
  4033  00005C                     fatfs_fat_set_cluster@position:
  4034                           	opt stack 0
  4035                           
  4036                           ; 4 bytes @ 0x5B
  4037  00005C                     	ds	3
  4038  00005F                     fatfs_format@name:
  4039                           	opt stack 0
  4040                           
  4041                           ; 2 bytes @ 0x5E
  4042  00005F                     	ds	1
  4043  000060                     fatfs_fat_set_cluster@pbuf:
  4044                           	opt stack 0
  4045                           
  4046                           ; 2 bytes @ 0x5F
  4047  000060                     	ds	1
  4048  000061                     ??_fatfs_format:
  4049                           
  4050                           ; 0 bytes @ 0x60
  4051  000061                     	ds	4
  4052  000065                     ?_fl_format:
  4053                           	opt stack 0
  4054  000065                     fl_format@volume_sectors:
  4055                           	opt stack 0
  4056                           
  4057                           ; 4 bytes @ 0x64
  4058  000065                     	ds	4
  4059  000069                     fl_format@name:
  4060                           	opt stack 0
  4061                           
  4062                           ; 2 bytes @ 0x68
  4063  000069                     	ds	2
  4064  00006B                     File_format@volume:
  4065                           	opt stack 0
  4066                           
  4067                           ; 4 bytes @ 0x6A
  4068  00006B                     	ds	4
  4069  00006F                     File_format@name:
  4070                           	opt stack 0
  4071                           
  4072                           ; 2 bytes @ 0x6E
  4073  00006F                     	ds	2
  4074  000071                     
  4075                           ; 0 bytes @ 0x70
  4076  000071                     	ds	1
  4077  000072                     fatfs_find_next_cluster@fat_sector_offset:
  4078                           	opt stack 0
  4079                           
  4080                           ; 4 bytes @ 0x71
  4081  000072                     	ds	2
  4082  000074                     ?_fatfs_add_free_space:
  4083                           	opt stack 0
  4084  000074                     fatfs_add_free_space@fs:
  4085                           	opt stack 0
  4086                           
  4087                           ; 2 bytes @ 0x73
  4088  000074                     	ds	2
  4089  000076                     fatfs_add_free_space@startCluster:
  4090                           	opt stack 0
  4091  000076                     fatfs_find_next_cluster@position:
  4092                           	opt stack 0
  4093                           
  4094                           ; 4 bytes @ 0x75
  4095  000076                     	ds	2
  4096  000078                     fatfs_add_free_space@clusters:
  4097                           	opt stack 0
  4098                           
  4099                           ; 4 bytes @ 0x77
  4100  000078                     	ds	2
  4101  00007A                     fatfs_find_next_cluster@nextcluster:
  4102                           	opt stack 0
  4103                           
  4104                           ; 4 bytes @ 0x79
  4105  00007A                     	ds	2
  4106  00007C                     ??_fatfs_add_free_space:
  4107                           
  4108                           ; 0 bytes @ 0x7B
  4109  00007C                     	ds	2
  4110  00007E                     fatfs_find_next_cluster@pbuf:
  4111                           	opt stack 0
  4112                           
  4113                           ; 2 bytes @ 0x7D
  4114  00007E                     	ds	2
  4115  000080                     tblptru	equ	0xFF8
  4116                           tblptrh	equ	0xFF7
  4117                           tblptrl	equ	0xFF6
  4118                           tablat	equ	0xFF5
  4119                           postinc0	equ	0xFEE
  4120                           wreg	equ	0xFE8
  4121                           postdec1	equ	0xFE5
  4122                           fsr1h	equ	0xFE2
  4123                           fsr1l	equ	0xFE1
  4124                           
  4125                           ; 0 bytes @ 0x7F
  4126 ;;
  4127 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4128 ;;
  4129 ;; *************** function _main *****************
  4130 ;; Defined at:
  4131 ;;		line 759 in file "main.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;		None               void
  4138 ;; Registers used:
  4139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;Total ram usage:        1 bytes
  4150 ;; Hardware stack levels required when called:   13
  4151 ;; This function calls:
  4152 ;;		_ConfigUSART
  4153 ;;		_Create_folder
  4154 ;;		_File_append
  4155 ;;		_File_delete
  4156 ;;		_File_read
  4157 ;;		_File_write
  4158 ;;		_Format_drive
  4159 ;;		_Open_dir
  4160 ;;		_ReadUART
  4161 ;;		_Write_str
  4162 ;;		_fl_attach_media
  4163 ;;		_fl_init
  4164 ;;		_fl_listdirectory
  4165 ;;		_fl_shutdown
  4166 ;;		_mmc_init
  4167 ;;		_spi_init
  4168 ;; This function is called by:
  4169 ;;		Startup code after reset
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text0
  4174  0066D8                     __ptext0:
  4175                           	opt stack 0
  4176  0066D8                     _main:
  4177                           	opt stack 18
  4178                           
  4179                           ;main.c: 761: ADCON1 = 0x0F;
  4180                           
  4181                           ;incstack = 0
  4182  0066D8  0E0F               	movlw	15
  4183  0066DA  6EC1               	movwf	4033,c	;volatile
  4184                           
  4185                           ;main.c: 762: CMCON |=0X07;
  4186  0066DC  0E07               	movlw	7
  4187  0066DE  12B4               	iorwf	4020,f,c	;volatile
  4188                           
  4189                           ;main.c: 763: TRISA = 0x00;
  4190  0066E0  6A92               	clrf	3986,c	;volatile
  4191                           
  4192                           ;main.c: 764: LATA = 0x00;
  4193  0066E2  6A89               	clrf	3977,c	;volatile
  4194                           
  4195                           ;main.c: 765: TRISE = 0x00;
  4196  0066E4  6A96               	clrf	3990,c	;volatile
  4197                           
  4198                           ;main.c: 766: LATE = 0x00;
  4199  0066E6  6A8D               	clrf	3981,c	;volatile
  4200                           
  4201                           ;main.c: 767: ConfigUSART(config_1, ((20000000/9600/64)-1));
  4202  0066E8  0E1F               	movlw	31
  4203  0066EA  6E07               	movwf	ConfigUSART@config_2,c
  4204  0066EC  0101               	movlb	1	; () banked
  4205  0066EE  51F6               	movf	_config_1& (0+255),w,b
  4206  0066F0  EC35  F01F         	call	_ConfigUSART
  4207                           
  4208                           ;main.c: 768: spi_init();
  4209  0066F4  EC69  F01F         	call	_spi_init	;wreg free
  4210                           
  4211                           ;main.c: 769: _delay((unsigned long)((1)*(20000000/4000.0)));
  4212  0066F8  0E07               	movlw	7
  4213  0066FA  0101               	movlb	1	; () banked
  4214  0066FC  6F8A               	movwf	??_main& (0+255),b
  4215  0066FE  0E7D               	movlw	125
  4216  006700                     u17517:
  4217  006700  2EE8               	decfsz	wreg,f,c
  4218  006702  D7FE               	goto	u17517
  4219  006704  2F8A               	decfsz	??_main& (0+255),f,b
  4220  006706  D7FC               	goto	u17517
  4221  006708  F000               	nop	
  4222                           
  4223                           ;main.c: 770: if(!mmc_init())
  4224  00670A  EC05  F02D         	call	_mmc_init	;wreg free
  4225  00670E  0900               	iorlw	0
  4226  006710  E107               	bnz	l13702
  4227                           
  4228                           ;main.c: 771: {
  4229                           ;main.c: 772: Write_str("\n\rcard initialized..!\r\n");
  4230  006712  0EFE               	movlw	high STR_61
  4231  006714  6E07               	movwf	Write_str@str+1,c
  4232  006716  0E38               	movlw	low STR_61
  4233  006718  6E06               	movwf	Write_str@str,c
  4234  00671A  EC3C  F01F         	call	_Write_str	;wreg free
  4235                           
  4236                           ;main.c: 773: }
  4237  00671E  D006               	goto	l13704
  4238  006720                     l13702:
  4239                           
  4240                           ;main.c: 774: else
  4241                           ;main.c: 775: Write_str("\ncard initialization failed...!");
  4242  006720  0EFD               	movlw	high STR_62
  4243  006722  6E07               	movwf	Write_str@str+1,c
  4244  006724  0E35               	movlw	low STR_62
  4245  006726  6E06               	movwf	Write_str@str,c
  4246  006728  EC3C  F01F         	call	_Write_str	;wreg free
  4247  00672C                     l13704:
  4248                           
  4249                           ;main.c: 776: fl_init();
  4250  00672C  EC3A  F029         	call	_fl_init	;wreg free
  4251                           
  4252                           ;main.c: 777: if (fl_attach_media(media_read, media_write) != 0)
  4253  006730  0E61               	movlw	high _media_read
  4254  006732  6E56               	movwf	fl_attach_media@rd+1,c
  4255  006734  0E26               	movlw	low _media_read
  4256  006736  6E55               	movwf	fl_attach_media@rd,c
  4257  006738  0E64               	movlw	high _media_write
  4258  00673A  6E58               	movwf	fl_attach_media@wr+1,c
  4259  00673C  0E5C               	movlw	low _media_write
  4260  00673E  6E57               	movwf	fl_attach_media@wr,c
  4261  006740  EC97  F025         	call	_fl_attach_media	;wreg free
  4262  006744  5056               	movf	?_fl_attach_media+1,w,c
  4263  006746  1055               	iorwf	?_fl_attach_media,w,c
  4264  006748  E008               	bz	l13712
  4265                           
  4266                           ;main.c: 778: {
  4267                           ;main.c: 779: Write_str("ERROR: Media attach failed\n");
  4268  00674A  0EFD               	movlw	high STR_63
  4269  00674C  6E07               	movwf	Write_str@str+1,c
  4270  00674E  0E93               	movlw	low STR_63
  4271  006750  6E06               	movwf	Write_str@str,c
  4272  006752  EC3C  F01F         	call	_Write_str	;wreg free
  4273  006756  EF00  F000         	goto	start
  4274  00675A                     l13712:
  4275                           
  4276                           ;main.c: 781: }
  4277                           ;main.c: 782: fl_listdirectory("/");
  4278  00675A  0EFF               	movlw	high STR_64
  4279  00675C  0101               	movlb	1	; () banked
  4280  00675E  6F4E               	movwf	(fl_listdirectory@path+1)& (0+255),b
  4281  006760  0EF6               	movlw	low STR_64
  4282  006762  6F4D               	movwf	fl_listdirectory@path& (0+255),b
  4283  006764  ECF0  F02B         	call	_fl_listdirectory	;wreg free
  4284  006768                     l13714:
  4285                           
  4286                           ;main.c: 785: Write_str("\n\rPlease select an operation?\n\rFile : \r\tWrite    - w\n\r\
      +                          tRead     - r\n\r\tDelete   - d\n\r\tAppend   - a\n\r\tNew Dir  - n\n\r\tFormat   - f\n\
      +                          r\tOpen Dir - x\n\r");
  4287  006768  0EFA               	movlw	high STR_65
  4288  00676A  6E07               	movwf	Write_str@str+1,c
  4289  00676C  0E6A               	movlw	low STR_65
  4290  00676E  6E06               	movwf	Write_str@str,c
  4291  006770  EC3C  F01F         	call	_Write_str	;wreg free
  4292                           
  4293                           ;main.c: 786: c = ReadUART();
  4294  006774  EC1E  F01F         	call	_ReadUART	;wreg free
  4295  006778  0101               	movlb	1	; () banked
  4296  00677A  6FA6               	movwf	_c& (0+255),b
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;main.c: 789: if(c=='w')
  4300  00677C  51A6               	movf	_c& (0+255),w,b
  4301  00677E  0A77               	xorlw	119
  4302  006780  E103               	bnz	l13724
  4303                           
  4304                           ; BSR set to: 1
  4305                           ;main.c: 790: {
  4306                           ;main.c: 791: File_write();
  4307  006782  EC4A  F03F         	call	_File_write	;wreg free
  4308                           
  4309                           ;main.c: 792: break;
  4310  006786  D040               	goto	l13772
  4311  006788                     l13724:
  4312                           
  4313                           ;main.c: 794: else if(c=='a')
  4314  006788  0101               	movlb	1	; () banked
  4315  00678A  51A6               	movf	_c& (0+255),w,b
  4316  00678C  0A61               	xorlw	97
  4317  00678E  E103               	bnz	l13730
  4318                           
  4319                           ; BSR set to: 1
  4320                           ;main.c: 795: {
  4321                           ;main.c: 796: File_append();
  4322  006790  EC55  F041         	call	_File_append	;wreg free
  4323                           
  4324                           ;main.c: 797: break;
  4325  006794  D039               	goto	l13772
  4326  006796                     l13730:
  4327                           
  4328                           ;main.c: 799: else if(c=='r')
  4329  006796  0101               	movlb	1	; () banked
  4330  006798  51A6               	movf	_c& (0+255),w,b
  4331  00679A  0A72               	xorlw	114
  4332  00679C  E103               	bnz	l13736
  4333                           
  4334                           ; BSR set to: 1
  4335                           ;main.c: 800: {
  4336                           ;main.c: 801: File_read();
  4337  00679E  EC97  F02F         	call	_File_read	;wreg free
  4338                           
  4339                           ;main.c: 802: break;
  4340  0067A2  D032               	goto	l13772
  4341  0067A4                     l13736:
  4342                           
  4343                           ;main.c: 804: else if(c=='d')
  4344  0067A4  0101               	movlb	1	; () banked
  4345  0067A6  51A6               	movf	_c& (0+255),w,b
  4346  0067A8  0A64               	xorlw	100
  4347  0067AA  E103               	bnz	l13742
  4348                           
  4349                           ; BSR set to: 1
  4350                           ;main.c: 805: {
  4351                           ;main.c: 806: File_delete();
  4352  0067AC  ECE9  F027         	call	_File_delete	;wreg free
  4353                           
  4354                           ;main.c: 807: break;
  4355  0067B0  D02B               	goto	l13772
  4356  0067B2                     l13742:
  4357                           
  4358                           ;main.c: 809: else if(c == 'n')
  4359  0067B2  0101               	movlb	1	; () banked
  4360  0067B4  51A6               	movf	_c& (0+255),w,b
  4361  0067B6  0A6E               	xorlw	110
  4362  0067B8  E103               	bnz	l13748
  4363                           
  4364                           ; BSR set to: 1
  4365                           ;main.c: 810: {
  4366                           ;main.c: 811: Create_folder();
  4367  0067BA  EC6C  F028         	call	_Create_folder	;wreg free
  4368                           
  4369                           ;main.c: 812: break;
  4370  0067BE  D024               	goto	l13772
  4371  0067C0                     l13748:
  4372                           
  4373                           ;main.c: 814: else if (c=='x')
  4374  0067C0  0101               	movlb	1	; () banked
  4375  0067C2  51A6               	movf	_c& (0+255),w,b
  4376  0067C4  0A78               	xorlw	120
  4377  0067C6  E103               	bnz	l13754
  4378                           
  4379                           ; BSR set to: 1
  4380                           ;main.c: 815: {
  4381                           ;main.c: 816: Open_dir();
  4382  0067C8  ECA9  F027         	call	_Open_dir	;wreg free
  4383                           
  4384                           ;main.c: 817: break;
  4385  0067CC  D01D               	goto	l13772
  4386  0067CE                     l13754:
  4387                           
  4388                           ;main.c: 819: else if(c=='f')
  4389  0067CE  0101               	movlb	1	; () banked
  4390  0067D0  51A6               	movf	_c& (0+255),w,b
  4391  0067D2  0A66               	xorlw	102
  4392  0067D4  E103               	bnz	l13760
  4393                           
  4394                           ; BSR set to: 1
  4395                           ;main.c: 820: {
  4396                           ;main.c: 821: Format_drive();
  4397  0067D6  EC47  F023         	call	_Format_drive	;wreg free
  4398                           
  4399                           ;main.c: 822: break;
  4400  0067DA  D016               	goto	l13772
  4401  0067DC                     l13760:
  4402                           
  4403                           ;main.c: 824: else
  4404                           ;main.c: 825: Write_str("\n\rInvalid Entry..!");
  4405  0067DC  0EFF               	movlw	high STR_66
  4406  0067DE  6E07               	movwf	Write_str@str+1,c
  4407  0067E0  0E2A               	movlw	low STR_66
  4408  0067E2  6E06               	movwf	Write_str@str,c
  4409  0067E4  EC3C  F01F         	call	_Write_str	;wreg free
  4410                           
  4411                           ;main.c: 827: }while((c != 'w') && (c != 'r') && (c != 'd') && (c != 'n') && (c != 'x'))
      +                          ;
  4412  0067E8  0101               	movlb	1	; () banked
  4413  0067EA  51A6               	movf	_c& (0+255),w,b
  4414  0067EC  0A77               	xorlw	119
  4415  0067EE  E00C               	bz	l13772
  4416                           
  4417                           ; BSR set to: 1
  4418  0067F0  51A6               	movf	_c& (0+255),w,b
  4419  0067F2  0A72               	xorlw	114
  4420  0067F4  E009               	bz	l13772
  4421                           
  4422                           ; BSR set to: 1
  4423  0067F6  51A6               	movf	_c& (0+255),w,b
  4424  0067F8  0A64               	xorlw	100
  4425  0067FA  E006               	bz	l13772
  4426                           
  4427                           ; BSR set to: 1
  4428  0067FC  51A6               	movf	_c& (0+255),w,b
  4429  0067FE  0A6E               	xorlw	110
  4430  006800  E003               	bz	l13772
  4431                           
  4432                           ; BSR set to: 1
  4433  006802  51A6               	movf	_c& (0+255),w,b
  4434  006804  0A78               	xorlw	120
  4435  006806  E1B0               	bnz	l13714
  4436  006808                     l13772:
  4437                           
  4438                           ;main.c: 829: fl_listdirectory("/");
  4439  006808  0EFF               	movlw	high STR_64
  4440  00680A  0101               	movlb	1	; () banked
  4441  00680C  6F4E               	movwf	(fl_listdirectory@path+1)& (0+255),b
  4442  00680E  0EF6               	movlw	low STR_64
  4443  006810  6F4D               	movwf	fl_listdirectory@path& (0+255),b
  4444  006812  ECF0  F02B         	call	_fl_listdirectory	;wreg free
  4445                           
  4446                           ;main.c: 830: }while(1);
  4447  006816  D7A8               	goto	l13714
  4448  006818                     __end_of_main:
  4449                           	opt stack 0
  4450                           tblptru	equ	0xFF8
  4451                           tblptrh	equ	0xFF7
  4452                           tblptrl	equ	0xFF6
  4453                           tablat	equ	0xFF5
  4454                           postinc0	equ	0xFEE
  4455                           wreg	equ	0xFE8
  4456                           postdec1	equ	0xFE5
  4457                           fsr1h	equ	0xFE2
  4458                           fsr1l	equ	0xFE1
  4459                           
  4460 ;; *************** function _spi_init *****************
  4461 ;; Defined at:
  4462 ;;		line 33 in file "spi_1.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;		None               void
  4469 ;; Registers used:
  4470 ;;		wreg, status,2
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;Total ram usage:        0 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_main
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text1
  4490  003ED2                     __ptext1:
  4491                           	opt stack 0
  4492  003ED2                     _spi_init:
  4493                           	opt stack 30
  4494                           
  4495                           ;spi_1.c: 35: TRISCbits.TRISC4 = 1;
  4496                           
  4497                           ;incstack = 0
  4498  003ED2  8894               	bsf	3988,4,c	;volatile
  4499                           
  4500                           ;spi_1.c: 36: TRISCbits.TRISC3 = 0;
  4501  003ED4  9694               	bcf	3988,3,c	;volatile
  4502                           
  4503                           ;spi_1.c: 37: TRISBbits.TRISB4 = 0;
  4504  003ED6  9893               	bcf	3987,4,c	;volatile
  4505                           
  4506                           ;spi_1.c: 38: TRISCbits.TRISC5 = 0;
  4507  003ED8  9A94               	bcf	3988,5,c	;volatile
  4508                           
  4509                           ;spi_1.c: 39: LATBbits.LATB4 = 1;
  4510  003EDA  888A               	bsf	3978,4,c	;volatile
  4511                           
  4512                           ;spi_1.c: 40: LATCbits.LATC3 = 0;
  4513  003EDC  968B               	bcf	3979,3,c	;volatile
  4514                           
  4515                           ;spi_1.c: 41: LATCbits.LATC5 = 0;
  4516  003EDE  9A8B               	bcf	3979,5,c	;volatile
  4517                           
  4518                           ;spi_1.c: 42: SSPCON1 = 0b00100010;
  4519  003EE0  0E22               	movlw	34
  4520  003EE2  6EC6               	movwf	4038,c	;volatile
  4521                           
  4522                           ;spi_1.c: 43: SMP = 1;
  4523  003EE4  8EC7               	bsf	4039,7,c	;volatile
  4524                           
  4525                           ;spi_1.c: 44: CKE = 1;
  4526  003EE6  8CC7               	bsf	4039,6,c	;volatile
  4527                           
  4528                           ;spi_1.c: 45: CKP = 0;
  4529  003EE8  98C6               	bcf	4038,4,c	;volatile
  4530                           
  4531                           ;spi_1.c: 46: SSPEN = 1;
  4532  003EEA  8AC6               	bsf	4038,5,c	;volatile
  4533  003EEC  0C22               	retlw	34
  4534  003EEE                     __end_of_spi_init:
  4535                           	opt stack 0
  4536                           tblptru	equ	0xFF8
  4537                           tblptrh	equ	0xFF7
  4538                           tblptrl	equ	0xFF6
  4539                           tablat	equ	0xFF5
  4540                           postinc0	equ	0xFEE
  4541                           wreg	equ	0xFE8
  4542                           postdec1	equ	0xFE5
  4543                           fsr1h	equ	0xFE2
  4544                           fsr1l	equ	0xFE1
  4545                           
  4546 ;; *************** function _mmc_init *****************
  4547 ;; Defined at:
  4548 ;;		line 108 in file "main.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  u               1   10[COMRAM] unsigned char 
  4553 ;;  i               1    9[COMRAM] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      unsigned char 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;Total ram usage:        3 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    2
  4570 ;; This function calls:
  4571 ;;		_WriteSPI_
  4572 ;;		_command
  4573 ;;		_spi_read
  4574 ;; This function is called by:
  4575 ;;		_main
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text2
  4580  005A0A                     __ptext2:
  4581                           	opt stack 0
  4582  005A0A                     _mmc_init:
  4583                           	opt stack 28
  4584                           
  4585                           ;main.c: 110: unsigned char u,i;
  4586                           ;main.c: 111: LATBbits.LATB4 = 1;
  4587                           
  4588                           ;incstack = 0
  4589  005A0A  888A               	bsf	3978,4,c	;volatile
  4590                           
  4591                           ;main.c: 112: LATCbits.LATC5 = 0;
  4592  005A0C  9A8B               	bcf	3979,5,c	;volatile
  4593                           
  4594                           ;main.c: 113: for (u = 0; u <10; u++)
  4595  005A0E  6A0B               	clrf	mmc_init@u,c
  4596  005A10  D004               	goto	L1
  4597  005A12                     l12864:
  4598                           
  4599                           ;main.c: 114: {
  4600                           ;main.c: 115: WriteSPI_(0xFF);
  4601  005A12  0EFF               	movlw	255
  4602  005A14  EC77  F01F         	call	_WriteSPI_
  4603  005A18  2A0B               	incf	mmc_init@u,f,c
  4604  005A1A                     L1:
  4605  005A1A  0E09               	movlw	9
  4606  005A1C  640B               	cpfsgt	mmc_init@u,c
  4607  005A1E  D7F9               	goto	l12864
  4608                           
  4609                           ;main.c: 116: }
  4610                           ;main.c: 117: LATBbits.LATB4 = 0;
  4611  005A20  988A               	bcf	3978,4,c	;volatile
  4612                           
  4613                           ;main.c: 118: readdata = 0;
  4614  005A22  0101               	movlb	1	; () banked
  4615  005A24  6BAB               	clrf	_readdata& (0+255),b
  4616                           
  4617                           ; BSR set to: 1
  4618                           ;main.c: 120: command(0, 0, 0x95);
  4619  005A26  6A03               	clrf	command@fourbyte_arg,c
  4620  005A28  6A04               	clrf	command@fourbyte_arg+1,c
  4621  005A2A  6A05               	clrf	command@fourbyte_arg+2,c
  4622  005A2C  6A06               	clrf	command@fourbyte_arg+3,c
  4623  005A2E  0E95               	movlw	149
  4624  005A30  6E07               	movwf	command@CRCbits,c
  4625  005A32  0E00               	movlw	0
  4626  005A34  EC86  F021         	call	_command
  4627  005A38                     l12874:
  4628                           
  4629                           ;main.c: 122: spi_read();
  4630  005A38  EC2F  F01F         	call	_spi_read	;wreg free
  4631                           
  4632                           ;main.c: 123: }while(readdata!= 0x01);
  4633  005A3C  0101               	movlb	1	; () banked
  4634  005A3E  05AB               	decf	_readdata& (0+255),w,b
  4635  005A40  E1FB               	bnz	l12874
  4636                           
  4637                           ; BSR set to: 1
  4638                           ;main.c: 124: count = 0;
  4639                           
  4640                           ; BSR set to: 1
  4641  005A42  6B96               	clrf	(_count+1)& (0+255),b
  4642  005A44  6B95               	clrf	_count& (0+255),b
  4643                           
  4644                           ; BSR set to: 1
  4645                           ;main.c: 125: _delay((unsigned long)((1)*(20000000/4000.0)));
  4646  005A46  0E07               	movlw	7
  4647  005A48  6E09               	movwf	??_mmc_init& (0+255),c
  4648  005A4A  0E7D               	movlw	125
  4649  005A4C                     u17527:
  4650  005A4C  2EE8               	decfsz	wreg,f,c
  4651  005A4E  D7FE               	goto	u17527
  4652  005A50  2E09               	decfsz	??_mmc_init& (0+255),f,c
  4653  005A52  D7FC               	goto	u17527
  4654  005A54  F000               	nop	
  4655                           
  4656                           ;main.c: 126: command(1, 0 , 0xFF);
  4657  005A56  6A03               	clrf	command@fourbyte_arg,c
  4658  005A58  6A04               	clrf	command@fourbyte_arg+1,c
  4659  005A5A  6A05               	clrf	command@fourbyte_arg+2,c
  4660  005A5C  6A06               	clrf	command@fourbyte_arg+3,c
  4661  005A5E  6807               	setf	command@CRCbits,c
  4662  005A60  0E01               	movlw	1
  4663  005A62  EC86  F021         	call	_command
  4664  005A66                     l12884:
  4665                           
  4666                           ;main.c: 128: spi_read();
  4667  005A66  EC2F  F01F         	call	_spi_read	;wreg free
  4668                           
  4669                           ;main.c: 129: count++;
  4670  005A6A  0101               	movlb	1	; () banked
  4671  005A6C  4B95               	infsnz	_count& (0+255),f,b
  4672  005A6E  2B96               	incf	(_count+1)& (0+255),f,b
  4673                           
  4674                           ;main.c: 130: }while((readdata!= 0x00)&&(readdata!= 0x01));
  4675  005A70  51AB               	movf	_readdata& (0+255),w,b
  4676  005A72  E002               	bz	l12890
  4677                           
  4678                           ; BSR set to: 1
  4679  005A74  05AB               	decf	_readdata& (0+255),w,b
  4680  005A76  E1F7               	bnz	l12884
  4681  005A78                     l12890:
  4682                           
  4683                           ; BSR set to: 1
  4684                           ;main.c: 131: i=0;
  4685  005A78  6A0A               	clrf	mmc_init@i,c
  4686  005A7A                     l12892:
  4687                           
  4688                           ; BSR set to: 1
  4689                           ;main.c: 133: command(55, 0 , 0xFF);
  4690  005A7A  6A03               	clrf	command@fourbyte_arg,c
  4691  005A7C  6A04               	clrf	command@fourbyte_arg+1,c
  4692  005A7E  6A05               	clrf	command@fourbyte_arg+2,c
  4693  005A80  6A06               	clrf	command@fourbyte_arg+3,c
  4694  005A82  6807               	setf	command@CRCbits,c
  4695  005A84  0E37               	movlw	55
  4696  005A86  EC86  F021         	call	_command
  4697  005A8A                     l12894:
  4698                           
  4699                           ;main.c: 135: spi_read();
  4700  005A8A  EC2F  F01F         	call	_spi_read	;wreg free
  4701                           
  4702                           ;main.c: 136: }while((readdata!=0x00)&&(readdata!=0x01)&&(readdata!=0x05));
  4703  005A8E  0101               	movlb	1	; () banked
  4704  005A90  51AB               	movf	_readdata& (0+255),w,b
  4705  005A92  E005               	bz	l12902
  4706                           
  4707                           ; BSR set to: 1
  4708  005A94  05AB               	decf	_readdata& (0+255),w,b
  4709  005A96  E003               	bz	l12902
  4710                           
  4711                           ; BSR set to: 1
  4712  005A98  51AB               	movf	_readdata& (0+255),w,b
  4713  005A9A  0A05               	xorlw	5
  4714  005A9C  E1F6               	bnz	l12894
  4715  005A9E                     l12902:
  4716                           
  4717                           ; BSR set to: 1
  4718                           ;main.c: 137: command(1, 0 , 0xFF);
  4719  005A9E  6A03               	clrf	command@fourbyte_arg,c
  4720  005AA0  6A04               	clrf	command@fourbyte_arg+1,c
  4721  005AA2  6A05               	clrf	command@fourbyte_arg+2,c
  4722  005AA4  6A06               	clrf	command@fourbyte_arg+3,c
  4723  005AA6  6807               	setf	command@CRCbits,c
  4724  005AA8  0E01               	movlw	1
  4725  005AAA  EC86  F021         	call	_command
  4726  005AAE                     l12904:
  4727                           
  4728                           ;main.c: 139: spi_read();
  4729  005AAE  EC2F  F01F         	call	_spi_read	;wreg free
  4730                           
  4731                           ;main.c: 140: }while((readdata!= 0x00)&&(readdata!= 0x01));
  4732  005AB2  0101               	movlb	1	; () banked
  4733  005AB4  51AB               	movf	_readdata& (0+255),w,b
  4734  005AB6  E002               	bz	l1584
  4735                           
  4736                           ; BSR set to: 1
  4737  005AB8  05AB               	decf	_readdata& (0+255),w,b
  4738  005ABA  E1F9               	bnz	l12904
  4739  005ABC                     l1584:
  4740                           
  4741                           ; BSR set to: 1
  4742                           ;main.c: 141: }while(readdata!=00);
  4743  005ABC  0101               	movlb	1	; () banked
  4744  005ABE  67AB               	tstfsz	_readdata& (0+255),b
  4745  005AC0  D7DC               	goto	l12892
  4746                           
  4747                           ; BSR set to: 1
  4748                           ;main.c: 142: if(readdata != 0x00)
  4749                           
  4750                           ; BSR set to: 1
  4751  005AC2  51AB               	movf	_readdata& (0+255),w,b
  4752  005AC4  A4D8               	btfss	status,2,c
  4753                           
  4754                           ; BSR set to: 1
  4755                           ;main.c: 143: return(1);
  4756  005AC6  0E01               	movlw	1
  4757                           
  4758                           ; BSR set to: 1
  4759                           
  4760                           ; BSR set to: 1
  4761                           
  4762                           ; BSR set to: 1
  4763  005AC8  0012               	return	
  4764  005ACA                     __end_of_mmc_init:
  4765                           	opt stack 0
  4766                           tblptru	equ	0xFF8
  4767                           tblptrh	equ	0xFF7
  4768                           tblptrl	equ	0xFF6
  4769                           tablat	equ	0xFF5
  4770                           postinc0	equ	0xFEE
  4771                           wreg	equ	0xFE8
  4772                           postdec1	equ	0xFE5
  4773                           fsr1h	equ	0xFE2
  4774                           fsr1l	equ	0xFE1
  4775                           status	equ	0xFD8
  4776                           
  4777 ;; *************** function _fl_shutdown *****************
  4778 ;; Defined at:
  4779 ;;		line 681 in file "fat_filelib.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;		None
  4784 ;; Return value:  Size  Location     Type
  4785 ;;		None               void
  4786 ;; Registers used:
  4787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;Total ram usage:        0 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    5
  4800 ;; This function calls:
  4801 ;;		_fatfs_fat_purge
  4802 ;;		_fl_init
  4803 ;; This function is called by:
  4804 ;;		_main
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text3
  4809  003E9E                     __ptext3:
  4810                           	opt stack 0
  4811  003E9E                     _fl_shutdown:
  4812                           	opt stack 25
  4813                           
  4814                           ;fat_filelib.c: 684: { if (_filelib_init==0) fl_init(); };
  4815                           
  4816                           ; BSR set to: 1
  4817                           ;incstack = 0
  4818  003E9E  0101               	movlb	1	; () banked
  4819  003EA0  5192               	movf	(__filelib_init+1)& (0+255),w,b
  4820  003EA2  1191               	iorwf	__filelib_init& (0+255),w,b
  4821  003EA4  B4D8               	btfsc	status,2,c
  4822                           
  4823                           ; BSR set to: 1
  4824  003EA6  EC3A  F029         	call	_fl_init	;wreg free
  4825                           
  4826                           ;fat_filelib.c: 687: fatfs_fat_purge(&_fs);
  4827                           
  4828                           ;fat_filelib.c: 686: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
  4829  003EAA  0E09               	movlw	high __fs
  4830  003EAC  6E35               	movwf	fatfs_fat_purge@fs+1,c
  4831  003EAE  0E78               	movlw	low __fs
  4832  003EB0  6E34               	movwf	fatfs_fat_purge@fs,c
  4833  003EB2  EFC3  F022         	goto	_fatfs_fat_purge	;wreg free
  4834  003EB6                     __end_of_fl_shutdown:
  4835                           	opt stack 0
  4836                           tblptru	equ	0xFF8
  4837                           tblptrh	equ	0xFF7
  4838                           tblptrl	equ	0xFF6
  4839                           tablat	equ	0xFF5
  4840                           postinc0	equ	0xFEE
  4841                           wreg	equ	0xFE8
  4842                           postdec1	equ	0xFE5
  4843                           fsr1h	equ	0xFE2
  4844                           fsr1l	equ	0xFE1
  4845                           status	equ	0xFD8
  4846                           
  4847 ;; *************** function _fl_attach_media *****************
  4848 ;; Defined at:
  4849 ;;		line 658 in file "fat_filelib.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  rd              2   84[COMRAM] PTR FTN(unsigned long ,P
  4852 ;;		 -> media_read(2), 
  4853 ;;  wr              2   86[COMRAM] PTR FTN(unsigned long ,P
  4854 ;;		 -> media_write(2), 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  res             2   88[COMRAM] int 
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  2   84[COMRAM] int 
  4859 ;; Registers used:
  4860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4867 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;Total ram usage:        6 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:    4
  4873 ;; This function calls:
  4874 ;;		_fatfs_init
  4875 ;;		_fl_init
  4876 ;;		_printf
  4877 ;; This function is called by:
  4878 ;;		_main
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text4
  4883  004B2E                     __ptext4:
  4884                           	opt stack 0
  4885  004B2E                     _fl_attach_media:
  4886                           	opt stack 26
  4887                           
  4888                           ;fat_filelib.c: 660: int res;
  4889                           ;fat_filelib.c: 663: { if (_filelib_init==0) fl_init(); };
  4890                           
  4891                           ;incstack = 0
  4892  004B2E  0101               	movlb	1	; () banked
  4893  004B30  5192               	movf	(__filelib_init+1)& (0+255),w,b
  4894  004B32  1191               	iorwf	__filelib_init& (0+255),w,b
  4895  004B34  B4D8               	btfsc	status,2,c
  4896                           
  4897                           ; BSR set to: 1
  4898  004B36  EC3A  F029         	call	_fl_init	;wreg free
  4899                           
  4900                           ;fat_filelib.c: 665: _fs.disk_io.read_media = rd;
  4901  004B3A  EE29  F0A1         	lfsr	2,__fs+41
  4902  004B3E  C055  FFDE         	movff	fl_attach_media@rd,postinc2
  4903  004B42  C056  FFDD         	movff	fl_attach_media@rd+1,postdec2
  4904                           
  4905                           ;fat_filelib.c: 666: _fs.disk_io.write_media = wr;
  4906  004B46  EE29  F0A3         	lfsr	2,__fs+43
  4907  004B4A  C057  FFDE         	movff	fl_attach_media@wr,postinc2
  4908  004B4E  C058  FFDD         	movff	fl_attach_media@wr+1,postdec2
  4909                           
  4910                           ;fat_filelib.c: 669: if ((res = fatfs_init(&_fs)) != 0)
  4911  004B52  0E09               	movlw	high __fs
  4912  004B54  6E20               	movwf	fatfs_init@fs+1,c
  4913  004B56  0E78               	movlw	low __fs
  4914  004B58  6E1F               	movwf	fatfs_init@fs,c
  4915  004B5A  EC2E  F076         	call	_fatfs_init	;wreg free
  4916  004B5E  C01F  F059         	movff	?_fatfs_init,fl_attach_media@res
  4917  004B62  C020  F05A         	movff	?_fatfs_init+1,fl_attach_media@res+1
  4918  004B66  505A               	movf	(fl_attach_media@res+1)& (0+255),w,c
  4919  004B68  1059               	iorwf	fl_attach_media@res& (0+255),w,c
  4920  004B6A  E00F               	bz	l12818
  4921                           
  4922                           ;fat_filelib.c: 670: {
  4923                           ;fat_filelib.c: 671: printf ("FAT_FS: Error could not load FAT details (%d)!\r\n", res);
  4924  004B6C  0EFB               	movlw	high STR_9
  4925  004B6E  6E0E               	movwf	printf@f+1,c
  4926  004B70  0E7F               	movlw	low STR_9
  4927  004B72  6E0D               	movwf	printf@f,c
  4928  004B74  C059  F00F         	movff	fl_attach_media@res,?_printf+2
  4929  004B78  C05A  F010         	movff	fl_attach_media@res+1,?_printf+3
  4930  004B7C  ECD9  F045         	call	_printf	;wreg free
  4931                           
  4932                           ;fat_filelib.c: 672: return res;
  4933  004B80  C059  F055         	movff	fl_attach_media@res,?_fl_attach_media
  4934  004B84  C05A  F056         	movff	fl_attach_media@res+1,?_fl_attach_media+1
  4935  004B88  D008               	goto	l530
  4936  004B8A                     l12818:
  4937                           
  4938                           ;fat_filelib.c: 673: }
  4939                           ;fat_filelib.c: 675: _filelib_valid = 1;
  4940  004B8A  0E00               	movlw	0
  4941  004B8C  0101               	movlb	1	; () banked
  4942  004B8E  6F94               	movwf	(__filelib_valid+1)& (0+255),b
  4943  004B90  0E01               	movlw	1
  4944  004B92  6F93               	movwf	__filelib_valid& (0+255),b
  4945                           
  4946                           ;fat_filelib.c: 676: return 0;
  4947  004B94  0E00               	movlw	0
  4948  004B96  6E56               	movwf	?_fl_attach_media+1,c
  4949  004B98  6E55               	movwf	?_fl_attach_media,c
  4950  004B9A                     l530:
  4951  004B9A  0012               	return	
  4952  004B9C                     __end_of_fl_attach_media:
  4953                           	opt stack 0
  4954                           tblptru	equ	0xFF8
  4955                           tblptrh	equ	0xFF7
  4956                           tblptrl	equ	0xFF6
  4957                           tablat	equ	0xFF5
  4958                           postinc0	equ	0xFEE
  4959                           wreg	equ	0xFE8
  4960                           postdec1	equ	0xFE5
  4961                           fsr1h	equ	0xFE2
  4962                           fsr1l	equ	0xFE1
  4963                           postinc2	equ	0xFDE
  4964                           postdec2	equ	0xFDD
  4965                           status	equ	0xFD8
  4966                           
  4967 ;; *************** function _fatfs_init *****************
  4968 ;; Defined at:
  4969 ;;		line 42 in file "fat_access.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;  fs              2   30[COMRAM] PTR struct fatfs
  4972 ;;		 -> _fs(1095), 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  count_of_clu    4   76[COMRAM] unsigned long 
  4975 ;;  total_sector    4   72[COMRAM] unsigned long 
  4976 ;;  FATSz           4   68[COMRAM] unsigned long 
  4977 ;;  data_sectors    4   64[COMRAM] unsigned long 
  4978 ;;  root_dir_sec    4   60[COMRAM] unsigned long 
  4979 ;;  reserved_sec    2   80[COMRAM] unsigned short 
  4980 ;;  num_of_fats     1   83[COMRAM] unsigned char 
  4981 ;;  valid_partit    1   82[COMRAM] unsigned char 
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  2   30[COMRAM] int 
  4984 ;; Registers used:
  4985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;      Temps:         28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;      Totals:        54       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4995 ;;Total ram usage:       54 bytes
  4996 ;; Hardware stack levels used:    1
  4997 ;; Hardware stack levels required when called:    3
  4998 ;; This function calls:
  4999 ;;		___lldiv
  5000 ;;		___lwdiv
  5001 ;;		_fatfs_fat_init
  5002 ;;		_media_read
  5003 ;; This function is called by:
  5004 ;;		_fl_attach_media
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text5
  5009  00EC5C                     __ptext5:
  5010                           	opt stack 0
  5011  00EC5C                     _fatfs_init:
  5012                           	opt stack 26
  5013                           
  5014                           ;fat_access.c: 44: uint8 num_of_fats;
  5015                           ;fat_access.c: 45: uint16 reserved_sectors;
  5016                           ;fat_access.c: 46: uint32 FATSz;
  5017                           ;fat_access.c: 47: uint32 root_dir_sectors;
  5018                           ;fat_access.c: 48: uint32 total_sectors;
  5019                           ;fat_access.c: 49: uint32 data_sectors;
  5020                           ;fat_access.c: 50: uint32 count_of_clusters;
  5021                           ;fat_access.c: 51: uint8 valid_partition = 0;
  5022                           
  5023                           ;incstack = 0
  5024  00EC5C  6A53               	clrf	fatfs_init@valid_partition,c
  5025                           
  5026                           ;fat_access.c: 53: fs->currentsector.address = 0xFFFFFFFF;
  5027  00EC5E  EE22 F031          	lfsr	2,561
  5028  00EC62  501F               	movf	fatfs_init@fs,w,c
  5029  00EC64  26D9               	addwf	fsr2l,f,c
  5030  00EC66  5020               	movf	fatfs_init@fs+1,w,c
  5031  00EC68  22DA               	addwfc	fsr2h,f,c
  5032  00EC6A  68DE               	setf	postinc2,c
  5033  00EC6C  68DE               	setf	postinc2,c
  5034  00EC6E  68DE               	setf	postinc2,c
  5035  00EC70  68DD               	setf	postdec2,c
  5036                           
  5037                           ;fat_access.c: 54: fs->currentsector.dirty = 0;
  5038  00EC72  EE22 F035          	lfsr	2,565
  5039  00EC76  501F               	movf	fatfs_init@fs,w,c
  5040  00EC78  26D9               	addwf	fsr2l,f,c
  5041  00EC7A  5020               	movf	fatfs_init@fs+1,w,c
  5042  00EC7C  22DA               	addwfc	fsr2h,f,c
  5043  00EC7E  6ADE               	clrf	postinc2,c
  5044  00EC80  6ADD               	clrf	postdec2,c
  5045                           
  5046                           ;fat_access.c: 56: fs->next_free_cluster = 0;
  5047  00EC82  EE20 F01F          	lfsr	2,31
  5048  00EC86  501F               	movf	fatfs_init@fs,w,c
  5049  00EC88  26D9               	addwf	fsr2l,f,c
  5050  00EC8A  5020               	movf	fatfs_init@fs+1,w,c
  5051  00EC8C  22DA               	addwfc	fsr2h,f,c
  5052  00EC8E  6ADE               	clrf	postinc2,c
  5053  00EC90  6ADE               	clrf	postinc2,c
  5054  00EC92  6ADE               	clrf	postinc2,c
  5055  00EC94  6ADD               	clrf	postdec2,c
  5056                           
  5057                           ;fat_access.c: 58: fatfs_fat_init(fs);
  5058  00EC96  C020  F00A         	movff	fatfs_init@fs+1,fatfs_fat_init@fs+1
  5059  00EC9A  C01F  F009         	movff	fatfs_init@fs,fatfs_fat_init@fs
  5060  00EC9E  EC6B  F042         	call	_fatfs_fat_init	;wreg free
  5061                           
  5062                           ;fat_access.c: 61: if (!fs->disk_io.read_media)
  5063  00ECA2  EE20 F029          	lfsr	2,41
  5064  00ECA6  501F               	movf	fatfs_init@fs,w,c
  5065  00ECA8  26D9               	addwf	fsr2l,f,c
  5066  00ECAA  5020               	movf	fatfs_init@fs+1,w,c
  5067  00ECAC  22DA               	addwfc	fsr2h,f,c
  5068  00ECAE  50DE               	movf	postinc2,w,c
  5069  00ECB0  10DD               	iorwf	postdec2,w,c
  5070  00ECB2  E101 D137          	bz	u14600
  5071                           
  5072                           ;fat_access.c: 68: if (!fs->disk_io.read_media(0, fs->currentsector.sector, 1))
  5073                           
  5074                           ;fat_access.c: 62: return (-1);
  5075  00ECB6  6A09               	clrf	media_read@sector,c
  5076  00ECB8  6A0A               	clrf	media_read@sector+1,c
  5077  00ECBA  6A0B               	clrf	media_read@sector+2,c
  5078  00ECBC  6A0C               	clrf	media_read@sector+3,c
  5079  00ECBE  0E31               	movlw	49
  5080  00ECC0  241F               	addwf	fatfs_init@fs,w,c
  5081  00ECC2  6E0D               	movwf	media_read@buffer,c
  5082  00ECC4  0E00               	movlw	0
  5083  00ECC6  2020               	addwfc	fatfs_init@fs+1,w,c
  5084  00ECC8  6E0E               	movwf	media_read@buffer+1,c
  5085  00ECCA  0E01               	movlw	1
  5086  00ECCC  6E0F               	movwf	media_read@sector_count,c
  5087  00ECCE  6A10               	clrf	media_read@sector_count+1,c
  5088  00ECD0  6A11               	clrf	media_read@sector_count+2,c
  5089  00ECD2  6A12               	clrf	media_read@sector_count+3,c
  5090  00ECD4  EE20 F029          	lfsr	2,41
  5091  00ECD8  501F               	movf	fatfs_init@fs,w,c
  5092  00ECDA  26D9               	addwf	fsr2l,f,c
  5093  00ECDC  5020               	movf	fatfs_init@fs+1,w,c
  5094  00ECDE  22DA               	addwfc	fsr2h,f,c
  5095  00ECE0  CFDE F021          	movff	postinc2,??_fatfs_init
  5096  00ECE4  CFDD F022          	movff	postdec2,??_fatfs_init+1
  5097  00ECE8  D801               	call	u14528
  5098  00ECEA  D009               	goto	u14529
  5099  00ECEC                     u14528:
  5100  00ECEC  0005               	push	
  5101  00ECEE  6EFA               	movwf	pclath,c
  5102  00ECF0  5021               	movf	??_fatfs_init,w,c
  5103  00ECF2  6EFD               	movwf	tosl,c
  5104  00ECF4  5022               	movf	??_fatfs_init+1,w,c
  5105  00ECF6  6EFE               	movwf	tosh,c
  5106  00ECF8  6AFF               	clrf	tosu,c
  5107  00ECFA  50FA               	movf	pclath,w,c
  5108  00ECFC  0012               	return		;indir
  5109  00ECFE                     u14529:
  5110  00ECFE  500A               	movf	?_media_read+1,w,c
  5111  00ED00  1009               	iorwf	?_media_read,w,c
  5112  00ED02  E101 D10F          	bz	u14600
  5113                           
  5114                           ;fat_access.c: 73: if (fs->currentsector.sector[510] != 0x55 || fs->currentsector.sector
      +                          [510+1] != 0xAA)
  5115                           
  5116                           ;fat_access.c: 69: return (-1);
  5117  00ED06  EE22 F02F          	lfsr	2,559
  5118  00ED0A  501F               	movf	fatfs_init@fs,w,c
  5119  00ED0C  26D9               	addwf	fsr2l,f,c
  5120  00ED0E  5020               	movf	fatfs_init@fs+1,w,c
  5121  00ED10  22DA               	addwfc	fsr2h,f,c
  5122  00ED12  0E55               	movlw	85
  5123  00ED14  62DF               	cpfseq	indf2,c
  5124  00ED16  D009               	goto	l12226
  5125  00ED18  EE22 F030          	lfsr	2,560
  5126  00ED1C  501F               	movf	fatfs_init@fs,w,c
  5127  00ED1E  26D9               	addwf	fsr2l,f,c
  5128  00ED20  5020               	movf	fatfs_init@fs+1,w,c
  5129  00ED22  22DA               	addwfc	fsr2h,f,c
  5130  00ED24  50DF               	movf	indf2,w,c
  5131  00ED26  0AAA               	xorlw	170
  5132  00ED28  E004               	bz	l12230
  5133  00ED2A                     l12226:
  5134                           
  5135                           ;fat_access.c: 74: return (-3);
  5136  00ED2A  6820               	setf	?_fatfs_init+1,c
  5137  00ED2C  0EFD               	movlw	253
  5138  00ED2E  EF21  F07D         	goto	L11
  5139  00ED32                     l12230:
  5140                           
  5141                           ;fat_access.c: 77: if (( ((uint16)fs->currentsector.sector[510+1]<<8) + (uint16)fs->curr
      +                          entsector.sector[510+0] ) != 0xAA55)
  5142  00ED32  EE22 F030          	lfsr	2,560
  5143  00ED36  501F               	movf	fatfs_init@fs,w,c
  5144  00ED38  26D9               	addwf	fsr2l,f,c
  5145  00ED3A  5020               	movf	fatfs_init@fs+1,w,c
  5146  00ED3C  22DA               	addwfc	fsr2h,f,c
  5147  00ED3E  50DF               	movf	indf2,w,c
  5148  00ED40  6E21               	movwf	??_fatfs_init& (0+255),c
  5149  00ED42  5021               	movf	??_fatfs_init,w,c
  5150  00ED44  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5151  00ED46  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5152  00ED48  EE22 F02F          	lfsr	2,559
  5153  00ED4C  501F               	movf	fatfs_init@fs,w,c
  5154  00ED4E  26D9               	addwf	fsr2l,f,c
  5155  00ED50  5020               	movf	fatfs_init@fs+1,w,c
  5156  00ED52  22DA               	addwfc	fsr2h,f,c
  5157  00ED54  50DF               	movf	indf2,w,c
  5158  00ED56  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5159  00ED58  5024               	movf	??_fatfs_init+3,w,c
  5160  00ED5A  2622               	addwf	??_fatfs_init+1,f,c
  5161  00ED5C  0E00               	movlw	0
  5162  00ED5E  2223               	addwfc	??_fatfs_init+2,f,c
  5163  00ED60  5023               	movf	??_fatfs_init+2,w,c
  5164  00ED62  0AAA               	xorlw	170
  5165  00ED64  0E55               	movlw	85
  5166  00ED66  B4D8               	btfsc	status,2,c
  5167  00ED68  1822               	xorwf	??_fatfs_init+1,w,c
  5168  00ED6A  E014               	bz	l12250
  5169                           
  5170                           ;fat_access.c: 78: return (-4);
  5171  00ED6C  6820               	setf	?_fatfs_init+1,c
  5172  00ED6E  0EFC               	movlw	252
  5173  00ED70  EF21  F07D         	goto	L11
  5174  00ED74                     l12242:
  5175                           
  5176                           ;fat_access.c: 96: valid_partition = 0;
  5177  00ED74  0E00               	movlw	0
  5178  00ED76  D00C               	goto	L5
  5179  00ED78                     l12244:
  5180                           
  5181                           ;fat_access.c: 99: if (fs->currentsector.sector[450] <= 0x06)
  5182  00ED78  EE21 F0F3          	lfsr	2,499
  5183  00ED7C  501F               	movf	fatfs_init@fs,w,c
  5184  00ED7E  26D9               	addwf	fsr2l,f,c
  5185  00ED80  5020               	movf	fatfs_init@fs+1,w,c
  5186  00ED82  22DA               	addwfc	fsr2h,f,c
  5187  00ED84  50DF               	movf	indf2,w,c
  5188  00ED86  6E21               	movwf	??_fatfs_init& (0+255),c
  5189  00ED88  0E07               	movlw	7
  5190  00ED8A  5C21               	subwf	??_fatfs_init,w,c
  5191  00ED8C  E218               	bc	l12252
  5192  00ED8E                     
  5193                           ;fat_access.c: 100: valid_partition = 1;
  5194  00ED8E  0E01               	movlw	1
  5195  00ED90                     L5:
  5196  00ED90  6E53               	movwf	fatfs_init@valid_partition,c
  5197  00ED92  D015               	goto	l12252
  5198  00ED94                     l12250:
  5199  00ED94  EE21 F0F3          	lfsr	2,499
  5200  00ED98  501F               	movf	fatfs_init@fs,w,c
  5201  00ED9A  26D9               	addwf	fsr2l,f,c
  5202  00ED9C  5020               	movf	fatfs_init@fs+1,w,c
  5203  00ED9E  22DA               	addwfc	fsr2h,f,c
  5204  00EDA0  50DF               	movf	indf2,w,c
  5205                           
  5206                           ; Switch size 1, requested type "speed"
  5207                           ; Number of cases is 7, Range of values is 0 to 15
  5208                           ; switch strategies available:
  5209                           ; Name         Instructions Cycles
  5210                           ; simple_byte           22    12 (average)
  5211                           ;	Chosen strategy is simple_byte
  5212  00EDA2  E0E8               	bz	l12242
  5213  00EDA4  0A05               	xorlw	5	; case 5
  5214  00EDA6  E0F3               	bz	L12
  5215  00EDA8  0A03               	xorlw	3	; case 6
  5216  00EDAA  E0F1               	bz	L12
  5217  00EDAC  0A0D               	xorlw	13	; case 11
  5218  00EDAE  E0EF               	bz	L12
  5219  00EDB0  0A07               	xorlw	7	; case 12
  5220  00EDB2  E0ED               	bz	L12
  5221  00EDB4  0A02               	xorlw	2	; case 14
  5222  00EDB6  E0EB               	bz	L12
  5223  00EDB8  0A01               	xorlw	1	; case 15
  5224  00EDBA  E0E9               	bz	L12
  5225  00EDBC  D7DD               	goto	l12244
  5226  00EDBE                     l12252:
  5227                           
  5228                           ;fat_access.c: 105: if (valid_partition)
  5229  00EDBE  5053               	movf	fatfs_init@valid_partition,w,c
  5230  00EDC0  E076               	bz	l12256
  5231                           
  5232                           ;fat_access.c: 106: fs->lba_begin = ( ((uint32)fs->currentsector.sector[454+3]<<24) + ((
      +                          uint32)fs->currentsector.sector[454+2]<<16) + ((uint32)fs->currentsector.sector[454+1]<<
      +                          8) + (uint32)fs->currentsector.sector[454+0] );
  5233  00EDC2  EE21 F0F8          	lfsr	2,504
  5234  00EDC6  501F               	movf	fatfs_init@fs,w,c
  5235  00EDC8  26D9               	addwf	fsr2l,f,c
  5236  00EDCA  5020               	movf	fatfs_init@fs+1,w,c
  5237  00EDCC  22DA               	addwfc	fsr2h,f,c
  5238  00EDCE  50DF               	movf	indf2,w,c
  5239  00EDD0  6E21               	movwf	??_fatfs_init& (0+255),c
  5240  00EDD2  C021  F022         	movff	??_fatfs_init,??_fatfs_init+1
  5241  00EDD6  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  5242  00EDD8  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  5243  00EDDA  6A25               	clrf	(??_fatfs_init+4)& (0+255),c
  5244  00EDDC  C024  F025         	movff	??_fatfs_init+3,??_fatfs_init+4
  5245  00EDE0  C023  F024         	movff	??_fatfs_init+2,??_fatfs_init+3
  5246  00EDE4  C022  F023         	movff	??_fatfs_init+1,??_fatfs_init+2
  5247  00EDE8  6A22               	clrf	??_fatfs_init+1,c
  5248  00EDEA  EE21 F0F9          	lfsr	2,505
  5249  00EDEE  501F               	movf	fatfs_init@fs,w,c
  5250  00EDF0  26D9               	addwf	fsr2l,f,c
  5251  00EDF2  5020               	movf	fatfs_init@fs+1,w,c
  5252  00EDF4  22DA               	addwfc	fsr2h,f,c
  5253  00EDF6  50DF               	movf	indf2,w,c
  5254  00EDF8  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  5255  00EDFA  C026  F027         	movff	??_fatfs_init+5,??_fatfs_init+6
  5256  00EDFE  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  5257  00EE00  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  5258  00EE02  6A2A               	clrf	(??_fatfs_init+9)& (0+255),c
  5259  00EE04  C028  F02A         	movff	??_fatfs_init+7,??_fatfs_init+9
  5260  00EE08  C027  F029         	movff	??_fatfs_init+6,??_fatfs_init+8
  5261  00EE0C  6A28               	clrf	??_fatfs_init+7,c
  5262  00EE0E  6A27               	clrf	??_fatfs_init+6,c
  5263  00EE10  EE21 F0FA          	lfsr	2,506
  5264  00EE14  501F               	movf	fatfs_init@fs,w,c
  5265  00EE16  26D9               	addwf	fsr2l,f,c
  5266  00EE18  5020               	movf	fatfs_init@fs+1,w,c
  5267  00EE1A  22DA               	addwfc	fsr2h,f,c
  5268  00EE1C  50DF               	movf	indf2,w,c
  5269  00EE1E  6E2B               	movwf	(??_fatfs_init+10)& (0+255),c
  5270  00EE20  C02B  F02C         	movff	??_fatfs_init+10,??_fatfs_init+11
  5271  00EE24  6A2D               	clrf	(??_fatfs_init+12)& (0+255),c
  5272  00EE26  6A2E               	clrf	(??_fatfs_init+13)& (0+255),c
  5273  00EE28  6A2F               	clrf	(??_fatfs_init+14)& (0+255),c
  5274  00EE2A  C02C  F02F         	movff	??_fatfs_init+11,??_fatfs_init+14
  5275  00EE2E  6A2E               	clrf	??_fatfs_init+13,c
  5276  00EE30  6A2D               	clrf	??_fatfs_init+12,c
  5277  00EE32  6A2C               	clrf	??_fatfs_init+11,c
  5278  00EE34  5027               	movf	??_fatfs_init+6,w,c
  5279  00EE36  242C               	addwf	??_fatfs_init+11,w,c
  5280  00EE38  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  5281  00EE3A  5028               	movf	??_fatfs_init+7,w,c
  5282  00EE3C  202D               	addwfc	??_fatfs_init+12,w,c
  5283  00EE3E  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  5284  00EE40  5029               	movf	??_fatfs_init+8,w,c
  5285  00EE42  202E               	addwfc	??_fatfs_init+13,w,c
  5286  00EE44  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  5287  00EE46  502A               	movf	??_fatfs_init+9,w,c
  5288  00EE48  202F               	addwfc	??_fatfs_init+14,w,c
  5289  00EE4A  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  5290  00EE4C  5022               	movf	??_fatfs_init+1,w,c
  5291  00EE4E  2430               	addwf	??_fatfs_init+15,w,c
  5292  00EE50  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  5293  00EE52  5023               	movf	??_fatfs_init+2,w,c
  5294  00EE54  2031               	addwfc	??_fatfs_init+16,w,c
  5295  00EE56  6E35               	movwf	(??_fatfs_init+20)& (0+255),c
  5296  00EE58  5024               	movf	??_fatfs_init+3,w,c
  5297  00EE5A  2032               	addwfc	??_fatfs_init+17,w,c
  5298  00EE5C  6E36               	movwf	(??_fatfs_init+21)& (0+255),c
  5299  00EE5E  5025               	movf	??_fatfs_init+4,w,c
  5300  00EE60  2033               	addwfc	??_fatfs_init+18,w,c
  5301  00EE62  6E37               	movwf	(??_fatfs_init+22)& (0+255),c
  5302  00EE64  EE21 F0F7          	lfsr	2,503
  5303  00EE68  501F               	movf	fatfs_init@fs,w,c
  5304  00EE6A  26D9               	addwf	fsr2l,f,c
  5305  00EE6C  5020               	movf	fatfs_init@fs+1,w,c
  5306  00EE6E  22DA               	addwfc	fsr2h,f,c
  5307  00EE70  50DF               	movf	indf2,w,c
  5308  00EE72  6E38               	movwf	(??_fatfs_init+23)& (0+255),c
  5309  00EE74  5038               	movf	??_fatfs_init+23,w,c
  5310  00EE76  2434               	addwf	??_fatfs_init+19,w,c
  5311  00EE78  6E39               	movwf	(??_fatfs_init+24)& (0+255),c
  5312  00EE7A  0E00               	movlw	0
  5313  00EE7C  2035               	addwfc	??_fatfs_init+20,w,c
  5314  00EE7E  6E3A               	movwf	(??_fatfs_init+25)& (0+255),c
  5315  00EE80  0E00               	movlw	0
  5316  00EE82  2036               	addwfc	??_fatfs_init+21,w,c
  5317  00EE84  6E3B               	movwf	(??_fatfs_init+26)& (0+255),c
  5318  00EE86  0E00               	movlw	0
  5319  00EE88  2037               	addwfc	??_fatfs_init+22,w,c
  5320  00EE8A  6E3C               	movwf	(??_fatfs_init+27)& (0+255),c
  5321  00EE8C  EE20 F017          	lfsr	2,23
  5322  00EE90  501F               	movf	fatfs_init@fs,w,c
  5323  00EE92  26D9               	addwf	fsr2l,f,c
  5324  00EE94  5020               	movf	fatfs_init@fs+1,w,c
  5325  00EE96  22DA               	addwfc	fsr2h,f,c
  5326  00EE98  C039  FFDE         	movff	??_fatfs_init+24,postinc2
  5327  00EE9C  C03A  FFDE         	movff	??_fatfs_init+25,postinc2
  5328  00EEA0  C03B  FFDE         	movff	??_fatfs_init+26,postinc2
  5329  00EEA4  C03C  FFDD         	movff	??_fatfs_init+27,postdec2
  5330  00EEA8  06D9               	decf	fsr2l,f,c
  5331  00EEAA  06D9               	decf	fsr2l,f,c
  5332  00EEAC  D00A               	goto	l12258
  5333  00EEAE                     l12256:
  5334                           
  5335                           ;fat_access.c: 108: else
  5336                           ;fat_access.c: 109: fs->lba_begin = 0;
  5337  00EEAE  EE20 F017          	lfsr	2,23
  5338  00EEB2  501F               	movf	fatfs_init@fs,w,c
  5339  00EEB4  26D9               	addwf	fsr2l,f,c
  5340  00EEB6  5020               	movf	fatfs_init@fs+1,w,c
  5341  00EEB8  22DA               	addwfc	fsr2h,f,c
  5342  00EEBA  6ADE               	clrf	postinc2,c
  5343  00EEBC  6ADE               	clrf	postinc2,c
  5344  00EEBE  6ADE               	clrf	postinc2,c
  5345  00EEC0  6ADD               	clrf	postdec2,c
  5346  00EEC2                     l12258:
  5347                           
  5348                           ;fat_access.c: 113: if (!fs->disk_io.read_media(fs->lba_begin, fs->currentsector.sector,
      +                           1))
  5349  00EEC2  EE20 F017          	lfsr	2,23
  5350  00EEC6  501F               	movf	fatfs_init@fs,w,c
  5351  00EEC8  26D9               	addwf	fsr2l,f,c
  5352  00EECA  5020               	movf	fatfs_init@fs+1,w,c
  5353  00EECC  22DA               	addwfc	fsr2h,f,c
  5354  00EECE  CFDE F009          	movff	postinc2,media_read@sector
  5355  00EED2  CFDE F00A          	movff	postinc2,media_read@sector+1
  5356  00EED6  CFDE F00B          	movff	postinc2,media_read@sector+2
  5357  00EEDA  CFDE F00C          	movff	postinc2,media_read@sector+3
  5358  00EEDE  0E31               	movlw	49
  5359  00EEE0  241F               	addwf	fatfs_init@fs,w,c
  5360  00EEE2  6E0D               	movwf	media_read@buffer,c
  5361  00EEE4  0E00               	movlw	0
  5362  00EEE6  2020               	addwfc	fatfs_init@fs+1,w,c
  5363  00EEE8  6E0E               	movwf	media_read@buffer+1,c
  5364  00EEEA  0E01               	movlw	1
  5365  00EEEC  6E0F               	movwf	media_read@sector_count,c
  5366  00EEEE  6A10               	clrf	media_read@sector_count+1,c
  5367  00EEF0  6A11               	clrf	media_read@sector_count+2,c
  5368  00EEF2  6A12               	clrf	media_read@sector_count+3,c
  5369  00EEF4  EE20 F029          	lfsr	2,41
  5370  00EEF8  501F               	movf	fatfs_init@fs,w,c
  5371  00EEFA  26D9               	addwf	fsr2l,f,c
  5372  00EEFC  5020               	movf	fatfs_init@fs+1,w,c
  5373  00EEFE  22DA               	addwfc	fsr2h,f,c
  5374  00EF00  CFDE F021          	movff	postinc2,??_fatfs_init
  5375  00EF04  CFDD F022          	movff	postdec2,??_fatfs_init+1
  5376  00EF08  D801               	call	u14598
  5377  00EF0A  D009               	goto	u14599
  5378  00EF0C                     u14598:
  5379  00EF0C  0005               	push	
  5380  00EF0E  6EFA               	movwf	pclath,c
  5381  00EF10  5021               	movf	??_fatfs_init,w,c
  5382  00EF12  6EFD               	movwf	tosl,c
  5383  00EF14  5022               	movf	??_fatfs_init+1,w,c
  5384  00EF16  6EFE               	movwf	tosh,c
  5385  00EF18  6AFF               	clrf	tosu,c
  5386  00EF1A  50FA               	movf	pclath,w,c
  5387  00EF1C  0012               	return		;indir
  5388  00EF1E                     u14599:
  5389  00EF1E  500A               	movf	?_media_read+1,w,c
  5390  00EF20  1009               	iorwf	?_media_read,w,c
  5391  00EF22  E104               	bnz	l12262
  5392  00EF24                     u14600:
  5393                           
  5394                           ;fat_access.c: 114: return (-1);
  5395  00EF24  681F               	setf	?_fatfs_init,c
  5396  00EF26  6820               	setf	?_fatfs_init+1,c
  5397  00EF28  EF22  F07D         	goto	l38
  5398  00EF2C                     l12262:
  5399                           
  5400                           ;fat_access.c: 117: if (( ((uint16)fs->currentsector.sector[0x0B+1]<<8) + (uint16)fs->cu
      +                          rrentsector.sector[0x0B+0] ) != 512)
  5401  00EF2C  EE20 F03D          	lfsr	2,61
  5402  00EF30  501F               	movf	fatfs_init@fs,w,c
  5403  00EF32  26D9               	addwf	fsr2l,f,c
  5404  00EF34  5020               	movf	fatfs_init@fs+1,w,c
  5405  00EF36  22DA               	addwfc	fsr2h,f,c
  5406  00EF38  50DF               	movf	indf2,w,c
  5407  00EF3A  6E21               	movwf	??_fatfs_init& (0+255),c
  5408  00EF3C  5021               	movf	??_fatfs_init,w,c
  5409  00EF3E  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5410  00EF40  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5411  00EF42  EE20 F03C          	lfsr	2,60
  5412  00EF46  501F               	movf	fatfs_init@fs,w,c
  5413  00EF48  26D9               	addwf	fsr2l,f,c
  5414  00EF4A  5020               	movf	fatfs_init@fs+1,w,c
  5415  00EF4C  22DA               	addwfc	fsr2h,f,c
  5416  00EF4E  50DF               	movf	indf2,w,c
  5417  00EF50  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5418  00EF52  5024               	movf	??_fatfs_init+3,w,c
  5419  00EF54  2622               	addwf	??_fatfs_init+1,f,c
  5420  00EF56  0E00               	movlw	0
  5421  00EF58  2223               	addwfc	??_fatfs_init+2,f,c
  5422  00EF5A  5023               	movf	??_fatfs_init+2,w,c
  5423  00EF5C  0A02               	xorlw	2
  5424  00EF5E  1022               	iorwf	??_fatfs_init+1,w,c
  5425  00EF60  E004               	bz	l12268
  5426                           
  5427                           ;fat_access.c: 118: return (-2);
  5428  00EF62  6820               	setf	?_fatfs_init+1,c
  5429  00EF64  0EFE               	movlw	254
  5430  00EF66  EF21  F07D         	goto	L11
  5431  00EF6A                     l12268:
  5432                           
  5433                           ;fat_access.c: 121: fs->sectors_per_cluster = fs->currentsector.sector[13];
  5434  00EF6A  EE20 F03E          	lfsr	2,62
  5435  00EF6E  501F               	movf	fatfs_init@fs,w,c
  5436  00EF70  26D9               	addwf	fsr2l,f,c
  5437  00EF72  5020               	movf	fatfs_init@fs+1,w,c
  5438  00EF74  22DA               	addwfc	fsr2h,f,c
  5439  00EF76  C01F  FFE1         	movff	fatfs_init@fs,fsr1l
  5440  00EF7A  C020  FFE2         	movff	fatfs_init@fs+1,fsr1h
  5441  00EF7E  CFDF FFE7          	movff	indf2,indf1
  5442                           
  5443                           ;fat_access.c: 122: reserved_sectors = ( ((uint16)fs->currentsector.sector[14+1]<<8) + (
      +                          uint16)fs->currentsector.sector[14+0] );
  5444  00EF82  EE20 F03F          	lfsr	2,63
  5445  00EF86  501F               	movf	fatfs_init@fs,w,c
  5446  00EF88  26D9               	addwf	fsr2l,f,c
  5447  00EF8A  5020               	movf	fatfs_init@fs+1,w,c
  5448  00EF8C  22DA               	addwfc	fsr2h,f,c
  5449  00EF8E  50DF               	movf	indf2,w,c
  5450  00EF90  6E21               	movwf	??_fatfs_init& (0+255),c
  5451  00EF92  EE20 F040          	lfsr	2,64
  5452  00EF96  501F               	movf	fatfs_init@fs,w,c
  5453  00EF98  26D9               	addwf	fsr2l,f,c
  5454  00EF9A  5020               	movf	fatfs_init@fs+1,w,c
  5455  00EF9C  22DA               	addwfc	fsr2h,f,c
  5456  00EF9E  50DF               	movf	indf2,w,c
  5457  00EFA0  6E52               	movwf	fatfs_init@reserved_sectors+1,c
  5458  00EFA2  5021               	movf	??_fatfs_init,w,c
  5459  00EFA4  6E51               	movwf	fatfs_init@reserved_sectors,c
  5460                           
  5461                           ;fat_access.c: 123: num_of_fats = fs->currentsector.sector[16];
  5462  00EFA6  EE20 F041          	lfsr	2,65
  5463  00EFAA  501F               	movf	fatfs_init@fs,w,c
  5464  00EFAC  26D9               	addwf	fsr2l,f,c
  5465  00EFAE  5020               	movf	fatfs_init@fs+1,w,c
  5466  00EFB0  22DA               	addwfc	fsr2h,f,c
  5467  00EFB2  50DF               	movf	indf2,w,c
  5468  00EFB4  6E54               	movwf	fatfs_init@num_of_fats,c
  5469                           
  5470                           ;fat_access.c: 124: fs->root_entry_count = ( ((uint16)fs->currentsector.sector[17+1]<<8)
      +                           + (uint16)fs->currentsector.sector[17+0] );
  5471  00EFB6  EE20 F043          	lfsr	2,67
  5472  00EFBA  501F               	movf	fatfs_init@fs,w,c
  5473  00EFBC  26D9               	addwf	fsr2l,f,c
  5474  00EFBE  5020               	movf	fatfs_init@fs+1,w,c
  5475  00EFC0  22DA               	addwfc	fsr2h,f,c
  5476  00EFC2  50DF               	movf	indf2,w,c
  5477  00EFC4  6E21               	movwf	??_fatfs_init& (0+255),c
  5478  00EFC6  5021               	movf	??_fatfs_init,w,c
  5479  00EFC8  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5480  00EFCA  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5481  00EFCC  EE20 F042          	lfsr	2,66
  5482  00EFD0  501F               	movf	fatfs_init@fs,w,c
  5483  00EFD2  26D9               	addwf	fsr2l,f,c
  5484  00EFD4  5020               	movf	fatfs_init@fs+1,w,c
  5485  00EFD6  22DA               	addwfc	fsr2h,f,c
  5486  00EFD8  50DF               	movf	indf2,w,c
  5487  00EFDA  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5488  00EFDC  5024               	movf	??_fatfs_init+3,w,c
  5489  00EFDE  2622               	addwf	??_fatfs_init+1,f,c
  5490  00EFE0  0E00               	movlw	0
  5491  00EFE2  2223               	addwfc	??_fatfs_init+2,f,c
  5492  00EFE4  EE20 F023          	lfsr	2,35
  5493  00EFE8  501F               	movf	fatfs_init@fs,w,c
  5494  00EFEA  26D9               	addwf	fsr2l,f,c
  5495  00EFEC  5020               	movf	fatfs_init@fs+1,w,c
  5496  00EFEE  22DA               	addwfc	fsr2h,f,c
  5497  00EFF0  C022  FFDE         	movff	??_fatfs_init+1,postinc2
  5498  00EFF4  C023  FFDD         	movff	??_fatfs_init+2,postdec2
  5499                           
  5500                           ;fat_access.c: 126: if(( ((uint16)fs->currentsector.sector[22+1]<<8) + (uint16)fs->curre
      +                          ntsector.sector[22+0] ) != 0)
  5501  00EFF8  EE20 F048          	lfsr	2,72
  5502  00EFFC  501F               	movf	fatfs_init@fs,w,c
  5503  00EFFE  26D9               	addwf	fsr2l,f,c
  5504  00F000  5020               	movf	fatfs_init@fs+1,w,c
  5505  00F002  22DA               	addwfc	fsr2h,f,c
  5506  00F004  50DF               	movf	indf2,w,c
  5507  00F006  6E21               	movwf	??_fatfs_init& (0+255),c
  5508  00F008  5021               	movf	??_fatfs_init,w,c
  5509  00F00A  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5510  00F00C  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5511  00F00E  EE20 F047          	lfsr	2,71
  5512  00F012  501F               	movf	fatfs_init@fs,w,c
  5513  00F014  26D9               	addwf	fsr2l,f,c
  5514  00F016  5020               	movf	fatfs_init@fs+1,w,c
  5515  00F018  22DA               	addwfc	fsr2h,f,c
  5516  00F01A  50DF               	movf	indf2,w,c
  5517  00F01C  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5518  00F01E  5024               	movf	??_fatfs_init+3,w,c
  5519  00F020  2622               	addwf	??_fatfs_init+1,f,c
  5520  00F022  0E00               	movlw	0
  5521  00F024  2223               	addwfc	??_fatfs_init+2,f,c
  5522  00F026  5023               	movf	??_fatfs_init+2,w,c
  5523  00F028  1022               	iorwf	??_fatfs_init+1,w,c
  5524  00F02A  E02A               	bz	l12280
  5525                           
  5526                           ;fat_access.c: 127: fs->fat_sectors = ( ((uint16)fs->currentsector.sector[22+1]<<8) + (u
      +                          int16)fs->currentsector.sector[22+0] );
  5527  00F02C  EE20 F047          	lfsr	2,71
  5528  00F030  501F               	movf	fatfs_init@fs,w,c
  5529  00F032  26D9               	addwf	fsr2l,f,c
  5530  00F034  5020               	movf	fatfs_init@fs+1,w,c
  5531  00F036  22DA               	addwfc	fsr2h,f,c
  5532  00F038  50DF               	movf	indf2,w,c
  5533  00F03A  6E21               	movwf	??_fatfs_init& (0+255),c
  5534  00F03C  EE20 F048          	lfsr	2,72
  5535  00F040  501F               	movf	fatfs_init@fs,w,c
  5536  00F042  26D9               	addwf	fsr2l,f,c
  5537  00F044  5020               	movf	fatfs_init@fs+1,w,c
  5538  00F046  22DA               	addwfc	fsr2h,f,c
  5539  00F048  50DF               	movf	indf2,w,c
  5540  00F04A  6E22               	movwf	(??_fatfs_init+1)& (0+255),c
  5541  00F04C  5022               	movf	??_fatfs_init+1,w,c
  5542  00F04E  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5543  00F050  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  5544  00F052  5021               	movf	??_fatfs_init,w,c
  5545  00F054  2423               	addwf	??_fatfs_init+2,w,c
  5546  00F056  6E25               	movwf	(??_fatfs_init+4)& (0+255),c
  5547  00F058  0E00               	movlw	0
  5548  00F05A  2024               	addwfc	??_fatfs_init+3,w,c
  5549  00F05C  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  5550  00F05E  6A27               	clrf	(??_fatfs_init+6)& (0+255),c
  5551  00F060  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  5552  00F062  EE20 F01B          	lfsr	2,27
  5553  00F066  501F               	movf	fatfs_init@fs,w,c
  5554  00F068  26D9               	addwf	fsr2l,f,c
  5555  00F06A  5020               	movf	fatfs_init@fs+1,w,c
  5556  00F06C  22DA               	addwfc	fsr2h,f,c
  5557  00F06E  C025  FFDE         	movff	??_fatfs_init+4,postinc2
  5558  00F072  C026  FFDE         	movff	??_fatfs_init+5,postinc2
  5559  00F076  C027  FFDE         	movff	??_fatfs_init+6,postinc2
  5560  00F07A  C028  FFDD         	movff	??_fatfs_init+7,postdec2
  5561  00F07E  D073               	goto	L7
  5562  00F080                     l12280:
  5563                           
  5564                           ;fat_access.c: 128: else
  5565                           ;fat_access.c: 129: fs->fat_sectors = ( ((uint32)fs->currentsector.sector[36+3]<<24) + (
      +                          (uint32)fs->currentsector.sector[36+2]<<16) + ((uint32)fs->currentsector.sector[36+1]<<8
      +                          ) + (uint32)fs->currentsector.sector[36+0] );
  5566  00F080  EE20 F056          	lfsr	2,86
  5567  00F084  501F               	movf	fatfs_init@fs,w,c
  5568  00F086  26D9               	addwf	fsr2l,f,c
  5569  00F088  5020               	movf	fatfs_init@fs+1,w,c
  5570  00F08A  22DA               	addwfc	fsr2h,f,c
  5571  00F08C  50DF               	movf	indf2,w,c
  5572  00F08E  6E21               	movwf	??_fatfs_init& (0+255),c
  5573  00F090  C021  F022         	movff	??_fatfs_init,??_fatfs_init+1
  5574  00F094  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  5575  00F096  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  5576  00F098  6A25               	clrf	(??_fatfs_init+4)& (0+255),c
  5577  00F09A  C024  F025         	movff	??_fatfs_init+3,??_fatfs_init+4
  5578  00F09E  C023  F024         	movff	??_fatfs_init+2,??_fatfs_init+3
  5579  00F0A2  C022  F023         	movff	??_fatfs_init+1,??_fatfs_init+2
  5580  00F0A6  6A22               	clrf	??_fatfs_init+1,c
  5581  00F0A8  EE20 F057          	lfsr	2,87
  5582  00F0AC  501F               	movf	fatfs_init@fs,w,c
  5583  00F0AE  26D9               	addwf	fsr2l,f,c
  5584  00F0B0  5020               	movf	fatfs_init@fs+1,w,c
  5585  00F0B2  22DA               	addwfc	fsr2h,f,c
  5586  00F0B4  50DF               	movf	indf2,w,c
  5587  00F0B6  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  5588  00F0B8  C026  F027         	movff	??_fatfs_init+5,??_fatfs_init+6
  5589  00F0BC  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  5590  00F0BE  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  5591  00F0C0  6A2A               	clrf	(??_fatfs_init+9)& (0+255),c
  5592  00F0C2  C028  F02A         	movff	??_fatfs_init+7,??_fatfs_init+9
  5593  00F0C6  C027  F029         	movff	??_fatfs_init+6,??_fatfs_init+8
  5594  00F0CA  6A28               	clrf	??_fatfs_init+7,c
  5595  00F0CC  6A27               	clrf	??_fatfs_init+6,c
  5596  00F0CE  EE20 F058          	lfsr	2,88
  5597  00F0D2  501F               	movf	fatfs_init@fs,w,c
  5598  00F0D4  26D9               	addwf	fsr2l,f,c
  5599  00F0D6  5020               	movf	fatfs_init@fs+1,w,c
  5600  00F0D8  22DA               	addwfc	fsr2h,f,c
  5601  00F0DA  50DF               	movf	indf2,w,c
  5602  00F0DC  6E2B               	movwf	(??_fatfs_init+10)& (0+255),c
  5603  00F0DE  C02B  F02C         	movff	??_fatfs_init+10,??_fatfs_init+11
  5604  00F0E2  6A2D               	clrf	(??_fatfs_init+12)& (0+255),c
  5605  00F0E4  6A2E               	clrf	(??_fatfs_init+13)& (0+255),c
  5606  00F0E6  6A2F               	clrf	(??_fatfs_init+14)& (0+255),c
  5607  00F0E8  C02C  F02F         	movff	??_fatfs_init+11,??_fatfs_init+14
  5608  00F0EC  6A2E               	clrf	??_fatfs_init+13,c
  5609  00F0EE  6A2D               	clrf	??_fatfs_init+12,c
  5610  00F0F0  6A2C               	clrf	??_fatfs_init+11,c
  5611  00F0F2  5027               	movf	??_fatfs_init+6,w,c
  5612  00F0F4  242C               	addwf	??_fatfs_init+11,w,c
  5613  00F0F6  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  5614  00F0F8  5028               	movf	??_fatfs_init+7,w,c
  5615  00F0FA  202D               	addwfc	??_fatfs_init+12,w,c
  5616  00F0FC  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  5617  00F0FE  5029               	movf	??_fatfs_init+8,w,c
  5618  00F100  202E               	addwfc	??_fatfs_init+13,w,c
  5619  00F102  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  5620  00F104  502A               	movf	??_fatfs_init+9,w,c
  5621  00F106  202F               	addwfc	??_fatfs_init+14,w,c
  5622  00F108  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  5623  00F10A  5022               	movf	??_fatfs_init+1,w,c
  5624  00F10C  2430               	addwf	??_fatfs_init+15,w,c
  5625  00F10E  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  5626  00F110  5023               	movf	??_fatfs_init+2,w,c
  5627  00F112  2031               	addwfc	??_fatfs_init+16,w,c
  5628  00F114  6E35               	movwf	(??_fatfs_init+20)& (0+255),c
  5629  00F116  5024               	movf	??_fatfs_init+3,w,c
  5630  00F118  2032               	addwfc	??_fatfs_init+17,w,c
  5631  00F11A  6E36               	movwf	(??_fatfs_init+21)& (0+255),c
  5632  00F11C  5025               	movf	??_fatfs_init+4,w,c
  5633  00F11E  2033               	addwfc	??_fatfs_init+18,w,c
  5634  00F120  6E37               	movwf	(??_fatfs_init+22)& (0+255),c
  5635  00F122  EE20 F055          	lfsr	2,85
  5636  00F126  501F               	movf	fatfs_init@fs,w,c
  5637  00F128  26D9               	addwf	fsr2l,f,c
  5638  00F12A  5020               	movf	fatfs_init@fs+1,w,c
  5639  00F12C  22DA               	addwfc	fsr2h,f,c
  5640  00F12E  50DF               	movf	indf2,w,c
  5641  00F130  6E38               	movwf	(??_fatfs_init+23)& (0+255),c
  5642  00F132  5038               	movf	??_fatfs_init+23,w,c
  5643  00F134  2434               	addwf	??_fatfs_init+19,w,c
  5644  00F136  6E39               	movwf	(??_fatfs_init+24)& (0+255),c
  5645  00F138  0E00               	movlw	0
  5646  00F13A  2035               	addwfc	??_fatfs_init+20,w,c
  5647  00F13C  6E3A               	movwf	(??_fatfs_init+25)& (0+255),c
  5648  00F13E  0E00               	movlw	0
  5649  00F140  2036               	addwfc	??_fatfs_init+21,w,c
  5650  00F142  6E3B               	movwf	(??_fatfs_init+26)& (0+255),c
  5651  00F144  0E00               	movlw	0
  5652  00F146  2037               	addwfc	??_fatfs_init+22,w,c
  5653  00F148  6E3C               	movwf	(??_fatfs_init+27)& (0+255),c
  5654  00F14A  EE20 F01B          	lfsr	2,27
  5655  00F14E  501F               	movf	fatfs_init@fs,w,c
  5656  00F150  26D9               	addwf	fsr2l,f,c
  5657  00F152  5020               	movf	fatfs_init@fs+1,w,c
  5658  00F154  22DA               	addwfc	fsr2h,f,c
  5659  00F156  C039  FFDE         	movff	??_fatfs_init+24,postinc2
  5660  00F15A  C03A  FFDE         	movff	??_fatfs_init+25,postinc2
  5661  00F15E  C03B  FFDE         	movff	??_fatfs_init+26,postinc2
  5662  00F162  C03C  FFDD         	movff	??_fatfs_init+27,postdec2
  5663  00F166                     L7:
  5664  00F166  06D9               	decf	fsr2l,f,c
  5665  00F168  06D9               	decf	fsr2l,f,c
  5666                           
  5667                           ;fat_access.c: 132: fs->rootdir_first_cluster = ( ((uint32)fs->currentsector.sector[44+3
      +                          ]<<24) + ((uint32)fs->currentsector.sector[44+2]<<16) + ((uint32)fs->currentsector.secto
      +                          r[44+1]<<8) + (uint32)fs->currentsector.sector[44+0] );
  5668  00F16A  EE20 F05E          	lfsr	2,94
  5669  00F16E  501F               	movf	fatfs_init@fs,w,c
  5670  00F170  26D9               	addwf	fsr2l,f,c
  5671  00F172  5020               	movf	fatfs_init@fs+1,w,c
  5672  00F174  22DA               	addwfc	fsr2h,f,c
  5673  00F176  50DF               	movf	indf2,w,c
  5674  00F178  6E21               	movwf	??_fatfs_init& (0+255),c
  5675  00F17A  C021  F022         	movff	??_fatfs_init,??_fatfs_init+1
  5676  00F17E  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  5677  00F180  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  5678  00F182  6A25               	clrf	(??_fatfs_init+4)& (0+255),c
  5679  00F184  C024  F025         	movff	??_fatfs_init+3,??_fatfs_init+4
  5680  00F188  C023  F024         	movff	??_fatfs_init+2,??_fatfs_init+3
  5681  00F18C  C022  F023         	movff	??_fatfs_init+1,??_fatfs_init+2
  5682  00F190  6A22               	clrf	??_fatfs_init+1,c
  5683  00F192  EE20 F05F          	lfsr	2,95
  5684  00F196  501F               	movf	fatfs_init@fs,w,c
  5685  00F198  26D9               	addwf	fsr2l,f,c
  5686  00F19A  5020               	movf	fatfs_init@fs+1,w,c
  5687  00F19C  22DA               	addwfc	fsr2h,f,c
  5688  00F19E  50DF               	movf	indf2,w,c
  5689  00F1A0  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  5690  00F1A2  C026  F027         	movff	??_fatfs_init+5,??_fatfs_init+6
  5691  00F1A6  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  5692  00F1A8  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  5693  00F1AA  6A2A               	clrf	(??_fatfs_init+9)& (0+255),c
  5694  00F1AC  C028  F02A         	movff	??_fatfs_init+7,??_fatfs_init+9
  5695  00F1B0  C027  F029         	movff	??_fatfs_init+6,??_fatfs_init+8
  5696  00F1B4  6A28               	clrf	??_fatfs_init+7,c
  5697  00F1B6  6A27               	clrf	??_fatfs_init+6,c
  5698  00F1B8  EE20 F060          	lfsr	2,96
  5699  00F1BC  501F               	movf	fatfs_init@fs,w,c
  5700  00F1BE  26D9               	addwf	fsr2l,f,c
  5701  00F1C0  5020               	movf	fatfs_init@fs+1,w,c
  5702  00F1C2  22DA               	addwfc	fsr2h,f,c
  5703  00F1C4  50DF               	movf	indf2,w,c
  5704  00F1C6  6E2B               	movwf	(??_fatfs_init+10)& (0+255),c
  5705  00F1C8  C02B  F02C         	movff	??_fatfs_init+10,??_fatfs_init+11
  5706  00F1CC  6A2D               	clrf	(??_fatfs_init+12)& (0+255),c
  5707  00F1CE  6A2E               	clrf	(??_fatfs_init+13)& (0+255),c
  5708  00F1D0  6A2F               	clrf	(??_fatfs_init+14)& (0+255),c
  5709  00F1D2  C02C  F02F         	movff	??_fatfs_init+11,??_fatfs_init+14
  5710  00F1D6  6A2E               	clrf	??_fatfs_init+13,c
  5711  00F1D8  6A2D               	clrf	??_fatfs_init+12,c
  5712  00F1DA  6A2C               	clrf	??_fatfs_init+11,c
  5713  00F1DC  5027               	movf	??_fatfs_init+6,w,c
  5714  00F1DE  242C               	addwf	??_fatfs_init+11,w,c
  5715  00F1E0  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  5716  00F1E2  5028               	movf	??_fatfs_init+7,w,c
  5717  00F1E4  202D               	addwfc	??_fatfs_init+12,w,c
  5718  00F1E6  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  5719  00F1E8  5029               	movf	??_fatfs_init+8,w,c
  5720  00F1EA  202E               	addwfc	??_fatfs_init+13,w,c
  5721  00F1EC  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  5722  00F1EE  502A               	movf	??_fatfs_init+9,w,c
  5723  00F1F0  202F               	addwfc	??_fatfs_init+14,w,c
  5724  00F1F2  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  5725  00F1F4  5022               	movf	??_fatfs_init+1,w,c
  5726  00F1F6  2430               	addwf	??_fatfs_init+15,w,c
  5727  00F1F8  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  5728  00F1FA  5023               	movf	??_fatfs_init+2,w,c
  5729  00F1FC  2031               	addwfc	??_fatfs_init+16,w,c
  5730  00F1FE  6E35               	movwf	(??_fatfs_init+20)& (0+255),c
  5731  00F200  5024               	movf	??_fatfs_init+3,w,c
  5732  00F202  2032               	addwfc	??_fatfs_init+17,w,c
  5733  00F204  6E36               	movwf	(??_fatfs_init+21)& (0+255),c
  5734  00F206  5025               	movf	??_fatfs_init+4,w,c
  5735  00F208  2033               	addwfc	??_fatfs_init+18,w,c
  5736  00F20A  6E37               	movwf	(??_fatfs_init+22)& (0+255),c
  5737  00F20C  EE20 F05D          	lfsr	2,93
  5738  00F210  501F               	movf	fatfs_init@fs,w,c
  5739  00F212  26D9               	addwf	fsr2l,f,c
  5740  00F214  5020               	movf	fatfs_init@fs+1,w,c
  5741  00F216  22DA               	addwfc	fsr2h,f,c
  5742  00F218  50DF               	movf	indf2,w,c
  5743  00F21A  6E38               	movwf	(??_fatfs_init+23)& (0+255),c
  5744  00F21C  5038               	movf	??_fatfs_init+23,w,c
  5745  00F21E  2434               	addwf	??_fatfs_init+19,w,c
  5746  00F220  6E39               	movwf	(??_fatfs_init+24)& (0+255),c
  5747  00F222  0E00               	movlw	0
  5748  00F224  2035               	addwfc	??_fatfs_init+20,w,c
  5749  00F226  6E3A               	movwf	(??_fatfs_init+25)& (0+255),c
  5750  00F228  0E00               	movlw	0
  5751  00F22A  2036               	addwfc	??_fatfs_init+21,w,c
  5752  00F22C  6E3B               	movwf	(??_fatfs_init+26)& (0+255),c
  5753  00F22E  0E00               	movlw	0
  5754  00F230  2037               	addwfc	??_fatfs_init+22,w,c
  5755  00F232  6E3C               	movwf	(??_fatfs_init+27)& (0+255),c
  5756  00F234  EE20 F005          	lfsr	2,5
  5757  00F238  501F               	movf	fatfs_init@fs,w,c
  5758  00F23A  26D9               	addwf	fsr2l,f,c
  5759  00F23C  5020               	movf	fatfs_init@fs+1,w,c
  5760  00F23E  22DA               	addwfc	fsr2h,f,c
  5761  00F240  C039  FFDE         	movff	??_fatfs_init+24,postinc2
  5762  00F244  C03A  FFDE         	movff	??_fatfs_init+25,postinc2
  5763  00F248  C03B  FFDE         	movff	??_fatfs_init+26,postinc2
  5764  00F24C  C03C  FFDD         	movff	??_fatfs_init+27,postdec2
  5765  00F250  06D9               	decf	fsr2l,f,c
  5766  00F252  06D9               	decf	fsr2l,f,c
  5767                           
  5768                           ;fat_access.c: 133: fs->fs_info_sector = ( ((uint16)fs->currentsector.sector[48+1]<<8) +
      +                           (uint16)fs->currentsector.sector[48+0] );
  5769  00F254  EE20 F062          	lfsr	2,98
  5770  00F258  501F               	movf	fatfs_init@fs,w,c
  5771  00F25A  26D9               	addwf	fsr2l,f,c
  5772  00F25C  5020               	movf	fatfs_init@fs+1,w,c
  5773  00F25E  22DA               	addwfc	fsr2h,f,c
  5774  00F260  50DF               	movf	indf2,w,c
  5775  00F262  6E21               	movwf	??_fatfs_init& (0+255),c
  5776  00F264  5021               	movf	??_fatfs_init,w,c
  5777  00F266  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5778  00F268  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5779  00F26A  EE20 F061          	lfsr	2,97
  5780  00F26E  501F               	movf	fatfs_init@fs,w,c
  5781  00F270  26D9               	addwf	fsr2l,f,c
  5782  00F272  5020               	movf	fatfs_init@fs+1,w,c
  5783  00F274  22DA               	addwfc	fsr2h,f,c
  5784  00F276  50DF               	movf	indf2,w,c
  5785  00F278  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5786  00F27A  5024               	movf	??_fatfs_init+3,w,c
  5787  00F27C  2622               	addwf	??_fatfs_init+1,f,c
  5788  00F27E  0E00               	movlw	0
  5789  00F280  2223               	addwfc	??_fatfs_init+2,f,c
  5790  00F282  EE20 F015          	lfsr	2,21
  5791  00F286  501F               	movf	fatfs_init@fs,w,c
  5792  00F288  26D9               	addwf	fsr2l,f,c
  5793  00F28A  5020               	movf	fatfs_init@fs+1,w,c
  5794  00F28C  22DA               	addwfc	fsr2h,f,c
  5795  00F28E  C022  FFDE         	movff	??_fatfs_init+1,postinc2
  5796  00F292  C023  FFDD         	movff	??_fatfs_init+2,postdec2
  5797                           
  5798                           ;fat_access.c: 136: fs->rootdir_first_sector = reserved_sectors + (num_of_fats * fs->fat
      +                          _sectors);
  5799  00F296  EE20 F01B          	lfsr	2,27
  5800  00F29A  501F               	movf	fatfs_init@fs,w,c
  5801  00F29C  26D9               	addwf	fsr2l,f,c
  5802  00F29E  5020               	movf	fatfs_init@fs+1,w,c
  5803  00F2A0  22DA               	addwfc	fsr2h,f,c
  5804  00F2A2  CFDE F021          	movff	postinc2,??_fatfs_init
  5805  00F2A6  CFDE F022          	movff	postinc2,??_fatfs_init+1
  5806  00F2AA  CFDE F023          	movff	postinc2,??_fatfs_init+2
  5807  00F2AE  CFDE F024          	movff	postinc2,??_fatfs_init+3
  5808  00F2B2  C054  F025         	movff	fatfs_init@num_of_fats,??_fatfs_init+4
  5809  00F2B6  6A26               	clrf	(??_fatfs_init+5)& (0+255),c
  5810  00F2B8  6A27               	clrf	(??_fatfs_init+6)& (0+255),c
  5811  00F2BA  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  5812  00F2BC  5025               	movf	??_fatfs_init+4,w,c
  5813  00F2BE  0221               	mulwf	??_fatfs_init,c
  5814  00F2C0  CFF3 F029          	movff	prodl,??_fatfs_init+8
  5815  00F2C4  CFF4 F02A          	movff	prodh,??_fatfs_init+9
  5816  00F2C8  6A2B               	clrf	(??_fatfs_init+10)& (0+255),c
  5817  00F2CA  6A2C               	clrf	(??_fatfs_init+11)& (0+255),c
  5818  00F2CC  0222               	mulwf	??_fatfs_init+1,c
  5819  00F2CE  50F3               	movf	243,w,c
  5820  00F2D0  262A               	addwf	(??_fatfs_init+9)& (0+255),f,c
  5821  00F2D2  50F4               	movf	244,w,c
  5822  00F2D4  222B               	addwfc	(??_fatfs_init+10)& (0+255),f,c
  5823  00F2D6  0E00               	movlw	0
  5824  00F2D8  222C               	addwfc	(??_fatfs_init+11)& (0+255),f,c
  5825  00F2DA  5026               	movf	??_fatfs_init+5,w,c
  5826  00F2DC  0221               	mulwf	??_fatfs_init,c
  5827  00F2DE  50F3               	movf	243,w,c
  5828  00F2E0  262A               	addwf	(??_fatfs_init+9)& (0+255),f,c
  5829  00F2E2  50F4               	movf	244,w,c
  5830  00F2E4  222B               	addwfc	(??_fatfs_init+10)& (0+255),f,c
  5831  00F2E6  0E00               	movlw	0
  5832  00F2E8  222C               	addwfc	(??_fatfs_init+11)& (0+255),f,c
  5833  00F2EA  5025               	movf	??_fatfs_init+4,w,c
  5834  00F2EC  0223               	mulwf	??_fatfs_init+2,c
  5835  00F2EE  50F3               	movf	243,w,c
  5836  00F2F0  262B               	addwf	(??_fatfs_init+10)& (0+255),f,c
  5837  00F2F2  50F4               	movf	244,w,c
  5838  00F2F4  222C               	addwfc	(??_fatfs_init+11)& (0+255),f,c
  5839  00F2F6  5026               	movf	??_fatfs_init+5,w,c
  5840  00F2F8  0222               	mulwf	??_fatfs_init+1,c
  5841  00F2FA  50F3               	movf	243,w,c
  5842  00F2FC  262B               	addwf	(??_fatfs_init+10)& (0+255),f,c
  5843  00F2FE  50F4               	movf	244,w,c
  5844  00F300  222C               	addwfc	(??_fatfs_init+11)& (0+255),f,c
  5845  00F302  5027               	movf	??_fatfs_init+6,w,c
  5846  00F304  0221               	mulwf	??_fatfs_init,c
  5847  00F306  50F3               	movf	243,w,c
  5848  00F308  262B               	addwf	(??_fatfs_init+10)& (0+255),f,c
  5849  00F30A  50F4               	movf	244,w,c
  5850  00F30C  222C               	addwfc	(??_fatfs_init+11)& (0+255),f,c
  5851  00F30E  5024               	movf	??_fatfs_init+3,w,c
  5852  00F310  0225               	mulwf	??_fatfs_init+4,c
  5853  00F312  50F3               	movf	243,w,c
  5854  00F314  262C               	addwf	(??_fatfs_init+11)& (0+255),f,c
  5855  00F316  5026               	movf	??_fatfs_init+5,w,c
  5856  00F318  0223               	mulwf	??_fatfs_init+2,c
  5857  00F31A  50F3               	movf	243,w,c
  5858  00F31C  262C               	addwf	(??_fatfs_init+11)& (0+255),f,c
  5859  00F31E  5027               	movf	??_fatfs_init+6,w,c
  5860  00F320  0222               	mulwf	??_fatfs_init+1,c
  5861  00F322  50F3               	movf	243,w,c
  5862  00F324  262C               	addwf	(??_fatfs_init+11)& (0+255),f,c
  5863  00F326  5028               	movf	??_fatfs_init+7,w,c
  5864  00F328  0221               	mulwf	??_fatfs_init,c
  5865  00F32A  50F3               	movf	243,w,c
  5866  00F32C  262C               	addwf	(??_fatfs_init+11)& (0+255),f,c
  5867  00F32E  5051               	movf	fatfs_init@reserved_sectors,w,c
  5868  00F330  2429               	addwf	??_fatfs_init+8,w,c
  5869  00F332  6E2D               	movwf	(??_fatfs_init+12)& (0+255),c
  5870  00F334  5052               	movf	fatfs_init@reserved_sectors+1,w,c
  5871  00F336  202A               	addwfc	??_fatfs_init+9,w,c
  5872  00F338  6E2E               	movwf	(??_fatfs_init+13)& (0+255),c
  5873  00F33A  0E00               	movlw	0
  5874  00F33C  202B               	addwfc	??_fatfs_init+10,w,c
  5875  00F33E  6E2F               	movwf	(??_fatfs_init+14)& (0+255),c
  5876  00F340  0E00               	movlw	0
  5877  00F342  202C               	addwfc	??_fatfs_init+11,w,c
  5878  00F344  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  5879  00F346  EE20 F009          	lfsr	2,9
  5880  00F34A  501F               	movf	fatfs_init@fs,w,c
  5881  00F34C  26D9               	addwf	fsr2l,f,c
  5882  00F34E  5020               	movf	fatfs_init@fs+1,w,c
  5883  00F350  22DA               	addwfc	fsr2h,f,c
  5884  00F352  C02D  FFDE         	movff	??_fatfs_init+12,postinc2
  5885  00F356  C02E  FFDE         	movff	??_fatfs_init+13,postinc2
  5886  00F35A  C02F  FFDE         	movff	??_fatfs_init+14,postinc2
  5887  00F35E  C030  FFDD         	movff	??_fatfs_init+15,postdec2
  5888  00F362  06D9               	decf	fsr2l,f,c
  5889  00F364  06D9               	decf	fsr2l,f,c
  5890                           
  5891                           ;fat_access.c: 137: fs->rootdir_sectors = ((fs->root_entry_count * 32) + (512 - 1)) / 51
      +                          2;
  5892  00F366  6821               	setf	??_fatfs_init& (0+255),c
  5893  00F368  0E01               	movlw	1
  5894  00F36A  6E22               	movwf	(??_fatfs_init+1)& (0+255),c
  5895  00F36C  EE20 F023          	lfsr	2,35
  5896  00F370  501F               	movf	fatfs_init@fs,w,c
  5897  00F372  26D9               	addwf	fsr2l,f,c
  5898  00F374  5020               	movf	fatfs_init@fs+1,w,c
  5899  00F376  22DA               	addwfc	fsr2h,f,c
  5900  00F378  CFDE F023          	movff	postinc2,??_fatfs_init+2
  5901  00F37C  CFDD F024          	movff	postdec2,??_fatfs_init+3
  5902  00F380  0E05               	movlw	5
  5903  00F382                     u14635:
  5904  00F382  90D8               	bcf	status,0,c
  5905  00F384  3623               	rlcf	??_fatfs_init+2,f,c
  5906  00F386  3624               	rlcf	??_fatfs_init+3,f,c
  5907  00F388  2EE8               	decfsz	wreg,f,c
  5908  00F38A  D7FB               	goto	u14635
  5909  00F38C  5021               	movf	??_fatfs_init,w,c
  5910  00F38E  2623               	addwf	??_fatfs_init+2,f,c
  5911  00F390  5022               	movf	??_fatfs_init+1,w,c
  5912  00F392  2224               	addwfc	??_fatfs_init+3,f,c
  5913  00F394  0E09               	movlw	9
  5914  00F396  6E25               	movwf	(??_fatfs_init+4)& (0+255),c
  5915  00F398                     u14645:
  5916  00F398  90D8               	bcf	status,0,c
  5917  00F39A  3224               	rrcf	??_fatfs_init+3,f,c
  5918  00F39C  3223               	rrcf	??_fatfs_init+2,f,c
  5919  00F39E  2E25               	decfsz	(??_fatfs_init+4)& (0+255),f,c
  5920  00F3A0  D7FB               	goto	u14645
  5921  00F3A2  5023               	movf	??_fatfs_init+2,w,c
  5922  00F3A4  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  5923  00F3A6  5024               	movf	??_fatfs_init+3,w,c
  5924  00F3A8  6E27               	movwf	(??_fatfs_init+6)& (0+255),c
  5925  00F3AA  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  5926  00F3AC  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  5927  00F3AE  EE20 F00D          	lfsr	2,13
  5928  00F3B2  501F               	movf	fatfs_init@fs,w,c
  5929  00F3B4  26D9               	addwf	fsr2l,f,c
  5930  00F3B6  5020               	movf	fatfs_init@fs+1,w,c
  5931  00F3B8  22DA               	addwfc	fsr2h,f,c
  5932  00F3BA  C026  FFDE         	movff	??_fatfs_init+5,postinc2
  5933  00F3BE  C027  FFDE         	movff	??_fatfs_init+6,postinc2
  5934  00F3C2  C028  FFDE         	movff	??_fatfs_init+7,postinc2
  5935  00F3C6  C029  FFDD         	movff	??_fatfs_init+8,postdec2
  5936  00F3CA  06D9               	decf	fsr2l,f,c
  5937  00F3CC  06D9               	decf	fsr2l,f,c
  5938                           
  5939                           ;fat_access.c: 140: fs->fat_begin_lba = fs->lba_begin + reserved_sectors;
  5940  00F3CE  EE20 F017          	lfsr	2,23
  5941  00F3D2  501F               	movf	fatfs_init@fs,w,c
  5942  00F3D4  26D9               	addwf	fsr2l,f,c
  5943  00F3D6  5020               	movf	fatfs_init@fs+1,w,c
  5944  00F3D8  22DA               	addwfc	fsr2h,f,c
  5945  00F3DA  CFDE F021          	movff	postinc2,??_fatfs_init
  5946  00F3DE  CFDE F022          	movff	postinc2,??_fatfs_init+1
  5947  00F3E2  CFDE F023          	movff	postinc2,??_fatfs_init+2
  5948  00F3E6  CFDE F024          	movff	postinc2,??_fatfs_init+3
  5949  00F3EA  5051               	movf	fatfs_init@reserved_sectors,w,c
  5950  00F3EC  2421               	addwf	??_fatfs_init,w,c
  5951  00F3EE  6E25               	movwf	(??_fatfs_init+4)& (0+255),c
  5952  00F3F0  5052               	movf	fatfs_init@reserved_sectors+1,w,c
  5953  00F3F2  2022               	addwfc	??_fatfs_init+1,w,c
  5954  00F3F4  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  5955  00F3F6  0E00               	movlw	0
  5956  00F3F8  2023               	addwfc	??_fatfs_init+2,w,c
  5957  00F3FA  6E27               	movwf	(??_fatfs_init+6)& (0+255),c
  5958  00F3FC  0E00               	movlw	0
  5959  00F3FE  2024               	addwfc	??_fatfs_init+3,w,c
  5960  00F400  6E28               	movwf	(??_fatfs_init+7)& (0+255),c
  5961  00F402  EE20 F011          	lfsr	2,17
  5962  00F406  501F               	movf	fatfs_init@fs,w,c
  5963  00F408  26D9               	addwf	fsr2l,f,c
  5964  00F40A  5020               	movf	fatfs_init@fs+1,w,c
  5965  00F40C  22DA               	addwfc	fsr2h,f,c
  5966  00F40E  C025  FFDE         	movff	??_fatfs_init+4,postinc2
  5967  00F412  C026  FFDE         	movff	??_fatfs_init+5,postinc2
  5968  00F416  C027  FFDE         	movff	??_fatfs_init+6,postinc2
  5969  00F41A  C028  FFDD         	movff	??_fatfs_init+7,postdec2
  5970  00F41E  06D9               	decf	fsr2l,f,c
  5971  00F420  06D9               	decf	fsr2l,f,c
  5972                           
  5973                           ;fat_access.c: 143: fs->cluster_begin_lba = fs->fat_begin_lba + (num_of_fats * fs->fat_s
      +                          ectors);
  5974  00F422  EE20 F011          	lfsr	2,17
  5975  00F426  501F               	movf	fatfs_init@fs,w,c
  5976  00F428  26D9               	addwf	fsr2l,f,c
  5977  00F42A  5020               	movf	fatfs_init@fs+1,w,c
  5978  00F42C  22DA               	addwfc	fsr2h,f,c
  5979  00F42E  CFDE F021          	movff	postinc2,??_fatfs_init
  5980  00F432  CFDE F022          	movff	postinc2,??_fatfs_init+1
  5981  00F436  CFDE F023          	movff	postinc2,??_fatfs_init+2
  5982  00F43A  CFDE F024          	movff	postinc2,??_fatfs_init+3
  5983  00F43E  EE20 F01B          	lfsr	2,27
  5984  00F442  501F               	movf	fatfs_init@fs,w,c
  5985  00F444  26D9               	addwf	fsr2l,f,c
  5986  00F446  5020               	movf	fatfs_init@fs+1,w,c
  5987  00F448  22DA               	addwfc	fsr2h,f,c
  5988  00F44A  CFDE F025          	movff	postinc2,??_fatfs_init+4
  5989  00F44E  CFDE F026          	movff	postinc2,??_fatfs_init+5
  5990  00F452  CFDE F027          	movff	postinc2,??_fatfs_init+6
  5991  00F456  CFDE F028          	movff	postinc2,??_fatfs_init+7
  5992  00F45A  C054  F029         	movff	fatfs_init@num_of_fats,??_fatfs_init+8
  5993  00F45E  6A2A               	clrf	(??_fatfs_init+9)& (0+255),c
  5994  00F460  6A2B               	clrf	(??_fatfs_init+10)& (0+255),c
  5995  00F462  6A2C               	clrf	(??_fatfs_init+11)& (0+255),c
  5996  00F464  5029               	movf	??_fatfs_init+8,w,c
  5997  00F466  0225               	mulwf	??_fatfs_init+4,c
  5998  00F468  CFF3 F02D          	movff	prodl,??_fatfs_init+12
  5999  00F46C  CFF4 F02E          	movff	prodh,??_fatfs_init+13
  6000  00F470  6A2F               	clrf	(??_fatfs_init+14)& (0+255),c
  6001  00F472  6A30               	clrf	(??_fatfs_init+15)& (0+255),c
  6002  00F474  0226               	mulwf	??_fatfs_init+5,c
  6003  00F476  50F3               	movf	243,w,c
  6004  00F478  262E               	addwf	(??_fatfs_init+13)& (0+255),f,c
  6005  00F47A  50F4               	movf	244,w,c
  6006  00F47C  222F               	addwfc	(??_fatfs_init+14)& (0+255),f,c
  6007  00F47E  0E00               	movlw	0
  6008  00F480  2230               	addwfc	(??_fatfs_init+15)& (0+255),f,c
  6009  00F482  502A               	movf	??_fatfs_init+9,w,c
  6010  00F484  0225               	mulwf	??_fatfs_init+4,c
  6011  00F486  50F3               	movf	243,w,c
  6012  00F488  262E               	addwf	(??_fatfs_init+13)& (0+255),f,c
  6013  00F48A  50F4               	movf	244,w,c
  6014  00F48C  222F               	addwfc	(??_fatfs_init+14)& (0+255),f,c
  6015  00F48E  0E00               	movlw	0
  6016  00F490  2230               	addwfc	(??_fatfs_init+15)& (0+255),f,c
  6017  00F492  5029               	movf	??_fatfs_init+8,w,c
  6018  00F494  0227               	mulwf	??_fatfs_init+6,c
  6019  00F496  50F3               	movf	243,w,c
  6020  00F498  262F               	addwf	(??_fatfs_init+14)& (0+255),f,c
  6021  00F49A  50F4               	movf	244,w,c
  6022  00F49C  2230               	addwfc	(??_fatfs_init+15)& (0+255),f,c
  6023  00F49E  502A               	movf	??_fatfs_init+9,w,c
  6024  00F4A0  0226               	mulwf	??_fatfs_init+5,c
  6025  00F4A2  50F3               	movf	243,w,c
  6026  00F4A4  262F               	addwf	(??_fatfs_init+14)& (0+255),f,c
  6027  00F4A6  50F4               	movf	244,w,c
  6028  00F4A8  2230               	addwfc	(??_fatfs_init+15)& (0+255),f,c
  6029  00F4AA  502B               	movf	??_fatfs_init+10,w,c
  6030  00F4AC  0225               	mulwf	??_fatfs_init+4,c
  6031  00F4AE  50F3               	movf	243,w,c
  6032  00F4B0  262F               	addwf	(??_fatfs_init+14)& (0+255),f,c
  6033  00F4B2  50F4               	movf	244,w,c
  6034  00F4B4  2230               	addwfc	(??_fatfs_init+15)& (0+255),f,c
  6035  00F4B6  5028               	movf	??_fatfs_init+7,w,c
  6036  00F4B8  0229               	mulwf	??_fatfs_init+8,c
  6037  00F4BA  50F3               	movf	243,w,c
  6038  00F4BC  2630               	addwf	(??_fatfs_init+15)& (0+255),f,c
  6039  00F4BE  502A               	movf	??_fatfs_init+9,w,c
  6040  00F4C0  0227               	mulwf	??_fatfs_init+6,c
  6041  00F4C2  50F3               	movf	243,w,c
  6042  00F4C4  2630               	addwf	(??_fatfs_init+15)& (0+255),f,c
  6043  00F4C6  502B               	movf	??_fatfs_init+10,w,c
  6044  00F4C8  0226               	mulwf	??_fatfs_init+5,c
  6045  00F4CA  50F3               	movf	243,w,c
  6046  00F4CC  2630               	addwf	(??_fatfs_init+15)& (0+255),f,c
  6047  00F4CE  502C               	movf	??_fatfs_init+11,w,c
  6048  00F4D0  0225               	mulwf	??_fatfs_init+4,c
  6049  00F4D2  50F3               	movf	243,w,c
  6050  00F4D4  2630               	addwf	(??_fatfs_init+15)& (0+255),f,c
  6051  00F4D6  5021               	movf	??_fatfs_init,w,c
  6052  00F4D8  242D               	addwf	??_fatfs_init+12,w,c
  6053  00F4DA  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  6054  00F4DC  5022               	movf	??_fatfs_init+1,w,c
  6055  00F4DE  202E               	addwfc	??_fatfs_init+13,w,c
  6056  00F4E0  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  6057  00F4E2  5023               	movf	??_fatfs_init+2,w,c
  6058  00F4E4  202F               	addwfc	??_fatfs_init+14,w,c
  6059  00F4E6  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  6060  00F4E8  5024               	movf	??_fatfs_init+3,w,c
  6061  00F4EA  2030               	addwfc	??_fatfs_init+15,w,c
  6062  00F4EC  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  6063  00F4EE  EE20 F001          	lfsr	2,1
  6064  00F4F2  501F               	movf	fatfs_init@fs,w,c
  6065  00F4F4  26D9               	addwf	fsr2l,f,c
  6066  00F4F6  5020               	movf	fatfs_init@fs+1,w,c
  6067  00F4F8  22DA               	addwfc	fsr2h,f,c
  6068  00F4FA  C031  FFDE         	movff	??_fatfs_init+16,postinc2
  6069  00F4FE  C032  FFDE         	movff	??_fatfs_init+17,postinc2
  6070  00F502  C033  FFDE         	movff	??_fatfs_init+18,postinc2
  6071  00F506  C034  FFDD         	movff	??_fatfs_init+19,postdec2
  6072  00F50A  06D9               	decf	fsr2l,f,c
  6073  00F50C  06D9               	decf	fsr2l,f,c
  6074                           
  6075                           ;fat_access.c: 145: if (( ((uint16)fs->currentsector.sector[0x1FE+1]<<8) + (uint16)fs->c
      +                          urrentsector.sector[0x1FE+0] ) != 0xAA55)
  6076  00F50E  EE22 F030          	lfsr	2,560
  6077  00F512  501F               	movf	fatfs_init@fs,w,c
  6078  00F514  26D9               	addwf	fsr2l,f,c
  6079  00F516  5020               	movf	fatfs_init@fs+1,w,c
  6080  00F518  22DA               	addwfc	fsr2h,f,c
  6081  00F51A  50DF               	movf	indf2,w,c
  6082  00F51C  6E21               	movwf	??_fatfs_init& (0+255),c
  6083  00F51E  5021               	movf	??_fatfs_init,w,c
  6084  00F520  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  6085  00F522  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  6086  00F524  EE22 F02F          	lfsr	2,559
  6087  00F528  501F               	movf	fatfs_init@fs,w,c
  6088  00F52A  26D9               	addwf	fsr2l,f,c
  6089  00F52C  5020               	movf	fatfs_init@fs+1,w,c
  6090  00F52E  22DA               	addwfc	fsr2h,f,c
  6091  00F530  50DF               	movf	indf2,w,c
  6092  00F532  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  6093  00F534  5024               	movf	??_fatfs_init+3,w,c
  6094  00F536  2622               	addwf	??_fatfs_init+1,f,c
  6095  00F538  0E00               	movlw	0
  6096  00F53A  2223               	addwfc	??_fatfs_init+2,f,c
  6097  00F53C  5023               	movf	??_fatfs_init+2,w,c
  6098  00F53E  0AAA               	xorlw	170
  6099  00F540  0E55               	movlw	85
  6100  00F542  B4D8               	btfsc	status,2,c
  6101  00F544  1822               	xorwf	??_fatfs_init+1,w,c
  6102  00F546  E002 EF95  F076    	bnz	l12226
  6103                           
  6104                           ;fat_access.c: 149: root_dir_sectors = ((( ((uint16)fs->currentsector.sector[17+1]<<8) +
      +                           (uint16)fs->currentsector.sector[17+0] ) * 32) + (( ((uint16)fs->currentsector.sector[1
      +                          1+1]<<8) + (uint16)fs->currentsector.sector[11+0] ) - 1)) / ( ((uint16)fs->currentsector
      +                          .secto
  6105                           
  6106                           ;fat_access.c: 146: return (-3);
  6107  00F54C  EE20 F043          	lfsr	2,67
  6108  00F550  501F               	movf	fatfs_init@fs,w,c
  6109  00F552  26D9               	addwf	fsr2l,f,c
  6110  00F554  5020               	movf	fatfs_init@fs+1,w,c
  6111  00F556  22DA               	addwfc	fsr2h,f,c
  6112  00F558  50DF               	movf	indf2,w,c
  6113  00F55A  6E21               	movwf	??_fatfs_init& (0+255),c
  6114  00F55C  5021               	movf	??_fatfs_init,w,c
  6115  00F55E  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  6116  00F560  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  6117  00F562  EE20 F042          	lfsr	2,66
  6118  00F566  501F               	movf	fatfs_init@fs,w,c
  6119  00F568  26D9               	addwf	fsr2l,f,c
  6120  00F56A  5020               	movf	fatfs_init@fs+1,w,c
  6121  00F56C  22DA               	addwfc	fsr2h,f,c
  6122  00F56E  50DF               	movf	indf2,w,c
  6123  00F570  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  6124  00F572  5024               	movf	??_fatfs_init+3,w,c
  6125  00F574  2622               	addwf	??_fatfs_init+1,f,c
  6126  00F576  0E00               	movlw	0
  6127  00F578  2223               	addwfc	??_fatfs_init+2,f,c
  6128  00F57A  0E05               	movlw	5
  6129  00F57C                     u14665:
  6130  00F57C  90D8               	bcf	status,0,c
  6131  00F57E  3622               	rlcf	??_fatfs_init+1,f,c
  6132  00F580  3623               	rlcf	??_fatfs_init+2,f,c
  6133  00F582  2EE8               	decfsz	wreg,f,c
  6134  00F584  D7FB               	goto	u14665
  6135  00F586  EE20 F03D          	lfsr	2,61
  6136  00F58A  501F               	movf	fatfs_init@fs,w,c
  6137  00F58C  26D9               	addwf	fsr2l,f,c
  6138  00F58E  5020               	movf	fatfs_init@fs+1,w,c
  6139  00F590  22DA               	addwfc	fsr2h,f,c
  6140  00F592  50DF               	movf	indf2,w,c
  6141  00F594  6E25               	movwf	(??_fatfs_init+4)& (0+255),c
  6142  00F596  5025               	movf	??_fatfs_init+4,w,c
  6143  00F598  6E27               	movwf	(??_fatfs_init+6)& (0+255),c
  6144  00F59A  6A26               	clrf	(??_fatfs_init+5)& (0+255),c
  6145  00F59C  EE20 F03C          	lfsr	2,60
  6146  00F5A0  501F               	movf	fatfs_init@fs,w,c
  6147  00F5A2  26D9               	addwf	fsr2l,f,c
  6148  00F5A4  5020               	movf	fatfs_init@fs+1,w,c
  6149  00F5A6  22DA               	addwfc	fsr2h,f,c
  6150  00F5A8  50DF               	movf	indf2,w,c
  6151  00F5AA  6E28               	movwf	(??_fatfs_init+7)& (0+255),c
  6152  00F5AC  5028               	movf	??_fatfs_init+7,w,c
  6153  00F5AE  2626               	addwf	??_fatfs_init+5,f,c
  6154  00F5B0  0E00               	movlw	0
  6155  00F5B2  2227               	addwfc	??_fatfs_init+6,f,c
  6156  00F5B4  5022               	movf	??_fatfs_init+1,w,c
  6157  00F5B6  2626               	addwf	??_fatfs_init+5,f,c
  6158  00F5B8  5023               	movf	??_fatfs_init+2,w,c
  6159  00F5BA  2227               	addwfc	??_fatfs_init+6,f,c
  6160  00F5BC  0EFF               	movlw	255
  6161  00F5BE  2426               	addwf	??_fatfs_init+5,w,c
  6162  00F5C0  6E01               	movwf	___lwdiv@dividend,c
  6163  00F5C2  0EFF               	movlw	255
  6164  00F5C4  2027               	addwfc	??_fatfs_init+6,w,c
  6165  00F5C6  6E02               	movwf	___lwdiv@dividend+1,c
  6166  00F5C8  EE20 F03C          	lfsr	2,60
  6167  00F5CC  501F               	movf	fatfs_init@fs,w,c
  6168  00F5CE  26D9               	addwf	fsr2l,f,c
  6169  00F5D0  5020               	movf	fatfs_init@fs+1,w,c
  6170  00F5D2  22DA               	addwfc	fsr2h,f,c
  6171  00F5D4  50DF               	movf	indf2,w,c
  6172  00F5D6  6E29               	movwf	(??_fatfs_init+8)& (0+255),c
  6173  00F5D8  EE20 F03D          	lfsr	2,61
  6174  00F5DC  501F               	movf	fatfs_init@fs,w,c
  6175  00F5DE  26D9               	addwf	fsr2l,f,c
  6176  00F5E0  5020               	movf	fatfs_init@fs+1,w,c
  6177  00F5E2  22DA               	addwfc	fsr2h,f,c
  6178  00F5E4  50DF               	movf	indf2,w,c
  6179  00F5E6  6E04               	movwf	___lwdiv@divisor+1,c
  6180  00F5E8  5029               	movf	??_fatfs_init+8,w,c
  6181  00F5EA  6E03               	movwf	___lwdiv@divisor,c
  6182  00F5EC  ECAB  F021         	call	___lwdiv	;wreg free
  6183  00F5F0  C001  F03D         	movff	?___lwdiv,fatfs_init@root_dir_sectors
  6184  00F5F4  C002  F03E         	movff	?___lwdiv+1,fatfs_init@root_dir_sectors+1
  6185  00F5F8  6A3F               	clrf	fatfs_init@root_dir_sectors+2,c
  6186  00F5FA  6A40               	clrf	fatfs_init@root_dir_sectors+3,c
  6187                           
  6188                           ;fat_access.c: 151: if(( ((uint16)fs->currentsector.sector[22+1]<<8) + (uint16)fs->curre
      +                          ntsector.sector[22+0] ) != 0)
  6189  00F5FC  EE20 F048          	lfsr	2,72
  6190  00F600  501F               	movf	fatfs_init@fs,w,c
  6191  00F602  26D9               	addwf	fsr2l,f,c
  6192  00F604  5020               	movf	fatfs_init@fs+1,w,c
  6193  00F606  22DA               	addwfc	fsr2h,f,c
  6194  00F608  50DF               	movf	indf2,w,c
  6195  00F60A  6E21               	movwf	??_fatfs_init& (0+255),c
  6196  00F60C  5021               	movf	??_fatfs_init,w,c
  6197  00F60E  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  6198  00F610  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  6199  00F612  EE20 F047          	lfsr	2,71
  6200  00F616  501F               	movf	fatfs_init@fs,w,c
  6201  00F618  26D9               	addwf	fsr2l,f,c
  6202  00F61A  5020               	movf	fatfs_init@fs+1,w,c
  6203  00F61C  22DA               	addwfc	fsr2h,f,c
  6204  00F61E  50DF               	movf	indf2,w,c
  6205  00F620  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  6206  00F622  5024               	movf	??_fatfs_init+3,w,c
  6207  00F624  2622               	addwf	??_fatfs_init+1,f,c
  6208  00F626  0E00               	movlw	0
  6209  00F628  2223               	addwfc	??_fatfs_init+2,f,c
  6210  00F62A  5023               	movf	??_fatfs_init+2,w,c
  6211  00F62C  1022               	iorwf	??_fatfs_init+1,w,c
  6212  00F62E  E01E               	bz	l12300
  6213                           
  6214                           ;fat_access.c: 152: FATSz = ( ((uint16)fs->currentsector.sector[22+1]<<8) + (uint16)fs->
      +                          currentsector.sector[22+0] );
  6215  00F630  EE20 F048          	lfsr	2,72
  6216  00F634  501F               	movf	fatfs_init@fs,w,c
  6217  00F636  26D9               	addwf	fsr2l,f,c
  6218  00F638  5020               	movf	fatfs_init@fs+1,w,c
  6219  00F63A  22DA               	addwfc	fsr2h,f,c
  6220  00F63C  50DF               	movf	indf2,w,c
  6221  00F63E  6E21               	movwf	??_fatfs_init& (0+255),c
  6222  00F640  5021               	movf	??_fatfs_init,w,c
  6223  00F642  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  6224  00F644  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  6225  00F646  EE20 F047          	lfsr	2,71
  6226  00F64A  501F               	movf	fatfs_init@fs,w,c
  6227  00F64C  26D9               	addwf	fsr2l,f,c
  6228  00F64E  5020               	movf	fatfs_init@fs+1,w,c
  6229  00F650  22DA               	addwfc	fsr2h,f,c
  6230  00F652  50DF               	movf	indf2,w,c
  6231  00F654  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  6232  00F656  5024               	movf	??_fatfs_init+3,w,c
  6233  00F658  2622               	addwf	??_fatfs_init+1,f,c
  6234  00F65A  0E00               	movlw	0
  6235  00F65C  2223               	addwfc	??_fatfs_init+2,f,c
  6236  00F65E  C022  F045         	movff	??_fatfs_init+1,fatfs_init@FATSz
  6237  00F662  C023  F046         	movff	??_fatfs_init+2,fatfs_init@FATSz+1
  6238  00F666  6A47               	clrf	fatfs_init@FATSz+2,c
  6239  00F668  6A48               	clrf	fatfs_init@FATSz+3,c
  6240  00F66A  D065               	goto	l64
  6241  00F66C                     l12300:
  6242                           
  6243                           ;fat_access.c: 153: else
  6244                           ;fat_access.c: 154: FATSz = ( ((uint32)fs->currentsector.sector[36+3]<<24) + ((uint32)fs
      +                          ->currentsector.sector[36+2]<<16) + ((uint32)fs->currentsector.sector[36+1]<<8) + (uint3
      +                          2)fs->currentsector.sector[36+0] );
  6245  00F66C  EE20 F056          	lfsr	2,86
  6246  00F670  501F               	movf	fatfs_init@fs,w,c
  6247  00F672  26D9               	addwf	fsr2l,f,c
  6248  00F674  5020               	movf	fatfs_init@fs+1,w,c
  6249  00F676  22DA               	addwfc	fsr2h,f,c
  6250  00F678  50DF               	movf	indf2,w,c
  6251  00F67A  6E21               	movwf	??_fatfs_init& (0+255),c
  6252  00F67C  C021  F022         	movff	??_fatfs_init,??_fatfs_init+1
  6253  00F680  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  6254  00F682  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  6255  00F684  6A25               	clrf	(??_fatfs_init+4)& (0+255),c
  6256  00F686  C024  F025         	movff	??_fatfs_init+3,??_fatfs_init+4
  6257  00F68A  C023  F024         	movff	??_fatfs_init+2,??_fatfs_init+3
  6258  00F68E  C022  F023         	movff	??_fatfs_init+1,??_fatfs_init+2
  6259  00F692  6A22               	clrf	??_fatfs_init+1,c
  6260  00F694  EE20 F057          	lfsr	2,87
  6261  00F698  501F               	movf	fatfs_init@fs,w,c
  6262  00F69A  26D9               	addwf	fsr2l,f,c
  6263  00F69C  5020               	movf	fatfs_init@fs+1,w,c
  6264  00F69E  22DA               	addwfc	fsr2h,f,c
  6265  00F6A0  50DF               	movf	indf2,w,c
  6266  00F6A2  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  6267  00F6A4  C026  F027         	movff	??_fatfs_init+5,??_fatfs_init+6
  6268  00F6A8  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  6269  00F6AA  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  6270  00F6AC  6A2A               	clrf	(??_fatfs_init+9)& (0+255),c
  6271  00F6AE  C028  F02A         	movff	??_fatfs_init+7,??_fatfs_init+9
  6272  00F6B2  C027  F029         	movff	??_fatfs_init+6,??_fatfs_init+8
  6273  00F6B6  6A28               	clrf	??_fatfs_init+7,c
  6274  00F6B8  6A27               	clrf	??_fatfs_init+6,c
  6275  00F6BA  EE20 F058          	lfsr	2,88
  6276  00F6BE  501F               	movf	fatfs_init@fs,w,c
  6277  00F6C0  26D9               	addwf	fsr2l,f,c
  6278  00F6C2  5020               	movf	fatfs_init@fs+1,w,c
  6279  00F6C4  22DA               	addwfc	fsr2h,f,c
  6280  00F6C6  50DF               	movf	indf2,w,c
  6281  00F6C8  6E2B               	movwf	(??_fatfs_init+10)& (0+255),c
  6282  00F6CA  C02B  F02C         	movff	??_fatfs_init+10,??_fatfs_init+11
  6283  00F6CE  6A2D               	clrf	(??_fatfs_init+12)& (0+255),c
  6284  00F6D0  6A2E               	clrf	(??_fatfs_init+13)& (0+255),c
  6285  00F6D2  6A2F               	clrf	(??_fatfs_init+14)& (0+255),c
  6286  00F6D4  C02C  F02F         	movff	??_fatfs_init+11,??_fatfs_init+14
  6287  00F6D8  6A2E               	clrf	??_fatfs_init+13,c
  6288  00F6DA  6A2D               	clrf	??_fatfs_init+12,c
  6289  00F6DC  6A2C               	clrf	??_fatfs_init+11,c
  6290  00F6DE  5027               	movf	??_fatfs_init+6,w,c
  6291  00F6E0  242C               	addwf	??_fatfs_init+11,w,c
  6292  00F6E2  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  6293  00F6E4  5028               	movf	??_fatfs_init+7,w,c
  6294  00F6E6  202D               	addwfc	??_fatfs_init+12,w,c
  6295  00F6E8  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  6296  00F6EA  5029               	movf	??_fatfs_init+8,w,c
  6297  00F6EC  202E               	addwfc	??_fatfs_init+13,w,c
  6298  00F6EE  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  6299  00F6F0  502A               	movf	??_fatfs_init+9,w,c
  6300  00F6F2  202F               	addwfc	??_fatfs_init+14,w,c
  6301  00F6F4  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  6302  00F6F6  5022               	movf	??_fatfs_init+1,w,c
  6303  00F6F8  2430               	addwf	??_fatfs_init+15,w,c
  6304  00F6FA  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  6305  00F6FC  5023               	movf	??_fatfs_init+2,w,c
  6306  00F6FE  2031               	addwfc	??_fatfs_init+16,w,c
  6307  00F700  6E35               	movwf	(??_fatfs_init+20)& (0+255),c
  6308  00F702  5024               	movf	??_fatfs_init+3,w,c
  6309  00F704  2032               	addwfc	??_fatfs_init+17,w,c
  6310  00F706  6E36               	movwf	(??_fatfs_init+21)& (0+255),c
  6311  00F708  5025               	movf	??_fatfs_init+4,w,c
  6312  00F70A  2033               	addwfc	??_fatfs_init+18,w,c
  6313  00F70C  6E37               	movwf	(??_fatfs_init+22)& (0+255),c
  6314  00F70E  EE20 F055          	lfsr	2,85
  6315  00F712  501F               	movf	fatfs_init@fs,w,c
  6316  00F714  26D9               	addwf	fsr2l,f,c
  6317  00F716  5020               	movf	fatfs_init@fs+1,w,c
  6318  00F718  22DA               	addwfc	fsr2h,f,c
  6319  00F71A  50DF               	movf	indf2,w,c
  6320  00F71C  6E38               	movwf	(??_fatfs_init+23)& (0+255),c
  6321  00F71E  5038               	movf	??_fatfs_init+23,w,c
  6322  00F720  2434               	addwf	??_fatfs_init+19,w,c
  6323  00F722  6E45               	movwf	fatfs_init@FATSz,c
  6324  00F724  0E00               	movlw	0
  6325  00F726  2035               	addwfc	??_fatfs_init+20,w,c
  6326  00F728  6E46               	movwf	fatfs_init@FATSz+1,c
  6327  00F72A  0E00               	movlw	0
  6328  00F72C  2036               	addwfc	??_fatfs_init+21,w,c
  6329  00F72E  6E47               	movwf	fatfs_init@FATSz+2,c
  6330  00F730  0E00               	movlw	0
  6331  00F732  2037               	addwfc	??_fatfs_init+22,w,c
  6332  00F734  6E48               	movwf	fatfs_init@FATSz+3,c
  6333  00F736                     l64:
  6334                           
  6335                           ;fat_access.c: 156: if(( ((uint16)fs->currentsector.sector[19+1]<<8) + (uint16)fs->curre
      +                          ntsector.sector[19+0] ) != 0)
  6336  00F736  EE20 F045          	lfsr	2,69
  6337  00F73A  501F               	movf	fatfs_init@fs,w,c
  6338  00F73C  26D9               	addwf	fsr2l,f,c
  6339  00F73E  5020               	movf	fatfs_init@fs+1,w,c
  6340  00F740  22DA               	addwfc	fsr2h,f,c
  6341  00F742  50DF               	movf	indf2,w,c
  6342  00F744  6E21               	movwf	??_fatfs_init& (0+255),c
  6343  00F746  5021               	movf	??_fatfs_init,w,c
  6344  00F748  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  6345  00F74A  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  6346  00F74C  EE20 F044          	lfsr	2,68
  6347  00F750  501F               	movf	fatfs_init@fs,w,c
  6348  00F752  26D9               	addwf	fsr2l,f,c
  6349  00F754  5020               	movf	fatfs_init@fs+1,w,c
  6350  00F756  22DA               	addwfc	fsr2h,f,c
  6351  00F758  50DF               	movf	indf2,w,c
  6352  00F75A  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  6353  00F75C  5024               	movf	??_fatfs_init+3,w,c
  6354  00F75E  2622               	addwf	??_fatfs_init+1,f,c
  6355  00F760  0E00               	movlw	0
  6356  00F762  2223               	addwfc	??_fatfs_init+2,f,c
  6357  00F764  5023               	movf	??_fatfs_init+2,w,c
  6358  00F766  1022               	iorwf	??_fatfs_init+1,w,c
  6359  00F768  E01E               	bz	l12304
  6360                           
  6361                           ;fat_access.c: 157: total_sectors = ( ((uint16)fs->currentsector.sector[19+1]<<8) + (uin
      +                          t16)fs->currentsector.sector[19+0] );
  6362  00F76A  EE20 F045          	lfsr	2,69
  6363  00F76E  501F               	movf	fatfs_init@fs,w,c
  6364  00F770  26D9               	addwf	fsr2l,f,c
  6365  00F772  5020               	movf	fatfs_init@fs+1,w,c
  6366  00F774  22DA               	addwfc	fsr2h,f,c
  6367  00F776  50DF               	movf	indf2,w,c
  6368  00F778  6E21               	movwf	??_fatfs_init& (0+255),c
  6369  00F77A  5021               	movf	??_fatfs_init,w,c
  6370  00F77C  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  6371  00F77E  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  6372  00F780  EE20 F044          	lfsr	2,68
  6373  00F784  501F               	movf	fatfs_init@fs,w,c
  6374  00F786  26D9               	addwf	fsr2l,f,c
  6375  00F788  5020               	movf	fatfs_init@fs+1,w,c
  6376  00F78A  22DA               	addwfc	fsr2h,f,c
  6377  00F78C  50DF               	movf	indf2,w,c
  6378  00F78E  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  6379  00F790  5024               	movf	??_fatfs_init+3,w,c
  6380  00F792  2622               	addwf	??_fatfs_init+1,f,c
  6381  00F794  0E00               	movlw	0
  6382  00F796  2223               	addwfc	??_fatfs_init+2,f,c
  6383  00F798  C022  F049         	movff	??_fatfs_init+1,fatfs_init@total_sectors
  6384  00F79C  C023  F04A         	movff	??_fatfs_init+2,fatfs_init@total_sectors+1
  6385  00F7A0  6A4B               	clrf	fatfs_init@total_sectors+2,c
  6386  00F7A2  6A4C               	clrf	fatfs_init@total_sectors+3,c
  6387  00F7A4  D065               	goto	l12306
  6388  00F7A6                     l12304:
  6389                           
  6390                           ;fat_access.c: 158: else
  6391                           ;fat_access.c: 159: total_sectors = ( ((uint32)fs->currentsector.sector[32+3]<<24) + ((u
      +                          int32)fs->currentsector.sector[32+2]<<16) + ((uint32)fs->currentsector.sector[32+1]<<8) 
      +                          + (uint32)fs->currentsector.sector[32+0] );
  6392  00F7A6  EE20 F052          	lfsr	2,82
  6393  00F7AA  501F               	movf	fatfs_init@fs,w,c
  6394  00F7AC  26D9               	addwf	fsr2l,f,c
  6395  00F7AE  5020               	movf	fatfs_init@fs+1,w,c
  6396  00F7B0  22DA               	addwfc	fsr2h,f,c
  6397  00F7B2  50DF               	movf	indf2,w,c
  6398  00F7B4  6E21               	movwf	??_fatfs_init& (0+255),c
  6399  00F7B6  C021  F022         	movff	??_fatfs_init,??_fatfs_init+1
  6400  00F7BA  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  6401  00F7BC  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  6402  00F7BE  6A25               	clrf	(??_fatfs_init+4)& (0+255),c
  6403  00F7C0  C024  F025         	movff	??_fatfs_init+3,??_fatfs_init+4
  6404  00F7C4  C023  F024         	movff	??_fatfs_init+2,??_fatfs_init+3
  6405  00F7C8  C022  F023         	movff	??_fatfs_init+1,??_fatfs_init+2
  6406  00F7CC  6A22               	clrf	??_fatfs_init+1,c
  6407  00F7CE  EE20 F053          	lfsr	2,83
  6408  00F7D2  501F               	movf	fatfs_init@fs,w,c
  6409  00F7D4  26D9               	addwf	fsr2l,f,c
  6410  00F7D6  5020               	movf	fatfs_init@fs+1,w,c
  6411  00F7D8  22DA               	addwfc	fsr2h,f,c
  6412  00F7DA  50DF               	movf	indf2,w,c
  6413  00F7DC  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  6414  00F7DE  C026  F027         	movff	??_fatfs_init+5,??_fatfs_init+6
  6415  00F7E2  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  6416  00F7E4  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  6417  00F7E6  6A2A               	clrf	(??_fatfs_init+9)& (0+255),c
  6418  00F7E8  C028  F02A         	movff	??_fatfs_init+7,??_fatfs_init+9
  6419  00F7EC  C027  F029         	movff	??_fatfs_init+6,??_fatfs_init+8
  6420  00F7F0  6A28               	clrf	??_fatfs_init+7,c
  6421  00F7F2  6A27               	clrf	??_fatfs_init+6,c
  6422  00F7F4  EE20 F054          	lfsr	2,84
  6423  00F7F8  501F               	movf	fatfs_init@fs,w,c
  6424  00F7FA  26D9               	addwf	fsr2l,f,c
  6425  00F7FC  5020               	movf	fatfs_init@fs+1,w,c
  6426  00F7FE  22DA               	addwfc	fsr2h,f,c
  6427  00F800  50DF               	movf	indf2,w,c
  6428  00F802  6E2B               	movwf	(??_fatfs_init+10)& (0+255),c
  6429  00F804  C02B  F02C         	movff	??_fatfs_init+10,??_fatfs_init+11
  6430  00F808  6A2D               	clrf	(??_fatfs_init+12)& (0+255),c
  6431  00F80A  6A2E               	clrf	(??_fatfs_init+13)& (0+255),c
  6432  00F80C  6A2F               	clrf	(??_fatfs_init+14)& (0+255),c
  6433  00F80E  C02C  F02F         	movff	??_fatfs_init+11,??_fatfs_init+14
  6434  00F812  6A2E               	clrf	??_fatfs_init+13,c
  6435  00F814  6A2D               	clrf	??_fatfs_init+12,c
  6436  00F816  6A2C               	clrf	??_fatfs_init+11,c
  6437  00F818  5027               	movf	??_fatfs_init+6,w,c
  6438  00F81A  242C               	addwf	??_fatfs_init+11,w,c
  6439  00F81C  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  6440  00F81E  5028               	movf	??_fatfs_init+7,w,c
  6441  00F820  202D               	addwfc	??_fatfs_init+12,w,c
  6442  00F822  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  6443  00F824  5029               	movf	??_fatfs_init+8,w,c
  6444  00F826  202E               	addwfc	??_fatfs_init+13,w,c
  6445  00F828  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  6446  00F82A  502A               	movf	??_fatfs_init+9,w,c
  6447  00F82C  202F               	addwfc	??_fatfs_init+14,w,c
  6448  00F82E  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  6449  00F830  5022               	movf	??_fatfs_init+1,w,c
  6450  00F832  2430               	addwf	??_fatfs_init+15,w,c
  6451  00F834  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  6452  00F836  5023               	movf	??_fatfs_init+2,w,c
  6453  00F838  2031               	addwfc	??_fatfs_init+16,w,c
  6454  00F83A  6E35               	movwf	(??_fatfs_init+20)& (0+255),c
  6455  00F83C  5024               	movf	??_fatfs_init+3,w,c
  6456  00F83E  2032               	addwfc	??_fatfs_init+17,w,c
  6457  00F840  6E36               	movwf	(??_fatfs_init+21)& (0+255),c
  6458  00F842  5025               	movf	??_fatfs_init+4,w,c
  6459  00F844  2033               	addwfc	??_fatfs_init+18,w,c
  6460  00F846  6E37               	movwf	(??_fatfs_init+22)& (0+255),c
  6461  00F848  EE20 F051          	lfsr	2,81
  6462  00F84C  501F               	movf	fatfs_init@fs,w,c
  6463  00F84E  26D9               	addwf	fsr2l,f,c
  6464  00F850  5020               	movf	fatfs_init@fs+1,w,c
  6465  00F852  22DA               	addwfc	fsr2h,f,c
  6466  00F854  50DF               	movf	indf2,w,c
  6467  00F856  6E38               	movwf	(??_fatfs_init+23)& (0+255),c
  6468  00F858  5038               	movf	??_fatfs_init+23,w,c
  6469  00F85A  2434               	addwf	??_fatfs_init+19,w,c
  6470  00F85C  6E49               	movwf	fatfs_init@total_sectors,c
  6471  00F85E  0E00               	movlw	0
  6472  00F860  2035               	addwfc	??_fatfs_init+20,w,c
  6473  00F862  6E4A               	movwf	fatfs_init@total_sectors+1,c
  6474  00F864  0E00               	movlw	0
  6475  00F866  2036               	addwfc	??_fatfs_init+21,w,c
  6476  00F868  6E4B               	movwf	fatfs_init@total_sectors+2,c
  6477  00F86A  0E00               	movlw	0
  6478  00F86C  2037               	addwfc	??_fatfs_init+22,w,c
  6479  00F86E  6E4C               	movwf	fatfs_init@total_sectors+3,c
  6480  00F870                     l12306:
  6481                           
  6482                           ;fat_access.c: 161: data_sectors = total_sectors - (( ((uint16)fs->currentsector.sector[
      +                          14+1]<<8) + (uint16)fs->currentsector.sector[14+0] ) + (fs->currentsector.sector[16] * F
      +                          ATSz) + root_dir_sectors);
  6483  00F870  EE20 F041          	lfsr	2,65
  6484  00F874  501F               	movf	fatfs_init@fs,w,c
  6485  00F876  26D9               	addwf	fsr2l,f,c
  6486  00F878  5020               	movf	fatfs_init@fs+1,w,c
  6487  00F87A  22DA               	addwfc	fsr2h,f,c
  6488  00F87C  50DF               	movf	indf2,w,c
  6489  00F87E  6E21               	movwf	??_fatfs_init& (0+255),c
  6490  00F880  C021  F022         	movff	??_fatfs_init,??_fatfs_init+1
  6491  00F884  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  6492  00F886  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  6493  00F888  6A25               	clrf	(??_fatfs_init+4)& (0+255),c
  6494  00F88A  5022               	movf	??_fatfs_init+1,w,c
  6495  00F88C  0245               	mulwf	fatfs_init@FATSz,c
  6496  00F88E  CFF3 F026          	movff	prodl,??_fatfs_init+5
  6497  00F892  CFF4 F027          	movff	prodh,??_fatfs_init+6
  6498  00F896  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  6499  00F898  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  6500  00F89A  0246               	mulwf	fatfs_init@FATSz+1,c
  6501  00F89C  50F3               	movf	243,w,c
  6502  00F89E  2627               	addwf	(??_fatfs_init+6)& (0+255),f,c
  6503  00F8A0  50F4               	movf	244,w,c
  6504  00F8A2  2228               	addwfc	(??_fatfs_init+7)& (0+255),f,c
  6505  00F8A4  0E00               	movlw	0
  6506  00F8A6  2229               	addwfc	(??_fatfs_init+8)& (0+255),f,c
  6507  00F8A8  5023               	movf	??_fatfs_init+2,w,c
  6508  00F8AA  0245               	mulwf	fatfs_init@FATSz,c
  6509  00F8AC  50F3               	movf	243,w,c
  6510  00F8AE  2627               	addwf	(??_fatfs_init+6)& (0+255),f,c
  6511  00F8B0  50F4               	movf	244,w,c
  6512  00F8B2  2228               	addwfc	(??_fatfs_init+7)& (0+255),f,c
  6513  00F8B4  0E00               	movlw	0
  6514  00F8B6  2229               	addwfc	(??_fatfs_init+8)& (0+255),f,c
  6515  00F8B8  5022               	movf	??_fatfs_init+1,w,c
  6516  00F8BA  0247               	mulwf	fatfs_init@FATSz+2,c
  6517  00F8BC  50F3               	movf	243,w,c
  6518  00F8BE  2628               	addwf	(??_fatfs_init+7)& (0+255),f,c
  6519  00F8C0  50F4               	movf	244,w,c
  6520  00F8C2  2229               	addwfc	(??_fatfs_init+8)& (0+255),f,c
  6521  00F8C4  5023               	movf	??_fatfs_init+2,w,c
  6522  00F8C6  0246               	mulwf	fatfs_init@FATSz+1,c
  6523  00F8C8  50F3               	movf	243,w,c
  6524  00F8CA  2628               	addwf	(??_fatfs_init+7)& (0+255),f,c
  6525  00F8CC  50F4               	movf	244,w,c
  6526  00F8CE  2229               	addwfc	(??_fatfs_init+8)& (0+255),f,c
  6527  00F8D0  5024               	movf	??_fatfs_init+3,w,c
  6528  00F8D2  0245               	mulwf	fatfs_init@FATSz,c
  6529  00F8D4  50F3               	movf	243,w,c
  6530  00F8D6  2628               	addwf	(??_fatfs_init+7)& (0+255),f,c
  6531  00F8D8  50F4               	movf	244,w,c
  6532  00F8DA  2229               	addwfc	(??_fatfs_init+8)& (0+255),f,c
  6533  00F8DC  5048               	movf	fatfs_init@FATSz+3,w,c
  6534  00F8DE  0222               	mulwf	??_fatfs_init+1,c
  6535  00F8E0  50F3               	movf	243,w,c
  6536  00F8E2  2629               	addwf	(??_fatfs_init+8)& (0+255),f,c
  6537  00F8E4  5023               	movf	??_fatfs_init+2,w,c
  6538  00F8E6  0247               	mulwf	fatfs_init@FATSz+2,c
  6539  00F8E8  50F3               	movf	243,w,c
  6540  00F8EA  2629               	addwf	(??_fatfs_init+8)& (0+255),f,c
  6541  00F8EC  5024               	movf	??_fatfs_init+3,w,c
  6542  00F8EE  0246               	mulwf	fatfs_init@FATSz+1,c
  6543  00F8F0  50F3               	movf	243,w,c
  6544  00F8F2  2629               	addwf	(??_fatfs_init+8)& (0+255),f,c
  6545  00F8F4  5025               	movf	??_fatfs_init+4,w,c
  6546  00F8F6  0245               	mulwf	fatfs_init@FATSz,c
  6547  00F8F8  50F3               	movf	243,w,c
  6548  00F8FA  2629               	addwf	(??_fatfs_init+8)& (0+255),f,c
  6549  00F8FC  EE20 F040          	lfsr	2,64
  6550  00F900  501F               	movf	fatfs_init@fs,w,c
  6551  00F902  26D9               	addwf	fsr2l,f,c
  6552  00F904  5020               	movf	fatfs_init@fs+1,w,c
  6553  00F906  22DA               	addwfc	fsr2h,f,c
  6554  00F908  50DF               	movf	indf2,w,c
  6555  00F90A  6E2A               	movwf	(??_fatfs_init+9)& (0+255),c
  6556  00F90C  502A               	movf	??_fatfs_init+9,w,c
  6557  00F90E  6E2C               	movwf	(??_fatfs_init+11)& (0+255),c
  6558  00F910  6A2B               	clrf	(??_fatfs_init+10)& (0+255),c
  6559  00F912  EE20 F03F          	lfsr	2,63
  6560  00F916  501F               	movf	fatfs_init@fs,w,c
  6561  00F918  26D9               	addwf	fsr2l,f,c
  6562  00F91A  5020               	movf	fatfs_init@fs+1,w,c
  6563  00F91C  22DA               	addwfc	fsr2h,f,c
  6564  00F91E  50DF               	movf	indf2,w,c
  6565  00F920  6E2D               	movwf	(??_fatfs_init+12)& (0+255),c
  6566  00F922  502D               	movf	??_fatfs_init+12,w,c
  6567  00F924  262B               	addwf	??_fatfs_init+10,f,c
  6568  00F926  0E00               	movlw	0
  6569  00F928  222C               	addwfc	??_fatfs_init+11,f,c
  6570  00F92A  502B               	movf	??_fatfs_init+10,w,c
  6571  00F92C  2426               	addwf	??_fatfs_init+5,w,c
  6572  00F92E  6E2E               	movwf	(??_fatfs_init+13)& (0+255),c
  6573  00F930  502C               	movf	??_fatfs_init+11,w,c
  6574  00F932  2027               	addwfc	??_fatfs_init+6,w,c
  6575  00F934  6E2F               	movwf	(??_fatfs_init+14)& (0+255),c
  6576  00F936  0E00               	movlw	0
  6577  00F938  2028               	addwfc	??_fatfs_init+7,w,c
  6578  00F93A  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  6579  00F93C  0E00               	movlw	0
  6580  00F93E  2029               	addwfc	??_fatfs_init+8,w,c
  6581  00F940  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  6582  00F942  503D               	movf	fatfs_init@root_dir_sectors,w,c
  6583  00F944  242E               	addwf	??_fatfs_init+13,w,c
  6584  00F946  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  6585  00F948  503E               	movf	fatfs_init@root_dir_sectors+1,w,c
  6586  00F94A  202F               	addwfc	??_fatfs_init+14,w,c
  6587  00F94C  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  6588  00F94E  503F               	movf	fatfs_init@root_dir_sectors+2,w,c
  6589  00F950  2030               	addwfc	??_fatfs_init+15,w,c
  6590  00F952  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  6591  00F954  5040               	movf	fatfs_init@root_dir_sectors+3,w,c
  6592  00F956  2031               	addwfc	??_fatfs_init+16,w,c
  6593  00F958  6E35               	movwf	(??_fatfs_init+20)& (0+255),c
  6594  00F95A  1E32               	comf	??_fatfs_init+17,f,c
  6595  00F95C  1E33               	comf	??_fatfs_init+18,f,c
  6596  00F95E  1E34               	comf	??_fatfs_init+19,f,c
  6597  00F960  1E35               	comf	??_fatfs_init+20,f,c
  6598  00F962  2A32               	incf	??_fatfs_init+17,f,c
  6599  00F964  0E00               	movlw	0
  6600  00F966  2233               	addwfc	??_fatfs_init+18,f,c
  6601  00F968  2234               	addwfc	??_fatfs_init+19,f,c
  6602  00F96A  2235               	addwfc	??_fatfs_init+20,f,c
  6603  00F96C  5049               	movf	fatfs_init@total_sectors,w,c
  6604  00F96E  2432               	addwf	??_fatfs_init+17,w,c
  6605  00F970  6E41               	movwf	fatfs_init@data_sectors,c
  6606  00F972  504A               	movf	fatfs_init@total_sectors+1,w,c
  6607  00F974  2033               	addwfc	??_fatfs_init+18,w,c
  6608  00F976  6E42               	movwf	fatfs_init@data_sectors+1,c
  6609  00F978  504B               	movf	fatfs_init@total_sectors+2,w,c
  6610  00F97A  2034               	addwfc	??_fatfs_init+19,w,c
  6611  00F97C  6E43               	movwf	fatfs_init@data_sectors+2,c
  6612  00F97E  504C               	movf	fatfs_init@total_sectors+3,w,c
  6613  00F980  2035               	addwfc	??_fatfs_init+20,w,c
  6614  00F982  6E44               	movwf	fatfs_init@data_sectors+3,c
  6615                           
  6616                           ;fat_access.c: 164: if (fs->sectors_per_cluster != 0)
  6617  00F984  C01F  FFD9         	movff	fatfs_init@fs,fsr2l
  6618  00F988  C020  FFDA         	movff	fatfs_init@fs+1,fsr2h
  6619  00F98C  50DF               	movf	indf2,w,c
  6620  00F98E  E057               	bz	l12336
  6621                           
  6622                           ;fat_access.c: 165: {
  6623                           ;fat_access.c: 166: count_of_clusters = data_sectors / fs->sectors_per_cluster;
  6624  00F990  C041  F001         	movff	fatfs_init@data_sectors,___lldiv@dividend
  6625  00F994  C042  F002         	movff	fatfs_init@data_sectors+1,___lldiv@dividend+1
  6626  00F998  C043  F003         	movff	fatfs_init@data_sectors+2,___lldiv@dividend+2
  6627  00F99C  C044  F004         	movff	fatfs_init@data_sectors+3,___lldiv@dividend+3
  6628  00F9A0  C01F  FFD9         	movff	fatfs_init@fs,fsr2l
  6629  00F9A4  C020  FFDA         	movff	fatfs_init@fs+1,fsr2h
  6630  00F9A8  50DF               	movf	indf2,w,c
  6631  00F9AA  6E21               	movwf	??_fatfs_init& (0+255),c
  6632  00F9AC  5021               	movf	??_fatfs_init,w,c
  6633  00F9AE  6E05               	movwf	___lldiv@divisor,c
  6634  00F9B0  6A06               	clrf	___lldiv@divisor+1,c
  6635  00F9B2  6A07               	clrf	___lldiv@divisor+2,c
  6636  00F9B4  6A08               	clrf	___lldiv@divisor+3,c
  6637  00F9B6  EC7B  F026         	call	___lldiv	;wreg free
  6638  00F9BA  C001  F04D         	movff	?___lldiv,fatfs_init@count_of_clusters
  6639  00F9BE  C002  F04E         	movff	?___lldiv+1,fatfs_init@count_of_clusters+1
  6640  00F9C2  C003  F04F         	movff	?___lldiv+2,fatfs_init@count_of_clusters+2
  6641  00F9C6  C004  F050         	movff	?___lldiv+3,fatfs_init@count_of_clusters+3
  6642                           
  6643                           ;fat_access.c: 168: if(count_of_clusters < 4085)
  6644  00F9CA  0EF5               	movlw	245
  6645  00F9CC  6E21               	movwf	??_fatfs_init& (0+255),c
  6646  00F9CE  0E0F               	movlw	15
  6647  00F9D0  6E22               	movwf	(??_fatfs_init+1)& (0+255),c
  6648  00F9D2  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  6649  00F9D4  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  6650  00F9D6  5021               	movf	??_fatfs_init,w,c
  6651  00F9D8  5C4D               	subwf	fatfs_init@count_of_clusters,w,c
  6652  00F9DA  5022               	movf	??_fatfs_init+1,w,c
  6653  00F9DC  584E               	subwfb	fatfs_init@count_of_clusters+1,w,c
  6654  00F9DE  5023               	movf	??_fatfs_init+2,w,c
  6655  00F9E0  584F               	subwfb	fatfs_init@count_of_clusters+2,w,c
  6656  00F9E2  5024               	movf	??_fatfs_init+3,w,c
  6657  00F9E4  5850               	subwfb	fatfs_init@count_of_clusters+3,w,c
  6658  00F9E6  E32B               	bnc	l12336
  6659                           
  6660                           ;fat_access.c: 171: else if(count_of_clusters < 65525)
  6661                           
  6662                           ;fat_access.c: 170: return (-5);
  6663  00F9E8  0EF5               	movlw	245
  6664  00F9EA  6E21               	movwf	??_fatfs_init& (0+255),c
  6665  00F9EC  6822               	setf	(??_fatfs_init+1)& (0+255),c
  6666  00F9EE  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  6667  00F9F0  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  6668  00F9F2  5021               	movf	??_fatfs_init,w,c
  6669  00F9F4  5C4D               	subwf	fatfs_init@count_of_clusters,w,c
  6670  00F9F6  5022               	movf	??_fatfs_init+1,w,c
  6671  00F9F8  584E               	subwfb	fatfs_init@count_of_clusters+1,w,c
  6672  00F9FA  5023               	movf	??_fatfs_init+2,w,c
  6673  00F9FC  584F               	subwfb	fatfs_init@count_of_clusters+2,w,c
  6674  00F9FE  5024               	movf	??_fatfs_init+3,w,c
  6675  00FA00  5850               	subwfb	fatfs_init@count_of_clusters+3,w,c
  6676  00FA02  E212               	bc	l12330
  6677                           
  6678                           ;fat_access.c: 172: {
  6679                           ;fat_access.c: 174: fs->rootdir_first_cluster = 0;
  6680  00FA04  EE20 F005          	lfsr	2,5
  6681  00FA08  501F               	movf	fatfs_init@fs,w,c
  6682  00FA0A  26D9               	addwf	fsr2l,f,c
  6683  00FA0C  5020               	movf	fatfs_init@fs+1,w,c
  6684  00FA0E  22DA               	addwfc	fsr2h,f,c
  6685  00FA10  6ADE               	clrf	postinc2,c
  6686  00FA12  6ADE               	clrf	postinc2,c
  6687  00FA14  6ADE               	clrf	postinc2,c
  6688  00FA16  6ADD               	clrf	postdec2,c
  6689                           
  6690                           ;fat_access.c: 177: fs->fat_type = FAT_TYPE_16;
  6691  00FA18  EE20 F028          	lfsr	2,40
  6692  00FA1C  501F               	movf	fatfs_init@fs,w,c
  6693  00FA1E  26D9               	addwf	fsr2l,f,c
  6694  00FA20  5020               	movf	fatfs_init@fs+1,w,c
  6695  00FA22  22DA               	addwfc	fsr2h,f,c
  6696  00FA24  0E00               	movlw	0
  6697  00FA26  D007               	goto	L10
  6698  00FA28                     l12330:
  6699                           
  6700                           ;fat_access.c: 180: else
  6701                           ;fat_access.c: 181: {
  6702                           ;fat_access.c: 183: fs->fat_type = FAT_TYPE_32;
  6703  00FA28  EE20 F028          	lfsr	2,40
  6704  00FA2C  501F               	movf	fatfs_init@fs,w,c
  6705  00FA2E  26D9               	addwf	fsr2l,f,c
  6706  00FA30  5020               	movf	fatfs_init@fs+1,w,c
  6707  00FA32  22DA               	addwfc	fsr2h,f,c
  6708  00FA34  0E01               	movlw	1
  6709  00FA36                     L10:
  6710  00FA36  6EDF               	movwf	indf2,c
  6711                           
  6712                           ;fat_access.c: 184: return 0;
  6713  00FA38  0E00               	movlw	0
  6714  00FA3A  6E20               	movwf	?_fatfs_init+1,c
  6715  00FA3C  D002               	goto	L11
  6716  00FA3E                     l12336:
  6717                           
  6718                           ;fat_access.c: 187: else
  6719                           ;fat_access.c: 188: return (-5);
  6720  00FA3E  6820               	setf	?_fatfs_init+1,c
  6721  00FA40  0EFB               	movlw	251
  6722  00FA42                     L11:
  6723  00FA42  6E1F               	movwf	?_fatfs_init,c
  6724  00FA44                     l38:
  6725  00FA44  0012               	return	
  6726  00FA46                     __end_of_fatfs_init:
  6727                           	opt stack 0
  6728                           tosu	equ	0xFFF
  6729                           tosh	equ	0xFFE
  6730                           tosl	equ	0xFFD
  6731                           pclath	equ	0xFFA
  6732                           tblptru	equ	0xFF8
  6733                           tblptrh	equ	0xFF7
  6734                           tblptrl	equ	0xFF6
  6735                           tablat	equ	0xFF5
  6736                           prodh	equ	0xFF4
  6737                           prodl	equ	0xFF3
  6738                           postinc0	equ	0xFEE
  6739                           wreg	equ	0xFE8
  6740                           indf1	equ	0xFE7
  6741                           postdec1	equ	0xFE5
  6742                           fsr1h	equ	0xFE2
  6743                           fsr1l	equ	0xFE1
  6744                           indf2	equ	0xFDF
  6745                           postinc2	equ	0xFDE
  6746                           postdec2	equ	0xFDD
  6747                           fsr2h	equ	0xFDA
  6748                           fsr2l	equ	0xFD9
  6749                           status	equ	0xFD8
  6750                           
  6751 ;; *************** function _Open_dir *****************
  6752 ;; Defined at:
  6753 ;;		line 719 in file "main.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;		None
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;		None
  6758 ;; Return value:  Size  Location     Type
  6759 ;;		None               void
  6760 ;; Registers used:
  6761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;Total ram usage:        0 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:   11
  6774 ;; This function calls:
  6775 ;;		_Clr_str
  6776 ;;		_Read_str
  6777 ;;		_Switch
  6778 ;;		_Write_str
  6779 ;;		_fl_closedir
  6780 ;;		_fl_listdirectory
  6781 ;;		_fl_opendir
  6782 ;;		_printf
  6783 ;; This function is called by:
  6784 ;;		_main
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text6
  6789  004F52                     __ptext6:
  6790                           	opt stack 0
  6791  004F52                     _Open_dir:
  6792                           	opt stack 19
  6793                           
  6794                           ;main.c: 721: Write_str("\n\rEnter the name of the directory\n\r");
  6795                           
  6796                           ;incstack = 0
  6797  004F52  0EFC               	movlw	high STR_54
  6798  004F54  6E07               	movwf	Write_str@str+1,c
  6799  004F56  0EAD               	movlw	low STR_54
  6800  004F58  6E06               	movwf	Write_str@str,c
  6801  004F5A  EC3C  F01F         	call	_Write_str	;wreg free
  6802                           
  6803                           ;main.c: 722: Clr_str(string);
  6804  004F5E  0E01               	movlw	high _string
  6805  004F60  6E02               	movwf	Clr_str@buffer+1,c
  6806  004F62  0101               	movlb	1	; () banked
  6807  004F64  0EAF               	movlw	low _string
  6808  004F66  6E01               	movwf	Clr_str@buffer,c
  6809  004F68  EC95  F01F         	call	_Clr_str	;wreg free
  6810                           
  6811                           ;main.c: 723: Read_str(string);
  6812  004F6C  0E01               	movlw	high _string
  6813  004F6E  6E03               	movwf	Read_str@buffer+1,c
  6814  004F70  0101               	movlb	1	; () banked
  6815  004F72  0EAF               	movlw	low _string
  6816  004F74  6E02               	movwf	Read_str@buffer,c
  6817  004F76  EC22  F021         	call	_Read_str	;wreg free
  6818                           
  6819                           ;main.c: 724: Switch('r');
  6820  004F7A  0E72               	movlw	114
  6821  004F7C  EC13  F030         	call	_Switch
  6822                           
  6823                           ;main.c: 725: if (fl_opendir(m, &dptr))
  6824  004F80  0E02               	movlw	high _m
  6825  004F82  0100               	movlb	0	; () banked
  6826  004F84  6FF3               	movwf	(fl_opendir@path+1)& (0+255),b
  6827  004F86  0E89               	movlw	low _m
  6828  004F88  6FF2               	movwf	fl_opendir@path& (0+255),b
  6829  004F8A  0E01               	movlw	high _dptr
  6830  004F8C  6FF5               	movwf	(fl_opendir@dir+1)& (0+255),b
  6831  004F8E  0ECD               	movlw	low _dptr
  6832  004F90  6FF4               	movwf	fl_opendir@dir& (0+255),b
  6833  004F92  ECC7  F02D         	call	_fl_opendir	;wreg free
  6834  004F96  0100               	movlb	0	; () banked
  6835  004F98  51F3               	movf	(?_fl_opendir+1)& (0+255),w,b
  6836  004F9A  11F2               	iorwf	?_fl_opendir& (0+255),w,b
  6837  004F9C  E019               	bz	l1787
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;main.c: 726: {
  6841                           ;main.c: 727: printf("\n\r%s",m);
  6842  004F9E  0EFF               	movlw	high STR_55
  6843  004FA0  6E0E               	movwf	printf@f+1,c
  6844  004FA2  0EF1               	movlw	low STR_55
  6845  004FA4  6E0D               	movwf	printf@f,c
  6846  004FA6  0E02               	movlw	high _m
  6847  004FA8  6E10               	movwf	?_printf+3,c
  6848  004FAA  0102               	movlb	2	; () banked
  6849  004FAC  0E89               	movlw	low _m
  6850  004FAE  6E0F               	movwf	?_printf+2,c
  6851  004FB0  ECD9  F045         	call	_printf	;wreg free
  6852                           
  6853                           ;main.c: 728: fl_listdirectory(m);
  6854  004FB4  0E02               	movlw	high _m
  6855  004FB6  0101               	movlb	1	; () banked
  6856  004FB8  6F4E               	movwf	(fl_listdirectory@path+1)& (0+255),b
  6857  004FBA  0E89               	movlw	low _m
  6858  004FBC  6F4D               	movwf	fl_listdirectory@path& (0+255),b
  6859  004FBE  ECF0  F02B         	call	_fl_listdirectory	;wreg free
  6860                           
  6861                           ;main.c: 729: fl_closedir(&dptr);
  6862  004FC2  0E01               	movlw	high _dptr
  6863  004FC4  6E02               	movwf	fl_closedir@dir+1,c
  6864  004FC6  0101               	movlb	1	; () banked
  6865  004FC8  0ECD               	movlw	low _dptr
  6866  004FCA  6E01               	movwf	fl_closedir@dir,c
  6867  004FCC  EC1D  F01F         	call	_fl_closedir	;wreg free
  6868  004FD0                     l1787:
  6869  004FD0  0012               	return	
  6870  004FD2                     __end_of_Open_dir:
  6871                           	opt stack 0
  6872                           tosu	equ	0xFFF
  6873                           tosh	equ	0xFFE
  6874                           tosl	equ	0xFFD
  6875                           pclath	equ	0xFFA
  6876                           tblptru	equ	0xFF8
  6877                           tblptrh	equ	0xFF7
  6878                           tblptrl	equ	0xFF6
  6879                           tablat	equ	0xFF5
  6880                           prodh	equ	0xFF4
  6881                           prodl	equ	0xFF3
  6882                           postinc0	equ	0xFEE
  6883                           wreg	equ	0xFE8
  6884                           indf1	equ	0xFE7
  6885                           postdec1	equ	0xFE5
  6886                           fsr1h	equ	0xFE2
  6887                           fsr1l	equ	0xFE1
  6888                           indf2	equ	0xFDF
  6889                           postinc2	equ	0xFDE
  6890                           postdec2	equ	0xFDD
  6891                           fsr2h	equ	0xFDA
  6892                           fsr2l	equ	0xFD9
  6893                           status	equ	0xFD8
  6894                           
  6895 ;; *************** function _fl_listdirectory *****************
  6896 ;; Defined at:
  6897 ;;		line 1468 in file "fat_filelib.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  path            2   77[BANK1 ] PTR const unsigned char 
  6900 ;;		 -> STR_67(2), STR_64(2), m(30), 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;  dirent         19   88[BANK1 ] struct fs_dir_ent
  6903 ;;  dirstat         9   79[BANK1 ] struct fs_dir_list_statu
  6904 ;; Return value:  Size  Location     Type
  6905 ;;		None               void
  6906 ;; Registers used:
  6907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6913 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6914 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6916 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6917 ;;Total ram usage:       30 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:   10
  6920 ;; This function calls:
  6921 ;;		_fl_closedir
  6922 ;;		_fl_init
  6923 ;;		_fl_opendir
  6924 ;;		_fl_readdir
  6925 ;;		_printf
  6926 ;; This function is called by:
  6927 ;;		_Open_dir
  6928 ;;		_main
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932                           	psect	text7
  6933  0057E0                     __ptext7:
  6934                           	opt stack 0
  6935  0057E0                     _fl_listdirectory:
  6936                           	opt stack 20
  6937                           
  6938                           ;fat_filelib.c: 1470: FL_DIR dirstat;
  6939                           ;fat_filelib.c: 1473: { if (_filelib_init==0) fl_init(); };
  6940                           
  6941                           ;incstack = 0
  6942  0057E0  0101               	movlb	1	; () banked
  6943  0057E2  5192               	movf	(__filelib_init+1)& (0+255),w,b
  6944  0057E4  1191               	iorwf	__filelib_init& (0+255),w,b
  6945  0057E6  B4D8               	btfsc	status,2,c
  6946                           
  6947                           ; BSR set to: 1
  6948  0057E8  EC3A  F029         	call	_fl_init	;wreg free
  6949                           
  6950                           ;fat_filelib.c: 1477: printf ("\r\nDirectory %s\r\n", path);
  6951                           
  6952                           ;fat_filelib.c: 1475: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
  6953  0057EC  0EFF               	movlw	high STR_11
  6954  0057EE  6E0E               	movwf	printf@f+1,c
  6955  0057F0  0E86               	movlw	low STR_11
  6956  0057F2  6E0D               	movwf	printf@f,c
  6957  0057F4  C14E  F010         	movff	fl_listdirectory@path+1,?_printf+3
  6958  0057F8  0101               	movlb	1	; () banked
  6959  0057FA  C14D  F00F         	movff	fl_listdirectory@path,?_printf+2
  6960  0057FE  ECD9  F045         	call	_printf	;wreg free
  6961                           
  6962                           ;fat_filelib.c: 1479: if (fl_opendir(path, &dirstat))
  6963  005802  C14E  F0F3         	movff	fl_listdirectory@path+1,fl_opendir@path+1
  6964  005806  C14D  F0F2         	movff	fl_listdirectory@path,fl_opendir@path
  6965  00580A  0E01               	movlw	high fl_listdirectory@dirstat
  6966  00580C  0100               	movlb	0	; () banked
  6967  00580E  6FF5               	movwf	(fl_opendir@dir+1)& (0+255),b
  6968  005810  0E4F               	movlw	low fl_listdirectory@dirstat
  6969  005812  6FF4               	movwf	fl_opendir@dir& (0+255),b
  6970  005814  ECC7  F02D         	call	_fl_opendir	;wreg free
  6971  005818  0100               	movlb	0	; () banked
  6972  00581A  51F3               	movf	(?_fl_opendir+1)& (0+255),w,b
  6973  00581C  11F2               	iorwf	?_fl_opendir& (0+255),w,b
  6974  00581E  E122               	bnz	l12584
  6975  005820  D037               	goto	l790
  6976  005822                     l12578:
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;fat_filelib.c: 1484: {
  6980                           ;fat_filelib.c: 1492: if (dirent.is_dir)
  6981  005822  0101               	movlb	1	; () banked
  6982  005824  5162               	movf	(fl_listdirectory@dirent+10)& (0+255),w,b
  6983  005826  E00B               	bz	l12582
  6984                           
  6985                           ; BSR set to: 1
  6986                           ;fat_filelib.c: 1493: {
  6987                           ;fat_filelib.c: 1494: printf ("%s <DIR>\r\n", dirent.filename);
  6988  005828  0EFF               	movlw	high STR_12
  6989  00582A  6E0E               	movwf	printf@f+1,c
  6990  00582C  0EC3               	movlw	low STR_12
  6991  00582E  6E0D               	movwf	printf@f,c
  6992  005830  0E01               	movlw	high fl_listdirectory@dirent
  6993  005832  6E10               	movwf	?_printf+3,c
  6994  005834  0E58               	movlw	low fl_listdirectory@dirent
  6995  005836  6E0F               	movwf	?_printf+2,c
  6996  005838  ECD9  F045         	call	_printf	;wreg free
  6997                           
  6998                           ;fat_filelib.c: 1495: }
  6999  00583C  D013               	goto	l12584
  7000  00583E                     l12582:
  7001                           
  7002                           ;fat_filelib.c: 1496: else
  7003                           ;fat_filelib.c: 1497: {
  7004                           ;fat_filelib.c: 1498: printf ("%s [%d bytes]\r\n", dirent.filename, dirent.size);
  7005  00583E  0EFF               	movlw	high STR_13
  7006  005840  6E0E               	movwf	printf@f+1,c
  7007  005842  0E97               	movlw	low STR_13
  7008  005844  6E0D               	movwf	printf@f,c
  7009  005846  0E01               	movlw	high fl_listdirectory@dirent
  7010  005848  6E10               	movwf	?_printf+3,c
  7011  00584A  0101               	movlb	1	; () banked
  7012  00584C  0E58               	movlw	low fl_listdirectory@dirent
  7013  00584E  6E0F               	movwf	?_printf+2,c
  7014  005850  C167  F011         	movff	fl_listdirectory@dirent+15,?_printf+4
  7015  005854  C168  F012         	movff	fl_listdirectory@dirent+16,?_printf+5
  7016  005858  C169  F013         	movff	fl_listdirectory@dirent+17,?_printf+6
  7017  00585C  C16A  F014         	movff	fl_listdirectory@dirent+18,?_printf+7
  7018  005860  ECD9  F045         	call	_printf	;wreg free
  7019  005864                     l12584:
  7020  005864  0E01               	movlw	high fl_listdirectory@dirstat
  7021  005866  0100               	movlb	0	; () banked
  7022  005868  6FBB               	movwf	(fl_readdir@dirls+1)& (0+255),b
  7023  00586A  0E4F               	movlw	low fl_listdirectory@dirstat
  7024  00586C  6FBA               	movwf	fl_readdir@dirls& (0+255),b
  7025  00586E  0E01               	movlw	high fl_listdirectory@dirent
  7026  005870  6FBD               	movwf	(fl_readdir@entry+1)& (0+255),b
  7027  005872  0E58               	movlw	low fl_listdirectory@dirent
  7028  005874  6FBC               	movwf	fl_readdir@entry& (0+255),b
  7029  005876  ECF7  F021         	call	_fl_readdir	;wreg free
  7030  00587A  0100               	movlb	0	; () banked
  7031  00587C  51BB               	movf	(?_fl_readdir+1)& (0+255),w,b
  7032  00587E  11BA               	iorwf	?_fl_readdir& (0+255),w,b
  7033  005880  E0D0               	bz	l12578
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;fat_filelib.c: 1499: }
  7037                           ;fat_filelib.c: 1500: }
  7038                           ;fat_filelib.c: 1502: fl_closedir(&dirstat);
  7039                           
  7040                           ; BSR set to: 0
  7041  005882  0E01               	movlw	high fl_listdirectory@dirstat
  7042  005884  6E02               	movwf	fl_closedir@dir+1,c
  7043  005886  0101               	movlb	1	; () banked
  7044  005888  0E4F               	movlw	low fl_listdirectory@dirstat
  7045  00588A  6E01               	movwf	fl_closedir@dir,c
  7046  00588C  EC1D  F01F         	call	_fl_closedir	;wreg free
  7047  005890                     l790:
  7048  005890  0012               	return	
  7049  005892                     __end_of_fl_listdirectory:
  7050                           	opt stack 0
  7051                           tosu	equ	0xFFF
  7052                           tosh	equ	0xFFE
  7053                           tosl	equ	0xFFD
  7054                           pclath	equ	0xFFA
  7055                           tblptru	equ	0xFF8
  7056                           tblptrh	equ	0xFF7
  7057                           tblptrl	equ	0xFF6
  7058                           tablat	equ	0xFF5
  7059                           prodh	equ	0xFF4
  7060                           prodl	equ	0xFF3
  7061                           postinc0	equ	0xFEE
  7062                           wreg	equ	0xFE8
  7063                           indf1	equ	0xFE7
  7064                           postdec1	equ	0xFE5
  7065                           fsr1h	equ	0xFE2
  7066                           fsr1l	equ	0xFE1
  7067                           indf2	equ	0xFDF
  7068                           postinc2	equ	0xFDE
  7069                           postdec2	equ	0xFDD
  7070                           fsr2h	equ	0xFDA
  7071                           fsr2l	equ	0xFD9
  7072                           status	equ	0xFD8
  7073                           
  7074 ;; *************** function _printf *****************
  7075 ;; Defined at:
  7076 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\doprnt.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  f               2   12[COMRAM] PTR const unsigned char 
  7079 ;;		 -> STR_55(5), STR_13(16), STR_12(11), STR_11(17), 
  7080 ;;		 -> STR_9(49), STR_8(28), STR_7(28), STR_6(24), 
  7081 ;;		 -> STR_5(31), STR_2(10), STR_1(15), 
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;  idx             1   22[COMRAM] unsigned char 
  7084 ;;  _val            4   27[COMRAM] struct .
  7085 ;;  ap              2   24[COMRAM] PTR void [1]
  7086 ;;		 -> ?_printf(2), 
  7087 ;;  c               1   31[COMRAM] char 
  7088 ;;  flag            1   26[COMRAM] unsigned char 
  7089 ;;  prec            1   23[COMRAM] char 
  7090 ;; Return value:  Size  Location     Type
  7091 ;;                  2   12[COMRAM] int 
  7092 ;; Registers used:
  7093 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7094 ;; Tracked objects:
  7095 ;;		On entry : 0/0
  7096 ;;		On exit  : 0/0
  7097 ;;		Unchanged: 0/0
  7098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7099 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7100 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7101 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7102 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7103 ;;Total ram usage:       20 bytes
  7104 ;; Hardware stack levels used:    1
  7105 ;; Hardware stack levels required when called:    3
  7106 ;; This function calls:
  7107 ;;		___lwdiv
  7108 ;;		___lwmod
  7109 ;;		_putch
  7110 ;; This function is called by:
  7111 ;;		_fl_attach_media
  7112 ;;		_fl_listdirectory
  7113 ;;		_Open_dir
  7114 ;;		_fatfs_show_details
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           	psect	text8
  7119  008BB2                     __ptext8:
  7120                           	opt stack 0
  7121  008BB2                     _printf:
  7122                           	opt stack 26
  7123                           
  7124                           ;doprnt.c: 466: va_list ap;
  7125                           ;doprnt.c: 499: signed char c;
  7126                           ;doprnt.c: 506: signed char prec;
  7127                           ;doprnt.c: 508: unsigned char flag;
  7128                           ;doprnt.c: 527: union {
  7129                           ;doprnt.c: 528: unsigned int _val;
  7130                           ;doprnt.c: 529: struct {
  7131                           ;doprnt.c: 530: const char * _cp;
  7132                           ;doprnt.c: 531: unsigned _len;
  7133                           ;doprnt.c: 532: } _str;
  7134                           ;doprnt.c: 533: } _val;
  7135                           ;doprnt.c: 542: *ap = __va_start();
  7136                           
  7137                           ;incstack = 0
  7138  008BB2  0E00               	movlw	high (?_printf+2)
  7139  008BB4  6E1A               	movwf	printf@ap+1,c
  7140  008BB6  0E0F               	movlw	low (?_printf+2)
  7141  008BB8  6E19               	movwf	printf@ap,c
  7142                           
  7143                           ;doprnt.c: 545: while(c = *f++) {
  7144  008BBA  D12C               	goto	l11656
  7145  008BBC                     l11564:
  7146                           
  7147                           ;doprnt.c: 547: if(c != '%')
  7148  008BBC  5020               	movf	printf@c,w,c
  7149  008BBE  0A25               	xorlw	37
  7150  008BC0  E004               	bz	l11568
  7151                           
  7152                           ;doprnt.c: 549: {
  7153                           ;doprnt.c: 550: (putch(c) );
  7154  008BC2  5020               	movf	printf@c,w,c
  7155  008BC4  EC26  F01F         	call	_putch
  7156                           
  7157                           ;doprnt.c: 551: continue;
  7158  008BC8  D125               	goto	l11656
  7159  008BCA                     l11568:
  7160                           
  7161                           ;doprnt.c: 552: }
  7162                           ;doprnt.c: 557: flag = 0;
  7163  008BCA  6A1B               	clrf	printf@flag,c
  7164                           
  7165                           ;doprnt.c: 644: switch(c = *f++) {
  7166  008BCC  D040               	goto	l11588
  7167  008BCE                     l11570:
  7168                           
  7169                           ;doprnt.c: 730: flag |= 0x80;
  7170  008BCE  8E1B               	bsf	printf@flag,7,c
  7171                           
  7172                           ;doprnt.c: 732: break;
  7173  008BD0  D054               	goto	l2218
  7174  008BD2                     l11572:
  7175                           
  7176                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  7177  008BD2  C019  FFD9         	movff	printf@ap,fsr2l
  7178  008BD6  C01A  FFDA         	movff	printf@ap+1,fsr2h
  7179  008BDA  CFDE F01C          	movff	postinc2,printf@_val
  7180  008BDE  CFDD F01D          	movff	postdec2,printf@_val+1
  7181  008BE2  0E02               	movlw	2
  7182  008BE4  2619               	addwf	printf@ap,f,c
  7183  008BE6  0E00               	movlw	0
  7184  008BE8  221A               	addwfc	printf@ap+1,f,c
  7185                           
  7186                           ;doprnt.c: 749: if(!_val._str._cp)
  7187  008BEA  501D               	movf	printf@_val+1,w,c
  7188  008BEC  101C               	iorwf	printf@_val,w,c
  7189  008BEE  E11A               	bnz	l11584
  7190                           
  7191                           ;doprnt.c: 750: _val._str._cp = "(null)";
  7192  008BF0  0EFF               	movlw	high STR_68
  7193  008BF2  6E1D               	movwf	printf@_val+1,c
  7194  008BF4  0ED8               	movlw	low STR_68
  7195  008BF6  6E1C               	movwf	printf@_val,c
  7196  008BF8  D015               	goto	l11584
  7197  008BFA                     l11580:
  7198                           
  7199                           ;doprnt.c: 787: (putch(*_val._str._cp++) );
  7200  008BFA  C01C  FFF6         	movff	printf@_val,tblptrl
  7201  008BFE  C01D  FFF7         	movff	printf@_val+1,tblptrh
  7202  008C02  0E00               	movlw	low (__mediumconst shr (0+16))
  7203  008C04  6EF8               	movwf	tblptru,c
  7204  008C06  0E0F               	movlw	(high __ramtop+-1)
  7205  008C08  64F7               	cpfsgt	tblptrh,c
  7206  008C0A  D003               	bra	u13517
  7207  008C0C  0008               	tblrd		*
  7208  008C0E  50F5               	movf	tablat,w,c
  7209  008C10  D005               	bra	u13510
  7210  008C12                     u13517:
  7211  008C12  CFF6 FFE9          	movff	tblptrl,fsr0l
  7212  008C16  CFF7 FFEA          	movff	tblptrh,fsr0h
  7213  008C1A  50EF               	movf	indf0,w,c
  7214  008C1C                     u13510:
  7215  008C1C  EC26  F01F         	call	_putch
  7216  008C20  4A1C               	infsnz	printf@_val,f,c
  7217  008C22  2A1D               	incf	printf@_val+1,f,c
  7218  008C24                     l11584:
  7219  008C24  C01C  FFF6         	movff	printf@_val,tblptrl
  7220  008C28  C01D  FFF7         	movff	printf@_val+1,tblptrh
  7221  008C2C  0E00               	movlw	low (__mediumconst shr (0+16))
  7222  008C2E  6EF8               	movwf	tblptru,c
  7223  008C30  0E0F               	movlw	(high __ramtop+-1)
  7224  008C32  64F7               	cpfsgt	tblptrh,c
  7225  008C34  D003               	bra	u13527
  7226  008C36  0008               	tblrd		*
  7227  008C38  50F5               	movf	tablat,w,c
  7228  008C3A  D005               	bra	u13520
  7229  008C3C                     u13527:
  7230  008C3C  CFF6 FFE9          	movff	tblptrl,fsr0l
  7231  008C40  CFF7 FFEA          	movff	tblptrh,fsr0h
  7232  008C44  50EF               	movf	indf0,w,c
  7233  008C46                     u13520:
  7234  008C46  0900               	iorlw	0
  7235  008C48  E101 D0E4          	bz	l11656
  7236  008C4C  D7D6               	goto	l11580
  7237  008C4E                     l11588:
  7238  008C4E  C00D  FFF6         	movff	printf@f,tblptrl
  7239  008C52  C00E  FFF7         	movff	printf@f+1,tblptrh
  7240  008C56  4A0D               	infsnz	printf@f,f,c
  7241  008C58  2A0E               	incf	printf@f+1,f,c
  7242  008C5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7243  008C5A  6AF8               	clrf	tblptru,c
  7244  008C5C                     	endif
  7245  008C5C                     	if	0	;tblptru may be non-zero
  7246  008C5C                     	endif
  7247  008C5C  0008               	tblrd		*
  7248  008C5E  CFF5 F020          	movff	tablat,printf@c
  7249  008C62  5020               	movf	printf@c& (0+255),w,c
  7250                           
  7251                           ; Switch size 1, requested type "speed"
  7252                           ; Number of cases is 5, Range of values is 0 to 120
  7253                           ; switch strategies available:
  7254                           ; Name         Instructions Cycles
  7255                           ; simple_byte           16     9 (average)
  7256                           ;	Chosen strategy is simple_byte
  7257  008C64  E101 D0E2          	bz	l2248
  7258  008C68  0A64               	xorlw	100	; case 100
  7259  008C6A  E007               	bz	l2218
  7260  008C6C  0A0D               	xorlw	13	; case 105
  7261  008C6E  E005               	bz	l2218
  7262  008C70  0A1A               	xorlw	26	; case 115
  7263  008C72  E0AF               	bz	l11572
  7264  008C74  0A0B               	xorlw	11	; case 120
  7265  008C76  E0AB               	bz	l11570
  7266  008C78  D0CD               	goto	l11656
  7267  008C7A                     l2218:
  7268                           
  7269                           ;doprnt.c: 1260: if((flag & 0x80) == 0x00)
  7270  008C7A  BE1B               	btfsc	printf@flag,7,c
  7271  008C7C  D01C               	goto	l11600
  7272                           
  7273                           ;doprnt.c: 1262: {
  7274                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7275  008C7E  C019  FFD9         	movff	printf@ap,fsr2l
  7276  008C82  C01A  FFDA         	movff	printf@ap+1,fsr2h
  7277  008C86  CFDE F01C          	movff	postinc2,printf@_val
  7278  008C8A  CFDD F01D          	movff	postdec2,printf@_val+1
  7279  008C8E  0E02               	movlw	2
  7280  008C90  2619               	addwf	printf@ap,f,c
  7281  008C92  0E00               	movlw	0
  7282  008C94  221A               	addwfc	printf@ap+1,f,c
  7283                           
  7284                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  7285  008C96  501D               	movf	printf@_val+1,w,c
  7286  008C98  0A80               	xorlw	128
  7287  008C9A  6EF3               	movwf	prodl,c
  7288  008C9C  0E80               	movlw	128
  7289  008C9E  5CF3               	subwf	prodl,w,c
  7290  008CA0  0E00               	movlw	0
  7291  008CA2  B4D8               	btfsc	status,2,c
  7292  008CA4  5C1C               	subwf	printf@_val,w,c
  7293  008CA6  E24E               	bc	l11634
  7294                           
  7295                           ;doprnt.c: 1271: flag |= 0x03;
  7296  008CA8  0E03               	movlw	3
  7297  008CAA  121B               	iorwf	printf@flag,f,c
  7298                           
  7299                           ;doprnt.c: 1272: _val._val = -_val._val;
  7300  008CAC  6C1C               	negf	printf@_val,c
  7301  008CAE  1E1D               	comf	printf@_val+1,f,c
  7302  008CB0  B0D8               	btfsc	status,0,c
  7303  008CB2  2A1D               	incf	printf@_val+1,f,c
  7304  008CB4  D047               	goto	l11634
  7305  008CB6                     l11600:
  7306                           
  7307                           ;doprnt.c: 1277: else
  7308                           ;doprnt.c: 1282: {
  7309                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7310  008CB6  C019  FFD9         	movff	printf@ap,fsr2l
  7311  008CBA  C01A  FFDA         	movff	printf@ap+1,fsr2h
  7312  008CBE  CFDE F01C          	movff	postinc2,printf@_val
  7313  008CC2  CFDD F01D          	movff	postdec2,printf@_val+1
  7314  008CC6  0E02               	movlw	2
  7315  008CC8  2619               	addwf	printf@ap,f,c
  7316  008CCA  0E00               	movlw	0
  7317  008CCC  221A               	addwfc	printf@ap+1,f,c
  7318  008CCE  D03A               	goto	l11634
  7319  008CD0                     l11604:
  7320                           
  7321                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7322  008CD0  0E01               	movlw	1
  7323  008CD2  6E20               	movwf	printf@c,c
  7324  008CD4  5020               	movf	printf@c,w,c
  7325  008CD6  0A05               	xorlw	5
  7326  008CD8  E03A               	bz	l11636
  7327                           
  7328                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  7329  008CDA  5020               	movf	printf@c,w,c
  7330  008CDC  0D02               	mullw	2
  7331  008CDE  0E58               	movlw	low _dpowers
  7332  008CE0  24F3               	addwf	prodl,w,c
  7333  008CE2  6EF6               	movwf	tblptrl,c
  7334  008CE4  0EFA               	movlw	high _dpowers
  7335  008CE6  20F4               	addwfc	prodh,w,c
  7336  008CE8  6EF7               	movwf	tblptrh,c
  7337  008CEA                     	if	1	;There are 3 active tblptr bytes
  7338  008CEA  6AF8               	clrf	tblptru,c
  7339  008CEC  0E00               	movlw	low (__mediumconst shr (0+16))
  7340  008CEE  22F8               	addwfc	tblptru,f,c
  7341  008CF0                     	endif
  7342  008CF0  0009               	tblrd		*+
  7343  008CF2  CFF5 F015          	movff	tablat,??_printf
  7344  008CF6  0009               	tblrd		*+
  7345  008CF8  CFF5 F016          	movff	tablat,??_printf+1
  7346  008CFC  5015               	movf	??_printf,w,c
  7347  008CFE  5C1C               	subwf	printf@_val,w,c
  7348  008D00  5016               	movf	??_printf+1,w,c
  7349  008D02  581D               	subwfb	printf@_val+1,w,c
  7350  008D04  E324               	bnc	l11636
  7351                           
  7352                           ;doprnt.c: 1316: break;
  7353  008D06  2A20               	incf	printf@c,f,c
  7354  008D08  D7E5               	goto	L13
  7355  008D0A                     l11618:
  7356                           
  7357                           ;doprnt.c: 1325: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  7358  008D0A  0E01               	movlw	1
  7359  008D0C  6E20               	movwf	printf@c,c
  7360  008D0E  5020               	movf	printf@c,w,c
  7361  008D10  0A04               	xorlw	4
  7362  008D12  E01D               	bz	l11636
  7363                           
  7364                           ;doprnt.c: 1326: if(_val._val < hexpowers[c])
  7365  008D14  5020               	movf	printf@c,w,c
  7366  008D16  0D02               	mullw	2
  7367  008D18  0E62               	movlw	low _hexpowers
  7368  008D1A  24F3               	addwf	prodl,w,c
  7369  008D1C  6EF6               	movwf	tblptrl,c
  7370  008D1E  0EFA               	movlw	high _hexpowers
  7371  008D20  20F4               	addwfc	prodh,w,c
  7372  008D22  6EF7               	movwf	tblptrh,c
  7373  008D24                     	if	1	;There are 3 active tblptr bytes
  7374  008D24  6AF8               	clrf	tblptru,c
  7375  008D26  0E00               	movlw	low (__mediumconst shr (0+16))
  7376  008D28  22F8               	addwfc	tblptru,f,c
  7377  008D2A                     	endif
  7378  008D2A  0009               	tblrd		*+
  7379  008D2C  CFF5 F015          	movff	tablat,??_printf
  7380  008D30  0009               	tblrd		*+
  7381  008D32  CFF5 F016          	movff	tablat,??_printf+1
  7382  008D36  5015               	movf	??_printf,w,c
  7383  008D38  5C1C               	subwf	printf@_val,w,c
  7384  008D3A  5016               	movf	??_printf+1,w,c
  7385  008D3C  581D               	subwfb	printf@_val+1,w,c
  7386  008D3E  E307               	bnc	l11636
  7387                           
  7388                           ;doprnt.c: 1327: break;
  7389  008D40  2A20               	incf	printf@c,f,c
  7390  008D42  D7E5               	goto	L14
  7391  008D44                     l11634:
  7392  008D44  501B               	movf	printf@flag,w,c
  7393  008D46  0B80               	andlw	128
  7394                           
  7395                           ; Switch size 1, requested type "speed"
  7396                           ; Number of cases is 2, Range of values is 0 to 128
  7397                           ; switch strategies available:
  7398                           ; Name         Instructions Cycles
  7399                           ; simple_byte            7     4 (average)
  7400                           ;	Chosen strategy is simple_byte
  7401  008D48  E0C3               	bz	l11604
  7402  008D4A  0A80               	xorlw	128	; case 128
  7403  008D4C  E0DE               	bz	l11618
  7404  008D4E                     l11636:
  7405                           
  7406                           ;doprnt.c: 1431: {
  7407                           ;doprnt.c: 1447: if(flag & 0x03)
  7408  008D4E  C01B  F015         	movff	printf@flag,??_printf
  7409  008D52  0E03               	movlw	3
  7410  008D54  1615               	andwf	??_printf,f,c
  7411  008D56  E003               	bz	l11640
  7412                           
  7413                           ;doprnt.c: 1448: (putch('-') );
  7414  008D58  0E2D               	movlw	45
  7415  008D5A  EC26  F01F         	call	_putch
  7416  008D5E                     l11640:
  7417                           
  7418                           ;doprnt.c: 1478: }
  7419                           ;doprnt.c: 1481: prec = c;
  7420  008D5E  C020  F018         	movff	printf@c,printf@prec
  7421                           
  7422                           ;doprnt.c: 1483: while(prec--) {
  7423  008D62  D055               	goto	l11654
  7424  008D64                     l11642:
  7425                           
  7426                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  7427  008D64  5018               	movf	printf@prec,w,c
  7428  008D66  0D02               	mullw	2
  7429  008D68  0E58               	movlw	low _dpowers
  7430  008D6A  24F3               	addwf	prodl,w,c
  7431  008D6C  6EF6               	movwf	tblptrl,c
  7432  008D6E  0EFA               	movlw	high _dpowers
  7433  008D70  20F4               	addwfc	prodh,w,c
  7434  008D72  6EF7               	movwf	tblptrh,c
  7435  008D74                     	if	1	;There are 3 active tblptr bytes
  7436  008D74  6AF8               	clrf	tblptru,c
  7437  008D76  0E00               	movlw	low (__mediumconst shr (0+16))
  7438  008D78  22F8               	addwfc	tblptru,f,c
  7439  008D7A                     	endif
  7440  008D7A  0009               	tblrd		*+
  7441  008D7C  CFF5 F003          	movff	tablat,___lwdiv@divisor
  7442  008D80  000A               	tblrd		*-
  7443  008D82  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  7444  008D86  C01C  F001         	movff	printf@_val,___lwdiv@dividend
  7445  008D8A  C01D  F002         	movff	printf@_val+1,___lwdiv@dividend+1
  7446  008D8E  ECAB  F021         	call	___lwdiv	;wreg free
  7447  008D92  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  7448  008D96  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  7449  008D9A  6A0B               	clrf	___lwmod@divisor+1,c
  7450  008D9C  0E0A               	movlw	10
  7451  008D9E  6E0A               	movwf	___lwmod@divisor,c
  7452  008DA0  EC03  F021         	call	___lwmod	;wreg free
  7453  008DA4  5008               	movf	?___lwmod,w,c
  7454  008DA6  0F30               	addlw	48
  7455  008DA8  6E20               	movwf	printf@c,c
  7456                           
  7457                           ;doprnt.c: 1500: break;
  7458  008DAA  D02E               	goto	l11652
  7459  008DAC                     l11644:
  7460                           
  7461                           ;doprnt.c: 1508: {
  7462                           ;doprnt.c: 1509: unsigned char idx = (_val._val / hexpowers[prec]) & 0xF;
  7463  008DAC  C01C  F001         	movff	printf@_val,___lwdiv@dividend
  7464  008DB0  C01D  F002         	movff	printf@_val+1,___lwdiv@dividend+1
  7465  008DB4  5018               	movf	printf@prec,w,c
  7466  008DB6  0D02               	mullw	2
  7467  008DB8  0E62               	movlw	low _hexpowers
  7468  008DBA  24F3               	addwf	prodl,w,c
  7469  008DBC  6EF6               	movwf	tblptrl,c
  7470  008DBE  0EFA               	movlw	high _hexpowers
  7471  008DC0  20F4               	addwfc	prodh,w,c
  7472  008DC2  6EF7               	movwf	tblptrh,c
  7473  008DC4                     	if	1	;There are 3 active tblptr bytes
  7474  008DC4  6AF8               	clrf	tblptru,c
  7475  008DC6  0E00               	movlw	low (__mediumconst shr (0+16))
  7476  008DC8  22F8               	addwfc	tblptru,f,c
  7477  008DCA                     	endif
  7478  008DCA  0009               	tblrd		*+
  7479  008DCC  CFF5 F003          	movff	tablat,___lwdiv@divisor
  7480  008DD0  000A               	tblrd		*-
  7481  008DD2  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  7482  008DD6  ECAB  F021         	call	___lwdiv	;wreg free
  7483  008DDA  5001               	movf	?___lwdiv,w,c
  7484  008DDC  0B0F               	andlw	15
  7485  008DDE  6E17               	movwf	printf@idx,c
  7486                           
  7487                           ;doprnt.c: 1515: c = "0123456789abcdef"[idx];
  7488  008DE0  5017               	movf	printf@idx,w,c
  7489  008DE2  0D01               	mullw	1
  7490  008DE4  0E75               	movlw	low STR_69
  7491  008DE6  24F3               	addwf	prodl,w,c
  7492  008DE8  6EF6               	movwf	tblptrl,c
  7493  008DEA  0EFF               	movlw	high STR_69
  7494  008DEC  20F4               	addwfc	prodh,w,c
  7495  008DEE  6EF7               	movwf	tblptrh,c
  7496  008DF0                     	if	1	;There are 3 active tblptr bytes
  7497  008DF0  6AF8               	clrf	tblptru,c
  7498  008DF2  0E00               	movlw	low (__mediumconst shr (0+16))
  7499  008DF4  22F8               	addwfc	tblptru,f,c
  7500  008DF6                     	endif
  7501  008DF6  0008               	tblrd		*
  7502  008DF8  CFF5 F020          	movff	tablat,printf@c
  7503                           
  7504                           ;doprnt.c: 1517: }
  7505                           ;doprnt.c: 1519: break;
  7506  008DFC  D005               	goto	l11652
  7507  008DFE                     l11650:
  7508  008DFE  501B               	movf	printf@flag,w,c
  7509  008E00  0B80               	andlw	128
  7510                           
  7511                           ; Switch size 1, requested type "speed"
  7512                           ; Number of cases is 2, Range of values is 0 to 128
  7513                           ; switch strategies available:
  7514                           ; Name         Instructions Cycles
  7515                           ; simple_byte            7     4 (average)
  7516                           ;	Chosen strategy is simple_byte
  7517  008E02  E0B0               	bz	l11642
  7518  008E04  0A80               	xorlw	128	; case 128
  7519  008E06  E0D2               	bz	l11644
  7520  008E08                     l11652:
  7521                           
  7522                           ;doprnt.c: 1533: (putch(c) );
  7523  008E08  5020               	movf	printf@c,w,c
  7524  008E0A  EC26  F01F         	call	_putch
  7525  008E0E                     l11654:
  7526  008E0E  0618               	decf	printf@prec,f,c
  7527  008E10  2818               	incf	printf@prec& (0+255),w,c
  7528  008E12  E1F5               	bnz	l11650
  7529  008E14                     l11656:
  7530  008E14  C00D  FFF6         	movff	printf@f,tblptrl
  7531  008E18  C00E  FFF7         	movff	printf@f+1,tblptrh
  7532  008E1C  4A0D               	infsnz	printf@f,f,c
  7533  008E1E  2A0E               	incf	printf@f+1,f,c
  7534  008E20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7535  008E20  6AF8               	clrf	tblptru,c
  7536  008E22                     	endif
  7537  008E22                     	if	0	;tblptru may be non-zero
  7538  008E22                     	endif
  7539  008E22  0008               	tblrd		*
  7540  008E24  CFF5 F020          	movff	tablat,printf@c
  7541  008E28  6620               	tstfsz	printf@c& (0+255),c
  7542  008E2A  D6C8               	goto	l11564
  7543  008E2C                     l2248:
  7544  008E2C  0012               	return	
  7545  008E2E                     __end_of_printf:
  7546                           	opt stack 0
  7547                           tosu	equ	0xFFF
  7548                           tosh	equ	0xFFE
  7549                           tosl	equ	0xFFD
  7550                           pclath	equ	0xFFA
  7551                           tblptru	equ	0xFF8
  7552                           tblptrh	equ	0xFF7
  7553                           tblptrl	equ	0xFF6
  7554                           tablat	equ	0xFF5
  7555                           prodh	equ	0xFF4
  7556                           prodl	equ	0xFF3
  7557                           indf0	equ	0xFEF
  7558                           postinc0	equ	0xFEE
  7559                           fsr0h	equ	0xFEA
  7560                           fsr0l	equ	0xFE9
  7561                           wreg	equ	0xFE8
  7562                           indf1	equ	0xFE7
  7563                           postdec1	equ	0xFE5
  7564                           fsr1h	equ	0xFE2
  7565                           fsr1l	equ	0xFE1
  7566                           indf2	equ	0xFDF
  7567                           postinc2	equ	0xFDE
  7568                           postdec2	equ	0xFDD
  7569                           fsr2h	equ	0xFDA
  7570                           fsr2l	equ	0xFD9
  7571                           status	equ	0xFD8
  7572                           
  7573 ;; *************** function _putch *****************
  7574 ;; Defined at:
  7575 ;;		line 754 in file "main.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;  byte            1    wreg     unsigned char 
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;  byte            1    2[COMRAM] unsigned char 
  7580 ;; Return value:  Size  Location     Type
  7581 ;;		None               void
  7582 ;; Registers used:
  7583 ;;		wreg, status,2, status,0, cstack
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7593 ;;Total ram usage:        1 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; Hardware stack levels required when called:    2
  7596 ;; This function calls:
  7597 ;;		_Write
  7598 ;; This function is called by:
  7599 ;;		_printf
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text9
  7604  003E4C                     __ptext9:
  7605                           	opt stack 0
  7606  003E4C                     _putch:
  7607                           	opt stack 26
  7608                           
  7609                           ;incstack = 0
  7610                           ;putch@byte stored from wreg
  7611  003E4C  6E03               	movwf	putch@byte,c
  7612                           
  7613                           ;main.c: 756: Write(byte);
  7614  003E4E  5003               	movf	putch@byte,w,c
  7615  003E50  EF05  F020         	goto	_Write
  7616  003E54                     __end_of_putch:
  7617                           	opt stack 0
  7618                           tosu	equ	0xFFF
  7619                           tosh	equ	0xFFE
  7620                           tosl	equ	0xFFD
  7621                           pclath	equ	0xFFA
  7622                           tblptru	equ	0xFF8
  7623                           tblptrh	equ	0xFF7
  7624                           tblptrl	equ	0xFF6
  7625                           tablat	equ	0xFF5
  7626                           prodh	equ	0xFF4
  7627                           prodl	equ	0xFF3
  7628                           indf0	equ	0xFEF
  7629                           postinc0	equ	0xFEE
  7630                           fsr0h	equ	0xFEA
  7631                           fsr0l	equ	0xFE9
  7632                           wreg	equ	0xFE8
  7633                           indf1	equ	0xFE7
  7634                           postdec1	equ	0xFE5
  7635                           fsr1h	equ	0xFE2
  7636                           fsr1l	equ	0xFE1
  7637                           indf2	equ	0xFDF
  7638                           postinc2	equ	0xFDE
  7639                           postdec2	equ	0xFDD
  7640                           fsr2h	equ	0xFDA
  7641                           fsr2l	equ	0xFD9
  7642                           status	equ	0xFD8
  7643                           
  7644 ;; *************** function ___lwmod *****************
  7645 ;; Defined at:
  7646 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;  dividend        2    7[COMRAM] unsigned int 
  7649 ;;  divisor         2    9[COMRAM] unsigned int 
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;  counter         1   11[COMRAM] unsigned char 
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  2    7[COMRAM] unsigned int 
  7654 ;; Registers used:
  7655 ;;		wreg, status,2, status,0
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7664 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7665 ;;Total ram usage:        5 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; This function calls:
  7668 ;;		Nothing
  7669 ;; This function is called by:
  7670 ;;		_printf
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           	psect	text10
  7675  004206                     __ptext10:
  7676                           	opt stack 0
  7677  004206                     ___lwmod:
  7678                           	opt stack 28
  7679                           
  7680                           ;incstack = 0
  7681  004206  500B               	movf	___lwmod@divisor+1,w,c
  7682  004208  100A               	iorwf	___lwmod@divisor,w,c
  7683  00420A  E017               	bz	l2852
  7684  00420C  0E01               	movlw	1
  7685  00420E  6E0C               	movwf	___lwmod@counter,c
  7686  004210  D004               	goto	l11552
  7687  004212                     l11550:
  7688  004212  90D8               	bcf	status,0,c
  7689  004214  360A               	rlcf	___lwmod@divisor,f,c
  7690  004216  360B               	rlcf	___lwmod@divisor+1,f,c
  7691  004218  2A0C               	incf	___lwmod@counter,f,c
  7692  00421A                     l11552:
  7693  00421A  AE0B               	btfss	___lwmod@divisor+1,7,c
  7694  00421C  D7FA               	goto	l11550
  7695  00421E                     l11554:
  7696  00421E  500A               	movf	___lwmod@divisor,w,c
  7697  004220  5C08               	subwf	___lwmod@dividend,w,c
  7698  004222  500B               	movf	___lwmod@divisor+1,w,c
  7699  004224  5809               	subwfb	___lwmod@dividend+1,w,c
  7700  004226  E304               	bnc	l11558
  7701  004228  500A               	movf	___lwmod@divisor,w,c
  7702  00422A  5E08               	subwf	___lwmod@dividend,f,c
  7703  00422C  500B               	movf	___lwmod@divisor+1,w,c
  7704  00422E  5A09               	subwfb	___lwmod@dividend+1,f,c
  7705  004230                     l11558:
  7706  004230  90D8               	bcf	status,0,c
  7707  004232  320B               	rrcf	___lwmod@divisor+1,f,c
  7708  004234  320A               	rrcf	___lwmod@divisor,f,c
  7709  004236  2E0C               	decfsz	___lwmod@counter,f,c
  7710  004238  D7F2               	goto	l11554
  7711  00423A                     l2852:
  7712  00423A  C008  F008         	movff	___lwmod@dividend,?___lwmod
  7713  00423E  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  7714  004242  0012               	return	
  7715  004244                     __end_of___lwmod:
  7716                           	opt stack 0
  7717                           tosu	equ	0xFFF
  7718                           tosh	equ	0xFFE
  7719                           tosl	equ	0xFFD
  7720                           pclath	equ	0xFFA
  7721                           tblptru	equ	0xFF8
  7722                           tblptrh	equ	0xFF7
  7723                           tblptrl	equ	0xFF6
  7724                           tablat	equ	0xFF5
  7725                           prodh	equ	0xFF4
  7726                           prodl	equ	0xFF3
  7727                           indf0	equ	0xFEF
  7728                           postinc0	equ	0xFEE
  7729                           fsr0h	equ	0xFEA
  7730                           fsr0l	equ	0xFE9
  7731                           wreg	equ	0xFE8
  7732                           indf1	equ	0xFE7
  7733                           postdec1	equ	0xFE5
  7734                           fsr1h	equ	0xFE2
  7735                           fsr1l	equ	0xFE1
  7736                           indf2	equ	0xFDF
  7737                           postinc2	equ	0xFDE
  7738                           postdec2	equ	0xFDD
  7739                           fsr2h	equ	0xFDA
  7740                           fsr2l	equ	0xFD9
  7741                           status	equ	0xFD8
  7742                           
  7743 ;; *************** function ___lwdiv *****************
  7744 ;; Defined at:
  7745 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;  dividend        2    0[COMRAM] unsigned int 
  7748 ;;  divisor         2    2[COMRAM] unsigned int 
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;  quotient        2    4[COMRAM] unsigned int 
  7751 ;;  counter         1    6[COMRAM] unsigned char 
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  2    0[COMRAM] unsigned int 
  7754 ;; Registers used:
  7755 ;;		wreg, status,2, status,0
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7762 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7764 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7765 ;;Total ram usage:        7 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; This function calls:
  7768 ;;		Nothing
  7769 ;; This function is called by:
  7770 ;;		_fatfs_init
  7771 ;;		_printf
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text11
  7776  004356                     __ptext11:
  7777                           	opt stack 0
  7778  004356                     ___lwdiv:
  7779                           	opt stack 28
  7780                           
  7781                           ;incstack = 0
  7782  004356  6A06               	clrf	___lwdiv@quotient+1,c
  7783  004358  6A05               	clrf	___lwdiv@quotient,c
  7784  00435A  5004               	movf	___lwdiv@divisor+1,w,c
  7785  00435C  1003               	iorwf	___lwdiv@divisor,w,c
  7786  00435E  E01B               	bz	l2842
  7787  004360  0E01               	movlw	1
  7788  004362  6E07               	movwf	___lwdiv@counter,c
  7789  004364  D004               	goto	l11532
  7790  004366                     l11530:
  7791  004366  90D8               	bcf	status,0,c
  7792  004368  3603               	rlcf	___lwdiv@divisor,f,c
  7793  00436A  3604               	rlcf	___lwdiv@divisor+1,f,c
  7794  00436C  2A07               	incf	___lwdiv@counter,f,c
  7795  00436E                     l11532:
  7796  00436E  AE04               	btfss	___lwdiv@divisor+1,7,c
  7797  004370  D7FA               	goto	l11530
  7798  004372                     l11534:
  7799  004372  90D8               	bcf	status,0,c
  7800  004374  3605               	rlcf	___lwdiv@quotient,f,c
  7801  004376  3606               	rlcf	___lwdiv@quotient+1,f,c
  7802  004378  5003               	movf	___lwdiv@divisor,w,c
  7803  00437A  5C01               	subwf	___lwdiv@dividend,w,c
  7804  00437C  5004               	movf	___lwdiv@divisor+1,w,c
  7805  00437E  5802               	subwfb	___lwdiv@dividend+1,w,c
  7806  004380  E305               	bnc	l11542
  7807  004382  5003               	movf	___lwdiv@divisor,w,c
  7808  004384  5E01               	subwf	___lwdiv@dividend,f,c
  7809  004386  5004               	movf	___lwdiv@divisor+1,w,c
  7810  004388  5A02               	subwfb	___lwdiv@dividend+1,f,c
  7811  00438A  8005               	bsf	___lwdiv@quotient,0,c
  7812  00438C                     l11542:
  7813  00438C  90D8               	bcf	status,0,c
  7814  00438E  3204               	rrcf	___lwdiv@divisor+1,f,c
  7815  004390  3203               	rrcf	___lwdiv@divisor,f,c
  7816  004392  2E07               	decfsz	___lwdiv@counter,f,c
  7817  004394  D7EE               	goto	l11534
  7818  004396                     l2842:
  7819  004396  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  7820  00439A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7821  00439E  0012               	return	
  7822  0043A0                     __end_of___lwdiv:
  7823                           	opt stack 0
  7824                           tosu	equ	0xFFF
  7825                           tosh	equ	0xFFE
  7826                           tosl	equ	0xFFD
  7827                           pclath	equ	0xFFA
  7828                           tblptru	equ	0xFF8
  7829                           tblptrh	equ	0xFF7
  7830                           tblptrl	equ	0xFF6
  7831                           tablat	equ	0xFF5
  7832                           prodh	equ	0xFF4
  7833                           prodl	equ	0xFF3
  7834                           indf0	equ	0xFEF
  7835                           postinc0	equ	0xFEE
  7836                           fsr0h	equ	0xFEA
  7837                           fsr0l	equ	0xFE9
  7838                           wreg	equ	0xFE8
  7839                           indf1	equ	0xFE7
  7840                           postdec1	equ	0xFE5
  7841                           fsr1h	equ	0xFE2
  7842                           fsr1l	equ	0xFE1
  7843                           indf2	equ	0xFDF
  7844                           postinc2	equ	0xFDE
  7845                           postdec2	equ	0xFDD
  7846                           fsr2h	equ	0xFDA
  7847                           fsr2l	equ	0xFD9
  7848                           status	equ	0xFD8
  7849                           
  7850 ;; *************** function _fl_readdir *****************
  7851 ;; Defined at:
  7852 ;;		line 1544 in file "fat_filelib.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  dirls           2   58[BANK0 ] PTR struct fs_dir_list_s
  7855 ;;		 -> fl_listdirectory@dirstat(9), 
  7856 ;;  entry           2   60[BANK0 ] PTR struct fs_dir_ent
  7857 ;;		 -> fl_listdirectory@dirent(19), 
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;  res             2   62[BANK0 ] int 
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  2   58[BANK0 ] int 
  7862 ;; Registers used:
  7863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7869 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7870 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7872 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7873 ;;Total ram usage:        6 bytes
  7874 ;; Hardware stack levels used:    1
  7875 ;; Hardware stack levels required when called:    8
  7876 ;; This function calls:
  7877 ;;		_fatfs_list_directory_next
  7878 ;;		_fl_init
  7879 ;; This function is called by:
  7880 ;;		_fl_listdirectory
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text12
  7885  0043EE                     __ptext12:
  7886                           	opt stack 0
  7887  0043EE                     _fl_readdir:
  7888                           	opt stack 21
  7889                           
  7890                           ;fat_filelib.c: 1546: int res = 0;
  7891                           
  7892                           ;incstack = 0
  7893  0043EE  0100               	movlb	0	; () banked
  7894  0043F0  6BBF               	clrf	(fl_readdir@res+1)& (0+255),b
  7895  0043F2  6BBE               	clrf	fl_readdir@res& (0+255),b
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;fat_filelib.c: 1549: { if (_filelib_init==0) fl_init(); };
  7899  0043F4  0101               	movlb	1	; () banked
  7900  0043F6  5192               	movf	(__filelib_init+1)& (0+255),w,b
  7901  0043F8  1191               	iorwf	__filelib_init& (0+255),w,b
  7902  0043FA  B4D8               	btfsc	status,2,c
  7903                           
  7904                           ; BSR set to: 1
  7905  0043FC  EC3A  F029         	call	_fl_init	;wreg free
  7906                           
  7907                           ;fat_filelib.c: 1553: res = fatfs_list_directory_next(&_fs, dirls, entry);
  7908                           
  7909                           ;fat_filelib.c: 1551: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
  7910  004400  0E09               	movlw	high __fs
  7911  004402  0100               	movlb	0	; () banked
  7912  004404  6FAD               	movwf	(fatfs_list_directory_next@fs+1)& (0+255),b
  7913  004406  0E78               	movlw	low __fs
  7914  004408  6FAC               	movwf	fatfs_list_directory_next@fs& (0+255),b
  7915  00440A  C0BB  F0AF         	movff	fl_readdir@dirls+1,fatfs_list_directory_next@dirls+1
  7916  00440E  C0BA  F0AE         	movff	fl_readdir@dirls,fatfs_list_directory_next@dirls
  7917  004412  C0BD  F0B1         	movff	fl_readdir@entry+1,fatfs_list_directory_next@entry+1
  7918  004416  C0BC  F0B0         	movff	fl_readdir@entry,fatfs_list_directory_next@entry
  7919  00441A  EC48  F058         	call	_fatfs_list_directory_next	;wreg free
  7920  00441E  C0AC  F0BE         	movff	?_fatfs_list_directory_next,fl_readdir@res
  7921  004422  C0AD  F0BF         	movff	?_fatfs_list_directory_next+1,fl_readdir@res+1
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;fat_filelib.c: 1557: return res ? 0 : -1;
  7925                           
  7926                           ; BSR set to: 0
  7927                           
  7928                           ; BSR set to: 0
  7929                           
  7930                           ; BSR set to: 0
  7931                           
  7932                           ; BSR set to: 0
  7933                           
  7934                           ;fat_filelib.c: 1555: do { if ((&_fs)->fl_unlock) (&_fs)->fl_unlock(); } while (0);
  7935  004426  0100               	movlb	0	; () banked
  7936  004428  51BF               	movf	(fl_readdir@res+1)& (0+255),w,b
  7937  00442A  11BE               	iorwf	fl_readdir@res& (0+255),w,b
  7938  00442C  E103               	bnz	l12070
  7939                           
  7940                           ; BSR set to: 0
  7941  00442E  69BA               	setf	?_fl_readdir& (0+255),b
  7942  004430  69BB               	setf	(?_fl_readdir+1)& (0+255),b
  7943  004432  D004               	goto	l821
  7944  004434                     l12070:
  7945                           
  7946                           ; BSR set to: 0
  7947  004434  0E00               	movlw	0
  7948  004436  0100               	movlb	0	; () banked
  7949  004438  6FBB               	movwf	(?_fl_readdir+1)& (0+255),b
  7950  00443A  6FBA               	movwf	?_fl_readdir& (0+255),b
  7951  00443C                     l821:
  7952                           
  7953                           ; BSR set to: 0
  7954  00443C  0012               	return	
  7955  00443E                     __end_of_fl_readdir:
  7956                           	opt stack 0
  7957                           tosu	equ	0xFFF
  7958                           tosh	equ	0xFFE
  7959                           tosl	equ	0xFFD
  7960                           pclath	equ	0xFFA
  7961                           tblptru	equ	0xFF8
  7962                           tblptrh	equ	0xFF7
  7963                           tblptrl	equ	0xFF6
  7964                           tablat	equ	0xFF5
  7965                           prodh	equ	0xFF4
  7966                           prodl	equ	0xFF3
  7967                           indf0	equ	0xFEF
  7968                           postinc0	equ	0xFEE
  7969                           fsr0h	equ	0xFEA
  7970                           fsr0l	equ	0xFE9
  7971                           wreg	equ	0xFE8
  7972                           indf1	equ	0xFE7
  7973                           postdec1	equ	0xFE5
  7974                           fsr1h	equ	0xFE2
  7975                           fsr1l	equ	0xFE1
  7976                           indf2	equ	0xFDF
  7977                           postinc2	equ	0xFDE
  7978                           postdec2	equ	0xFDD
  7979                           fsr2h	equ	0xFDA
  7980                           fsr2l	equ	0xFD9
  7981                           status	equ	0xFD8
  7982                           
  7983 ;; *************** function _fatfs_list_directory_next *****************
  7984 ;; Defined at:
  7985 ;;		line 767 in file "fat_access.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;  fs              2   44[BANK0 ] PTR struct fatfs
  7988 ;;		 -> _fs(1095), 
  7989 ;;  dirls           2   46[BANK0 ] PTR struct fs_dir_list_s
  7990 ;;		 -> fl_listdirectory@dirstat(9), 
  7991 ;;  entry           2   48[BANK0 ] PTR struct fs_dir_ent
  7992 ;;		 -> fl_listdirectory@dirent(19), 
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;  lfn            52   23[BANK1 ] struct lfn_cache
  7995 ;;  short_filena   13    0[BANK1 ] unsigned char [13]
  7996 ;;  directoryEnt    2   75[BANK1 ] PTR struct fat_dir_entry
  7997 ;;		 -> _fs.currentsector.sector(512), 
  7998 ;;  recordoffset    2   19[BANK1 ] unsigned short 
  7999 ;;  result          2   17[BANK1 ] int 
  8000 ;;  dotRequired     2   15[BANK1 ] int 
  8001 ;;  long_filenam    2   13[BANK1 ] PTR unsigned char 
  8002 ;;		 -> lfn.String(50), lfn.String(50), fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
  8003 ;;		 -> NULL(0), 
  8004 ;;  i               1   22[BANK1 ] unsigned char 
  8005 ;;  item            1   21[BANK1 ] unsigned char 
  8006 ;; Return value:  Size  Location     Type
  8007 ;;                  2   44[BANK0 ] int 
  8008 ;; Registers used:
  8009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8010 ;; Tracked objects:
  8011 ;;		On entry : 0/0
  8012 ;;		On exit  : 0/0
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8015 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8016 ;;      Locals:         0       0      77       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8017 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8018 ;;      Totals:         0      14      77       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8019 ;;Total ram usage:       91 bytes
  8020 ;; Hardware stack levels used:    1
  8021 ;; Hardware stack levels required when called:    7
  8022 ;; This function calls:
  8023 ;;		_fatfs_entry_is_dir
  8024 ;;		_fatfs_entry_lfn_exists
  8025 ;;		_fatfs_entry_lfn_invalid
  8026 ;;		_fatfs_entry_lfn_text
  8027 ;;		_fatfs_entry_sfn_only
  8028 ;;		_fatfs_get_sfn_display_name
  8029 ;;		_fatfs_lfn_cache_entry
  8030 ;;		_fatfs_lfn_cache_get
  8031 ;;		_fatfs_lfn_cache_init
  8032 ;;		_fatfs_sector_reader
  8033 ;;		_memset
  8034 ;;		_strncpy
  8035 ;; This function is called by:
  8036 ;;		_fl_readdir
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text13
  8041  00B090                     __ptext13:
  8042                           	opt stack 0
  8043  00B090                     _fatfs_list_directory_next:
  8044                           	opt stack 21
  8045                           
  8046                           ;fat_access.c: 769: uint8 i,item;
  8047                           ;fat_access.c: 770: uint16 recordoffset;
  8048                           ;fat_access.c: 771: struct fat_dir_entry *directoryEntry;
  8049                           ;fat_access.c: 772: char *long_filename = (0);
  8050                           
  8051                           ; BSR set to: 0
  8052                           ;incstack = 0
  8053  00B090  0101               	movlb	1	; () banked
  8054  00B092  6B0E               	clrf	(fatfs_list_directory_next@long_filename+1)& (0+255),b
  8055  00B094  6B0D               	clrf	fatfs_list_directory_next@long_filename& (0+255),b
  8056                           
  8057                           ; BSR set to: 1
  8058                           ;fat_access.c: 773: char short_filename[13];
  8059                           ;fat_access.c: 774: struct lfn_cache lfn;
  8060                           ;fat_access.c: 775: int dotRequired = 0;
  8061  00B096  6B10               	clrf	(fatfs_list_directory_next@dotRequired+1)& (0+255),b
  8062  00B098  6B0F               	clrf	fatfs_list_directory_next@dotRequired& (0+255),b
  8063                           
  8064                           ; BSR set to: 1
  8065                           ;fat_access.c: 776: int result = 0;
  8066  00B09A  6B12               	clrf	(fatfs_list_directory_next@result+1)& (0+255),b
  8067  00B09C  6B11               	clrf	fatfs_list_directory_next@result& (0+255),b
  8068                           
  8069                           ; BSR set to: 1
  8070                           ;fat_access.c: 779: fatfs_lfn_cache_init(&lfn, 0);
  8071  00B09E  0E01               	movlw	high fatfs_list_directory_next@lfn
  8072  00B0A0  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
  8073  00B0A2  0E17               	movlw	low fatfs_list_directory_next@lfn
  8074  00B0A4  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
  8075  00B0A6  0E00               	movlw	0
  8076  00B0A8  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
  8077  00B0AA  6A0B               	clrf	fatfs_lfn_cache_init@wipeTable,c
  8078  00B0AC  EC75  F023         	call	_fatfs_lfn_cache_init	;wreg free
  8079  00B0B0                     l11134:
  8080                           
  8081                           ;fat_access.c: 782: {
  8082                           ;fat_access.c: 784: if (fatfs_sector_reader(fs, dirls->cluster, dirls->sector, 0))
  8083  00B0B0  C0AD  F081         	movff	fatfs_list_directory_next@fs+1,fatfs_sector_reader@fs+1
  8084  00B0B4  C0AC  F080         	movff	fatfs_list_directory_next@fs,fatfs_sector_reader@fs
  8085  00B0B8  EE20 F004          	lfsr	2,4
  8086  00B0BC  0100               	movlb	0	; () banked
  8087  00B0BE  51AE               	movf	fatfs_list_directory_next@dirls& (0+255),w,b
  8088  00B0C0  26D9               	addwf	fsr2l,f,c
  8089  00B0C2  51AF               	movf	(fatfs_list_directory_next@dirls+1)& (0+255),w,b
  8090  00B0C4  22DA               	addwfc	fsr2h,f,c
  8091  00B0C6  CFDE F082          	movff	postinc2,fatfs_sector_reader@start_cluster
  8092  00B0CA  CFDE F083          	movff	postinc2,fatfs_sector_reader@start_cluster+1
  8093  00B0CE  CFDE F084          	movff	postinc2,fatfs_sector_reader@start_cluster+2
  8094  00B0D2  CFDE F085          	movff	postinc2,fatfs_sector_reader@start_cluster+3
  8095  00B0D6  C0AE  FFD9         	movff	fatfs_list_directory_next@dirls,fsr2l
  8096  00B0DA  C0AF  FFDA         	movff	fatfs_list_directory_next@dirls+1,fsr2h
  8097  00B0DE  CFDE F086          	movff	postinc2,fatfs_sector_reader@offset
  8098  00B0E2  CFDE F087          	movff	postinc2,fatfs_sector_reader@offset+1
  8099  00B0E6  CFDE F088          	movff	postinc2,fatfs_sector_reader@offset+2
  8100  00B0EA  CFDE F089          	movff	postinc2,fatfs_sector_reader@offset+3
  8101  00B0EE  0E00               	movlw	0
  8102  00B0F0  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
  8103  00B0F2  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
  8104  00B0F4  ECD5  F052         	call	_fatfs_sector_reader	;wreg free
  8105  00B0F8  0100               	movlb	0	; () banked
  8106  00B0FA  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
  8107  00B0FC  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
  8108  00B0FE  E101 D19F          	bz	l241
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;fat_access.c: 785: {
  8112                           ;fat_access.c: 787: for (item = dirls->offset; item < (512 / 32); item++)
  8113  00B102  EE20 F008          	lfsr	2,8
  8114  00B106  51AE               	movf	fatfs_list_directory_next@dirls& (0+255),w,b
  8115  00B108  26D9               	addwf	fsr2l,f,c
  8116  00B10A  51AF               	movf	(fatfs_list_directory_next@dirls+1)& (0+255),w,b
  8117  00B10C  22DA               	addwfc	fsr2h,f,c
  8118  00B10E  50DF               	movf	indf2,w,c
  8119  00B110  0101               	movlb	1	; () banked
  8120  00B112  6F15               	movwf	fatfs_list_directory_next@item& (0+255),b
  8121  00B114  D17F               	goto	L19
  8122  00B116                     l11142:
  8123                           
  8124                           ; BSR set to: 1
  8125                           ;fat_access.c: 788: {
  8126                           ;fat_access.c: 790: recordoffset = 32 * item;
  8127  00B116  0101               	movlb	1	; () banked
  8128  00B118  5115               	movf	fatfs_list_directory_next@item& (0+255),w,b
  8129  00B11A  0D20               	mullw	32
  8130  00B11C  CFF3 F113          	movff	prodl,fatfs_list_directory_next@recordoffset
  8131  00B120  CFF4 F114          	movff	prodh,fatfs_list_directory_next@recordoffset+1
  8132                           
  8133                           ; BSR set to: 1
  8134                           ;fat_access.c: 793: directoryEntry = (struct fat_dir_entry*)(fs->currentsector.sector+re
      +                          cordoffset);
  8135  00B124  C0AC  F0B2         	movff	fatfs_list_directory_next@fs,??_fatfs_list_directory_next
  8136  00B128  C0AD  F0B3         	movff	fatfs_list_directory_next@fs+1,??_fatfs_list_directory_next+1
  8137  00B12C  5113               	movf	fatfs_list_directory_next@recordoffset& (0+255),w,b
  8138  00B12E  0100               	movlb	0	; () banked
  8139  00B130  27B2               	addwf	??_fatfs_list_directory_next& (0+255),f,b
  8140  00B132  0101               	movlb	1	; () banked
  8141  00B134  5114               	movf	(fatfs_list_directory_next@recordoffset+1)& (0+255),w,b
  8142  00B136  0100               	movlb	0	; () banked
  8143  00B138  23B3               	addwfc	(??_fatfs_list_directory_next+1)& (0+255),f,b
  8144  00B13A  0E31               	movlw	49
  8145  00B13C  25B2               	addwf	??_fatfs_list_directory_next& (0+255),w,b
  8146  00B13E  0101               	movlb	1	; () banked
  8147  00B140  6F4B               	movwf	fatfs_list_directory_next@directoryEntry& (0+255),b
  8148  00B142  0E00               	movlw	0
  8149  00B144  0100               	movlb	0	; () banked
  8150  00B146  21B3               	addwfc	(??_fatfs_list_directory_next+1)& (0+255),w,b
  8151  00B148  0101               	movlb	1	; () banked
  8152  00B14A  6F4C               	movwf	(fatfs_list_directory_next@directoryEntry+1)& (0+255),b
  8153                           
  8154                           ; BSR set to: 1
  8155                           ;fat_access.c: 797: if ( fatfs_entry_lfn_text(directoryEntry) )
  8156  00B14C  C14C  F002         	movff	fatfs_list_directory_next@directoryEntry+1,fatfs_entry_lfn_text@entry+1
  8157  00B150  C14B  F001         	movff	fatfs_list_directory_next@directoryEntry,fatfs_entry_lfn_text@entry
  8158  00B154  ECF0  F01F         	call	_fatfs_entry_lfn_text	;wreg free
  8159  00B158  5002               	movf	?_fatfs_entry_lfn_text+1,w,c
  8160  00B15A  1001               	iorwf	?_fatfs_entry_lfn_text,w,c
  8161  00B15C  E019               	bz	l11150
  8162                           
  8163                           ;fat_access.c: 798: fatfs_lfn_cache_entry(&lfn, fs->currentsector.sector+recordoffset);
  8164  00B15E  0E01               	movlw	high fatfs_list_directory_next@lfn
  8165  00B160  6E02               	movwf	fatfs_lfn_cache_entry@lfn+1,c
  8166  00B162  0E17               	movlw	low fatfs_list_directory_next@lfn
  8167  00B164  6E01               	movwf	fatfs_lfn_cache_entry@lfn,c
  8168  00B166  C0AC  F0B2         	movff	fatfs_list_directory_next@fs,??_fatfs_list_directory_next
  8169  00B16A  C0AD  F0B3         	movff	fatfs_list_directory_next@fs+1,??_fatfs_list_directory_next+1
  8170  00B16E  0101               	movlb	1	; () banked
  8171  00B170  5113               	movf	fatfs_list_directory_next@recordoffset& (0+255),w,b
  8172  00B172  0100               	movlb	0	; () banked
  8173  00B174  27B2               	addwf	??_fatfs_list_directory_next& (0+255),f,b
  8174  00B176  0101               	movlb	1	; () banked
  8175  00B178  5114               	movf	(fatfs_list_directory_next@recordoffset+1)& (0+255),w,b
  8176  00B17A  0100               	movlb	0	; () banked
  8177  00B17C  23B3               	addwfc	(??_fatfs_list_directory_next+1)& (0+255),f,b
  8178  00B17E  0E31               	movlw	49
  8179  00B180  25B2               	addwf	??_fatfs_list_directory_next& (0+255),w,b
  8180  00B182  6E03               	movwf	fatfs_lfn_cache_entry@entryBuffer,c
  8181  00B184  0E00               	movlw	0
  8182  00B186  21B3               	addwfc	(??_fatfs_list_directory_next+1)& (0+255),w,b
  8183  00B188  6E04               	movwf	fatfs_lfn_cache_entry@entryBuffer+1,c
  8184  00B18A  EC9C  F067         	call	_fatfs_lfn_cache_entry	;wreg free
  8185  00B18E  D140               	goto	l11244
  8186  00B190                     l11150:
  8187                           
  8188                           ;fat_access.c: 801: else if ( fatfs_entry_lfn_invalid(directoryEntry) )
  8189  00B190  C14C  F002         	movff	fatfs_list_directory_next@directoryEntry+1,fatfs_entry_lfn_invalid@entry+1
  8190  00B194  0101               	movlb	1	; () banked
  8191  00B196  C14B  F001         	movff	fatfs_list_directory_next@directoryEntry,fatfs_entry_lfn_invalid@entry
  8192  00B19A  EC9A  F022         	call	_fatfs_entry_lfn_invalid	;wreg free
  8193  00B19E  5002               	movf	?_fatfs_entry_lfn_invalid+1,w,c
  8194  00B1A0  1001               	iorwf	?_fatfs_entry_lfn_invalid,w,c
  8195  00B1A2  E00B               	bz	l11154
  8196                           
  8197                           ;fat_access.c: 802: fatfs_lfn_cache_init(&lfn, 0);
  8198  00B1A4  0E01               	movlw	high fatfs_list_directory_next@lfn
  8199  00B1A6  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
  8200  00B1A8  0101               	movlb	1	; () banked
  8201  00B1AA  0E17               	movlw	low fatfs_list_directory_next@lfn
  8202  00B1AC  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
  8203  00B1AE  0E00               	movlw	0
  8204  00B1B0  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
  8205  00B1B2  6A0B               	clrf	fatfs_lfn_cache_init@wipeTable,c
  8206  00B1B4  EC75  F023         	call	_fatfs_lfn_cache_init	;wreg free
  8207  00B1B8  D12B               	goto	l11244
  8208  00B1BA                     l11154:
  8209                           
  8210                           ;fat_access.c: 805: else if (fatfs_entry_lfn_exists(&lfn, directoryEntry) )
  8211  00B1BA  0E01               	movlw	high fatfs_list_directory_next@lfn
  8212  00B1BC  6E02               	movwf	fatfs_entry_lfn_exists@lfn+1,c
  8213  00B1BE  0E17               	movlw	low fatfs_list_directory_next@lfn
  8214  00B1C0  6E01               	movwf	fatfs_entry_lfn_exists@lfn,c
  8215  00B1C2  C14C  F004         	movff	fatfs_list_directory_next@directoryEntry+1,fatfs_entry_lfn_exists@entry+1
  8216  00B1C6  0101               	movlb	1	; () banked
  8217  00B1C8  C14B  F003         	movff	fatfs_list_directory_next@directoryEntry,fatfs_entry_lfn_exists@entry
  8218  00B1CC  EC41  F026         	call	_fatfs_entry_lfn_exists	;wreg free
  8219  00B1D0  5002               	movf	?_fatfs_entry_lfn_exists+1,w,c
  8220  00B1D2  1001               	iorwf	?_fatfs_entry_lfn_exists,w,c
  8221  00B1D4  E02D               	bz	l11180
  8222                           
  8223                           ;fat_access.c: 806: {
  8224                           ;fat_access.c: 808: long_filename = fatfs_lfn_cache_get(&lfn);
  8225  00B1D6  0E01               	movlw	high fatfs_list_directory_next@lfn
  8226  00B1D8  6E02               	movwf	fatfs_lfn_cache_get@lfn+1,c
  8227  00B1DA  0101               	movlb	1	; () banked
  8228  00B1DC  0E17               	movlw	low fatfs_list_directory_next@lfn
  8229  00B1DE  6E01               	movwf	fatfs_lfn_cache_get@lfn,c
  8230  00B1E0  ECF8  F024         	call	_fatfs_lfn_cache_get	;wreg free
  8231  00B1E4  C001  F10D         	movff	?_fatfs_lfn_cache_get,fatfs_list_directory_next@long_filename
  8232  00B1E8  C002  F10E         	movff	?_fatfs_lfn_cache_get+1,fatfs_list_directory_next@long_filename+1
  8233                           
  8234                           ;fat_access.c: 809: strncpy(entry->filename, long_filename, 10-1);
  8235  00B1EC  C0B1  F002         	movff	fatfs_list_directory_next@entry+1,strncpy@to+1
  8236  00B1F0  C0B0  F001         	movff	fatfs_list_directory_next@entry,strncpy@to
  8237  00B1F4  C10E  F004         	movff	fatfs_list_directory_next@long_filename+1,strncpy@from+1
  8238  00B1F8  0101               	movlb	1	; () banked
  8239  00B1FA  C10D  F003         	movff	fatfs_list_directory_next@long_filename,strncpy@from
  8240  00B1FE  6A06               	clrf	strncpy@size+1,c
  8241  00B200  0E09               	movlw	9
  8242  00B202  6E05               	movwf	strncpy@size,c
  8243  00B204  ECED  F022         	call	_strncpy	;wreg free
  8244                           
  8245                           ;fat_access.c: 811: if (fatfs_entry_is_dir(directoryEntry))
  8246  00B208  C14C  F002         	movff	fatfs_list_directory_next@directoryEntry+1,fatfs_entry_is_dir@entry+1
  8247  00B20C  0101               	movlb	1	; () banked
  8248  00B20E  C14B  F001         	movff	fatfs_list_directory_next@directoryEntry,fatfs_entry_is_dir@entry
  8249  00B212  ECA6  F01F         	call	_fatfs_entry_is_dir	;wreg free
  8250  00B216  5002               	movf	?_fatfs_entry_is_dir+1,w,c
  8251  00B218  1001               	iorwf	?_fatfs_entry_is_dir,w,c
  8252  00B21A  E101 D097          	bz	l11230
  8253  00B21E                     
  8254                           ;fat_access.c: 812: entry->is_dir = 1;
  8255  00B21E  EE20 F00A          	lfsr	2,10
  8256  00B222  0100               	movlb	0	; () banked
  8257  00B224  51B0               	movf	fatfs_list_directory_next@entry& (0+255),w,b
  8258  00B226  26D9               	addwf	fsr2l,f,c
  8259  00B228  51B1               	movf	(fatfs_list_directory_next@entry+1)& (0+255),w,b
  8260  00B22A  22DA               	addwfc	fsr2h,f,c
  8261  00B22C  0E01               	movlw	1
  8262  00B22E  D096               	goto	L17
  8263  00B230                     l11180:
  8264                           
  8265                           ;fat_access.c: 834: else
  8266                           ;fat_access.c: 836: if ( fatfs_entry_sfn_only(directoryEntry) )
  8267  00B230  C14C  F002         	movff	fatfs_list_directory_next@directoryEntry+1,fatfs_entry_sfn_only@entry+1
  8268  00B234  0101               	movlb	1	; () banked
  8269  00B236  C14B  F001         	movff	fatfs_list_directory_next@directoryEntry,fatfs_entry_sfn_only@entry
  8270  00B23A  ECC6  F024         	call	_fatfs_entry_sfn_only	;wreg free
  8271  00B23E  5002               	movf	?_fatfs_entry_sfn_only+1,w,c
  8272  00B240  1001               	iorwf	?_fatfs_entry_sfn_only,w,c
  8273  00B242  E101 D0E5          	bz	l11244
  8274                           
  8275                           ;fat_access.c: 837: {
  8276                           ;fat_access.c: 838: fatfs_lfn_cache_init(&lfn, 0);
  8277  00B246  0E01               	movlw	high fatfs_list_directory_next@lfn
  8278  00B248  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
  8279  00B24A  0101               	movlb	1	; () banked
  8280  00B24C  0E17               	movlw	low fatfs_list_directory_next@lfn
  8281  00B24E  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
  8282  00B250  0E00               	movlw	0
  8283  00B252  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
  8284  00B254  6A0B               	clrf	fatfs_lfn_cache_init@wipeTable,c
  8285  00B256  EC75  F023         	call	_fatfs_lfn_cache_init	;wreg free
  8286                           
  8287                           ;fat_access.c: 840: memset(short_filename, 0, sizeof(short_filename));
  8288  00B25A  0E01               	movlw	high fatfs_list_directory_next@short_filename
  8289  00B25C  6E02               	movwf	memset@p1+1,c
  8290  00B25E  0101               	movlb	1	; () banked
  8291  00B260  0E00               	movlw	low fatfs_list_directory_next@short_filename
  8292  00B262  6E01               	movwf	memset@p1,c
  8293  00B264  6A04               	clrf	memset@c+1,c
  8294  00B266  6A03               	clrf	memset@c,c
  8295  00B268  6A06               	clrf	memset@n+1,c
  8296  00B26A  0E0D               	movlw	13
  8297  00B26C  6E05               	movwf	memset@n,c
  8298  00B26E  EC1A  F020         	call	_memset	;wreg free
  8299                           
  8300                           ;fat_access.c: 843: for (i=0; i<8; i++)
  8301  00B272  0101               	movlb	1	; () banked
  8302  00B274  6B16               	clrf	fatfs_list_directory_next@i& (0+255),b
  8303  00B276  D014               	goto	L20
  8304  00B278                     l11192:
  8305                           
  8306                           ; BSR set to: 1
  8307                           ;fat_access.c: 844: short_filename[i] = directoryEntry->Name[i];
  8308  00B278  0101               	movlb	1	; () banked
  8309  00B27A  5116               	movf	fatfs_list_directory_next@i& (0+255),w,b
  8310  00B27C  0D01               	mullw	1
  8311  00B27E  50F3               	movf	prodl,w,c
  8312  00B280  254B               	addwf	fatfs_list_directory_next@directoryEntry& (0+255),w,b
  8313  00B282  6ED9               	movwf	fsr2l,c
  8314  00B284  50F4               	movf	prodh,w,c
  8315  00B286  214C               	addwfc	(fatfs_list_directory_next@directoryEntry+1)& (0+255),w,b
  8316  00B288  6EDA               	movwf	fsr2h,c
  8317  00B28A  5116               	movf	fatfs_list_directory_next@i& (0+255),w,b
  8318  00B28C  0D01               	mullw	1
  8319  00B28E  0E00               	movlw	low fatfs_list_directory_next@short_filename
  8320  00B290  24F3               	addwf	prodl,w,c
  8321  00B292  6EE1               	movwf	fsr1l,c
  8322  00B294  0E01               	movlw	high fatfs_list_directory_next@short_filename
  8323  00B296  20F4               	addwfc	prodh,w,c
  8324  00B298  6EE2               	movwf	fsr1h,c
  8325  00B29A  CFDF FFE7          	movff	indf2,indf1
  8326                           
  8327                           ; BSR set to: 1
  8328  00B29E  2B16               	incf	fatfs_list_directory_next@i& (0+255),f,b
  8329  00B2A0                     L20:
  8330                           
  8331                           ; BSR set to: 1
  8332  00B2A0  0E07               	movlw	7
  8333  00B2A2  0101               	movlb	1	; () banked
  8334  00B2A4  6516               	cpfsgt	fatfs_list_directory_next@i& (0+255),b
  8335  00B2A6  D7E8               	goto	l11192
  8336                           
  8337                           ; BSR set to: 1
  8338                           ;fat_access.c: 847: dotRequired = 0;
  8339                           
  8340                           ; BSR set to: 1
  8341  00B2A8  6B10               	clrf	(fatfs_list_directory_next@dotRequired+1)& (0+255),b
  8342  00B2AA  6B0F               	clrf	fatfs_list_directory_next@dotRequired& (0+255),b
  8343                           
  8344                           ;fat_access.c: 848: for (i=8; i<11; i++)
  8345  00B2AC  0E08               	movlw	8
  8346  00B2AE  6F16               	movwf	fatfs_list_directory_next@i& (0+255),b
  8347  00B2B0  D029               	goto	L21
  8348  00B2B2                     l11204:
  8349                           
  8350                           ; BSR set to: 1
  8351                           ;fat_access.c: 849: {
  8352                           ;fat_access.c: 850: short_filename[i+1] = directoryEntry->Name[i];
  8353  00B2B2  0101               	movlb	1	; () banked
  8354  00B2B4  5116               	movf	fatfs_list_directory_next@i& (0+255),w,b
  8355  00B2B6  0D01               	mullw	1
  8356  00B2B8  50F3               	movf	prodl,w,c
  8357  00B2BA  254B               	addwf	fatfs_list_directory_next@directoryEntry& (0+255),w,b
  8358  00B2BC  6ED9               	movwf	fsr2l,c
  8359  00B2BE  50F4               	movf	prodh,w,c
  8360  00B2C0  214C               	addwfc	(fatfs_list_directory_next@directoryEntry+1)& (0+255),w,b
  8361  00B2C2  6EDA               	movwf	fsr2h,c
  8362  00B2C4  5116               	movf	fatfs_list_directory_next@i& (0+255),w,b
  8363  00B2C6  0100               	movlb	0	; () banked
  8364  00B2C8  6FB2               	movwf	??_fatfs_list_directory_next& (0+255),b
  8365  00B2CA  6BB3               	clrf	(??_fatfs_list_directory_next+1)& (0+255),b
  8366  00B2CC  2BB2               	incf	??_fatfs_list_directory_next& (0+255),f,b
  8367  00B2CE  0E00               	movlw	0
  8368  00B2D0  23B3               	addwfc	(??_fatfs_list_directory_next+1)& (0+255),f,b
  8369  00B2D2  0E00               	movlw	low fatfs_list_directory_next@short_filename
  8370  00B2D4  25B2               	addwf	??_fatfs_list_directory_next& (0+255),w,b
  8371  00B2D6  6EE1               	movwf	fsr1l,c
  8372  00B2D8  0E01               	movlw	high fatfs_list_directory_next@short_filename
  8373  00B2DA  21B3               	addwfc	(??_fatfs_list_directory_next+1)& (0+255),w,b
  8374  00B2DC  6EE2               	movwf	fsr1h,c
  8375  00B2DE  CFDF FFE7          	movff	indf2,indf1
  8376                           
  8377                           ; BSR set to: 0
  8378                           ;fat_access.c: 851: if (directoryEntry->Name[i] != ' ')
  8379  00B2E2  0101               	movlb	1	; () banked
  8380  00B2E4  5116               	movf	fatfs_list_directory_next@i& (0+255),w,b
  8381  00B2E6  0D01               	mullw	1
  8382  00B2E8  50F3               	movf	prodl,w,c
  8383  00B2EA  254B               	addwf	fatfs_list_directory_next@directoryEntry& (0+255),w,b
  8384  00B2EC  6ED9               	movwf	fsr2l,c
  8385  00B2EE  50F4               	movf	prodh,w,c
  8386  00B2F0  214C               	addwfc	(fatfs_list_directory_next@directoryEntry+1)& (0+255),w,b
  8387  00B2F2  6EDA               	movwf	fsr2h,c
  8388  00B2F4  50DF               	movf	indf2,w,c
  8389  00B2F6  0A20               	xorlw	32
  8390  00B2F8  E003               	bz	l11210
  8391                           
  8392                           ; BSR set to: 1
  8393                           ;fat_access.c: 852: dotRequired = 1;
  8394  00B2FA  6B10               	clrf	(fatfs_list_directory_next@dotRequired+1)& (0+255),b
  8395  00B2FC  0E01               	movlw	1
  8396  00B2FE  6F0F               	movwf	fatfs_list_directory_next@dotRequired& (0+255),b
  8397  00B300                     l11210:
  8398                           
  8399                           ; BSR set to: 1
  8400  00B300  0101               	movlb	1	; () banked
  8401  00B302  2B16               	incf	fatfs_list_directory_next@i& (0+255),f,b
  8402  00B304                     L21:
  8403                           
  8404                           ; BSR set to: 1
  8405  00B304  0E0A               	movlw	10
  8406  00B306  0101               	movlb	1	; () banked
  8407  00B308  6516               	cpfsgt	fatfs_list_directory_next@i& (0+255),b
  8408  00B30A  D7D3               	goto	l11204
  8409                           
  8410                           ; BSR set to: 1
  8411                           ;fat_access.c: 853: }
  8412                           ;fat_access.c: 856: if (dotRequired)
  8413                           
  8414                           ; BSR set to: 1
  8415  00B30C  5110               	movf	(fatfs_list_directory_next@dotRequired+1)& (0+255),w,b
  8416  00B30E  110F               	iorwf	fatfs_list_directory_next@dotRequired& (0+255),w,b
  8417  00B310  E005               	bz	l11222
  8418                           
  8419                           ; BSR set to: 1
  8420                           ;fat_access.c: 857: {
  8421                           ;fat_access.c: 859: if (short_filename[0]!='.')
  8422  00B312  5100               	movf	fatfs_list_directory_next@short_filename& (0+255),w,b
  8423  00B314  0A2E               	xorlw	46
  8424  00B316  E002               	bz	l11222
  8425                           
  8426                           ; BSR set to: 1
  8427                           ;fat_access.c: 860: short_filename[8] = '.';
  8428  00B318  0E2E               	movlw	46
  8429  00B31A  D001               	goto	L18
  8430  00B31C                     l11222:
  8431                           
  8432                           ; BSR set to: 1
  8433                           ;fat_access.c: 864: else
  8434                           ;fat_access.c: 865: short_filename[8] = ' ';
  8435  00B31C  0E20               	movlw	32
  8436  00B31E                     L18:
  8437  00B31E  0101               	movlb	1	; () banked
  8438  00B320  6F08               	movwf	(fatfs_list_directory_next@short_filename+8)& (0+255),b
  8439                           
  8440                           ; BSR set to: 1
  8441                           ;fat_access.c: 867: fatfs_get_sfn_display_name(entry->filename, short_filename);
  8442                           
  8443                           ; BSR set to: 1
  8444  00B322  C0B1  F002         	movff	fatfs_list_directory_next@entry+1,fatfs_get_sfn_display_name@out+1
  8445  00B326  C0B0  F001         	movff	fatfs_list_directory_next@entry,fatfs_get_sfn_display_name@out
  8446  00B32A  0E01               	movlw	high fatfs_list_directory_next@short_filename
  8447  00B32C  6E04               	movwf	fatfs_get_sfn_display_name@in+1,c
  8448  00B32E  0E00               	movlw	low fatfs_list_directory_next@short_filename
  8449  00B330  6E03               	movwf	fatfs_get_sfn_display_name@in,c
  8450  00B332  EC2C  F025         	call	_fatfs_get_sfn_display_name	;wreg free
  8451                           
  8452                           ;fat_access.c: 869: if (fatfs_entry_is_dir(directoryEntry))
  8453  00B336  C14C  F002         	movff	fatfs_list_directory_next@directoryEntry+1,fatfs_entry_is_dir@entry+1
  8454  00B33A  0101               	movlb	1	; () banked
  8455  00B33C  C14B  F001         	movff	fatfs_list_directory_next@directoryEntry,fatfs_entry_is_dir@entry
  8456  00B340  ECA6  F01F         	call	_fatfs_entry_is_dir	;wreg free
  8457  00B344  5002               	movf	?_fatfs_entry_is_dir+1,w,c
  8458  00B346  1001               	iorwf	?_fatfs_entry_is_dir,w,c
  8459  00B348  E001 D769          	bnz	L22
  8460  00B34C                     l11230:
  8461                           
  8462                           ;fat_access.c: 871: else
  8463                           ;fat_access.c: 872: entry->is_dir = 0;
  8464  00B34C  EE20 F00A          	lfsr	2,10
  8465  00B350  0100               	movlb	0	; () banked
  8466  00B352  51B0               	movf	fatfs_list_directory_next@entry& (0+255),w,b
  8467  00B354  26D9               	addwf	fsr2l,f,c
  8468  00B356  51B1               	movf	(fatfs_list_directory_next@entry+1)& (0+255),w,b
  8469  00B358  22DA               	addwfc	fsr2h,f,c
  8470  00B35A  0E00               	movlw	0
  8471  00B35C                     L17:
  8472  00B35C  6EDF               	movwf	indf2,c
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;fat_access.c: 883: entry->size = (directoryEntry->FileSize);
  8476                           
  8477                           ; BSR set to: 0
  8478  00B35E  EE20 F01C          	lfsr	2,28
  8479  00B362  0101               	movlb	1	; () banked
  8480  00B364  514B               	movf	fatfs_list_directory_next@directoryEntry& (0+255),w,b
  8481  00B366  26D9               	addwf	fsr2l,f,c
  8482  00B368  514C               	movf	(fatfs_list_directory_next@directoryEntry+1)& (0+255),w,b
  8483  00B36A  22DA               	addwfc	fsr2h,f,c
  8484  00B36C  EE10 F00F          	lfsr	1,15
  8485  00B370  0100               	movlb	0	; () banked
  8486  00B372  51B0               	movf	fatfs_list_directory_next@entry& (0+255),w,b
  8487  00B374  26E1               	addwf	fsr1l,f,c
  8488  00B376  51B1               	movf	(fatfs_list_directory_next@entry+1)& (0+255),w,b
  8489  00B378  22E2               	addwfc	fsr1h,f,c
  8490  00B37A  CFDE FFE6          	movff	postinc2,postinc1
  8491  00B37E  CFDE FFE6          	movff	postinc2,postinc1
  8492  00B382  CFDE FFE6          	movff	postinc2,postinc1
  8493  00B386  CFDD FFE5          	movff	postdec2,postdec1
  8494  00B38A  52E5               	movf	postdec1,f,c
  8495  00B38C  52E5               	movf	postdec1,f,c
  8496                           
  8497                           ; BSR set to: 0
  8498                           ;fat_access.c: 884: entry->cluster = ((directoryEntry->FstClusHI)<<16) | (directoryEntry
      +                          ->FstClusLO);
  8499  00B38E  EE20 F01A          	lfsr	2,26
  8500  00B392  0101               	movlb	1	; () banked
  8501  00B394  514B               	movf	fatfs_list_directory_next@directoryEntry& (0+255),w,b
  8502  00B396  26D9               	addwf	fsr2l,f,c
  8503  00B398  514C               	movf	(fatfs_list_directory_next@directoryEntry+1)& (0+255),w,b
  8504  00B39A  22DA               	addwfc	fsr2h,f,c
  8505  00B39C  CFDE F0B2          	movff	postinc2,??_fatfs_list_directory_next
  8506  00B3A0  CFDD F0B3          	movff	postdec2,??_fatfs_list_directory_next+1
  8507  00B3A4  EE20 F014          	lfsr	2,20
  8508  00B3A8  514B               	movf	fatfs_list_directory_next@directoryEntry& (0+255),w,b
  8509  00B3AA  26D9               	addwf	fsr2l,f,c
  8510  00B3AC  514C               	movf	(fatfs_list_directory_next@directoryEntry+1)& (0+255),w,b
  8511  00B3AE  22DA               	addwfc	fsr2h,f,c
  8512  00B3B0  CFDE F0B4          	movff	postinc2,??_fatfs_list_directory_next+2
  8513  00B3B4  CFDD F0B5          	movff	postdec2,??_fatfs_list_directory_next+3
  8514  00B3B8  0100               	movlb	0	; () banked
  8515  00B3BA  51B2               	movf	??_fatfs_list_directory_next& (0+255),w,b
  8516  00B3BC  11B4               	iorwf	(??_fatfs_list_directory_next+2)& (0+255),w,b
  8517  00B3BE  6FB6               	movwf	(??_fatfs_list_directory_next+4)& (0+255),b
  8518  00B3C0  51B3               	movf	(??_fatfs_list_directory_next+1)& (0+255),w,b
  8519  00B3C2  11B5               	iorwf	(??_fatfs_list_directory_next+3)& (0+255),w,b
  8520  00B3C4  6FB7               	movwf	(??_fatfs_list_directory_next+5)& (0+255),b
  8521  00B3C6  6BB8               	clrf	(??_fatfs_list_directory_next+6)& (0+255),b
  8522  00B3C8  6BB9               	clrf	(??_fatfs_list_directory_next+7)& (0+255),b
  8523  00B3CA  EE20 F00B          	lfsr	2,11
  8524  00B3CE  51B0               	movf	fatfs_list_directory_next@entry& (0+255),w,b
  8525  00B3D0  26D9               	addwf	fsr2l,f,c
  8526  00B3D2  51B1               	movf	(fatfs_list_directory_next@entry+1)& (0+255),w,b
  8527  00B3D4  22DA               	addwfc	fsr2h,f,c
  8528  00B3D6  C0B6  FFDE         	movff	??_fatfs_list_directory_next+4,postinc2
  8529  00B3DA  C0B7  FFDE         	movff	??_fatfs_list_directory_next+5,postinc2
  8530  00B3DE  C0B8  FFDE         	movff	??_fatfs_list_directory_next+6,postinc2
  8531  00B3E2  C0B9  FFDD         	movff	??_fatfs_list_directory_next+7,postdec2
  8532  00B3E6  06D9               	decf	fsr2l,f,c
  8533  00B3E8  06D9               	decf	fsr2l,f,c
  8534                           
  8535                           ; BSR set to: 0
  8536                           ;fat_access.c: 887: dirls->offset = item + 1;
  8537  00B3EA  EE20 F008          	lfsr	2,8
  8538  00B3EE  51AE               	movf	fatfs_list_directory_next@dirls& (0+255),w,b
  8539  00B3F0  26D9               	addwf	fsr2l,f,c
  8540  00B3F2  51AF               	movf	(fatfs_list_directory_next@dirls+1)& (0+255),w,b
  8541  00B3F4  22DA               	addwfc	fsr2h,f,c
  8542  00B3F6  0101               	movlb	1	; () banked
  8543  00B3F8  2915               	incf	fatfs_list_directory_next@item& (0+255),w,b
  8544  00B3FA  6EDF               	movwf	indf2,c
  8545                           
  8546                           ; BSR set to: 1
  8547                           ;fat_access.c: 888: result = 1;
  8548  00B3FC  0E00               	movlw	0
  8549  00B3FE  6F12               	movwf	(fatfs_list_directory_next@result+1)& (0+255),b
  8550  00B400  0E01               	movlw	1
  8551  00B402  6F11               	movwf	fatfs_list_directory_next@result& (0+255),b
  8552                           
  8553                           ; BSR set to: 1
  8554                           ;fat_access.c: 889: return 1;
  8555  00B404  0E00               	movlw	0
  8556  00B406  0100               	movlb	0	; () banked
  8557  00B408  6FAD               	movwf	(?_fatfs_list_directory_next+1)& (0+255),b
  8558  00B40A  0E01               	movlw	1
  8559  00B40C  6FAC               	movwf	?_fatfs_list_directory_next& (0+255),b
  8560  00B40E  D01C               	goto	l226
  8561  00B410                     l11244:
  8562  00B410  0101               	movlb	1	; () banked
  8563  00B412  2B15               	incf	fatfs_list_directory_next@item& (0+255),f,b
  8564  00B414                     L19:
  8565                           
  8566                           ; BSR set to: 1
  8567  00B414  0E0F               	movlw	15
  8568  00B416  0101               	movlb	1	; () banked
  8569  00B418  6515               	cpfsgt	fatfs_list_directory_next@item& (0+255),b
  8570  00B41A  D67D               	goto	l11142
  8571                           
  8572                           ; BSR set to: 1
  8573                           ;fat_access.c: 890: }
  8574                           ;fat_access.c: 891: }
  8575                           ;fat_access.c: 894: dirls->sector++;
  8576                           
  8577                           ; BSR set to: 1
  8578  00B41C  C0AE  FFD9         	movff	fatfs_list_directory_next@dirls,fsr2l
  8579  00B420  C0AF  FFDA         	movff	fatfs_list_directory_next@dirls+1,fsr2h
  8580  00B424  2ADE               	incf	postinc2,f,c
  8581  00B426  0E00               	movlw	0
  8582  00B428  22DE               	addwfc	postinc2,f,c
  8583  00B42A  22DE               	addwfc	postinc2,f,c
  8584  00B42C  22DD               	addwfc	postdec2,f,c
  8585                           
  8586                           ;fat_access.c: 895: dirls->offset = 0;
  8587  00B42E  EE20 F008          	lfsr	2,8
  8588  00B432  0100               	movlb	0	; () banked
  8589  00B434  51AE               	movf	fatfs_list_directory_next@dirls& (0+255),w,b
  8590  00B436  26D9               	addwf	fsr2l,f,c
  8591  00B438  51AF               	movf	(fatfs_list_directory_next@dirls+1)& (0+255),w,b
  8592  00B43A  22DA               	addwfc	fsr2h,f,c
  8593  00B43C  6ADF               	clrf	indf2,c
  8594                           
  8595                           ;fat_access.c: 896: }
  8596  00B43E  D638               	goto	l11134
  8597  00B440                     l241:
  8598                           
  8599                           ; BSR set to: 0
  8600                           ;fat_access.c: 899: }
  8601                           ;fat_access.c: 901: return result;
  8602  00B440  C111  F0AC         	movff	fatfs_list_directory_next@result,?_fatfs_list_directory_next
  8603  00B444  C112  F0AD         	movff	fatfs_list_directory_next@result+1,?_fatfs_list_directory_next+1
  8604  00B448                     l226:
  8605                           
  8606                           ; BSR set to: 0
  8607  00B448  0012               	return	
  8608  00B44A                     __end_of_fatfs_list_directory_next:
  8609                           	opt stack 0
  8610                           tosu	equ	0xFFF
  8611                           tosh	equ	0xFFE
  8612                           tosl	equ	0xFFD
  8613                           pclath	equ	0xFFA
  8614                           tblptru	equ	0xFF8
  8615                           tblptrh	equ	0xFF7
  8616                           tblptrl	equ	0xFF6
  8617                           tablat	equ	0xFF5
  8618                           prodh	equ	0xFF4
  8619                           prodl	equ	0xFF3
  8620                           indf0	equ	0xFEF
  8621                           postinc0	equ	0xFEE
  8622                           fsr0h	equ	0xFEA
  8623                           fsr0l	equ	0xFE9
  8624                           wreg	equ	0xFE8
  8625                           indf1	equ	0xFE7
  8626                           postinc1	equ	0xFE6
  8627                           postdec1	equ	0xFE5
  8628                           fsr1h	equ	0xFE2
  8629                           fsr1l	equ	0xFE1
  8630                           indf2	equ	0xFDF
  8631                           postinc2	equ	0xFDE
  8632                           postdec2	equ	0xFDD
  8633                           fsr2h	equ	0xFDA
  8634                           fsr2l	equ	0xFD9
  8635                           status	equ	0xFD8
  8636                           
  8637 ;; *************** function _strncpy *****************
  8638 ;; Defined at:
  8639 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strncpy.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  to              2    0[COMRAM] PTR unsigned char 
  8642 ;;		 -> fl_listdirectory@dirent(19), 
  8643 ;;  from            2    2[COMRAM] PTR const unsigned char 
  8644 ;;		 -> lfn.String(50), lfn.String(50), fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
  8645 ;;		 -> NULL(0), 
  8646 ;;  size            2    4[COMRAM] unsigned int 
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;  cp              2    6[COMRAM] PTR unsigned char 
  8649 ;;		 -> fl_listdirectory@dirent(19), 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  2    0[COMRAM] PTR unsigned char 
  8652 ;; Registers used:
  8653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8659 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8660 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;Total ram usage:        8 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; This function calls:
  8666 ;;		Nothing
  8667 ;; This function is called by:
  8668 ;;		_fatfs_list_directory_next
  8669 ;;		_Name_copy
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           	psect	text14
  8674  0045DA                     __ptext14:
  8675                           	opt stack 0
  8676  0045DA                     _strncpy:
  8677                           	opt stack 27
  8678                           
  8679                           ; BSR set to: 0
  8680                           ;incstack = 0
  8681  0045DA  C002  F008         	movff	strncpy@to+1,strncpy@cp+1
  8682  0045DE  C001  F007         	movff	strncpy@to,strncpy@cp
  8683  0045E2  D013               	goto	l10476
  8684  0045E4                     l10470:
  8685  0045E4  0605               	decf	strncpy@size,f,c
  8686  0045E6  A0D8               	btfss	status,0,c
  8687  0045E8  0606               	decf	strncpy@size+1,f,c
  8688  0045EA  C003  FFD9         	movff	strncpy@from,fsr2l
  8689  0045EE  C004  FFDA         	movff	strncpy@from+1,fsr2h
  8690  0045F2  4A03               	infsnz	strncpy@from,f,c
  8691  0045F4  2A04               	incf	strncpy@from+1,f,c
  8692  0045F6  C007  FFE1         	movff	strncpy@cp,fsr1l
  8693  0045FA  C008  FFE2         	movff	strncpy@cp+1,fsr1h
  8694  0045FE  4A07               	infsnz	strncpy@cp,f,c
  8695  004600  2A08               	incf	strncpy@cp+1,f,c
  8696  004602  CFDF FFE7          	movff	indf2,indf1
  8697  004606  50E7               	movf	indf1,w,c
  8698  004608  E00B               	bz	l10482
  8699  00460A                     l10476:
  8700  00460A  5006               	movf	strncpy@size+1,w,c
  8701  00460C  1005               	iorwf	strncpy@size,w,c
  8702  00460E  E008               	bz	l10482
  8703  004610  D7E9               	goto	l10470
  8704  004612                     l10478:
  8705  004612  C007  FFD9         	movff	strncpy@cp,fsr2l
  8706  004616  C008  FFDA         	movff	strncpy@cp+1,fsr2h
  8707  00461A  6ADF               	clrf	indf2,c
  8708  00461C  4A07               	infsnz	strncpy@cp,f,c
  8709  00461E  2A08               	incf	strncpy@cp+1,f,c
  8710  004620                     l10482:
  8711  004620  0605               	decf	strncpy@size,f,c
  8712  004622  A0D8               	btfss	status,0,c
  8713  004624  0606               	decf	strncpy@size+1,f,c
  8714  004626  2805               	incf	strncpy@size& (0+255),w,c
  8715  004628  B4D8               	btfsc	status,2,c
  8716  00462A  2806               	incf	(strncpy@size+1)& (0+255),w,c
  8717  00462C  B4D8               	btfsc	status,2,c
  8718                           
  8719                           ;	Return value of _strncpy is never used
  8720  00462E  0012               	return	
  8721  004630  D7F0               	goto	l10478
  8722  004632                     __end_of_strncpy:
  8723                           	opt stack 0
  8724                           tosu	equ	0xFFF
  8725                           tosh	equ	0xFFE
  8726                           tosl	equ	0xFFD
  8727                           pclath	equ	0xFFA
  8728                           tblptru	equ	0xFF8
  8729                           tblptrh	equ	0xFF7
  8730                           tblptrl	equ	0xFF6
  8731                           tablat	equ	0xFF5
  8732                           prodh	equ	0xFF4
  8733                           prodl	equ	0xFF3
  8734                           indf0	equ	0xFEF
  8735                           postinc0	equ	0xFEE
  8736                           fsr0h	equ	0xFEA
  8737                           fsr0l	equ	0xFE9
  8738                           wreg	equ	0xFE8
  8739                           indf1	equ	0xFE7
  8740                           postinc1	equ	0xFE6
  8741                           postdec1	equ	0xFE5
  8742                           fsr1h	equ	0xFE2
  8743                           fsr1l	equ	0xFE1
  8744                           indf2	equ	0xFDF
  8745                           postinc2	equ	0xFDE
  8746                           postdec2	equ	0xFDD
  8747                           fsr2h	equ	0xFDA
  8748                           fsr2l	equ	0xFD9
  8749                           status	equ	0xFD8
  8750                           
  8751 ;; *************** function _fatfs_get_sfn_display_name *****************
  8752 ;; Defined at:
  8753 ;;		line 345 in file "fat_string.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  out             2    0[COMRAM] PTR unsigned char 
  8756 ;;		 -> fl_listdirectory@dirent(19), 
  8757 ;;  in              2    2[COMRAM] PTR unsigned char 
  8758 ;;		 -> fatfs_list_directory_next@short_filename(13), 
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;  a               1    6[COMRAM] unsigned char 
  8761 ;;  len             2    4[COMRAM] int 
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  2    0[COMRAM] int 
  8764 ;; Registers used:
  8765 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8771 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8774 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8775 ;;Total ram usage:        7 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; This function calls:
  8778 ;;		Nothing
  8779 ;; This function is called by:
  8780 ;;		_fatfs_list_directory_next
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text15
  8785  004A58                     __ptext15:
  8786                           	opt stack 0
  8787  004A58                     _fatfs_get_sfn_display_name:
  8788                           	opt stack 27
  8789                           
  8790                           ;fat_string.c: 347: int len = 0;
  8791                           
  8792                           ;incstack = 0
  8793  004A58  0E00               	movlw	0
  8794  004A5A  6E06               	movwf	fatfs_get_sfn_display_name@len+1,c
  8795  004A5C  6E05               	movwf	fatfs_get_sfn_display_name@len,c
  8796                           
  8797                           ;fat_string.c: 348: while (*in && len <= 11)
  8798  004A5E  D01D               	goto	l10508
  8799  004A60                     l10486:
  8800                           
  8801                           ;fat_string.c: 349: {
  8802                           ;fat_string.c: 350: char a = *in++;
  8803  004A60  C003  FFD9         	movff	fatfs_get_sfn_display_name@in,fsr2l
  8804  004A64  C004  FFDA         	movff	fatfs_get_sfn_display_name@in+1,fsr2h
  8805  004A68  50DF               	movf	indf2,w,c
  8806  004A6A  6E07               	movwf	fatfs_get_sfn_display_name@a,c
  8807  004A6C  4A03               	infsnz	fatfs_get_sfn_display_name@in,f,c
  8808  004A6E  2A04               	incf	fatfs_get_sfn_display_name@in+1,f,c
  8809                           
  8810                           ;fat_string.c: 352: if (a == ' ')
  8811  004A70  5007               	movf	fatfs_get_sfn_display_name@a,w,c
  8812  004A72  0A20               	xorlw	32
  8813  004A74  E012               	bz	l10508
  8814                           
  8815                           ;fat_string.c: 355: else if ((a>='A') && (a<='Z'))
  8816                           
  8817                           ;fat_string.c: 353: continue;
  8818  004A76  0E40               	movlw	64
  8819  004A78  6407               	cpfsgt	fatfs_get_sfn_display_name@a,c
  8820  004A7A  D005               	goto	l10502
  8821  004A7C  0E5B               	movlw	91
  8822  004A7E  5C07               	subwf	fatfs_get_sfn_display_name@a,w,c
  8823  004A80  E202               	bc	l10502
  8824                           
  8825                           ;fat_string.c: 356: a+= 32;
  8826  004A82  0E20               	movlw	32
  8827  004A84  2607               	addwf	fatfs_get_sfn_display_name@a,f,c
  8828  004A86                     l10502:
  8829                           
  8830                           ;fat_string.c: 358: *out++ = a;
  8831  004A86  C001  FFD9         	movff	fatfs_get_sfn_display_name@out,fsr2l
  8832  004A8A  C002  FFDA         	movff	fatfs_get_sfn_display_name@out+1,fsr2h
  8833  004A8E  C007  FFDF         	movff	fatfs_get_sfn_display_name@a,indf2
  8834  004A92  4A01               	infsnz	fatfs_get_sfn_display_name@out,f,c
  8835  004A94  2A02               	incf	fatfs_get_sfn_display_name@out+1,f,c
  8836                           
  8837                           ;fat_string.c: 359: len++;
  8838  004A96  4A05               	infsnz	fatfs_get_sfn_display_name@len,f,c
  8839  004A98  2A06               	incf	fatfs_get_sfn_display_name@len+1,f,c
  8840  004A9A                     l10508:
  8841  004A9A  C003  FFD9         	movff	fatfs_get_sfn_display_name@in,fsr2l
  8842  004A9E  C004  FFDA         	movff	fatfs_get_sfn_display_name@in+1,fsr2h
  8843  004AA2  50DF               	movf	indf2,w,c
  8844  004AA4  E007               	bz	l10512
  8845  004AA6  5006               	movf	fatfs_get_sfn_display_name@len+1,w,c
  8846  004AA8  0A80               	xorlw	128
  8847  004AAA  0F80               	addlw	-128
  8848  004AAC  0E0C               	movlw	12
  8849  004AAE  B4D8               	btfsc	status,2,c
  8850  004AB0  5C05               	subwf	fatfs_get_sfn_display_name@len,w,c
  8851  004AB2  E3D6               	bnc	l10486
  8852  004AB4                     l10512:
  8853                           
  8854                           ;fat_string.c: 360: }
  8855                           ;fat_string.c: 362: *out = '\0';
  8856  004AB4  C001  FFD9         	movff	fatfs_get_sfn_display_name@out,fsr2l
  8857  004AB8  C002  FFDA         	movff	fatfs_get_sfn_display_name@out+1,fsr2h
  8858  004ABC  0E00               	movlw	0
  8859  004ABE  6EDF               	movwf	indf2,c
  8860                           
  8861                           ;fat_string.c: 363: return 1;
  8862                           ;	Return value of _fatfs_get_sfn_display_name is never used
  8863  004AC0  0C00               	retlw	0
  8864  004AC2                     __end_of_fatfs_get_sfn_display_name:
  8865                           	opt stack 0
  8866                           tosu	equ	0xFFF
  8867                           tosh	equ	0xFFE
  8868                           tosl	equ	0xFFD
  8869                           pclath	equ	0xFFA
  8870                           tblptru	equ	0xFF8
  8871                           tblptrh	equ	0xFF7
  8872                           tblptrl	equ	0xFF6
  8873                           tablat	equ	0xFF5
  8874                           prodh	equ	0xFF4
  8875                           prodl	equ	0xFF3
  8876                           indf0	equ	0xFEF
  8877                           postinc0	equ	0xFEE
  8878                           fsr0h	equ	0xFEA
  8879                           fsr0l	equ	0xFE9
  8880                           wreg	equ	0xFE8
  8881                           indf1	equ	0xFE7
  8882                           postinc1	equ	0xFE6
  8883                           postdec1	equ	0xFE5
  8884                           fsr1h	equ	0xFE2
  8885                           fsr1l	equ	0xFE1
  8886                           indf2	equ	0xFDF
  8887                           postinc2	equ	0xFDE
  8888                           postdec2	equ	0xFDD
  8889                           fsr2h	equ	0xFDA
  8890                           fsr2l	equ	0xFD9
  8891                           status	equ	0xFD8
  8892                           
  8893 ;; *************** function _fl_opendir *****************
  8894 ;; Defined at:
  8895 ;;		line 1512 in file "fat_filelib.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;  path            2  114[BANK0 ] PTR const unsigned char 
  8898 ;;		 -> STR_67(2), STR_64(2), m(30), 
  8899 ;;  dir             2  116[BANK0 ] PTR struct fs_dir_list_s
  8900 ;;		 -> dptr(9), fl_is_dir@dir(9), fl_listdirectory@dirstat(9), 
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;  cluster         4  122[BANK0 ] unsigned long 
  8903 ;;  res             2  120[BANK0 ] int 
  8904 ;;  levels          2  118[BANK0 ] int 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  2  114[BANK0 ] PTR struct fs_dir_list_s
  8907 ;; Registers used:
  8908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8914 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8915 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8917 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8918 ;;Total ram usage:       12 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; Hardware stack levels required when called:    9
  8921 ;; This function calls:
  8922 ;;		__open_directory
  8923 ;;		_fatfs_get_root_cluster
  8924 ;;		_fatfs_list_directory_start
  8925 ;;		_fatfs_total_path_levels
  8926 ;;		_fl_init
  8927 ;; This function is called by:
  8928 ;;		_fl_listdirectory
  8929 ;;		_Open_dir
  8930 ;;		_fl_is_dir
  8931 ;; This function uses a non-reentrant model
  8932 ;;
  8933                           
  8934                           	psect	text16
  8935  005B8E                     __ptext16:
  8936                           	opt stack 0
  8937  005B8E                     _fl_opendir:
  8938                           	opt stack 20
  8939                           
  8940                           ;fat_filelib.c: 1514: int levels;
  8941                           ;fat_filelib.c: 1515: int res = 1;
  8942                           
  8943                           ;incstack = 0
  8944  005B8E  0100               	movlb	0	; () banked
  8945  005B90  6BF9               	clrf	(fl_opendir@res+1)& (0+255),b
  8946  005B92  0E01               	movlw	1
  8947  005B94  6FF8               	movwf	fl_opendir@res& (0+255),b
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;fat_filelib.c: 1516: uint32 cluster = 0xFFFFFFFF;
  8951  005B96  69FA               	setf	fl_opendir@cluster& (0+255),b
  8952  005B98  69FB               	setf	(fl_opendir@cluster+1)& (0+255),b
  8953  005B9A  69FC               	setf	(fl_opendir@cluster+2)& (0+255),b
  8954  005B9C  69FD               	setf	(fl_opendir@cluster+3)& (0+255),b
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;fat_filelib.c: 1519: { if (_filelib_init==0) fl_init(); };
  8958  005B9E  0101               	movlb	1	; () banked
  8959  005BA0  5192               	movf	(__filelib_init+1)& (0+255),w,b
  8960  005BA2  1191               	iorwf	__filelib_init& (0+255),w,b
  8961  005BA4  B4D8               	btfsc	status,2,c
  8962                           
  8963                           ; BSR set to: 1
  8964  005BA6  EC3A  F029         	call	_fl_init	;wreg free
  8965                           
  8966                           ;fat_filelib.c: 1523: levels = fatfs_total_path_levels((char*)path) + 1;
  8967                           
  8968                           ;fat_filelib.c: 1521: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
  8969  005BAA  C0F3  F002         	movff	fl_opendir@path+1,fatfs_total_path_levels@path+1
  8970  005BAE  0100               	movlb	0	; () banked
  8971  005BB0  C0F2  F001         	movff	fl_opendir@path,fatfs_total_path_levels@path
  8972  005BB4  ECCD  F032         	call	_fatfs_total_path_levels	;wreg free
  8973  005BB8  2801               	incf	?_fatfs_total_path_levels,w,c
  8974  005BBA  0100               	movlb	0	; () banked
  8975  005BBC  6FF6               	movwf	fl_opendir@levels& (0+255),b
  8976  005BBE  0E00               	movlw	0
  8977  005BC0  2002               	addwfc	?_fatfs_total_path_levels+1,w,c
  8978  005BC2  6FF7               	movwf	(fl_opendir@levels+1)& (0+255),b
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;fat_filelib.c: 1526: if (levels == 0)
  8982  005BC4  51F7               	movf	(fl_opendir@levels+1)& (0+255),w,b
  8983  005BC6  11F6               	iorwf	fl_opendir@levels& (0+255),w,b
  8984  005BC8  E10F               	bnz	l12038
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;fat_filelib.c: 1527: cluster = fatfs_get_root_cluster(&_fs);
  8988  005BCA  0E09               	movlw	high __fs
  8989  005BCC  6E02               	movwf	fatfs_get_root_cluster@fs+1,c
  8990  005BCE  0E78               	movlw	low __fs
  8991  005BD0  6E01               	movwf	fatfs_get_root_cluster@fs,c
  8992  005BD2  EC86  F01F         	call	_fatfs_get_root_cluster	;wreg free
  8993  005BD6  C001  F0FA         	movff	?_fatfs_get_root_cluster,fl_opendir@cluster
  8994  005BDA  C002  F0FB         	movff	?_fatfs_get_root_cluster+1,fl_opendir@cluster+1
  8995  005BDE  C003  F0FC         	movff	?_fatfs_get_root_cluster+2,fl_opendir@cluster+2
  8996  005BE2  C004  F0FD         	movff	?_fatfs_get_root_cluster+3,fl_opendir@cluster+3
  8997  005BE6  D00F               	goto	l12040
  8998  005BE8                     l12038:
  8999                           
  9000                           ;fat_filelib.c: 1529: else
  9001                           ;fat_filelib.c: 1530: res = _open_directory((char*)path, &cluster);
  9002  005BE8  C0F3  F0B9         	movff	fl_opendir@path+1,__open_directory@path+1
  9003  005BEC  C0F2  F0B8         	movff	fl_opendir@path,__open_directory@path
  9004  005BF0  0E00               	movlw	high fl_opendir@cluster
  9005  005BF2  0100               	movlb	0	; () banked
  9006  005BF4  6FBB               	movwf	(__open_directory@pathCluster+1)& (0+255),b
  9007  005BF6  0EFA               	movlw	low fl_opendir@cluster
  9008  005BF8  6FBA               	movwf	__open_directory@pathCluster& (0+255),b
  9009  005BFA  EC0C  F034         	call	__open_directory	;wreg free
  9010  005BFE  C0B8  F0F8         	movff	?__open_directory,fl_opendir@res
  9011  005C02  C0B9  F0F9         	movff	?__open_directory+1,fl_opendir@res+1
  9012  005C06                     l12040:
  9013                           
  9014                           ;fat_filelib.c: 1532: if (res)
  9015  005C06  0100               	movlb	0	; () banked
  9016  005C08  51F9               	movf	(fl_opendir@res+1)& (0+255),w,b
  9017  005C0A  11F8               	iorwf	fl_opendir@res& (0+255),w,b
  9018  005C0C  E012               	bz	l12046
  9019                           
  9020                           ; BSR set to: 0
  9021                           ;fat_filelib.c: 1533: fatfs_list_directory_start(&_fs, dir, cluster);
  9022  005C0E  0E09               	movlw	high __fs
  9023  005C10  6E02               	movwf	fatfs_list_directory_start@fs+1,c
  9024  005C12  0E78               	movlw	low __fs
  9025  005C14  6E01               	movwf	fatfs_list_directory_start@fs,c
  9026  005C16  C0F5  F004         	movff	fl_opendir@dir+1,fatfs_list_directory_start@dirls+1
  9027  005C1A  C0F4  F003         	movff	fl_opendir@dir,fatfs_list_directory_start@dirls
  9028  005C1E  C0FA  F005         	movff	fl_opendir@cluster,fatfs_list_directory_start@StartCluster
  9029  005C22  C0FB  F006         	movff	fl_opendir@cluster+1,fatfs_list_directory_start@StartCluster+1
  9030  005C26  C0FC  F007         	movff	fl_opendir@cluster+2,fatfs_list_directory_start@StartCluster+2
  9031  005C2A  C0FD  F008         	movff	fl_opendir@cluster+3,fatfs_list_directory_start@StartCluster+3
  9032  005C2E  ECE4  F020         	call	_fatfs_list_directory_start	;wreg free
  9033  005C32                     l12046:
  9034                           
  9035                           ;fat_filelib.c: 1537: return cluster != 0xFFFFFFFF ? dir : 0;
  9036  005C32  0100               	movlb	0	; () banked
  9037  005C34  29FA               	incf	fl_opendir@cluster& (0+255),w,b
  9038  005C36  B4D8               	btfsc	status,2,c
  9039  005C38  29FB               	incf	(fl_opendir@cluster+1)& (0+255),w,b
  9040  005C3A  B4D8               	btfsc	status,2,c
  9041  005C3C  29FC               	incf	(fl_opendir@cluster+2)& (0+255),w,b
  9042  005C3E  B4D8               	btfsc	status,2,c
  9043  005C40  29FD               	incf	(fl_opendir@cluster+3)& (0+255),w,b
  9044  005C42  E104               	bnz	l12050
  9045                           
  9046                           ; BSR set to: 0
  9047  005C44  0E00               	movlw	0
  9048  005C46  6FF3               	movwf	(?_fl_opendir+1)& (0+255),b
  9049  005C48  6FF2               	movwf	?_fl_opendir& (0+255),b
  9050  005C4A  D005               	goto	l807
  9051  005C4C                     l12050:
  9052                           
  9053                           ; BSR set to: 0
  9054  005C4C  C0F5  F0F3         	movff	fl_opendir@dir+1,?_fl_opendir+1
  9055  005C50  0100               	movlb	0	; () banked
  9056  005C52  C0F4  F0F2         	movff	fl_opendir@dir,?_fl_opendir
  9057  005C56                     l807:
  9058                           
  9059                           ; BSR set to: 0
  9060  005C56  0012               	return	
  9061  005C58                     __end_of_fl_opendir:
  9062                           	opt stack 0
  9063                           tosu	equ	0xFFF
  9064                           tosh	equ	0xFFE
  9065                           tosl	equ	0xFFD
  9066                           pclath	equ	0xFFA
  9067                           tblptru	equ	0xFF8
  9068                           tblptrh	equ	0xFF7
  9069                           tblptrl	equ	0xFF6
  9070                           tablat	equ	0xFF5
  9071                           prodh	equ	0xFF4
  9072                           prodl	equ	0xFF3
  9073                           indf0	equ	0xFEF
  9074                           postinc0	equ	0xFEE
  9075                           fsr0h	equ	0xFEA
  9076                           fsr0l	equ	0xFE9
  9077                           wreg	equ	0xFE8
  9078                           indf1	equ	0xFE7
  9079                           postinc1	equ	0xFE6
  9080                           postdec1	equ	0xFE5
  9081                           fsr1h	equ	0xFE2
  9082                           fsr1l	equ	0xFE1
  9083                           indf2	equ	0xFDF
  9084                           postinc2	equ	0xFDE
  9085                           postdec2	equ	0xFDD
  9086                           fsr2h	equ	0xFDA
  9087                           fsr2l	equ	0xFD9
  9088                           status	equ	0xFD8
  9089                           
  9090 ;; *************** function _fatfs_list_directory_start *****************
  9091 ;; Defined at:
  9092 ;;		line 755 in file "fat_access.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;  fs              2    0[COMRAM] PTR struct fatfs
  9095 ;;		 -> _fs(1095), 
  9096 ;;  dirls           2    2[COMRAM] PTR struct fs_dir_list_s
  9097 ;;		 -> dptr(9), fl_is_dir@dir(9), fl_listdirectory@dirstat(9), 
  9098 ;;  StartCluster    4    4[COMRAM] unsigned long 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;		None
  9101 ;; Return value:  Size  Location     Type
  9102 ;;		None               void
  9103 ;; Registers used:
  9104 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9110 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9113 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9114 ;;Total ram usage:        8 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; This function calls:
  9117 ;;		Nothing
  9118 ;; This function is called by:
  9119 ;;		_fl_opendir
  9120 ;; This function uses a non-reentrant model
  9121 ;;
  9122                           
  9123                           	psect	text17
  9124  0041C8                     __ptext17:
  9125                           	opt stack 0
  9126  0041C8                     _fatfs_list_directory_start:
  9127                           	opt stack 28
  9128                           
  9129                           ;fat_access.c: 757: dirls->cluster = StartCluster;
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;incstack = 0
  9133  0041C8  EE20 F004          	lfsr	2,4
  9134  0041CC  5003               	movf	fatfs_list_directory_start@dirls,w,c
  9135  0041CE  26D9               	addwf	fsr2l,f,c
  9136  0041D0  5004               	movf	fatfs_list_directory_start@dirls+1,w,c
  9137  0041D2  22DA               	addwfc	fsr2h,f,c
  9138  0041D4  C005  FFDE         	movff	fatfs_list_directory_start@StartCluster,postinc2
  9139  0041D8  C006  FFDE         	movff	fatfs_list_directory_start@StartCluster+1,postinc2
  9140  0041DC  C007  FFDE         	movff	fatfs_list_directory_start@StartCluster+2,postinc2
  9141  0041E0  C008  FFDE         	movff	fatfs_list_directory_start@StartCluster+3,postinc2
  9142                           
  9143                           ;fat_access.c: 758: dirls->sector = 0;
  9144  0041E4  C003  FFD9         	movff	fatfs_list_directory_start@dirls,fsr2l
  9145  0041E8  C004  FFDA         	movff	fatfs_list_directory_start@dirls+1,fsr2h
  9146  0041EC  6ADE               	clrf	postinc2,c
  9147  0041EE  6ADE               	clrf	postinc2,c
  9148  0041F0  6ADE               	clrf	postinc2,c
  9149  0041F2  6ADD               	clrf	postdec2,c
  9150                           
  9151                           ;fat_access.c: 759: dirls->offset = 0;
  9152  0041F4  EE20 F008          	lfsr	2,8
  9153  0041F8  5003               	movf	fatfs_list_directory_start@dirls,w,c
  9154  0041FA  26D9               	addwf	fsr2l,f,c
  9155  0041FC  5004               	movf	fatfs_list_directory_start@dirls+1,w,c
  9156  0041FE  22DA               	addwfc	fsr2h,f,c
  9157  004200  0E00               	movlw	0
  9158  004202  6EDF               	movwf	indf2,c
  9159  004204  0C00               	retlw	0
  9160  004206                     __end_of_fatfs_list_directory_start:
  9161                           	opt stack 0
  9162                           tosu	equ	0xFFF
  9163                           tosh	equ	0xFFE
  9164                           tosl	equ	0xFFD
  9165                           pclath	equ	0xFFA
  9166                           tblptru	equ	0xFF8
  9167                           tblptrh	equ	0xFF7
  9168                           tblptrl	equ	0xFF6
  9169                           tablat	equ	0xFF5
  9170                           prodh	equ	0xFF4
  9171                           prodl	equ	0xFF3
  9172                           indf0	equ	0xFEF
  9173                           postinc0	equ	0xFEE
  9174                           fsr0h	equ	0xFEA
  9175                           fsr0l	equ	0xFE9
  9176                           wreg	equ	0xFE8
  9177                           indf1	equ	0xFE7
  9178                           postinc1	equ	0xFE6
  9179                           postdec1	equ	0xFE5
  9180                           fsr1h	equ	0xFE2
  9181                           fsr1l	equ	0xFE1
  9182                           indf2	equ	0xFDF
  9183                           postinc2	equ	0xFDE
  9184                           postdec2	equ	0xFDD
  9185                           fsr2h	equ	0xFDA
  9186                           fsr2l	equ	0xFD9
  9187                           status	equ	0xFD8
  9188                           
  9189 ;; *************** function _fl_closedir *****************
  9190 ;; Defined at:
  9191 ;;		line 1564 in file "fat_filelib.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;  dir             2    0[COMRAM] PTR struct fs_dir_list_s
  9194 ;;		 -> dptr(9), fl_is_dir@dir(9), fl_listdirectory@dirstat(9), 
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;		None
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  2    0[COMRAM] int 
  9199 ;; Registers used:
  9200 ;;		None
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9210 ;;Total ram usage:        2 bytes
  9211 ;; Hardware stack levels used:    1
  9212 ;; This function calls:
  9213 ;;		Nothing
  9214 ;; This function is called by:
  9215 ;;		_fl_listdirectory
  9216 ;;		_Open_dir
  9217 ;;		_fl_is_dir
  9218 ;; This function uses a non-reentrant model
  9219 ;;
  9220                           
  9221                           	psect	text18
  9222  003E3A                     __ptext18:
  9223                           	opt stack 0
  9224  003E3A                     _fl_closedir:
  9225                           	opt stack 29
  9226                           
  9227                           ;fat_filelib.c: 1567: return 0;
  9228                           ;	Return value of _fl_closedir is never used
  9229                           
  9230                           ;incstack = 0
  9231  003E3A  0012               	return	
  9232  003E3C                     __end_of_fl_closedir:
  9233                           	opt stack 0
  9234                           tosu	equ	0xFFF
  9235                           tosh	equ	0xFFE
  9236                           tosl	equ	0xFFD
  9237                           pclath	equ	0xFFA
  9238                           tblptru	equ	0xFF8
  9239                           tblptrh	equ	0xFF7
  9240                           tblptrl	equ	0xFF6
  9241                           tablat	equ	0xFF5
  9242                           prodh	equ	0xFF4
  9243                           prodl	equ	0xFF3
  9244                           indf0	equ	0xFEF
  9245                           postinc0	equ	0xFEE
  9246                           fsr0h	equ	0xFEA
  9247                           fsr0l	equ	0xFE9
  9248                           wreg	equ	0xFE8
  9249                           indf1	equ	0xFE7
  9250                           postinc1	equ	0xFE6
  9251                           postdec1	equ	0xFE5
  9252                           fsr1h	equ	0xFE2
  9253                           fsr1l	equ	0xFE1
  9254                           indf2	equ	0xFDF
  9255                           postinc2	equ	0xFDE
  9256                           postdec2	equ	0xFDD
  9257                           fsr2h	equ	0xFDA
  9258                           fsr2l	equ	0xFD9
  9259                           status	equ	0xFD8
  9260                           
  9261 ;; *************** function _Format_drive *****************
  9262 ;; Defined at:
  9263 ;;		line 741 in file "main.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;		None
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;		None
  9268 ;; Return value:  Size  Location     Type
  9269 ;;		None               void
  9270 ;; Registers used:
  9271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9281 ;;Total ram usage:        0 bytes
  9282 ;; Hardware stack levels used:    1
  9283 ;; Hardware stack levels required when called:    8
  9284 ;; This function calls:
  9285 ;;		_Clr_str
  9286 ;;		_File_format
  9287 ;;		_ReadUART
  9288 ;;		_Read_str
  9289 ;;		_Write_str
  9290 ;; This function is called by:
  9291 ;;		_main
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           	psect	text19
  9296  00468E                     __ptext19:
  9297                           	opt stack 0
  9298  00468E                     _Format_drive:
  9299                           	opt stack 22
  9300                           
  9301                           ;main.c: 743: Write_str("\n\rAll data will be lost..!\n\rAre you sure? y/n\n\r");
  9302                           
  9303                           ;incstack = 0
  9304  00468E  0EFB               	movlw	high STR_58
  9305  004690  6E07               	movwf	Write_str@str+1,c
  9306  004692  0EE0               	movlw	low STR_58
  9307  004694  6E06               	movwf	Write_str@str,c
  9308  004696  EC3C  F01F         	call	_Write_str	;wreg free
  9309                           
  9310                           ;main.c: 744: switch(ReadUART())
  9311  00469A  D020               	goto	l13202
  9312  00469C                     l13192:
  9313  00469C  0EFD               	movlw	high STR_59
  9314  00469E  6E07               	movwf	Write_str@str+1,c
  9315  0046A0  0E55               	movlw	low STR_59
  9316  0046A2  6E06               	movwf	Write_str@str,c
  9317  0046A4  EC3C  F01F         	call	_Write_str	;wreg free
  9318                           
  9319                           ;main.c: 747: Clr_str(string);
  9320  0046A8  0E01               	movlw	high _string
  9321  0046AA  6E02               	movwf	Clr_str@buffer+1,c
  9322  0046AC  0101               	movlb	1	; () banked
  9323  0046AE  0EAF               	movlw	low _string
  9324  0046B0  6E01               	movwf	Clr_str@buffer,c
  9325  0046B2  EC95  F01F         	call	_Clr_str	;wreg free
  9326                           
  9327                           ;main.c: 748: Read_str(string);
  9328  0046B6  0E01               	movlw	high _string
  9329  0046B8  6E03               	movwf	Read_str@buffer+1,c
  9330  0046BA  0101               	movlb	1	; () banked
  9331  0046BC  0EAF               	movlw	low _string
  9332  0046BE  6E02               	movwf	Read_str@buffer,c
  9333  0046C0  EC22  F021         	call	_Read_str	;wreg free
  9334                           
  9335                           ;main.c: 749: File_format(1048576, "DISK_");
  9336  0046C4  6A6B               	clrf	File_format@volume,c
  9337  0046C6  6A6C               	clrf	File_format@volume+1,c
  9338  0046C8  0E10               	movlw	16
  9339  0046CA  6E6D               	movwf	File_format@volume+2,c
  9340  0046CC  6A6E               	clrf	File_format@volume+3,c
  9341  0046CE  0EFF               	movlw	high STR_60
  9342  0046D0  6E70               	movwf	File_format@name+1,c
  9343  0046D2  0EDF               	movlw	low STR_60
  9344  0046D4  6E6F               	movwf	File_format@name,c
  9345  0046D6  ECC5  F020         	call	_File_format	;wreg free
  9346                           
  9347                           ;main.c: 750: break;
  9348  0046DA  D006               	goto	l1799
  9349  0046DC                     l13202:
  9350  0046DC  EC1E  F01F         	call	_ReadUART	;wreg free
  9351                           
  9352                           ; Switch size 1, requested type "speed"
  9353                           ; Number of cases is 2, Range of values is 110 to 121
  9354                           ; switch strategies available:
  9355                           ; Name         Instructions Cycles
  9356                           ; simple_byte            7     4 (average)
  9357                           ;	Chosen strategy is simple_byte
  9358  0046E0  0A6E               	xorlw	110	; case 110
  9359  0046E2  E002               	bz	l1799
  9360  0046E4  0A17               	xorlw	23	; case 121
  9361  0046E6  E0DA               	bz	l13192
  9362  0046E8                     l1799:
  9363  0046E8  0012               	return	
  9364  0046EA                     __end_of_Format_drive:
  9365                           	opt stack 0
  9366                           tosu	equ	0xFFF
  9367                           tosh	equ	0xFFE
  9368                           tosl	equ	0xFFD
  9369                           pclath	equ	0xFFA
  9370                           tblptru	equ	0xFF8
  9371                           tblptrh	equ	0xFF7
  9372                           tblptrl	equ	0xFF6
  9373                           tablat	equ	0xFF5
  9374                           prodh	equ	0xFF4
  9375                           prodl	equ	0xFF3
  9376                           indf0	equ	0xFEF
  9377                           postinc0	equ	0xFEE
  9378                           fsr0h	equ	0xFEA
  9379                           fsr0l	equ	0xFE9
  9380                           wreg	equ	0xFE8
  9381                           indf1	equ	0xFE7
  9382                           postinc1	equ	0xFE6
  9383                           postdec1	equ	0xFE5
  9384                           fsr1h	equ	0xFE2
  9385                           fsr1l	equ	0xFE1
  9386                           indf2	equ	0xFDF
  9387                           postinc2	equ	0xFDE
  9388                           postdec2	equ	0xFDD
  9389                           fsr2h	equ	0xFDA
  9390                           fsr2l	equ	0xFD9
  9391                           status	equ	0xFD8
  9392                           
  9393 ;; *************** function _File_format *****************
  9394 ;; Defined at:
  9395 ;;		line 733 in file "main.c"
  9396 ;; Parameters:    Size  Location     Type
  9397 ;;  volume          4  106[COMRAM] unsigned long 
  9398 ;;  name            2  110[COMRAM] PTR unsigned char 
  9399 ;;		 -> STR_60(6), 
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;		None
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  2  106[COMRAM] int 
  9404 ;; Registers used:
  9405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/0
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9411 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9414 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9415 ;;Total ram usage:        6 bytes
  9416 ;; Hardware stack levels used:    1
  9417 ;; Hardware stack levels required when called:    7
  9418 ;; This function calls:
  9419 ;;		_Write_str
  9420 ;;		_fl_format
  9421 ;; This function is called by:
  9422 ;;		_Format_drive
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           	psect	text20
  9427  00418A                     __ptext20:
  9428                           	opt stack 0
  9429  00418A                     _File_format:
  9430                           	opt stack 22
  9431                           
  9432                           ;main.c: 735: if(fl_format(volume,name))
  9433                           
  9434                           ;incstack = 0
  9435  00418A  C06B  F065         	movff	File_format@volume,fl_format@volume_sectors
  9436  00418E  C06C  F066         	movff	File_format@volume+1,fl_format@volume_sectors+1
  9437  004192  C06D  F067         	movff	File_format@volume+2,fl_format@volume_sectors+2
  9438  004196  C06E  F068         	movff	File_format@volume+3,fl_format@volume_sectors+3
  9439  00419A  C070  F06A         	movff	File_format@name+1,fl_format@name+1
  9440  00419E  C06F  F069         	movff	File_format@name,fl_format@name
  9441  0041A2  EC5E  F020         	call	_fl_format	;wreg free
  9442  0041A6  5066               	movf	?_fl_format+1,w,c
  9443  0041A8  1065               	iorwf	?_fl_format,w,c
  9444  0041AA  E007               	bz	l12716
  9445                           
  9446                           ;main.c: 736: Write_str("\n\rFormat complete..!");
  9447  0041AC  0EFE               	movlw	high STR_56
  9448  0041AE  6E07               	movwf	Write_str@str+1,c
  9449  0041B0  0EDA               	movlw	low STR_56
  9450  0041B2  6E06               	movwf	Write_str@str,c
  9451  0041B4  EC3C  F01F         	call	_Write_str	;wreg free
  9452  0041B8  D006               	goto	l1792
  9453  0041BA                     l12716:
  9454                           
  9455                           ;main.c: 737: else
  9456                           ;main.c: 738: Write_str("\n\rFormat failed..!");
  9457  0041BA  0EFF               	movlw	high STR_57
  9458  0041BC  6E07               	movwf	Write_str@str+1,c
  9459  0041BE  0E17               	movlw	low STR_57
  9460  0041C0  6E06               	movwf	Write_str@str,c
  9461  0041C2  EC3C  F01F         	call	_Write_str	;wreg free
  9462  0041C6                     l1792:
  9463  0041C6  0012               	return	
  9464  0041C8                     __end_of_File_format:
  9465                           	opt stack 0
  9466                           tosu	equ	0xFFF
  9467                           tosh	equ	0xFFE
  9468                           tosl	equ	0xFFD
  9469                           pclath	equ	0xFFA
  9470                           tblptru	equ	0xFF8
  9471                           tblptrh	equ	0xFF7
  9472                           tblptrl	equ	0xFF6
  9473                           tablat	equ	0xFF5
  9474                           prodh	equ	0xFF4
  9475                           prodl	equ	0xFF3
  9476                           indf0	equ	0xFEF
  9477                           postinc0	equ	0xFEE
  9478                           fsr0h	equ	0xFEA
  9479                           fsr0l	equ	0xFE9
  9480                           wreg	equ	0xFE8
  9481                           indf1	equ	0xFE7
  9482                           postinc1	equ	0xFE6
  9483                           postdec1	equ	0xFE5
  9484                           fsr1h	equ	0xFE2
  9485                           fsr1l	equ	0xFE1
  9486                           indf2	equ	0xFDF
  9487                           postinc2	equ	0xFDE
  9488                           postdec2	equ	0xFDD
  9489                           fsr2h	equ	0xFDA
  9490                           fsr2l	equ	0xFD9
  9491                           status	equ	0xFD8
  9492                           
  9493 ;; *************** function _fl_format *****************
  9494 ;; Defined at:
  9495 ;;		line 1592 in file "fat_filelib.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  volume_secto    4  100[COMRAM] unsigned long 
  9498 ;;  name            2  104[COMRAM] PTR const unsigned char 
  9499 ;;		 -> STR_60(6), 
  9500 ;; Auto vars:     Size  Location     Type
  9501 ;;		None
  9502 ;; Return value:  Size  Location     Type
  9503 ;;                  2  100[COMRAM] int 
  9504 ;; Registers used:
  9505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9506 ;; Tracked objects:
  9507 ;;		On entry : 0/0
  9508 ;;		On exit  : 0/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9511 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9514 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9515 ;;Total ram usage:        6 bytes
  9516 ;; Hardware stack levels used:    1
  9517 ;; Hardware stack levels required when called:    6
  9518 ;; This function calls:
  9519 ;;		_fatfs_format
  9520 ;; This function is called by:
  9521 ;;		_File_format
  9522 ;; This function uses a non-reentrant model
  9523 ;;
  9524                           
  9525                           	psect	text21
  9526  0040BC                     __ptext21:
  9527                           	opt stack 0
  9528  0040BC                     _fl_format:
  9529                           	opt stack 22
  9530                           
  9531                           ;fat_filelib.c: 1594: return fatfs_format(&_fs, volume_sectors, name);
  9532                           
  9533                           ;incstack = 0
  9534  0040BC  0E09               	movlw	high __fs
  9535  0040BE  6E5A               	movwf	fatfs_format@fs+1,c
  9536  0040C0  0E78               	movlw	low __fs
  9537  0040C2  6E59               	movwf	fatfs_format@fs,c
  9538  0040C4  C065  F05B         	movff	fl_format@volume_sectors,fatfs_format@volume_sectors
  9539  0040C8  C066  F05C         	movff	fl_format@volume_sectors+1,fatfs_format@volume_sectors+1
  9540  0040CC  C067  F05D         	movff	fl_format@volume_sectors+2,fatfs_format@volume_sectors+2
  9541  0040D0  C068  F05E         	movff	fl_format@volume_sectors+3,fatfs_format@volume_sectors+3
  9542  0040D4  C06A  F060         	movff	fl_format@name+1,fatfs_format@name+1
  9543  0040D8  C069  F05F         	movff	fl_format@name,fatfs_format@name
  9544  0040DC  EC6C  F027         	call	_fatfs_format	;wreg free
  9545  0040E0  C059  F065         	movff	?_fatfs_format,?_fl_format
  9546  0040E4  C05A  F066         	movff	?_fatfs_format+1,?_fl_format+1
  9547  0040E8  0012               	return	
  9548  0040EA                     __end_of_fl_format:
  9549                           	opt stack 0
  9550                           tosu	equ	0xFFF
  9551                           tosh	equ	0xFFE
  9552                           tosl	equ	0xFFD
  9553                           pclath	equ	0xFFA
  9554                           tblptru	equ	0xFF8
  9555                           tblptrh	equ	0xFF7
  9556                           tblptrl	equ	0xFF6
  9557                           tablat	equ	0xFF5
  9558                           prodh	equ	0xFF4
  9559                           prodl	equ	0xFF3
  9560                           indf0	equ	0xFEF
  9561                           postinc0	equ	0xFEE
  9562                           fsr0h	equ	0xFEA
  9563                           fsr0l	equ	0xFE9
  9564                           wreg	equ	0xFE8
  9565                           indf1	equ	0xFE7
  9566                           postinc1	equ	0xFE6
  9567                           postdec1	equ	0xFE5
  9568                           fsr1h	equ	0xFE2
  9569                           fsr1l	equ	0xFE1
  9570                           indf2	equ	0xFDF
  9571                           postinc2	equ	0xFDE
  9572                           postdec2	equ	0xFDD
  9573                           fsr2h	equ	0xFDA
  9574                           fsr2l	equ	0xFD9
  9575                           status	equ	0xFD8
  9576                           
  9577 ;; *************** function _fatfs_format *****************
  9578 ;; Defined at:
  9579 ;;		line 524 in file "fat_format.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;  fs              2   88[COMRAM] PTR struct fatfs
  9582 ;;		 -> _fs(1095), 
  9583 ;;  volume_secto    4   90[COMRAM] unsigned long 
  9584 ;;  name            2   94[COMRAM] PTR const unsigned char 
  9585 ;;		 -> STR_60(6), 
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;		None
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  2   88[COMRAM] int 
  9590 ;; Registers used:
  9591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9597 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9599 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9600 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9601 ;;Total ram usage:       12 bytes
  9602 ;; Hardware stack levels used:    1
  9603 ;; Hardware stack levels required when called:    5
  9604 ;; This function calls:
  9605 ;;		_fatfs_format_fat16
  9606 ;;		_fatfs_format_fat32
  9607 ;; This function is called by:
  9608 ;;		_fl_format
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612                           	psect	text22
  9613  004ED8                     __ptext22:
  9614                           	opt stack 0
  9615  004ED8                     _fatfs_format:
  9616                           	opt stack 22
  9617                           
  9618                           ;fat_format.c: 527: if (volume_sectors <= 4194304)
  9619                           
  9620                           ;incstack = 0
  9621  004ED8  0E01               	movlw	1
  9622  004EDA  6E61               	movwf	??_fatfs_format& (0+255),c
  9623  004EDC  6A62               	clrf	(??_fatfs_format+1)& (0+255),c
  9624  004EDE  0E40               	movlw	64
  9625  004EE0  6E63               	movwf	(??_fatfs_format+2)& (0+255),c
  9626  004EE2  6A64               	clrf	(??_fatfs_format+3)& (0+255),c
  9627  004EE4  5061               	movf	??_fatfs_format,w,c
  9628  004EE6  5C5B               	subwf	fatfs_format@volume_sectors,w,c
  9629  004EE8  5062               	movf	??_fatfs_format+1,w,c
  9630  004EEA  585C               	subwfb	fatfs_format@volume_sectors+1,w,c
  9631  004EEC  5063               	movf	??_fatfs_format+2,w,c
  9632  004EEE  585D               	subwfb	fatfs_format@volume_sectors+2,w,c
  9633  004EF0  5064               	movf	??_fatfs_format+3,w,c
  9634  004EF2  585E               	subwfb	fatfs_format@volume_sectors+3,w,c
  9635  004EF4  E217               	bc	l11516
  9636                           
  9637                           ;fat_format.c: 528: return fatfs_format_fat16(fs, volume_sectors, name);
  9638  004EF6  C05A  F03D         	movff	fatfs_format@fs+1,fatfs_format_fat16@fs+1
  9639  004EFA  C059  F03C         	movff	fatfs_format@fs,fatfs_format_fat16@fs
  9640  004EFE  C05B  F03E         	movff	fatfs_format@volume_sectors,fatfs_format_fat16@volume_sectors
  9641  004F02  C05C  F03F         	movff	fatfs_format@volume_sectors+1,fatfs_format_fat16@volume_sectors+1
  9642  004F06  C05D  F040         	movff	fatfs_format@volume_sectors+2,fatfs_format_fat16@volume_sectors+2
  9643  004F0A  C05E  F041         	movff	fatfs_format@volume_sectors+3,fatfs_format_fat16@volume_sectors+3
  9644  004F0E  C060  F043         	movff	fatfs_format@name+1,fatfs_format_fat16@name+1
  9645  004F12  C05F  F042         	movff	fatfs_format@name,fatfs_format_fat16@name
  9646  004F16  EC19  F05E         	call	_fatfs_format_fat16	;wreg free
  9647  004F1A  C03C  F059         	movff	?_fatfs_format_fat16,?_fatfs_format
  9648  004F1E  C03D  F05A         	movff	?_fatfs_format_fat16+1,?_fatfs_format+1
  9649  004F22  D016               	goto	l921
  9650  004F24                     l11516:
  9651                           
  9652                           ;fat_format.c: 529: else
  9653                           ;fat_format.c: 530: return fatfs_format_fat32(fs, volume_sectors, name);
  9654  004F24  C05A  F03D         	movff	fatfs_format@fs+1,fatfs_format_fat32@fs+1
  9655  004F28  C059  F03C         	movff	fatfs_format@fs,fatfs_format_fat32@fs
  9656  004F2C  C05B  F03E         	movff	fatfs_format@volume_sectors,fatfs_format_fat32@volume_sectors
  9657  004F30  C05C  F03F         	movff	fatfs_format@volume_sectors+1,fatfs_format_fat32@volume_sectors+1
  9658  004F34  C05D  F040         	movff	fatfs_format@volume_sectors+2,fatfs_format_fat32@volume_sectors+2
  9659  004F38  C05E  F041         	movff	fatfs_format@volume_sectors+3,fatfs_format_fat32@volume_sectors+3
  9660  004F3C  C060  F043         	movff	fatfs_format@name+1,fatfs_format_fat32@name+1
  9661  004F40  C05F  F042         	movff	fatfs_format@name,fatfs_format_fat32@name
  9662  004F44  EC44  F051         	call	_fatfs_format_fat32	;wreg free
  9663  004F48  C03C  F059         	movff	?_fatfs_format_fat32,?_fatfs_format
  9664  004F4C  C03D  F05A         	movff	?_fatfs_format_fat32+1,?_fatfs_format+1
  9665  004F50                     l921:
  9666  004F50  0012               	return	
  9667  004F52                     __end_of_fatfs_format:
  9668                           	opt stack 0
  9669                           tosu	equ	0xFFF
  9670                           tosh	equ	0xFFE
  9671                           tosl	equ	0xFFD
  9672                           pclath	equ	0xFFA
  9673                           tblptru	equ	0xFF8
  9674                           tblptrh	equ	0xFF7
  9675                           tblptrl	equ	0xFF6
  9676                           tablat	equ	0xFF5
  9677                           prodh	equ	0xFF4
  9678                           prodl	equ	0xFF3
  9679                           indf0	equ	0xFEF
  9680                           postinc0	equ	0xFEE
  9681                           fsr0h	equ	0xFEA
  9682                           fsr0l	equ	0xFE9
  9683                           wreg	equ	0xFE8
  9684                           indf1	equ	0xFE7
  9685                           postinc1	equ	0xFE6
  9686                           postdec1	equ	0xFE5
  9687                           fsr1h	equ	0xFE2
  9688                           fsr1l	equ	0xFE1
  9689                           indf2	equ	0xFDF
  9690                           postinc2	equ	0xFDE
  9691                           postdec2	equ	0xFDD
  9692                           fsr2h	equ	0xFDA
  9693                           fsr2l	equ	0xFD9
  9694                           status	equ	0xFD8
  9695                           
  9696 ;; *************** function _fatfs_format_fat32 *****************
  9697 ;; Defined at:
  9698 ;;		line 475 in file "fat_format.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  fs              2   59[COMRAM] PTR struct fatfs
  9701 ;;		 -> _fs(1095), 
  9702 ;;  volume_secto    4   61[COMRAM] unsigned long 
  9703 ;;  name            2   65[COMRAM] PTR const unsigned char 
  9704 ;;		 -> STR_60(6), 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  2   59[COMRAM] int 
  9709 ;; Registers used:
  9710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9716 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9718 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9719 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9720 ;;Total ram usage:       29 bytes
  9721 ;; Hardware stack levels used:    1
  9722 ;; Hardware stack levels required when called:    4
  9723 ;; This function calls:
  9724 ;;		_fatfs_create_boot_sector
  9725 ;;		_fatfs_create_fsinfo_sector
  9726 ;;		_fatfs_erase_fat
  9727 ;;		_fatfs_erase_sectors
  9728 ;;		_fatfs_fat_init
  9729 ;;		_fatfs_lba_of_cluster
  9730 ;; This function is called by:
  9731 ;;		_fatfs_format
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           	psect	text23
  9736  00A288                     __ptext23:
  9737                           	opt stack 0
  9738  00A288                     _fatfs_format_fat32:
  9739                           	opt stack 22
  9740                           
  9741                           ;fat_format.c: 477: fs->currentsector.address = 0xFFFFFFFF;
  9742                           
  9743                           ;incstack = 0
  9744  00A288  EE22 F031          	lfsr	2,561
  9745  00A28C  503C               	movf	fatfs_format_fat32@fs,w,c
  9746  00A28E  26D9               	addwf	fsr2l,f,c
  9747  00A290  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9748  00A292  22DA               	addwfc	fsr2h,f,c
  9749  00A294  68DE               	setf	postinc2,c
  9750  00A296  68DE               	setf	postinc2,c
  9751  00A298  68DE               	setf	postinc2,c
  9752  00A29A  68DD               	setf	postdec2,c
  9753                           
  9754                           ;fat_format.c: 478: fs->currentsector.dirty = 0;
  9755  00A29C  EE22 F035          	lfsr	2,565
  9756  00A2A0  503C               	movf	fatfs_format_fat32@fs,w,c
  9757  00A2A2  26D9               	addwf	fsr2l,f,c
  9758  00A2A4  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9759  00A2A6  22DA               	addwfc	fsr2h,f,c
  9760  00A2A8  6ADE               	clrf	postinc2,c
  9761  00A2AA  6ADD               	clrf	postdec2,c
  9762                           
  9763                           ;fat_format.c: 480: fs->next_free_cluster = 0;
  9764  00A2AC  EE20 F01F          	lfsr	2,31
  9765  00A2B0  503C               	movf	fatfs_format_fat32@fs,w,c
  9766  00A2B2  26D9               	addwf	fsr2l,f,c
  9767  00A2B4  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9768  00A2B6  22DA               	addwfc	fsr2h,f,c
  9769  00A2B8  6ADE               	clrf	postinc2,c
  9770  00A2BA  6ADE               	clrf	postinc2,c
  9771  00A2BC  6ADE               	clrf	postinc2,c
  9772  00A2BE  6ADD               	clrf	postdec2,c
  9773                           
  9774                           ;fat_format.c: 482: fatfs_fat_init(fs);
  9775  00A2C0  C03D  F00A         	movff	fatfs_format_fat32@fs+1,fatfs_fat_init@fs+1
  9776  00A2C4  C03C  F009         	movff	fatfs_format_fat32@fs,fatfs_fat_init@fs
  9777  00A2C8  EC6B  F042         	call	_fatfs_fat_init	;wreg free
  9778                           
  9779                           ;fat_format.c: 485: if (!fs->disk_io.read_media || !fs->disk_io.write_media)
  9780  00A2CC  EE20 F029          	lfsr	2,41
  9781  00A2D0  503C               	movf	fatfs_format_fat32@fs,w,c
  9782  00A2D2  26D9               	addwf	fsr2l,f,c
  9783  00A2D4  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9784  00A2D6  22DA               	addwfc	fsr2h,f,c
  9785  00A2D8  50DE               	movf	postinc2,w,c
  9786  00A2DA  10DD               	iorwf	postdec2,w,c
  9787  00A2DC  E009               	bz	l912
  9788  00A2DE  EE20 F02B          	lfsr	2,43
  9789  00A2E2  503C               	movf	fatfs_format_fat32@fs,w,c
  9790  00A2E4  26D9               	addwf	fsr2l,f,c
  9791  00A2E6  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9792  00A2E8  22DA               	addwfc	fsr2h,f,c
  9793  00A2EA  50DE               	movf	postinc2,w,c
  9794  00A2EC  10DD               	iorwf	postdec2,w,c
  9795  00A2EE  E103               	bnz	l11032
  9796  00A2F0                     l912:
  9797                           
  9798                           ;fat_format.c: 486: return (-1);
  9799  00A2F0  683C               	setf	?_fatfs_format_fat32,c
  9800  00A2F2  683D               	setf	?_fatfs_format_fat32+1,c
  9801  00A2F4  D159               	goto	l913
  9802  00A2F6                     l11032:
  9803                           
  9804                           ;fat_format.c: 489: fs->fat_type = FAT_TYPE_32;
  9805  00A2F6  EE20 F028          	lfsr	2,40
  9806  00A2FA  503C               	movf	fatfs_format_fat32@fs,w,c
  9807  00A2FC  26D9               	addwf	fsr2l,f,c
  9808  00A2FE  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9809  00A300  22DA               	addwfc	fsr2h,f,c
  9810  00A302  0E01               	movlw	1
  9811  00A304  6EDF               	movwf	indf2,c
  9812                           
  9813                           ;fat_format.c: 492: fs->fs_info_sector = 1;
  9814  00A306  EE20 F015          	lfsr	2,21
  9815  00A30A  503C               	movf	fatfs_format_fat32@fs,w,c
  9816  00A30C  26D9               	addwf	fsr2l,f,c
  9817  00A30E  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9818  00A310  22DA               	addwfc	fsr2h,f,c
  9819  00A312  0E01               	movlw	1
  9820  00A314  6EDE               	movwf	postinc2,c
  9821  00A316  6ADD               	clrf	postdec2,c
  9822                           
  9823                           ;fat_format.c: 493: fs->rootdir_first_cluster = 2;
  9824  00A318  EE20 F005          	lfsr	2,5
  9825  00A31C  503C               	movf	fatfs_format_fat32@fs,w,c
  9826  00A31E  26D9               	addwf	fsr2l,f,c
  9827  00A320  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9828  00A322  22DA               	addwfc	fsr2h,f,c
  9829  00A324  0E02               	movlw	2
  9830  00A326  6EDE               	movwf	postinc2,c
  9831  00A328  6ADE               	clrf	postinc2,c
  9832  00A32A  6ADE               	clrf	postinc2,c
  9833  00A32C  6ADD               	clrf	postdec2,c
  9834                           
  9835                           ;fat_format.c: 497: fs->lba_begin = 0;
  9836  00A32E  EE20 F017          	lfsr	2,23
  9837  00A332  503C               	movf	fatfs_format_fat32@fs,w,c
  9838  00A334  26D9               	addwf	fsr2l,f,c
  9839  00A336  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9840  00A338  22DA               	addwfc	fsr2h,f,c
  9841  00A33A  6ADE               	clrf	postinc2,c
  9842  00A33C  6ADE               	clrf	postinc2,c
  9843  00A33E  6ADE               	clrf	postinc2,c
  9844  00A340  6ADD               	clrf	postdec2,c
  9845                           
  9846                           ;fat_format.c: 498: if (!fatfs_create_boot_sector(fs, fs->lba_begin, volume_sectors, nam
      +                          e, 1))
  9847  00A342  C03D  F021         	movff	fatfs_format_fat32@fs+1,fatfs_create_boot_sector@fs+1
  9848  00A346  C03C  F020         	movff	fatfs_format_fat32@fs,fatfs_create_boot_sector@fs
  9849  00A34A  EE20 F017          	lfsr	2,23
  9850  00A34E  503C               	movf	fatfs_format_fat32@fs,w,c
  9851  00A350  26D9               	addwf	fsr2l,f,c
  9852  00A352  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9853  00A354  22DA               	addwfc	fsr2h,f,c
  9854  00A356  CFDE F022          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba
  9855  00A35A  CFDE F023          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba+1
  9856  00A35E  CFDE F024          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba+2
  9857  00A362  CFDE F025          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba+3
  9858  00A366  C03E  F026         	movff	fatfs_format_fat32@volume_sectors,fatfs_create_boot_sector@vol_sectors
  9859  00A36A  C03F  F027         	movff	fatfs_format_fat32@volume_sectors+1,fatfs_create_boot_sector@vol_sectors+1
  9860  00A36E  C040  F028         	movff	fatfs_format_fat32@volume_sectors+2,fatfs_create_boot_sector@vol_sectors+2
  9861  00A372  C041  F029         	movff	fatfs_format_fat32@volume_sectors+3,fatfs_create_boot_sector@vol_sectors+3
  9862  00A376  C043  F02B         	movff	fatfs_format_fat32@name+1,fatfs_create_boot_sector@name+1
  9863  00A37A  C042  F02A         	movff	fatfs_format_fat32@name,fatfs_create_boot_sector@name
  9864  00A37E  6A2D               	clrf	fatfs_create_boot_sector@is_fat32+1,c
  9865  00A380  0E01               	movlw	1
  9866  00A382  6E2C               	movwf	fatfs_create_boot_sector@is_fat32,c
  9867  00A384  EC5E  F070         	call	_fatfs_create_boot_sector	;wreg free
  9868  00A388  5021               	movf	?_fatfs_create_boot_sector+1,w,c
  9869  00A38A  1020               	iorwf	?_fatfs_create_boot_sector,w,c
  9870  00A38C  E101 D105          	bz	u12740
  9871                           
  9872                           ;fat_format.c: 502: fs->fat_begin_lba = fs->lba_begin + fs->reserved_sectors;
  9873                           
  9874                           ;fat_format.c: 499: return 0;
  9875  00A390  EE20 F017          	lfsr	2,23
  9876  00A394  503C               	movf	fatfs_format_fat32@fs,w,c
  9877  00A396  26D9               	addwf	fsr2l,f,c
  9878  00A398  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9879  00A39A  22DA               	addwfc	fsr2h,f,c
  9880  00A39C  CFDE F044          	movff	postinc2,??_fatfs_format_fat32
  9881  00A3A0  CFDE F045          	movff	postinc2,??_fatfs_format_fat32+1
  9882  00A3A4  CFDE F046          	movff	postinc2,??_fatfs_format_fat32+2
  9883  00A3A8  CFDE F047          	movff	postinc2,??_fatfs_format_fat32+3
  9884  00A3AC  EE20 F025          	lfsr	2,37
  9885  00A3B0  503C               	movf	fatfs_format_fat32@fs,w,c
  9886  00A3B2  26D9               	addwf	fsr2l,f,c
  9887  00A3B4  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9888  00A3B6  22DA               	addwfc	fsr2h,f,c
  9889  00A3B8  CFDE F048          	movff	postinc2,??_fatfs_format_fat32+4
  9890  00A3BC  CFDD F049          	movff	postdec2,??_fatfs_format_fat32+5
  9891  00A3C0  5048               	movf	??_fatfs_format_fat32+4,w,c
  9892  00A3C2  2444               	addwf	??_fatfs_format_fat32,w,c
  9893  00A3C4  6E4A               	movwf	(??_fatfs_format_fat32+6)& (0+255),c
  9894  00A3C6  5049               	movf	??_fatfs_format_fat32+5,w,c
  9895  00A3C8  2045               	addwfc	??_fatfs_format_fat32+1,w,c
  9896  00A3CA  6E4B               	movwf	(??_fatfs_format_fat32+7)& (0+255),c
  9897  00A3CC  0E00               	movlw	0
  9898  00A3CE  2046               	addwfc	??_fatfs_format_fat32+2,w,c
  9899  00A3D0  6E4C               	movwf	(??_fatfs_format_fat32+8)& (0+255),c
  9900  00A3D2  0E00               	movlw	0
  9901  00A3D4  2047               	addwfc	??_fatfs_format_fat32+3,w,c
  9902  00A3D6  6E4D               	movwf	(??_fatfs_format_fat32+9)& (0+255),c
  9903  00A3D8  EE20 F011          	lfsr	2,17
  9904  00A3DC  503C               	movf	fatfs_format_fat32@fs,w,c
  9905  00A3DE  26D9               	addwf	fsr2l,f,c
  9906  00A3E0  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9907  00A3E2  22DA               	addwfc	fsr2h,f,c
  9908  00A3E4  C04A  FFDE         	movff	??_fatfs_format_fat32+6,postinc2
  9909  00A3E8  C04B  FFDE         	movff	??_fatfs_format_fat32+7,postinc2
  9910  00A3EC  C04C  FFDE         	movff	??_fatfs_format_fat32+8,postinc2
  9911  00A3F0  C04D  FFDD         	movff	??_fatfs_format_fat32+9,postdec2
  9912  00A3F4  06D9               	decf	fsr2l,f,c
  9913  00A3F6  06D9               	decf	fsr2l,f,c
  9914                           
  9915                           ;fat_format.c: 505: fs->cluster_begin_lba = fs->fat_begin_lba + (fs->num_of_fats * fs->f
      +                          at_sectors);
  9916  00A3F8  EE20 F011          	lfsr	2,17
  9917  00A3FC  503C               	movf	fatfs_format_fat32@fs,w,c
  9918  00A3FE  26D9               	addwf	fsr2l,f,c
  9919  00A400  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9920  00A402  22DA               	addwfc	fsr2h,f,c
  9921  00A404  CFDE F044          	movff	postinc2,??_fatfs_format_fat32
  9922  00A408  CFDE F045          	movff	postinc2,??_fatfs_format_fat32+1
  9923  00A40C  CFDE F046          	movff	postinc2,??_fatfs_format_fat32+2
  9924  00A410  CFDE F047          	movff	postinc2,??_fatfs_format_fat32+3
  9925  00A414  EE20 F01B          	lfsr	2,27
  9926  00A418  503C               	movf	fatfs_format_fat32@fs,w,c
  9927  00A41A  26D9               	addwf	fsr2l,f,c
  9928  00A41C  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9929  00A41E  22DA               	addwfc	fsr2h,f,c
  9930  00A420  CFDE F048          	movff	postinc2,??_fatfs_format_fat32+4
  9931  00A424  CFDE F049          	movff	postinc2,??_fatfs_format_fat32+5
  9932  00A428  CFDE F04A          	movff	postinc2,??_fatfs_format_fat32+6
  9933  00A42C  CFDE F04B          	movff	postinc2,??_fatfs_format_fat32+7
  9934  00A430  EE20 F027          	lfsr	2,39
  9935  00A434  503C               	movf	fatfs_format_fat32@fs,w,c
  9936  00A436  26D9               	addwf	fsr2l,f,c
  9937  00A438  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9938  00A43A  22DA               	addwfc	fsr2h,f,c
  9939  00A43C  50DF               	movf	indf2,w,c
  9940  00A43E  6E4C               	movwf	(??_fatfs_format_fat32+8)& (0+255),c
  9941  00A440  C04C  F04D         	movff	??_fatfs_format_fat32+8,??_fatfs_format_fat32+9
  9942  00A444  6A4E               	clrf	(??_fatfs_format_fat32+10)& (0+255),c
  9943  00A446  6A4F               	clrf	(??_fatfs_format_fat32+11)& (0+255),c
  9944  00A448  6A50               	clrf	(??_fatfs_format_fat32+12)& (0+255),c
  9945  00A44A  504D               	movf	??_fatfs_format_fat32+9,w,c
  9946  00A44C  0248               	mulwf	??_fatfs_format_fat32+4,c
  9947  00A44E  CFF3 F051          	movff	prodl,??_fatfs_format_fat32+13
  9948  00A452  CFF4 F052          	movff	prodh,??_fatfs_format_fat32+14
  9949  00A456  6A53               	clrf	(??_fatfs_format_fat32+15)& (0+255),c
  9950  00A458  6A54               	clrf	(??_fatfs_format_fat32+16)& (0+255),c
  9951  00A45A  0249               	mulwf	??_fatfs_format_fat32+5,c
  9952  00A45C  50F3               	movf	243,w,c
  9953  00A45E  2652               	addwf	(??_fatfs_format_fat32+14)& (0+255),f,c
  9954  00A460  50F4               	movf	244,w,c
  9955  00A462  2253               	addwfc	(??_fatfs_format_fat32+15)& (0+255),f,c
  9956  00A464  0E00               	movlw	0
  9957  00A466  2254               	addwfc	(??_fatfs_format_fat32+16)& (0+255),f,c
  9958  00A468  504E               	movf	??_fatfs_format_fat32+10,w,c
  9959  00A46A  0248               	mulwf	??_fatfs_format_fat32+4,c
  9960  00A46C  50F3               	movf	243,w,c
  9961  00A46E  2652               	addwf	(??_fatfs_format_fat32+14)& (0+255),f,c
  9962  00A470  50F4               	movf	244,w,c
  9963  00A472  2253               	addwfc	(??_fatfs_format_fat32+15)& (0+255),f,c
  9964  00A474  0E00               	movlw	0
  9965  00A476  2254               	addwfc	(??_fatfs_format_fat32+16)& (0+255),f,c
  9966  00A478  504D               	movf	??_fatfs_format_fat32+9,w,c
  9967  00A47A  024A               	mulwf	??_fatfs_format_fat32+6,c
  9968  00A47C  50F3               	movf	243,w,c
  9969  00A47E  2653               	addwf	(??_fatfs_format_fat32+15)& (0+255),f,c
  9970  00A480  50F4               	movf	244,w,c
  9971  00A482  2254               	addwfc	(??_fatfs_format_fat32+16)& (0+255),f,c
  9972  00A484  504E               	movf	??_fatfs_format_fat32+10,w,c
  9973  00A486  0249               	mulwf	??_fatfs_format_fat32+5,c
  9974  00A488  50F3               	movf	243,w,c
  9975  00A48A  2653               	addwf	(??_fatfs_format_fat32+15)& (0+255),f,c
  9976  00A48C  50F4               	movf	244,w,c
  9977  00A48E  2254               	addwfc	(??_fatfs_format_fat32+16)& (0+255),f,c
  9978  00A490  504F               	movf	??_fatfs_format_fat32+11,w,c
  9979  00A492  0248               	mulwf	??_fatfs_format_fat32+4,c
  9980  00A494  50F3               	movf	243,w,c
  9981  00A496  2653               	addwf	(??_fatfs_format_fat32+15)& (0+255),f,c
  9982  00A498  50F4               	movf	244,w,c
  9983  00A49A  2254               	addwfc	(??_fatfs_format_fat32+16)& (0+255),f,c
  9984  00A49C  504B               	movf	??_fatfs_format_fat32+7,w,c
  9985  00A49E  024D               	mulwf	??_fatfs_format_fat32+9,c
  9986  00A4A0  50F3               	movf	243,w,c
  9987  00A4A2  2654               	addwf	(??_fatfs_format_fat32+16)& (0+255),f,c
  9988  00A4A4  504E               	movf	??_fatfs_format_fat32+10,w,c
  9989  00A4A6  024A               	mulwf	??_fatfs_format_fat32+6,c
  9990  00A4A8  50F3               	movf	243,w,c
  9991  00A4AA  2654               	addwf	(??_fatfs_format_fat32+16)& (0+255),f,c
  9992  00A4AC  504F               	movf	??_fatfs_format_fat32+11,w,c
  9993  00A4AE  0249               	mulwf	??_fatfs_format_fat32+5,c
  9994  00A4B0  50F3               	movf	243,w,c
  9995  00A4B2  2654               	addwf	(??_fatfs_format_fat32+16)& (0+255),f,c
  9996  00A4B4  5050               	movf	??_fatfs_format_fat32+12,w,c
  9997  00A4B6  0248               	mulwf	??_fatfs_format_fat32+4,c
  9998  00A4B8  50F3               	movf	243,w,c
  9999  00A4BA  2654               	addwf	(??_fatfs_format_fat32+16)& (0+255),f,c
 10000  00A4BC  5044               	movf	??_fatfs_format_fat32,w,c
 10001  00A4BE  2451               	addwf	??_fatfs_format_fat32+13,w,c
 10002  00A4C0  6E55               	movwf	(??_fatfs_format_fat32+17)& (0+255),c
 10003  00A4C2  5045               	movf	??_fatfs_format_fat32+1,w,c
 10004  00A4C4  2052               	addwfc	??_fatfs_format_fat32+14,w,c
 10005  00A4C6  6E56               	movwf	(??_fatfs_format_fat32+18)& (0+255),c
 10006  00A4C8  5046               	movf	??_fatfs_format_fat32+2,w,c
 10007  00A4CA  2053               	addwfc	??_fatfs_format_fat32+15,w,c
 10008  00A4CC  6E57               	movwf	(??_fatfs_format_fat32+19)& (0+255),c
 10009  00A4CE  5047               	movf	??_fatfs_format_fat32+3,w,c
 10010  00A4D0  2054               	addwfc	??_fatfs_format_fat32+16,w,c
 10011  00A4D2  6E58               	movwf	(??_fatfs_format_fat32+20)& (0+255),c
 10012  00A4D4  EE20 F001          	lfsr	2,1
 10013  00A4D8  503C               	movf	fatfs_format_fat32@fs,w,c
 10014  00A4DA  26D9               	addwf	fsr2l,f,c
 10015  00A4DC  503D               	movf	fatfs_format_fat32@fs+1,w,c
 10016  00A4DE  22DA               	addwfc	fsr2h,f,c
 10017  00A4E0  C055  FFDE         	movff	??_fatfs_format_fat32+17,postinc2
 10018  00A4E4  C056  FFDE         	movff	??_fatfs_format_fat32+18,postinc2
 10019  00A4E8  C057  FFDE         	movff	??_fatfs_format_fat32+19,postinc2
 10020  00A4EC  C058  FFDD         	movff	??_fatfs_format_fat32+20,postdec2
 10021  00A4F0  06D9               	decf	fsr2l,f,c
 10022  00A4F2  06D9               	decf	fsr2l,f,c
 10023                           
 10024                           ;fat_format.c: 508: if (!fatfs_create_fsinfo_sector(fs, fs->fs_info_sector))
 10025  00A4F4  C03D  F021         	movff	fatfs_format_fat32@fs+1,fatfs_create_fsinfo_sector@fs+1
 10026  00A4F8  C03C  F020         	movff	fatfs_format_fat32@fs,fatfs_create_fsinfo_sector@fs
 10027  00A4FC  EE20 F015          	lfsr	2,21
 10028  00A500  503C               	movf	fatfs_format_fat32@fs,w,c
 10029  00A502  26D9               	addwf	fsr2l,f,c
 10030  00A504  503D               	movf	fatfs_format_fat32@fs+1,w,c
 10031  00A506  22DA               	addwfc	fsr2h,f,c
 10032  00A508  CFDE F044          	movff	postinc2,??_fatfs_format_fat32
 10033  00A50C  CFDD F045          	movff	postdec2,??_fatfs_format_fat32+1
 10034  00A510  C044  F022         	movff	??_fatfs_format_fat32,fatfs_create_fsinfo_sector@sector_lba
 10035  00A514  C045  F023         	movff	??_fatfs_format_fat32+1,fatfs_create_fsinfo_sector@sector_lba+1
 10036  00A518  6A24               	clrf	fatfs_create_fsinfo_sector@sector_lba+2,c
 10037  00A51A  6A25               	clrf	fatfs_create_fsinfo_sector@sector_lba+3,c
 10038  00A51C  EC3A  F038         	call	_fatfs_create_fsinfo_sector	;wreg free
 10039  00A520  5021               	movf	?_fatfs_create_fsinfo_sector+1,w,c
 10040  00A522  1020               	iorwf	?_fatfs_create_fsinfo_sector,w,c
 10041  00A524  E03A               	bz	u12740
 10042                           
 10043                           ;fat_format.c: 512: if (!fatfs_erase_fat(fs, 1))
 10044                           
 10045                           ;fat_format.c: 509: return 0;
 10046  00A526  C03D  F021         	movff	fatfs_format_fat32@fs+1,fatfs_erase_fat@fs+1
 10047  00A52A  C03C  F020         	movff	fatfs_format_fat32@fs,fatfs_erase_fat@fs
 10048  00A52E  6A23               	clrf	fatfs_erase_fat@is_fat32+1,c
 10049  00A530  0E01               	movlw	1
 10050  00A532  6E22               	movwf	fatfs_erase_fat@is_fat32,c
 10051  00A534  EC34  F04B         	call	_fatfs_erase_fat	;wreg free
 10052  00A538  5021               	movf	?_fatfs_erase_fat+1,w,c
 10053  00A53A  1020               	iorwf	?_fatfs_erase_fat,w,c
 10054  00A53C  E02E               	bz	u12740
 10055                           
 10056                           ;fat_format.c: 516: if (!fatfs_erase_sectors(fs, fatfs_lba_of_cluster(fs, fs->rootdir_fi
      +                          rst_cluster), fs->sectors_per_cluster))
 10057                           
 10058                           ;fat_format.c: 513: return 0;
 10059  00A53E  C03D  F021         	movff	fatfs_format_fat32@fs+1,fatfs_erase_sectors@fs+1
 10060  00A542  C03C  F020         	movff	fatfs_format_fat32@fs,fatfs_erase_sectors@fs
 10061  00A546  C03D  F002         	movff	fatfs_format_fat32@fs+1,fatfs_lba_of_cluster@fs+1
 10062  00A54A  C03C  F001         	movff	fatfs_format_fat32@fs,fatfs_lba_of_cluster@fs
 10063  00A54E  EE20 F005          	lfsr	2,5
 10064  00A552  503C               	movf	fatfs_format_fat32@fs,w,c
 10065  00A554  26D9               	addwf	fsr2l,f,c
 10066  00A556  503D               	movf	fatfs_format_fat32@fs+1,w,c
 10067  00A558  22DA               	addwfc	fsr2h,f,c
 10068  00A55A  CFDE F003          	movff	postinc2,fatfs_lba_of_cluster@Cluster_Number
 10069  00A55E  CFDE F004          	movff	postinc2,fatfs_lba_of_cluster@Cluster_Number+1
 10070  00A562  CFDE F005          	movff	postinc2,fatfs_lba_of_cluster@Cluster_Number+2
 10071  00A566  CFDE F006          	movff	postinc2,fatfs_lba_of_cluster@Cluster_Number+3
 10072  00A56A  EC4C  F03E         	call	_fatfs_lba_of_cluster	;wreg free
 10073  00A56E  C001  F022         	movff	?_fatfs_lba_of_cluster,fatfs_erase_sectors@lba
 10074  00A572  C002  F023         	movff	?_fatfs_lba_of_cluster+1,fatfs_erase_sectors@lba+1
 10075  00A576  C003  F024         	movff	?_fatfs_lba_of_cluster+2,fatfs_erase_sectors@lba+2
 10076  00A57A  C004  F025         	movff	?_fatfs_lba_of_cluster+3,fatfs_erase_sectors@lba+3
 10077  00A57E  C03C  FFD9         	movff	fatfs_format_fat32@fs,fsr2l
 10078  00A582  C03D  FFDA         	movff	fatfs_format_fat32@fs+1,fsr2h
 10079  00A586  50DF               	movf	indf2,w,c
 10080  00A588  6E44               	movwf	??_fatfs_format_fat32& (0+255),c
 10081  00A58A  5044               	movf	??_fatfs_format_fat32,w,c
 10082  00A58C  6E26               	movwf	fatfs_erase_sectors@count,c
 10083  00A58E  6A27               	clrf	fatfs_erase_sectors@count+1,c
 10084  00A590  EC65  F02D         	call	_fatfs_erase_sectors	;wreg free
 10085  00A594  5021               	movf	?_fatfs_erase_sectors+1,w,c
 10086  00A596  1020               	iorwf	?_fatfs_erase_sectors,w,c
 10087  00A598  E103               	bnz	l11062
 10088  00A59A                     u12740:
 10089                           
 10090                           ;fat_format.c: 517: return 0;
 10091  00A59A  0E00               	movlw	0
 10092  00A59C  6E3D               	movwf	?_fatfs_format_fat32+1,c
 10093  00A59E  D003               	goto	L23
 10094  00A5A0                     l11062:
 10095                           
 10096                           ;fat_format.c: 519: return 1;
 10097  00A5A0  0E00               	movlw	0
 10098  00A5A2  6E3D               	movwf	?_fatfs_format_fat32+1,c
 10099  00A5A4  0E01               	movlw	1
 10100  00A5A6                     L23:
 10101  00A5A6  6E3C               	movwf	?_fatfs_format_fat32,c
 10102  00A5A8                     l913:
 10103  00A5A8  0012               	return	
 10104  00A5AA                     __end_of_fatfs_format_fat32:
 10105                           	opt stack 0
 10106                           tosu	equ	0xFFF
 10107                           tosh	equ	0xFFE
 10108                           tosl	equ	0xFFD
 10109                           pclath	equ	0xFFA
 10110                           tblptru	equ	0xFF8
 10111                           tblptrh	equ	0xFF7
 10112                           tblptrl	equ	0xFF6
 10113                           tablat	equ	0xFF5
 10114                           prodh	equ	0xFF4
 10115                           prodl	equ	0xFF3
 10116                           indf0	equ	0xFEF
 10117                           postinc0	equ	0xFEE
 10118                           fsr0h	equ	0xFEA
 10119                           fsr0l	equ	0xFE9
 10120                           wreg	equ	0xFE8
 10121                           indf1	equ	0xFE7
 10122                           postinc1	equ	0xFE6
 10123                           postdec1	equ	0xFE5
 10124                           fsr1h	equ	0xFE2
 10125                           fsr1l	equ	0xFE1
 10126                           indf2	equ	0xFDF
 10127                           postinc2	equ	0xFDE
 10128                           postdec2	equ	0xFDD
 10129                           fsr2h	equ	0xFDA
 10130                           fsr2l	equ	0xFD9
 10131                           status	equ	0xFD8
 10132                           
 10133 ;; *************** function _fatfs_create_fsinfo_sector *****************
 10134 ;; Defined at:
 10135 ;;		line 351 in file "fat_format.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;  fs              2   31[COMRAM] PTR struct fatfs
 10138 ;;		 -> _fs(1095), 
 10139 ;;  sector_lba      4   33[COMRAM] unsigned long 
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;		None
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  2   31[COMRAM] int 
 10144 ;; Registers used:
 10145 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10151 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10153 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10154 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10155 ;;Total ram usage:       10 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:    3
 10158 ;; This function calls:
 10159 ;;		_media_write
 10160 ;;		_memset
 10161 ;; This function is called by:
 10162 ;;		_fatfs_format_fat32
 10163 ;; This function uses a non-reentrant model
 10164 ;;
 10165                           
 10166                           	psect	text24
 10167  007074                     __ptext24:
 10168                           	opt stack 0
 10169  007074                     _fatfs_create_fsinfo_sector:
 10170                           	opt stack 22
 10171                           
 10172                           ;fat_format.c: 354: memset(fs->currentsector.sector, 0, 512);
 10173                           
 10174                           ;incstack = 0
 10175  007074  0E31               	movlw	49
 10176  007076  2420               	addwf	fatfs_create_fsinfo_sector@fs,w,c
 10177  007078  6E01               	movwf	memset@p1,c
 10178  00707A  0E00               	movlw	0
 10179  00707C  2021               	addwfc	fatfs_create_fsinfo_sector@fs+1,w,c
 10180  00707E  6E02               	movwf	memset@p1+1,c
 10181  007080  6A04               	clrf	memset@c+1,c
 10182  007082  6A03               	clrf	memset@c,c
 10183  007084  0E02               	movlw	2
 10184  007086  6E06               	movwf	memset@n+1,c
 10185  007088  0E00               	movlw	0
 10186  00708A  6A05               	clrf	memset@n,c
 10187  00708C  EC1A  F020         	call	_memset	;wreg free
 10188                           
 10189                           ;fat_format.c: 357: fs->currentsector.sector[0] = 0x52;
 10190  007090  EE20 F031          	lfsr	2,49
 10191  007094  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10192  007096  26D9               	addwf	fsr2l,f,c
 10193  007098  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10194  00709A  22DA               	addwfc	fsr2h,f,c
 10195  00709C  0E52               	movlw	82
 10196  00709E  6EDF               	movwf	indf2,c
 10197                           
 10198                           ;fat_format.c: 358: fs->currentsector.sector[1] = 0x52;
 10199  0070A0  EE20 F032          	lfsr	2,50
 10200  0070A4  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10201  0070A6  26D9               	addwf	fsr2l,f,c
 10202  0070A8  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10203  0070AA  22DA               	addwfc	fsr2h,f,c
 10204  0070AC  0E52               	movlw	82
 10205  0070AE  6EDF               	movwf	indf2,c
 10206                           
 10207                           ;fat_format.c: 359: fs->currentsector.sector[2] = 0x61;
 10208  0070B0  EE20 F033          	lfsr	2,51
 10209  0070B4  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10210  0070B6  26D9               	addwf	fsr2l,f,c
 10211  0070B8  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10212  0070BA  22DA               	addwfc	fsr2h,f,c
 10213  0070BC  0E61               	movlw	97
 10214  0070BE  6EDF               	movwf	indf2,c
 10215                           
 10216                           ;fat_format.c: 360: fs->currentsector.sector[3] = 0x41;
 10217  0070C0  EE20 F034          	lfsr	2,52
 10218  0070C4  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10219  0070C6  26D9               	addwf	fsr2l,f,c
 10220  0070C8  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10221  0070CA  22DA               	addwfc	fsr2h,f,c
 10222  0070CC  0E41               	movlw	65
 10223  0070CE  6EDF               	movwf	indf2,c
 10224                           
 10225                           ;fat_format.c: 363: fs->currentsector.sector[484] = 0x72;
 10226  0070D0  EE22 F015          	lfsr	2,533
 10227  0070D4  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10228  0070D6  26D9               	addwf	fsr2l,f,c
 10229  0070D8  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10230  0070DA  22DA               	addwfc	fsr2h,f,c
 10231  0070DC  0E72               	movlw	114
 10232  0070DE  6EDF               	movwf	indf2,c
 10233                           
 10234                           ;fat_format.c: 364: fs->currentsector.sector[485] = 0x72;
 10235  0070E0  EE22 F016          	lfsr	2,534
 10236  0070E4  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10237  0070E6  26D9               	addwf	fsr2l,f,c
 10238  0070E8  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10239  0070EA  22DA               	addwfc	fsr2h,f,c
 10240  0070EC  0E72               	movlw	114
 10241  0070EE  6EDF               	movwf	indf2,c
 10242                           
 10243                           ;fat_format.c: 365: fs->currentsector.sector[486] = 0x41;
 10244  0070F0  EE22 F017          	lfsr	2,535
 10245  0070F4  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10246  0070F6  26D9               	addwf	fsr2l,f,c
 10247  0070F8  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10248  0070FA  22DA               	addwfc	fsr2h,f,c
 10249  0070FC  0E41               	movlw	65
 10250  0070FE  6EDF               	movwf	indf2,c
 10251                           
 10252                           ;fat_format.c: 366: fs->currentsector.sector[487] = 0x61;
 10253  007100  EE22 F018          	lfsr	2,536
 10254  007104  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10255  007106  26D9               	addwf	fsr2l,f,c
 10256  007108  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10257  00710A  22DA               	addwfc	fsr2h,f,c
 10258  00710C  0E61               	movlw	97
 10259  00710E  6EDF               	movwf	indf2,c
 10260                           
 10261                           ;fat_format.c: 369: fs->currentsector.sector[488] = 0xFF;
 10262  007110  EE22 F019          	lfsr	2,537
 10263  007114  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10264  007116  26D9               	addwf	fsr2l,f,c
 10265  007118  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10266  00711A  22DA               	addwfc	fsr2h,f,c
 10267  00711C  68DF               	setf	indf2,c
 10268                           
 10269                           ;fat_format.c: 370: fs->currentsector.sector[489] = 0xFF;
 10270  00711E  EE22 F01A          	lfsr	2,538
 10271  007122  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10272  007124  26D9               	addwf	fsr2l,f,c
 10273  007126  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10274  007128  22DA               	addwfc	fsr2h,f,c
 10275  00712A  68DF               	setf	indf2,c
 10276                           
 10277                           ;fat_format.c: 371: fs->currentsector.sector[490] = 0xFF;
 10278  00712C  EE22 F01B          	lfsr	2,539
 10279  007130  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10280  007132  26D9               	addwf	fsr2l,f,c
 10281  007134  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10282  007136  22DA               	addwfc	fsr2h,f,c
 10283  007138  68DF               	setf	indf2,c
 10284                           
 10285                           ;fat_format.c: 372: fs->currentsector.sector[491] = 0xFF;
 10286  00713A  EE22 F01C          	lfsr	2,540
 10287  00713E  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10288  007140  26D9               	addwf	fsr2l,f,c
 10289  007142  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10290  007144  22DA               	addwfc	fsr2h,f,c
 10291  007146  68DF               	setf	indf2,c
 10292                           
 10293                           ;fat_format.c: 375: fs->currentsector.sector[492] = 0xFF;
 10294  007148  EE22 F01D          	lfsr	2,541
 10295  00714C  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10296  00714E  26D9               	addwf	fsr2l,f,c
 10297  007150  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10298  007152  22DA               	addwfc	fsr2h,f,c
 10299  007154  68DF               	setf	indf2,c
 10300                           
 10301                           ;fat_format.c: 376: fs->currentsector.sector[493] = 0xFF;
 10302  007156  EE22 F01E          	lfsr	2,542
 10303  00715A  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10304  00715C  26D9               	addwf	fsr2l,f,c
 10305  00715E  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10306  007160  22DA               	addwfc	fsr2h,f,c
 10307  007162  68DF               	setf	indf2,c
 10308                           
 10309                           ;fat_format.c: 377: fs->currentsector.sector[494] = 0xFF;
 10310  007164  EE22 F01F          	lfsr	2,543
 10311  007168  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10312  00716A  26D9               	addwf	fsr2l,f,c
 10313  00716C  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10314  00716E  22DA               	addwfc	fsr2h,f,c
 10315  007170  68DF               	setf	indf2,c
 10316                           
 10317                           ;fat_format.c: 378: fs->currentsector.sector[495] = 0xFF;
 10318  007172  EE22 F020          	lfsr	2,544
 10319  007176  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10320  007178  26D9               	addwf	fsr2l,f,c
 10321  00717A  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10322  00717C  22DA               	addwfc	fsr2h,f,c
 10323  00717E  68DF               	setf	indf2,c
 10324                           
 10325                           ;fat_format.c: 381: fs->currentsector.sector[510] = 0x55;
 10326  007180  EE22 F02F          	lfsr	2,559
 10327  007184  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10328  007186  26D9               	addwf	fsr2l,f,c
 10329  007188  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10330  00718A  22DA               	addwfc	fsr2h,f,c
 10331  00718C  0E55               	movlw	85
 10332  00718E  6EDF               	movwf	indf2,c
 10333                           
 10334                           ;fat_format.c: 382: fs->currentsector.sector[511] = 0xAA;
 10335  007190  EE22 F030          	lfsr	2,560
 10336  007194  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10337  007196  26D9               	addwf	fsr2l,f,c
 10338  007198  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10339  00719A  22DA               	addwfc	fsr2h,f,c
 10340  00719C  0EAA               	movlw	170
 10341  00719E  6EDF               	movwf	indf2,c
 10342                           
 10343                           ;fat_format.c: 384: if (fs->disk_io.write_media(sector_lba, fs->currentsector.sector, 1)
      +                          )
 10344  0071A0  C022  F009         	movff	fatfs_create_fsinfo_sector@sector_lba,media_write@sector
 10345  0071A4  C023  F00A         	movff	fatfs_create_fsinfo_sector@sector_lba+1,media_write@sector+1
 10346  0071A8  C024  F00B         	movff	fatfs_create_fsinfo_sector@sector_lba+2,media_write@sector+2
 10347  0071AC  C025  F00C         	movff	fatfs_create_fsinfo_sector@sector_lba+3,media_write@sector+3
 10348  0071B0  0E31               	movlw	49
 10349  0071B2  2420               	addwf	fatfs_create_fsinfo_sector@fs,w,c
 10350  0071B4  6E26               	movwf	??_fatfs_create_fsinfo_sector& (0+255),c
 10351  0071B6  0E00               	movlw	0
 10352  0071B8  2021               	addwfc	fatfs_create_fsinfo_sector@fs+1,w,c
 10353  0071BA  6E27               	movwf	(??_fatfs_create_fsinfo_sector+1)& (0+255),c
 10354  0071BC  0E20               	movlw	32
 10355  0071BE  6E0F               	movwf	media_write@buffer+2,c
 10356  0071C0  C027  F00E         	movff	??_fatfs_create_fsinfo_sector+1,media_write@buffer+1
 10357  0071C4  C026  F00D         	movff	??_fatfs_create_fsinfo_sector,media_write@buffer
 10358  0071C8  0E01               	movlw	1
 10359  0071CA  6E10               	movwf	media_write@sector_count,c
 10360  0071CC  6A11               	clrf	media_write@sector_count+1,c
 10361  0071CE  6A12               	clrf	media_write@sector_count+2,c
 10362  0071D0  6A13               	clrf	media_write@sector_count+3,c
 10363  0071D2  EE20 F02B          	lfsr	2,43
 10364  0071D6  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10365  0071D8  26D9               	addwf	fsr2l,f,c
 10366  0071DA  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10367  0071DC  22DA               	addwfc	fsr2h,f,c
 10368  0071DE  CFDE F028          	movff	postinc2,??_fatfs_create_fsinfo_sector+2
 10369  0071E2  CFDD F029          	movff	postdec2,??_fatfs_create_fsinfo_sector+3
 10370  0071E6  D801               	call	u11328
 10371  0071E8  D009               	goto	u11329
 10372  0071EA                     u11328:
 10373  0071EA  0005               	push	
 10374  0071EC  6EFA               	movwf	pclath,c
 10375  0071EE  5028               	movf	??_fatfs_create_fsinfo_sector+2,w,c
 10376  0071F0  6EFD               	movwf	tosl,c
 10377  0071F2  5029               	movf	??_fatfs_create_fsinfo_sector+3,w,c
 10378  0071F4  6EFE               	movwf	tosh,c
 10379  0071F6  6AFF               	clrf	tosu,c
 10380  0071F8  50FA               	movf	pclath,w,c
 10381  0071FA  0012               	return		;indir
 10382  0071FC                     u11329:
 10383  0071FC  500A               	movf	?_media_write+1,w,c
 10384  0071FE  1009               	iorwf	?_media_write,w,c
 10385  007200  E004               	bz	l10172
 10386                           
 10387                           ;fat_format.c: 385: return 1;
 10388  007202  0E00               	movlw	0
 10389  007204  6E21               	movwf	?_fatfs_create_fsinfo_sector+1,c
 10390  007206  0E01               	movlw	1
 10391  007208  D002               	goto	L24
 10392  00720A                     l10172:
 10393                           
 10394                           ;fat_format.c: 386: else
 10395                           ;fat_format.c: 387: return 0;
 10396  00720A  0E00               	movlw	0
 10397  00720C  6E21               	movwf	?_fatfs_create_fsinfo_sector+1,c
 10398  00720E                     L24:
 10399  00720E  6E20               	movwf	?_fatfs_create_fsinfo_sector,c
 10400  007210  0012               	return	
 10401  007212                     __end_of_fatfs_create_fsinfo_sector:
 10402                           	opt stack 0
 10403                           tosu	equ	0xFFF
 10404                           tosh	equ	0xFFE
 10405                           tosl	equ	0xFFD
 10406                           pclath	equ	0xFFA
 10407                           tblptru	equ	0xFF8
 10408                           tblptrh	equ	0xFF7
 10409                           tblptrl	equ	0xFF6
 10410                           tablat	equ	0xFF5
 10411                           prodh	equ	0xFF4
 10412                           prodl	equ	0xFF3
 10413                           indf0	equ	0xFEF
 10414                           postinc0	equ	0xFEE
 10415                           fsr0h	equ	0xFEA
 10416                           fsr0l	equ	0xFE9
 10417                           wreg	equ	0xFE8
 10418                           indf1	equ	0xFE7
 10419                           postinc1	equ	0xFE6
 10420                           postdec1	equ	0xFE5
 10421                           fsr1h	equ	0xFE2
 10422                           fsr1l	equ	0xFE1
 10423                           indf2	equ	0xFDF
 10424                           postinc2	equ	0xFDE
 10425                           postdec2	equ	0xFDD
 10426                           fsr2h	equ	0xFDA
 10427                           fsr2l	equ	0xFD9
 10428                           status	equ	0xFD8
 10429                           
 10430 ;; *************** function _fatfs_format_fat16 *****************
 10431 ;; Defined at:
 10432 ;;		line 426 in file "fat_format.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;  fs              2   59[COMRAM] PTR struct fatfs
 10435 ;;		 -> _fs(1095), 
 10436 ;;  volume_secto    4   61[COMRAM] unsigned long 
 10437 ;;  name            2   65[COMRAM] PTR const unsigned char 
 10438 ;;		 -> STR_60(6), 
 10439 ;; Auto vars:     Size  Location     Type
 10440 ;;		None
 10441 ;; Return value:  Size  Location     Type
 10442 ;;                  2   59[COMRAM] int 
 10443 ;; Registers used:
 10444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10445 ;; Tracked objects:
 10446 ;;		On entry : 0/0
 10447 ;;		On exit  : 0/0
 10448 ;;		Unchanged: 0/0
 10449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10450 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10452 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10453 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10454 ;;Total ram usage:       29 bytes
 10455 ;; Hardware stack levels used:    1
 10456 ;; Hardware stack levels required when called:    4
 10457 ;; This function calls:
 10458 ;;		_fatfs_create_boot_sector
 10459 ;;		_fatfs_erase_fat
 10460 ;;		_fatfs_erase_sectors
 10461 ;;		_fatfs_fat_init
 10462 ;; This function is called by:
 10463 ;;		_fatfs_format
 10464 ;; This function uses a non-reentrant model
 10465 ;;
 10466                           
 10467                           	psect	text25
 10468  00BC32                     __ptext25:
 10469                           	opt stack 0
 10470  00BC32                     _fatfs_format_fat16:
 10471                           	opt stack 22
 10472                           
 10473                           ;fat_format.c: 428: fs->currentsector.address = 0xFFFFFFFF;
 10474                           
 10475                           ;incstack = 0
 10476  00BC32  EE22 F031          	lfsr	2,561
 10477  00BC36  503C               	movf	fatfs_format_fat16@fs,w,c
 10478  00BC38  26D9               	addwf	fsr2l,f,c
 10479  00BC3A  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10480  00BC3C  22DA               	addwfc	fsr2h,f,c
 10481  00BC3E  68DE               	setf	postinc2,c
 10482  00BC40  68DE               	setf	postinc2,c
 10483  00BC42  68DE               	setf	postinc2,c
 10484  00BC44  68DD               	setf	postdec2,c
 10485                           
 10486                           ;fat_format.c: 429: fs->currentsector.dirty = 0;
 10487  00BC46  EE22 F035          	lfsr	2,565
 10488  00BC4A  503C               	movf	fatfs_format_fat16@fs,w,c
 10489  00BC4C  26D9               	addwf	fsr2l,f,c
 10490  00BC4E  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10491  00BC50  22DA               	addwfc	fsr2h,f,c
 10492  00BC52  6ADE               	clrf	postinc2,c
 10493  00BC54  6ADD               	clrf	postdec2,c
 10494                           
 10495                           ;fat_format.c: 431: fs->next_free_cluster = 0;
 10496  00BC56  EE20 F01F          	lfsr	2,31
 10497  00BC5A  503C               	movf	fatfs_format_fat16@fs,w,c
 10498  00BC5C  26D9               	addwf	fsr2l,f,c
 10499  00BC5E  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10500  00BC60  22DA               	addwfc	fsr2h,f,c
 10501  00BC62  6ADE               	clrf	postinc2,c
 10502  00BC64  6ADE               	clrf	postinc2,c
 10503  00BC66  6ADE               	clrf	postinc2,c
 10504  00BC68  6ADD               	clrf	postdec2,c
 10505                           
 10506                           ;fat_format.c: 433: fatfs_fat_init(fs);
 10507  00BC6A  C03D  F00A         	movff	fatfs_format_fat16@fs+1,fatfs_fat_init@fs+1
 10508  00BC6E  C03C  F009         	movff	fatfs_format_fat16@fs,fatfs_fat_init@fs
 10509  00BC72  EC6B  F042         	call	_fatfs_fat_init	;wreg free
 10510                           
 10511                           ;fat_format.c: 436: if (!fs->disk_io.read_media || !fs->disk_io.write_media)
 10512  00BC76  EE20 F029          	lfsr	2,41
 10513  00BC7A  503C               	movf	fatfs_format_fat16@fs,w,c
 10514  00BC7C  26D9               	addwf	fsr2l,f,c
 10515  00BC7E  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10516  00BC80  22DA               	addwfc	fsr2h,f,c
 10517  00BC82  50DE               	movf	postinc2,w,c
 10518  00BC84  10DD               	iorwf	postdec2,w,c
 10519  00BC86  E009               	bz	l903
 10520  00BC88  EE20 F02B          	lfsr	2,43
 10521  00BC8C  503C               	movf	fatfs_format_fat16@fs,w,c
 10522  00BC8E  26D9               	addwf	fsr2l,f,c
 10523  00BC90  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10524  00BC92  22DA               	addwfc	fsr2h,f,c
 10525  00BC94  50DE               	movf	postinc2,w,c
 10526  00BC96  10DD               	iorwf	postdec2,w,c
 10527  00BC98  E103               	bnz	l10994
 10528  00BC9A                     l903:
 10529                           
 10530                           ;fat_format.c: 437: return (-1);
 10531  00BC9A  683C               	setf	?_fatfs_format_fat16,c
 10532  00BC9C  683D               	setf	?_fatfs_format_fat16+1,c
 10533  00BC9E  D1F8               	goto	l904
 10534  00BCA0                     l10994:
 10535                           
 10536                           ;fat_format.c: 440: fs->fat_type = FAT_TYPE_16;
 10537  00BCA0  EE20 F028          	lfsr	2,40
 10538  00BCA4  503C               	movf	fatfs_format_fat16@fs,w,c
 10539  00BCA6  26D9               	addwf	fsr2l,f,c
 10540  00BCA8  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10541  00BCAA  22DA               	addwfc	fsr2h,f,c
 10542  00BCAC  6ADF               	clrf	indf2,c
 10543                           
 10544                           ;fat_format.c: 443: fs->fs_info_sector = 0;
 10545  00BCAE  EE20 F015          	lfsr	2,21
 10546  00BCB2  503C               	movf	fatfs_format_fat16@fs,w,c
 10547  00BCB4  26D9               	addwf	fsr2l,f,c
 10548  00BCB6  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10549  00BCB8  22DA               	addwfc	fsr2h,f,c
 10550  00BCBA  6ADE               	clrf	postinc2,c
 10551  00BCBC  6ADD               	clrf	postdec2,c
 10552                           
 10553                           ;fat_format.c: 444: fs->rootdir_first_cluster = 0;
 10554  00BCBE  EE20 F005          	lfsr	2,5
 10555  00BCC2  503C               	movf	fatfs_format_fat16@fs,w,c
 10556  00BCC4  26D9               	addwf	fsr2l,f,c
 10557  00BCC6  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10558  00BCC8  22DA               	addwfc	fsr2h,f,c
 10559  00BCCA  6ADE               	clrf	postinc2,c
 10560  00BCCC  6ADE               	clrf	postinc2,c
 10561  00BCCE  6ADE               	clrf	postinc2,c
 10562  00BCD0  6ADD               	clrf	postdec2,c
 10563                           
 10564                           ;fat_format.c: 448: fs->lba_begin = 0;
 10565  00BCD2  EE20 F017          	lfsr	2,23
 10566  00BCD6  503C               	movf	fatfs_format_fat16@fs,w,c
 10567  00BCD8  26D9               	addwf	fsr2l,f,c
 10568  00BCDA  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10569  00BCDC  22DA               	addwfc	fsr2h,f,c
 10570  00BCDE  6ADE               	clrf	postinc2,c
 10571  00BCE0  6ADE               	clrf	postinc2,c
 10572  00BCE2  6ADE               	clrf	postinc2,c
 10573  00BCE4  6ADD               	clrf	postdec2,c
 10574                           
 10575                           ;fat_format.c: 449: if (!fatfs_create_boot_sector(fs, fs->lba_begin, volume_sectors, nam
      +                          e, 0))
 10576  00BCE6  C03D  F021         	movff	fatfs_format_fat16@fs+1,fatfs_create_boot_sector@fs+1
 10577  00BCEA  C03C  F020         	movff	fatfs_format_fat16@fs,fatfs_create_boot_sector@fs
 10578  00BCEE  EE20 F017          	lfsr	2,23
 10579  00BCF2  503C               	movf	fatfs_format_fat16@fs,w,c
 10580  00BCF4  26D9               	addwf	fsr2l,f,c
 10581  00BCF6  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10582  00BCF8  22DA               	addwfc	fsr2h,f,c
 10583  00BCFA  CFDE F022          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba
 10584  00BCFE  CFDE F023          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba+1
 10585  00BD02  CFDE F024          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba+2
 10586  00BD06  CFDE F025          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba+3
 10587  00BD0A  C03E  F026         	movff	fatfs_format_fat16@volume_sectors,fatfs_create_boot_sector@vol_sectors
 10588  00BD0E  C03F  F027         	movff	fatfs_format_fat16@volume_sectors+1,fatfs_create_boot_sector@vol_sectors+1
 10589  00BD12  C040  F028         	movff	fatfs_format_fat16@volume_sectors+2,fatfs_create_boot_sector@vol_sectors+2
 10590  00BD16  C041  F029         	movff	fatfs_format_fat16@volume_sectors+3,fatfs_create_boot_sector@vol_sectors+3
 10591  00BD1A  C043  F02B         	movff	fatfs_format_fat16@name+1,fatfs_create_boot_sector@name+1
 10592  00BD1E  C042  F02A         	movff	fatfs_format_fat16@name,fatfs_create_boot_sector@name
 10593  00BD22  0E00               	movlw	0
 10594  00BD24  6A2D               	clrf	fatfs_create_boot_sector@is_fat32+1,c
 10595  00BD26  6A2C               	clrf	fatfs_create_boot_sector@is_fat32,c
 10596  00BD28  EC5E  F070         	call	_fatfs_create_boot_sector	;wreg free
 10597  00BD2C  5021               	movf	?_fatfs_create_boot_sector+1,w,c
 10598  00BD2E  1020               	iorwf	?_fatfs_create_boot_sector,w,c
 10599  00BD30  E101 D1A7          	bz	u12680
 10600                           
 10601                           ;fat_format.c: 453: fs->rootdir_first_sector = fs->reserved_sectors + (fs->num_of_fats *
      +                           fs->fat_sectors);
 10602                           
 10603                           ;fat_format.c: 450: return 0;
 10604  00BD34  EE20 F01B          	lfsr	2,27
 10605  00BD38  503C               	movf	fatfs_format_fat16@fs,w,c
 10606  00BD3A  26D9               	addwf	fsr2l,f,c
 10607  00BD3C  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10608  00BD3E  22DA               	addwfc	fsr2h,f,c
 10609  00BD40  CFDE F044          	movff	postinc2,??_fatfs_format_fat16
 10610  00BD44  CFDE F045          	movff	postinc2,??_fatfs_format_fat16+1
 10611  00BD48  CFDE F046          	movff	postinc2,??_fatfs_format_fat16+2
 10612  00BD4C  CFDE F047          	movff	postinc2,??_fatfs_format_fat16+3
 10613  00BD50  EE20 F027          	lfsr	2,39
 10614  00BD54  503C               	movf	fatfs_format_fat16@fs,w,c
 10615  00BD56  26D9               	addwf	fsr2l,f,c
 10616  00BD58  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10617  00BD5A  22DA               	addwfc	fsr2h,f,c
 10618  00BD5C  50DF               	movf	indf2,w,c
 10619  00BD5E  6E48               	movwf	(??_fatfs_format_fat16+4)& (0+255),c
 10620  00BD60  C048  F049         	movff	??_fatfs_format_fat16+4,??_fatfs_format_fat16+5
 10621  00BD64  6A4A               	clrf	(??_fatfs_format_fat16+6)& (0+255),c
 10622  00BD66  6A4B               	clrf	(??_fatfs_format_fat16+7)& (0+255),c
 10623  00BD68  6A4C               	clrf	(??_fatfs_format_fat16+8)& (0+255),c
 10624  00BD6A  5049               	movf	??_fatfs_format_fat16+5,w,c
 10625  00BD6C  0244               	mulwf	??_fatfs_format_fat16,c
 10626  00BD6E  CFF3 F04D          	movff	prodl,??_fatfs_format_fat16+9
 10627  00BD72  CFF4 F04E          	movff	prodh,??_fatfs_format_fat16+10
 10628  00BD76  6A4F               	clrf	(??_fatfs_format_fat16+11)& (0+255),c
 10629  00BD78  6A50               	clrf	(??_fatfs_format_fat16+12)& (0+255),c
 10630  00BD7A  0245               	mulwf	??_fatfs_format_fat16+1,c
 10631  00BD7C  50F3               	movf	243,w,c
 10632  00BD7E  264E               	addwf	(??_fatfs_format_fat16+10)& (0+255),f,c
 10633  00BD80  50F4               	movf	244,w,c
 10634  00BD82  224F               	addwfc	(??_fatfs_format_fat16+11)& (0+255),f,c
 10635  00BD84  0E00               	movlw	0
 10636  00BD86  2250               	addwfc	(??_fatfs_format_fat16+12)& (0+255),f,c
 10637  00BD88  504A               	movf	??_fatfs_format_fat16+6,w,c
 10638  00BD8A  0244               	mulwf	??_fatfs_format_fat16,c
 10639  00BD8C  50F3               	movf	243,w,c
 10640  00BD8E  264E               	addwf	(??_fatfs_format_fat16+10)& (0+255),f,c
 10641  00BD90  50F4               	movf	244,w,c
 10642  00BD92  224F               	addwfc	(??_fatfs_format_fat16+11)& (0+255),f,c
 10643  00BD94  0E00               	movlw	0
 10644  00BD96  2250               	addwfc	(??_fatfs_format_fat16+12)& (0+255),f,c
 10645  00BD98  5049               	movf	??_fatfs_format_fat16+5,w,c
 10646  00BD9A  0246               	mulwf	??_fatfs_format_fat16+2,c
 10647  00BD9C  50F3               	movf	243,w,c
 10648  00BD9E  264F               	addwf	(??_fatfs_format_fat16+11)& (0+255),f,c
 10649  00BDA0  50F4               	movf	244,w,c
 10650  00BDA2  2250               	addwfc	(??_fatfs_format_fat16+12)& (0+255),f,c
 10651  00BDA4  504A               	movf	??_fatfs_format_fat16+6,w,c
 10652  00BDA6  0245               	mulwf	??_fatfs_format_fat16+1,c
 10653  00BDA8  50F3               	movf	243,w,c
 10654  00BDAA  264F               	addwf	(??_fatfs_format_fat16+11)& (0+255),f,c
 10655  00BDAC  50F4               	movf	244,w,c
 10656  00BDAE  2250               	addwfc	(??_fatfs_format_fat16+12)& (0+255),f,c
 10657  00BDB0  504B               	movf	??_fatfs_format_fat16+7,w,c
 10658  00BDB2  0244               	mulwf	??_fatfs_format_fat16,c
 10659  00BDB4  50F3               	movf	243,w,c
 10660  00BDB6  264F               	addwf	(??_fatfs_format_fat16+11)& (0+255),f,c
 10661  00BDB8  50F4               	movf	244,w,c
 10662  00BDBA  2250               	addwfc	(??_fatfs_format_fat16+12)& (0+255),f,c
 10663  00BDBC  5047               	movf	??_fatfs_format_fat16+3,w,c
 10664  00BDBE  0249               	mulwf	??_fatfs_format_fat16+5,c
 10665  00BDC0  50F3               	movf	243,w,c
 10666  00BDC2  2650               	addwf	(??_fatfs_format_fat16+12)& (0+255),f,c
 10667  00BDC4  504A               	movf	??_fatfs_format_fat16+6,w,c
 10668  00BDC6  0246               	mulwf	??_fatfs_format_fat16+2,c
 10669  00BDC8  50F3               	movf	243,w,c
 10670  00BDCA  2650               	addwf	(??_fatfs_format_fat16+12)& (0+255),f,c
 10671  00BDCC  504B               	movf	??_fatfs_format_fat16+7,w,c
 10672  00BDCE  0245               	mulwf	??_fatfs_format_fat16+1,c
 10673  00BDD0  50F3               	movf	243,w,c
 10674  00BDD2  2650               	addwf	(??_fatfs_format_fat16+12)& (0+255),f,c
 10675  00BDD4  504C               	movf	??_fatfs_format_fat16+8,w,c
 10676  00BDD6  0244               	mulwf	??_fatfs_format_fat16,c
 10677  00BDD8  50F3               	movf	243,w,c
 10678  00BDDA  2650               	addwf	(??_fatfs_format_fat16+12)& (0+255),f,c
 10679  00BDDC  EE20 F025          	lfsr	2,37
 10680  00BDE0  503C               	movf	fatfs_format_fat16@fs,w,c
 10681  00BDE2  26D9               	addwf	fsr2l,f,c
 10682  00BDE4  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10683  00BDE6  22DA               	addwfc	fsr2h,f,c
 10684  00BDE8  CFDE F051          	movff	postinc2,??_fatfs_format_fat16+13
 10685  00BDEC  CFDD F052          	movff	postdec2,??_fatfs_format_fat16+14
 10686  00BDF0  5051               	movf	??_fatfs_format_fat16+13,w,c
 10687  00BDF2  244D               	addwf	??_fatfs_format_fat16+9,w,c
 10688  00BDF4  6E53               	movwf	(??_fatfs_format_fat16+15)& (0+255),c
 10689  00BDF6  5052               	movf	??_fatfs_format_fat16+14,w,c
 10690  00BDF8  204E               	addwfc	??_fatfs_format_fat16+10,w,c
 10691  00BDFA  6E54               	movwf	(??_fatfs_format_fat16+16)& (0+255),c
 10692  00BDFC  0E00               	movlw	0
 10693  00BDFE  204F               	addwfc	??_fatfs_format_fat16+11,w,c
 10694  00BE00  6E55               	movwf	(??_fatfs_format_fat16+17)& (0+255),c
 10695  00BE02  0E00               	movlw	0
 10696  00BE04  2050               	addwfc	??_fatfs_format_fat16+12,w,c
 10697  00BE06  6E56               	movwf	(??_fatfs_format_fat16+18)& (0+255),c
 10698  00BE08  EE20 F009          	lfsr	2,9
 10699  00BE0C  503C               	movf	fatfs_format_fat16@fs,w,c
 10700  00BE0E  26D9               	addwf	fsr2l,f,c
 10701  00BE10  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10702  00BE12  22DA               	addwfc	fsr2h,f,c
 10703  00BE14  C053  FFDE         	movff	??_fatfs_format_fat16+15,postinc2
 10704  00BE18  C054  FFDE         	movff	??_fatfs_format_fat16+16,postinc2
 10705  00BE1C  C055  FFDE         	movff	??_fatfs_format_fat16+17,postinc2
 10706  00BE20  C056  FFDD         	movff	??_fatfs_format_fat16+18,postdec2
 10707  00BE24  06D9               	decf	fsr2l,f,c
 10708  00BE26  06D9               	decf	fsr2l,f,c
 10709                           
 10710                           ;fat_format.c: 454: fs->rootdir_sectors = ((fs->root_entry_count * 32) + (512 - 1)) / 51
      +                          2;
 10711  00BE28  6844               	setf	??_fatfs_format_fat16& (0+255),c
 10712  00BE2A  0E01               	movlw	1
 10713  00BE2C  6E45               	movwf	(??_fatfs_format_fat16+1)& (0+255),c
 10714  00BE2E  EE20 F023          	lfsr	2,35
 10715  00BE32  503C               	movf	fatfs_format_fat16@fs,w,c
 10716  00BE34  26D9               	addwf	fsr2l,f,c
 10717  00BE36  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10718  00BE38  22DA               	addwfc	fsr2h,f,c
 10719  00BE3A  CFDE F046          	movff	postinc2,??_fatfs_format_fat16+2
 10720  00BE3E  CFDD F047          	movff	postdec2,??_fatfs_format_fat16+3
 10721  00BE42  0E05               	movlw	5
 10722  00BE44                     u12655:
 10723  00BE44  90D8               	bcf	status,0,c
 10724  00BE46  3646               	rlcf	??_fatfs_format_fat16+2,f,c
 10725  00BE48  3647               	rlcf	??_fatfs_format_fat16+3,f,c
 10726  00BE4A  2EE8               	decfsz	wreg,f,c
 10727  00BE4C  D7FB               	goto	u12655
 10728  00BE4E  5044               	movf	??_fatfs_format_fat16,w,c
 10729  00BE50  2646               	addwf	??_fatfs_format_fat16+2,f,c
 10730  00BE52  5045               	movf	??_fatfs_format_fat16+1,w,c
 10731  00BE54  2247               	addwfc	??_fatfs_format_fat16+3,f,c
 10732  00BE56  0E09               	movlw	9
 10733  00BE58  6E48               	movwf	(??_fatfs_format_fat16+4)& (0+255),c
 10734  00BE5A                     u12665:
 10735  00BE5A  90D8               	bcf	status,0,c
 10736  00BE5C  3247               	rrcf	??_fatfs_format_fat16+3,f,c
 10737  00BE5E  3246               	rrcf	??_fatfs_format_fat16+2,f,c
 10738  00BE60  2E48               	decfsz	(??_fatfs_format_fat16+4)& (0+255),f,c
 10739  00BE62  D7FB               	goto	u12665
 10740  00BE64  5046               	movf	??_fatfs_format_fat16+2,w,c
 10741  00BE66  6E49               	movwf	(??_fatfs_format_fat16+5)& (0+255),c
 10742  00BE68  5047               	movf	??_fatfs_format_fat16+3,w,c
 10743  00BE6A  6E4A               	movwf	(??_fatfs_format_fat16+6)& (0+255),c
 10744  00BE6C  6A4B               	clrf	(??_fatfs_format_fat16+7)& (0+255),c
 10745  00BE6E  6A4C               	clrf	(??_fatfs_format_fat16+8)& (0+255),c
 10746  00BE70  EE20 F00D          	lfsr	2,13
 10747  00BE74  503C               	movf	fatfs_format_fat16@fs,w,c
 10748  00BE76  26D9               	addwf	fsr2l,f,c
 10749  00BE78  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10750  00BE7A  22DA               	addwfc	fsr2h,f,c
 10751  00BE7C  C049  FFDE         	movff	??_fatfs_format_fat16+5,postinc2
 10752  00BE80  C04A  FFDE         	movff	??_fatfs_format_fat16+6,postinc2
 10753  00BE84  C04B  FFDE         	movff	??_fatfs_format_fat16+7,postinc2
 10754  00BE88  C04C  FFDD         	movff	??_fatfs_format_fat16+8,postdec2
 10755  00BE8C  06D9               	decf	fsr2l,f,c
 10756  00BE8E  06D9               	decf	fsr2l,f,c
 10757                           
 10758                           ;fat_format.c: 457: fs->fat_begin_lba = fs->lba_begin + fs->reserved_sectors;
 10759  00BE90  EE20 F017          	lfsr	2,23
 10760  00BE94  503C               	movf	fatfs_format_fat16@fs,w,c
 10761  00BE96  26D9               	addwf	fsr2l,f,c
 10762  00BE98  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10763  00BE9A  22DA               	addwfc	fsr2h,f,c
 10764  00BE9C  CFDE F044          	movff	postinc2,??_fatfs_format_fat16
 10765  00BEA0  CFDE F045          	movff	postinc2,??_fatfs_format_fat16+1
 10766  00BEA4  CFDE F046          	movff	postinc2,??_fatfs_format_fat16+2
 10767  00BEA8  CFDE F047          	movff	postinc2,??_fatfs_format_fat16+3
 10768  00BEAC  EE20 F025          	lfsr	2,37
 10769  00BEB0  503C               	movf	fatfs_format_fat16@fs,w,c
 10770  00BEB2  26D9               	addwf	fsr2l,f,c
 10771  00BEB4  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10772  00BEB6  22DA               	addwfc	fsr2h,f,c
 10773  00BEB8  CFDE F048          	movff	postinc2,??_fatfs_format_fat16+4
 10774  00BEBC  CFDD F049          	movff	postdec2,??_fatfs_format_fat16+5
 10775  00BEC0  5048               	movf	??_fatfs_format_fat16+4,w,c
 10776  00BEC2  2444               	addwf	??_fatfs_format_fat16,w,c
 10777  00BEC4  6E4A               	movwf	(??_fatfs_format_fat16+6)& (0+255),c
 10778  00BEC6  5049               	movf	??_fatfs_format_fat16+5,w,c
 10779  00BEC8  2045               	addwfc	??_fatfs_format_fat16+1,w,c
 10780  00BECA  6E4B               	movwf	(??_fatfs_format_fat16+7)& (0+255),c
 10781  00BECC  0E00               	movlw	0
 10782  00BECE  2046               	addwfc	??_fatfs_format_fat16+2,w,c
 10783  00BED0  6E4C               	movwf	(??_fatfs_format_fat16+8)& (0+255),c
 10784  00BED2  0E00               	movlw	0
 10785  00BED4  2047               	addwfc	??_fatfs_format_fat16+3,w,c
 10786  00BED6  6E4D               	movwf	(??_fatfs_format_fat16+9)& (0+255),c
 10787  00BED8  EE20 F011          	lfsr	2,17
 10788  00BEDC  503C               	movf	fatfs_format_fat16@fs,w,c
 10789  00BEDE  26D9               	addwf	fsr2l,f,c
 10790  00BEE0  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10791  00BEE2  22DA               	addwfc	fsr2h,f,c
 10792  00BEE4  C04A  FFDE         	movff	??_fatfs_format_fat16+6,postinc2
 10793  00BEE8  C04B  FFDE         	movff	??_fatfs_format_fat16+7,postinc2
 10794  00BEEC  C04C  FFDE         	movff	??_fatfs_format_fat16+8,postinc2
 10795  00BEF0  C04D  FFDD         	movff	??_fatfs_format_fat16+9,postdec2
 10796  00BEF4  06D9               	decf	fsr2l,f,c
 10797  00BEF6  06D9               	decf	fsr2l,f,c
 10798                           
 10799                           ;fat_format.c: 460: fs->cluster_begin_lba = fs->fat_begin_lba + (fs->num_of_fats * fs->f
      +                          at_sectors);
 10800  00BEF8  EE20 F011          	lfsr	2,17
 10801  00BEFC  503C               	movf	fatfs_format_fat16@fs,w,c
 10802  00BEFE  26D9               	addwf	fsr2l,f,c
 10803  00BF00  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10804  00BF02  22DA               	addwfc	fsr2h,f,c
 10805  00BF04  CFDE F044          	movff	postinc2,??_fatfs_format_fat16
 10806  00BF08  CFDE F045          	movff	postinc2,??_fatfs_format_fat16+1
 10807  00BF0C  CFDE F046          	movff	postinc2,??_fatfs_format_fat16+2
 10808  00BF10  CFDE F047          	movff	postinc2,??_fatfs_format_fat16+3
 10809  00BF14  EE20 F01B          	lfsr	2,27
 10810  00BF18  503C               	movf	fatfs_format_fat16@fs,w,c
 10811  00BF1A  26D9               	addwf	fsr2l,f,c
 10812  00BF1C  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10813  00BF1E  22DA               	addwfc	fsr2h,f,c
 10814  00BF20  CFDE F048          	movff	postinc2,??_fatfs_format_fat16+4
 10815  00BF24  CFDE F049          	movff	postinc2,??_fatfs_format_fat16+5
 10816  00BF28  CFDE F04A          	movff	postinc2,??_fatfs_format_fat16+6
 10817  00BF2C  CFDE F04B          	movff	postinc2,??_fatfs_format_fat16+7
 10818  00BF30  EE20 F027          	lfsr	2,39
 10819  00BF34  503C               	movf	fatfs_format_fat16@fs,w,c
 10820  00BF36  26D9               	addwf	fsr2l,f,c
 10821  00BF38  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10822  00BF3A  22DA               	addwfc	fsr2h,f,c
 10823  00BF3C  50DF               	movf	indf2,w,c
 10824  00BF3E  6E4C               	movwf	(??_fatfs_format_fat16+8)& (0+255),c
 10825  00BF40  C04C  F04D         	movff	??_fatfs_format_fat16+8,??_fatfs_format_fat16+9
 10826  00BF44  6A4E               	clrf	(??_fatfs_format_fat16+10)& (0+255),c
 10827  00BF46  6A4F               	clrf	(??_fatfs_format_fat16+11)& (0+255),c
 10828  00BF48  6A50               	clrf	(??_fatfs_format_fat16+12)& (0+255),c
 10829  00BF4A  504D               	movf	??_fatfs_format_fat16+9,w,c
 10830  00BF4C  0248               	mulwf	??_fatfs_format_fat16+4,c
 10831  00BF4E  CFF3 F051          	movff	prodl,??_fatfs_format_fat16+13
 10832  00BF52  CFF4 F052          	movff	prodh,??_fatfs_format_fat16+14
 10833  00BF56  6A53               	clrf	(??_fatfs_format_fat16+15)& (0+255),c
 10834  00BF58  6A54               	clrf	(??_fatfs_format_fat16+16)& (0+255),c
 10835  00BF5A  0249               	mulwf	??_fatfs_format_fat16+5,c
 10836  00BF5C  50F3               	movf	243,w,c
 10837  00BF5E  2652               	addwf	(??_fatfs_format_fat16+14)& (0+255),f,c
 10838  00BF60  50F4               	movf	244,w,c
 10839  00BF62  2253               	addwfc	(??_fatfs_format_fat16+15)& (0+255),f,c
 10840  00BF64  0E00               	movlw	0
 10841  00BF66  2254               	addwfc	(??_fatfs_format_fat16+16)& (0+255),f,c
 10842  00BF68  504E               	movf	??_fatfs_format_fat16+10,w,c
 10843  00BF6A  0248               	mulwf	??_fatfs_format_fat16+4,c
 10844  00BF6C  50F3               	movf	243,w,c
 10845  00BF6E  2652               	addwf	(??_fatfs_format_fat16+14)& (0+255),f,c
 10846  00BF70  50F4               	movf	244,w,c
 10847  00BF72  2253               	addwfc	(??_fatfs_format_fat16+15)& (0+255),f,c
 10848  00BF74  0E00               	movlw	0
 10849  00BF76  2254               	addwfc	(??_fatfs_format_fat16+16)& (0+255),f,c
 10850  00BF78  504D               	movf	??_fatfs_format_fat16+9,w,c
 10851  00BF7A  024A               	mulwf	??_fatfs_format_fat16+6,c
 10852  00BF7C  50F3               	movf	243,w,c
 10853  00BF7E  2653               	addwf	(??_fatfs_format_fat16+15)& (0+255),f,c
 10854  00BF80  50F4               	movf	244,w,c
 10855  00BF82  2254               	addwfc	(??_fatfs_format_fat16+16)& (0+255),f,c
 10856  00BF84  504E               	movf	??_fatfs_format_fat16+10,w,c
 10857  00BF86  0249               	mulwf	??_fatfs_format_fat16+5,c
 10858  00BF88  50F3               	movf	243,w,c
 10859  00BF8A  2653               	addwf	(??_fatfs_format_fat16+15)& (0+255),f,c
 10860  00BF8C  50F4               	movf	244,w,c
 10861  00BF8E  2254               	addwfc	(??_fatfs_format_fat16+16)& (0+255),f,c
 10862  00BF90  504F               	movf	??_fatfs_format_fat16+11,w,c
 10863  00BF92  0248               	mulwf	??_fatfs_format_fat16+4,c
 10864  00BF94  50F3               	movf	243,w,c
 10865  00BF96  2653               	addwf	(??_fatfs_format_fat16+15)& (0+255),f,c
 10866  00BF98  50F4               	movf	244,w,c
 10867  00BF9A  2254               	addwfc	(??_fatfs_format_fat16+16)& (0+255),f,c
 10868  00BF9C  504B               	movf	??_fatfs_format_fat16+7,w,c
 10869  00BF9E  024D               	mulwf	??_fatfs_format_fat16+9,c
 10870  00BFA0  50F3               	movf	243,w,c
 10871  00BFA2  2654               	addwf	(??_fatfs_format_fat16+16)& (0+255),f,c
 10872  00BFA4  504E               	movf	??_fatfs_format_fat16+10,w,c
 10873  00BFA6  024A               	mulwf	??_fatfs_format_fat16+6,c
 10874  00BFA8  50F3               	movf	243,w,c
 10875  00BFAA  2654               	addwf	(??_fatfs_format_fat16+16)& (0+255),f,c
 10876  00BFAC  504F               	movf	??_fatfs_format_fat16+11,w,c
 10877  00BFAE  0249               	mulwf	??_fatfs_format_fat16+5,c
 10878  00BFB0  50F3               	movf	243,w,c
 10879  00BFB2  2654               	addwf	(??_fatfs_format_fat16+16)& (0+255),f,c
 10880  00BFB4  5050               	movf	??_fatfs_format_fat16+12,w,c
 10881  00BFB6  0248               	mulwf	??_fatfs_format_fat16+4,c
 10882  00BFB8  50F3               	movf	243,w,c
 10883  00BFBA  2654               	addwf	(??_fatfs_format_fat16+16)& (0+255),f,c
 10884  00BFBC  5044               	movf	??_fatfs_format_fat16,w,c
 10885  00BFBE  2451               	addwf	??_fatfs_format_fat16+13,w,c
 10886  00BFC0  6E55               	movwf	(??_fatfs_format_fat16+17)& (0+255),c
 10887  00BFC2  5045               	movf	??_fatfs_format_fat16+1,w,c
 10888  00BFC4  2052               	addwfc	??_fatfs_format_fat16+14,w,c
 10889  00BFC6  6E56               	movwf	(??_fatfs_format_fat16+18)& (0+255),c
 10890  00BFC8  5046               	movf	??_fatfs_format_fat16+2,w,c
 10891  00BFCA  2053               	addwfc	??_fatfs_format_fat16+15,w,c
 10892  00BFCC  6E57               	movwf	(??_fatfs_format_fat16+19)& (0+255),c
 10893  00BFCE  5047               	movf	??_fatfs_format_fat16+3,w,c
 10894  00BFD0  2054               	addwfc	??_fatfs_format_fat16+16,w,c
 10895  00BFD2  6E58               	movwf	(??_fatfs_format_fat16+20)& (0+255),c
 10896  00BFD4  EE20 F001          	lfsr	2,1
 10897  00BFD8  503C               	movf	fatfs_format_fat16@fs,w,c
 10898  00BFDA  26D9               	addwf	fsr2l,f,c
 10899  00BFDC  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10900  00BFDE  22DA               	addwfc	fsr2h,f,c
 10901  00BFE0  C055  FFDE         	movff	??_fatfs_format_fat16+17,postinc2
 10902  00BFE4  C056  FFDE         	movff	??_fatfs_format_fat16+18,postinc2
 10903  00BFE8  C057  FFDE         	movff	??_fatfs_format_fat16+19,postinc2
 10904  00BFEC  C058  FFDD         	movff	??_fatfs_format_fat16+20,postdec2
 10905  00BFF0  06D9               	decf	fsr2l,f,c
 10906  00BFF2  06D9               	decf	fsr2l,f,c
 10907                           
 10908                           ;fat_format.c: 463: if (!fatfs_erase_fat(fs, 0))
 10909  00BFF4  C03D  F021         	movff	fatfs_format_fat16@fs+1,fatfs_erase_fat@fs+1
 10910  00BFF8  C03C  F020         	movff	fatfs_format_fat16@fs,fatfs_erase_fat@fs
 10911  00BFFC  0E00               	movlw	0
 10912  00BFFE  6A23               	clrf	fatfs_erase_fat@is_fat32+1,c
 10913  00C000  6A22               	clrf	fatfs_erase_fat@is_fat32,c
 10914  00C002  EC34  F04B         	call	_fatfs_erase_fat	;wreg free
 10915  00C006  5021               	movf	?_fatfs_erase_fat+1,w,c
 10916  00C008  1020               	iorwf	?_fatfs_erase_fat,w,c
 10917  00C00A  E03B               	bz	u12680
 10918                           
 10919                           ;fat_format.c: 467: if (!fatfs_erase_sectors(fs, fs->lba_begin + fs->rootdir_first_secto
      +                          r, fs->rootdir_sectors))
 10920                           
 10921                           ;fat_format.c: 464: return 0;
 10922  00C00C  C03D  F021         	movff	fatfs_format_fat16@fs+1,fatfs_erase_sectors@fs+1
 10923  00C010  C03C  F020         	movff	fatfs_format_fat16@fs,fatfs_erase_sectors@fs
 10924  00C014  EE20 F009          	lfsr	2,9
 10925  00C018  503C               	movf	fatfs_format_fat16@fs,w,c
 10926  00C01A  26D9               	addwf	fsr2l,f,c
 10927  00C01C  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10928  00C01E  22DA               	addwfc	fsr2h,f,c
 10929  00C020  CFDE F044          	movff	postinc2,??_fatfs_format_fat16
 10930  00C024  CFDE F045          	movff	postinc2,??_fatfs_format_fat16+1
 10931  00C028  CFDE F046          	movff	postinc2,??_fatfs_format_fat16+2
 10932  00C02C  CFDE F047          	movff	postinc2,??_fatfs_format_fat16+3
 10933  00C030  EE20 F017          	lfsr	2,23
 10934  00C034  503C               	movf	fatfs_format_fat16@fs,w,c
 10935  00C036  26D9               	addwf	fsr2l,f,c
 10936  00C038  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10937  00C03A  22DA               	addwfc	fsr2h,f,c
 10938  00C03C  CFDE F048          	movff	postinc2,??_fatfs_format_fat16+4
 10939  00C040  CFDE F049          	movff	postinc2,??_fatfs_format_fat16+5
 10940  00C044  CFDE F04A          	movff	postinc2,??_fatfs_format_fat16+6
 10941  00C048  CFDE F04B          	movff	postinc2,??_fatfs_format_fat16+7
 10942  00C04C  5044               	movf	??_fatfs_format_fat16,w,c
 10943  00C04E  2448               	addwf	??_fatfs_format_fat16+4,w,c
 10944  00C050  6E22               	movwf	fatfs_erase_sectors@lba,c
 10945  00C052  5045               	movf	??_fatfs_format_fat16+1,w,c
 10946  00C054  2049               	addwfc	??_fatfs_format_fat16+5,w,c
 10947  00C056  6E23               	movwf	fatfs_erase_sectors@lba+1,c
 10948  00C058  5046               	movf	??_fatfs_format_fat16+2,w,c
 10949  00C05A  204A               	addwfc	??_fatfs_format_fat16+6,w,c
 10950  00C05C  6E24               	movwf	fatfs_erase_sectors@lba+2,c
 10951  00C05E  5047               	movf	??_fatfs_format_fat16+3,w,c
 10952  00C060  204B               	addwfc	??_fatfs_format_fat16+7,w,c
 10953  00C062  6E25               	movwf	fatfs_erase_sectors@lba+3,c
 10954  00C064  EE20 F00D          	lfsr	2,13
 10955  00C068  503C               	movf	fatfs_format_fat16@fs,w,c
 10956  00C06A  26D9               	addwf	fsr2l,f,c
 10957  00C06C  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10958  00C06E  22DA               	addwfc	fsr2h,f,c
 10959  00C070  CFDE F026          	movff	postinc2,fatfs_erase_sectors@count
 10960  00C074  CFDD F027          	movff	postdec2,fatfs_erase_sectors@count+1
 10961  00C078  EC65  F02D         	call	_fatfs_erase_sectors	;wreg free
 10962  00C07C  5021               	movf	?_fatfs_erase_sectors+1,w,c
 10963  00C07E  1020               	iorwf	?_fatfs_erase_sectors,w,c
 10964  00C080  E103               	bnz	l11020
 10965  00C082                     u12680:
 10966                           
 10967                           ;fat_format.c: 468: return 0;
 10968  00C082  0E00               	movlw	0
 10969  00C084  6E3D               	movwf	?_fatfs_format_fat16+1,c
 10970  00C086  D003               	goto	L25
 10971  00C088                     l11020:
 10972                           
 10973                           ;fat_format.c: 470: return 1;
 10974  00C088  0E00               	movlw	0
 10975  00C08A  6E3D               	movwf	?_fatfs_format_fat16+1,c
 10976  00C08C  0E01               	movlw	1
 10977  00C08E                     L25:
 10978  00C08E  6E3C               	movwf	?_fatfs_format_fat16,c
 10979  00C090                     l904:
 10980  00C090  0012               	return	
 10981  00C092                     __end_of_fatfs_format_fat16:
 10982                           	opt stack 0
 10983                           tosu	equ	0xFFF
 10984                           tosh	equ	0xFFE
 10985                           tosl	equ	0xFFD
 10986                           pclath	equ	0xFFA
 10987                           tblptru	equ	0xFF8
 10988                           tblptrh	equ	0xFF7
 10989                           tblptrl	equ	0xFF6
 10990                           tablat	equ	0xFF5
 10991                           prodh	equ	0xFF4
 10992                           prodl	equ	0xFF3
 10993                           indf0	equ	0xFEF
 10994                           postinc0	equ	0xFEE
 10995                           fsr0h	equ	0xFEA
 10996                           fsr0l	equ	0xFE9
 10997                           wreg	equ	0xFE8
 10998                           indf1	equ	0xFE7
 10999                           postinc1	equ	0xFE6
 11000                           postdec1	equ	0xFE5
 11001                           fsr1h	equ	0xFE2
 11002                           fsr1l	equ	0xFE1
 11003                           indf2	equ	0xFDF
 11004                           postinc2	equ	0xFDE
 11005                           postdec2	equ	0xFDD
 11006                           fsr2h	equ	0xFDA
 11007                           fsr2l	equ	0xFD9
 11008                           status	equ	0xFD8
 11009                           
 11010 ;; *************** function _fatfs_fat_init *****************
 11011 ;; Defined at:
 11012 ;;		line 60 in file "fat_table.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;  fs              2    8[COMRAM] PTR struct fatfs
 11015 ;;		 -> _fs(1095), 
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;  i               2   18[COMRAM] int 
 11018 ;; Return value:  Size  Location     Type
 11019 ;;		None               void
 11020 ;; Registers used:
 11021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11022 ;; Tracked objects:
 11023 ;;		On entry : 0/0
 11024 ;;		On exit  : 0/0
 11025 ;;		Unchanged: 0/0
 11026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11029 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11030 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11031 ;;Total ram usage:       12 bytes
 11032 ;; Hardware stack levels used:    1
 11033 ;; Hardware stack levels required when called:    1
 11034 ;; This function calls:
 11035 ;;		_memset
 11036 ;; This function is called by:
 11037 ;;		_fatfs_init
 11038 ;;		_fatfs_format_fat16
 11039 ;;		_fatfs_format_fat32
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           	psect	text26
 11044  0084D6                     __ptext26:
 11045                           	opt stack 0
 11046  0084D6                     _fatfs_fat_init:
 11047                           	opt stack 27
 11048                           
 11049                           ;fat_table.c: 62: int i;
 11050                           ;fat_table.c: 65: fs->fat_buffer_head = (0);
 11051                           
 11052                           ;incstack = 0
 11053  0084D6  EE22 F03B          	lfsr	2,571
 11054  0084DA  5009               	movf	fatfs_fat_init@fs,w,c
 11055  0084DC  26D9               	addwf	fsr2l,f,c
 11056  0084DE  500A               	movf	fatfs_fat_init@fs+1,w,c
 11057  0084E0  22DA               	addwfc	fsr2h,f,c
 11058  0084E2  6ADE               	clrf	postinc2,c
 11059  0084E4  6ADD               	clrf	postdec2,c
 11060                           
 11061                           ;fat_table.c: 67: for (i=0;i<1;i++)
 11062  0084E6  6A14               	clrf	fatfs_fat_init@i+1,c
 11063  0084E8  6A13               	clrf	fatfs_fat_init@i,c
 11064  0084EA  5014               	movf	fatfs_fat_init@i+1,w,c
 11065  0084EC  0A80               	xorlw	128
 11066  0084EE  0F80               	addlw	-128
 11067  0084F0  0E01               	movlw	1
 11068  0084F2  B4D8               	btfsc	status,2,c
 11069  0084F4  5C13               	subwf	fatfs_fat_init@i,w,c
 11070  0084F6  E301 D103          	bc	l1189
 11071                           
 11072                           ;fat_table.c: 68: {
 11073                           ;fat_table.c: 70: fs->fat_buffers[i].address = 0xFFFFFFFF;
 11074  0084FA  0E3D               	movlw	61
 11075  0084FC  6E0B               	movwf	??_fatfs_fat_init& (0+255),c
 11076  0084FE  0E02               	movlw	2
 11077  008500  6E0C               	movwf	(??_fatfs_fat_init+1)& (0+255),c
 11078  008502  0E0A               	movlw	10
 11079  008504  6E0D               	movwf	(??_fatfs_fat_init+2)& (0+255),c
 11080  008506  0E02               	movlw	2
 11081  008508  6E0E               	movwf	(??_fatfs_fat_init+3)& (0+255),c
 11082  00850A  500D               	movf	(??_fatfs_fat_init+2)& (0+255),w,c
 11083  00850C  0213               	mulwf	fatfs_fat_init@i,c
 11084  00850E  CFF3 F00F          	movff	prodl,??_fatfs_fat_init+4
 11085  008512  CFF4 F010          	movff	prodh,??_fatfs_fat_init+5
 11086  008516  0214               	mulwf	fatfs_fat_init@i+1,c
 11087  008518  50F3               	movf	243,w,c
 11088  00851A  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11089  00851C  500E               	movf	(??_fatfs_fat_init+3)& (0+255),w,c
 11090  00851E  0213               	mulwf	fatfs_fat_init@i,c
 11091  008520  50F3               	movf	243,w,c
 11092  008522  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11093  008524  500B               	movf	??_fatfs_fat_init,w,c
 11094  008526  260F               	addwf	??_fatfs_fat_init+4,f,c
 11095  008528  500C               	movf	??_fatfs_fat_init+1,w,c
 11096  00852A  2210               	addwfc	??_fatfs_fat_init+5,f,c
 11097  00852C  C009  F011         	movff	fatfs_fat_init@fs,??_fatfs_fat_init+6
 11098  008530  C00A  F012         	movff	fatfs_fat_init@fs+1,??_fatfs_fat_init+7
 11099  008534  500F               	movf	??_fatfs_fat_init+4,w,c
 11100  008536  2611               	addwf	??_fatfs_fat_init+6,f,c
 11101  008538  5010               	movf	??_fatfs_fat_init+5,w,c
 11102  00853A  2212               	addwfc	??_fatfs_fat_init+7,f,c
 11103  00853C  0E00               	movlw	0
 11104  00853E  2411               	addwf	??_fatfs_fat_init+6,w,c
 11105  008540  6ED9               	movwf	fsr2l,c
 11106  008542  0E02               	movlw	2
 11107  008544  2012               	addwfc	??_fatfs_fat_init+7,w,c
 11108  008546  6EDA               	movwf	fsr2h,c
 11109  008548  68DE               	setf	postinc2,c
 11110  00854A  68DE               	setf	postinc2,c
 11111  00854C  68DE               	setf	postinc2,c
 11112  00854E  68DD               	setf	postdec2,c
 11113                           
 11114                           ;fat_table.c: 71: fs->fat_buffers[i].dirty = 0;
 11115  008550  0E3D               	movlw	61
 11116  008552  6E0B               	movwf	??_fatfs_fat_init& (0+255),c
 11117  008554  0E02               	movlw	2
 11118  008556  6E0C               	movwf	(??_fatfs_fat_init+1)& (0+255),c
 11119  008558  0E0A               	movlw	10
 11120  00855A  6E0D               	movwf	(??_fatfs_fat_init+2)& (0+255),c
 11121  00855C  0E02               	movlw	2
 11122  00855E  6E0E               	movwf	(??_fatfs_fat_init+3)& (0+255),c
 11123  008560  500D               	movf	(??_fatfs_fat_init+2)& (0+255),w,c
 11124  008562  0213               	mulwf	fatfs_fat_init@i,c
 11125  008564  CFF3 F00F          	movff	prodl,??_fatfs_fat_init+4
 11126  008568  CFF4 F010          	movff	prodh,??_fatfs_fat_init+5
 11127  00856C  0214               	mulwf	fatfs_fat_init@i+1,c
 11128  00856E  50F3               	movf	243,w,c
 11129  008570  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11130  008572  500E               	movf	(??_fatfs_fat_init+3)& (0+255),w,c
 11131  008574  0213               	mulwf	fatfs_fat_init@i,c
 11132  008576  50F3               	movf	243,w,c
 11133  008578  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11134  00857A  500B               	movf	??_fatfs_fat_init,w,c
 11135  00857C  260F               	addwf	??_fatfs_fat_init+4,f,c
 11136  00857E  500C               	movf	??_fatfs_fat_init+1,w,c
 11137  008580  2210               	addwfc	??_fatfs_fat_init+5,f,c
 11138  008582  C009  F011         	movff	fatfs_fat_init@fs,??_fatfs_fat_init+6
 11139  008586  C00A  F012         	movff	fatfs_fat_init@fs+1,??_fatfs_fat_init+7
 11140  00858A  500F               	movf	??_fatfs_fat_init+4,w,c
 11141  00858C  2611               	addwf	??_fatfs_fat_init+6,f,c
 11142  00858E  5010               	movf	??_fatfs_fat_init+5,w,c
 11143  008590  2212               	addwfc	??_fatfs_fat_init+7,f,c
 11144  008592  0E04               	movlw	4
 11145  008594  2411               	addwf	??_fatfs_fat_init+6,w,c
 11146  008596  6ED9               	movwf	fsr2l,c
 11147  008598  0E02               	movlw	2
 11148  00859A  2012               	addwfc	??_fatfs_fat_init+7,w,c
 11149  00859C  6EDA               	movwf	fsr2h,c
 11150  00859E  6ADE               	clrf	postinc2,c
 11151  0085A0  6ADD               	clrf	postdec2,c
 11152                           
 11153                           ;fat_table.c: 72: memset(fs->fat_buffers[i].sector, 0x00, sizeof(fs->fat_buffers[i].sect
      +                          or));
 11154  0085A2  0E3D               	movlw	61
 11155  0085A4  6E0B               	movwf	??_fatfs_fat_init& (0+255),c
 11156  0085A6  0E02               	movlw	2
 11157  0085A8  6E0C               	movwf	(??_fatfs_fat_init+1)& (0+255),c
 11158  0085AA  0E0A               	movlw	10
 11159  0085AC  6E0D               	movwf	(??_fatfs_fat_init+2)& (0+255),c
 11160  0085AE  0E02               	movlw	2
 11161  0085B0  6E0E               	movwf	(??_fatfs_fat_init+3)& (0+255),c
 11162  0085B2  500D               	movf	(??_fatfs_fat_init+2)& (0+255),w,c
 11163  0085B4  0213               	mulwf	fatfs_fat_init@i,c
 11164  0085B6  CFF3 F00F          	movff	prodl,??_fatfs_fat_init+4
 11165  0085BA  CFF4 F010          	movff	prodh,??_fatfs_fat_init+5
 11166  0085BE  0214               	mulwf	fatfs_fat_init@i+1,c
 11167  0085C0  50F3               	movf	243,w,c
 11168  0085C2  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11169  0085C4  500E               	movf	(??_fatfs_fat_init+3)& (0+255),w,c
 11170  0085C6  0213               	mulwf	fatfs_fat_init@i,c
 11171  0085C8  50F3               	movf	243,w,c
 11172  0085CA  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11173  0085CC  500B               	movf	??_fatfs_fat_init,w,c
 11174  0085CE  260F               	addwf	??_fatfs_fat_init+4,f,c
 11175  0085D0  500C               	movf	??_fatfs_fat_init+1,w,c
 11176  0085D2  2210               	addwfc	??_fatfs_fat_init+5,f,c
 11177  0085D4  500F               	movf	??_fatfs_fat_init+4,w,c
 11178  0085D6  2409               	addwf	fatfs_fat_init@fs,w,c
 11179  0085D8  6E01               	movwf	memset@p1,c
 11180  0085DA  5010               	movf	??_fatfs_fat_init+5,w,c
 11181  0085DC  200A               	addwfc	fatfs_fat_init@fs+1,w,c
 11182  0085DE  6E02               	movwf	memset@p1+1,c
 11183  0085E0  6A04               	clrf	memset@c+1,c
 11184  0085E2  6A03               	clrf	memset@c,c
 11185  0085E4  0E02               	movlw	2
 11186  0085E6  6E06               	movwf	memset@n+1,c
 11187  0085E8  0E00               	movlw	0
 11188  0085EA  6A05               	clrf	memset@n,c
 11189  0085EC  EC1A  F020         	call	_memset	;wreg free
 11190                           
 11191                           ;fat_table.c: 73: fs->fat_buffers[i].ptr = (0);
 11192  0085F0  0E3D               	movlw	61
 11193  0085F2  6E0B               	movwf	??_fatfs_fat_init& (0+255),c
 11194  0085F4  0E02               	movlw	2
 11195  0085F6  6E0C               	movwf	(??_fatfs_fat_init+1)& (0+255),c
 11196  0085F8  0E0A               	movlw	10
 11197  0085FA  6E0D               	movwf	(??_fatfs_fat_init+2)& (0+255),c
 11198  0085FC  0E02               	movlw	2
 11199  0085FE  6E0E               	movwf	(??_fatfs_fat_init+3)& (0+255),c
 11200  008600  500D               	movf	(??_fatfs_fat_init+2)& (0+255),w,c
 11201  008602  0213               	mulwf	fatfs_fat_init@i,c
 11202  008604  CFF3 F00F          	movff	prodl,??_fatfs_fat_init+4
 11203  008608  CFF4 F010          	movff	prodh,??_fatfs_fat_init+5
 11204  00860C  0214               	mulwf	fatfs_fat_init@i+1,c
 11205  00860E  50F3               	movf	243,w,c
 11206  008610  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11207  008612  500E               	movf	(??_fatfs_fat_init+3)& (0+255),w,c
 11208  008614  0213               	mulwf	fatfs_fat_init@i,c
 11209  008616  50F3               	movf	243,w,c
 11210  008618  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11211  00861A  500B               	movf	??_fatfs_fat_init,w,c
 11212  00861C  260F               	addwf	??_fatfs_fat_init+4,f,c
 11213  00861E  500C               	movf	??_fatfs_fat_init+1,w,c
 11214  008620  2210               	addwfc	??_fatfs_fat_init+5,f,c
 11215  008622  C009  F011         	movff	fatfs_fat_init@fs,??_fatfs_fat_init+6
 11216  008626  C00A  F012         	movff	fatfs_fat_init@fs+1,??_fatfs_fat_init+7
 11217  00862A  500F               	movf	??_fatfs_fat_init+4,w,c
 11218  00862C  2611               	addwf	??_fatfs_fat_init+6,f,c
 11219  00862E  5010               	movf	??_fatfs_fat_init+5,w,c
 11220  008630  2212               	addwfc	??_fatfs_fat_init+7,f,c
 11221  008632  0E06               	movlw	6
 11222  008634  2411               	addwf	??_fatfs_fat_init+6,w,c
 11223  008636  6ED9               	movwf	fsr2l,c
 11224  008638  0E02               	movlw	2
 11225  00863A  2012               	addwfc	??_fatfs_fat_init+7,w,c
 11226  00863C  6EDA               	movwf	fsr2h,c
 11227  00863E  6ADE               	clrf	postinc2,c
 11228  008640  6ADD               	clrf	postdec2,c
 11229                           
 11230                           ;fat_table.c: 76: fs->fat_buffers[i].next = fs->fat_buffer_head;
 11231  008642  EE22 F03B          	lfsr	2,571
 11232  008646  5009               	movf	fatfs_fat_init@fs,w,c
 11233  008648  26D9               	addwf	fsr2l,f,c
 11234  00864A  500A               	movf	fatfs_fat_init@fs+1,w,c
 11235  00864C  22DA               	addwfc	fsr2h,f,c
 11236  00864E  0E3D               	movlw	61
 11237  008650  6E0B               	movwf	??_fatfs_fat_init& (0+255),c
 11238  008652  0E02               	movlw	2
 11239  008654  6E0C               	movwf	(??_fatfs_fat_init+1)& (0+255),c
 11240  008656  0E0A               	movlw	10
 11241  008658  6E0D               	movwf	(??_fatfs_fat_init+2)& (0+255),c
 11242  00865A  0E02               	movlw	2
 11243  00865C  6E0E               	movwf	(??_fatfs_fat_init+3)& (0+255),c
 11244  00865E  500D               	movf	(??_fatfs_fat_init+2)& (0+255),w,c
 11245  008660  0213               	mulwf	fatfs_fat_init@i,c
 11246  008662  CFF3 F00F          	movff	prodl,??_fatfs_fat_init+4
 11247  008666  CFF4 F010          	movff	prodh,??_fatfs_fat_init+5
 11248  00866A  0214               	mulwf	fatfs_fat_init@i+1,c
 11249  00866C  50F3               	movf	243,w,c
 11250  00866E  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11251  008670  500E               	movf	(??_fatfs_fat_init+3)& (0+255),w,c
 11252  008672  0213               	mulwf	fatfs_fat_init@i,c
 11253  008674  50F3               	movf	243,w,c
 11254  008676  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11255  008678  500B               	movf	??_fatfs_fat_init,w,c
 11256  00867A  260F               	addwf	??_fatfs_fat_init+4,f,c
 11257  00867C  500C               	movf	??_fatfs_fat_init+1,w,c
 11258  00867E  2210               	addwfc	??_fatfs_fat_init+5,f,c
 11259  008680  C009  F011         	movff	fatfs_fat_init@fs,??_fatfs_fat_init+6
 11260  008684  C00A  F012         	movff	fatfs_fat_init@fs+1,??_fatfs_fat_init+7
 11261  008688  500F               	movf	??_fatfs_fat_init+4,w,c
 11262  00868A  2611               	addwf	??_fatfs_fat_init+6,f,c
 11263  00868C  5010               	movf	??_fatfs_fat_init+5,w,c
 11264  00868E  2212               	addwfc	??_fatfs_fat_init+7,f,c
 11265  008690  0E08               	movlw	8
 11266  008692  2411               	addwf	??_fatfs_fat_init+6,w,c
 11267  008694  6EE1               	movwf	fsr1l,c
 11268  008696  0E02               	movlw	2
 11269  008698  2012               	addwfc	??_fatfs_fat_init+7,w,c
 11270  00869A  6EE2               	movwf	fsr1h,c
 11271  00869C  CFDE FFE6          	movff	postinc2,postinc1
 11272  0086A0  CFDD FFE5          	movff	postdec2,postdec1
 11273                           
 11274                           ;fat_table.c: 77: fs->fat_buffer_head = &fs->fat_buffers[i];
 11275  0086A4  0E3D               	movlw	61
 11276  0086A6  6E0B               	movwf	??_fatfs_fat_init& (0+255),c
 11277  0086A8  0E02               	movlw	2
 11278  0086AA  6E0C               	movwf	(??_fatfs_fat_init+1)& (0+255),c
 11279  0086AC  0E0A               	movlw	10
 11280  0086AE  6E0D               	movwf	(??_fatfs_fat_init+2)& (0+255),c
 11281  0086B0  0E02               	movlw	2
 11282  0086B2  6E0E               	movwf	(??_fatfs_fat_init+3)& (0+255),c
 11283  0086B4  500D               	movf	(??_fatfs_fat_init+2)& (0+255),w,c
 11284  0086B6  0213               	mulwf	fatfs_fat_init@i,c
 11285  0086B8  CFF3 F00F          	movff	prodl,??_fatfs_fat_init+4
 11286  0086BC  CFF4 F010          	movff	prodh,??_fatfs_fat_init+5
 11287  0086C0  0214               	mulwf	fatfs_fat_init@i+1,c
 11288  0086C2  50F3               	movf	243,w,c
 11289  0086C4  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11290  0086C6  500E               	movf	(??_fatfs_fat_init+3)& (0+255),w,c
 11291  0086C8  0213               	mulwf	fatfs_fat_init@i,c
 11292  0086CA  50F3               	movf	243,w,c
 11293  0086CC  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11294  0086CE  500B               	movf	??_fatfs_fat_init,w,c
 11295  0086D0  260F               	addwf	??_fatfs_fat_init+4,f,c
 11296  0086D2  500C               	movf	??_fatfs_fat_init+1,w,c
 11297  0086D4  2210               	addwfc	??_fatfs_fat_init+5,f,c
 11298  0086D6  C009  F011         	movff	fatfs_fat_init@fs,??_fatfs_fat_init+6
 11299  0086DA  C00A  F012         	movff	fatfs_fat_init@fs+1,??_fatfs_fat_init+7
 11300  0086DE  500F               	movf	??_fatfs_fat_init+4,w,c
 11301  0086E0  2611               	addwf	??_fatfs_fat_init+6,f,c
 11302  0086E2  5010               	movf	??_fatfs_fat_init+5,w,c
 11303  0086E4  2212               	addwfc	??_fatfs_fat_init+7,f,c
 11304  0086E6  EE22 F03B          	lfsr	2,571
 11305  0086EA  5009               	movf	fatfs_fat_init@fs,w,c
 11306  0086EC  26D9               	addwf	fsr2l,f,c
 11307  0086EE  500A               	movf	fatfs_fat_init@fs+1,w,c
 11308  0086F0  22DA               	addwfc	fsr2h,f,c
 11309  0086F2  C011  FFDE         	movff	??_fatfs_fat_init+6,postinc2
 11310  0086F6  C012  FFDD         	movff	??_fatfs_fat_init+7,postdec2
 11311  0086FA  4A13               	infsnz	fatfs_fat_init@i,f,c
 11312  0086FC  2A14               	incf	fatfs_fat_init@i+1,f,c
 11313  0086FE  D6F5               	goto	L26
 11314  008700                     l1189:
 11315  008700  0012               	return	
 11316  008702                     __end_of_fatfs_fat_init:
 11317                           	opt stack 0
 11318                           tosu	equ	0xFFF
 11319                           tosh	equ	0xFFE
 11320                           tosl	equ	0xFFD
 11321                           pclath	equ	0xFFA
 11322                           tblptru	equ	0xFF8
 11323                           tblptrh	equ	0xFF7
 11324                           tblptrl	equ	0xFF6
 11325                           tablat	equ	0xFF5
 11326                           prodh	equ	0xFF4
 11327                           prodl	equ	0xFF3
 11328                           indf0	equ	0xFEF
 11329                           postinc0	equ	0xFEE
 11330                           fsr0h	equ	0xFEA
 11331                           fsr0l	equ	0xFE9
 11332                           wreg	equ	0xFE8
 11333                           indf1	equ	0xFE7
 11334                           postinc1	equ	0xFE6
 11335                           postdec1	equ	0xFE5
 11336                           fsr1h	equ	0xFE2
 11337                           fsr1l	equ	0xFE1
 11338                           indf2	equ	0xFDF
 11339                           postinc2	equ	0xFDE
 11340                           postdec2	equ	0xFDD
 11341                           fsr2h	equ	0xFDA
 11342                           fsr2l	equ	0xFD9
 11343                           status	equ	0xFD8
 11344                           
 11345 ;; *************** function _fatfs_erase_sectors *****************
 11346 ;; Defined at:
 11347 ;;		line 99 in file "fat_format.c"
 11348 ;; Parameters:    Size  Location     Type
 11349 ;;  fs              2   31[COMRAM] PTR struct fatfs
 11350 ;;		 -> _fs(1095), 
 11351 ;;  lba             4   33[COMRAM] unsigned long 
 11352 ;;  count           2   37[COMRAM] int 
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;  i               2   47[COMRAM] int 
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  2   31[COMRAM] int 
 11357 ;; Registers used:
 11358 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11364 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11365 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11366 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11367 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11368 ;;Total ram usage:       18 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:    3
 11371 ;; This function calls:
 11372 ;;		_media_write
 11373 ;;		_memset
 11374 ;; This function is called by:
 11375 ;;		_fatfs_format_fat16
 11376 ;;		_fatfs_format_fat32
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           	psect	text27
 11381  005ACA                     __ptext27:
 11382                           	opt stack 0
 11383  005ACA                     _fatfs_erase_sectors:
 11384                           	opt stack 22
 11385                           
 11386                           ;fat_format.c: 101: int i;
 11387                           ;fat_format.c: 104: memset(fs->currentsector.sector, 0, 512);
 11388                           
 11389                           ;incstack = 0
 11390  005ACA  0E31               	movlw	49
 11391  005ACC  2420               	addwf	fatfs_erase_sectors@fs,w,c
 11392  005ACE  6E01               	movwf	memset@p1,c
 11393  005AD0  0E00               	movlw	0
 11394  005AD2  2021               	addwfc	fatfs_erase_sectors@fs+1,w,c
 11395  005AD4  6E02               	movwf	memset@p1+1,c
 11396  005AD6  6A04               	clrf	memset@c+1,c
 11397  005AD8  6A03               	clrf	memset@c,c
 11398  005ADA  0E02               	movlw	2
 11399  005ADC  6E06               	movwf	memset@n+1,c
 11400  005ADE  0E00               	movlw	0
 11401  005AE0  6A05               	clrf	memset@n,c
 11402  005AE2  EC1A  F020         	call	_memset	;wreg free
 11403                           
 11404                           ;fat_format.c: 106: for (i=0;i<count;i++)
 11405  005AE6  6A31               	clrf	fatfs_erase_sectors@i+1,c
 11406  005AE8  6A30               	clrf	fatfs_erase_sectors@i,c
 11407  005AEA  D043               	goto	l9914
 11408  005AEC                     l9906:
 11409                           
 11410                           ;fat_format.c: 107: if (!fs->disk_io.write_media(lba + i, fs->currentsector.sector, 1))
 11411  005AEC  C030  F028         	movff	fatfs_erase_sectors@i,??_fatfs_erase_sectors
 11412  005AF0  C031  F029         	movff	fatfs_erase_sectors@i+1,??_fatfs_erase_sectors+1
 11413  005AF4  0E00               	movlw	0
 11414  005AF6  BE29               	btfsc	(??_fatfs_erase_sectors+1)& (0+255),7,c
 11415  005AF8  0EFF               	movlw	255
 11416  005AFA  6E2A               	movwf	(??_fatfs_erase_sectors+2)& (0+255),c
 11417  005AFC  6E2B               	movwf	(??_fatfs_erase_sectors+3)& (0+255),c
 11418  005AFE  5022               	movf	fatfs_erase_sectors@lba,w,c
 11419  005B00  2428               	addwf	??_fatfs_erase_sectors,w,c
 11420  005B02  6E09               	movwf	media_write@sector,c
 11421  005B04  5023               	movf	fatfs_erase_sectors@lba+1,w,c
 11422  005B06  2029               	addwfc	??_fatfs_erase_sectors+1,w,c
 11423  005B08  6E0A               	movwf	media_write@sector+1,c
 11424  005B0A  5024               	movf	fatfs_erase_sectors@lba+2,w,c
 11425  005B0C  202A               	addwfc	??_fatfs_erase_sectors+2,w,c
 11426  005B0E  6E0B               	movwf	media_write@sector+2,c
 11427  005B10  5025               	movf	fatfs_erase_sectors@lba+3,w,c
 11428  005B12  202B               	addwfc	??_fatfs_erase_sectors+3,w,c
 11429  005B14  6E0C               	movwf	media_write@sector+3,c
 11430  005B16  0E31               	movlw	49
 11431  005B18  2420               	addwf	fatfs_erase_sectors@fs,w,c
 11432  005B1A  6E2C               	movwf	(??_fatfs_erase_sectors+4)& (0+255),c
 11433  005B1C  0E00               	movlw	0
 11434  005B1E  2021               	addwfc	fatfs_erase_sectors@fs+1,w,c
 11435  005B20  6E2D               	movwf	(??_fatfs_erase_sectors+5)& (0+255),c
 11436  005B22  0E20               	movlw	32
 11437  005B24  6E0F               	movwf	media_write@buffer+2,c
 11438  005B26  C02D  F00E         	movff	??_fatfs_erase_sectors+5,media_write@buffer+1
 11439  005B2A  C02C  F00D         	movff	??_fatfs_erase_sectors+4,media_write@buffer
 11440  005B2E  0E01               	movlw	1
 11441  005B30  6E10               	movwf	media_write@sector_count,c
 11442  005B32  6A11               	clrf	media_write@sector_count+1,c
 11443  005B34  6A12               	clrf	media_write@sector_count+2,c
 11444  005B36  6A13               	clrf	media_write@sector_count+3,c
 11445  005B38  EE20 F02B          	lfsr	2,43
 11446  005B3C  5020               	movf	fatfs_erase_sectors@fs,w,c
 11447  005B3E  26D9               	addwf	fsr2l,f,c
 11448  005B40  5021               	movf	fatfs_erase_sectors@fs+1,w,c
 11449  005B42  22DA               	addwfc	fsr2h,f,c
 11450  005B44  CFDE F02E          	movff	postinc2,??_fatfs_erase_sectors+6
 11451  005B48  CFDD F02F          	movff	postdec2,??_fatfs_erase_sectors+7
 11452  005B4C  D801               	call	u11128
 11453  005B4E  D009               	goto	u11129
 11454  005B50                     u11128:
 11455  005B50  0005               	push	
 11456  005B52  6EFA               	movwf	pclath,c
 11457  005B54  502E               	movf	??_fatfs_erase_sectors+6,w,c
 11458  005B56  6EFD               	movwf	tosl,c
 11459  005B58  502F               	movf	??_fatfs_erase_sectors+7,w,c
 11460  005B5A  6EFE               	movwf	tosh,c
 11461  005B5C  6AFF               	clrf	tosu,c
 11462  005B5E  50FA               	movf	pclath,w,c
 11463  005B60  0012               	return		;indir
 11464  005B62                     u11129:
 11465  005B62  500A               	movf	?_media_write+1,w,c
 11466  005B64  1009               	iorwf	?_media_write,w,c
 11467  005B66  E103               	bnz	l9912
 11468                           
 11469                           ;fat_format.c: 108: return 0;
 11470  005B68  0E00               	movlw	0
 11471  005B6A  6E21               	movwf	?_fatfs_erase_sectors+1,c
 11472  005B6C  D00E               	goto	L27
 11473  005B6E                     l9912:
 11474  005B6E  4A30               	infsnz	fatfs_erase_sectors@i,f,c
 11475  005B70  2A31               	incf	fatfs_erase_sectors@i+1,f,c
 11476  005B72                     l9914:
 11477  005B72  5031               	movf	fatfs_erase_sectors@i+1,w,c
 11478  005B74  0A80               	xorlw	128
 11479  005B76  6E28               	movwf	??_fatfs_erase_sectors& (0+255),c
 11480  005B78  5026               	movf	fatfs_erase_sectors@count,w,c
 11481  005B7A  5C30               	subwf	fatfs_erase_sectors@i,w,c
 11482  005B7C  5027               	movf	fatfs_erase_sectors@count+1,w,c
 11483  005B7E  0A80               	xorlw	128
 11484  005B80  5828               	subwfb	??_fatfs_erase_sectors& (0+255),w,c
 11485  005B82  E3B4               	bnc	l9906
 11486                           
 11487                           ;fat_format.c: 110: return 1;
 11488  005B84  0E00               	movlw	0
 11489  005B86  6E21               	movwf	?_fatfs_erase_sectors+1,c
 11490  005B88  0E01               	movlw	1
 11491  005B8A                     L27:
 11492  005B8A  6E20               	movwf	?_fatfs_erase_sectors,c
 11493  005B8C  0012               	return	
 11494  005B8E                     __end_of_fatfs_erase_sectors:
 11495                           	opt stack 0
 11496                           tosu	equ	0xFFF
 11497                           tosh	equ	0xFFE
 11498                           tosl	equ	0xFFD
 11499                           pclath	equ	0xFFA
 11500                           tblptru	equ	0xFF8
 11501                           tblptrh	equ	0xFF7
 11502                           tblptrl	equ	0xFF6
 11503                           tablat	equ	0xFF5
 11504                           prodh	equ	0xFF4
 11505                           prodl	equ	0xFF3
 11506                           indf0	equ	0xFEF
 11507                           postinc0	equ	0xFEE
 11508                           fsr0h	equ	0xFEA
 11509                           fsr0l	equ	0xFE9
 11510                           wreg	equ	0xFE8
 11511                           indf1	equ	0xFE7
 11512                           postinc1	equ	0xFE6
 11513                           postdec1	equ	0xFE5
 11514                           fsr1h	equ	0xFE2
 11515                           fsr1l	equ	0xFE1
 11516                           indf2	equ	0xFDF
 11517                           postinc2	equ	0xFDE
 11518                           postdec2	equ	0xFDD
 11519                           fsr2h	equ	0xFDA
 11520                           fsr2l	equ	0xFD9
 11521                           status	equ	0xFD8
 11522                           
 11523 ;; *************** function _fatfs_erase_fat *****************
 11524 ;; Defined at:
 11525 ;;		line 392 in file "fat_format.c"
 11526 ;; Parameters:    Size  Location     Type
 11527 ;;  fs              2   31[COMRAM] PTR struct fatfs
 11528 ;;		 -> _fs(1095), 
 11529 ;;  is_fat32        2   33[COMRAM] int 
 11530 ;; Auto vars:     Size  Location     Type
 11531 ;;  i               4   48[COMRAM] unsigned long 
 11532 ;; Return value:  Size  Location     Type
 11533 ;;                  2   31[COMRAM] int 
 11534 ;; Registers used:
 11535 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11536 ;; Tracked objects:
 11537 ;;		On entry : 0/0
 11538 ;;		On exit  : 0/0
 11539 ;;		Unchanged: 0/0
 11540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11541 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11542 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11543 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11544 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11545 ;;Total ram usage:       21 bytes
 11546 ;; Hardware stack levels used:    1
 11547 ;; Hardware stack levels required when called:    3
 11548 ;; This function calls:
 11549 ;;		_media_write
 11550 ;;		_memset
 11551 ;; This function is called by:
 11552 ;;		_fatfs_format_fat16
 11553 ;;		_fatfs_format_fat32
 11554 ;; This function uses a non-reentrant model
 11555 ;;
 11556                           
 11557                           	psect	text28
 11558  009668                     __ptext28:
 11559                           	opt stack 0
 11560  009668                     _fatfs_erase_fat:
 11561                           	opt stack 22
 11562                           
 11563                           ;fat_format.c: 394: uint32 i;
 11564                           ;fat_format.c: 397: memset(fs->currentsector.sector, 0, 512);
 11565                           
 11566                           ;incstack = 0
 11567  009668  0E31               	movlw	49
 11568  00966A  2420               	addwf	fatfs_erase_fat@fs,w,c
 11569  00966C  6E01               	movwf	memset@p1,c
 11570  00966E  0E00               	movlw	0
 11571  009670  2021               	addwfc	fatfs_erase_fat@fs+1,w,c
 11572  009672  6E02               	movwf	memset@p1+1,c
 11573  009674  6A04               	clrf	memset@c+1,c
 11574  009676  6A03               	clrf	memset@c,c
 11575  009678  0E02               	movlw	2
 11576  00967A  6E06               	movwf	memset@n+1,c
 11577  00967C  0E00               	movlw	0
 11578  00967E  6A05               	clrf	memset@n,c
 11579  009680  EC1A  F020         	call	_memset	;wreg free
 11580                           
 11581                           ;fat_format.c: 400: if (!is_fat32)
 11582  009684  5023               	movf	fatfs_erase_fat@is_fat32+1,w,c
 11583  009686  1022               	iorwf	fatfs_erase_fat@is_fat32,w,c
 11584  009688  E11E               	bnz	l10182
 11585                           
 11586                           ;fat_format.c: 401: {
 11587                           ;fat_format.c: 402: { fs->currentsector.sector[0+0] = (uint8)((0xFFF8)&0xFF); fs->curren
      +                          tsector.sector[0+1] = (uint8)((0xFFF8>>8)&0xFF); };
 11588  00968A  EE20 F031          	lfsr	2,49
 11589  00968E  5020               	movf	fatfs_erase_fat@fs,w,c
 11590  009690  26D9               	addwf	fsr2l,f,c
 11591  009692  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11592  009694  22DA               	addwfc	fsr2h,f,c
 11593  009696  0EF8               	movlw	248
 11594  009698  6EDF               	movwf	indf2,c
 11595  00969A  EE20 F032          	lfsr	2,50
 11596  00969E  5020               	movf	fatfs_erase_fat@fs,w,c
 11597  0096A0  26D9               	addwf	fsr2l,f,c
 11598  0096A2  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11599  0096A4  22DA               	addwfc	fsr2h,f,c
 11600  0096A6  68DF               	setf	indf2,c
 11601                           
 11602                           ;fat_format.c: 403: { fs->currentsector.sector[2+0] = (uint8)((0xFFFF)&0xFF); fs->curren
      +                          tsector.sector[2+1] = (uint8)((0xFFFF>>8)&0xFF); };
 11603  0096A8  EE20 F033          	lfsr	2,51
 11604  0096AC  5020               	movf	fatfs_erase_fat@fs,w,c
 11605  0096AE  26D9               	addwf	fsr2l,f,c
 11606  0096B0  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11607  0096B2  22DA               	addwfc	fsr2h,f,c
 11608  0096B4  68DF               	setf	indf2,c
 11609  0096B6  EE20 F034          	lfsr	2,52
 11610  0096BA  5020               	movf	fatfs_erase_fat@fs,w,c
 11611  0096BC  26D9               	addwf	fsr2l,f,c
 11612  0096BE  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11613  0096C0  22DA               	addwfc	fsr2h,f,c
 11614  0096C2  0EFF               	movlw	255
 11615  0096C4  D056               	goto	L28
 11616  0096C6                     l10182:
 11617                           
 11618                           ;fat_format.c: 405: else
 11619                           ;fat_format.c: 406: {
 11620                           ;fat_format.c: 407: { fs->currentsector.sector[0+0] = (uint8)((0x0FFFFFF8)&0xFF); fs->cu
      +                          rrentsector.sector[0+1] = (uint8)((0x0FFFFFF8>>8)&0xFF); fs->currentsector.sector[0+2] =
      +                           (uint8)((0x0FFFFFF8>>16)&0xFF); fs->currentsector.sector[0+3] = (uint8)((0x0FFFFFF8>>24
      +                          )&0xFF
 11621  0096C6  EE20 F031          	lfsr	2,49
 11622  0096CA  5020               	movf	fatfs_erase_fat@fs,w,c
 11623  0096CC  26D9               	addwf	fsr2l,f,c
 11624  0096CE  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11625  0096D0  22DA               	addwfc	fsr2h,f,c
 11626  0096D2  0EF8               	movlw	248
 11627  0096D4  6EDF               	movwf	indf2,c
 11628  0096D6  EE20 F032          	lfsr	2,50
 11629  0096DA  5020               	movf	fatfs_erase_fat@fs,w,c
 11630  0096DC  26D9               	addwf	fsr2l,f,c
 11631  0096DE  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11632  0096E0  22DA               	addwfc	fsr2h,f,c
 11633  0096E2  68DF               	setf	indf2,c
 11634  0096E4  EE20 F033          	lfsr	2,51
 11635  0096E8  5020               	movf	fatfs_erase_fat@fs,w,c
 11636  0096EA  26D9               	addwf	fsr2l,f,c
 11637  0096EC  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11638  0096EE  22DA               	addwfc	fsr2h,f,c
 11639  0096F0  68DF               	setf	indf2,c
 11640  0096F2  EE20 F034          	lfsr	2,52
 11641  0096F6  5020               	movf	fatfs_erase_fat@fs,w,c
 11642  0096F8  26D9               	addwf	fsr2l,f,c
 11643  0096FA  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11644  0096FC  22DA               	addwfc	fsr2h,f,c
 11645  0096FE  0E0F               	movlw	15
 11646  009700  6EDF               	movwf	indf2,c
 11647                           
 11648                           ;fat_format.c: 408: { fs->currentsector.sector[4+0] = (uint8)((0xFFFFFFFF)&0xFF); fs->cu
      +                          rrentsector.sector[4+1] = (uint8)((0xFFFFFFFF>>8)&0xFF); fs->currentsector.sector[4+2] =
      +                           (uint8)((0xFFFFFFFF>>16)&0xFF); fs->currentsector.sector[4+3] = (uint8)((0xFFFFFFFF>>24
      +                          )&0xFF
 11649  009702  EE20 F035          	lfsr	2,53
 11650  009706  5020               	movf	fatfs_erase_fat@fs,w,c
 11651  009708  26D9               	addwf	fsr2l,f,c
 11652  00970A  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11653  00970C  22DA               	addwfc	fsr2h,f,c
 11654  00970E  68DF               	setf	indf2,c
 11655  009710  EE20 F036          	lfsr	2,54
 11656  009714  5020               	movf	fatfs_erase_fat@fs,w,c
 11657  009716  26D9               	addwf	fsr2l,f,c
 11658  009718  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11659  00971A  22DA               	addwfc	fsr2h,f,c
 11660  00971C  68DF               	setf	indf2,c
 11661  00971E  EE20 F037          	lfsr	2,55
 11662  009722  5020               	movf	fatfs_erase_fat@fs,w,c
 11663  009724  26D9               	addwf	fsr2l,f,c
 11664  009726  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11665  009728  22DA               	addwfc	fsr2h,f,c
 11666  00972A  68DF               	setf	indf2,c
 11667  00972C  EE20 F038          	lfsr	2,56
 11668  009730  5020               	movf	fatfs_erase_fat@fs,w,c
 11669  009732  26D9               	addwf	fsr2l,f,c
 11670  009734  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11671  009736  22DA               	addwfc	fsr2h,f,c
 11672  009738  68DF               	setf	indf2,c
 11673                           
 11674                           ;fat_format.c: 409: { fs->currentsector.sector[8+0] = (uint8)((0x0FFFFFFF)&0xFF); fs->cu
      +                          rrentsector.sector[8+1] = (uint8)((0x0FFFFFFF>>8)&0xFF); fs->currentsector.sector[8+2] =
      +                           (uint8)((0x0FFFFFFF>>16)&0xFF); fs->currentsector.sector[8+3] = (uint8)((0x0FFFFFFF>>24
      +                          )&0xFF
 11675  00973A  EE20 F039          	lfsr	2,57
 11676  00973E  5020               	movf	fatfs_erase_fat@fs,w,c
 11677  009740  26D9               	addwf	fsr2l,f,c
 11678  009742  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11679  009744  22DA               	addwfc	fsr2h,f,c
 11680  009746  68DF               	setf	indf2,c
 11681  009748  EE20 F03A          	lfsr	2,58
 11682  00974C  5020               	movf	fatfs_erase_fat@fs,w,c
 11683  00974E  26D9               	addwf	fsr2l,f,c
 11684  009750  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11685  009752  22DA               	addwfc	fsr2h,f,c
 11686  009754  68DF               	setf	indf2,c
 11687  009756  EE20 F03B          	lfsr	2,59
 11688  00975A  5020               	movf	fatfs_erase_fat@fs,w,c
 11689  00975C  26D9               	addwf	fsr2l,f,c
 11690  00975E  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11691  009760  22DA               	addwfc	fsr2h,f,c
 11692  009762  68DF               	setf	indf2,c
 11693  009764  EE20 F03C          	lfsr	2,60
 11694  009768  5020               	movf	fatfs_erase_fat@fs,w,c
 11695  00976A  26D9               	addwf	fsr2l,f,c
 11696  00976C  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11697  00976E  22DA               	addwfc	fsr2h,f,c
 11698  009770  0E0F               	movlw	15
 11699  009772                     L28:
 11700  009772  6EDF               	movwf	indf2,c
 11701                           
 11702                           ;fat_format.c: 410: }
 11703                           ;fat_format.c: 412: if (!fs->disk_io.write_media(fs->fat_begin_lba + 0, fs->currentsecto
      +                          r.sector, 1))
 11704  009774  EE20 F011          	lfsr	2,17
 11705  009778  5020               	movf	fatfs_erase_fat@fs,w,c
 11706  00977A  26D9               	addwf	fsr2l,f,c
 11707  00977C  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11708  00977E  22DA               	addwfc	fsr2h,f,c
 11709  009780  CFDE F009          	movff	postinc2,media_write@sector
 11710  009784  CFDE F00A          	movff	postinc2,media_write@sector+1
 11711  009788  CFDE F00B          	movff	postinc2,media_write@sector+2
 11712  00978C  CFDE F00C          	movff	postinc2,media_write@sector+3
 11713  009790  0E31               	movlw	49
 11714  009792  2420               	addwf	fatfs_erase_fat@fs,w,c
 11715  009794  6E24               	movwf	??_fatfs_erase_fat& (0+255),c
 11716  009796  0E00               	movlw	0
 11717  009798  2021               	addwfc	fatfs_erase_fat@fs+1,w,c
 11718  00979A  6E25               	movwf	(??_fatfs_erase_fat+1)& (0+255),c
 11719  00979C  0E20               	movlw	32
 11720  00979E  6E0F               	movwf	media_write@buffer+2,c
 11721  0097A0  C025  F00E         	movff	??_fatfs_erase_fat+1,media_write@buffer+1
 11722  0097A4  C024  F00D         	movff	??_fatfs_erase_fat,media_write@buffer
 11723  0097A8  0E01               	movlw	1
 11724  0097AA  6E10               	movwf	media_write@sector_count,c
 11725  0097AC  6A11               	clrf	media_write@sector_count+1,c
 11726  0097AE  6A12               	clrf	media_write@sector_count+2,c
 11727  0097B0  6A13               	clrf	media_write@sector_count+3,c
 11728  0097B2  EE20 F02B          	lfsr	2,43
 11729  0097B6  5020               	movf	fatfs_erase_fat@fs,w,c
 11730  0097B8  26D9               	addwf	fsr2l,f,c
 11731  0097BA  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11732  0097BC  22DA               	addwfc	fsr2h,f,c
 11733  0097BE  CFDE F026          	movff	postinc2,??_fatfs_erase_fat+2
 11734  0097C2  CFDD F027          	movff	postdec2,??_fatfs_erase_fat+3
 11735  0097C6  D801               	call	u11358
 11736  0097C8  D009               	goto	u11359
 11737  0097CA                     u11358:
 11738  0097CA  0005               	push	
 11739  0097CC  6EFA               	movwf	pclath,c
 11740  0097CE  5026               	movf	??_fatfs_erase_fat+2,w,c
 11741  0097D0  6EFD               	movwf	tosl,c
 11742  0097D2  5027               	movf	??_fatfs_erase_fat+3,w,c
 11743  0097D4  6EFE               	movwf	tosh,c
 11744  0097D6  6AFF               	clrf	tosu,c
 11745  0097D8  50FA               	movf	pclath,w,c
 11746  0097DA  0012               	return		;indir
 11747  0097DC                     u11359:
 11748  0097DC  500A               	movf	?_media_write+1,w,c
 11749  0097DE  1009               	iorwf	?_media_write,w,c
 11750  0097E0  E057               	bz	u11380
 11751                           
 11752                           ;fat_format.c: 416: memset(fs->currentsector.sector, 0, 512);
 11753                           
 11754                           ;fat_format.c: 413: return 0;
 11755  0097E2  0E31               	movlw	49
 11756  0097E4  2420               	addwf	fatfs_erase_fat@fs,w,c
 11757  0097E6  6E01               	movwf	memset@p1,c
 11758  0097E8  0E00               	movlw	0
 11759  0097EA  2021               	addwfc	fatfs_erase_fat@fs+1,w,c
 11760  0097EC  6E02               	movwf	memset@p1+1,c
 11761  0097EE  6A04               	clrf	memset@c+1,c
 11762  0097F0  6A03               	clrf	memset@c,c
 11763  0097F2  0E02               	movlw	2
 11764  0097F4  6E06               	movwf	memset@n+1,c
 11765  0097F6  0E00               	movlw	0
 11766  0097F8  6A05               	clrf	memset@n,c
 11767  0097FA  EC1A  F020         	call	_memset	;wreg free
 11768                           
 11769                           ;fat_format.c: 417: for (i=1;i<fs->fat_sectors*fs->num_of_fats;i++)
 11770  0097FE  0E01               	movlw	1
 11771  009800  6E31               	movwf	fatfs_erase_fat@i,c
 11772  009802  6A32               	clrf	fatfs_erase_fat@i+1,c
 11773  009804  6A33               	clrf	fatfs_erase_fat@i+2,c
 11774  009806  6A34               	clrf	fatfs_erase_fat@i+3,c
 11775  009808  D04B               	goto	l10202
 11776  00980A                     l10194:
 11777                           
 11778                           ;fat_format.c: 418: if (!fs->disk_io.write_media(fs->fat_begin_lba + i, fs->currentsecto
      +                          r.sector, 1))
 11779  00980A  EE20 F011          	lfsr	2,17
 11780  00980E  5020               	movf	fatfs_erase_fat@fs,w,c
 11781  009810  26D9               	addwf	fsr2l,f,c
 11782  009812  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11783  009814  22DA               	addwfc	fsr2h,f,c
 11784  009816  CFDE F024          	movff	postinc2,??_fatfs_erase_fat
 11785  00981A  CFDE F025          	movff	postinc2,??_fatfs_erase_fat+1
 11786  00981E  CFDE F026          	movff	postinc2,??_fatfs_erase_fat+2
 11787  009822  CFDE F027          	movff	postinc2,??_fatfs_erase_fat+3
 11788  009826  5031               	movf	fatfs_erase_fat@i,w,c
 11789  009828  2424               	addwf	??_fatfs_erase_fat,w,c
 11790  00982A  6E09               	movwf	media_write@sector,c
 11791  00982C  5032               	movf	fatfs_erase_fat@i+1,w,c
 11792  00982E  2025               	addwfc	??_fatfs_erase_fat+1,w,c
 11793  009830  6E0A               	movwf	media_write@sector+1,c
 11794  009832  5033               	movf	fatfs_erase_fat@i+2,w,c
 11795  009834  2026               	addwfc	??_fatfs_erase_fat+2,w,c
 11796  009836  6E0B               	movwf	media_write@sector+2,c
 11797  009838  5034               	movf	fatfs_erase_fat@i+3,w,c
 11798  00983A  2027               	addwfc	??_fatfs_erase_fat+3,w,c
 11799  00983C  6E0C               	movwf	media_write@sector+3,c
 11800  00983E  0E31               	movlw	49
 11801  009840  2420               	addwf	fatfs_erase_fat@fs,w,c
 11802  009842  6E28               	movwf	(??_fatfs_erase_fat+4)& (0+255),c
 11803  009844  0E00               	movlw	0
 11804  009846  2021               	addwfc	fatfs_erase_fat@fs+1,w,c
 11805  009848  6E29               	movwf	(??_fatfs_erase_fat+5)& (0+255),c
 11806  00984A  0E20               	movlw	32
 11807  00984C  6E0F               	movwf	media_write@buffer+2,c
 11808  00984E  C029  F00E         	movff	??_fatfs_erase_fat+5,media_write@buffer+1
 11809  009852  C028  F00D         	movff	??_fatfs_erase_fat+4,media_write@buffer
 11810  009856  0E01               	movlw	1
 11811  009858  6E10               	movwf	media_write@sector_count,c
 11812  00985A  6A11               	clrf	media_write@sector_count+1,c
 11813  00985C  6A12               	clrf	media_write@sector_count+2,c
 11814  00985E  6A13               	clrf	media_write@sector_count+3,c
 11815  009860  EE20 F02B          	lfsr	2,43
 11816  009864  5020               	movf	fatfs_erase_fat@fs,w,c
 11817  009866  26D9               	addwf	fsr2l,f,c
 11818  009868  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11819  00986A  22DA               	addwfc	fsr2h,f,c
 11820  00986C  CFDE F02A          	movff	postinc2,??_fatfs_erase_fat+6
 11821  009870  CFDD F02B          	movff	postdec2,??_fatfs_erase_fat+7
 11822  009874  D801               	call	u11378
 11823  009876  D009               	goto	u11379
 11824  009878                     u11378:
 11825  009878  0005               	push	
 11826  00987A  6EFA               	movwf	pclath,c
 11827  00987C  502A               	movf	??_fatfs_erase_fat+6,w,c
 11828  00987E  6EFD               	movwf	tosl,c
 11829  009880  502B               	movf	??_fatfs_erase_fat+7,w,c
 11830  009882  6EFE               	movwf	tosh,c
 11831  009884  6AFF               	clrf	tosu,c
 11832  009886  50FA               	movf	pclath,w,c
 11833  009888  0012               	return		;indir
 11834  00988A                     u11379:
 11835  00988A  500A               	movf	?_media_write+1,w,c
 11836  00988C  1009               	iorwf	?_media_write,w,c
 11837  00988E  E103               	bnz	l10200
 11838  009890                     u11380:
 11839                           
 11840                           ;fat_format.c: 419: return 0;
 11841  009890  0E00               	movlw	0
 11842  009892  6E21               	movwf	?_fatfs_erase_fat+1,c
 11843  009894  D066               	goto	L29
 11844  009896                     l10200:
 11845  009896  2A31               	incf	fatfs_erase_fat@i,f,c
 11846  009898  0E00               	movlw	0
 11847  00989A  2232               	addwfc	fatfs_erase_fat@i+1,f,c
 11848  00989C  2233               	addwfc	fatfs_erase_fat@i+2,f,c
 11849  00989E  2234               	addwfc	fatfs_erase_fat@i+3,f,c
 11850  0098A0                     l10202:
 11851  0098A0  EE20 F01B          	lfsr	2,27
 11852  0098A4  5020               	movf	fatfs_erase_fat@fs,w,c
 11853  0098A6  26D9               	addwf	fsr2l,f,c
 11854  0098A8  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11855  0098AA  22DA               	addwfc	fsr2h,f,c
 11856  0098AC  CFDE F024          	movff	postinc2,??_fatfs_erase_fat
 11857  0098B0  CFDE F025          	movff	postinc2,??_fatfs_erase_fat+1
 11858  0098B4  CFDE F026          	movff	postinc2,??_fatfs_erase_fat+2
 11859  0098B8  CFDE F027          	movff	postinc2,??_fatfs_erase_fat+3
 11860  0098BC  EE20 F027          	lfsr	2,39
 11861  0098C0  5020               	movf	fatfs_erase_fat@fs,w,c
 11862  0098C2  26D9               	addwf	fsr2l,f,c
 11863  0098C4  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11864  0098C6  22DA               	addwfc	fsr2h,f,c
 11865  0098C8  50DF               	movf	indf2,w,c
 11866  0098CA  6E28               	movwf	(??_fatfs_erase_fat+4)& (0+255),c
 11867  0098CC  C028  F029         	movff	??_fatfs_erase_fat+4,??_fatfs_erase_fat+5
 11868  0098D0  6A2A               	clrf	(??_fatfs_erase_fat+6)& (0+255),c
 11869  0098D2  6A2B               	clrf	(??_fatfs_erase_fat+7)& (0+255),c
 11870  0098D4  6A2C               	clrf	(??_fatfs_erase_fat+8)& (0+255),c
 11871  0098D6  5029               	movf	??_fatfs_erase_fat+5,w,c
 11872  0098D8  0224               	mulwf	??_fatfs_erase_fat,c
 11873  0098DA  CFF3 F02D          	movff	prodl,??_fatfs_erase_fat+9
 11874  0098DE  CFF4 F02E          	movff	prodh,??_fatfs_erase_fat+10
 11875  0098E2  6A2F               	clrf	(??_fatfs_erase_fat+11)& (0+255),c
 11876  0098E4  6A30               	clrf	(??_fatfs_erase_fat+12)& (0+255),c
 11877  0098E6  0225               	mulwf	??_fatfs_erase_fat+1,c
 11878  0098E8  50F3               	movf	243,w,c
 11879  0098EA  262E               	addwf	(??_fatfs_erase_fat+10)& (0+255),f,c
 11880  0098EC  50F4               	movf	244,w,c
 11881  0098EE  222F               	addwfc	(??_fatfs_erase_fat+11)& (0+255),f,c
 11882  0098F0  0E00               	movlw	0
 11883  0098F2  2230               	addwfc	(??_fatfs_erase_fat+12)& (0+255),f,c
 11884  0098F4  502A               	movf	??_fatfs_erase_fat+6,w,c
 11885  0098F6  0224               	mulwf	??_fatfs_erase_fat,c
 11886  0098F8  50F3               	movf	243,w,c
 11887  0098FA  262E               	addwf	(??_fatfs_erase_fat+10)& (0+255),f,c
 11888  0098FC  50F4               	movf	244,w,c
 11889  0098FE  222F               	addwfc	(??_fatfs_erase_fat+11)& (0+255),f,c
 11890  009900  0E00               	movlw	0
 11891  009902  2230               	addwfc	(??_fatfs_erase_fat+12)& (0+255),f,c
 11892  009904  5029               	movf	??_fatfs_erase_fat+5,w,c
 11893  009906  0226               	mulwf	??_fatfs_erase_fat+2,c
 11894  009908  50F3               	movf	243,w,c
 11895  00990A  262F               	addwf	(??_fatfs_erase_fat+11)& (0+255),f,c
 11896  00990C  50F4               	movf	244,w,c
 11897  00990E  2230               	addwfc	(??_fatfs_erase_fat+12)& (0+255),f,c
 11898  009910  502A               	movf	??_fatfs_erase_fat+6,w,c
 11899  009912  0225               	mulwf	??_fatfs_erase_fat+1,c
 11900  009914  50F3               	movf	243,w,c
 11901  009916  262F               	addwf	(??_fatfs_erase_fat+11)& (0+255),f,c
 11902  009918  50F4               	movf	244,w,c
 11903  00991A  2230               	addwfc	(??_fatfs_erase_fat+12)& (0+255),f,c
 11904  00991C  502B               	movf	??_fatfs_erase_fat+7,w,c
 11905  00991E  0224               	mulwf	??_fatfs_erase_fat,c
 11906  009920  50F3               	movf	243,w,c
 11907  009922  262F               	addwf	(??_fatfs_erase_fat+11)& (0+255),f,c
 11908  009924  50F4               	movf	244,w,c
 11909  009926  2230               	addwfc	(??_fatfs_erase_fat+12)& (0+255),f,c
 11910  009928  5027               	movf	??_fatfs_erase_fat+3,w,c
 11911  00992A  0229               	mulwf	??_fatfs_erase_fat+5,c
 11912  00992C  50F3               	movf	243,w,c
 11913  00992E  2630               	addwf	(??_fatfs_erase_fat+12)& (0+255),f,c
 11914  009930  502A               	movf	??_fatfs_erase_fat+6,w,c
 11915  009932  0226               	mulwf	??_fatfs_erase_fat+2,c
 11916  009934  50F3               	movf	243,w,c
 11917  009936  2630               	addwf	(??_fatfs_erase_fat+12)& (0+255),f,c
 11918  009938  502B               	movf	??_fatfs_erase_fat+7,w,c
 11919  00993A  0225               	mulwf	??_fatfs_erase_fat+1,c
 11920  00993C  50F3               	movf	243,w,c
 11921  00993E  2630               	addwf	(??_fatfs_erase_fat+12)& (0+255),f,c
 11922  009940  502C               	movf	??_fatfs_erase_fat+8,w,c
 11923  009942  0224               	mulwf	??_fatfs_erase_fat,c
 11924  009944  50F3               	movf	243,w,c
 11925  009946  2630               	addwf	(??_fatfs_erase_fat+12)& (0+255),f,c
 11926  009948  502D               	movf	??_fatfs_erase_fat+9,w,c
 11927  00994A  5C31               	subwf	fatfs_erase_fat@i,w,c
 11928  00994C  502E               	movf	??_fatfs_erase_fat+10,w,c
 11929  00994E  5832               	subwfb	fatfs_erase_fat@i+1,w,c
 11930  009950  502F               	movf	??_fatfs_erase_fat+11,w,c
 11931  009952  5833               	subwfb	fatfs_erase_fat@i+2,w,c
 11932  009954  5030               	movf	??_fatfs_erase_fat+12,w,c
 11933  009956  5834               	subwfb	fatfs_erase_fat@i+3,w,c
 11934  009958  E201 D757          	bnc	l10194
 11935                           
 11936                           ;fat_format.c: 421: return 1;
 11937  00995C  0E00               	movlw	0
 11938  00995E  6E21               	movwf	?_fatfs_erase_fat+1,c
 11939  009960  0E01               	movlw	1
 11940  009962                     L29:
 11941  009962  6E20               	movwf	?_fatfs_erase_fat,c
 11942  009964  0012               	return	
 11943  009966                     __end_of_fatfs_erase_fat:
 11944                           	opt stack 0
 11945                           tosu	equ	0xFFF
 11946                           tosh	equ	0xFFE
 11947                           tosl	equ	0xFFD
 11948                           pclath	equ	0xFFA
 11949                           tblptru	equ	0xFF8
 11950                           tblptrh	equ	0xFF7
 11951                           tblptrl	equ	0xFF6
 11952                           tablat	equ	0xFF5
 11953                           prodh	equ	0xFF4
 11954                           prodl	equ	0xFF3
 11955                           indf0	equ	0xFEF
 11956                           postinc0	equ	0xFEE
 11957                           fsr0h	equ	0xFEA
 11958                           fsr0l	equ	0xFE9
 11959                           wreg	equ	0xFE8
 11960                           indf1	equ	0xFE7
 11961                           postinc1	equ	0xFE6
 11962                           postdec1	equ	0xFE5
 11963                           fsr1h	equ	0xFE2
 11964                           fsr1l	equ	0xFE1
 11965                           indf2	equ	0xFDF
 11966                           postinc2	equ	0xFDE
 11967                           postdec2	equ	0xFDD
 11968                           fsr2h	equ	0xFDA
 11969                           fsr2l	equ	0xFD9
 11970                           status	equ	0xFD8
 11971                           
 11972 ;; *************** function _fatfs_create_boot_sector *****************
 11973 ;; Defined at:
 11974 ;;		line 115 in file "fat_format.c"
 11975 ;; Parameters:    Size  Location     Type
 11976 ;;  fs              2   31[COMRAM] PTR struct fatfs
 11977 ;;		 -> _fs(1095), 
 11978 ;;  boot_sector_    4   33[COMRAM] unsigned long 
 11979 ;;  vol_sectors     4   37[COMRAM] unsigned long 
 11980 ;;  name            2   41[COMRAM] PTR const unsigned char 
 11981 ;;		 -> STR_60(6), 
 11982 ;;  is_fat32        2   43[COMRAM] int 
 11983 ;; Auto vars:     Size  Location     Type
 11984 ;;  total_cluste    4   53[COMRAM] unsigned long 
 11985 ;;  i               2   57[COMRAM] int 
 11986 ;; Return value:  Size  Location     Type
 11987 ;;                  2   31[COMRAM] int 
 11988 ;; Registers used:
 11989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11990 ;; Tracked objects:
 11991 ;;		On entry : 0/0
 11992 ;;		On exit  : 0/0
 11993 ;;		Unchanged: 0/0
 11994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11995 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11996 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11997 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11998 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11999 ;;Total ram usage:       28 bytes
 12000 ;; Hardware stack levels used:    1
 12001 ;; Hardware stack levels required when called:    3
 12002 ;; This function calls:
 12003 ;;		___lldiv
 12004 ;;		_fatfs_calc_cluster_size
 12005 ;;		_media_write
 12006 ;;		_memset
 12007 ;;		_strlen
 12008 ;; This function is called by:
 12009 ;;		_fatfs_format_fat16
 12010 ;;		_fatfs_format_fat32
 12011 ;; This function uses a non-reentrant model
 12012 ;;
 12013                           
 12014                           	psect	text29
 12015  00E0BC                     __ptext29:
 12016                           	opt stack 0
 12017  00E0BC                     _fatfs_create_boot_sector:
 12018                           	opt stack 22
 12019                           
 12020                           ;fat_format.c: 117: uint32 total_clusters;
 12021                           ;fat_format.c: 118: int i;
 12022                           ;fat_format.c: 121: memset(fs->currentsector.sector, 0, 512);
 12023                           
 12024                           ;incstack = 0
 12025  00E0BC  0E31               	movlw	49
 12026  00E0BE  2420               	addwf	fatfs_create_boot_sector@fs,w,c
 12027  00E0C0  6E01               	movwf	memset@p1,c
 12028  00E0C2  0E00               	movlw	0
 12029  00E0C4  2021               	addwfc	fatfs_create_boot_sector@fs+1,w,c
 12030  00E0C6  6E02               	movwf	memset@p1+1,c
 12031  00E0C8  6A04               	clrf	memset@c+1,c
 12032  00E0CA  6A03               	clrf	memset@c,c
 12033  00E0CC  0E02               	movlw	2
 12034  00E0CE  6E06               	movwf	memset@n+1,c
 12035  00E0D0  0E00               	movlw	0
 12036  00E0D2  6A05               	clrf	memset@n,c
 12037  00E0D4  EC1A  F020         	call	_memset	;wreg free
 12038                           
 12039                           ;fat_format.c: 124: fs->currentsector.sector[0] = 0xEB;
 12040  00E0D8  EE20 F031          	lfsr	2,49
 12041  00E0DC  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12042  00E0DE  26D9               	addwf	fsr2l,f,c
 12043  00E0E0  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12044  00E0E2  22DA               	addwfc	fsr2h,f,c
 12045  00E0E4  0EEB               	movlw	235
 12046  00E0E6  6EDF               	movwf	indf2,c
 12047                           
 12048                           ;fat_format.c: 125: fs->currentsector.sector[1] = 0x3C;
 12049  00E0E8  EE20 F032          	lfsr	2,50
 12050  00E0EC  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12051  00E0EE  26D9               	addwf	fsr2l,f,c
 12052  00E0F0  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12053  00E0F2  22DA               	addwfc	fsr2h,f,c
 12054  00E0F4  0E3C               	movlw	60
 12055  00E0F6  6EDF               	movwf	indf2,c
 12056                           
 12057                           ;fat_format.c: 126: fs->currentsector.sector[2] = 0x90;
 12058  00E0F8  EE20 F033          	lfsr	2,51
 12059  00E0FC  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12060  00E0FE  26D9               	addwf	fsr2l,f,c
 12061  00E100  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12062  00E102  22DA               	addwfc	fsr2h,f,c
 12063  00E104  0E90               	movlw	144
 12064  00E106  6EDF               	movwf	indf2,c
 12065                           
 12066                           ;fat_format.c: 127: fs->currentsector.sector[3] = 0x4D;
 12067  00E108  EE20 F034          	lfsr	2,52
 12068  00E10C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12069  00E10E  26D9               	addwf	fsr2l,f,c
 12070  00E110  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12071  00E112  22DA               	addwfc	fsr2h,f,c
 12072  00E114  0E4D               	movlw	77
 12073  00E116  6EDF               	movwf	indf2,c
 12074                           
 12075                           ;fat_format.c: 128: fs->currentsector.sector[4] = 0x53;
 12076  00E118  EE20 F035          	lfsr	2,53
 12077  00E11C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12078  00E11E  26D9               	addwf	fsr2l,f,c
 12079  00E120  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12080  00E122  22DA               	addwfc	fsr2h,f,c
 12081  00E124  0E53               	movlw	83
 12082  00E126  6EDF               	movwf	indf2,c
 12083                           
 12084                           ;fat_format.c: 129: fs->currentsector.sector[5] = 0x44;
 12085  00E128  EE20 F036          	lfsr	2,54
 12086  00E12C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12087  00E12E  26D9               	addwf	fsr2l,f,c
 12088  00E130  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12089  00E132  22DA               	addwfc	fsr2h,f,c
 12090  00E134  0E44               	movlw	68
 12091  00E136  6EDF               	movwf	indf2,c
 12092                           
 12093                           ;fat_format.c: 130: fs->currentsector.sector[6] = 0x4F;
 12094  00E138  EE20 F037          	lfsr	2,55
 12095  00E13C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12096  00E13E  26D9               	addwf	fsr2l,f,c
 12097  00E140  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12098  00E142  22DA               	addwfc	fsr2h,f,c
 12099  00E144  0E4F               	movlw	79
 12100  00E146  6EDF               	movwf	indf2,c
 12101                           
 12102                           ;fat_format.c: 131: fs->currentsector.sector[7] = 0x53;
 12103  00E148  EE20 F038          	lfsr	2,56
 12104  00E14C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12105  00E14E  26D9               	addwf	fsr2l,f,c
 12106  00E150  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12107  00E152  22DA               	addwfc	fsr2h,f,c
 12108  00E154  0E53               	movlw	83
 12109  00E156  6EDF               	movwf	indf2,c
 12110                           
 12111                           ;fat_format.c: 132: fs->currentsector.sector[8] = 0x35;
 12112  00E158  EE20 F039          	lfsr	2,57
 12113  00E15C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12114  00E15E  26D9               	addwf	fsr2l,f,c
 12115  00E160  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12116  00E162  22DA               	addwfc	fsr2h,f,c
 12117  00E164  0E35               	movlw	53
 12118  00E166  6EDF               	movwf	indf2,c
 12119                           
 12120                           ;fat_format.c: 133: fs->currentsector.sector[9] = 0x2E;
 12121  00E168  EE20 F03A          	lfsr	2,58
 12122  00E16C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12123  00E16E  26D9               	addwf	fsr2l,f,c
 12124  00E170  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12125  00E172  22DA               	addwfc	fsr2h,f,c
 12126  00E174  0E2E               	movlw	46
 12127  00E176  6EDF               	movwf	indf2,c
 12128                           
 12129                           ;fat_format.c: 134: fs->currentsector.sector[10] = 0x30;
 12130  00E178  EE20 F03B          	lfsr	2,59
 12131  00E17C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12132  00E17E  26D9               	addwf	fsr2l,f,c
 12133  00E180  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12134  00E182  22DA               	addwfc	fsr2h,f,c
 12135  00E184  0E30               	movlw	48
 12136  00E186  6EDF               	movwf	indf2,c
 12137                           
 12138                           ;fat_format.c: 137: fs->currentsector.sector[11] = (512 >> 0) & 0xFF;
 12139  00E188  EE20 F03C          	lfsr	2,60
 12140  00E18C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12141  00E18E  26D9               	addwf	fsr2l,f,c
 12142  00E190  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12143  00E192  22DA               	addwfc	fsr2h,f,c
 12144  00E194  6ADF               	clrf	indf2,c
 12145                           
 12146                           ;fat_format.c: 138: fs->currentsector.sector[12] = (512 >> 8) & 0xFF;
 12147  00E196  EE20 F03D          	lfsr	2,61
 12148  00E19A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12149  00E19C  26D9               	addwf	fsr2l,f,c
 12150  00E19E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12151  00E1A0  22DA               	addwfc	fsr2h,f,c
 12152  00E1A2  0E02               	movlw	2
 12153  00E1A4  6EDF               	movwf	indf2,c
 12154                           
 12155                           ;fat_format.c: 141: fs->sectors_per_cluster = fatfs_calc_cluster_size(vol_sectors, is_fa
      +                          t32);
 12156  00E1A6  C026  F001         	movff	fatfs_create_boot_sector@vol_sectors,fatfs_calc_cluster_size@sectors
 12157  00E1AA  C027  F002         	movff	fatfs_create_boot_sector@vol_sectors+1,fatfs_calc_cluster_size@sectors+1
 12158  00E1AE  C028  F003         	movff	fatfs_create_boot_sector@vol_sectors+2,fatfs_calc_cluster_size@sectors+2
 12159  00E1B2  C029  F004         	movff	fatfs_create_boot_sector@vol_sectors+3,fatfs_calc_cluster_size@sectors+3
 12160  00E1B6  C02C  F005         	movff	fatfs_create_boot_sector@is_fat32,fatfs_calc_cluster_size@is_fat32
 12161  00E1BA  C02D  F006         	movff	fatfs_create_boot_sector@is_fat32+1,fatfs_calc_cluster_size@is_fat32+1
 12162  00E1BE  ECB0  F034         	call	_fatfs_calc_cluster_size	;wreg free
 12163  00E1C2  C020  FFD9         	movff	fatfs_create_boot_sector@fs,fsr2l
 12164  00E1C6  C021  FFDA         	movff	fatfs_create_boot_sector@fs+1,fsr2h
 12165  00E1CA  6EDF               	movwf	indf2,c
 12166                           
 12167                           ;fat_format.c: 142: if (!fs->sectors_per_cluster)
 12168  00E1CC  C020  FFD9         	movff	fatfs_create_boot_sector@fs,fsr2l
 12169  00E1D0  C021  FFDA         	movff	fatfs_create_boot_sector@fs+1,fsr2h
 12170  00E1D4  50DF               	movf	indf2,w,c
 12171  00E1D6  E102 EF2A  F076    	bz	l10122
 12172                           
 12173                           ;fat_format.c: 146: fs->currentsector.sector[13] = fs->sectors_per_cluster;
 12174                           
 12175                           ;fat_format.c: 143: return 0;
 12176  00E1DC  C020  FFD9         	movff	fatfs_create_boot_sector@fs,fsr2l
 12177  00E1E0  C021  FFDA         	movff	fatfs_create_boot_sector@fs+1,fsr2h
 12178  00E1E4  EE10 F03E          	lfsr	1,62
 12179  00E1E8  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12180  00E1EA  26E1               	addwf	fsr1l,f,c
 12181  00E1EC  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12182  00E1EE  22E2               	addwfc	fsr1h,f,c
 12183  00E1F0  CFDF FFE7          	movff	indf2,indf1
 12184                           
 12185                           ;fat_format.c: 149: if (!is_fat32)
 12186  00E1F4  502D               	movf	fatfs_create_boot_sector@is_fat32+1,w,c
 12187  00E1F6  102C               	iorwf	fatfs_create_boot_sector@is_fat32,w,c
 12188  00E1F8  E108               	bnz	l9962
 12189                           
 12190                           ;fat_format.c: 150: fs->reserved_sectors = 8;
 12191  00E1FA  EE20 F025          	lfsr	2,37
 12192  00E1FE  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12193  00E200  26D9               	addwf	fsr2l,f,c
 12194  00E202  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12195  00E204  22DA               	addwfc	fsr2h,f,c
 12196  00E206  0E08               	movlw	8
 12197  00E208  D007               	goto	L31
 12198  00E20A                     l9962:
 12199                           
 12200                           ;fat_format.c: 151: else
 12201                           ;fat_format.c: 152: fs->reserved_sectors = 32;
 12202  00E20A  EE20 F025          	lfsr	2,37
 12203  00E20E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12204  00E210  26D9               	addwf	fsr2l,f,c
 12205  00E212  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12206  00E214  22DA               	addwfc	fsr2h,f,c
 12207  00E216  0E20               	movlw	32
 12208  00E218                     L31:
 12209  00E218  6EDE               	movwf	postinc2,c
 12210  00E21A  6ADD               	clrf	postdec2,c
 12211                           
 12212                           ;fat_format.c: 153: fs->currentsector.sector[14] = (fs->reserved_sectors >> 0) & 0xFF;
 12213  00E21C  EE20 F025          	lfsr	2,37
 12214  00E220  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12215  00E222  26D9               	addwf	fsr2l,f,c
 12216  00E224  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12217  00E226  22DA               	addwfc	fsr2h,f,c
 12218  00E228  EE10 F03F          	lfsr	1,63
 12219  00E22C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12220  00E22E  26E1               	addwf	fsr1l,f,c
 12221  00E230  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12222  00E232  22E2               	addwfc	fsr1h,f,c
 12223  00E234  CFDF FFE7          	movff	indf2,indf1
 12224                           
 12225                           ;fat_format.c: 154: fs->currentsector.sector[15] = (fs->reserved_sectors >> 8) & 0xFF;
 12226  00E238  EE20 F040          	lfsr	2,64
 12227  00E23C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12228  00E23E  26D9               	addwf	fsr2l,f,c
 12229  00E240  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12230  00E242  22DA               	addwfc	fsr2h,f,c
 12231  00E244  EE10 F025          	lfsr	1,37
 12232  00E248  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12233  00E24A  26E1               	addwf	fsr1l,f,c
 12234  00E24C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12235  00E24E  22E2               	addwfc	fsr1h,f,c
 12236  00E250  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 12237  00E254  CFE5 F02F          	movff	postdec1,??_fatfs_create_boot_sector+1
 12238  00E258  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 12239  00E25C  6A2F               	clrf	??_fatfs_create_boot_sector+1,c
 12240  00E25E  502E               	movf	??_fatfs_create_boot_sector,w,c
 12241  00E260  6EDF               	movwf	indf2,c
 12242                           
 12243                           ;fat_format.c: 157: fs->num_of_fats = 2;
 12244  00E262  EE20 F027          	lfsr	2,39
 12245  00E266  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12246  00E268  26D9               	addwf	fsr2l,f,c
 12247  00E26A  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12248  00E26C  22DA               	addwfc	fsr2h,f,c
 12249  00E26E  0E02               	movlw	2
 12250  00E270  6EDF               	movwf	indf2,c
 12251                           
 12252                           ;fat_format.c: 158: fs->currentsector.sector[16] = fs->num_of_fats;
 12253  00E272  EE20 F027          	lfsr	2,39
 12254  00E276  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12255  00E278  26D9               	addwf	fsr2l,f,c
 12256  00E27A  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12257  00E27C  22DA               	addwfc	fsr2h,f,c
 12258  00E27E  EE10 F041          	lfsr	1,65
 12259  00E282  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12260  00E284  26E1               	addwf	fsr1l,f,c
 12261  00E286  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12262  00E288  22E2               	addwfc	fsr1h,f,c
 12263  00E28A  CFDF FFE7          	movff	indf2,indf1
 12264                           
 12265                           ;fat_format.c: 161: if (!is_fat32)
 12266  00E28E  502D               	movf	fatfs_create_boot_sector@is_fat32+1,w,c
 12267  00E290  102C               	iorwf	fatfs_create_boot_sector@is_fat32,w,c
 12268  00E292  E12C               	bnz	l9978
 12269                           
 12270                           ;fat_format.c: 162: {
 12271                           ;fat_format.c: 163: fs->root_entry_count = 512;
 12272  00E294  EE20 F023          	lfsr	2,35
 12273  00E298  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12274  00E29A  26D9               	addwf	fsr2l,f,c
 12275  00E29C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12276  00E29E  22DA               	addwfc	fsr2h,f,c
 12277  00E2A0  6ADE               	clrf	postinc2,c
 12278  00E2A2  0E02               	movlw	2
 12279  00E2A4  6EDD               	movwf	postdec2,c
 12280                           
 12281                           ;fat_format.c: 164: fs->currentsector.sector[17] = (fs->root_entry_count >> 0) & 0xFF;
 12282  00E2A6  EE20 F023          	lfsr	2,35
 12283  00E2AA  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12284  00E2AC  26D9               	addwf	fsr2l,f,c
 12285  00E2AE  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12286  00E2B0  22DA               	addwfc	fsr2h,f,c
 12287  00E2B2  EE10 F042          	lfsr	1,66
 12288  00E2B6  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12289  00E2B8  26E1               	addwf	fsr1l,f,c
 12290  00E2BA  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12291  00E2BC  22E2               	addwfc	fsr1h,f,c
 12292  00E2BE  CFDF FFE7          	movff	indf2,indf1
 12293                           
 12294                           ;fat_format.c: 165: fs->currentsector.sector[18] = (fs->root_entry_count >> 8) & 0xFF;
 12295  00E2C2  EE20 F043          	lfsr	2,67
 12296  00E2C6  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12297  00E2C8  26D9               	addwf	fsr2l,f,c
 12298  00E2CA  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12299  00E2CC  22DA               	addwfc	fsr2h,f,c
 12300  00E2CE  EE10 F023          	lfsr	1,35
 12301  00E2D2  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12302  00E2D4  26E1               	addwf	fsr1l,f,c
 12303  00E2D6  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12304  00E2D8  22E2               	addwfc	fsr1h,f,c
 12305  00E2DA  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 12306  00E2DE  CFE5 F02F          	movff	postdec1,??_fatfs_create_boot_sector+1
 12307  00E2E2  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 12308  00E2E6  6A2F               	clrf	??_fatfs_create_boot_sector+1,c
 12309  00E2E8  502E               	movf	??_fatfs_create_boot_sector,w,c
 12310  00E2EA  D016               	goto	L32
 12311  00E2EC                     l9978:
 12312                           
 12313                           ;fat_format.c: 167: else
 12314                           ;fat_format.c: 168: {
 12315                           ;fat_format.c: 169: fs->root_entry_count = 0;
 12316  00E2EC  EE20 F023          	lfsr	2,35
 12317  00E2F0  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12318  00E2F2  26D9               	addwf	fsr2l,f,c
 12319  00E2F4  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12320  00E2F6  22DA               	addwfc	fsr2h,f,c
 12321  00E2F8  6ADE               	clrf	postinc2,c
 12322  00E2FA  6ADD               	clrf	postdec2,c
 12323                           
 12324                           ;fat_format.c: 170: fs->currentsector.sector[17] = 0;
 12325  00E2FC  EE20 F042          	lfsr	2,66
 12326  00E300  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12327  00E302  26D9               	addwf	fsr2l,f,c
 12328  00E304  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12329  00E306  22DA               	addwfc	fsr2h,f,c
 12330  00E308  6ADF               	clrf	indf2,c
 12331                           
 12332                           ;fat_format.c: 171: fs->currentsector.sector[18] = 0;
 12333  00E30A  EE20 F043          	lfsr	2,67
 12334  00E30E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12335  00E310  26D9               	addwf	fsr2l,f,c
 12336  00E312  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12337  00E314  22DA               	addwfc	fsr2h,f,c
 12338  00E316  0E00               	movlw	0
 12339  00E318                     L32:
 12340  00E318  6EDF               	movwf	indf2,c
 12341                           
 12342                           ;fat_format.c: 172: }
 12343                           ;fat_format.c: 175: fs->currentsector.sector[19] = 0x00;
 12344  00E31A  EE20 F044          	lfsr	2,68
 12345  00E31E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12346  00E320  26D9               	addwf	fsr2l,f,c
 12347  00E322  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12348  00E324  22DA               	addwfc	fsr2h,f,c
 12349  00E326  6ADF               	clrf	indf2,c
 12350                           
 12351                           ;fat_format.c: 176: fs->currentsector.sector[20] = 0x00;
 12352  00E328  EE20 F045          	lfsr	2,69
 12353  00E32C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12354  00E32E  26D9               	addwf	fsr2l,f,c
 12355  00E330  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12356  00E332  22DA               	addwfc	fsr2h,f,c
 12357  00E334  6ADF               	clrf	indf2,c
 12358                           
 12359                           ;fat_format.c: 179: fs->currentsector.sector[21] = 0xF8;
 12360  00E336  EE20 F046          	lfsr	2,70
 12361  00E33A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12362  00E33C  26D9               	addwf	fsr2l,f,c
 12363  00E33E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12364  00E340  22DA               	addwfc	fsr2h,f,c
 12365  00E342  0EF8               	movlw	248
 12366  00E344  6EDF               	movwf	indf2,c
 12367                           
 12368                           ;fat_format.c: 183: if (!is_fat32)
 12369  00E346  502D               	movf	fatfs_create_boot_sector@is_fat32+1,w,c
 12370  00E348  102C               	iorwf	fatfs_create_boot_sector@is_fat32,w,c
 12371  00E34A  E001 D19E          	bnz	l10046
 12372                           
 12373                           ;fat_format.c: 184: {
 12374                           ;fat_format.c: 186: total_clusters = (vol_sectors / fs->sectors_per_cluster) + 1;
 12375  00E34E  C026  F001         	movff	fatfs_create_boot_sector@vol_sectors,___lldiv@dividend
 12376  00E352  C027  F002         	movff	fatfs_create_boot_sector@vol_sectors+1,___lldiv@dividend+1
 12377  00E356  C028  F003         	movff	fatfs_create_boot_sector@vol_sectors+2,___lldiv@dividend+2
 12378  00E35A  C029  F004         	movff	fatfs_create_boot_sector@vol_sectors+3,___lldiv@dividend+3
 12379  00E35E  C020  FFD9         	movff	fatfs_create_boot_sector@fs,fsr2l
 12380  00E362  C021  FFDA         	movff	fatfs_create_boot_sector@fs+1,fsr2h
 12381  00E366  50DF               	movf	indf2,w,c
 12382  00E368  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 12383  00E36A  502E               	movf	??_fatfs_create_boot_sector,w,c
 12384  00E36C  6E05               	movwf	___lldiv@divisor,c
 12385  00E36E  6A06               	clrf	___lldiv@divisor+1,c
 12386  00E370  6A07               	clrf	___lldiv@divisor+2,c
 12387  00E372  6A08               	clrf	___lldiv@divisor+3,c
 12388  00E374  EC7B  F026         	call	___lldiv	;wreg free
 12389  00E378  C001  F02F         	movff	?___lldiv,??_fatfs_create_boot_sector+1
 12390  00E37C  C002  F030         	movff	?___lldiv+1,??_fatfs_create_boot_sector+2
 12391  00E380  C003  F031         	movff	?___lldiv+2,??_fatfs_create_boot_sector+3
 12392  00E384  C004  F032         	movff	?___lldiv+3,??_fatfs_create_boot_sector+4
 12393  00E388  282F               	incf	??_fatfs_create_boot_sector+1,w,c
 12394  00E38A  6E36               	movwf	fatfs_create_boot_sector@total_clusters,c
 12395  00E38C  0E00               	movlw	0
 12396  00E38E  2030               	addwfc	??_fatfs_create_boot_sector+2,w,c
 12397  00E390  6E37               	movwf	fatfs_create_boot_sector@total_clusters+1,c
 12398  00E392  0E00               	movlw	0
 12399  00E394  2031               	addwfc	??_fatfs_create_boot_sector+3,w,c
 12400  00E396  6E38               	movwf	fatfs_create_boot_sector@total_clusters+2,c
 12401  00E398  0E00               	movlw	0
 12402  00E39A  2032               	addwfc	??_fatfs_create_boot_sector+4,w,c
 12403  00E39C  6E39               	movwf	fatfs_create_boot_sector@total_clusters+3,c
 12404                           
 12405                           ;fat_format.c: 187: fs->fat_sectors = (total_clusters/(512/2)) + 1;
 12406  00E39E  0E01               	movlw	1
 12407  00E3A0  C036  F02E         	movff	fatfs_create_boot_sector@total_clusters,??_fatfs_create_boot_sector
 12408  00E3A4  C037  F02F         	movff	fatfs_create_boot_sector@total_clusters+1,??_fatfs_create_boot_sector+1
 12409  00E3A8  C038  F030         	movff	fatfs_create_boot_sector@total_clusters+2,??_fatfs_create_boot_sector+2
 12410  00E3AC  C039  F031         	movff	fatfs_create_boot_sector@total_clusters+3,??_fatfs_create_boot_sector+3
 12411  00E3B0  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 12412  00E3B4  C030  F02F         	movff	??_fatfs_create_boot_sector+2,??_fatfs_create_boot_sector+1
 12413  00E3B8  C031  F030         	movff	??_fatfs_create_boot_sector+3,??_fatfs_create_boot_sector+2
 12414  00E3BC  6A31               	clrf	??_fatfs_create_boot_sector+3,c
 12415  00E3BE  242E               	addwf	??_fatfs_create_boot_sector,w,c
 12416  00E3C0  6E32               	movwf	(??_fatfs_create_boot_sector+4)& (0+255),c
 12417  00E3C2  0E00               	movlw	0
 12418  00E3C4  202F               	addwfc	??_fatfs_create_boot_sector+1,w,c
 12419  00E3C6  6E33               	movwf	(??_fatfs_create_boot_sector+5)& (0+255),c
 12420  00E3C8  0E00               	movlw	0
 12421  00E3CA  2030               	addwfc	??_fatfs_create_boot_sector+2,w,c
 12422  00E3CC  6E34               	movwf	(??_fatfs_create_boot_sector+6)& (0+255),c
 12423  00E3CE  0E00               	movlw	0
 12424  00E3D0  2031               	addwfc	??_fatfs_create_boot_sector+3,w,c
 12425  00E3D2  6E35               	movwf	(??_fatfs_create_boot_sector+7)& (0+255),c
 12426  00E3D4  EE20 F01B          	lfsr	2,27
 12427  00E3D8  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12428  00E3DA  26D9               	addwf	fsr2l,f,c
 12429  00E3DC  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12430  00E3DE  22DA               	addwfc	fsr2h,f,c
 12431  00E3E0  C032  FFDE         	movff	??_fatfs_create_boot_sector+4,postinc2
 12432  00E3E4  C033  FFDE         	movff	??_fatfs_create_boot_sector+5,postinc2
 12433  00E3E8  C034  FFDE         	movff	??_fatfs_create_boot_sector+6,postinc2
 12434  00E3EC  C035  FFDD         	movff	??_fatfs_create_boot_sector+7,postdec2
 12435  00E3F0  06D9               	decf	fsr2l,f,c
 12436  00E3F2  06D9               	decf	fsr2l,f,c
 12437                           
 12438                           ;fat_format.c: 188: fs->currentsector.sector[22] = (uint8)((fs->fat_sectors >> 0) & 0xFF
      +                          );
 12439  00E3F4  EE20 F01B          	lfsr	2,27
 12440  00E3F8  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12441  00E3FA  26D9               	addwf	fsr2l,f,c
 12442  00E3FC  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12443  00E3FE  22DA               	addwfc	fsr2h,f,c
 12444  00E400  EE10 F047          	lfsr	1,71
 12445  00E404  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12446  00E406  26E1               	addwf	fsr1l,f,c
 12447  00E408  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12448  00E40A  22E2               	addwfc	fsr1h,f,c
 12449  00E40C  CFDF FFE7          	movff	indf2,indf1
 12450                           
 12451                           ;fat_format.c: 189: fs->currentsector.sector[23] = (uint8)((fs->fat_sectors >> 8) & 0xFF
      +                          );
 12452  00E410  EE20 F048          	lfsr	2,72
 12453  00E414  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12454  00E416  26D9               	addwf	fsr2l,f,c
 12455  00E418  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12456  00E41A  22DA               	addwfc	fsr2h,f,c
 12457  00E41C  EE10 F01B          	lfsr	1,27
 12458  00E420  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12459  00E422  26E1               	addwf	fsr1l,f,c
 12460  00E424  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12461  00E426  22E2               	addwfc	fsr1h,f,c
 12462  00E428  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 12463  00E42C  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 12464  00E430  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 12465  00E434  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 12466  00E438  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 12467  00E43C  C030  F02F         	movff	??_fatfs_create_boot_sector+2,??_fatfs_create_boot_sector+1
 12468  00E440  C031  F030         	movff	??_fatfs_create_boot_sector+3,??_fatfs_create_boot_sector+2
 12469  00E444  6A31               	clrf	??_fatfs_create_boot_sector+3,c
 12470  00E446  502E               	movf	??_fatfs_create_boot_sector,w,c
 12471  00E448  6EDF               	movwf	indf2,c
 12472                           
 12473                           ;fat_format.c: 192: fs->currentsector.sector[24] = 0x00;
 12474  00E44A  EE20 F049          	lfsr	2,73
 12475  00E44E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12476  00E450  26D9               	addwf	fsr2l,f,c
 12477  00E452  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12478  00E454  22DA               	addwfc	fsr2h,f,c
 12479  00E456  6ADF               	clrf	indf2,c
 12480                           
 12481                           ;fat_format.c: 193: fs->currentsector.sector[25] = 0x00;
 12482  00E458  EE20 F04A          	lfsr	2,74
 12483  00E45C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12484  00E45E  26D9               	addwf	fsr2l,f,c
 12485  00E460  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12486  00E462  22DA               	addwfc	fsr2h,f,c
 12487  00E464  6ADF               	clrf	indf2,c
 12488                           
 12489                           ;fat_format.c: 196: fs->currentsector.sector[26] = 0x00;
 12490  00E466  EE20 F04B          	lfsr	2,75
 12491  00E46A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12492  00E46C  26D9               	addwf	fsr2l,f,c
 12493  00E46E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12494  00E470  22DA               	addwfc	fsr2h,f,c
 12495  00E472  6ADF               	clrf	indf2,c
 12496                           
 12497                           ;fat_format.c: 197: fs->currentsector.sector[27] = 0x00;
 12498  00E474  EE20 F04C          	lfsr	2,76
 12499  00E478  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12500  00E47A  26D9               	addwf	fsr2l,f,c
 12501  00E47C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12502  00E47E  22DA               	addwfc	fsr2h,f,c
 12503  00E480  6ADF               	clrf	indf2,c
 12504                           
 12505                           ;fat_format.c: 200: fs->currentsector.sector[28] = 0x20;
 12506  00E482  EE20 F04D          	lfsr	2,77
 12507  00E486  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12508  00E488  26D9               	addwf	fsr2l,f,c
 12509  00E48A  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12510  00E48C  22DA               	addwfc	fsr2h,f,c
 12511  00E48E  0E20               	movlw	32
 12512  00E490  6EDF               	movwf	indf2,c
 12513                           
 12514                           ;fat_format.c: 201: fs->currentsector.sector[29] = 0x00;
 12515  00E492  EE20 F04E          	lfsr	2,78
 12516  00E496  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12517  00E498  26D9               	addwf	fsr2l,f,c
 12518  00E49A  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12519  00E49C  22DA               	addwfc	fsr2h,f,c
 12520  00E49E  6ADF               	clrf	indf2,c
 12521                           
 12522                           ;fat_format.c: 202: fs->currentsector.sector[30] = 0x00;
 12523  00E4A0  EE20 F04F          	lfsr	2,79
 12524  00E4A4  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12525  00E4A6  26D9               	addwf	fsr2l,f,c
 12526  00E4A8  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12527  00E4AA  22DA               	addwfc	fsr2h,f,c
 12528  00E4AC  6ADF               	clrf	indf2,c
 12529                           
 12530                           ;fat_format.c: 203: fs->currentsector.sector[31] = 0x00;
 12531  00E4AE  EE20 F050          	lfsr	2,80
 12532  00E4B2  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12533  00E4B4  26D9               	addwf	fsr2l,f,c
 12534  00E4B6  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12535  00E4B8  22DA               	addwfc	fsr2h,f,c
 12536  00E4BA  6ADF               	clrf	indf2,c
 12537                           
 12538                           ;fat_format.c: 206: fs->currentsector.sector[32] = (uint8)((vol_sectors>>0)&0xFF);
 12539  00E4BC  EE20 F051          	lfsr	2,81
 12540  00E4C0  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12541  00E4C2  26D9               	addwf	fsr2l,f,c
 12542  00E4C4  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12543  00E4C6  22DA               	addwfc	fsr2h,f,c
 12544  00E4C8  C026  FFDF         	movff	fatfs_create_boot_sector@vol_sectors,indf2
 12545                           
 12546                           ;fat_format.c: 207: fs->currentsector.sector[33] = (uint8)((vol_sectors>>8)&0xFF);
 12547  00E4CC  EE20 F052          	lfsr	2,82
 12548  00E4D0  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12549  00E4D2  26D9               	addwf	fsr2l,f,c
 12550  00E4D4  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12551  00E4D6  22DA               	addwfc	fsr2h,f,c
 12552  00E4D8  C027  FFDF         	movff	fatfs_create_boot_sector@vol_sectors+1,indf2
 12553                           
 12554                           ;fat_format.c: 208: fs->currentsector.sector[34] = (uint8)((vol_sectors>>16)&0xFF);
 12555  00E4DC  EE20 F053          	lfsr	2,83
 12556  00E4E0  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12557  00E4E2  26D9               	addwf	fsr2l,f,c
 12558  00E4E4  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12559  00E4E6  22DA               	addwfc	fsr2h,f,c
 12560  00E4E8  C028  FFDF         	movff	fatfs_create_boot_sector@vol_sectors+2,indf2
 12561                           
 12562                           ;fat_format.c: 209: fs->currentsector.sector[35] = (uint8)((vol_sectors>>24)&0xFF);
 12563  00E4EC  EE20 F054          	lfsr	2,84
 12564  00E4F0  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12565  00E4F2  26D9               	addwf	fsr2l,f,c
 12566  00E4F4  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12567  00E4F6  22DA               	addwfc	fsr2h,f,c
 12568  00E4F8  C029  FFDF         	movff	fatfs_create_boot_sector@vol_sectors+3,indf2
 12569                           
 12570                           ;fat_format.c: 212: fs->currentsector.sector[36] = 0x00;
 12571  00E4FC  EE20 F055          	lfsr	2,85
 12572  00E500  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12573  00E502  26D9               	addwf	fsr2l,f,c
 12574  00E504  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12575  00E506  22DA               	addwfc	fsr2h,f,c
 12576  00E508  6ADF               	clrf	indf2,c
 12577                           
 12578                           ;fat_format.c: 215: fs->currentsector.sector[37] = 0x00;
 12579  00E50A  EE20 F056          	lfsr	2,86
 12580  00E50E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12581  00E510  26D9               	addwf	fsr2l,f,c
 12582  00E512  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12583  00E514  22DA               	addwfc	fsr2h,f,c
 12584  00E516  6ADF               	clrf	indf2,c
 12585                           
 12586                           ;fat_format.c: 218: fs->currentsector.sector[38] = 0x29;
 12587  00E518  EE20 F057          	lfsr	2,87
 12588  00E51C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12589  00E51E  26D9               	addwf	fsr2l,f,c
 12590  00E520  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12591  00E522  22DA               	addwfc	fsr2h,f,c
 12592  00E524  0E29               	movlw	41
 12593  00E526  6EDF               	movwf	indf2,c
 12594                           
 12595                           ;fat_format.c: 221: fs->currentsector.sector[39] = 0x12;
 12596  00E528  EE20 F058          	lfsr	2,88
 12597  00E52C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12598  00E52E  26D9               	addwf	fsr2l,f,c
 12599  00E530  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12600  00E532  22DA               	addwfc	fsr2h,f,c
 12601  00E534  0E12               	movlw	18
 12602  00E536  6EDF               	movwf	indf2,c
 12603                           
 12604                           ;fat_format.c: 222: fs->currentsector.sector[40] = 0x34;
 12605  00E538  EE20 F059          	lfsr	2,89
 12606  00E53C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12607  00E53E  26D9               	addwf	fsr2l,f,c
 12608  00E540  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12609  00E542  22DA               	addwfc	fsr2h,f,c
 12610  00E544  0E34               	movlw	52
 12611  00E546  6EDF               	movwf	indf2,c
 12612                           
 12613                           ;fat_format.c: 223: fs->currentsector.sector[41] = 0x56;
 12614  00E548  EE20 F05A          	lfsr	2,90
 12615  00E54C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12616  00E54E  26D9               	addwf	fsr2l,f,c
 12617  00E550  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12618  00E552  22DA               	addwfc	fsr2h,f,c
 12619  00E554  0E56               	movlw	86
 12620  00E556  6EDF               	movwf	indf2,c
 12621                           
 12622                           ;fat_format.c: 224: fs->currentsector.sector[42] = 0x78;
 12623  00E558  EE20 F05B          	lfsr	2,91
 12624  00E55C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12625  00E55E  26D9               	addwf	fsr2l,f,c
 12626  00E560  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12627  00E562  22DA               	addwfc	fsr2h,f,c
 12628  00E564  0E78               	movlw	120
 12629  00E566  6EDF               	movwf	indf2,c
 12630                           
 12631                           ;fat_format.c: 227: for (i=0;i<11;i++)
 12632  00E568  6A3B               	clrf	fatfs_create_boot_sector@i+1,c
 12633  00E56A  6A3A               	clrf	fatfs_create_boot_sector@i,c
 12634  00E56C  503B               	movf	fatfs_create_boot_sector@i+1,w,c
 12635  00E56E  0A80               	xorlw	128
 12636  00E570  0F80               	addlw	-128
 12637  00E572  0E0B               	movlw	11
 12638  00E574  B4D8               	btfsc	status,2,c
 12639  00E576  5C3A               	subwf	fatfs_create_boot_sector@i,w,c
 12640  00E578  E24D               	bc	l10044
 12641                           
 12642                           ;fat_format.c: 228: {
 12643                           ;fat_format.c: 229: if (i < (int)strlen(name))
 12644  00E57A  C02B  F002         	movff	fatfs_create_boot_sector@name+1,strlen@s+1
 12645  00E57E  C02A  F001         	movff	fatfs_create_boot_sector@name,strlen@s
 12646  00E582  EC71  F022         	call	_strlen	;wreg free
 12647  00E586  503B               	movf	fatfs_create_boot_sector@i+1,w,c
 12648  00E588  0A80               	xorlw	128
 12649  00E58A  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 12650  00E58C  5001               	movf	?_strlen,w,c
 12651  00E58E  5C3A               	subwf	fatfs_create_boot_sector@i,w,c
 12652  00E590  5002               	movf	?_strlen+1,w,c
 12653  00E592  0A80               	xorlw	128
 12654  00E594  582E               	subwfb	??_fatfs_create_boot_sector& (0+255),w,c
 12655  00E596  E225               	bc	l10038
 12656                           
 12657                           ;fat_format.c: 230: fs->currentsector.sector[i+43] = name[i];
 12658  00E598  C02A  F02E         	movff	fatfs_create_boot_sector@name,??_fatfs_create_boot_sector
 12659  00E59C  C02B  F02F         	movff	fatfs_create_boot_sector@name+1,??_fatfs_create_boot_sector+1
 12660  00E5A0  503A               	movf	fatfs_create_boot_sector@i,w,c
 12661  00E5A2  262E               	addwf	??_fatfs_create_boot_sector,f,c
 12662  00E5A4  503B               	movf	fatfs_create_boot_sector@i+1,w,c
 12663  00E5A6  222F               	addwfc	??_fatfs_create_boot_sector+1,f,c
 12664  00E5A8  C02E  FFF6         	movff	??_fatfs_create_boot_sector,tblptrl
 12665  00E5AC  C02F  FFF7         	movff	??_fatfs_create_boot_sector+1,tblptrh
 12666  00E5B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12667  00E5B0  6AF8               	clrf	tblptru,c
 12668  00E5B2                     	endif
 12669  00E5B2                     	if	0	;tblptru may be non-zero
 12670  00E5B2                     	endif
 12671  00E5B2  0E2B               	movlw	43
 12672  00E5B4  243A               	addwf	fatfs_create_boot_sector@i,w,c
 12673  00E5B6  6E30               	movwf	(??_fatfs_create_boot_sector+2)& (0+255),c
 12674  00E5B8  0E00               	movlw	0
 12675  00E5BA  203B               	addwfc	fatfs_create_boot_sector@i+1,w,c
 12676  00E5BC  6E31               	movwf	(??_fatfs_create_boot_sector+3)& (0+255),c
 12677  00E5BE  C020  F032         	movff	fatfs_create_boot_sector@fs,??_fatfs_create_boot_sector+4
 12678  00E5C2  C021  F033         	movff	fatfs_create_boot_sector@fs+1,??_fatfs_create_boot_sector+5
 12679  00E5C6  5030               	movf	??_fatfs_create_boot_sector+2,w,c
 12680  00E5C8  2632               	addwf	??_fatfs_create_boot_sector+4,f,c
 12681  00E5CA  5031               	movf	??_fatfs_create_boot_sector+3,w,c
 12682  00E5CC  2233               	addwfc	??_fatfs_create_boot_sector+5,f,c
 12683  00E5CE  0E31               	movlw	49
 12684  00E5D0  2432               	addwf	??_fatfs_create_boot_sector+4,w,c
 12685  00E5D2  6ED9               	movwf	fsr2l,c
 12686  00E5D4  0E00               	movlw	0
 12687  00E5D6  2033               	addwfc	??_fatfs_create_boot_sector+5,w,c
 12688  00E5D8  6EDA               	movwf	fsr2h,c
 12689  00E5DA  0008               	tblrd		*
 12690  00E5DC  CFF5 FFDF          	movff	tablat,indf2
 12691  00E5E0  D016               	goto	l10040
 12692  00E5E2                     l10038:
 12693                           
 12694                           ;fat_format.c: 231: else
 12695                           ;fat_format.c: 232: fs->currentsector.sector[i+43] = ' ';
 12696  00E5E2  0E2B               	movlw	43
 12697  00E5E4  243A               	addwf	fatfs_create_boot_sector@i,w,c
 12698  00E5E6  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 12699  00E5E8  0E00               	movlw	0
 12700  00E5EA  203B               	addwfc	fatfs_create_boot_sector@i+1,w,c
 12701  00E5EC  6E2F               	movwf	(??_fatfs_create_boot_sector+1)& (0+255),c
 12702  00E5EE  C020  F030         	movff	fatfs_create_boot_sector@fs,??_fatfs_create_boot_sector+2
 12703  00E5F2  C021  F031         	movff	fatfs_create_boot_sector@fs+1,??_fatfs_create_boot_sector+3
 12704  00E5F6  502E               	movf	??_fatfs_create_boot_sector,w,c
 12705  00E5F8  2630               	addwf	??_fatfs_create_boot_sector+2,f,c
 12706  00E5FA  502F               	movf	??_fatfs_create_boot_sector+1,w,c
 12707  00E5FC  2231               	addwfc	??_fatfs_create_boot_sector+3,f,c
 12708  00E5FE  0E31               	movlw	49
 12709  00E600  2430               	addwf	??_fatfs_create_boot_sector+2,w,c
 12710  00E602  6ED9               	movwf	fsr2l,c
 12711  00E604  0E00               	movlw	0
 12712  00E606  2031               	addwfc	??_fatfs_create_boot_sector+3,w,c
 12713  00E608  6EDA               	movwf	fsr2h,c
 12714  00E60A  0E20               	movlw	32
 12715  00E60C  6EDF               	movwf	indf2,c
 12716  00E60E                     l10040:
 12717  00E60E  4A3A               	infsnz	fatfs_create_boot_sector@i,f,c
 12718  00E610  2A3B               	incf	fatfs_create_boot_sector@i+1,f,c
 12719  00E612  D7AC               	goto	L33
 12720  00E614                     l10044:
 12721                           
 12722                           ;fat_format.c: 233: }
 12723                           ;fat_format.c: 236: fs->currentsector.sector[54] = 'F';
 12724  00E614  EE20 F067          	lfsr	2,103
 12725  00E618  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12726  00E61A  26D9               	addwf	fsr2l,f,c
 12727  00E61C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12728  00E61E  22DA               	addwfc	fsr2h,f,c
 12729  00E620  0E46               	movlw	70
 12730  00E622  6EDF               	movwf	indf2,c
 12731                           
 12732                           ;fat_format.c: 237: fs->currentsector.sector[55] = 'A';
 12733  00E624  EE20 F068          	lfsr	2,104
 12734  00E628  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12735  00E62A  26D9               	addwf	fsr2l,f,c
 12736  00E62C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12737  00E62E  22DA               	addwfc	fsr2h,f,c
 12738  00E630  0E41               	movlw	65
 12739  00E632  6EDF               	movwf	indf2,c
 12740                           
 12741                           ;fat_format.c: 238: fs->currentsector.sector[56] = 'T';
 12742  00E634  EE20 F069          	lfsr	2,105
 12743  00E638  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12744  00E63A  26D9               	addwf	fsr2l,f,c
 12745  00E63C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12746  00E63E  22DA               	addwfc	fsr2h,f,c
 12747  00E640  0E54               	movlw	84
 12748  00E642  6EDF               	movwf	indf2,c
 12749                           
 12750                           ;fat_format.c: 239: fs->currentsector.sector[57] = '1';
 12751  00E644  EE20 F06A          	lfsr	2,106
 12752  00E648  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12753  00E64A  26D9               	addwf	fsr2l,f,c
 12754  00E64C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12755  00E64E  22DA               	addwfc	fsr2h,f,c
 12756  00E650  0E31               	movlw	49
 12757  00E652  6EDF               	movwf	indf2,c
 12758                           
 12759                           ;fat_format.c: 240: fs->currentsector.sector[58] = '6';
 12760  00E654  EE20 F06B          	lfsr	2,107
 12761  00E658  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12762  00E65A  26D9               	addwf	fsr2l,f,c
 12763  00E65C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12764  00E65E  22DA               	addwfc	fsr2h,f,c
 12765  00E660  0E36               	movlw	54
 12766  00E662  6EDF               	movwf	indf2,c
 12767                           
 12768                           ;fat_format.c: 241: fs->currentsector.sector[59] = ' ';
 12769  00E664  EE20 F06C          	lfsr	2,108
 12770  00E668  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12771  00E66A  26D9               	addwf	fsr2l,f,c
 12772  00E66C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12773  00E66E  22DA               	addwfc	fsr2h,f,c
 12774  00E670  0E20               	movlw	32
 12775  00E672  6EDF               	movwf	indf2,c
 12776                           
 12777                           ;fat_format.c: 242: fs->currentsector.sector[60] = ' ';
 12778  00E674  EE20 F06D          	lfsr	2,109
 12779  00E678  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12780  00E67A  26D9               	addwf	fsr2l,f,c
 12781  00E67C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12782  00E67E  22DA               	addwfc	fsr2h,f,c
 12783  00E680  0E20               	movlw	32
 12784  00E682  6EDF               	movwf	indf2,c
 12785                           
 12786                           ;fat_format.c: 243: fs->currentsector.sector[61] = ' ';
 12787  00E684  EE20 F06E          	lfsr	2,110
 12788  00E688  D29A               	goto	L34
 12789  00E68A                     l10046:
 12790                           
 12791                           ;fat_format.c: 250: else
 12792                           ;fat_format.c: 251: {
 12793                           ;fat_format.c: 253: fs->currentsector.sector[22] = 0;
 12794  00E68A  EE20 F047          	lfsr	2,71
 12795  00E68E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12796  00E690  26D9               	addwf	fsr2l,f,c
 12797  00E692  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12798  00E694  22DA               	addwfc	fsr2h,f,c
 12799  00E696  6ADF               	clrf	indf2,c
 12800                           
 12801                           ;fat_format.c: 254: fs->currentsector.sector[23] = 0;
 12802  00E698  EE20 F048          	lfsr	2,72
 12803  00E69C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12804  00E69E  26D9               	addwf	fsr2l,f,c
 12805  00E6A0  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12806  00E6A2  22DA               	addwfc	fsr2h,f,c
 12807  00E6A4  6ADF               	clrf	indf2,c
 12808                           
 12809                           ;fat_format.c: 257: fs->currentsector.sector[24] = 0x3F;
 12810  00E6A6  EE20 F049          	lfsr	2,73
 12811  00E6AA  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12812  00E6AC  26D9               	addwf	fsr2l,f,c
 12813  00E6AE  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12814  00E6B0  22DA               	addwfc	fsr2h,f,c
 12815  00E6B2  0E3F               	movlw	63
 12816  00E6B4  6EDF               	movwf	indf2,c
 12817                           
 12818                           ;fat_format.c: 258: fs->currentsector.sector[25] = 0x00;
 12819  00E6B6  EE20 F04A          	lfsr	2,74
 12820  00E6BA  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12821  00E6BC  26D9               	addwf	fsr2l,f,c
 12822  00E6BE  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12823  00E6C0  22DA               	addwfc	fsr2h,f,c
 12824  00E6C2  6ADF               	clrf	indf2,c
 12825                           
 12826                           ;fat_format.c: 261: fs->currentsector.sector[26] = 0xFF;
 12827  00E6C4  EE20 F04B          	lfsr	2,75
 12828  00E6C8  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12829  00E6CA  26D9               	addwf	fsr2l,f,c
 12830  00E6CC  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12831  00E6CE  22DA               	addwfc	fsr2h,f,c
 12832  00E6D0  68DF               	setf	indf2,c
 12833                           
 12834                           ;fat_format.c: 262: fs->currentsector.sector[27] = 0x00;
 12835  00E6D2  EE20 F04C          	lfsr	2,76
 12836  00E6D6  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12837  00E6D8  26D9               	addwf	fsr2l,f,c
 12838  00E6DA  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12839  00E6DC  22DA               	addwfc	fsr2h,f,c
 12840  00E6DE  6ADF               	clrf	indf2,c
 12841                           
 12842                           ;fat_format.c: 265: fs->currentsector.sector[28] = 0x00;
 12843  00E6E0  EE20 F04D          	lfsr	2,77
 12844  00E6E4  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12845  00E6E6  26D9               	addwf	fsr2l,f,c
 12846  00E6E8  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12847  00E6EA  22DA               	addwfc	fsr2h,f,c
 12848  00E6EC  6ADF               	clrf	indf2,c
 12849                           
 12850                           ;fat_format.c: 266: fs->currentsector.sector[29] = 0x00;
 12851  00E6EE  EE20 F04E          	lfsr	2,78
 12852  00E6F2  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12853  00E6F4  26D9               	addwf	fsr2l,f,c
 12854  00E6F6  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12855  00E6F8  22DA               	addwfc	fsr2h,f,c
 12856  00E6FA  6ADF               	clrf	indf2,c
 12857                           
 12858                           ;fat_format.c: 267: fs->currentsector.sector[30] = 0x00;
 12859  00E6FC  EE20 F04F          	lfsr	2,79
 12860  00E700  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12861  00E702  26D9               	addwf	fsr2l,f,c
 12862  00E704  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12863  00E706  22DA               	addwfc	fsr2h,f,c
 12864  00E708  6ADF               	clrf	indf2,c
 12865                           
 12866                           ;fat_format.c: 268: fs->currentsector.sector[31] = 0x00;
 12867  00E70A  EE20 F050          	lfsr	2,80
 12868  00E70E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12869  00E710  26D9               	addwf	fsr2l,f,c
 12870  00E712  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12871  00E714  22DA               	addwfc	fsr2h,f,c
 12872  00E716  6ADF               	clrf	indf2,c
 12873                           
 12874                           ;fat_format.c: 271: fs->currentsector.sector[32] = (uint8)((vol_sectors>>0)&0xFF);
 12875  00E718  EE20 F051          	lfsr	2,81
 12876  00E71C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12877  00E71E  26D9               	addwf	fsr2l,f,c
 12878  00E720  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12879  00E722  22DA               	addwfc	fsr2h,f,c
 12880  00E724  C026  FFDF         	movff	fatfs_create_boot_sector@vol_sectors,indf2
 12881                           
 12882                           ;fat_format.c: 272: fs->currentsector.sector[33] = (uint8)((vol_sectors>>8)&0xFF);
 12883  00E728  EE20 F052          	lfsr	2,82
 12884  00E72C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12885  00E72E  26D9               	addwf	fsr2l,f,c
 12886  00E730  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12887  00E732  22DA               	addwfc	fsr2h,f,c
 12888  00E734  C027  FFDF         	movff	fatfs_create_boot_sector@vol_sectors+1,indf2
 12889                           
 12890                           ;fat_format.c: 273: fs->currentsector.sector[34] = (uint8)((vol_sectors>>16)&0xFF);
 12891  00E738  EE20 F053          	lfsr	2,83
 12892  00E73C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12893  00E73E  26D9               	addwf	fsr2l,f,c
 12894  00E740  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12895  00E742  22DA               	addwfc	fsr2h,f,c
 12896  00E744  C028  FFDF         	movff	fatfs_create_boot_sector@vol_sectors+2,indf2
 12897                           
 12898                           ;fat_format.c: 274: fs->currentsector.sector[35] = (uint8)((vol_sectors>>24)&0xFF);
 12899  00E748  EE20 F054          	lfsr	2,84
 12900  00E74C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12901  00E74E  26D9               	addwf	fsr2l,f,c
 12902  00E750  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12903  00E752  22DA               	addwfc	fsr2h,f,c
 12904  00E754  C029  FFDF         	movff	fatfs_create_boot_sector@vol_sectors+3,indf2
 12905                           
 12906                           ;fat_format.c: 276: total_clusters = (vol_sectors / fs->sectors_per_cluster) + 1;
 12907  00E758  C026  F001         	movff	fatfs_create_boot_sector@vol_sectors,___lldiv@dividend
 12908  00E75C  C027  F002         	movff	fatfs_create_boot_sector@vol_sectors+1,___lldiv@dividend+1
 12909  00E760  C028  F003         	movff	fatfs_create_boot_sector@vol_sectors+2,___lldiv@dividend+2
 12910  00E764  C029  F004         	movff	fatfs_create_boot_sector@vol_sectors+3,___lldiv@dividend+3
 12911  00E768  C020  FFD9         	movff	fatfs_create_boot_sector@fs,fsr2l
 12912  00E76C  C021  FFDA         	movff	fatfs_create_boot_sector@fs+1,fsr2h
 12913  00E770  50DF               	movf	indf2,w,c
 12914  00E772  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 12915  00E774  502E               	movf	??_fatfs_create_boot_sector,w,c
 12916  00E776  6E05               	movwf	___lldiv@divisor,c
 12917  00E778  6A06               	clrf	___lldiv@divisor+1,c
 12918  00E77A  6A07               	clrf	___lldiv@divisor+2,c
 12919  00E77C  6A08               	clrf	___lldiv@divisor+3,c
 12920  00E77E  EC7B  F026         	call	___lldiv	;wreg free
 12921  00E782  C001  F02F         	movff	?___lldiv,??_fatfs_create_boot_sector+1
 12922  00E786  C002  F030         	movff	?___lldiv+1,??_fatfs_create_boot_sector+2
 12923  00E78A  C003  F031         	movff	?___lldiv+2,??_fatfs_create_boot_sector+3
 12924  00E78E  C004  F032         	movff	?___lldiv+3,??_fatfs_create_boot_sector+4
 12925  00E792  282F               	incf	??_fatfs_create_boot_sector+1,w,c
 12926  00E794  6E36               	movwf	fatfs_create_boot_sector@total_clusters,c
 12927  00E796  0E00               	movlw	0
 12928  00E798  2030               	addwfc	??_fatfs_create_boot_sector+2,w,c
 12929  00E79A  6E37               	movwf	fatfs_create_boot_sector@total_clusters+1,c
 12930  00E79C  0E00               	movlw	0
 12931  00E79E  2031               	addwfc	??_fatfs_create_boot_sector+3,w,c
 12932  00E7A0  6E38               	movwf	fatfs_create_boot_sector@total_clusters+2,c
 12933  00E7A2  0E00               	movlw	0
 12934  00E7A4  2032               	addwfc	??_fatfs_create_boot_sector+4,w,c
 12935  00E7A6  6E39               	movwf	fatfs_create_boot_sector@total_clusters+3,c
 12936                           
 12937                           ;fat_format.c: 277: fs->fat_sectors = (total_clusters/(512/4)) + 1;
 12938  00E7A8  C036  F02E         	movff	fatfs_create_boot_sector@total_clusters,??_fatfs_create_boot_sector
 12939  00E7AC  C037  F02F         	movff	fatfs_create_boot_sector@total_clusters+1,??_fatfs_create_boot_sector+1
 12940  00E7B0  C038  F030         	movff	fatfs_create_boot_sector@total_clusters+2,??_fatfs_create_boot_sector+2
 12941  00E7B4  C039  F031         	movff	fatfs_create_boot_sector@total_clusters+3,??_fatfs_create_boot_sector+3
 12942  00E7B8  0E08               	movlw	8
 12943  00E7BA  D005               	goto	u11220
 12944  00E7BC                     u11225:
 12945  00E7BC  90D8               	bcf	status,0,c
 12946  00E7BE  3231               	rrcf	??_fatfs_create_boot_sector+3,f,c
 12947  00E7C0  3230               	rrcf	??_fatfs_create_boot_sector+2,f,c
 12948  00E7C2  322F               	rrcf	??_fatfs_create_boot_sector+1,f,c
 12949  00E7C4  322E               	rrcf	??_fatfs_create_boot_sector,f,c
 12950  00E7C6                     u11220:
 12951  00E7C6  2EE8               	decfsz	wreg,f,c
 12952  00E7C8  D7F9               	goto	u11225
 12953  00E7CA  282E               	incf	??_fatfs_create_boot_sector,w,c
 12954  00E7CC  6E32               	movwf	(??_fatfs_create_boot_sector+4)& (0+255),c
 12955  00E7CE  0E00               	movlw	0
 12956  00E7D0  202F               	addwfc	??_fatfs_create_boot_sector+1,w,c
 12957  00E7D2  6E33               	movwf	(??_fatfs_create_boot_sector+5)& (0+255),c
 12958  00E7D4  0E00               	movlw	0
 12959  00E7D6  2030               	addwfc	??_fatfs_create_boot_sector+2,w,c
 12960  00E7D8  6E34               	movwf	(??_fatfs_create_boot_sector+6)& (0+255),c
 12961  00E7DA  0E00               	movlw	0
 12962  00E7DC  2031               	addwfc	??_fatfs_create_boot_sector+3,w,c
 12963  00E7DE  6E35               	movwf	(??_fatfs_create_boot_sector+7)& (0+255),c
 12964  00E7E0  EE20 F01B          	lfsr	2,27
 12965  00E7E4  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12966  00E7E6  26D9               	addwf	fsr2l,f,c
 12967  00E7E8  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12968  00E7EA  22DA               	addwfc	fsr2h,f,c
 12969  00E7EC  C032  FFDE         	movff	??_fatfs_create_boot_sector+4,postinc2
 12970  00E7F0  C033  FFDE         	movff	??_fatfs_create_boot_sector+5,postinc2
 12971  00E7F4  C034  FFDE         	movff	??_fatfs_create_boot_sector+6,postinc2
 12972  00E7F8  C035  FFDD         	movff	??_fatfs_create_boot_sector+7,postdec2
 12973  00E7FC  06D9               	decf	fsr2l,f,c
 12974  00E7FE  06D9               	decf	fsr2l,f,c
 12975                           
 12976                           ;fat_format.c: 280: fs->currentsector.sector[36] = (uint8)((fs->fat_sectors>>0)&0xFF);
 12977  00E800  EE20 F01B          	lfsr	2,27
 12978  00E804  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12979  00E806  26D9               	addwf	fsr2l,f,c
 12980  00E808  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12981  00E80A  22DA               	addwfc	fsr2h,f,c
 12982  00E80C  EE10 F055          	lfsr	1,85
 12983  00E810  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12984  00E812  26E1               	addwf	fsr1l,f,c
 12985  00E814  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12986  00E816  22E2               	addwfc	fsr1h,f,c
 12987  00E818  CFDF FFE7          	movff	indf2,indf1
 12988                           
 12989                           ;fat_format.c: 281: fs->currentsector.sector[37] = (uint8)((fs->fat_sectors>>8)&0xFF);
 12990  00E81C  EE20 F056          	lfsr	2,86
 12991  00E820  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12992  00E822  26D9               	addwf	fsr2l,f,c
 12993  00E824  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12994  00E826  22DA               	addwfc	fsr2h,f,c
 12995  00E828  EE10 F01B          	lfsr	1,27
 12996  00E82C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12997  00E82E  26E1               	addwf	fsr1l,f,c
 12998  00E830  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12999  00E832  22E2               	addwfc	fsr1h,f,c
 13000  00E834  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13001  00E838  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 13002  00E83C  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 13003  00E840  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 13004  00E844  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 13005  00E848  C030  F02F         	movff	??_fatfs_create_boot_sector+2,??_fatfs_create_boot_sector+1
 13006  00E84C  C031  F030         	movff	??_fatfs_create_boot_sector+3,??_fatfs_create_boot_sector+2
 13007  00E850  6A31               	clrf	??_fatfs_create_boot_sector+3,c
 13008  00E852  502E               	movf	??_fatfs_create_boot_sector,w,c
 13009  00E854  6EDF               	movwf	indf2,c
 13010                           
 13011                           ;fat_format.c: 282: fs->currentsector.sector[38] = (uint8)((fs->fat_sectors>>16)&0xFF);
 13012  00E856  EE20 F057          	lfsr	2,87
 13013  00E85A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13014  00E85C  26D9               	addwf	fsr2l,f,c
 13015  00E85E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13016  00E860  22DA               	addwfc	fsr2h,f,c
 13017  00E862  EE10 F01B          	lfsr	1,27
 13018  00E866  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13019  00E868  26E1               	addwf	fsr1l,f,c
 13020  00E86A  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13021  00E86C  22E2               	addwfc	fsr1h,f,c
 13022  00E86E  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13023  00E872  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 13024  00E876  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 13025  00E87A  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 13026  00E87E  0E11               	movlw	17
 13027  00E880  D005               	goto	u11230
 13028  00E882                     u11235:
 13029  00E882  90D8               	bcf	status,0,c
 13030  00E884  3231               	rrcf	??_fatfs_create_boot_sector+3,f,c
 13031  00E886  3230               	rrcf	??_fatfs_create_boot_sector+2,f,c
 13032  00E888  322F               	rrcf	??_fatfs_create_boot_sector+1,f,c
 13033  00E88A  322E               	rrcf	??_fatfs_create_boot_sector,f,c
 13034  00E88C                     u11230:
 13035  00E88C  2EE8               	decfsz	wreg,f,c
 13036  00E88E  D7F9               	goto	u11235
 13037  00E890  502E               	movf	??_fatfs_create_boot_sector,w,c
 13038  00E892  6EDF               	movwf	indf2,c
 13039                           
 13040                           ;fat_format.c: 283: fs->currentsector.sector[39] = (uint8)((fs->fat_sectors>>24)&0xFF);
 13041  00E894  EE20 F058          	lfsr	2,88
 13042  00E898  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13043  00E89A  26D9               	addwf	fsr2l,f,c
 13044  00E89C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13045  00E89E  22DA               	addwfc	fsr2h,f,c
 13046  00E8A0  EE10 F01B          	lfsr	1,27
 13047  00E8A4  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13048  00E8A6  26E1               	addwf	fsr1l,f,c
 13049  00E8A8  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13050  00E8AA  22E2               	addwfc	fsr1h,f,c
 13051  00E8AC  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13052  00E8B0  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 13053  00E8B4  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 13054  00E8B8  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 13055  00E8BC  0E19               	movlw	25
 13056  00E8BE  D005               	goto	u11240
 13057  00E8C0                     u11245:
 13058  00E8C0  90D8               	bcf	status,0,c
 13059  00E8C2  3231               	rrcf	??_fatfs_create_boot_sector+3,f,c
 13060  00E8C4  3230               	rrcf	??_fatfs_create_boot_sector+2,f,c
 13061  00E8C6  322F               	rrcf	??_fatfs_create_boot_sector+1,f,c
 13062  00E8C8  322E               	rrcf	??_fatfs_create_boot_sector,f,c
 13063  00E8CA                     u11240:
 13064  00E8CA  2EE8               	decfsz	wreg,f,c
 13065  00E8CC  D7F9               	goto	u11245
 13066  00E8CE  502E               	movf	??_fatfs_create_boot_sector,w,c
 13067  00E8D0  6EDF               	movwf	indf2,c
 13068                           
 13069                           ;fat_format.c: 286: fs->currentsector.sector[40] = 0;
 13070  00E8D2  EE20 F059          	lfsr	2,89
 13071  00E8D6  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13072  00E8D8  26D9               	addwf	fsr2l,f,c
 13073  00E8DA  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13074  00E8DC  22DA               	addwfc	fsr2h,f,c
 13075  00E8DE  6ADF               	clrf	indf2,c
 13076                           
 13077                           ;fat_format.c: 287: fs->currentsector.sector[41] = 0;
 13078  00E8E0  EE20 F05A          	lfsr	2,90
 13079  00E8E4  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13080  00E8E6  26D9               	addwf	fsr2l,f,c
 13081  00E8E8  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13082  00E8EA  22DA               	addwfc	fsr2h,f,c
 13083  00E8EC  6ADF               	clrf	indf2,c
 13084                           
 13085                           ;fat_format.c: 290: fs->currentsector.sector[42] = 0;
 13086  00E8EE  EE20 F05B          	lfsr	2,91
 13087  00E8F2  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13088  00E8F4  26D9               	addwf	fsr2l,f,c
 13089  00E8F6  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13090  00E8F8  22DA               	addwfc	fsr2h,f,c
 13091  00E8FA  6ADF               	clrf	indf2,c
 13092                           
 13093                           ;fat_format.c: 291: fs->currentsector.sector[43] = 0;
 13094  00E8FC  EE20 F05C          	lfsr	2,92
 13095  00E900  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13096  00E902  26D9               	addwf	fsr2l,f,c
 13097  00E904  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13098  00E906  22DA               	addwfc	fsr2h,f,c
 13099  00E908  6ADF               	clrf	indf2,c
 13100                           
 13101                           ;fat_format.c: 294: fs->currentsector.sector[44] = (uint8)((fs->rootdir_first_cluster>>0
      +                          )&0xFF);
 13102  00E90A  EE20 F005          	lfsr	2,5
 13103  00E90E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13104  00E910  26D9               	addwf	fsr2l,f,c
 13105  00E912  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13106  00E914  22DA               	addwfc	fsr2h,f,c
 13107  00E916  EE10 F05D          	lfsr	1,93
 13108  00E91A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13109  00E91C  26E1               	addwf	fsr1l,f,c
 13110  00E91E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13111  00E920  22E2               	addwfc	fsr1h,f,c
 13112  00E922  CFDF FFE7          	movff	indf2,indf1
 13113                           
 13114                           ;fat_format.c: 295: fs->currentsector.sector[45] = (uint8)((fs->rootdir_first_cluster>>8
      +                          )&0xFF);
 13115  00E926  EE20 F05E          	lfsr	2,94
 13116  00E92A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13117  00E92C  26D9               	addwf	fsr2l,f,c
 13118  00E92E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13119  00E930  22DA               	addwfc	fsr2h,f,c
 13120  00E932  EE10 F005          	lfsr	1,5
 13121  00E936  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13122  00E938  26E1               	addwf	fsr1l,f,c
 13123  00E93A  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13124  00E93C  22E2               	addwfc	fsr1h,f,c
 13125  00E93E  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13126  00E942  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 13127  00E946  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 13128  00E94A  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 13129  00E94E  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 13130  00E952  C030  F02F         	movff	??_fatfs_create_boot_sector+2,??_fatfs_create_boot_sector+1
 13131  00E956  C031  F030         	movff	??_fatfs_create_boot_sector+3,??_fatfs_create_boot_sector+2
 13132  00E95A  6A31               	clrf	??_fatfs_create_boot_sector+3,c
 13133  00E95C  502E               	movf	??_fatfs_create_boot_sector,w,c
 13134  00E95E  6EDF               	movwf	indf2,c
 13135                           
 13136                           ;fat_format.c: 296: fs->currentsector.sector[46] = (uint8)((fs->rootdir_first_cluster>>1
      +                          6)&0xFF);
 13137  00E960  EE20 F05F          	lfsr	2,95
 13138  00E964  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13139  00E966  26D9               	addwf	fsr2l,f,c
 13140  00E968  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13141  00E96A  22DA               	addwfc	fsr2h,f,c
 13142  00E96C  EE10 F005          	lfsr	1,5
 13143  00E970  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13144  00E972  26E1               	addwf	fsr1l,f,c
 13145  00E974  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13146  00E976  22E2               	addwfc	fsr1h,f,c
 13147  00E978  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13148  00E97C  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 13149  00E980  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 13150  00E984  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 13151  00E988  0E11               	movlw	17
 13152  00E98A  D005               	goto	u11250
 13153  00E98C                     u11255:
 13154  00E98C  90D8               	bcf	status,0,c
 13155  00E98E  3231               	rrcf	??_fatfs_create_boot_sector+3,f,c
 13156  00E990  3230               	rrcf	??_fatfs_create_boot_sector+2,f,c
 13157  00E992  322F               	rrcf	??_fatfs_create_boot_sector+1,f,c
 13158  00E994  322E               	rrcf	??_fatfs_create_boot_sector,f,c
 13159  00E996                     u11250:
 13160  00E996  2EE8               	decfsz	wreg,f,c
 13161  00E998  D7F9               	goto	u11255
 13162  00E99A  502E               	movf	??_fatfs_create_boot_sector,w,c
 13163  00E99C  6EDF               	movwf	indf2,c
 13164                           
 13165                           ;fat_format.c: 297: fs->currentsector.sector[47] = (uint8)((fs->rootdir_first_cluster>>2
      +                          4)&0xFF);
 13166  00E99E  EE20 F060          	lfsr	2,96
 13167  00E9A2  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13168  00E9A4  26D9               	addwf	fsr2l,f,c
 13169  00E9A6  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13170  00E9A8  22DA               	addwfc	fsr2h,f,c
 13171  00E9AA  EE10 F005          	lfsr	1,5
 13172  00E9AE  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13173  00E9B0  26E1               	addwf	fsr1l,f,c
 13174  00E9B2  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13175  00E9B4  22E2               	addwfc	fsr1h,f,c
 13176  00E9B6  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13177  00E9BA  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 13178  00E9BE  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 13179  00E9C2  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 13180  00E9C6  0E19               	movlw	25
 13181  00E9C8  D005               	goto	u11260
 13182  00E9CA                     u11265:
 13183  00E9CA  90D8               	bcf	status,0,c
 13184  00E9CC  3231               	rrcf	??_fatfs_create_boot_sector+3,f,c
 13185  00E9CE  3230               	rrcf	??_fatfs_create_boot_sector+2,f,c
 13186  00E9D0  322F               	rrcf	??_fatfs_create_boot_sector+1,f,c
 13187  00E9D2  322E               	rrcf	??_fatfs_create_boot_sector,f,c
 13188  00E9D4                     u11260:
 13189  00E9D4  2EE8               	decfsz	wreg,f,c
 13190  00E9D6  D7F9               	goto	u11265
 13191  00E9D8  502E               	movf	??_fatfs_create_boot_sector,w,c
 13192  00E9DA  6EDF               	movwf	indf2,c
 13193                           
 13194                           ;fat_format.c: 300: fs->currentsector.sector[48] = (uint8)((fs->fs_info_sector>>0)&0xFF)
      +                          ;
 13195  00E9DC  EE20 F015          	lfsr	2,21
 13196  00E9E0  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13197  00E9E2  26D9               	addwf	fsr2l,f,c
 13198  00E9E4  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13199  00E9E6  22DA               	addwfc	fsr2h,f,c
 13200  00E9E8  EE10 F061          	lfsr	1,97
 13201  00E9EC  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13202  00E9EE  26E1               	addwf	fsr1l,f,c
 13203  00E9F0  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13204  00E9F2  22E2               	addwfc	fsr1h,f,c
 13205  00E9F4  CFDF FFE7          	movff	indf2,indf1
 13206                           
 13207                           ;fat_format.c: 301: fs->currentsector.sector[49] = (uint8)((fs->fs_info_sector>>8)&0xFF)
      +                          ;
 13208  00E9F8  EE20 F062          	lfsr	2,98
 13209  00E9FC  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13210  00E9FE  26D9               	addwf	fsr2l,f,c
 13211  00EA00  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13212  00EA02  22DA               	addwfc	fsr2h,f,c
 13213  00EA04  EE10 F015          	lfsr	1,21
 13214  00EA08  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13215  00EA0A  26E1               	addwf	fsr1l,f,c
 13216  00EA0C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13217  00EA0E  22E2               	addwfc	fsr1h,f,c
 13218  00EA10  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13219  00EA14  CFE5 F02F          	movff	postdec1,??_fatfs_create_boot_sector+1
 13220  00EA18  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 13221  00EA1C  6A2F               	clrf	??_fatfs_create_boot_sector+1,c
 13222  00EA1E  502E               	movf	??_fatfs_create_boot_sector,w,c
 13223  00EA20  6EDF               	movwf	indf2,c
 13224                           
 13225                           ;fat_format.c: 304: fs->currentsector.sector[50] = 6;
 13226  00EA22  EE20 F063          	lfsr	2,99
 13227  00EA26  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13228  00EA28  26D9               	addwf	fsr2l,f,c
 13229  00EA2A  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13230  00EA2C  22DA               	addwfc	fsr2h,f,c
 13231  00EA2E  0E06               	movlw	6
 13232  00EA30  6EDF               	movwf	indf2,c
 13233                           
 13234                           ;fat_format.c: 305: fs->currentsector.sector[51] = 0;
 13235  00EA32  EE20 F064          	lfsr	2,100
 13236  00EA36  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13237  00EA38  26D9               	addwf	fsr2l,f,c
 13238  00EA3A  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13239  00EA3C  22DA               	addwfc	fsr2h,f,c
 13240  00EA3E  6ADF               	clrf	indf2,c
 13241                           
 13242                           ;fat_format.c: 308: fs->currentsector.sector[64] = 0x00;
 13243  00EA40  EE20 F071          	lfsr	2,113
 13244  00EA44  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13245  00EA46  26D9               	addwf	fsr2l,f,c
 13246  00EA48  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13247  00EA4A  22DA               	addwfc	fsr2h,f,c
 13248  00EA4C  6ADF               	clrf	indf2,c
 13249                           
 13250                           ;fat_format.c: 311: fs->currentsector.sector[66] = 0x29;
 13251  00EA4E  EE20 F073          	lfsr	2,115
 13252  00EA52  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13253  00EA54  26D9               	addwf	fsr2l,f,c
 13254  00EA56  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13255  00EA58  22DA               	addwfc	fsr2h,f,c
 13256  00EA5A  0E29               	movlw	41
 13257  00EA5C  6EDF               	movwf	indf2,c
 13258                           
 13259                           ;fat_format.c: 314: fs->currentsector.sector[67] = 0x12;
 13260  00EA5E  EE20 F074          	lfsr	2,116
 13261  00EA62  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13262  00EA64  26D9               	addwf	fsr2l,f,c
 13263  00EA66  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13264  00EA68  22DA               	addwfc	fsr2h,f,c
 13265  00EA6A  0E12               	movlw	18
 13266  00EA6C  6EDF               	movwf	indf2,c
 13267                           
 13268                           ;fat_format.c: 315: fs->currentsector.sector[68] = 0x34;
 13269  00EA6E  EE20 F075          	lfsr	2,117
 13270  00EA72  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13271  00EA74  26D9               	addwf	fsr2l,f,c
 13272  00EA76  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13273  00EA78  22DA               	addwfc	fsr2h,f,c
 13274  00EA7A  0E34               	movlw	52
 13275  00EA7C  6EDF               	movwf	indf2,c
 13276                           
 13277                           ;fat_format.c: 316: fs->currentsector.sector[69] = 0x56;
 13278  00EA7E  EE20 F076          	lfsr	2,118
 13279  00EA82  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13280  00EA84  26D9               	addwf	fsr2l,f,c
 13281  00EA86  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13282  00EA88  22DA               	addwfc	fsr2h,f,c
 13283  00EA8A  0E56               	movlw	86
 13284  00EA8C  6EDF               	movwf	indf2,c
 13285                           
 13286                           ;fat_format.c: 317: fs->currentsector.sector[70] = 0x78;
 13287  00EA8E  EE20 F077          	lfsr	2,119
 13288  00EA92  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13289  00EA94  26D9               	addwf	fsr2l,f,c
 13290  00EA96  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13291  00EA98  22DA               	addwfc	fsr2h,f,c
 13292  00EA9A  0E78               	movlw	120
 13293  00EA9C  6EDF               	movwf	indf2,c
 13294                           
 13295                           ;fat_format.c: 320: for (i=0;i<11;i++)
 13296  00EA9E  6A3B               	clrf	fatfs_create_boot_sector@i+1,c
 13297  00EAA0  6A3A               	clrf	fatfs_create_boot_sector@i,c
 13298  00EAA2  503B               	movf	fatfs_create_boot_sector@i+1,w,c
 13299  00EAA4  0A80               	xorlw	128
 13300  00EAA6  0F80               	addlw	-128
 13301  00EAA8  0E0B               	movlw	11
 13302  00EAAA  B4D8               	btfsc	status,2,c
 13303  00EAAC  5C3A               	subwf	fatfs_create_boot_sector@i,w,c
 13304  00EAAE  E24D               	bc	l10112
 13305                           
 13306                           ;fat_format.c: 321: {
 13307                           ;fat_format.c: 322: if (i < (int)strlen(name))
 13308  00EAB0  C02B  F002         	movff	fatfs_create_boot_sector@name+1,strlen@s+1
 13309  00EAB4  C02A  F001         	movff	fatfs_create_boot_sector@name,strlen@s
 13310  00EAB8  EC71  F022         	call	_strlen	;wreg free
 13311  00EABC  503B               	movf	fatfs_create_boot_sector@i+1,w,c
 13312  00EABE  0A80               	xorlw	128
 13313  00EAC0  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 13314  00EAC2  5001               	movf	?_strlen,w,c
 13315  00EAC4  5C3A               	subwf	fatfs_create_boot_sector@i,w,c
 13316  00EAC6  5002               	movf	?_strlen+1,w,c
 13317  00EAC8  0A80               	xorlw	128
 13318  00EACA  582E               	subwfb	??_fatfs_create_boot_sector& (0+255),w,c
 13319  00EACC  E225               	bc	l10106
 13320                           
 13321                           ;fat_format.c: 323: fs->currentsector.sector[i+71] = name[i];
 13322  00EACE  C02A  F02E         	movff	fatfs_create_boot_sector@name,??_fatfs_create_boot_sector
 13323  00EAD2  C02B  F02F         	movff	fatfs_create_boot_sector@name+1,??_fatfs_create_boot_sector+1
 13324  00EAD6  503A               	movf	fatfs_create_boot_sector@i,w,c
 13325  00EAD8  262E               	addwf	??_fatfs_create_boot_sector,f,c
 13326  00EADA  503B               	movf	fatfs_create_boot_sector@i+1,w,c
 13327  00EADC  222F               	addwfc	??_fatfs_create_boot_sector+1,f,c
 13328  00EADE  C02E  FFF6         	movff	??_fatfs_create_boot_sector,tblptrl
 13329  00EAE2  C02F  FFF7         	movff	??_fatfs_create_boot_sector+1,tblptrh
 13330  00EAE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13331  00EAE6  6AF8               	clrf	tblptru,c
 13332  00EAE8                     	endif
 13333  00EAE8                     	if	0	;tblptru may be non-zero
 13334  00EAE8                     	endif
 13335  00EAE8  0E47               	movlw	71
 13336  00EAEA  243A               	addwf	fatfs_create_boot_sector@i,w,c
 13337  00EAEC  6E30               	movwf	(??_fatfs_create_boot_sector+2)& (0+255),c
 13338  00EAEE  0E00               	movlw	0
 13339  00EAF0  203B               	addwfc	fatfs_create_boot_sector@i+1,w,c
 13340  00EAF2  6E31               	movwf	(??_fatfs_create_boot_sector+3)& (0+255),c
 13341  00EAF4  C020  F032         	movff	fatfs_create_boot_sector@fs,??_fatfs_create_boot_sector+4
 13342  00EAF8  C021  F033         	movff	fatfs_create_boot_sector@fs+1,??_fatfs_create_boot_sector+5
 13343  00EAFC  5030               	movf	??_fatfs_create_boot_sector+2,w,c
 13344  00EAFE  2632               	addwf	??_fatfs_create_boot_sector+4,f,c
 13345  00EB00  5031               	movf	??_fatfs_create_boot_sector+3,w,c
 13346  00EB02  2233               	addwfc	??_fatfs_create_boot_sector+5,f,c
 13347  00EB04  0E31               	movlw	49
 13348  00EB06  2432               	addwf	??_fatfs_create_boot_sector+4,w,c
 13349  00EB08  6ED9               	movwf	fsr2l,c
 13350  00EB0A  0E00               	movlw	0
 13351  00EB0C  2033               	addwfc	??_fatfs_create_boot_sector+5,w,c
 13352  00EB0E  6EDA               	movwf	fsr2h,c
 13353  00EB10  0008               	tblrd		*
 13354  00EB12  CFF5 FFDF          	movff	tablat,indf2
 13355  00EB16  D016               	goto	l10108
 13356  00EB18                     l10106:
 13357                           
 13358                           ;fat_format.c: 324: else
 13359                           ;fat_format.c: 325: fs->currentsector.sector[i+71] = ' ';
 13360  00EB18  0E47               	movlw	71
 13361  00EB1A  243A               	addwf	fatfs_create_boot_sector@i,w,c
 13362  00EB1C  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 13363  00EB1E  0E00               	movlw	0
 13364  00EB20  203B               	addwfc	fatfs_create_boot_sector@i+1,w,c
 13365  00EB22  6E2F               	movwf	(??_fatfs_create_boot_sector+1)& (0+255),c
 13366  00EB24  C020  F030         	movff	fatfs_create_boot_sector@fs,??_fatfs_create_boot_sector+2
 13367  00EB28  C021  F031         	movff	fatfs_create_boot_sector@fs+1,??_fatfs_create_boot_sector+3
 13368  00EB2C  502E               	movf	??_fatfs_create_boot_sector,w,c
 13369  00EB2E  2630               	addwf	??_fatfs_create_boot_sector+2,f,c
 13370  00EB30  502F               	movf	??_fatfs_create_boot_sector+1,w,c
 13371  00EB32  2231               	addwfc	??_fatfs_create_boot_sector+3,f,c
 13372  00EB34  0E31               	movlw	49
 13373  00EB36  2430               	addwf	??_fatfs_create_boot_sector+2,w,c
 13374  00EB38  6ED9               	movwf	fsr2l,c
 13375  00EB3A  0E00               	movlw	0
 13376  00EB3C  2031               	addwfc	??_fatfs_create_boot_sector+3,w,c
 13377  00EB3E  6EDA               	movwf	fsr2h,c
 13378  00EB40  0E20               	movlw	32
 13379  00EB42  6EDF               	movwf	indf2,c
 13380  00EB44                     l10108:
 13381  00EB44  4A3A               	infsnz	fatfs_create_boot_sector@i,f,c
 13382  00EB46  2A3B               	incf	fatfs_create_boot_sector@i+1,f,c
 13383  00EB48  D7AC               	goto	L35
 13384  00EB4A                     l10112:
 13385                           
 13386                           ;fat_format.c: 326: }
 13387                           ;fat_format.c: 329: fs->currentsector.sector[82] = 'F';
 13388  00EB4A  EE20 F083          	lfsr	2,131
 13389  00EB4E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13390  00EB50  26D9               	addwf	fsr2l,f,c
 13391  00EB52  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13392  00EB54  22DA               	addwfc	fsr2h,f,c
 13393  00EB56  0E46               	movlw	70
 13394  00EB58  6EDF               	movwf	indf2,c
 13395                           
 13396                           ;fat_format.c: 330: fs->currentsector.sector[83] = 'A';
 13397  00EB5A  EE20 F084          	lfsr	2,132
 13398  00EB5E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13399  00EB60  26D9               	addwf	fsr2l,f,c
 13400  00EB62  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13401  00EB64  22DA               	addwfc	fsr2h,f,c
 13402  00EB66  0E41               	movlw	65
 13403  00EB68  6EDF               	movwf	indf2,c
 13404                           
 13405                           ;fat_format.c: 331: fs->currentsector.sector[84] = 'T';
 13406  00EB6A  EE20 F085          	lfsr	2,133
 13407  00EB6E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13408  00EB70  26D9               	addwf	fsr2l,f,c
 13409  00EB72  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13410  00EB74  22DA               	addwfc	fsr2h,f,c
 13411  00EB76  0E54               	movlw	84
 13412  00EB78  6EDF               	movwf	indf2,c
 13413                           
 13414                           ;fat_format.c: 332: fs->currentsector.sector[85] = '3';
 13415  00EB7A  EE20 F086          	lfsr	2,134
 13416  00EB7E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13417  00EB80  26D9               	addwf	fsr2l,f,c
 13418  00EB82  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13419  00EB84  22DA               	addwfc	fsr2h,f,c
 13420  00EB86  0E33               	movlw	51
 13421  00EB88  6EDF               	movwf	indf2,c
 13422                           
 13423                           ;fat_format.c: 333: fs->currentsector.sector[86] = '2';
 13424  00EB8A  EE20 F087          	lfsr	2,135
 13425  00EB8E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13426  00EB90  26D9               	addwf	fsr2l,f,c
 13427  00EB92  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13428  00EB94  22DA               	addwfc	fsr2h,f,c
 13429  00EB96  0E32               	movlw	50
 13430  00EB98  6EDF               	movwf	indf2,c
 13431                           
 13432                           ;fat_format.c: 334: fs->currentsector.sector[87] = ' ';
 13433  00EB9A  EE20 F088          	lfsr	2,136
 13434  00EB9E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13435  00EBA0  26D9               	addwf	fsr2l,f,c
 13436  00EBA2  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13437  00EBA4  22DA               	addwfc	fsr2h,f,c
 13438  00EBA6  0E20               	movlw	32
 13439  00EBA8  6EDF               	movwf	indf2,c
 13440                           
 13441                           ;fat_format.c: 335: fs->currentsector.sector[88] = ' ';
 13442  00EBAA  EE20 F089          	lfsr	2,137
 13443  00EBAE  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13444  00EBB0  26D9               	addwf	fsr2l,f,c
 13445  00EBB2  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13446  00EBB4  22DA               	addwfc	fsr2h,f,c
 13447  00EBB6  0E20               	movlw	32
 13448  00EBB8  6EDF               	movwf	indf2,c
 13449                           
 13450                           ;fat_format.c: 336: fs->currentsector.sector[89] = ' ';
 13451  00EBBA  EE20 F08A          	lfsr	2,138
 13452  00EBBE                     L34:
 13453  00EBBE  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13454  00EBC0  26D9               	addwf	fsr2l,f,c
 13455  00EBC2  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13456  00EBC4  22DA               	addwfc	fsr2h,f,c
 13457  00EBC6  0E20               	movlw	32
 13458  00EBC8  6EDF               	movwf	indf2,c
 13459                           
 13460                           ;fat_format.c: 339: fs->currentsector.sector[510] = 0x55;
 13461  00EBCA  EE22 F02F          	lfsr	2,559
 13462  00EBCE  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13463  00EBD0  26D9               	addwf	fsr2l,f,c
 13464  00EBD2  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13465  00EBD4  22DA               	addwfc	fsr2h,f,c
 13466  00EBD6  0E55               	movlw	85
 13467  00EBD8  6EDF               	movwf	indf2,c
 13468                           
 13469                           ;fat_format.c: 340: fs->currentsector.sector[511] = 0xAA;
 13470  00EBDA  EE22 F030          	lfsr	2,560
 13471  00EBDE  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13472  00EBE0  26D9               	addwf	fsr2l,f,c
 13473  00EBE2  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13474  00EBE4  22DA               	addwfc	fsr2h,f,c
 13475  00EBE6  0EAA               	movlw	170
 13476  00EBE8  6EDF               	movwf	indf2,c
 13477                           
 13478                           ;fat_format.c: 341: }
 13479                           ;fat_format.c: 343: if (fs->disk_io.write_media(boot_sector_lba, fs->currentsector.secto
      +                          r, 1))
 13480  00EBEA  C022  F009         	movff	fatfs_create_boot_sector@boot_sector_lba,media_write@sector
 13481  00EBEE  C023  F00A         	movff	fatfs_create_boot_sector@boot_sector_lba+1,media_write@sector+1
 13482  00EBF2  C024  F00B         	movff	fatfs_create_boot_sector@boot_sector_lba+2,media_write@sector+2
 13483  00EBF6  C025  F00C         	movff	fatfs_create_boot_sector@boot_sector_lba+3,media_write@sector+3
 13484  00EBFA  0E31               	movlw	49
 13485  00EBFC  2420               	addwf	fatfs_create_boot_sector@fs,w,c
 13486  00EBFE  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 13487  00EC00  0E00               	movlw	0
 13488  00EC02  2021               	addwfc	fatfs_create_boot_sector@fs+1,w,c
 13489  00EC04  6E2F               	movwf	(??_fatfs_create_boot_sector+1)& (0+255),c
 13490  00EC06  0E20               	movlw	32
 13491  00EC08  6E0F               	movwf	media_write@buffer+2,c
 13492  00EC0A  C02F  F00E         	movff	??_fatfs_create_boot_sector+1,media_write@buffer+1
 13493  00EC0E  C02E  F00D         	movff	??_fatfs_create_boot_sector,media_write@buffer
 13494  00EC12  0E01               	movlw	1
 13495  00EC14  6E10               	movwf	media_write@sector_count,c
 13496  00EC16  6A11               	clrf	media_write@sector_count+1,c
 13497  00EC18  6A12               	clrf	media_write@sector_count+2,c
 13498  00EC1A  6A13               	clrf	media_write@sector_count+3,c
 13499  00EC1C  EE20 F02B          	lfsr	2,43
 13500  00EC20  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13501  00EC22  26D9               	addwf	fsr2l,f,c
 13502  00EC24  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13503  00EC26  22DA               	addwfc	fsr2h,f,c
 13504  00EC28  CFDE F030          	movff	postinc2,??_fatfs_create_boot_sector+2
 13505  00EC2C  CFDD F031          	movff	postdec2,??_fatfs_create_boot_sector+3
 13506  00EC30  D801               	call	u11308
 13507  00EC32  D009               	goto	u11309
 13508  00EC34                     u11308:
 13509  00EC34  0005               	push	
 13510  00EC36  6EFA               	movwf	pclath,c
 13511  00EC38  5030               	movf	??_fatfs_create_boot_sector+2,w,c
 13512  00EC3A  6EFD               	movwf	tosl,c
 13513  00EC3C  5031               	movf	??_fatfs_create_boot_sector+3,w,c
 13514  00EC3E  6EFE               	movwf	tosh,c
 13515  00EC40  6AFF               	clrf	tosu,c
 13516  00EC42  50FA               	movf	pclath,w,c
 13517  00EC44  0012               	return		;indir
 13518  00EC46                     u11309:
 13519  00EC46  500A               	movf	?_media_write+1,w,c
 13520  00EC48  1009               	iorwf	?_media_write,w,c
 13521  00EC4A  E004               	bz	l10122
 13522                           
 13523                           ;fat_format.c: 344: return 1;
 13524  00EC4C  0E00               	movlw	0
 13525  00EC4E  6E21               	movwf	?_fatfs_create_boot_sector+1,c
 13526  00EC50  0E01               	movlw	1
 13527  00EC52  D002               	goto	L36
 13528  00EC54                     l10122:
 13529                           
 13530                           ;fat_format.c: 345: else
 13531                           ;fat_format.c: 346: return 0;
 13532  00EC54  0E00               	movlw	0
 13533  00EC56  6E21               	movwf	?_fatfs_create_boot_sector+1,c
 13534  00EC58                     L36:
 13535  00EC58  6E20               	movwf	?_fatfs_create_boot_sector,c
 13536  00EC5A  0012               	return	
 13537  00EC5C                     __end_of_fatfs_create_boot_sector:
 13538                           	opt stack 0
 13539                           tosu	equ	0xFFF
 13540                           tosh	equ	0xFFE
 13541                           tosl	equ	0xFFD
 13542                           pclath	equ	0xFFA
 13543                           tblptru	equ	0xFF8
 13544                           tblptrh	equ	0xFF7
 13545                           tblptrl	equ	0xFF6
 13546                           tablat	equ	0xFF5
 13547                           prodh	equ	0xFF4
 13548                           prodl	equ	0xFF3
 13549                           indf0	equ	0xFEF
 13550                           postinc0	equ	0xFEE
 13551                           fsr0h	equ	0xFEA
 13552                           fsr0l	equ	0xFE9
 13553                           wreg	equ	0xFE8
 13554                           indf1	equ	0xFE7
 13555                           postinc1	equ	0xFE6
 13556                           postdec1	equ	0xFE5
 13557                           fsr1h	equ	0xFE2
 13558                           fsr1l	equ	0xFE1
 13559                           indf2	equ	0xFDF
 13560                           postinc2	equ	0xFDE
 13561                           postdec2	equ	0xFDD
 13562                           fsr2h	equ	0xFDA
 13563                           fsr2l	equ	0xFD9
 13564                           status	equ	0xFD8
 13565                           
 13566 ;; *************** function _fatfs_calc_cluster_size *****************
 13567 ;; Defined at:
 13568 ;;		line 77 in file "fat_format.c"
 13569 ;; Parameters:    Size  Location     Type
 13570 ;;  sectors         4    0[COMRAM] unsigned long 
 13571 ;;  is_fat32        2    4[COMRAM] int 
 13572 ;; Auto vars:     Size  Location     Type
 13573 ;;  i               2   12[COMRAM] int 
 13574 ;; Return value:  Size  Location     Type
 13575 ;;                  1    wreg      unsigned char 
 13576 ;; Registers used:
 13577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13578 ;; Tracked objects:
 13579 ;;		On entry : 0/0
 13580 ;;		On exit  : 0/0
 13581 ;;		Unchanged: 0/0
 13582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13583 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13585 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13586 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13587 ;;Total ram usage:       14 bytes
 13588 ;; Hardware stack levels used:    1
 13589 ;; This function calls:
 13590 ;;		Nothing
 13591 ;; This function is called by:
 13592 ;;		_fatfs_create_boot_sector
 13593 ;; This function uses a non-reentrant model
 13594 ;;
 13595                           
 13596                           	psect	text30
 13597  006960                     __ptext30:
 13598                           	opt stack 0
 13599  006960                     _fatfs_calc_cluster_size:
 13600                           	opt stack 24
 13601                           
 13602                           ;fat_format.c: 79: int i;
 13603                           ;fat_format.c: 81: if (!is_fat32)
 13604                           
 13605                           ;incstack = 0
 13606  006960  5006               	movf	fatfs_calc_cluster_size@is_fat32+1,w,c
 13607  006962  1005               	iorwf	fatfs_calc_cluster_size@is_fat32,w,c
 13608  006964  E14F               	bnz	l9458
 13609                           
 13610                           ;fat_format.c: 82: {
 13611                           ;fat_format.c: 83: for (i=0; _cluster_size_table16[i].sectors_per_cluster != 0;i++)
 13612  006966  6A0E               	clrf	fatfs_calc_cluster_size@i+1,c
 13613  006968  6A0D               	clrf	fatfs_calc_cluster_size@i,c
 13614  00696A  D035               	goto	l9456
 13615  00696C                     l9448:
 13616                           
 13617                           ;fat_format.c: 84: if (sectors <= _cluster_size_table16[i].sectors)
 13618  00696C  0E05               	movlw	5
 13619  00696E  020D               	mulwf	fatfs_calc_cluster_size@i,c
 13620  006970  CFF3 F007          	movff	prodl,??_fatfs_calc_cluster_size
 13621  006974  CFF4 F008          	movff	prodh,??_fatfs_calc_cluster_size+1
 13622  006978  020E               	mulwf	fatfs_calc_cluster_size@i+1,c
 13623  00697A  50F3               	movf	243,w,c
 13624  00697C  2608               	addwf	(??_fatfs_calc_cluster_size+1)& (0+255),f,c
 13625  00697E  0E00               	movlw	low __cluster_size_table16
 13626  006980  2407               	addwf	??_fatfs_calc_cluster_size,w,c
 13627  006982  6ED9               	movwf	fsr2l,c
 13628  006984  0E02               	movlw	high __cluster_size_table16
 13629  006986  2008               	addwfc	??_fatfs_calc_cluster_size+1,w,c
 13630  006988  6EDA               	movwf	fsr2h,c
 13631  00698A  CFDE F009          	movff	postinc2,??_fatfs_calc_cluster_size+2
 13632  00698E  CFDE F00A          	movff	postinc2,??_fatfs_calc_cluster_size+3
 13633  006992  CFDE F00B          	movff	postinc2,??_fatfs_calc_cluster_size+4
 13634  006996  CFDE F00C          	movff	postinc2,??_fatfs_calc_cluster_size+5
 13635  00699A  5001               	movf	fatfs_calc_cluster_size@sectors,w,c
 13636  00699C  5C09               	subwf	??_fatfs_calc_cluster_size+2,w,c
 13637  00699E  5002               	movf	fatfs_calc_cluster_size@sectors+1,w,c
 13638  0069A0  580A               	subwfb	??_fatfs_calc_cluster_size+3,w,c
 13639  0069A2  5003               	movf	fatfs_calc_cluster_size@sectors+2,w,c
 13640  0069A4  580B               	subwfb	??_fatfs_calc_cluster_size+4,w,c
 13641  0069A6  5004               	movf	fatfs_calc_cluster_size@sectors+3,w,c
 13642  0069A8  580C               	subwfb	??_fatfs_calc_cluster_size+5,w,c
 13643  0069AA  E313               	bnc	l9454
 13644                           
 13645                           ; BSR set to: 2
 13646                           ;fat_format.c: 85: return _cluster_size_table16[i].sectors_per_cluster;
 13647  0069AC  0E05               	movlw	5
 13648  0069AE  020D               	mulwf	fatfs_calc_cluster_size@i,c
 13649  0069B0  CFF3 F007          	movff	prodl,??_fatfs_calc_cluster_size
 13650  0069B4  CFF4 F008          	movff	prodh,??_fatfs_calc_cluster_size+1
 13651  0069B8  020E               	mulwf	fatfs_calc_cluster_size@i+1,c
 13652  0069BA  50F3               	movf	243,w,c
 13653  0069BC  2608               	addwf	(??_fatfs_calc_cluster_size+1)& (0+255),f,c
 13654  0069BE  0E04               	movlw	4
 13655  0069C0  2607               	addwf	??_fatfs_calc_cluster_size,f,c
 13656  0069C2  0E00               	movlw	0
 13657  0069C4  2208               	addwfc	??_fatfs_calc_cluster_size+1,f,c
 13658  0069C6  0E00               	movlw	low __cluster_size_table16
 13659  0069C8  2407               	addwf	??_fatfs_calc_cluster_size,w,c
 13660  0069CA  6ED9               	movwf	fsr2l,c
 13661  0069CC  0102               	movlb	2	; () banked
 13662  0069CE  0E02               	movlw	high __cluster_size_table16
 13663  0069D0  D04E               	goto	L37
 13664  0069D2                     l9454:
 13665                           
 13666                           ; BSR set to: 2
 13667  0069D2  4A0D               	infsnz	fatfs_calc_cluster_size@i,f,c
 13668  0069D4  2A0E               	incf	fatfs_calc_cluster_size@i+1,f,c
 13669  0069D6                     l9456:
 13670  0069D6  0E05               	movlw	5
 13671  0069D8  020D               	mulwf	fatfs_calc_cluster_size@i,c
 13672  0069DA  CFF3 F007          	movff	prodl,??_fatfs_calc_cluster_size
 13673  0069DE  CFF4 F008          	movff	prodh,??_fatfs_calc_cluster_size+1
 13674  0069E2  020E               	mulwf	fatfs_calc_cluster_size@i+1,c
 13675  0069E4  50F3               	movf	243,w,c
 13676  0069E6  2608               	addwf	(??_fatfs_calc_cluster_size+1)& (0+255),f,c
 13677  0069E8  0E04               	movlw	4
 13678  0069EA  2607               	addwf	??_fatfs_calc_cluster_size,f,c
 13679  0069EC  0E00               	movlw	0
 13680  0069EE  2208               	addwfc	??_fatfs_calc_cluster_size+1,f,c
 13681  0069F0  0E00               	movlw	low __cluster_size_table16
 13682  0069F2  2407               	addwf	??_fatfs_calc_cluster_size,w,c
 13683  0069F4  6ED9               	movwf	fsr2l,c
 13684  0069F6  0102               	movlb	2	; () banked
 13685  0069F8  0E02               	movlw	high __cluster_size_table16
 13686  0069FA  2008               	addwfc	??_fatfs_calc_cluster_size+1,w,c
 13687  0069FC  6EDA               	movwf	fsr2h,c
 13688  0069FE  50DF               	movf	indf2,w,c
 13689  006A00  E052               	bz	l9470
 13690  006A02  D7B4               	goto	l9448
 13691  006A04                     l9458:
 13692                           
 13693                           ;fat_format.c: 87: else
 13694                           ;fat_format.c: 88: {
 13695                           ;fat_format.c: 89: for (i=0; _cluster_size_table32[i].sectors_per_cluster != 0;i++)
 13696  006A04  6A0E               	clrf	fatfs_calc_cluster_size@i+1,c
 13697  006A06  6A0D               	clrf	fatfs_calc_cluster_size@i,c
 13698  006A08  D038               	goto	l9468
 13699  006A0A                     l9460:
 13700                           
 13701                           ;fat_format.c: 90: if (sectors <= _cluster_size_table32[i].sectors)
 13702  006A0A  0E05               	movlw	5
 13703  006A0C  020D               	mulwf	fatfs_calc_cluster_size@i,c
 13704  006A0E  CFF3 F007          	movff	prodl,??_fatfs_calc_cluster_size
 13705  006A12  CFF4 F008          	movff	prodh,??_fatfs_calc_cluster_size+1
 13706  006A16  020E               	mulwf	fatfs_calc_cluster_size@i+1,c
 13707  006A18  50F3               	movf	243,w,c
 13708  006A1A  2608               	addwf	(??_fatfs_calc_cluster_size+1)& (0+255),f,c
 13709  006A1C  0E28               	movlw	low __cluster_size_table32
 13710  006A1E  2407               	addwf	??_fatfs_calc_cluster_size,w,c
 13711  006A20  6ED9               	movwf	fsr2l,c
 13712  006A22  0E02               	movlw	high __cluster_size_table32
 13713  006A24  2008               	addwfc	??_fatfs_calc_cluster_size+1,w,c
 13714  006A26  6EDA               	movwf	fsr2h,c
 13715  006A28  CFDE F009          	movff	postinc2,??_fatfs_calc_cluster_size+2
 13716  006A2C  CFDE F00A          	movff	postinc2,??_fatfs_calc_cluster_size+3
 13717  006A30  CFDE F00B          	movff	postinc2,??_fatfs_calc_cluster_size+4
 13718  006A34  CFDE F00C          	movff	postinc2,??_fatfs_calc_cluster_size+5
 13719  006A38  5001               	movf	fatfs_calc_cluster_size@sectors,w,c
 13720  006A3A  5C09               	subwf	??_fatfs_calc_cluster_size+2,w,c
 13721  006A3C  5002               	movf	fatfs_calc_cluster_size@sectors+1,w,c
 13722  006A3E  580A               	subwfb	??_fatfs_calc_cluster_size+3,w,c
 13723  006A40  5003               	movf	fatfs_calc_cluster_size@sectors+2,w,c
 13724  006A42  580B               	subwfb	??_fatfs_calc_cluster_size+4,w,c
 13725  006A44  5004               	movf	fatfs_calc_cluster_size@sectors+3,w,c
 13726  006A46  580C               	subwfb	??_fatfs_calc_cluster_size+5,w,c
 13727  006A48  E316               	bnc	l9466
 13728                           
 13729                           ; BSR set to: 2
 13730                           ;fat_format.c: 91: return _cluster_size_table32[i].sectors_per_cluster;
 13731  006A4A  0E05               	movlw	5
 13732  006A4C  020D               	mulwf	fatfs_calc_cluster_size@i,c
 13733  006A4E  CFF3 F007          	movff	prodl,??_fatfs_calc_cluster_size
 13734  006A52  CFF4 F008          	movff	prodh,??_fatfs_calc_cluster_size+1
 13735  006A56  020E               	mulwf	fatfs_calc_cluster_size@i+1,c
 13736  006A58  50F3               	movf	243,w,c
 13737  006A5A  2608               	addwf	(??_fatfs_calc_cluster_size+1)& (0+255),f,c
 13738  006A5C  0E04               	movlw	4
 13739  006A5E  2607               	addwf	??_fatfs_calc_cluster_size,f,c
 13740  006A60  0E00               	movlw	0
 13741  006A62  2208               	addwfc	??_fatfs_calc_cluster_size+1,f,c
 13742  006A64  0E28               	movlw	low __cluster_size_table32
 13743  006A66  2407               	addwf	??_fatfs_calc_cluster_size,w,c
 13744  006A68  6ED9               	movwf	fsr2l,c
 13745  006A6A  0102               	movlb	2	; () banked
 13746  006A6C  0E02               	movlw	high __cluster_size_table32
 13747  006A6E                     L37:
 13748  006A6E  2008               	addwfc	??_fatfs_calc_cluster_size+1,w,c
 13749  006A70  6EDA               	movwf	fsr2h,c
 13750  006A72  50DF               	movf	indf2,w,c
 13751  006A74  D019               	goto	l850
 13752  006A76                     l9466:
 13753                           
 13754                           ; BSR set to: 2
 13755  006A76  4A0D               	infsnz	fatfs_calc_cluster_size@i,f,c
 13756  006A78  2A0E               	incf	fatfs_calc_cluster_size@i+1,f,c
 13757  006A7A                     l9468:
 13758  006A7A  0E05               	movlw	5
 13759  006A7C  020D               	mulwf	fatfs_calc_cluster_size@i,c
 13760  006A7E  CFF3 F007          	movff	prodl,??_fatfs_calc_cluster_size
 13761  006A82  CFF4 F008          	movff	prodh,??_fatfs_calc_cluster_size+1
 13762  006A86  020E               	mulwf	fatfs_calc_cluster_size@i+1,c
 13763  006A88  50F3               	movf	243,w,c
 13764  006A8A  2608               	addwf	(??_fatfs_calc_cluster_size+1)& (0+255),f,c
 13765  006A8C  0E04               	movlw	4
 13766  006A8E  2607               	addwf	??_fatfs_calc_cluster_size,f,c
 13767  006A90  0E00               	movlw	0
 13768  006A92  2208               	addwfc	??_fatfs_calc_cluster_size+1,f,c
 13769  006A94  0E28               	movlw	low __cluster_size_table32
 13770  006A96  2407               	addwf	??_fatfs_calc_cluster_size,w,c
 13771  006A98  6ED9               	movwf	fsr2l,c
 13772  006A9A  0102               	movlb	2	; () banked
 13773  006A9C  0E02               	movlw	high __cluster_size_table32
 13774  006A9E  2008               	addwfc	??_fatfs_calc_cluster_size+1,w,c
 13775  006AA0  6EDA               	movwf	fsr2h,c
 13776  006AA2  50DF               	movf	indf2,w,c
 13777  006AA4  E1B2               	bnz	l9460
 13778  006AA6                     l9470:
 13779                           
 13780                           ; BSR set to: 2
 13781                           ;fat_format.c: 92: }
 13782                           ;fat_format.c: 94: return 0;
 13783  006AA6  0E00               	movlw	0
 13784  006AA8                     l850:
 13785                           
 13786                           ; BSR set to: 2
 13787  006AA8  0012               	return	
 13788  006AAA                     __end_of_fatfs_calc_cluster_size:
 13789                           	opt stack 0
 13790                           tosu	equ	0xFFF
 13791                           tosh	equ	0xFFE
 13792                           tosl	equ	0xFFD
 13793                           pclath	equ	0xFFA
 13794                           tblptru	equ	0xFF8
 13795                           tblptrh	equ	0xFF7
 13796                           tblptrl	equ	0xFF6
 13797                           tablat	equ	0xFF5
 13798                           prodh	equ	0xFF4
 13799                           prodl	equ	0xFF3
 13800                           indf0	equ	0xFEF
 13801                           postinc0	equ	0xFEE
 13802                           fsr0h	equ	0xFEA
 13803                           fsr0l	equ	0xFE9
 13804                           wreg	equ	0xFE8
 13805                           indf1	equ	0xFE7
 13806                           postinc1	equ	0xFE6
 13807                           postdec1	equ	0xFE5
 13808                           fsr1h	equ	0xFE2
 13809                           fsr1l	equ	0xFE1
 13810                           indf2	equ	0xFDF
 13811                           postinc2	equ	0xFDE
 13812                           postdec2	equ	0xFDD
 13813                           fsr2h	equ	0xFDA
 13814                           fsr2l	equ	0xFD9
 13815                           status	equ	0xFD8
 13816                           
 13817 ;; *************** function _File_write *****************
 13818 ;; Defined at:
 13819 ;;		line 373 in file "main.c"
 13820 ;; Parameters:    Size  Location     Type
 13821 ;;		None
 13822 ;; Auto vars:     Size  Location     Type
 13823 ;;		None
 13824 ;; Return value:  Size  Location     Type
 13825 ;;		None               void
 13826 ;; Registers used:
 13827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 13828 ;; Tracked objects:
 13829 ;;		On entry : 0/0
 13830 ;;		On exit  : 0/0
 13831 ;;		Unchanged: 0/0
 13832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13835 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13836 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13837 ;;Total ram usage:        1 bytes
 13838 ;; Hardware stack levels used:    1
 13839 ;; Hardware stack levels required when called:   12
 13840 ;; This function calls:
 13841 ;;		_Clr_str
 13842 ;;		_ReadUART
 13843 ;;		_Read_str
 13844 ;;		_Switch
 13845 ;;		_Write_str
 13846 ;;		_fl_fclose
 13847 ;;		_fl_fopen
 13848 ;;		_fl_fwrite
 13849 ;;		_fl_remove
 13850 ;; This function is called by:
 13851 ;;		_main
 13852 ;; This function uses a non-reentrant model
 13853 ;;
 13854                           
 13855                           	psect	text31
 13856  007E94                     __ptext31:
 13857                           	opt stack 0
 13858  007E94                     _File_write:
 13859                           	opt stack 18
 13860                           
 13861                           ;main.c: 375: flag_1 = 0;
 13862                           
 13863                           ; BSR set to: 2
 13864                           ;incstack = 0
 13865  007E94  0101               	movlb	1	; () banked
 13866  007E96  6BAA               	clrf	_flag_1& (0+255),b
 13867  007E98                     l12918:
 13868                           
 13869                           ; BSR set to: 1
 13870                           ;main.c: 377: {
 13871                           ;main.c: 378: Write_str("\n\rEnter the file name/ path?\n\r5 characters with file extens
      +                          ion .txt or .bin\n\r");
 13872  007E98  0EFA               	movlw	high STR_17
 13873  007E9A  6E07               	movwf	Write_str@str+1,c
 13874  007E9C  0EFB               	movlw	low STR_17
 13875  007E9E  6E06               	movwf	Write_str@str,c
 13876  007EA0  EC3C  F01F         	call	_Write_str	;wreg free
 13877                           
 13878                           ;main.c: 379: Clr_str(string);
 13879  007EA4  0E01               	movlw	high _string
 13880  007EA6  6E02               	movwf	Clr_str@buffer+1,c
 13881  007EA8  0101               	movlb	1	; () banked
 13882  007EAA  0EAF               	movlw	low _string
 13883  007EAC  6E01               	movwf	Clr_str@buffer,c
 13884  007EAE  EC95  F01F         	call	_Clr_str	;wreg free
 13885                           
 13886                           ;main.c: 380: Read_str(string);
 13887  007EB2  0E01               	movlw	high _string
 13888  007EB4  6E03               	movwf	Read_str@buffer+1,c
 13889  007EB6  0101               	movlb	1	; () banked
 13890  007EB8  0EAF               	movlw	low _string
 13891  007EBA  6E02               	movwf	Read_str@buffer,c
 13892  007EBC  EC22  F021         	call	_Read_str	;wreg free
 13893                           
 13894                           ;main.c: 381: if(Switch('w')==2)
 13895  007EC0  0E77               	movlw	119
 13896  007EC2  EC13  F030         	call	_Switch
 13897  007EC6  0A02               	xorlw	2
 13898  007EC8  E102               	bnz	l12930
 13899                           
 13900                           ;main.c: 382: {
 13901                           ;main.c: 383: flag_1 = 0;
 13902  007ECA  0E00               	movlw	0
 13903  007ECC  D008               	goto	L38
 13904  007ECE                     l12930:
 13905                           
 13906                           ;main.c: 386: else if(Switch('w')==1)
 13907  007ECE  0E77               	movlw	119
 13908  007ED0  EC13  F030         	call	_Switch
 13909  007ED4  0101               	movlb	1	; () banked
 13910  007ED6  6F89               	movwf	??_File_write& (0+255),b
 13911  007ED8  0589               	decf	??_File_write& (0+255),w,b
 13912  007EDA  E104               	bnz	l12934
 13913                           
 13914                           ; BSR set to: 1
 13915                           ;main.c: 387: {
 13916                           ;main.c: 388: flag_1 = 1;
 13917  007EDC  0E01               	movlw	1
 13918  007EDE                     L38:
 13919  007EDE  0101               	movlb	1	; () banked
 13920  007EE0  6FAA               	movwf	_flag_1& (0+255),b
 13921                           
 13922                           ;main.c: 389: break;
 13923  007EE2  D003               	goto	l12936
 13924  007EE4                     l12934:
 13925                           
 13926                           ; BSR set to: 1
 13927                           ;main.c: 390: }
 13928                           ;main.c: 391: }while(flag_1==0);
 13929  007EE4  0101               	movlb	1	; () banked
 13930  007EE6  51AA               	movf	_flag_1& (0+255),w,b
 13931  007EE8  E0D7               	bz	l12918
 13932  007EEA                     l12936:
 13933                           
 13934                           ; BSR set to: 1
 13935                           ;main.c: 394: if(flag_1)
 13936  007EEA  0101               	movlb	1	; () banked
 13937  007EEC  51AA               	movf	_flag_1& (0+255),w,b
 13938  007EEE  E101 D0CF          	bz	l1720
 13939                           
 13940                           ; BSR set to: 1
 13941                           ;main.c: 395: {
 13942                           ;main.c: 396: Switch('r');
 13943  007EF2  0E72               	movlw	114
 13944  007EF4  EC13  F030         	call	_Switch
 13945                           
 13946                           ;main.c: 397: file = fl_fopen(m,"r");
 13947  007EF8  0E02               	movlw	high _m
 13948  007EFA  0100               	movlb	0	; () banked
 13949  007EFC  6FFD               	movwf	(fl_fopen@path+1)& (0+255),b
 13950  007EFE  0E89               	movlw	low _m
 13951  007F00  6FFC               	movwf	fl_fopen@path& (0+255),b
 13952  007F02  0EFF               	movlw	high STR_10
 13953  007F04  6FFF               	movwf	(fl_fopen@mode+1)& (0+255),b
 13954  007F06  0EFC               	movlw	low STR_10
 13955  007F08  6FFE               	movwf	fl_fopen@mode& (0+255),b
 13956  007F0A  ECAA  F036         	call	_fl_fopen	;wreg free
 13957  007F0E  C0FC  F197         	movff	?_fl_fopen,_file
 13958  007F12  C0FD  F198         	movff	?_fl_fopen+1,_file+1
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;main.c: 398: if( file)
 13962  007F16  0101               	movlb	1	; () banked
 13963  007F18  5198               	movf	(_file+1)& (0+255),w,b
 13964  007F1A  1197               	iorwf	_file& (0+255),w,b
 13965  007F1C  E058               	bz	l12978
 13966                           
 13967                           ; BSR set to: 1
 13968                           ;main.c: 399: {
 13969                           ;main.c: 400: fl_fclose(file);
 13970  007F1E  C198  F0DF         	movff	_file+1,fl_fclose@f+1
 13971  007F22  0100               	movlb	0	; () banked
 13972  007F24  C197  F0DE         	movff	_file,fl_fclose@f
 13973  007F28  EC99  F031         	call	_fl_fclose	;wreg free
 13974                           
 13975                           ;main.c: 401: Write_str("\n\rFile already exists..!\n\rDo you want to replace? y/n");
 13976  007F2C  0EFB               	movlw	high STR_19
 13977  007F2E  6E07               	movwf	Write_str@str+1,c
 13978  007F30  0E49               	movlw	low STR_19
 13979  007F32  6E06               	movwf	Write_str@str,c
 13980  007F34  EC3C  F01F         	call	_Write_str	;wreg free
 13981  007F38                     l12948:
 13982                           
 13983                           ;main.c: 403: {
 13984                           ;main.c: 404: c = ReadUART();
 13985  007F38  EC1E  F01F         	call	_ReadUART	;wreg free
 13986  007F3C  0101               	movlb	1	; () banked
 13987  007F3E  6FA6               	movwf	_c& (0+255),b
 13988                           
 13989                           ; BSR set to: 1
 13990                           ;main.c: 405: if(c== 'y')
 13991  007F40  51A6               	movf	_c& (0+255),w,b
 13992  007F42  0A79               	xorlw	121
 13993  007F44  E131               	bnz	l12966
 13994  007F46                     l12952:
 13995                           
 13996                           ; BSR set to: 1
 13997                           ;main.c: 408: if (!(fl_remove(m) < 0))
 13998  007F46  0E02               	movlw	high _m
 13999  007F48  0101               	movlb	1	; () banked
 14000  007F4A  6F84               	movwf	(fl_remove@filename+1)& (0+255),b
 14001  007F4C  0E89               	movlw	low _m
 14002  007F4E  6F83               	movwf	fl_remove@filename& (0+255),b
 14003  007F50  ECA5  F02C         	call	_fl_remove	;wreg free
 14004  007F54  0101               	movlb	1	; () banked
 14005  007F56  BF84               	btfsc	(?_fl_remove+1)& (0+255),7,b
 14006  007F58  D006               	goto	l12956
 14007                           
 14008                           ; BSR set to: 1
 14009                           ;main.c: 409: {
 14010                           ;main.c: 410: Write_str("\n\rFile replaced..!\n\r");
 14011  007F5A  0EFE               	movlw	high STR_20
 14012  007F5C  6E07               	movwf	Write_str@str+1,c
 14013  007F5E  0EC5               	movlw	low STR_20
 14014  007F60  6E06               	movwf	Write_str@str,c
 14015  007F62  EC3C  F01F         	call	_Write_str	;wreg free
 14016  007F66                     l12956:
 14017                           
 14018                           ;main.c: 411: }
 14019                           ;main.c: 412: file = fl_fopen(m, "r");
 14020  007F66  0E02               	movlw	high _m
 14021  007F68  0100               	movlb	0	; () banked
 14022  007F6A  6FFD               	movwf	(fl_fopen@path+1)& (0+255),b
 14023  007F6C  0E89               	movlw	low _m
 14024  007F6E  6FFC               	movwf	fl_fopen@path& (0+255),b
 14025  007F70  0EFF               	movlw	high STR_10
 14026  007F72  6FFF               	movwf	(fl_fopen@mode+1)& (0+255),b
 14027  007F74  0EFC               	movlw	low STR_10
 14028  007F76  6FFE               	movwf	fl_fopen@mode& (0+255),b
 14029  007F78  ECAA  F036         	call	_fl_fopen	;wreg free
 14030  007F7C  C0FC  F197         	movff	?_fl_fopen,_file
 14031  007F80  C0FD  F198         	movff	?_fl_fopen+1,_file+1
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;main.c: 413: if( file)
 14035  007F84  0101               	movlb	1	; () banked
 14036  007F86  5198               	movf	(_file+1)& (0+255),w,b
 14037  007F88  1197               	iorwf	_file& (0+255),w,b
 14038  007F8A  E007               	bz	l12962
 14039                           
 14040                           ; BSR set to: 1
 14041                           ;main.c: 414: {
 14042                           ;main.c: 415: fl_fclose(file);
 14043  007F8C  C198  F0DF         	movff	_file+1,fl_fclose@f+1
 14044  007F90  0100               	movlb	0	; () banked
 14045  007F92  C197  F0DE         	movff	_file,fl_fclose@f
 14046  007F96  EC99  F031         	call	_fl_fclose	;wreg free
 14047  007F9A                     l12962:
 14048                           
 14049                           ;main.c: 416: }
 14050                           ;main.c: 417: }while(file);
 14051  007F9A  0101               	movlb	1	; () banked
 14052  007F9C  5198               	movf	(_file+1)& (0+255),w,b
 14053  007F9E  1197               	iorwf	_file& (0+255),w,b
 14054  007FA0  E1D2               	bnz	l12952
 14055                           
 14056                           ; BSR set to: 1
 14057                           ;main.c: 418: flag_1 = 1;
 14058                           
 14059                           ; BSR set to: 1
 14060  007FA2  0E01               	movlw	1
 14061  007FA4  6FAA               	movwf	_flag_1& (0+255),b
 14062                           
 14063                           ;main.c: 419: }
 14064  007FA6  D00C               	goto	l12974
 14065  007FA8                     l12966:
 14066                           
 14067                           ; BSR set to: 1
 14068                           ;main.c: 420: else if(c=='n')
 14069  007FA8  0101               	movlb	1	; () banked
 14070  007FAA  51A6               	movf	_c& (0+255),w,b
 14071  007FAC  0A6E               	xorlw	110
 14072  007FAE  E102               	bnz	l12972
 14073                           
 14074                           ; BSR set to: 1
 14075                           ;main.c: 421: {
 14076                           ;main.c: 422: flag_1 = 0;
 14077  007FB0  6BAA               	clrf	_flag_1& (0+255),b
 14078                           
 14079                           ;main.c: 423: break;
 14080  007FB2  D00D               	goto	l12978
 14081  007FB4                     l12972:
 14082                           
 14083                           ; BSR set to: 1
 14084                           ;main.c: 425: else
 14085                           ;main.c: 426: Write_str("\n\rPlease enter y/n?");
 14086  007FB4  0EFF               	movlw	high STR_22
 14087  007FB6  6E07               	movwf	Write_str@str+1,c
 14088  007FB8  0E03               	movlw	low STR_22
 14089  007FBA  6E06               	movwf	Write_str@str,c
 14090  007FBC  EC3C  F01F         	call	_Write_str	;wreg free
 14091  007FC0                     l12974:
 14092                           
 14093                           ;main.c: 427: }while((c!= 'n') && (c!='y'));
 14094  007FC0  0101               	movlb	1	; () banked
 14095  007FC2  51A6               	movf	_c& (0+255),w,b
 14096  007FC4  0A6E               	xorlw	110
 14097  007FC6  E003               	bz	l12978
 14098                           
 14099                           ; BSR set to: 1
 14100  007FC8  51A6               	movf	_c& (0+255),w,b
 14101  007FCA  0A79               	xorlw	121
 14102  007FCC  E1B5               	bnz	l12948
 14103  007FCE                     l12978:
 14104                           
 14105                           ; BSR set to: 1
 14106                           ;main.c: 428: }
 14107                           ;main.c: 429: Switch('w');
 14108  007FCE  0E77               	movlw	119
 14109  007FD0  EC13  F030         	call	_Switch
 14110                           
 14111                           ;main.c: 430: file = fl_fopen(m,"w");
 14112  007FD4  0E02               	movlw	high _m
 14113  007FD6  0100               	movlb	0	; () banked
 14114  007FD8  6FFD               	movwf	(fl_fopen@path+1)& (0+255),b
 14115  007FDA  0E89               	movlw	low _m
 14116  007FDC  6FFC               	movwf	fl_fopen@path& (0+255),b
 14117  007FDE  0EFF               	movlw	high STR_23
 14118  007FE0  6FFF               	movwf	(fl_fopen@mode+1)& (0+255),b
 14119  007FE2  0EFA               	movlw	low STR_23
 14120  007FE4  6FFE               	movwf	fl_fopen@mode& (0+255),b
 14121  007FE6  ECAA  F036         	call	_fl_fopen	;wreg free
 14122  007FEA  C0FC  F197         	movff	?_fl_fopen,_file
 14123  007FEE  C0FD  F198         	movff	?_fl_fopen+1,_file+1
 14124                           
 14125                           ; BSR set to: 0
 14126                           ;main.c: 431: flag_1 = 0;
 14127  007FF2  0101               	movlb	1	; () banked
 14128  007FF4  6BAA               	clrf	_flag_1& (0+255),b
 14129                           
 14130                           ; BSR set to: 1
 14131                           ;main.c: 432: Write_str("\n\rEnter the data..(ctrl+s to save)\n\r");
 14132  007FF6  0EFC               	movlw	high STR_24
 14133  007FF8  6E07               	movwf	Write_str@str+1,c
 14134  007FFA  0E88               	movlw	low STR_24
 14135  007FFC  6E06               	movwf	Write_str@str,c
 14136  007FFE  EC3C  F01F         	call	_Write_str	;wreg free
 14137                           
 14138                           ;main.c: 434: Write_str(m);
 14139  008002  0E02               	movlw	high _m
 14140  008004  6E07               	movwf	Write_str@str+1,c
 14141  008006  0102               	movlb	2	; () banked
 14142  008008  0E89               	movlw	low _m
 14143  00800A  6E06               	movwf	Write_str@str,c
 14144  00800C  EC3C  F01F         	call	_Write_str	;wreg free
 14145                           
 14146                           ;main.c: 435: if(file)
 14147  008010  0101               	movlb	1	; () banked
 14148  008012  5198               	movf	(_file+1)& (0+255),w,b
 14149  008014  1197               	iorwf	_file& (0+255),w,b
 14150  008016  E02F               	bz	l13008
 14151  008018                     l12990:
 14152                           
 14153                           ;main.c: 439: data = ReadUART();
 14154  008018  EC1E  F01F         	call	_ReadUART	;wreg free
 14155  00801C  0101               	movlb	1	; () banked
 14156  00801E  6FF7               	movwf	_data& (0+255),b
 14157                           
 14158                           ; BSR set to: 1
 14159                           ;main.c: 447: if(data==0x13)
 14160  008020  51F7               	movf	_data& (0+255),w,b
 14161  008022  0A13               	xorlw	19
 14162  008024  E10E               	bnz	l13004
 14163                           
 14164                           ; BSR set to: 1
 14165                           ;main.c: 448: {
 14166                           ;main.c: 449: Write_str("\n\rSave data? y/n?");
 14167  008026  0EFF               	movlw	high STR_25
 14168  008028  6E07               	movwf	Write_str@str+1,c
 14169  00802A  0E63               	movlw	low STR_25
 14170  00802C  6E06               	movwf	Write_str@str,c
 14171  00802E  EC3C  F01F         	call	_Write_str	;wreg free
 14172                           
 14173                           ;main.c: 450: data = ReadUART();
 14174  008032  EC1E  F01F         	call	_ReadUART	;wreg free
 14175  008036  0101               	movlb	1	; () banked
 14176  008038  6FF7               	movwf	_data& (0+255),b
 14177                           
 14178                           ; BSR set to: 1
 14179                           ;main.c: 451: if(data=='y')
 14180  00803A  51F7               	movf	_data& (0+255),w,b
 14181  00803C  0A79               	xorlw	121
 14182  00803E  E014               	bz	l13006
 14183  008040  D7EB               	goto	l12990
 14184  008042                     l13004:
 14185                           
 14186                           ; BSR set to: 1
 14187                           ;main.c: 455: }
 14188                           ;main.c: 456: fl_fwrite(&data, 1, 1, file);
 14189  008042  0E20               	movlw	32
 14190  008044  0100               	movlb	0	; () banked
 14191  008046  6FE0               	movwf	(fl_fwrite@data+2)& (0+255),b
 14192  008048  0E01               	movlw	high _data
 14193  00804A  6FDF               	movwf	(fl_fwrite@data+1)& (0+255),b
 14194  00804C  0EF7               	movlw	low _data
 14195  00804E  6FDE               	movwf	fl_fwrite@data& (0+255),b
 14196  008050  6BE2               	clrf	(fl_fwrite@size+1)& (0+255),b
 14197  008052  0E01               	movlw	1
 14198  008054  6FE1               	movwf	fl_fwrite@size& (0+255),b
 14199  008056  6BE4               	clrf	(fl_fwrite@count+1)& (0+255),b
 14200  008058  6FE3               	movwf	fl_fwrite@count& (0+255),b
 14201  00805A  C198  F0E6         	movff	_file+1,fl_fwrite@f+1
 14202  00805E  C197  F0E5         	movff	_file,fl_fwrite@f
 14203  008062  ECED  F06C         	call	_fl_fwrite	;wreg free
 14204  008066  D7D8               	goto	l12990
 14205  008068                     l13006:
 14206                           
 14207                           ;main.c: 458: Write_str("\n\r\n\rFile write completed..!");
 14208  008068  0EFD               	movlw	high STR_26
 14209  00806A  6E07               	movwf	Write_str@str+1,c
 14210  00806C  0EAF               	movlw	low STR_26
 14211  00806E  6E06               	movwf	Write_str@str,c
 14212  008070  EC3C  F01F         	call	_Write_str	;wreg free
 14213                           
 14214                           ;main.c: 459: }
 14215  008074  D006               	goto	l13010
 14216  008076                     l13008:
 14217                           
 14218                           ;main.c: 460: else
 14219                           ;main.c: 461: Write_str("\n\rFile write failed/ Invalid Directory");
 14220  008076  0EFC               	movlw	high STR_27
 14221  008078  6E07               	movwf	Write_str@str+1,c
 14222  00807A  0E3B               	movlw	low STR_27
 14223  00807C  6E06               	movwf	Write_str@str,c
 14224  00807E  EC3C  F01F         	call	_Write_str	;wreg free
 14225  008082                     l13010:
 14226                           
 14227                           ;main.c: 462: fl_fclose(file);
 14228  008082  C198  F0DF         	movff	_file+1,fl_fclose@f+1
 14229  008086  0100               	movlb	0	; () banked
 14230  008088  C197  F0DE         	movff	_file,fl_fclose@f
 14231  00808C  EC99  F031         	call	_fl_fclose	;wreg free
 14232  008090                     l1720:
 14233  008090  0012               	return	
 14234  008092                     __end_of_File_write:
 14235                           	opt stack 0
 14236                           tosu	equ	0xFFF
 14237                           tosh	equ	0xFFE
 14238                           tosl	equ	0xFFD
 14239                           pclath	equ	0xFFA
 14240                           tblptru	equ	0xFF8
 14241                           tblptrh	equ	0xFF7
 14242                           tblptrl	equ	0xFF6
 14243                           tablat	equ	0xFF5
 14244                           prodh	equ	0xFF4
 14245                           prodl	equ	0xFF3
 14246                           indf0	equ	0xFEF
 14247                           postinc0	equ	0xFEE
 14248                           fsr0h	equ	0xFEA
 14249                           fsr0l	equ	0xFE9
 14250                           wreg	equ	0xFE8
 14251                           indf1	equ	0xFE7
 14252                           postinc1	equ	0xFE6
 14253                           postdec1	equ	0xFE5
 14254                           fsr1h	equ	0xFE2
 14255                           fsr1l	equ	0xFE1
 14256                           indf2	equ	0xFDF
 14257                           postinc2	equ	0xFDE
 14258                           postdec2	equ	0xFDD
 14259                           fsr2h	equ	0xFDA
 14260                           fsr2l	equ	0xFD9
 14261                           status	equ	0xFD8
 14262                           
 14263 ;; *************** function _File_read *****************
 14264 ;; Defined at:
 14265 ;;		line 654 in file "main.c"
 14266 ;; Parameters:    Size  Location     Type
 14267 ;;		None
 14268 ;; Auto vars:     Size  Location     Type
 14269 ;;		None
 14270 ;; Return value:  Size  Location     Type
 14271 ;;		None               void
 14272 ;; Registers used:
 14273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14274 ;; Tracked objects:
 14275 ;;		On entry : 0/0
 14276 ;;		On exit  : 0/0
 14277 ;;		Unchanged: 0/0
 14278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14283 ;;Total ram usage:        0 bytes
 14284 ;; Hardware stack levels used:    1
 14285 ;; Hardware stack levels required when called:   11
 14286 ;; This function calls:
 14287 ;;		_Clr_str
 14288 ;;		_Draw_Line
 14289 ;;		_Read_str
 14290 ;;		_Switch
 14291 ;;		_Write
 14292 ;;		_Write_str
 14293 ;;		_fl_fclose
 14294 ;;		_fl_feof
 14295 ;;		_fl_fgetc
 14296 ;;		_fl_fopen
 14297 ;; This function is called by:
 14298 ;;		_main
 14299 ;; This function uses a non-reentrant model
 14300 ;;
 14301                           
 14302                           	psect	text32
 14303  005F2E                     __ptext32:
 14304                           	opt stack 0
 14305  005F2E                     _File_read:
 14306                           	opt stack 19
 14307                           
 14308                           ;main.c: 656: Write_str("\n\rEnter the file Name? 5 characters\n\r");
 14309                           
 14310                           ;incstack = 0
 14311  005F2E  0EFC               	movlw	high STR_28
 14312  005F30  6E07               	movwf	Write_str@str+1,c
 14313  005F32  0E62               	movlw	low STR_28
 14314  005F34  6E06               	movwf	Write_str@str,c
 14315  005F36  EC3C  F01F         	call	_Write_str	;wreg free
 14316                           
 14317                           ;main.c: 657: Clr_str(string);
 14318  005F3A  0E01               	movlw	high _string
 14319  005F3C  6E02               	movwf	Clr_str@buffer+1,c
 14320  005F3E  0101               	movlb	1	; () banked
 14321  005F40  0EAF               	movlw	low _string
 14322  005F42  6E01               	movwf	Clr_str@buffer,c
 14323  005F44  EC95  F01F         	call	_Clr_str	;wreg free
 14324                           
 14325                           ;main.c: 658: Read_str(string);
 14326  005F48  0E01               	movlw	high _string
 14327  005F4A  6E03               	movwf	Read_str@buffer+1,c
 14328  005F4C  0101               	movlb	1	; () banked
 14329  005F4E  0EAF               	movlw	low _string
 14330  005F50  6E02               	movwf	Read_str@buffer,c
 14331  005F52  EC22  F021         	call	_Read_str	;wreg free
 14332                           
 14333                           ;main.c: 659: Switch('r');
 14334  005F56  0E72               	movlw	114
 14335  005F58  EC13  F030         	call	_Switch
 14336                           
 14337                           ;main.c: 660: file = fl_fopen(m,"r");
 14338  005F5C  0E02               	movlw	high _m
 14339  005F5E  0100               	movlb	0	; () banked
 14340  005F60  6FFD               	movwf	(fl_fopen@path+1)& (0+255),b
 14341  005F62  0E89               	movlw	low _m
 14342  005F64  6FFC               	movwf	fl_fopen@path& (0+255),b
 14343  005F66  0EFF               	movlw	high STR_10
 14344  005F68  6FFF               	movwf	(fl_fopen@mode+1)& (0+255),b
 14345  005F6A  0EFC               	movlw	low STR_10
 14346  005F6C  6FFE               	movwf	fl_fopen@mode& (0+255),b
 14347  005F6E  ECAA  F036         	call	_fl_fopen	;wreg free
 14348  005F72  C0FC  F197         	movff	?_fl_fopen,_file
 14349  005F76  C0FD  F198         	movff	?_fl_fopen+1,_file+1
 14350                           
 14351                           ; BSR set to: 0
 14352                           ;main.c: 661: fptr = file;
 14353  005F7A  C198  F19A         	movff	_file+1,_fptr+1
 14354  005F7E  C197  F199         	movff	_file,_fptr
 14355                           
 14356                           ; BSR set to: 1
 14357                           ;main.c: 662: if(file)
 14358  005F82  0101               	movlb	1	; () banked
 14359  005F84  5198               	movf	(_file+1)& (0+255),w,b
 14360  005F86  1197               	iorwf	_file& (0+255),w,b
 14361  005F88  E042               	bz	l13132
 14362                           
 14363                           ; BSR set to: 1
 14364                           ;main.c: 663: {
 14365                           ;main.c: 664: Write_str("\n\rFile open success..!\n\r");
 14366  005F8A  0EFE               	movlw	high STR_37
 14367  005F8C  6E07               	movwf	Write_str@str+1,c
 14368  005F8E  0E1F               	movlw	low STR_37
 14369  005F90  6E06               	movwf	Write_str@str,c
 14370  005F92  EC3C  F01F         	call	_Write_str	;wreg free
 14371                           
 14372                           ;main.c: 665: Draw_Line('s', 80);
 14373  005F96  0E50               	movlw	80
 14374  005F98  6E03               	movwf	Draw_Line@length,c
 14375  005F9A  0E73               	movlw	115
 14376  005F9C  ECCE  F025         	call	_Draw_Line
 14377                           
 14378                           ;main.c: 666: Write_str("File name\t:\t");
 14379  005FA0  0EFF               	movlw	high STR_38
 14380  005FA2  6E07               	movwf	Write_str@str+1,c
 14381  005FA4  0EB6               	movlw	low STR_38
 14382  005FA6  6E06               	movwf	Write_str@str,c
 14383  005FA8  EC3C  F01F         	call	_Write_str	;wreg free
 14384                           
 14385                           ;main.c: 667: Write_str(string);
 14386  005FAC  0E01               	movlw	high _string
 14387  005FAE  6E07               	movwf	Write_str@str+1,c
 14388  005FB0  0101               	movlb	1	; () banked
 14389  005FB2  0EAF               	movlw	low _string
 14390  005FB4  6E06               	movwf	Write_str@str,c
 14391  005FB6  EC3C  F01F         	call	_Write_str	;wreg free
 14392                           
 14393                           ;main.c: 668: Write('\r');
 14394  005FBA  0E0D               	movlw	13
 14395  005FBC  EC05  F020         	call	_Write
 14396                           
 14397                           ;main.c: 669: Draw_Line('s',80);
 14398  005FC0  0E50               	movlw	80
 14399  005FC2  6E03               	movwf	Draw_Line@length,c
 14400  005FC4  0E73               	movlw	115
 14401  005FC6  ECCE  F025         	call	_Draw_Line
 14402  005FCA                     l13124:
 14403                           
 14404                           ;main.c: 671: data = fl_fgetc(file);
 14405  005FCA  C198  F0F7         	movff	_file+1,fl_fgetc@f+1
 14406  005FCE  0100               	movlb	0	; () banked
 14407  005FD0  C197  F0F6         	movff	_file,fl_fgetc@f
 14408  005FD4  EC64  F021         	call	_fl_fgetc	;wreg free
 14409  005FD8  0100               	movlb	0	; () banked
 14410  005FDA  51F6               	movf	?_fl_fgetc& (0+255),w,b
 14411  005FDC  0101               	movlb	1	; () banked
 14412  005FDE  6FF7               	movwf	_data& (0+255),b
 14413                           
 14414                           ; BSR set to: 1
 14415                           ;main.c: 672: Write(data);
 14416  005FE0  51F7               	movf	_data& (0+255),w,b
 14417  005FE2  EC05  F020         	call	_Write
 14418                           
 14419                           ;main.c: 673: }while(fl_feof(file) != (-1) );
 14420  005FE6  C198  F002         	movff	_file+1,fl_feof@f+1
 14421  005FEA  0101               	movlb	1	; () banked
 14422  005FEC  C197  F001         	movff	_file,fl_feof@f
 14423  005FF0  EC2F  F027         	call	_fl_feof	;wreg free
 14424  005FF4  2801               	incf	?_fl_feof,w,c
 14425  005FF6  B4D8               	btfsc	status,2,c
 14426  005FF8  2802               	incf	?_fl_feof+1,w,c
 14427  005FFA  E1E7               	bnz	l13124
 14428                           
 14429                           ;main.c: 674: Write('\r');
 14430  005FFC  0E0D               	movlw	13
 14431  005FFE  EC05  F020         	call	_Write
 14432                           
 14433                           ;main.c: 675: Draw_Line('s',80);
 14434  006002  0E50               	movlw	80
 14435  006004  6E03               	movwf	Draw_Line@length,c
 14436  006006  0E73               	movlw	115
 14437  006008  ECCE  F025         	call	_Draw_Line
 14438                           
 14439                           ;main.c: 677: }
 14440  00600C  D006               	goto	l13134
 14441  00600E                     l13132:
 14442                           
 14443                           ;main.c: 678: else
 14444                           ;main.c: 679: Write_str("\n\rfile not found..!");
 14445  00600E  0EFE               	movlw	high STR_40
 14446  006010  6E07               	movwf	Write_str@str+1,c
 14447  006012  0EEF               	movlw	low STR_40
 14448  006014  6E06               	movwf	Write_str@str,c
 14449  006016  EC3C  F01F         	call	_Write_str	;wreg free
 14450  00601A                     l13134:
 14451                           
 14452                           ;main.c: 680: fl_fclose(file);
 14453  00601A  C198  F0DF         	movff	_file+1,fl_fclose@f+1
 14454  00601E  C197  F0DE         	movff	_file,fl_fclose@f
 14455  006022  EF99  F031         	goto	_fl_fclose	;wreg free
 14456  006026                     __end_of_File_read:
 14457                           	opt stack 0
 14458                           tosu	equ	0xFFF
 14459                           tosh	equ	0xFFE
 14460                           tosl	equ	0xFFD
 14461                           pclath	equ	0xFFA
 14462                           tblptru	equ	0xFF8
 14463                           tblptrh	equ	0xFF7
 14464                           tblptrl	equ	0xFF6
 14465                           tablat	equ	0xFF5
 14466                           prodh	equ	0xFF4
 14467                           prodl	equ	0xFF3
 14468                           indf0	equ	0xFEF
 14469                           postinc0	equ	0xFEE
 14470                           fsr0h	equ	0xFEA
 14471                           fsr0l	equ	0xFE9
 14472                           wreg	equ	0xFE8
 14473                           indf1	equ	0xFE7
 14474                           postinc1	equ	0xFE6
 14475                           postdec1	equ	0xFE5
 14476                           fsr1h	equ	0xFE2
 14477                           fsr1l	equ	0xFE1
 14478                           indf2	equ	0xFDF
 14479                           postinc2	equ	0xFDE
 14480                           postdec2	equ	0xFDD
 14481                           fsr2h	equ	0xFDA
 14482                           fsr2l	equ	0xFD9
 14483                           status	equ	0xFD8
 14484                           
 14485 ;; *************** function _fl_fgetc *****************
 14486 ;; Defined at:
 14487 ;;		line 966 in file "fat_filelib.c"
 14488 ;; Parameters:    Size  Location     Type
 14489 ;;  f               2  118[BANK0 ] PTR void 
 14490 ;;		 -> RAM(3967), NULL(0), 
 14491 ;; Auto vars:     Size  Location     Type
 14492 ;;  res             2  120[BANK0 ] int 
 14493 ;;  data            1  122[BANK0 ] unsigned char 
 14494 ;; Return value:  Size  Location     Type
 14495 ;;                  2  118[BANK0 ] int 
 14496 ;; Registers used:
 14497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14498 ;; Tracked objects:
 14499 ;;		On entry : 0/0
 14500 ;;		On exit  : 0/0
 14501 ;;		Unchanged: 0/0
 14502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14503 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14504 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14506 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14507 ;;Total ram usage:        5 bytes
 14508 ;; Hardware stack levels used:    1
 14509 ;; Hardware stack levels required when called:   10
 14510 ;; This function calls:
 14511 ;;		_fl_fread
 14512 ;; This function is called by:
 14513 ;;		_File_read
 14514 ;;		_fl_fgets
 14515 ;;		_File_read_
 14516 ;; This function uses a non-reentrant model
 14517 ;;
 14518                           
 14519                           	psect	text33
 14520  0042C8                     __ptext33:
 14521                           	opt stack 0
 14522  0042C8                     _fl_fgetc:
 14523                           	opt stack 19
 14524                           
 14525                           ;fat_filelib.c: 968: int res;
 14526                           ;fat_filelib.c: 969: uint8 data = 0;
 14527                           
 14528                           ;incstack = 0
 14529  0042C8  0100               	movlb	0	; () banked
 14530  0042CA  6BFA               	clrf	fl_fgetc@data& (0+255),b
 14531                           
 14532                           ; BSR set to: 0
 14533                           ;fat_filelib.c: 971: res = fl_fread(&data, 1, 1, f);
 14534  0042CC  0E00               	movlw	high fl_fgetc@data
 14535  0042CE  6FDF               	movwf	(fl_fread@buffer+1)& (0+255),b
 14536  0042D0  0EFA               	movlw	low fl_fgetc@data
 14537  0042D2  6FDE               	movwf	fl_fread@buffer& (0+255),b
 14538  0042D4  6BE1               	clrf	(fl_fread@size+1)& (0+255),b
 14539  0042D6  0E01               	movlw	1
 14540  0042D8  6FE0               	movwf	fl_fread@size& (0+255),b
 14541  0042DA  6BE3               	clrf	(fl_fread@length+1)& (0+255),b
 14542  0042DC  6FE2               	movwf	fl_fread@length& (0+255),b
 14543  0042DE  C0F7  F0E5         	movff	fl_fgetc@f+1,fl_fread@f+1
 14544  0042E2  C0F6  F0E4         	movff	fl_fgetc@f,fl_fread@f
 14545  0042E6  EC0D  F065         	call	_fl_fread	;wreg free
 14546  0042EA  C0DE  F0F8         	movff	?_fl_fread,fl_fgetc@res
 14547  0042EE  C0DF  F0F9         	movff	?_fl_fread+1,fl_fgetc@res+1
 14548                           
 14549                           ; BSR set to: 0
 14550                           ;fat_filelib.c: 972: if (res == 1)
 14551  0042F2  0100               	movlb	0	; () banked
 14552  0042F4  05F8               	decf	fl_fgetc@res& (0+255),w,b
 14553  0042F6  11F9               	iorwf	(fl_fgetc@res+1)& (0+255),w,b
 14554  0042F8  E104               	bnz	l625
 14555                           
 14556                           ; BSR set to: 0
 14557                           ;fat_filelib.c: 973: return (int)data;
 14558  0042FA  C0FA  F0F6         	movff	fl_fgetc@data,?_fl_fgetc
 14559  0042FE  6BF7               	clrf	(?_fl_fgetc+1)& (0+255),b
 14560  004300  D004               	goto	l626
 14561  004302                     l625:
 14562                           
 14563                           ; BSR set to: 0
 14564                           ;fat_filelib.c: 974: else
 14565                           ;fat_filelib.c: 975: return res;
 14566  004302  C0F8  F0F6         	movff	fl_fgetc@res,?_fl_fgetc
 14567  004306  C0F9  F0F7         	movff	fl_fgetc@res+1,?_fl_fgetc+1
 14568  00430A                     l626:
 14569                           
 14570                           ; BSR set to: 0
 14571  00430A  0012               	return	
 14572  00430C                     __end_of_fl_fgetc:
 14573                           	opt stack 0
 14574                           tosu	equ	0xFFF
 14575                           tosh	equ	0xFFE
 14576                           tosl	equ	0xFFD
 14577                           pclath	equ	0xFFA
 14578                           tblptru	equ	0xFF8
 14579                           tblptrh	equ	0xFF7
 14580                           tblptrl	equ	0xFF6
 14581                           tablat	equ	0xFF5
 14582                           prodh	equ	0xFF4
 14583                           prodl	equ	0xFF3
 14584                           indf0	equ	0xFEF
 14585                           postinc0	equ	0xFEE
 14586                           fsr0h	equ	0xFEA
 14587                           fsr0l	equ	0xFE9
 14588                           wreg	equ	0xFE8
 14589                           indf1	equ	0xFE7
 14590                           postinc1	equ	0xFE6
 14591                           postdec1	equ	0xFE5
 14592                           fsr1h	equ	0xFE2
 14593                           fsr1l	equ	0xFE1
 14594                           indf2	equ	0xFDF
 14595                           postinc2	equ	0xFDE
 14596                           postdec2	equ	0xFDD
 14597                           fsr2h	equ	0xFDA
 14598                           fsr2l	equ	0xFD9
 14599                           status	equ	0xFD8
 14600                           
 14601 ;; *************** function _fl_feof *****************
 14602 ;; Defined at:
 14603 ;;		line 1214 in file "fat_filelib.c"
 14604 ;; Parameters:    Size  Location     Type
 14605 ;;  f               2    0[COMRAM] PTR void 
 14606 ;;		 -> RAM(3967), NULL(0), 
 14607 ;; Auto vars:     Size  Location     Type
 14608 ;;  file            2   12[COMRAM] PTR struct sFL_FILE
 14609 ;;		 -> RAM(3967), NULL(0), 
 14610 ;;  res             2   10[COMRAM] int 
 14611 ;; Return value:  Size  Location     Type
 14612 ;;                  2    0[COMRAM] int 
 14613 ;; Registers used:
 14614 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14615 ;; Tracked objects:
 14616 ;;		On entry : 0/0
 14617 ;;		On exit  : 0/0
 14618 ;;		Unchanged: 0/0
 14619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14621 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14622 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14623 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14624 ;;Total ram usage:       14 bytes
 14625 ;; Hardware stack levels used:    1
 14626 ;; This function calls:
 14627 ;;		Nothing
 14628 ;; This function is called by:
 14629 ;;		_File_read
 14630 ;;		_File_read_
 14631 ;; This function uses a non-reentrant model
 14632 ;;
 14633                           
 14634                           	psect	text34
 14635  004E5E                     __ptext34:
 14636                           	opt stack 0
 14637  004E5E                     _fl_feof:
 14638                           	opt stack 29
 14639                           
 14640                           ;fat_filelib.c: 1216: FL_FILE *file = (FL_FILE *)f;
 14641                           
 14642                           ; BSR set to: 0
 14643                           ;incstack = 0
 14644  004E5E  C002  F00E         	movff	fl_feof@f+1,fl_feof@file+1
 14645  004E62  C001  F00D         	movff	fl_feof@f,fl_feof@file
 14646                           
 14647                           ;fat_filelib.c: 1217: int res;
 14648                           ;fat_filelib.c: 1219: if (!file)
 14649  004E66  500E               	movf	fl_feof@file+1,w,c
 14650  004E68  100D               	iorwf	fl_feof@file,w,c
 14651  004E6A  E103               	bnz	l12426
 14652                           
 14653                           ;fat_filelib.c: 1220: return -1;
 14654  004E6C  6801               	setf	?_fl_feof,c
 14655  004E6E  6802               	setf	?_fl_feof+1,c
 14656  004E70  D032               	goto	l704
 14657  004E72                     l12426:
 14658                           
 14659                           ;fat_filelib.c: 1224: if (file->bytenum == file->filelength)
 14660  004E72  EE20 F00C          	lfsr	2,12
 14661  004E76  500D               	movf	fl_feof@file,w,c
 14662  004E78  26D9               	addwf	fsr2l,f,c
 14663  004E7A  500E               	movf	fl_feof@file+1,w,c
 14664  004E7C  22DA               	addwfc	fsr2h,f,c
 14665  004E7E  CFDE F003          	movff	postinc2,??_fl_feof
 14666  004E82  CFDE F004          	movff	postinc2,??_fl_feof+1
 14667  004E86  CFDE F005          	movff	postinc2,??_fl_feof+2
 14668  004E8A  CFDE F006          	movff	postinc2,??_fl_feof+3
 14669  004E8E  EE20 F008          	lfsr	2,8
 14670  004E92  500D               	movf	fl_feof@file,w,c
 14671  004E94  26D9               	addwf	fsr2l,f,c
 14672  004E96  500E               	movf	fl_feof@file+1,w,c
 14673  004E98  22DA               	addwfc	fsr2h,f,c
 14674  004E9A  CFDE F007          	movff	postinc2,??_fl_feof+4
 14675  004E9E  CFDE F008          	movff	postinc2,??_fl_feof+5
 14676  004EA2  CFDE F009          	movff	postinc2,??_fl_feof+6
 14677  004EA6  CFDE F00A          	movff	postinc2,??_fl_feof+7
 14678  004EAA  5006               	movf	??_fl_feof+3,w,c
 14679  004EAC  180A               	xorwf	??_fl_feof+7,w,c
 14680  004EAE  E108               	bnz	u14865
 14681  004EB0  5005               	movf	??_fl_feof+2,w,c
 14682  004EB2  1809               	xorwf	??_fl_feof+6,w,c
 14683  004EB4  E105               	bnz	u14865
 14684  004EB6  5004               	movf	??_fl_feof+1,w,c
 14685  004EB8  1808               	xorwf	??_fl_feof+5,w,c
 14686  004EBA  E102               	bnz	u14865
 14687  004EBC  5003               	movf	??_fl_feof,w,c
 14688  004EBE  1807               	xorwf	??_fl_feof+4,w,c
 14689  004EC0                     u14865:
 14690  004EC0  E103               	bnz	l12430
 14691                           
 14692                           ;fat_filelib.c: 1225: res = (-1);
 14693  004EC2  680B               	setf	fl_feof@res,c
 14694  004EC4  680C               	setf	fl_feof@res+1,c
 14695  004EC6  D003               	goto	l712
 14696  004EC8                     l12430:
 14697                           
 14698                           ;fat_filelib.c: 1226: else
 14699                           ;fat_filelib.c: 1227: res = 0;
 14700  004EC8  0E00               	movlw	0
 14701  004ECA  6E0C               	movwf	fl_feof@res+1,c
 14702  004ECC  6E0B               	movwf	fl_feof@res,c
 14703  004ECE                     l712:
 14704                           
 14705                           ;fat_filelib.c: 1231: return res;
 14706  004ECE  C00B  F001         	movff	fl_feof@res,?_fl_feof
 14707  004ED2  C00C  F002         	movff	fl_feof@res+1,?_fl_feof+1
 14708  004ED6                     l704:
 14709  004ED6  0012               	return	
 14710  004ED8                     __end_of_fl_feof:
 14711                           	opt stack 0
 14712                           tosu	equ	0xFFF
 14713                           tosh	equ	0xFFE
 14714                           tosl	equ	0xFFD
 14715                           pclath	equ	0xFFA
 14716                           tblptru	equ	0xFF8
 14717                           tblptrh	equ	0xFF7
 14718                           tblptrl	equ	0xFF6
 14719                           tablat	equ	0xFF5
 14720                           prodh	equ	0xFF4
 14721                           prodl	equ	0xFF3
 14722                           indf0	equ	0xFEF
 14723                           postinc0	equ	0xFEE
 14724                           fsr0h	equ	0xFEA
 14725                           fsr0l	equ	0xFE9
 14726                           wreg	equ	0xFE8
 14727                           indf1	equ	0xFE7
 14728                           postinc1	equ	0xFE6
 14729                           postdec1	equ	0xFE5
 14730                           fsr1h	equ	0xFE2
 14731                           fsr1l	equ	0xFE1
 14732                           indf2	equ	0xFDF
 14733                           postinc2	equ	0xFDE
 14734                           postdec2	equ	0xFDD
 14735                           fsr2h	equ	0xFDA
 14736                           fsr2l	equ	0xFD9
 14737                           status	equ	0xFD8
 14738                           
 14739 ;; *************** function _Draw_Line *****************
 14740 ;; Defined at:
 14741 ;;		line 274 in file "main.c"
 14742 ;; Parameters:    Size  Location     Type
 14743 ;;  line            1    wreg     unsigned char 
 14744 ;;  length          1    2[COMRAM] unsigned char 
 14745 ;; Auto vars:     Size  Location     Type
 14746 ;;  line            1    6[COMRAM] unsigned char 
 14747 ;; Return value:  Size  Location     Type
 14748 ;;		None               void
 14749 ;; Registers used:
 14750 ;;		wreg, status,2, status,0, cstack
 14751 ;; Tracked objects:
 14752 ;;		On entry : 0/0
 14753 ;;		On exit  : 0/0
 14754 ;;		Unchanged: 0/0
 14755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14756 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14758 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14759 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14760 ;;Total ram usage:        5 bytes
 14761 ;; Hardware stack levels used:    1
 14762 ;; Hardware stack levels required when called:    2
 14763 ;; This function calls:
 14764 ;;		_Write
 14765 ;; This function is called by:
 14766 ;;		_File_read
 14767 ;;		_File_read_
 14768 ;; This function uses a non-reentrant model
 14769 ;;
 14770                           
 14771                           	psect	text35
 14772  004B9C                     __ptext35:
 14773                           	opt stack 0
 14774  004B9C                     _Draw_Line:
 14775                           	opt stack 27
 14776                           
 14777                           ;incstack = 0
 14778                           ;Draw_Line@line stored from wreg
 14779  004B9C  6E07               	movwf	Draw_Line@line,c
 14780                           
 14781                           ;main.c: 276: switch(line)
 14782  004B9E  D030               	goto	l12626
 14783  004BA0                     l12608:
 14784  004BA0  0101               	movlb	1	; () banked
 14785  004BA2  6B9C               	clrf	(_i+1)& (0+255),b
 14786  004BA4  6B9B               	clrf	_i& (0+255),b
 14787  004BA6  D006               	goto	l12614
 14788  004BA8                     l12610:
 14789                           
 14790                           ; BSR set to: 1
 14791                           ;main.c: 279: Write('-');
 14792  004BA8  0E2D               	movlw	45
 14793  004BAA  EC05  F020         	call	_Write
 14794  004BAE  0101               	movlb	1	; () banked
 14795  004BB0  4B9B               	infsnz	_i& (0+255),f,b
 14796  004BB2  2B9C               	incf	(_i+1)& (0+255),f,b
 14797  004BB4                     l12614:
 14798                           
 14799                           ; BSR set to: 1
 14800  004BB4  5003               	movf	Draw_Line@length,w,c
 14801  004BB6  6E04               	movwf	??_Draw_Line& (0+255),c
 14802  004BB8  6A05               	clrf	(??_Draw_Line+1)& (0+255),c
 14803  004BBA  0101               	movlb	1	; () banked
 14804  004BBC  519C               	movf	(_i+1)& (0+255),w,b
 14805  004BBE  0A80               	xorlw	128
 14806  004BC0  6E06               	movwf	(??_Draw_Line+2)& (0+255),c
 14807  004BC2  5004               	movf	??_Draw_Line,w,c
 14808  004BC4  5D9B               	subwf	_i& (0+255),w,b
 14809  004BC6  5005               	movf	??_Draw_Line+1,w,c
 14810  004BC8  0A80               	xorlw	128
 14811  004BCA  5806               	subwfb	(??_Draw_Line+2)& (0+255),w,c
 14812  004BCC  E21D               	bc	l12628
 14813  004BCE  D7EC               	goto	l12610
 14814  004BD0                     l12616:
 14815  004BD0  0101               	movlb	1	; () banked
 14816  004BD2  6B9C               	clrf	(_i+1)& (0+255),b
 14817  004BD4  6B9B               	clrf	_i& (0+255),b
 14818  004BD6  D006               	goto	l12622
 14819  004BD8                     l12618:
 14820                           
 14821                           ; BSR set to: 1
 14822                           ;main.c: 282: Write('_');
 14823  004BD8  0E5F               	movlw	95
 14824  004BDA  EC05  F020         	call	_Write
 14825  004BDE  0101               	movlb	1	; () banked
 14826  004BE0  4B9B               	infsnz	_i& (0+255),f,b
 14827  004BE2  2B9C               	incf	(_i+1)& (0+255),f,b
 14828  004BE4                     l12622:
 14829                           
 14830                           ; BSR set to: 1
 14831  004BE4  5003               	movf	Draw_Line@length,w,c
 14832  004BE6  6E04               	movwf	??_Draw_Line& (0+255),c
 14833  004BE8  6A05               	clrf	(??_Draw_Line+1)& (0+255),c
 14834  004BEA  0101               	movlb	1	; () banked
 14835  004BEC  519C               	movf	(_i+1)& (0+255),w,b
 14836  004BEE  0A80               	xorlw	128
 14837  004BF0  6E06               	movwf	(??_Draw_Line+2)& (0+255),c
 14838  004BF2  5004               	movf	??_Draw_Line,w,c
 14839  004BF4  5D9B               	subwf	_i& (0+255),w,b
 14840  004BF6  5005               	movf	??_Draw_Line+1,w,c
 14841  004BF8  0A80               	xorlw	128
 14842  004BFA  5806               	subwfb	(??_Draw_Line+2)& (0+255),w,c
 14843  004BFC  E205               	bc	l12628
 14844  004BFE  D7EC               	goto	l12618
 14845  004C00                     l12626:
 14846  004C00  5007               	movf	Draw_Line@line,w,c
 14847                           
 14848                           ; Switch size 1, requested type "speed"
 14849                           ; Number of cases is 1, Range of values is 98 to 98
 14850                           ; switch strategies available:
 14851                           ; Name         Instructions Cycles
 14852                           ; simple_byte            4     3 (average)
 14853                           ;	Chosen strategy is simple_byte
 14854  004C02  0A62               	xorlw	98	; case 98
 14855  004C04  E0CD               	bz	l12608
 14856  004C06  D7E4               	goto	l12616
 14857  004C08                     l12628:
 14858                           
 14859                           ;main.c: 285: Write('\r');
 14860  004C08  0E0D               	movlw	13
 14861  004C0A  EF05  F020         	goto	_Write
 14862  004C0E                     __end_of_Draw_Line:
 14863                           	opt stack 0
 14864                           tosu	equ	0xFFF
 14865                           tosh	equ	0xFFE
 14866                           tosl	equ	0xFFD
 14867                           pclath	equ	0xFFA
 14868                           tblptru	equ	0xFF8
 14869                           tblptrh	equ	0xFF7
 14870                           tblptrl	equ	0xFF6
 14871                           tablat	equ	0xFF5
 14872                           prodh	equ	0xFF4
 14873                           prodl	equ	0xFF3
 14874                           indf0	equ	0xFEF
 14875                           postinc0	equ	0xFEE
 14876                           fsr0h	equ	0xFEA
 14877                           fsr0l	equ	0xFE9
 14878                           wreg	equ	0xFE8
 14879                           indf1	equ	0xFE7
 14880                           postinc1	equ	0xFE6
 14881                           postdec1	equ	0xFE5
 14882                           fsr1h	equ	0xFE2
 14883                           fsr1l	equ	0xFE1
 14884                           indf2	equ	0xFDF
 14885                           postinc2	equ	0xFDE
 14886                           postdec2	equ	0xFDD
 14887                           fsr2h	equ	0xFDA
 14888                           fsr2l	equ	0xFD9
 14889                           status	equ	0xFD8
 14890                           
 14891 ;; *************** function _File_delete *****************
 14892 ;; Defined at:
 14893 ;;		line 685 in file "main.c"
 14894 ;; Parameters:    Size  Location     Type
 14895 ;;		None
 14896 ;; Auto vars:     Size  Location     Type
 14897 ;;		None
 14898 ;; Return value:  Size  Location     Type
 14899 ;;		None               void
 14900 ;; Registers used:
 14901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14902 ;; Tracked objects:
 14903 ;;		On entry : 0/0
 14904 ;;		On exit  : 0/0
 14905 ;;		Unchanged: 0/0
 14906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14911 ;;Total ram usage:        0 bytes
 14912 ;; Hardware stack levels used:    1
 14913 ;; Hardware stack levels required when called:   12
 14914 ;; This function calls:
 14915 ;;		_Clr_str
 14916 ;;		_Read_str
 14917 ;;		_Switch
 14918 ;;		_Write_str
 14919 ;;		_fl_remove
 14920 ;; This function is called by:
 14921 ;;		_main
 14922 ;; This function uses a non-reentrant model
 14923 ;;
 14924                           
 14925                           	psect	text36
 14926  004FD2                     __ptext36:
 14927                           	opt stack 0
 14928  004FD2                     _File_delete:
 14929                           	opt stack 18
 14930                           
 14931                           ;main.c: 687: {
 14932                           ;main.c: 688: Write_str("\n\rEnter the file Name/path? 5 characters\n\r");
 14933                           
 14934                           ;incstack = 0
 14935  004FD2  0EFC               	movlw	high STR_47
 14936  004FD4  6E07               	movwf	Write_str@str+1,c
 14937  004FD6  0E10               	movlw	low STR_47
 14938  004FD8  6E06               	movwf	Write_str@str,c
 14939  004FDA  EC3C  F01F         	call	_Write_str	;wreg free
 14940                           
 14941                           ;main.c: 689: Clr_str(string);
 14942  004FDE  0E01               	movlw	high _string
 14943  004FE0  6E02               	movwf	Clr_str@buffer+1,c
 14944  004FE2  0101               	movlb	1	; () banked
 14945  004FE4  0EAF               	movlw	low _string
 14946  004FE6  6E01               	movwf	Clr_str@buffer,c
 14947  004FE8  EC95  F01F         	call	_Clr_str	;wreg free
 14948                           
 14949                           ;main.c: 690: Clr_str(m);
 14950  004FEC  0E02               	movlw	high _m
 14951  004FEE  6E02               	movwf	Clr_str@buffer+1,c
 14952  004FF0  0102               	movlb	2	; () banked
 14953  004FF2  0E89               	movlw	low _m
 14954  004FF4  6E01               	movwf	Clr_str@buffer,c
 14955  004FF6  EC95  F01F         	call	_Clr_str	;wreg free
 14956                           
 14957                           ;main.c: 691: Read_str(string);
 14958  004FFA  0E01               	movlw	high _string
 14959  004FFC  6E03               	movwf	Read_str@buffer+1,c
 14960  004FFE  0101               	movlb	1	; () banked
 14961  005000  0EAF               	movlw	low _string
 14962  005002  6E02               	movwf	Read_str@buffer,c
 14963  005004  EC22  F021         	call	_Read_str	;wreg free
 14964                           
 14965                           ;main.c: 692: Switch('r');
 14966  005008  0E72               	movlw	114
 14967  00500A  EC13  F030         	call	_Switch
 14968                           
 14969                           ;main.c: 693: if (fl_remove(m) < 0)
 14970  00500E  0E02               	movlw	high _m
 14971  005010  0101               	movlb	1	; () banked
 14972  005012  6F84               	movwf	(fl_remove@filename+1)& (0+255),b
 14973  005014  0E89               	movlw	low _m
 14974  005016  6F83               	movwf	fl_remove@filename& (0+255),b
 14975  005018  ECA5  F02C         	call	_fl_remove	;wreg free
 14976  00501C  0101               	movlb	1	; () banked
 14977  00501E  5184               	movf	(?_fl_remove+1)& (0+255),w,b
 14978  005020  0A80               	xorlw	128
 14979  005022  6EF3               	movwf	prodl,c
 14980  005024  0E80               	movlw	128
 14981  005026  5CF3               	subwf	prodl,w,c
 14982  005028  0E00               	movlw	0
 14983  00502A  B4D8               	btfsc	status,2,c
 14984  00502C  0101               	movlb	1	; () banked
 14985  00502E  5D83               	subwf	?_fl_remove& (0+255),w,b
 14986  005030  E20A               	bc	l13152
 14987                           
 14988                           ; BSR set to: 1
 14989                           ;main.c: 694: {
 14990                           ;main.c: 695: Write_str("\n\rERROR: Delete file failed");
 14991  005032  0EFD               	movlw	high STR_48
 14992  005034  6E07               	movwf	Write_str@str+1,c
 14993  005036  0ECB               	movlw	low STR_48
 14994  005038  6E06               	movwf	Write_str@str,c
 14995  00503A  EC3C  F01F         	call	_Write_str	;wreg free
 14996                           
 14997                           ;main.c: 696: flag = 1;
 14998  00503E  0E01               	movlw	1
 14999  005040  0101               	movlb	1	; () banked
 15000  005042  6FA9               	movwf	_flag& (0+255),b
 15001                           
 15002                           ;main.c: 697: }
 15003  005044  D006               	goto	l1778
 15004  005046                     l13152:
 15005                           
 15006                           ; BSR set to: 1
 15007                           ;main.c: 698: else
 15008                           ;main.c: 699: {
 15009                           ;main.c: 700: Write_str("\n\rDelete file was successful..!\n");
 15010  005046  0EFC               	movlw	high STR_49
 15011  005048  6E07               	movwf	Write_str@str+1,c
 15012  00504A  0EF3               	movlw	low STR_49
 15013  00504C  6E06               	movwf	Write_str@str,c
 15014  00504E  EC3C  F01F         	call	_Write_str	;wreg free
 15015  005052                     l1778:
 15016  005052  0012               	return	
 15017  005054                     __end_of_File_delete:
 15018                           	opt stack 0
 15019                           tosu	equ	0xFFF
 15020                           tosh	equ	0xFFE
 15021                           tosl	equ	0xFFD
 15022                           pclath	equ	0xFFA
 15023                           tblptru	equ	0xFF8
 15024                           tblptrh	equ	0xFF7
 15025                           tblptrl	equ	0xFF6
 15026                           tablat	equ	0xFF5
 15027                           prodh	equ	0xFF4
 15028                           prodl	equ	0xFF3
 15029                           indf0	equ	0xFEF
 15030                           postinc0	equ	0xFEE
 15031                           fsr0h	equ	0xFEA
 15032                           fsr0l	equ	0xFE9
 15033                           wreg	equ	0xFE8
 15034                           indf1	equ	0xFE7
 15035                           postinc1	equ	0xFE6
 15036                           postdec1	equ	0xFE5
 15037                           fsr1h	equ	0xFE2
 15038                           fsr1l	equ	0xFE1
 15039                           indf2	equ	0xFDF
 15040                           postinc2	equ	0xFDE
 15041                           postdec2	equ	0xFDD
 15042                           fsr2h	equ	0xFDA
 15043                           fsr2l	equ	0xFD9
 15044                           status	equ	0xFD8
 15045                           
 15046 ;; *************** function _fl_remove *****************
 15047 ;; Defined at:
 15048 ;;		line 1415 in file "fat_filelib.c"
 15049 ;; Parameters:    Size  Location     Type
 15050 ;;  filename        2  131[BANK1 ] PTR const unsigned char 
 15051 ;;		 -> m(30), 
 15052 ;; Auto vars:     Size  Location     Type
 15053 ;;  file            2  135[BANK1 ] PTR struct sFL_FILE
 15054 ;;		 -> RAM(3967), NULL(0), 
 15055 ;;  res             2  133[BANK1 ] int 
 15056 ;; Return value:  Size  Location     Type
 15057 ;;                  2  131[BANK1 ] int 
 15058 ;; Registers used:
 15059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15060 ;; Tracked objects:
 15061 ;;		On entry : 0/0
 15062 ;;		On exit  : 0/0
 15063 ;;		Unchanged: 0/0
 15064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15065 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15066 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15068 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15069 ;;Total ram usage:        6 bytes
 15070 ;; Hardware stack levels used:    1
 15071 ;; Hardware stack levels required when called:   11
 15072 ;; This function calls:
 15073 ;;		_fatfs_free_cluster_chain
 15074 ;;		_fatfs_mark_file_deleted
 15075 ;;		_fl_fclose
 15076 ;;		_fl_fopen
 15077 ;; This function is called by:
 15078 ;;		_File_write
 15079 ;;		_File_delete
 15080 ;; This function uses a non-reentrant model
 15081 ;;
 15082                           
 15083                           	psect	text37
 15084  00594A                     __ptext37:
 15085                           	opt stack 0
 15086  00594A                     _fl_remove:
 15087                           	opt stack 18
 15088                           
 15089                           ;fat_filelib.c: 1417: FL_FILE* file;
 15090                           ;fat_filelib.c: 1418: int res = -1;
 15091                           
 15092                           ;incstack = 0
 15093  00594A  0101               	movlb	1	; () banked
 15094  00594C  6985               	setf	fl_remove@res& (0+255),b
 15095  00594E  6986               	setf	(fl_remove@res+1)& (0+255),b
 15096                           
 15097                           ; BSR set to: 1
 15098                           ;fat_filelib.c: 1423: file = fl_fopen((char*)filename, "r");
 15099                           
 15100                           ; BSR set to: 1
 15101                           
 15102                           ; BSR set to: 1
 15103                           
 15104                           ; BSR set to: 1
 15105                           
 15106                           ; BSR set to: 1
 15107                           
 15108                           ;fat_filelib.c: 1420: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
 15109  005950  C184  F0FD         	movff	fl_remove@filename+1,fl_fopen@path+1
 15110  005954  C183  F0FC         	movff	fl_remove@filename,fl_fopen@path
 15111  005958  0EFF               	movlw	high STR_10
 15112  00595A  0100               	movlb	0	; () banked
 15113  00595C  6FFF               	movwf	(fl_fopen@mode+1)& (0+255),b
 15114  00595E  0EFC               	movlw	low STR_10
 15115  005960  6FFE               	movwf	fl_fopen@mode& (0+255),b
 15116  005962  ECAA  F036         	call	_fl_fopen	;wreg free
 15117  005966  C0FC  F187         	movff	?_fl_fopen,fl_remove@file
 15118  00596A  C0FD  F188         	movff	?_fl_fopen+1,fl_remove@file+1
 15119                           
 15120                           ; BSR set to: 0
 15121                           ;fat_filelib.c: 1424: if (file)
 15122  00596E  0101               	movlb	1	; () banked
 15123  005970  5188               	movf	(fl_remove@file+1)& (0+255),w,b
 15124  005972  1187               	iorwf	fl_remove@file& (0+255),w,b
 15125  005974  E045               	bz	l763
 15126                           
 15127                           ; BSR set to: 1
 15128                           ;fat_filelib.c: 1425: {
 15129                           ;fat_filelib.c: 1427: if (fatfs_free_cluster_chain(&_fs, file->startcluster))
 15130  005976  0E09               	movlw	high __fs
 15131  005978  0100               	movlb	0	; () banked
 15132  00597A  6F81               	movwf	(fatfs_free_cluster_chain@fs+1)& (0+255),b
 15133  00597C  0E78               	movlw	low __fs
 15134  00597E  6F80               	movwf	fatfs_free_cluster_chain@fs& (0+255),b
 15135  005980  EE20 F004          	lfsr	2,4
 15136  005984  0101               	movlb	1	; () banked
 15137  005986  5187               	movf	fl_remove@file& (0+255),w,b
 15138  005988  26D9               	addwf	fsr2l,f,c
 15139  00598A  5188               	movf	(fl_remove@file+1)& (0+255),w,b
 15140  00598C  22DA               	addwfc	fsr2h,f,c
 15141  00598E  CFDE F082          	movff	postinc2,fatfs_free_cluster_chain@start_cluster
 15142  005992  CFDE F083          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+1
 15143  005996  CFDE F084          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+2
 15144  00599A  0100               	movlb	0	; () banked
 15145  00599C  CFDE F085          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+3
 15146  0059A0  ECF6  F02A         	call	_fatfs_free_cluster_chain	;wreg free
 15147  0059A4  0100               	movlb	0	; () banked
 15148  0059A6  5181               	movf	(?_fatfs_free_cluster_chain+1)& (0+255),w,b
 15149  0059A8  1180               	iorwf	?_fatfs_free_cluster_chain& (0+255),w,b
 15150  0059AA  E02A               	bz	l763
 15151                           
 15152                           ; BSR set to: 0
 15153                           ;fat_filelib.c: 1428: {
 15154                           ;fat_filelib.c: 1430: if (fatfs_mark_file_deleted(&_fs, file->parentcluster, (char*)file
      +                          ->shortfilename))
 15155  0059AC  0E09               	movlw	high __fs
 15156  0059AE  6FAD               	movwf	(fatfs_mark_file_deleted@fs+1)& (0+255),b
 15157  0059B0  0E78               	movlw	low __fs
 15158  0059B2  6FAC               	movwf	fatfs_mark_file_deleted@fs& (0+255),b
 15159  0059B4  C187  FFD9         	movff	fl_remove@file,fsr2l
 15160  0059B8  C188  FFDA         	movff	fl_remove@file+1,fsr2h
 15161  0059BC  CFDE F0AE          	movff	postinc2,fatfs_mark_file_deleted@Cluster
 15162  0059C0  CFDE F0AF          	movff	postinc2,fatfs_mark_file_deleted@Cluster+1
 15163  0059C4  CFDE F0B0          	movff	postinc2,fatfs_mark_file_deleted@Cluster+2
 15164  0059C8  CFDE F0B1          	movff	postinc2,fatfs_mark_file_deleted@Cluster+3
 15165  0059CC  0E26               	movlw	38
 15166  0059CE  0101               	movlb	1	; () banked
 15167  0059D0  2587               	addwf	fl_remove@file& (0+255),w,b
 15168  0059D2  0100               	movlb	0	; () banked
 15169  0059D4  6FB2               	movwf	fatfs_mark_file_deleted@shortname& (0+255),b
 15170  0059D6  0E00               	movlw	0
 15171  0059D8  0101               	movlb	1	; () banked
 15172  0059DA  2188               	addwfc	(fl_remove@file+1)& (0+255),w,b
 15173  0059DC  0100               	movlb	0	; () banked
 15174  0059DE  6FB3               	movwf	(fatfs_mark_file_deleted@shortname+1)& (0+255),b
 15175  0059E0  EC94  F03B         	call	_fatfs_mark_file_deleted	;wreg free
 15176  0059E4  0100               	movlb	0	; () banked
 15177  0059E6  51AD               	movf	(?_fatfs_mark_file_deleted+1)& (0+255),w,b
 15178  0059E8  11AC               	iorwf	?_fatfs_mark_file_deleted& (0+255),w,b
 15179  0059EA  E00A               	bz	l763
 15180                           
 15181                           ; BSR set to: 0
 15182                           ;fat_filelib.c: 1431: {
 15183                           ;fat_filelib.c: 1434: fl_fclose(file);
 15184  0059EC  C188  F0DF         	movff	fl_remove@file+1,fl_fclose@f+1
 15185  0059F0  C187  F0DE         	movff	fl_remove@file,fl_fclose@f
 15186  0059F4  EC99  F031         	call	_fl_fclose	;wreg free
 15187                           
 15188                           ;fat_filelib.c: 1436: res = 0;
 15189  0059F8  0E00               	movlw	0
 15190  0059FA  0101               	movlb	1	; () banked
 15191  0059FC  6F86               	movwf	(fl_remove@res+1)& (0+255),b
 15192  0059FE  6F85               	movwf	fl_remove@res& (0+255),b
 15193  005A00                     l763:
 15194                           
 15195                           ;fat_filelib.c: 1443: return res;
 15196  005A00  C185  F183         	movff	fl_remove@res,?_fl_remove
 15197  005A04  C186  F184         	movff	fl_remove@res+1,?_fl_remove+1
 15198  005A08  0012               	return	
 15199  005A0A                     __end_of_fl_remove:
 15200                           	opt stack 0
 15201                           tosu	equ	0xFFF
 15202                           tosh	equ	0xFFE
 15203                           tosl	equ	0xFFD
 15204                           pclath	equ	0xFFA
 15205                           tblptru	equ	0xFF8
 15206                           tblptrh	equ	0xFF7
 15207                           tblptrl	equ	0xFF6
 15208                           tablat	equ	0xFF5
 15209                           prodh	equ	0xFF4
 15210                           prodl	equ	0xFF3
 15211                           indf0	equ	0xFEF
 15212                           postinc0	equ	0xFEE
 15213                           fsr0h	equ	0xFEA
 15214                           fsr0l	equ	0xFE9
 15215                           wreg	equ	0xFE8
 15216                           indf1	equ	0xFE7
 15217                           postinc1	equ	0xFE6
 15218                           postdec1	equ	0xFE5
 15219                           fsr1h	equ	0xFE2
 15220                           fsr1l	equ	0xFE1
 15221                           indf2	equ	0xFDF
 15222                           postinc2	equ	0xFDE
 15223                           postdec2	equ	0xFDD
 15224                           fsr2h	equ	0xFDA
 15225                           fsr2l	equ	0xFD9
 15226                           status	equ	0xFD8
 15227                           
 15228 ;; *************** function _fatfs_mark_file_deleted *****************
 15229 ;; Defined at:
 15230 ;;		line 685 in file "fat_access.c"
 15231 ;; Parameters:    Size  Location     Type
 15232 ;;  fs              2   44[BANK0 ] PTR struct fatfs
 15233 ;;		 -> _fs(1095), 
 15234 ;;  Cluster         4   46[BANK0 ] unsigned long 
 15235 ;;  shortname       2   50[BANK0 ] PTR unsigned char 
 15236 ;;		 -> RAM(3967), NULL(0), 
 15237 ;; Auto vars:     Size  Location     Type
 15238 ;;  directoryEnt    2   61[BANK0 ] PTR struct fat_dir_entry
 15239 ;;		 -> _fs.currentsector.sector(512), 
 15240 ;;  recordoffset    2   58[BANK0 ] unsigned short 
 15241 ;;  x               2   56[BANK0 ] int 
 15242 ;;  item            1   60[BANK0 ] unsigned char 
 15243 ;; Return value:  Size  Location     Type
 15244 ;;                  2   44[BANK0 ] int 
 15245 ;; Registers used:
 15246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15247 ;; Tracked objects:
 15248 ;;		On entry : 0/0
 15249 ;;		On exit  : 0/0
 15250 ;;		Unchanged: 0/0
 15251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15252 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15253 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15254 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15255 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15256 ;;Total ram usage:       19 bytes
 15257 ;; Hardware stack levels used:    1
 15258 ;; Hardware stack levels required when called:    7
 15259 ;; This function calls:
 15260 ;;		_fatfs_entry_lfn_invalid
 15261 ;;		_fatfs_entry_lfn_text
 15262 ;;		_fatfs_entry_sfn_only
 15263 ;;		_fatfs_sector_reader
 15264 ;;		_media_write
 15265 ;;		_memcpy
 15266 ;;		_strncmp
 15267 ;; This function is called by:
 15268 ;;		_fl_remove
 15269 ;; This function uses a non-reentrant model
 15270 ;;
 15271                           
 15272                           	psect	text38
 15273  007728                     __ptext38:
 15274                           	opt stack 0
 15275  007728                     _fatfs_mark_file_deleted:
 15276                           	opt stack 21
 15277                           
 15278                           ;fat_access.c: 687: uint8 item=0;
 15279                           
 15280                           ;incstack = 0
 15281  007728  0100               	movlb	0	; () banked
 15282  00772A  6BBC               	clrf	fatfs_mark_file_deleted@item& (0+255),b
 15283                           
 15284                           ;fat_access.c: 688: uint16 recordoffset = 0;
 15285  00772C  6BBB               	clrf	(fatfs_mark_file_deleted@recordoffset+1)& (0+255),b
 15286  00772E  6BBA               	clrf	fatfs_mark_file_deleted@recordoffset& (0+255),b
 15287                           
 15288                           ;fat_access.c: 689: int x=0;
 15289  007730  6BB9               	clrf	(fatfs_mark_file_deleted@x+1)& (0+255),b
 15290  007732  6BB8               	clrf	fatfs_mark_file_deleted@x& (0+255),b
 15291                           
 15292                           ; BSR set to: 0
 15293                           ;fat_access.c: 690: struct fat_dir_entry *directoryEntry;
 15294                           ;fat_access.c: 693: if (!fs->disk_io.write_media)
 15295  007734  EE20 F02B          	lfsr	2,43
 15296  007738  51AC               	movf	fatfs_mark_file_deleted@fs& (0+255),w,b
 15297  00773A  26D9               	addwf	fsr2l,f,c
 15298  00773C  51AD               	movf	(fatfs_mark_file_deleted@fs+1)& (0+255),w,b
 15299  00773E  22DA               	addwfc	fsr2h,f,c
 15300  007740  50DE               	movf	postinc2,w,c
 15301  007742  10DD               	iorwf	postdec2,w,c
 15302  007744  E101 D0CF          	bz	l11702
 15303  007748                     l11666:
 15304                           
 15305                           ; BSR set to: 0
 15306                           ;fat_access.c: 698: {
 15307                           ;fat_access.c: 700: if (fatfs_sector_reader(fs, Cluster, x++, 0))
 15308  007748  C0AD  F081         	movff	fatfs_mark_file_deleted@fs+1,fatfs_sector_reader@fs+1
 15309  00774C  C0AC  F080         	movff	fatfs_mark_file_deleted@fs,fatfs_sector_reader@fs
 15310  007750  C0AE  F082         	movff	fatfs_mark_file_deleted@Cluster,fatfs_sector_reader@start_cluster
 15311  007754  C0AF  F083         	movff	fatfs_mark_file_deleted@Cluster+1,fatfs_sector_reader@start_cluster+1
 15312  007758  C0B0  F084         	movff	fatfs_mark_file_deleted@Cluster+2,fatfs_sector_reader@start_cluster+2
 15313  00775C  C0B1  F085         	movff	fatfs_mark_file_deleted@Cluster+3,fatfs_sector_reader@start_cluster+3
 15314  007760  0100               	movlb	0	; () banked
 15315  007762  51B8               	movf	fatfs_mark_file_deleted@x& (0+255),w,b
 15316  007764  6FB4               	movwf	??_fatfs_mark_file_deleted& (0+255),b
 15317  007766  51B9               	movf	(fatfs_mark_file_deleted@x+1)& (0+255),w,b
 15318  007768  6FB5               	movwf	(??_fatfs_mark_file_deleted+1)& (0+255),b
 15319  00776A  4BB8               	infsnz	fatfs_mark_file_deleted@x& (0+255),f,b
 15320  00776C  2BB9               	incf	(fatfs_mark_file_deleted@x+1)& (0+255),f,b
 15321  00776E  C0B4  F086         	movff	??_fatfs_mark_file_deleted,fatfs_sector_reader@offset
 15322  007772  C0B5  F087         	movff	??_fatfs_mark_file_deleted+1,fatfs_sector_reader@offset+1
 15323  007776  0E00               	movlw	0
 15324  007778  BF87               	btfsc	(fatfs_sector_reader@offset+1)& (0+255),7,b
 15325  00777A  0EFF               	movlw	-1
 15326  00777C  6F88               	movwf	(fatfs_sector_reader@offset+2)& (0+255),b
 15327  00777E  6F89               	movwf	(fatfs_sector_reader@offset+3)& (0+255),b
 15328  007780  0E00               	movlw	0
 15329  007782  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
 15330  007784  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
 15331  007786  ECD5  F052         	call	_fatfs_sector_reader	;wreg free
 15332  00778A  0100               	movlb	0	; () banked
 15333  00778C  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
 15334  00778E  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
 15335  007790  E101 D0A9          	bz	l11702
 15336                           
 15337                           ; BSR set to: 0
 15338                           ;fat_access.c: 701: {
 15339                           ;fat_access.c: 703: for (item = 0; item < (512 / 32); item++)
 15340  007794  6BBC               	clrf	fatfs_mark_file_deleted@item& (0+255),b
 15341                           
 15342                           ; BSR set to: 0
 15343  007796  0E0F               	movlw	15
 15344  007798  65BC               	cpfsgt	fatfs_mark_file_deleted@item& (0+255),b
 15345  00779A  D001               	goto	l11674
 15346  00779C  D7D5               	goto	l11666
 15347  00779E                     l11674:
 15348                           
 15349                           ; BSR set to: 0
 15350                           ;fat_access.c: 704: {
 15351                           ;fat_access.c: 706: recordoffset = 32 * item;
 15352  00779E  0100               	movlb	0	; () banked
 15353  0077A0  51BC               	movf	fatfs_mark_file_deleted@item& (0+255),w,b
 15354  0077A2  0D20               	mullw	32
 15355  0077A4  CFF3 F0BA          	movff	prodl,fatfs_mark_file_deleted@recordoffset
 15356  0077A8  CFF4 F0BB          	movff	prodh,fatfs_mark_file_deleted@recordoffset+1
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;fat_access.c: 709: directoryEntry = (struct fat_dir_entry*)(fs->currentsector.sector+re
      +                          cordoffset);
 15360  0077AC  C0AC  F0B4         	movff	fatfs_mark_file_deleted@fs,??_fatfs_mark_file_deleted
 15361  0077B0  C0AD  F0B5         	movff	fatfs_mark_file_deleted@fs+1,??_fatfs_mark_file_deleted+1
 15362  0077B4  51BA               	movf	fatfs_mark_file_deleted@recordoffset& (0+255),w,b
 15363  0077B6  27B4               	addwf	??_fatfs_mark_file_deleted& (0+255),f,b
 15364  0077B8  51BB               	movf	(fatfs_mark_file_deleted@recordoffset+1)& (0+255),w,b
 15365  0077BA  23B5               	addwfc	(??_fatfs_mark_file_deleted+1)& (0+255),f,b
 15366  0077BC  0E31               	movlw	49
 15367  0077BE  25B4               	addwf	??_fatfs_mark_file_deleted& (0+255),w,b
 15368  0077C0  6FBD               	movwf	fatfs_mark_file_deleted@directoryEntry& (0+255),b
 15369  0077C2  0E00               	movlw	0
 15370  0077C4  21B5               	addwfc	(??_fatfs_mark_file_deleted+1)& (0+255),w,b
 15371  0077C6  6FBE               	movwf	(fatfs_mark_file_deleted@directoryEntry+1)& (0+255),b
 15372                           
 15373                           ; BSR set to: 0
 15374                           ;fat_access.c: 713: if (fatfs_entry_lfn_text(directoryEntry) )
 15375  0077C8  C0BE  F002         	movff	fatfs_mark_file_deleted@directoryEntry+1,fatfs_entry_lfn_text@entry+1
 15376  0077CC  C0BD  F001         	movff	fatfs_mark_file_deleted@directoryEntry,fatfs_entry_lfn_text@entry
 15377  0077D0  ECF0  F01F         	call	_fatfs_entry_lfn_text	;wreg free
 15378  0077D4  5002               	movf	?_fatfs_entry_lfn_text+1,w,c
 15379  0077D6  1001               	iorwf	?_fatfs_entry_lfn_text,w,c
 15380  0077D8  E001 D07F          	bnz	l11698
 15381                           
 15382                           ;fat_access.c: 717: else if (fatfs_entry_lfn_invalid(directoryEntry) )
 15383                           
 15384                           ;fat_access.c: 714: ;
 15385  0077DC  C0BE  F002         	movff	fatfs_mark_file_deleted@directoryEntry+1,fatfs_entry_lfn_invalid@entry+1
 15386  0077E0  0100               	movlb	0	; () banked
 15387  0077E2  C0BD  F001         	movff	fatfs_mark_file_deleted@directoryEntry,fatfs_entry_lfn_invalid@entry
 15388  0077E6  EC9A  F022         	call	_fatfs_entry_lfn_invalid	;wreg free
 15389  0077EA  5002               	movf	?_fatfs_entry_lfn_invalid+1,w,c
 15390  0077EC  1001               	iorwf	?_fatfs_entry_lfn_invalid,w,c
 15391  0077EE  E175               	bnz	l11698
 15392                           
 15393                           ;fat_access.c: 721: else
 15394                           ;fat_access.c: 723: if (fatfs_entry_sfn_only(directoryEntry) )
 15395                           
 15396                           ;fat_access.c: 718: ;
 15397  0077F0  C0BE  F002         	movff	fatfs_mark_file_deleted@directoryEntry+1,fatfs_entry_sfn_only@entry+1
 15398  0077F4  0100               	movlb	0	; () banked
 15399  0077F6  C0BD  F001         	movff	fatfs_mark_file_deleted@directoryEntry,fatfs_entry_sfn_only@entry
 15400  0077FA  ECC6  F024         	call	_fatfs_entry_sfn_only	;wreg free
 15401  0077FE  5002               	movf	?_fatfs_entry_sfn_only+1,w,c
 15402  007800  1001               	iorwf	?_fatfs_entry_sfn_only,w,c
 15403  007802  E06B               	bz	l11698
 15404                           
 15405                           ;fat_access.c: 724: {
 15406                           ;fat_access.c: 725: if (strncmp((const char *)directoryEntry->Name, shortname, 11)==0)
 15407  007804  C0BE  F002         	movff	fatfs_mark_file_deleted@directoryEntry+1,strncmp@s1+1
 15408  007808  C0BD  F001         	movff	fatfs_mark_file_deleted@directoryEntry,strncmp@s1
 15409  00780C  C0B3  F004         	movff	fatfs_mark_file_deleted@shortname+1,strncmp@s2+1
 15410  007810  0100               	movlb	0	; () banked
 15411  007812  C0B2  F003         	movff	fatfs_mark_file_deleted@shortname,strncmp@s2
 15412  007816  6A06               	clrf	strncmp@len+1,c
 15413  007818  0E0B               	movlw	11
 15414  00781A  6E05               	movwf	strncmp@len,c
 15415  00781C  EC07  F026         	call	_strncmp	;wreg free
 15416  007820  5002               	movf	?_strncmp+1,w,c
 15417  007822  1001               	iorwf	?_strncmp,w,c
 15418  007824  E15A               	bnz	l11698
 15419                           
 15420                           ;fat_access.c: 726: {
 15421                           ;fat_access.c: 728: directoryEntry->Name[0] = 0xE5;
 15422  007826  C0BD  FFD9         	movff	fatfs_mark_file_deleted@directoryEntry,fsr2l
 15423  00782A  C0BE  FFDA         	movff	fatfs_mark_file_deleted@directoryEntry+1,fsr2h
 15424  00782E  0EE5               	movlw	229
 15425  007830  6EDF               	movwf	indf2,c
 15426                           
 15427                           ;fat_access.c: 736: memcpy((uint8*)(fs->currentsector.sector+recordoffset), (uint8*)dire
      +                          ctoryEntry, sizeof(struct fat_dir_entry));
 15428  007832  C0AC  F0B4         	movff	fatfs_mark_file_deleted@fs,??_fatfs_mark_file_deleted
 15429  007836  C0AD  F0B5         	movff	fatfs_mark_file_deleted@fs+1,??_fatfs_mark_file_deleted+1
 15430  00783A  0100               	movlb	0	; () banked
 15431  00783C  51BA               	movf	fatfs_mark_file_deleted@recordoffset& (0+255),w,b
 15432  00783E  27B4               	addwf	??_fatfs_mark_file_deleted& (0+255),f,b
 15433  007840  51BB               	movf	(fatfs_mark_file_deleted@recordoffset+1)& (0+255),w,b
 15434  007842  23B5               	addwfc	(??_fatfs_mark_file_deleted+1)& (0+255),f,b
 15435  007844  0E31               	movlw	49
 15436  007846  25B4               	addwf	??_fatfs_mark_file_deleted& (0+255),w,b
 15437  007848  6E01               	movwf	memcpy@d1,c
 15438  00784A  0E00               	movlw	0
 15439  00784C  21B5               	addwfc	(??_fatfs_mark_file_deleted+1)& (0+255),w,b
 15440  00784E  6E02               	movwf	memcpy@d1+1,c
 15441  007850  0E20               	movlw	32
 15442  007852  6E05               	movwf	memcpy@s1+2,c
 15443  007854  C0BE  F004         	movff	fatfs_mark_file_deleted@directoryEntry+1,memcpy@s1+1
 15444  007858  C0BD  F003         	movff	fatfs_mark_file_deleted@directoryEntry,memcpy@s1
 15445  00785C  6A07               	clrf	memcpy@n+1,c
 15446  00785E  6E06               	movwf	memcpy@n,c
 15447  007860  ECA4  F023         	call	_memcpy	;wreg free
 15448                           
 15449                           ;fat_access.c: 739: return fs->disk_io.write_media(fs->currentsector.address, fs->curren
      +                          tsector.sector, 1);
 15450  007864  EE22 F031          	lfsr	2,561
 15451  007868  0100               	movlb	0	; () banked
 15452  00786A  51AC               	movf	fatfs_mark_file_deleted@fs& (0+255),w,b
 15453  00786C  26D9               	addwf	fsr2l,f,c
 15454  00786E  51AD               	movf	(fatfs_mark_file_deleted@fs+1)& (0+255),w,b
 15455  007870  22DA               	addwfc	fsr2h,f,c
 15456  007872  CFDE F009          	movff	postinc2,media_write@sector
 15457  007876  CFDE F00A          	movff	postinc2,media_write@sector+1
 15458  00787A  CFDE F00B          	movff	postinc2,media_write@sector+2
 15459  00787E  CFDE F00C          	movff	postinc2,media_write@sector+3
 15460  007882  0E31               	movlw	49
 15461  007884  25AC               	addwf	fatfs_mark_file_deleted@fs& (0+255),w,b
 15462  007886  6FB4               	movwf	??_fatfs_mark_file_deleted& (0+255),b
 15463  007888  0E00               	movlw	0
 15464  00788A  21AD               	addwfc	(fatfs_mark_file_deleted@fs+1)& (0+255),w,b
 15465  00788C  6FB5               	movwf	(??_fatfs_mark_file_deleted+1)& (0+255),b
 15466  00788E  0E20               	movlw	32
 15467  007890  6E0F               	movwf	media_write@buffer+2,c
 15468  007892  C0B5  F00E         	movff	??_fatfs_mark_file_deleted+1,media_write@buffer+1
 15469  007896  C0B4  F00D         	movff	??_fatfs_mark_file_deleted,media_write@buffer
 15470  00789A  0E01               	movlw	1
 15471  00789C  6E10               	movwf	media_write@sector_count,c
 15472  00789E  6A11               	clrf	media_write@sector_count+1,c
 15473  0078A0  6A12               	clrf	media_write@sector_count+2,c
 15474  0078A2  6A13               	clrf	media_write@sector_count+3,c
 15475  0078A4  EE20 F02B          	lfsr	2,43
 15476  0078A8  51AC               	movf	fatfs_mark_file_deleted@fs& (0+255),w,b
 15477  0078AA  26D9               	addwf	fsr2l,f,c
 15478  0078AC  51AD               	movf	(fatfs_mark_file_deleted@fs+1)& (0+255),w,b
 15479  0078AE  22DA               	addwfc	fsr2h,f,c
 15480  0078B0  CFDE F0B6          	movff	postinc2,??_fatfs_mark_file_deleted+2
 15481  0078B4  CFDD F0B7          	movff	postdec2,??_fatfs_mark_file_deleted+3
 15482  0078B8  D801               	call	u13728
 15483  0078BA  D00A               	goto	u13729
 15484  0078BC                     u13728:
 15485  0078BC  0005               	push	
 15486  0078BE  6EFA               	movwf	pclath,c
 15487  0078C0  0100               	movlb	0	; () banked
 15488  0078C2  51B6               	movf	(??_fatfs_mark_file_deleted+2)& (0+255),w,b
 15489  0078C4  6EFD               	movwf	tosl,c
 15490  0078C6  51B7               	movf	(??_fatfs_mark_file_deleted+3)& (0+255),w,b
 15491  0078C8  6EFE               	movwf	tosh,c
 15492  0078CA  6AFF               	clrf	tosu,c
 15493  0078CC  50FA               	movf	pclath,w,c
 15494  0078CE  0012               	return		;indir
 15495  0078D0                     u13729:
 15496  0078D0  C009  F0AC         	movff	?_media_write,?_fatfs_mark_file_deleted
 15497  0078D4  C00A  F0AD         	movff	?_media_write+1,?_fatfs_mark_file_deleted+1
 15498  0078D8  D00A               	goto	l196
 15499  0078DA                     l11698:
 15500  0078DA  0100               	movlb	0	; () banked
 15501  0078DC  2BBC               	incf	fatfs_mark_file_deleted@item& (0+255),f,b
 15502                           
 15503                           ; BSR set to: 0
 15504  0078DE  0E0F               	movlw	15
 15505  0078E0  65BC               	cpfsgt	fatfs_mark_file_deleted@item& (0+255),b
 15506  0078E2  D75D               	goto	l11674
 15507  0078E4  D731               	goto	l11666
 15508  0078E6                     l11702:
 15509                           
 15510                           ; BSR set to: 0
 15511                           ;fat_access.c: 746: }
 15512                           ;fat_access.c: 748: return 0;
 15513  0078E6  0E00               	movlw	0
 15514  0078E8  0100               	movlb	0	; () banked
 15515  0078EA  6FAD               	movwf	(?_fatfs_mark_file_deleted+1)& (0+255),b
 15516  0078EC  6FAC               	movwf	?_fatfs_mark_file_deleted& (0+255),b
 15517  0078EE                     l196:
 15518  0078EE  0012               	return	
 15519  0078F0                     __end_of_fatfs_mark_file_deleted:
 15520                           	opt stack 0
 15521                           tosu	equ	0xFFF
 15522                           tosh	equ	0xFFE
 15523                           tosl	equ	0xFFD
 15524                           pclath	equ	0xFFA
 15525                           tblptru	equ	0xFF8
 15526                           tblptrh	equ	0xFF7
 15527                           tblptrl	equ	0xFF6
 15528                           tablat	equ	0xFF5
 15529                           prodh	equ	0xFF4
 15530                           prodl	equ	0xFF3
 15531                           indf0	equ	0xFEF
 15532                           postinc0	equ	0xFEE
 15533                           fsr0h	equ	0xFEA
 15534                           fsr0l	equ	0xFE9
 15535                           wreg	equ	0xFE8
 15536                           indf1	equ	0xFE7
 15537                           postinc1	equ	0xFE6
 15538                           postdec1	equ	0xFE5
 15539                           fsr1h	equ	0xFE2
 15540                           fsr1l	equ	0xFE1
 15541                           indf2	equ	0xFDF
 15542                           postinc2	equ	0xFDE
 15543                           postdec2	equ	0xFDD
 15544                           fsr2h	equ	0xFDA
 15545                           fsr2l	equ	0xFD9
 15546                           status	equ	0xFD8
 15547                           
 15548 ;; *************** function _File_append *****************
 15549 ;; Defined at:
 15550 ;;		line 468 in file "main.c"
 15551 ;; Parameters:    Size  Location     Type
 15552 ;;		None
 15553 ;; Auto vars:     Size  Location     Type
 15554 ;;		None
 15555 ;; Return value:  Size  Location     Type
 15556 ;;		None               void
 15557 ;; Registers used:
 15558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15559 ;; Tracked objects:
 15560 ;;		On entry : 0/0
 15561 ;;		On exit  : 0/0
 15562 ;;		Unchanged: 0/0
 15563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15566 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15567 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15568 ;;Total ram usage:        4 bytes
 15569 ;; Hardware stack levels used:    1
 15570 ;; Hardware stack levels required when called:   11
 15571 ;; This function calls:
 15572 ;;		_Clr_str
 15573 ;;		_ReadUART
 15574 ;;		_Read_str
 15575 ;;		_Switch
 15576 ;;		_Write
 15577 ;;		_Write_str
 15578 ;;		_fl_fclose
 15579 ;;		_fl_fopen
 15580 ;;		_fl_fread
 15581 ;;		_fl_fseek
 15582 ;;		_fl_ftell
 15583 ;;		_fl_fwrite
 15584 ;; This function is called by:
 15585 ;;		_main
 15586 ;; This function uses a non-reentrant model
 15587 ;;
 15588                           
 15589                           	psect	text39
 15590  0082AA                     __ptext39:
 15591                           	opt stack 0
 15592  0082AA                     _File_append:
 15593                           	opt stack 19
 15594                           
 15595                           ;main.c: 470: Write_str("\n\rEnter the file Name? 5 characters\n\r");
 15596                           
 15597                           ;incstack = 0
 15598  0082AA  0EFC               	movlw	high STR_28
 15599  0082AC  6E07               	movwf	Write_str@str+1,c
 15600  0082AE  0E62               	movlw	low STR_28
 15601  0082B0  6E06               	movwf	Write_str@str,c
 15602  0082B2  EC3C  F01F         	call	_Write_str	;wreg free
 15603                           
 15604                           ;main.c: 471: Clr_str(string);
 15605  0082B6  0E01               	movlw	high _string
 15606  0082B8  6E02               	movwf	Clr_str@buffer+1,c
 15607  0082BA  0101               	movlb	1	; () banked
 15608  0082BC  0EAF               	movlw	low _string
 15609  0082BE  6E01               	movwf	Clr_str@buffer,c
 15610  0082C0  EC95  F01F         	call	_Clr_str	;wreg free
 15611                           
 15612                           ;main.c: 472: Read_str(string);
 15613  0082C4  0E01               	movlw	high _string
 15614  0082C6  6E03               	movwf	Read_str@buffer+1,c
 15615  0082C8  0101               	movlb	1	; () banked
 15616  0082CA  0EAF               	movlw	low _string
 15617  0082CC  6E02               	movwf	Read_str@buffer,c
 15618  0082CE  EC22  F021         	call	_Read_str	;wreg free
 15619                           
 15620                           ;main.c: 473: Switch('w');
 15621  0082D2  0E77               	movlw	119
 15622  0082D4  EC13  F030         	call	_Switch
 15623                           
 15624                           ;main.c: 474: file = fl_fopen(s,"a");
 15625  0082D8  0E02               	movlw	high _s
 15626  0082DA  0100               	movlb	0	; () banked
 15627  0082DC  6FFD               	movwf	(fl_fopen@path+1)& (0+255),b
 15628  0082DE  0EA7               	movlw	low _s
 15629  0082E0  6FFC               	movwf	fl_fopen@path& (0+255),b
 15630  0082E2  0EFF               	movlw	high STR_29
 15631  0082E4  6FFF               	movwf	(fl_fopen@mode+1)& (0+255),b
 15632  0082E6  0EF8               	movlw	low STR_29
 15633  0082E8  6FFE               	movwf	fl_fopen@mode& (0+255),b
 15634  0082EA  ECAA  F036         	call	_fl_fopen	;wreg free
 15635  0082EE  C0FC  F197         	movff	?_fl_fopen,_file
 15636  0082F2  C0FD  F198         	movff	?_fl_fopen+1,_file+1
 15637                           
 15638                           ; BSR set to: 0
 15639                           ;main.c: 475: fptr = file;
 15640  0082F6  C198  F19A         	movff	_file+1,_fptr+1
 15641  0082FA  C197  F199         	movff	_file,_fptr
 15642                           
 15643                           ; BSR set to: 1
 15644                           ;main.c: 476: if(file)
 15645  0082FE  0101               	movlb	1	; () banked
 15646  008300  5198               	movf	(_file+1)& (0+255),w,b
 15647  008302  1197               	iorwf	_file& (0+255),w,b
 15648  008304  E101 D0DB          	bz	l13086
 15649                           
 15650                           ; BSR set to: 1
 15651                           ;main.c: 477: {
 15652                           ;main.c: 478: Write_str("\n\rEnter the data to be appended to the file..\n\r");
 15653  008308  0EFB               	movlw	high STR_30
 15654  00830A  6E07               	movwf	Write_str@str+1,c
 15655  00830C  0EB0               	movlw	low STR_30
 15656  00830E  6E06               	movwf	Write_str@str,c
 15657  008310  EC3C  F01F         	call	_Write_str	;wreg free
 15658  008314                     l13028:
 15659                           
 15660                           ;main.c: 480: data = ReadUART();
 15661  008314  EC1E  F01F         	call	_ReadUART	;wreg free
 15662  008318  0101               	movlb	1	; () banked
 15663  00831A  6FF7               	movwf	_data& (0+255),b
 15664                           
 15665                           ; BSR set to: 1
 15666                           ;main.c: 481: if(data == '#')
 15667  00831C  51F7               	movf	_data& (0+255),w,b
 15668  00831E  0A23               	xorlw	35
 15669  008320  E14E               	bnz	l13060
 15670                           
 15671                           ; BSR set to: 1
 15672                           ;main.c: 482: {
 15673                           ;main.c: 483: Write_str("\n\rEnter the line No. to Delete\n\r");
 15674  008322  0EFD               	movlw	high STR_31
 15675  008324  6E07               	movwf	Write_str@str+1,c
 15676  008326  0E14               	movlw	low STR_31
 15677  008328  6E06               	movwf	Write_str@str,c
 15678  00832A  EC3C  F01F         	call	_Write_str	;wreg free
 15679                           
 15680                           ;main.c: 484: z = ReadUART();
 15681  00832E  EC1E  F01F         	call	_ReadUART	;wreg free
 15682  008332  0101               	movlb	1	; () banked
 15683  008334  6FAE               	movwf	_z& (0+255),b
 15684                           
 15685                           ; BSR set to: 1
 15686                           ;main.c: 485: t=0;
 15687  008336  6BAC               	clrf	_t& (0+255),b
 15688  008338                     l13038:
 15689                           
 15690                           ; BSR set to: 1
 15691                           ;main.c: 487: fl_fread(&data, 1, 1, file);
 15692  008338  0E01               	movlw	high _data
 15693  00833A  0100               	movlb	0	; () banked
 15694  00833C  6FDF               	movwf	(fl_fread@buffer+1)& (0+255),b
 15695  00833E  0EF7               	movlw	low _data
 15696  008340  6FDE               	movwf	fl_fread@buffer& (0+255),b
 15697  008342  6BE1               	clrf	(fl_fread@size+1)& (0+255),b
 15698  008344  0E01               	movlw	1
 15699  008346  6FE0               	movwf	fl_fread@size& (0+255),b
 15700  008348  6BE3               	clrf	(fl_fread@length+1)& (0+255),b
 15701  00834A  6FE2               	movwf	fl_fread@length& (0+255),b
 15702  00834C  C198  F0E5         	movff	_file+1,fl_fread@f+1
 15703  008350  C197  F0E4         	movff	_file,fl_fread@f
 15704  008354  EC0D  F065         	call	_fl_fread	;wreg free
 15705                           
 15706                           ;main.c: 488: if(data=='\r')
 15707  008358  0101               	movlb	1	; () banked
 15708  00835A  51F7               	movf	_data& (0+255),w,b
 15709  00835C  0A0D               	xorlw	13
 15710  00835E  E105               	bnz	l13046
 15711                           
 15712                           ; BSR set to: 1
 15713                           ;main.c: 489: {
 15714                           ;main.c: 490: Write('S');
 15715  008360  0E53               	movlw	83
 15716  008362  EC05  F020         	call	_Write
 15717                           
 15718                           ;main.c: 491: t = t+1;
 15719  008366  0101               	movlb	1	; () banked
 15720  008368  2BAC               	incf	_t& (0+255),f,b
 15721  00836A                     l13046:
 15722                           
 15723                           ; BSR set to: 1
 15724                           ;main.c: 493: }
 15725                           ;main.c: 494: }while(t!= z);
 15726  00836A  0101               	movlb	1	; () banked
 15727  00836C  51AE               	movf	_z& (0+255),w,b
 15728  00836E  63AC               	cpfseq	_t& (0+255),b
 15729  008370  D7E3               	goto	l13038
 15730  008372                     l13048:
 15731                           
 15732                           ;main.c: 497: fl_fread(&data, 1, 1, file);
 15733  008372  0E01               	movlw	high _data
 15734  008374  0100               	movlb	0	; () banked
 15735  008376  6FDF               	movwf	(fl_fread@buffer+1)& (0+255),b
 15736  008378  0EF7               	movlw	low _data
 15737  00837A  6FDE               	movwf	fl_fread@buffer& (0+255),b
 15738  00837C  6BE1               	clrf	(fl_fread@size+1)& (0+255),b
 15739  00837E  0E01               	movlw	1
 15740  008380  6FE0               	movwf	fl_fread@size& (0+255),b
 15741  008382  6BE3               	clrf	(fl_fread@length+1)& (0+255),b
 15742  008384  6FE2               	movwf	fl_fread@length& (0+255),b
 15743  008386  C198  F0E5         	movff	_file+1,fl_fread@f+1
 15744  00838A  C197  F0E4         	movff	_file,fl_fread@f
 15745  00838E  EC0D  F065         	call	_fl_fread	;wreg free
 15746                           
 15747                           ;main.c: 498: if(data=='\r')
 15748  008392  0101               	movlb	1	; () banked
 15749  008394  51F7               	movf	_data& (0+255),w,b
 15750  008396  0A0D               	xorlw	13
 15751  008398  E101 D08A          	bz	l13084
 15752                           
 15753                           ; BSR set to: 1
 15754                           ;main.c: 500: else
 15755                           ;main.c: 501: {
 15756                           ;main.c: 502: fl_fwrite(' ', 1, 1, file);
 15757                           
 15758                           ; BSR set to: 1
 15759                           
 15760                           ; BSR set to: 1
 15761                           
 15762                           ; BSR set to: 1
 15763                           ;main.c: 499: break;
 15764  00839C  0100               	movlb	0	; () banked
 15765  00839E  6BE0               	clrf	(fl_fwrite@data+2)& (0+255),b
 15766  0083A0  6BDF               	clrf	(fl_fwrite@data+1)& (0+255),b
 15767  0083A2  0E20               	movlw	32
 15768  0083A4  6FDE               	movwf	fl_fwrite@data& (0+255),b
 15769  0083A6  6BE2               	clrf	(fl_fwrite@size+1)& (0+255),b
 15770  0083A8  0E01               	movlw	1
 15771  0083AA  6FE1               	movwf	fl_fwrite@size& (0+255),b
 15772  0083AC  6BE4               	clrf	(fl_fwrite@count+1)& (0+255),b
 15773  0083AE  6FE3               	movwf	fl_fwrite@count& (0+255),b
 15774  0083B0  C198  F0E6         	movff	_file+1,fl_fwrite@f+1
 15775  0083B4  C197  F0E5         	movff	_file,fl_fwrite@f
 15776  0083B8  ECED  F06C         	call	_fl_fwrite	;wreg free
 15777  0083BC  D7DA               	goto	l13048
 15778  0083BE                     l13060:
 15779                           
 15780                           ;main.c: 507: else if(data == 0x7F)
 15781  0083BE  0101               	movlb	1	; () banked
 15782  0083C0  51F7               	movf	_data& (0+255),w,b
 15783  0083C2  0A7F               	xorlw	127
 15784  0083C4  E150               	bnz	l13070
 15785                           
 15786                           ; BSR set to: 1
 15787                           ;main.c: 508: {
 15788                           ;main.c: 509: Write('s');
 15789  0083C6  0E73               	movlw	115
 15790  0083C8  EC05  F020         	call	_Write
 15791                           
 15792                           ;main.c: 510: fl_fseek(file, -1, (fl_ftell(file)));
 15793  0083CC  C198  F018         	movff	_file+1,fl_fseek@f+1
 15794  0083D0  C197  F017         	movff	_file,fl_fseek@f
 15795  0083D4  0EFF               	movlw	255
 15796  0083D6  6819               	setf	fl_fseek@offset,c
 15797  0083D8  681A               	setf	fl_fseek@offset+1,c
 15798  0083DA  681B               	setf	fl_fseek@offset+2,c
 15799  0083DC  681C               	setf	fl_fseek@offset+3,c
 15800  0083DE  C198  F008         	movff	_file+1,fl_ftell@f+1
 15801  0083E2  0101               	movlb	1	; () banked
 15802  0083E4  C197  F007         	movff	_file,fl_ftell@f
 15803  0083E8  EC47  F020         	call	_fl_ftell	;wreg free
 15804  0083EC  C007  F183         	movff	?_fl_ftell,??_File_append
 15805  0083F0  C008  F184         	movff	?_fl_ftell+1,??_File_append+1
 15806  0083F4  C009  F185         	movff	?_fl_ftell+2,??_File_append+2
 15807  0083F8  C00A  F186         	movff	?_fl_ftell+3,??_File_append+3
 15808  0083FC  C183  F01D         	movff	??_File_append,fl_fseek@origin
 15809  008400  C184  F01E         	movff	??_File_append+1,fl_fseek@origin+1
 15810  008404  EC09  F039         	call	_fl_fseek	;wreg free
 15811                           
 15812                           ;main.c: 511: fl_fwrite(' ', 1, 1, file);
 15813  008408  0100               	movlb	0	; () banked
 15814  00840A  6BE0               	clrf	(fl_fwrite@data+2)& (0+255),b
 15815  00840C  6BDF               	clrf	(fl_fwrite@data+1)& (0+255),b
 15816  00840E  0E20               	movlw	32
 15817  008410  6FDE               	movwf	fl_fwrite@data& (0+255),b
 15818  008412  6BE2               	clrf	(fl_fwrite@size+1)& (0+255),b
 15819  008414  0E01               	movlw	1
 15820  008416  6FE1               	movwf	fl_fwrite@size& (0+255),b
 15821  008418  6BE4               	clrf	(fl_fwrite@count+1)& (0+255),b
 15822  00841A  6FE3               	movwf	fl_fwrite@count& (0+255),b
 15823  00841C  C198  F0E6         	movff	_file+1,fl_fwrite@f+1
 15824  008420  C197  F0E5         	movff	_file,fl_fwrite@f
 15825  008424  ECED  F06C         	call	_fl_fwrite	;wreg free
 15826                           
 15827                           ;main.c: 512: fl_fseek(file, -1, (fl_ftell(file)));
 15828  008428  C198  F018         	movff	_file+1,fl_fseek@f+1
 15829  00842C  C197  F017         	movff	_file,fl_fseek@f
 15830  008430  0EFF               	movlw	255
 15831  008432  6819               	setf	fl_fseek@offset,c
 15832  008434  681A               	setf	fl_fseek@offset+1,c
 15833  008436  681B               	setf	fl_fseek@offset+2,c
 15834  008438  681C               	setf	fl_fseek@offset+3,c
 15835  00843A  C198  F008         	movff	_file+1,fl_ftell@f+1
 15836  00843E  0101               	movlb	1	; () banked
 15837  008440  C197  F007         	movff	_file,fl_ftell@f
 15838  008444  EC47  F020         	call	_fl_ftell	;wreg free
 15839  008448  C007  F183         	movff	?_fl_ftell,??_File_append
 15840  00844C  C008  F184         	movff	?_fl_ftell+1,??_File_append+1
 15841  008450  C009  F185         	movff	?_fl_ftell+2,??_File_append+2
 15842  008454  C00A  F186         	movff	?_fl_ftell+3,??_File_append+3
 15843  008458  C183  F01D         	movff	??_File_append,fl_fseek@origin
 15844  00845C  C184  F01E         	movff	??_File_append+1,fl_fseek@origin+1
 15845  008460  EC09  F039         	call	_fl_fseek	;wreg free
 15846                           
 15847                           ;main.c: 513: }
 15848  008464  D012               	goto	l13082
 15849  008466                     l13070:
 15850                           
 15851                           ;main.c: 514: else if(data==0x13)
 15852  008466  0101               	movlb	1	; () banked
 15853  008468  51F7               	movf	_data& (0+255),w,b
 15854  00846A  0A13               	xorlw	19
 15855  00846C  E10E               	bnz	l13082
 15856                           
 15857                           ; BSR set to: 1
 15858                           ;main.c: 515: {
 15859                           ;main.c: 516: Write_str("\n\rSave the data? y/n?");
 15860  00846E  0EFE               	movlw	high STR_32
 15861  008470  6E07               	movwf	Write_str@str+1,c
 15862  008472  0EAF               	movlw	low STR_32
 15863  008474  6E06               	movwf	Write_str@str,c
 15864  008476  EC3C  F01F         	call	_Write_str	;wreg free
 15865                           
 15866                           ;main.c: 517: data = ReadUART();
 15867  00847A  EC1E  F01F         	call	_ReadUART	;wreg free
 15868  00847E  0101               	movlb	1	; () banked
 15869  008480  6FF7               	movwf	_data& (0+255),b
 15870                           
 15871                           ; BSR set to: 1
 15872                           ;main.c: 518: if(data=='y')
 15873  008482  51F7               	movf	_data& (0+255),w,b
 15874  008484  0A79               	xorlw	121
 15875  008486  E014               	bz	l13084
 15876  008488  D745               	goto	l13028
 15877  00848A                     l13082:
 15878                           
 15879                           ;main.c: 522: }
 15880                           ;main.c: 523: fl_fwrite(&data, 1, 1, file);
 15881  00848A  0E20               	movlw	32
 15882  00848C  0100               	movlb	0	; () banked
 15883  00848E  6FE0               	movwf	(fl_fwrite@data+2)& (0+255),b
 15884  008490  0E01               	movlw	high _data
 15885  008492  6FDF               	movwf	(fl_fwrite@data+1)& (0+255),b
 15886  008494  0EF7               	movlw	low _data
 15887  008496  6FDE               	movwf	fl_fwrite@data& (0+255),b
 15888  008498  6BE2               	clrf	(fl_fwrite@size+1)& (0+255),b
 15889  00849A  0E01               	movlw	1
 15890  00849C  6FE1               	movwf	fl_fwrite@size& (0+255),b
 15891  00849E  6BE4               	clrf	(fl_fwrite@count+1)& (0+255),b
 15892  0084A0  6FE3               	movwf	fl_fwrite@count& (0+255),b
 15893  0084A2  C198  F0E6         	movff	_file+1,fl_fwrite@f+1
 15894  0084A6  C197  F0E5         	movff	_file,fl_fwrite@f
 15895  0084AA  ECED  F06C         	call	_fl_fwrite	;wreg free
 15896  0084AE  D732               	goto	l13028
 15897  0084B0                     l13084:
 15898                           
 15899                           ;main.c: 525: Write_str("\n\rFile write completed..!");
 15900  0084B0  0EFD               	movlw	high (STR_26+2)
 15901  0084B2  6E07               	movwf	Write_str@str+1,c
 15902  0084B4  0EB1               	movlw	low (STR_26+2)
 15903  0084B6  6E06               	movwf	Write_str@str,c
 15904  0084B8  EC3C  F01F         	call	_Write_str	;wreg free
 15905                           
 15906                           ;main.c: 526: }
 15907  0084BC  D006               	goto	l13088
 15908  0084BE                     l13086:
 15909                           
 15910                           ;main.c: 527: else
 15911                           ;main.c: 528: Write_str("\n\rFile open failed");
 15912  0084BE  0EFF               	movlw	high STR_34
 15913  0084C0  6E07               	movwf	Write_str@str+1,c
 15914  0084C2  0E50               	movlw	low STR_34
 15915  0084C4  6E06               	movwf	Write_str@str,c
 15916  0084C6  EC3C  F01F         	call	_Write_str	;wreg free
 15917  0084CA                     l13088:
 15918                           
 15919                           ;main.c: 529: fl_fclose(file);
 15920  0084CA  C198  F0DF         	movff	_file+1,fl_fclose@f+1
 15921  0084CE  C197  F0DE         	movff	_file,fl_fclose@f
 15922  0084D2  EF99  F031         	goto	_fl_fclose	;wreg free
 15923  0084D6                     __end_of_File_append:
 15924                           	opt stack 0
 15925                           tosu	equ	0xFFF
 15926                           tosh	equ	0xFFE
 15927                           tosl	equ	0xFFD
 15928                           pclath	equ	0xFFA
 15929                           tblptru	equ	0xFF8
 15930                           tblptrh	equ	0xFF7
 15931                           tblptrl	equ	0xFF6
 15932                           tablat	equ	0xFF5
 15933                           prodh	equ	0xFF4
 15934                           prodl	equ	0xFF3
 15935                           indf0	equ	0xFEF
 15936                           postinc0	equ	0xFEE
 15937                           fsr0h	equ	0xFEA
 15938                           fsr0l	equ	0xFE9
 15939                           wreg	equ	0xFE8
 15940                           indf1	equ	0xFE7
 15941                           postinc1	equ	0xFE6
 15942                           postdec1	equ	0xFE5
 15943                           fsr1h	equ	0xFE2
 15944                           fsr1l	equ	0xFE1
 15945                           indf2	equ	0xFDF
 15946                           postinc2	equ	0xFDE
 15947                           postdec2	equ	0xFDD
 15948                           fsr2h	equ	0xFDA
 15949                           fsr2l	equ	0xFD9
 15950                           status	equ	0xFD8
 15951                           
 15952 ;; *************** function _fl_fwrite *****************
 15953 ;; Defined at:
 15954 ;;		line 1253 in file "fat_filelib.c"
 15955 ;; Parameters:    Size  Location     Type
 15956 ;;  data            3   94[BANK0 ] PTR const void 
 15957 ;;		 -> w(1), str_0(26), data(1), fl_fputc@data(1), 
 15958 ;;		 -> ROM(65535), 
 15959 ;;  size            2   97[BANK0 ] int 
 15960 ;;  count           2   99[BANK0 ] int 
 15961 ;;  f               2  101[BANK0 ] PTR void 
 15962 ;;		 -> RAM(3967), NULL(0), 
 15963 ;; Auto vars:     Size  Location     Type
 15964 ;;  sectorsWrote    4    3[BANK1 ] unsigned long 
 15965 ;;  copyCount       4   23[BANK1 ] unsigned long 
 15966 ;;  bytesWritten    4   19[BANK1 ] unsigned long 
 15967 ;;  length          4   15[BANK1 ] unsigned long 
 15968 ;;  sector          4   11[BANK1 ] unsigned long 
 15969 ;;  offset          4    7[BANK1 ] unsigned long 
 15970 ;;  buffer          3    0[BANK1 ] PTR unsigned char 
 15971 ;;		 -> w(1), str_0(26), data(1), fl_fputc@data(1), 
 15972 ;;		 -> ROM(65535), 
 15973 ;;  file            2   27[BANK1 ] PTR struct sFL_FILE
 15974 ;;		 -> RAM(3967), NULL(0), 
 15975 ;; Return value:  Size  Location     Type
 15976 ;;                  2   94[BANK0 ] int 
 15977 ;; Registers used:
 15978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15979 ;; Tracked objects:
 15980 ;;		On entry : 0/0
 15981 ;;		On exit  : 0/0
 15982 ;;		Unchanged: 0/0
 15983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15984 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15985 ;;      Locals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15986 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15987 ;;      Totals:         0      17      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15988 ;;Total ram usage:       46 bytes
 15989 ;; Hardware stack levels used:    1
 15990 ;; Hardware stack levels required when called:    9
 15991 ;; This function calls:
 15992 ;;		__read_sectors
 15993 ;;		__write_sectors
 15994 ;;		_fl_fflush
 15995 ;;		_fl_init
 15996 ;;		_memcpy
 15997 ;;		_memset
 15998 ;; This function is called by:
 15999 ;;		_File_write
 16000 ;;		_File_append
 16001 ;;		_fl_fputc
 16002 ;;		_fl_fputs
 16003 ;;		_File_read_
 16004 ;; This function uses a non-reentrant model
 16005 ;;
 16006                           
 16007                           	psect	text40
 16008  00D9DA                     __ptext40:
 16009                           	opt stack 0
 16010  00D9DA                     _fl_fwrite:
 16011                           	opt stack 20
 16012                           
 16013                           ;fat_filelib.c: 1255: FL_FILE *file = (FL_FILE *)f;
 16014                           
 16015                           ;incstack = 0
 16016  00D9DA  C0E6  F11C         	movff	fl_fwrite@f+1,fl_fwrite@file+1
 16017  00D9DE  C0E5  F11B         	movff	fl_fwrite@f,fl_fwrite@file
 16018                           
 16019                           ; BSR set to: 1
 16020                           ;fat_filelib.c: 1256: uint32 sector;
 16021                           ;fat_filelib.c: 1257: uint32 offset;
 16022                           ;fat_filelib.c: 1258: uint32 length = (size*count);
 16023  00D9E2  0100               	movlb	0	; () banked
 16024  00D9E4  51E3               	movf	fl_fwrite@count& (0+255),w,b
 16025  00D9E6  03E1               	mulwf	fl_fwrite@size& (0+255),b
 16026  00D9E8  CFF3 F0E7          	movff	prodl,??_fl_fwrite
 16027  00D9EC  CFF4 F0E8          	movff	prodh,??_fl_fwrite+1
 16028  00D9F0  03E2               	mulwf	(fl_fwrite@size+1)& (0+255),b
 16029  00D9F2  50F3               	movf	243,w,c
 16030  00D9F4  27E8               	addwf	(??_fl_fwrite+1)& (0+255),f,b
 16031  00D9F6  51E4               	movf	(fl_fwrite@count+1)& (0+255),w,b
 16032  00D9F8  03E1               	mulwf	fl_fwrite@size& (0+255),b
 16033  00D9FA  50F3               	movf	243,w,c
 16034  00D9FC  27E8               	addwf	(??_fl_fwrite+1)& (0+255),f,b
 16035  00D9FE  C0E7  F10F         	movff	??_fl_fwrite,fl_fwrite@length
 16036  00DA02  C0E8  F110         	movff	??_fl_fwrite+1,fl_fwrite@length+1
 16037  00DA06  0E00               	movlw	0
 16038  00DA08  0101               	movlb	1	; () banked
 16039  00DA0A  BF10               	btfsc	(fl_fwrite@length+1)& (0+255),7,b
 16040  00DA0C  0EFF               	movlw	-1
 16041  00DA0E  6F11               	movwf	(fl_fwrite@length+2)& (0+255),b
 16042  00DA10  6F12               	movwf	(fl_fwrite@length+3)& (0+255),b
 16043                           
 16044                           ; BSR set to: 1
 16045                           ;fat_filelib.c: 1259: uint8 *buffer = (uint8 *)data;
 16046  00DA12  C0E0  F102         	movff	fl_fwrite@data+2,fl_fwrite@buffer+2
 16047  00DA16  C0DF  F101         	movff	fl_fwrite@data+1,fl_fwrite@buffer+1
 16048  00DA1A  C0DE  F100         	movff	fl_fwrite@data,fl_fwrite@buffer
 16049                           
 16050                           ; BSR set to: 1
 16051                           ;fat_filelib.c: 1260: uint32 bytesWritten = 0;
 16052  00DA1E  6B13               	clrf	fl_fwrite@bytesWritten& (0+255),b
 16053  00DA20  6B14               	clrf	(fl_fwrite@bytesWritten+1)& (0+255),b
 16054  00DA22  6B15               	clrf	(fl_fwrite@bytesWritten+2)& (0+255),b
 16055  00DA24  6B16               	clrf	(fl_fwrite@bytesWritten+3)& (0+255),b
 16056                           
 16057                           ; BSR set to: 1
 16058                           ;fat_filelib.c: 1261: uint32 copyCount;
 16059                           ;fat_filelib.c: 1264: { if (_filelib_init==0) fl_init(); };
 16060  00DA26  5192               	movf	(__filelib_init+1)& (0+255),w,b
 16061  00DA28  1191               	iorwf	__filelib_init& (0+255),w,b
 16062  00DA2A  B4D8               	btfsc	status,2,c
 16063                           
 16064                           ; BSR set to: 1
 16065  00DA2C  EC3A  F029         	call	_fl_init	;wreg free
 16066                           
 16067                           ;fat_filelib.c: 1266: if (!file)
 16068  00DA30  0101               	movlb	1	; () banked
 16069  00DA32  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16070  00DA34  111B               	iorwf	fl_fwrite@file& (0+255),w,b
 16071  00DA36  E00B               	bz	l729
 16072                           
 16073                           ;fat_filelib.c: 1272: if (!(file->flags & (1 << 1)))
 16074                           
 16075                           ; BSR set to: 0
 16076                           
 16077                           ; BSR set to: 0
 16078                           
 16079                           ; BSR set to: 0
 16080                           
 16081                           ; BSR set to: 0
 16082                           
 16083                           ;fat_filelib.c: 1269: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
 16084                           
 16085                           ; BSR set to: 0
 16086                           
 16087                           ; BSR set to: 1
 16088                           ;fat_filelib.c: 1267: return -1;
 16089  00DA38  EE22 F03F          	lfsr	2,575
 16090  00DA3C  511B               	movf	fl_fwrite@file& (0+255),w,b
 16091  00DA3E  26D9               	addwf	fsr2l,f,c
 16092  00DA40  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16093  00DA42  22DA               	addwfc	fsr2h,f,c
 16094  00DA44  50DF               	movf	indf2,w,c
 16095  00DA46  0100               	movlb	0	; () banked
 16096  00DA48  6FE7               	movwf	??_fl_fwrite& (0+255),b
 16097  00DA4A  B3E7               	btfsc	??_fl_fwrite& (0+255),1,b
 16098  00DA4C  D004               	goto	l12456
 16099  00DA4E                     l729:
 16100                           
 16101                           ; BSR set to: 0
 16102                           ;fat_filelib.c: 1275: return -1;
 16103  00DA4E  0100               	movlb	0	; () banked
 16104  00DA50  69DE               	setf	?_fl_fwrite& (0+255),b
 16105  00DA52  69DF               	setf	(?_fl_fwrite+1)& (0+255),b
 16106  00DA54  D332               	goto	l722
 16107  00DA56                     l12456:
 16108                           
 16109                           ; BSR set to: 0
 16110                           ;fat_filelib.c: 1276: }
 16111                           ;fat_filelib.c: 1279: if (file->flags & (1 << 2))
 16112  00DA56  EE22 F03F          	lfsr	2,575
 16113  00DA5A  0101               	movlb	1	; () banked
 16114  00DA5C  511B               	movf	fl_fwrite@file& (0+255),w,b
 16115  00DA5E  26D9               	addwf	fsr2l,f,c
 16116  00DA60  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16117  00DA62  22DA               	addwfc	fsr2h,f,c
 16118  00DA64  50DF               	movf	indf2,w,c
 16119  00DA66  0100               	movlb	0	; () banked
 16120  00DA68  6FE7               	movwf	??_fl_fwrite& (0+255),b
 16121  00DA6A  A5E7               	btfss	??_fl_fwrite& (0+255),2,b
 16122  00DA6C  D017               	goto	l12460
 16123                           
 16124                           ; BSR set to: 0
 16125                           ;fat_filelib.c: 1280: file->bytenum = file->filelength;
 16126  00DA6E  EE20 F00C          	lfsr	2,12
 16127  00DA72  0101               	movlb	1	; () banked
 16128  00DA74  511B               	movf	fl_fwrite@file& (0+255),w,b
 16129  00DA76  26D9               	addwf	fsr2l,f,c
 16130  00DA78  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16131  00DA7A  22DA               	addwfc	fsr2h,f,c
 16132  00DA7C  EE10 F008          	lfsr	1,8
 16133  00DA80  511B               	movf	fl_fwrite@file& (0+255),w,b
 16134  00DA82  26E1               	addwf	fsr1l,f,c
 16135  00DA84  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16136  00DA86  22E2               	addwfc	fsr1h,f,c
 16137  00DA88  CFDE FFE6          	movff	postinc2,postinc1
 16138  00DA8C  CFDE FFE6          	movff	postinc2,postinc1
 16139  00DA90  CFDE FFE6          	movff	postinc2,postinc1
 16140  00DA94  CFDD FFE5          	movff	postdec2,postdec1
 16141  00DA98  52E5               	movf	postdec1,f,c
 16142  00DA9A  52E5               	movf	postdec1,f,c
 16143  00DA9C                     l12460:
 16144                           
 16145                           ;fat_filelib.c: 1284: sector = file->bytenum / 512;
 16146  00DA9C  EE20 F008          	lfsr	2,8
 16147  00DAA0  0101               	movlb	1	; () banked
 16148  00DAA2  511B               	movf	fl_fwrite@file& (0+255),w,b
 16149  00DAA4  26D9               	addwf	fsr2l,f,c
 16150  00DAA6  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16151  00DAA8  22DA               	addwfc	fsr2h,f,c
 16152  00DAAA  CFDE F0E7          	movff	postinc2,??_fl_fwrite
 16153  00DAAE  CFDE F0E8          	movff	postinc2,??_fl_fwrite+1
 16154  00DAB2  CFDE F0E9          	movff	postinc2,??_fl_fwrite+2
 16155  00DAB6  CFDE F0EA          	movff	postinc2,??_fl_fwrite+3
 16156  00DABA  0E0A               	movlw	10
 16157  00DABC  D006               	goto	u14910
 16158  00DABE                     u14915:
 16159  00DABE  0100               	movlb	0	; () banked
 16160  00DAC0  90D8               	bcf	status,0,c
 16161  00DAC2  33EA               	rrcf	(??_fl_fwrite+3)& (0+255),f,b
 16162  00DAC4  33E9               	rrcf	(??_fl_fwrite+2)& (0+255),f,b
 16163  00DAC6  33E8               	rrcf	(??_fl_fwrite+1)& (0+255),f,b
 16164  00DAC8  33E7               	rrcf	??_fl_fwrite& (0+255),f,b
 16165  00DACA                     u14910:
 16166  00DACA  2EE8               	decfsz	wreg,f,c
 16167  00DACC  D7F8               	goto	u14915
 16168  00DACE  C0E7  F10B         	movff	??_fl_fwrite,fl_fwrite@sector
 16169  00DAD2  C0E8  F10C         	movff	??_fl_fwrite+1,fl_fwrite@sector+1
 16170  00DAD6  C0E9  F10D         	movff	??_fl_fwrite+2,fl_fwrite@sector+2
 16171  00DADA  C0EA  F10E         	movff	??_fl_fwrite+3,fl_fwrite@sector+3
 16172                           
 16173                           ; BSR set to: 0
 16174                           ;fat_filelib.c: 1287: offset = file->bytenum % 512;
 16175  00DADE  EE20 F008          	lfsr	2,8
 16176  00DAE2  0101               	movlb	1	; () banked
 16177  00DAE4  511B               	movf	fl_fwrite@file& (0+255),w,b
 16178  00DAE6  26D9               	addwf	fsr2l,f,c
 16179  00DAE8  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16180  00DAEA  22DA               	addwfc	fsr2h,f,c
 16181  00DAEC  0EFF               	movlw	255
 16182  00DAEE  14DE               	andwf	postinc2,w,c
 16183  00DAF0  6F07               	movwf	fl_fwrite@offset& (0+255),b
 16184  00DAF2  0E01               	movlw	1
 16185  00DAF4  14DE               	andwf	postinc2,w,c
 16186  00DAF6  6F08               	movwf	(fl_fwrite@offset+1)& (0+255),b
 16187  00DAF8  0E00               	movlw	0
 16188  00DAFA  14DE               	andwf	postinc2,w,c
 16189  00DAFC  6F09               	movwf	(fl_fwrite@offset+2)& (0+255),b
 16190  00DAFE  0E00               	movlw	0
 16191  00DB00  14DE               	andwf	postinc2,w,c
 16192  00DB02  D277               	goto	L39
 16193  00DB04                     l12464:
 16194                           
 16195                           ; BSR set to: 1
 16196                           ;fat_filelib.c: 1290: {
 16197                           ;fat_filelib.c: 1292: if ((offset == 0) && ((length - bytesWritten) >= 512))
 16198  00DB04  0101               	movlb	1	; () banked
 16199  00DB06  510A               	movf	(fl_fwrite@offset+3)& (0+255),w,b
 16200  00DB08  1107               	iorwf	fl_fwrite@offset& (0+255),w,b
 16201  00DB0A  1108               	iorwf	(fl_fwrite@offset+1)& (0+255),w,b
 16202  00DB0C  1109               	iorwf	(fl_fwrite@offset+2)& (0+255),w,b
 16203  00DB0E  E001 D10D          	bnz	l12492
 16204                           
 16205                           ; BSR set to: 1
 16206  00DB12  C113  F0E7         	movff	fl_fwrite@bytesWritten,??_fl_fwrite
 16207  00DB16  C114  F0E8         	movff	fl_fwrite@bytesWritten+1,??_fl_fwrite+1
 16208  00DB1A  C115  F0E9         	movff	fl_fwrite@bytesWritten+2,??_fl_fwrite+2
 16209  00DB1E  C116  F0EA         	movff	fl_fwrite@bytesWritten+3,??_fl_fwrite+3
 16210  00DB22  0100               	movlb	0	; () banked
 16211  00DB24  1FE7               	comf	??_fl_fwrite& (0+255),f,b
 16212  00DB26  1FE8               	comf	(??_fl_fwrite+1)& (0+255),f,b
 16213  00DB28  1FE9               	comf	(??_fl_fwrite+2)& (0+255),f,b
 16214  00DB2A  1FEA               	comf	(??_fl_fwrite+3)& (0+255),f,b
 16215  00DB2C  2BE7               	incf	??_fl_fwrite& (0+255),f,b
 16216  00DB2E  0E00               	movlw	0
 16217  00DB30  23E8               	addwfc	(??_fl_fwrite+1)& (0+255),f,b
 16218  00DB32  23E9               	addwfc	(??_fl_fwrite+2)& (0+255),f,b
 16219  00DB34  23EA               	addwfc	(??_fl_fwrite+3)& (0+255),f,b
 16220  00DB36  0101               	movlb	1	; () banked
 16221  00DB38  510F               	movf	fl_fwrite@length& (0+255),w,b
 16222  00DB3A  0100               	movlb	0	; () banked
 16223  00DB3C  25E7               	addwf	??_fl_fwrite& (0+255),w,b
 16224  00DB3E  6FEB               	movwf	(??_fl_fwrite+4)& (0+255),b
 16225  00DB40  0101               	movlb	1	; () banked
 16226  00DB42  5110               	movf	(fl_fwrite@length+1)& (0+255),w,b
 16227  00DB44  0100               	movlb	0	; () banked
 16228  00DB46  21E8               	addwfc	(??_fl_fwrite+1)& (0+255),w,b
 16229  00DB48  6FEC               	movwf	(??_fl_fwrite+5)& (0+255),b
 16230  00DB4A  0101               	movlb	1	; () banked
 16231  00DB4C  5111               	movf	(fl_fwrite@length+2)& (0+255),w,b
 16232  00DB4E  0100               	movlb	0	; () banked
 16233  00DB50  21E9               	addwfc	(??_fl_fwrite+2)& (0+255),w,b
 16234  00DB52  6FED               	movwf	(??_fl_fwrite+6)& (0+255),b
 16235  00DB54  0101               	movlb	1	; () banked
 16236  00DB56  5112               	movf	(fl_fwrite@length+3)& (0+255),w,b
 16237  00DB58  0100               	movlb	0	; () banked
 16238  00DB5A  21EA               	addwfc	(??_fl_fwrite+3)& (0+255),w,b
 16239  00DB5C  6FEE               	movwf	(??_fl_fwrite+7)& (0+255),b
 16240  00DB5E  0E00               	movlw	0
 16241  00DB60  5DEB               	subwf	(??_fl_fwrite+4)& (0+255),w,b
 16242  00DB62  0E02               	movlw	2
 16243  00DB64  59EC               	subwfb	(??_fl_fwrite+5)& (0+255),w,b
 16244  00DB66  0E00               	movlw	0
 16245  00DB68  59ED               	subwfb	(??_fl_fwrite+6)& (0+255),w,b
 16246  00DB6A  0E00               	movlw	0
 16247  00DB6C  59EE               	subwfb	(??_fl_fwrite+7)& (0+255),w,b
 16248  00DB6E  E201 D0DD          	bnc	l12492
 16249                           
 16250                           ; BSR set to: 0
 16251                           ;fat_filelib.c: 1293: {
 16252                           ;fat_filelib.c: 1294: uint32 sectorsWrote;
 16253                           ;fat_filelib.c: 1297: if (file->file_data_address != 0xFFFFFFFF)
 16254  00DB72  EE22 F039          	lfsr	2,569
 16255  00DB76  0101               	movlb	1	; () banked
 16256  00DB78  511B               	movf	fl_fwrite@file& (0+255),w,b
 16257  00DB7A  26D9               	addwf	fsr2l,f,c
 16258  00DB7C  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16259  00DB7E  22DA               	addwfc	fsr2h,f,c
 16260  00DB80  CFDE F0E7          	movff	postinc2,??_fl_fwrite
 16261  00DB84  CFDE F0E8          	movff	postinc2,??_fl_fwrite+1
 16262  00DB88  CFDE F0E9          	movff	postinc2,??_fl_fwrite+2
 16263  00DB8C  CFDE F0EA          	movff	postinc2,??_fl_fwrite+3
 16264  00DB90  0100               	movlb	0	; () banked
 16265  00DB92  29E7               	incf	??_fl_fwrite& (0+255),w,b
 16266  00DB94  B4D8               	btfsc	status,2,c
 16267  00DB96  29E8               	incf	(??_fl_fwrite+1)& (0+255),w,b
 16268  00DB98  B4D8               	btfsc	status,2,c
 16269  00DB9A  29E9               	incf	(??_fl_fwrite+2)& (0+255),w,b
 16270  00DB9C  B4D8               	btfsc	status,2,c
 16271  00DB9E  29EA               	incf	(??_fl_fwrite+3)& (0+255),w,b
 16272  00DBA0  E024               	bz	l734
 16273                           
 16274                           ; BSR set to: 0
 16275                           ;fat_filelib.c: 1298: {
 16276                           ;fat_filelib.c: 1300: if (file->file_data_dirty)
 16277  00DBA2  EE22 F03D          	lfsr	2,573
 16278  00DBA6  0101               	movlb	1	; () banked
 16279  00DBA8  511B               	movf	fl_fwrite@file& (0+255),w,b
 16280  00DBAA  26D9               	addwf	fsr2l,f,c
 16281  00DBAC  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16282  00DBAE  22DA               	addwfc	fsr2h,f,c
 16283  00DBB0  50DE               	movf	postinc2,w,c
 16284  00DBB2  10DD               	iorwf	postdec2,w,c
 16285  00DBB4  E007               	bz	l12474
 16286                           
 16287                           ; BSR set to: 1
 16288                           ;fat_filelib.c: 1301: fl_fflush(file);
 16289  00DBB6  C11C  F0D5         	movff	fl_fwrite@file+1,fl_fflush@f+1
 16290  00DBBA  0100               	movlb	0	; () banked
 16291  00DBBC  C11B  F0D4         	movff	fl_fwrite@file,fl_fflush@f
 16292  00DBC0  EC9B  F02B         	call	_fl_fflush	;wreg free
 16293  00DBC4                     l12474:
 16294                           
 16295                           ;fat_filelib.c: 1303: file->file_data_address = 0xFFFFFFFF;
 16296  00DBC4  EE22 F039          	lfsr	2,569
 16297  00DBC8  0101               	movlb	1	; () banked
 16298  00DBCA  511B               	movf	fl_fwrite@file& (0+255),w,b
 16299  00DBCC  26D9               	addwf	fsr2l,f,c
 16300  00DBCE  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16301  00DBD0  22DA               	addwfc	fsr2h,f,c
 16302  00DBD2  68DE               	setf	postinc2,c
 16303  00DBD4  68DE               	setf	postinc2,c
 16304  00DBD6  68DE               	setf	postinc2,c
 16305  00DBD8  68DD               	setf	postdec2,c
 16306                           
 16307                           ; BSR set to: 1
 16308                           ;fat_filelib.c: 1304: file->file_data_dirty = 0;
 16309  00DBDA  EE22 F03D          	lfsr	2,573
 16310  00DBDE  511B               	movf	fl_fwrite@file& (0+255),w,b
 16311  00DBE0  26D9               	addwf	fsr2l,f,c
 16312  00DBE2  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16313  00DBE4  22DA               	addwfc	fsr2h,f,c
 16314  00DBE6  6ADE               	clrf	postinc2,c
 16315  00DBE8  6ADD               	clrf	postdec2,c
 16316  00DBEA                     l734:
 16317                           
 16318                           ;fat_filelib.c: 1305: }
 16319                           ;fat_filelib.c: 1308: sectorsWrote = _write_sectors(file, sector, (uint8*)(buffer + byte
      +                          sWritten), (length - bytesWritten) / 512);
 16320  00DBEA  C11C  F09F         	movff	fl_fwrite@file+1,__write_sectors@file+1
 16321  00DBEE  C11B  F09E         	movff	fl_fwrite@file,__write_sectors@file
 16322  00DBF2  C10B  F0A0         	movff	fl_fwrite@sector,__write_sectors@offset
 16323  00DBF6  C10C  F0A1         	movff	fl_fwrite@sector+1,__write_sectors@offset+1
 16324  00DBFA  C10D  F0A2         	movff	fl_fwrite@sector+2,__write_sectors@offset+2
 16325  00DBFE  C10E  F0A3         	movff	fl_fwrite@sector+3,__write_sectors@offset+3
 16326  00DC02  0101               	movlb	1	; () banked
 16327  00DC04  5113               	movf	fl_fwrite@bytesWritten& (0+255),w,b
 16328  00DC06  2500               	addwf	fl_fwrite@buffer& (0+255),w,b
 16329  00DC08  0100               	movlb	0	; () banked
 16330  00DC0A  6FA4               	movwf	__write_sectors@buf& (0+255),b
 16331  00DC0C  0101               	movlb	1	; () banked
 16332  00DC0E  5114               	movf	(fl_fwrite@bytesWritten+1)& (0+255),w,b
 16333  00DC10  2101               	addwfc	(fl_fwrite@buffer+1)& (0+255),w,b
 16334  00DC12  0100               	movlb	0	; () banked
 16335  00DC14  6FA5               	movwf	(__write_sectors@buf+1)& (0+255),b
 16336  00DC16  0E00               	movlw	0
 16337  00DC18  0101               	movlb	1	; () banked
 16338  00DC1A  2102               	addwfc	(fl_fwrite@buffer+2)& (0+255),w,b
 16339  00DC1C  0100               	movlb	0	; () banked
 16340  00DC1E  6FA6               	movwf	(__write_sectors@buf+2)& (0+255),b
 16341  00DC20  C113  F0E7         	movff	fl_fwrite@bytesWritten,??_fl_fwrite
 16342  00DC24  C114  F0E8         	movff	fl_fwrite@bytesWritten+1,??_fl_fwrite+1
 16343  00DC28  C115  F0E9         	movff	fl_fwrite@bytesWritten+2,??_fl_fwrite+2
 16344  00DC2C  C116  F0EA         	movff	fl_fwrite@bytesWritten+3,??_fl_fwrite+3
 16345  00DC30  1FE7               	comf	??_fl_fwrite& (0+255),f,b
 16346  00DC32  1FE8               	comf	(??_fl_fwrite+1)& (0+255),f,b
 16347  00DC34  1FE9               	comf	(??_fl_fwrite+2)& (0+255),f,b
 16348  00DC36  1FEA               	comf	(??_fl_fwrite+3)& (0+255),f,b
 16349  00DC38  2BE7               	incf	??_fl_fwrite& (0+255),f,b
 16350  00DC3A  0E00               	movlw	0
 16351  00DC3C  23E8               	addwfc	(??_fl_fwrite+1)& (0+255),f,b
 16352  00DC3E  23E9               	addwfc	(??_fl_fwrite+2)& (0+255),f,b
 16353  00DC40  23EA               	addwfc	(??_fl_fwrite+3)& (0+255),f,b
 16354  00DC42  0101               	movlb	1	; () banked
 16355  00DC44  510F               	movf	fl_fwrite@length& (0+255),w,b
 16356  00DC46  0100               	movlb	0	; () banked
 16357  00DC48  25E7               	addwf	??_fl_fwrite& (0+255),w,b
 16358  00DC4A  6FEB               	movwf	(??_fl_fwrite+4)& (0+255),b
 16359  00DC4C  0101               	movlb	1	; () banked
 16360  00DC4E  5110               	movf	(fl_fwrite@length+1)& (0+255),w,b
 16361  00DC50  0100               	movlb	0	; () banked
 16362  00DC52  21E8               	addwfc	(??_fl_fwrite+1)& (0+255),w,b
 16363  00DC54  6FEC               	movwf	(??_fl_fwrite+5)& (0+255),b
 16364  00DC56  0101               	movlb	1	; () banked
 16365  00DC58  5111               	movf	(fl_fwrite@length+2)& (0+255),w,b
 16366  00DC5A  0100               	movlb	0	; () banked
 16367  00DC5C  21E9               	addwfc	(??_fl_fwrite+2)& (0+255),w,b
 16368  00DC5E  6FED               	movwf	(??_fl_fwrite+6)& (0+255),b
 16369  00DC60  0101               	movlb	1	; () banked
 16370  00DC62  5112               	movf	(fl_fwrite@length+3)& (0+255),w,b
 16371  00DC64  0100               	movlb	0	; () banked
 16372  00DC66  21EA               	addwfc	(??_fl_fwrite+3)& (0+255),w,b
 16373  00DC68  6FEE               	movwf	(??_fl_fwrite+7)& (0+255),b
 16374  00DC6A  0E0A               	movlw	10
 16375  00DC6C  D006               	goto	u14960
 16376  00DC6E                     u14965:
 16377  00DC6E  0100               	movlb	0	; () banked
 16378  00DC70  90D8               	bcf	status,0,c
 16379  00DC72  33EE               	rrcf	(??_fl_fwrite+7)& (0+255),f,b
 16380  00DC74  33ED               	rrcf	(??_fl_fwrite+6)& (0+255),f,b
 16381  00DC76  33EC               	rrcf	(??_fl_fwrite+5)& (0+255),f,b
 16382  00DC78  33EB               	rrcf	(??_fl_fwrite+4)& (0+255),f,b
 16383  00DC7A                     u14960:
 16384  00DC7A  2EE8               	decfsz	wreg,f,c
 16385  00DC7C  D7F8               	goto	u14965
 16386  00DC7E  C0EB  F0A7         	movff	??_fl_fwrite+4,__write_sectors@count
 16387  00DC82  C0EC  F0A8         	movff	??_fl_fwrite+5,__write_sectors@count+1
 16388  00DC86  C0ED  F0A9         	movff	??_fl_fwrite+6,__write_sectors@count+2
 16389  00DC8A  C0EE  F0AA         	movff	??_fl_fwrite+7,__write_sectors@count+3
 16390  00DC8E  ECA3  F062         	call	__write_sectors	;wreg free
 16391  00DC92  C09E  F103         	movff	?__write_sectors,fl_fwrite@sectorsWrote
 16392  00DC96  C09F  F104         	movff	?__write_sectors+1,fl_fwrite@sectorsWrote+1
 16393  00DC9A  C0A0  F105         	movff	?__write_sectors+2,fl_fwrite@sectorsWrote+2
 16394  00DC9E  C0A1  F106         	movff	?__write_sectors+3,fl_fwrite@sectorsWrote+3
 16395                           
 16396                           ;fat_filelib.c: 1309: copyCount = 512 * sectorsWrote;
 16397  00DCA2  C103  F0E7         	movff	fl_fwrite@sectorsWrote,??_fl_fwrite
 16398  00DCA6  C104  F0E8         	movff	fl_fwrite@sectorsWrote+1,??_fl_fwrite+1
 16399  00DCAA  C105  F0E9         	movff	fl_fwrite@sectorsWrote+2,??_fl_fwrite+2
 16400  00DCAE  C106  F0EA         	movff	fl_fwrite@sectorsWrote+3,??_fl_fwrite+3
 16401  00DCB2  0E09               	movlw	9
 16402  00DCB4                     u14975:
 16403  00DCB4  90D8               	bcf	status,0,c
 16404  00DCB6  0100               	movlb	0	; () banked
 16405  00DCB8  37E7               	rlcf	??_fl_fwrite& (0+255),f,b
 16406  00DCBA  37E8               	rlcf	(??_fl_fwrite+1)& (0+255),f,b
 16407  00DCBC  37E9               	rlcf	(??_fl_fwrite+2)& (0+255),f,b
 16408  00DCBE  37EA               	rlcf	(??_fl_fwrite+3)& (0+255),f,b
 16409  00DCC0  2EE8               	decfsz	wreg,f,c
 16410  00DCC2  D7F8               	goto	u14975
 16411  00DCC4  C0E7  F117         	movff	??_fl_fwrite,fl_fwrite@copyCount
 16412  00DCC8  C0E8  F118         	movff	??_fl_fwrite+1,fl_fwrite@copyCount+1
 16413  00DCCC  C0E9  F119         	movff	??_fl_fwrite+2,fl_fwrite@copyCount+2
 16414  00DCD0  C0EA  F11A         	movff	??_fl_fwrite+3,fl_fwrite@copyCount+3
 16415                           
 16416                           ; BSR set to: 0
 16417                           ;fat_filelib.c: 1312: bytesWritten += copyCount;
 16418  00DCD4  0101               	movlb	1	; () banked
 16419  00DCD6  5117               	movf	fl_fwrite@copyCount& (0+255),w,b
 16420  00DCD8  2713               	addwf	fl_fwrite@bytesWritten& (0+255),f,b
 16421  00DCDA  5118               	movf	(fl_fwrite@copyCount+1)& (0+255),w,b
 16422  00DCDC  2314               	addwfc	(fl_fwrite@bytesWritten+1)& (0+255),f,b
 16423  00DCDE  5119               	movf	(fl_fwrite@copyCount+2)& (0+255),w,b
 16424  00DCE0  2315               	addwfc	(fl_fwrite@bytesWritten+2)& (0+255),f,b
 16425  00DCE2  511A               	movf	(fl_fwrite@copyCount+3)& (0+255),w,b
 16426  00DCE4  2316               	addwfc	(fl_fwrite@bytesWritten+3)& (0+255),f,b
 16427                           
 16428                           ; BSR set to: 1
 16429                           ;fat_filelib.c: 1315: file->bytenum += copyCount;
 16430  00DCE6  EE20 F008          	lfsr	2,8
 16431  00DCEA  511B               	movf	fl_fwrite@file& (0+255),w,b
 16432  00DCEC  26D9               	addwf	fsr2l,f,c
 16433  00DCEE  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16434  00DCF0  22DA               	addwfc	fsr2h,f,c
 16435  00DCF2  5117               	movf	fl_fwrite@copyCount& (0+255),w,b
 16436  00DCF4  26DE               	addwf	postinc2,f,c
 16437  00DCF6  5118               	movf	(fl_fwrite@copyCount+1)& (0+255),w,b
 16438  00DCF8  22DE               	addwfc	postinc2,f,c
 16439  00DCFA  5119               	movf	(fl_fwrite@copyCount+2)& (0+255),w,b
 16440  00DCFC  22DE               	addwfc	postinc2,f,c
 16441  00DCFE  511A               	movf	(fl_fwrite@copyCount+3)& (0+255),w,b
 16442  00DD00  22DD               	addwfc	postdec2,f,c
 16443  00DD02  52DD               	movf	postdec2,f,c
 16444  00DD04  52DD               	movf	postdec2,f,c
 16445                           
 16446                           ; BSR set to: 1
 16447                           ;fat_filelib.c: 1318: sector+= sectorsWrote;
 16448  00DD06  5103               	movf	fl_fwrite@sectorsWrote& (0+255),w,b
 16449  00DD08  270B               	addwf	fl_fwrite@sector& (0+255),f,b
 16450  00DD0A  5104               	movf	(fl_fwrite@sectorsWrote+1)& (0+255),w,b
 16451  00DD0C  230C               	addwfc	(fl_fwrite@sector+1)& (0+255),f,b
 16452  00DD0E  5105               	movf	(fl_fwrite@sectorsWrote+2)& (0+255),w,b
 16453  00DD10  230D               	addwfc	(fl_fwrite@sector+2)& (0+255),f,b
 16454  00DD12  5106               	movf	(fl_fwrite@sectorsWrote+3)& (0+255),w,b
 16455  00DD14  230E               	addwfc	(fl_fwrite@sector+3)& (0+255),f,b
 16456                           
 16457                           ; BSR set to: 1
 16458                           ;fat_filelib.c: 1319: offset = 0;
 16459  00DD16  6B07               	clrf	fl_fwrite@offset& (0+255),b
 16460  00DD18  6B08               	clrf	(fl_fwrite@offset+1)& (0+255),b
 16461  00DD1A  6B09               	clrf	(fl_fwrite@offset+2)& (0+255),b
 16462  00DD1C  6B0A               	clrf	(fl_fwrite@offset+3)& (0+255),b
 16463                           
 16464                           ; BSR set to: 1
 16465                           ;fat_filelib.c: 1321: if (!sectorsWrote)
 16466  00DD1E  5106               	movf	(fl_fwrite@sectorsWrote+3)& (0+255),w,b
 16467  00DD20  1103               	iorwf	fl_fwrite@sectorsWrote& (0+255),w,b
 16468  00DD22  1104               	iorwf	(fl_fwrite@sectorsWrote+1)& (0+255),w,b
 16469  00DD24  1105               	iorwf	(fl_fwrite@sectorsWrote+2)& (0+255),w,b
 16470  00DD26  E101 D171          	bz	l12526
 16471  00DD2A  D165               	goto	l12524
 16472  00DD2C                     l12492:
 16473                           
 16474                           ;fat_filelib.c: 1324: else
 16475                           ;fat_filelib.c: 1325: {
 16476                           ;fat_filelib.c: 1327: copyCount = 512 - offset;
 16477  00DD2C  C107  F0E7         	movff	fl_fwrite@offset,??_fl_fwrite
 16478  00DD30  C108  F0E8         	movff	fl_fwrite@offset+1,??_fl_fwrite+1
 16479  00DD34  C109  F0E9         	movff	fl_fwrite@offset+2,??_fl_fwrite+2
 16480  00DD38  C10A  F0EA         	movff	fl_fwrite@offset+3,??_fl_fwrite+3
 16481  00DD3C  0100               	movlb	0	; () banked
 16482  00DD3E  1FE7               	comf	??_fl_fwrite& (0+255),f,b
 16483  00DD40  1FE8               	comf	(??_fl_fwrite+1)& (0+255),f,b
 16484  00DD42  1FE9               	comf	(??_fl_fwrite+2)& (0+255),f,b
 16485  00DD44  1FEA               	comf	(??_fl_fwrite+3)& (0+255),f,b
 16486  00DD46  2BE7               	incf	??_fl_fwrite& (0+255),f,b
 16487  00DD48  0E00               	movlw	0
 16488  00DD4A  23E8               	addwfc	(??_fl_fwrite+1)& (0+255),f,b
 16489  00DD4C  23E9               	addwfc	(??_fl_fwrite+2)& (0+255),f,b
 16490  00DD4E  23EA               	addwfc	(??_fl_fwrite+3)& (0+255),f,b
 16491  00DD50  25E7               	addwf	??_fl_fwrite& (0+255),w,b
 16492  00DD52  0101               	movlb	1	; () banked
 16493  00DD54  6F17               	movwf	fl_fwrite@copyCount& (0+255),b
 16494  00DD56  0E02               	movlw	2
 16495  00DD58  0100               	movlb	0	; () banked
 16496  00DD5A  21E8               	addwfc	(??_fl_fwrite+1)& (0+255),w,b
 16497  00DD5C  0101               	movlb	1	; () banked
 16498  00DD5E  6F18               	movwf	(fl_fwrite@copyCount+1)& (0+255),b
 16499  00DD60  0E00               	movlw	0
 16500  00DD62  0100               	movlb	0	; () banked
 16501  00DD64  21E9               	addwfc	(??_fl_fwrite+2)& (0+255),w,b
 16502  00DD66  0101               	movlb	1	; () banked
 16503  00DD68  6F19               	movwf	(fl_fwrite@copyCount+2)& (0+255),b
 16504  00DD6A  0E00               	movlw	0
 16505  00DD6C  0100               	movlb	0	; () banked
 16506  00DD6E  21EA               	addwfc	(??_fl_fwrite+3)& (0+255),w,b
 16507  00DD70  0101               	movlb	1	; () banked
 16508  00DD72  6F1A               	movwf	(fl_fwrite@copyCount+3)& (0+255),b
 16509                           
 16510                           ;fat_filelib.c: 1330: if (copyCount > (length - bytesWritten))
 16511  00DD74  C113  F0E7         	movff	fl_fwrite@bytesWritten,??_fl_fwrite
 16512  00DD78  C114  F0E8         	movff	fl_fwrite@bytesWritten+1,??_fl_fwrite+1
 16513  00DD7C  C115  F0E9         	movff	fl_fwrite@bytesWritten+2,??_fl_fwrite+2
 16514  00DD80  C116  F0EA         	movff	fl_fwrite@bytesWritten+3,??_fl_fwrite+3
 16515  00DD84  0100               	movlb	0	; () banked
 16516  00DD86  1FE7               	comf	??_fl_fwrite& (0+255),f,b
 16517  00DD88  1FE8               	comf	(??_fl_fwrite+1)& (0+255),f,b
 16518  00DD8A  1FE9               	comf	(??_fl_fwrite+2)& (0+255),f,b
 16519  00DD8C  1FEA               	comf	(??_fl_fwrite+3)& (0+255),f,b
 16520  00DD8E  2BE7               	incf	??_fl_fwrite& (0+255),f,b
 16521  00DD90  0E00               	movlw	0
 16522  00DD92  23E8               	addwfc	(??_fl_fwrite+1)& (0+255),f,b
 16523  00DD94  23E9               	addwfc	(??_fl_fwrite+2)& (0+255),f,b
 16524  00DD96  23EA               	addwfc	(??_fl_fwrite+3)& (0+255),f,b
 16525  00DD98  0101               	movlb	1	; () banked
 16526  00DD9A  510F               	movf	fl_fwrite@length& (0+255),w,b
 16527  00DD9C  0100               	movlb	0	; () banked
 16528  00DD9E  25E7               	addwf	??_fl_fwrite& (0+255),w,b
 16529  00DDA0  6FEB               	movwf	(??_fl_fwrite+4)& (0+255),b
 16530  00DDA2  0101               	movlb	1	; () banked
 16531  00DDA4  5110               	movf	(fl_fwrite@length+1)& (0+255),w,b
 16532  00DDA6  0100               	movlb	0	; () banked
 16533  00DDA8  21E8               	addwfc	(??_fl_fwrite+1)& (0+255),w,b
 16534  00DDAA  6FEC               	movwf	(??_fl_fwrite+5)& (0+255),b
 16535  00DDAC  0101               	movlb	1	; () banked
 16536  00DDAE  5111               	movf	(fl_fwrite@length+2)& (0+255),w,b
 16537  00DDB0  0100               	movlb	0	; () banked
 16538  00DDB2  21E9               	addwfc	(??_fl_fwrite+2)& (0+255),w,b
 16539  00DDB4  6FED               	movwf	(??_fl_fwrite+6)& (0+255),b
 16540  00DDB6  0101               	movlb	1	; () banked
 16541  00DDB8  5112               	movf	(fl_fwrite@length+3)& (0+255),w,b
 16542  00DDBA  0100               	movlb	0	; () banked
 16543  00DDBC  21EA               	addwfc	(??_fl_fwrite+3)& (0+255),w,b
 16544  00DDBE  6FEE               	movwf	(??_fl_fwrite+7)& (0+255),b
 16545  00DDC0  0101               	movlb	1	; () banked
 16546  00DDC2  5117               	movf	fl_fwrite@copyCount& (0+255),w,b
 16547  00DDC4  0100               	movlb	0	; () banked
 16548  00DDC6  5DEB               	subwf	(??_fl_fwrite+4)& (0+255),w,b
 16549  00DDC8  0101               	movlb	1	; () banked
 16550  00DDCA  5118               	movf	(fl_fwrite@copyCount+1)& (0+255),w,b
 16551  00DDCC  0100               	movlb	0	; () banked
 16552  00DDCE  59EC               	subwfb	(??_fl_fwrite+5)& (0+255),w,b
 16553  00DDD0  0101               	movlb	1	; () banked
 16554  00DDD2  5119               	movf	(fl_fwrite@copyCount+2)& (0+255),w,b
 16555  00DDD4  0100               	movlb	0	; () banked
 16556  00DDD6  59ED               	subwfb	(??_fl_fwrite+6)& (0+255),w,b
 16557  00DDD8  0101               	movlb	1	; () banked
 16558  00DDDA  511A               	movf	(fl_fwrite@copyCount+3)& (0+255),w,b
 16559  00DDDC  0100               	movlb	0	; () banked
 16560  00DDDE  59EE               	subwfb	(??_fl_fwrite+7)& (0+255),w,b
 16561  00DDE0  E226               	bc	l12496
 16562                           
 16563                           ; BSR set to: 0
 16564                           ;fat_filelib.c: 1331: copyCount = (length - bytesWritten);
 16565  00DDE2  C113  F0E7         	movff	fl_fwrite@bytesWritten,??_fl_fwrite
 16566  00DDE6  C114  F0E8         	movff	fl_fwrite@bytesWritten+1,??_fl_fwrite+1
 16567  00DDEA  C115  F0E9         	movff	fl_fwrite@bytesWritten+2,??_fl_fwrite+2
 16568  00DDEE  C116  F0EA         	movff	fl_fwrite@bytesWritten+3,??_fl_fwrite+3
 16569  00DDF2  1FE7               	comf	??_fl_fwrite& (0+255),f,b
 16570  00DDF4  1FE8               	comf	(??_fl_fwrite+1)& (0+255),f,b
 16571  00DDF6  1FE9               	comf	(??_fl_fwrite+2)& (0+255),f,b
 16572  00DDF8  1FEA               	comf	(??_fl_fwrite+3)& (0+255),f,b
 16573  00DDFA  2BE7               	incf	??_fl_fwrite& (0+255),f,b
 16574  00DDFC  0E00               	movlw	0
 16575  00DDFE  23E8               	addwfc	(??_fl_fwrite+1)& (0+255),f,b
 16576  00DE00  23E9               	addwfc	(??_fl_fwrite+2)& (0+255),f,b
 16577  00DE02  23EA               	addwfc	(??_fl_fwrite+3)& (0+255),f,b
 16578  00DE04  0101               	movlb	1	; () banked
 16579  00DE06  510F               	movf	fl_fwrite@length& (0+255),w,b
 16580  00DE08  0100               	movlb	0	; () banked
 16581  00DE0A  25E7               	addwf	??_fl_fwrite& (0+255),w,b
 16582  00DE0C  0101               	movlb	1	; () banked
 16583  00DE0E  6F17               	movwf	fl_fwrite@copyCount& (0+255),b
 16584  00DE10  5110               	movf	(fl_fwrite@length+1)& (0+255),w,b
 16585  00DE12  0100               	movlb	0	; () banked
 16586  00DE14  21E8               	addwfc	(??_fl_fwrite+1)& (0+255),w,b
 16587  00DE16  0101               	movlb	1	; () banked
 16588  00DE18  6F18               	movwf	(fl_fwrite@copyCount+1)& (0+255),b
 16589  00DE1A  5111               	movf	(fl_fwrite@length+2)& (0+255),w,b
 16590  00DE1C  0100               	movlb	0	; () banked
 16591  00DE1E  21E9               	addwfc	(??_fl_fwrite+2)& (0+255),w,b
 16592  00DE20  0101               	movlb	1	; () banked
 16593  00DE22  6F19               	movwf	(fl_fwrite@copyCount+2)& (0+255),b
 16594  00DE24  5112               	movf	(fl_fwrite@length+3)& (0+255),w,b
 16595  00DE26  0100               	movlb	0	; () banked
 16596  00DE28  21EA               	addwfc	(??_fl_fwrite+3)& (0+255),w,b
 16597  00DE2A  0101               	movlb	1	; () banked
 16598  00DE2C  6F1A               	movwf	(fl_fwrite@copyCount+3)& (0+255),b
 16599  00DE2E                     l12496:
 16600                           
 16601                           ;fat_filelib.c: 1334: if (file->file_data_address != sector)
 16602  00DE2E  EE22 F039          	lfsr	2,569
 16603  00DE32  0101               	movlb	1	; () banked
 16604  00DE34  511B               	movf	fl_fwrite@file& (0+255),w,b
 16605  00DE36  26D9               	addwf	fsr2l,f,c
 16606  00DE38  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16607  00DE3A  22DA               	addwfc	fsr2h,f,c
 16608  00DE3C  CFDE F0E7          	movff	postinc2,??_fl_fwrite
 16609  00DE40  CFDE F0E8          	movff	postinc2,??_fl_fwrite+1
 16610  00DE44  CFDE F0E9          	movff	postinc2,??_fl_fwrite+2
 16611  00DE48  CFDE F0EA          	movff	postinc2,??_fl_fwrite+3
 16612  00DE4C  510E               	movf	(fl_fwrite@sector+3)& (0+255),w,b
 16613  00DE4E  0100               	movlb	0	; () banked
 16614  00DE50  19EA               	xorwf	(??_fl_fwrite+3)& (0+255),w,b
 16615  00DE52  E10E               	bnz	u15005
 16616  00DE54  0101               	movlb	1	; () banked
 16617  00DE56  510D               	movf	(fl_fwrite@sector+2)& (0+255),w,b
 16618  00DE58  0100               	movlb	0	; () banked
 16619  00DE5A  19E9               	xorwf	(??_fl_fwrite+2)& (0+255),w,b
 16620  00DE5C  E109               	bnz	u15005
 16621  00DE5E  0101               	movlb	1	; () banked
 16622  00DE60  510C               	movf	(fl_fwrite@sector+1)& (0+255),w,b
 16623  00DE62  0100               	movlb	0	; () banked
 16624  00DE64  19E8               	xorwf	(??_fl_fwrite+1)& (0+255),w,b
 16625  00DE66  E104               	bnz	u15005
 16626  00DE68  0101               	movlb	1	; () banked
 16627  00DE6A  510B               	movf	fl_fwrite@sector& (0+255),w,b
 16628  00DE6C  0100               	movlb	0	; () banked
 16629  00DE6E  19E7               	xorwf	??_fl_fwrite& (0+255),w,b
 16630  00DE70                     u15005:
 16631  00DE70  E069               	bz	l12512
 16632                           
 16633                           ; BSR set to: 0
 16634                           ;fat_filelib.c: 1335: {
 16635                           ;fat_filelib.c: 1337: if (file->file_data_dirty)
 16636  00DE72  EE22 F03D          	lfsr	2,573
 16637  00DE76  0101               	movlb	1	; () banked
 16638  00DE78  511B               	movf	fl_fwrite@file& (0+255),w,b
 16639  00DE7A  26D9               	addwf	fsr2l,f,c
 16640  00DE7C  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16641  00DE7E  22DA               	addwfc	fsr2h,f,c
 16642  00DE80  50DE               	movf	postinc2,w,c
 16643  00DE82  10DD               	iorwf	postdec2,w,c
 16644  00DE84  E007               	bz	l12502
 16645                           
 16646                           ; BSR set to: 1
 16647                           ;fat_filelib.c: 1338: fl_fflush(file);
 16648  00DE86  C11C  F0D5         	movff	fl_fwrite@file+1,fl_fflush@f+1
 16649  00DE8A  0100               	movlb	0	; () banked
 16650  00DE8C  C11B  F0D4         	movff	fl_fwrite@file,fl_fflush@f
 16651  00DE90  EC9B  F02B         	call	_fl_fflush	;wreg free
 16652  00DE94                     l12502:
 16653                           
 16654                           ;fat_filelib.c: 1341: if (copyCount != 512)
 16655  00DE94  0101               	movlb	1	; () banked
 16656  00DE96  5118               	movf	(fl_fwrite@copyCount+1)& (0+255),w,b
 16657  00DE98  0A02               	xorlw	2
 16658  00DE9A  1117               	iorwf	fl_fwrite@copyCount& (0+255),w,b
 16659  00DE9C  1119               	iorwf	(fl_fwrite@copyCount+2)& (0+255),w,b
 16660  00DE9E  111A               	iorwf	(fl_fwrite@copyCount+3)& (0+255),w,b
 16661  00DEA0  E03A               	bz	l12508
 16662                           
 16663                           ; BSR set to: 1
 16664                           ;fat_filelib.c: 1342: {
 16665                           ;fat_filelib.c: 1348: if (!_read_sectors(file, sector, file->file_data_sector, 1))
 16666  00DEA2  C11C  F081         	movff	fl_fwrite@file+1,__read_sectors@file+1
 16667  00DEA6  C11B  F080         	movff	fl_fwrite@file,__read_sectors@file
 16668  00DEAA  C10B  F082         	movff	fl_fwrite@sector,__read_sectors@offset
 16669  00DEAE  C10C  F083         	movff	fl_fwrite@sector+1,__read_sectors@offset+1
 16670  00DEB2  C10D  F084         	movff	fl_fwrite@sector+2,__read_sectors@offset+2
 16671  00DEB6  C10E  F085         	movff	fl_fwrite@sector+3,__read_sectors@offset+3
 16672  00DEBA  0E39               	movlw	57
 16673  00DEBC  251B               	addwf	fl_fwrite@file& (0+255),w,b
 16674  00DEBE  0100               	movlb	0	; () banked
 16675  00DEC0  6F86               	movwf	__read_sectors@buffer& (0+255),b
 16676  00DEC2  0E00               	movlw	0
 16677  00DEC4  0101               	movlb	1	; () banked
 16678  00DEC6  211C               	addwfc	(fl_fwrite@file+1)& (0+255),w,b
 16679  00DEC8  0100               	movlb	0	; () banked
 16680  00DECA  6F87               	movwf	(__read_sectors@buffer+1)& (0+255),b
 16681  00DECC  0E01               	movlw	1
 16682  00DECE  6F88               	movwf	__read_sectors@count& (0+255),b
 16683  00DED0  0E00               	movlw	0
 16684  00DED2  6B89               	clrf	(__read_sectors@count+1)& (0+255),b
 16685  00DED4  6B8A               	clrf	(__read_sectors@count+2)& (0+255),b
 16686  00DED6  6B8B               	clrf	(__read_sectors@count+3)& (0+255),b
 16687  00DED8  EC06  F05C         	call	__read_sectors	;wreg free
 16688  00DEDC  C080  F0E7         	movff	?__read_sectors,??_fl_fwrite
 16689  00DEE0  C081  F0E8         	movff	?__read_sectors+1,??_fl_fwrite+1
 16690  00DEE4  C082  F0E9         	movff	?__read_sectors+2,??_fl_fwrite+2
 16691  00DEE8  C083  F0EA         	movff	?__read_sectors+3,??_fl_fwrite+3
 16692  00DEEC  0100               	movlb	0	; () banked
 16693  00DEEE  51EA               	movf	(??_fl_fwrite+3)& (0+255),w,b
 16694  00DEF0  11E7               	iorwf	??_fl_fwrite& (0+255),w,b
 16695  00DEF2  11E8               	iorwf	(??_fl_fwrite+1)& (0+255),w,b
 16696  00DEF4  11E9               	iorwf	(??_fl_fwrite+2)& (0+255),w,b
 16697  00DEF6  E10F               	bnz	l12508
 16698                           
 16699                           ; BSR set to: 0
 16700                           ;fat_filelib.c: 1349: memset(file->file_data_sector, 0x00, 512);
 16701  00DEF8  0E39               	movlw	57
 16702  00DEFA  0101               	movlb	1	; () banked
 16703  00DEFC  251B               	addwf	fl_fwrite@file& (0+255),w,b
 16704  00DEFE  6E01               	movwf	memset@p1,c
 16705  00DF00  0E00               	movlw	0
 16706  00DF02  211C               	addwfc	(fl_fwrite@file+1)& (0+255),w,b
 16707  00DF04  6E02               	movwf	memset@p1+1,c
 16708  00DF06  6A04               	clrf	memset@c+1,c
 16709  00DF08  6A03               	clrf	memset@c,c
 16710  00DF0A  0E02               	movlw	2
 16711  00DF0C  6E06               	movwf	memset@n+1,c
 16712  00DF0E  0E00               	movlw	0
 16713  00DF10  6A05               	clrf	memset@n,c
 16714  00DF12  EC1A  F020         	call	_memset	;wreg free
 16715  00DF16                     l12508:
 16716                           
 16717                           ;fat_filelib.c: 1350: }
 16718                           ;fat_filelib.c: 1352: file->file_data_address = sector;
 16719  00DF16  EE22 F039          	lfsr	2,569
 16720  00DF1A  0101               	movlb	1	; () banked
 16721  00DF1C  511B               	movf	fl_fwrite@file& (0+255),w,b
 16722  00DF1E  26D9               	addwf	fsr2l,f,c
 16723  00DF20  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16724  00DF22  22DA               	addwfc	fsr2h,f,c
 16725  00DF24  C10B  FFDE         	movff	fl_fwrite@sector,postinc2
 16726  00DF28  C10C  FFDE         	movff	fl_fwrite@sector+1,postinc2
 16727  00DF2C  C10D  FFDE         	movff	fl_fwrite@sector+2,postinc2
 16728  00DF30  C10E  FFDE         	movff	fl_fwrite@sector+3,postinc2
 16729                           
 16730                           ; BSR set to: 1
 16731                           ;fat_filelib.c: 1353: file->file_data_dirty = 0;
 16732  00DF34  EE22 F03D          	lfsr	2,573
 16733  00DF38  511B               	movf	fl_fwrite@file& (0+255),w,b
 16734  00DF3A  26D9               	addwf	fsr2l,f,c
 16735  00DF3C  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16736  00DF3E  22DA               	addwfc	fsr2h,f,c
 16737  00DF40  6ADE               	clrf	postinc2,c
 16738  00DF42  6ADD               	clrf	postdec2,c
 16739  00DF44                     l12512:
 16740                           
 16741                           ;fat_filelib.c: 1354: }
 16742                           ;fat_filelib.c: 1357: memcpy((uint8*)(file->file_data_sector + offset), (uint8*)(buffer 
      +                          + bytesWritten), copyCount);
 16743  00DF44  0E39               	movlw	57
 16744  00DF46  0101               	movlb	1	; () banked
 16745  00DF48  2507               	addwf	fl_fwrite@offset& (0+255),w,b
 16746  00DF4A  0100               	movlb	0	; () banked
 16747  00DF4C  6FE7               	movwf	??_fl_fwrite& (0+255),b
 16748  00DF4E  0E00               	movlw	0
 16749  00DF50  0101               	movlb	1	; () banked
 16750  00DF52  2108               	addwfc	(fl_fwrite@offset+1)& (0+255),w,b
 16751  00DF54  0100               	movlb	0	; () banked
 16752  00DF56  6FE8               	movwf	(??_fl_fwrite+1)& (0+255),b
 16753  00DF58  51E7               	movf	??_fl_fwrite& (0+255),w,b
 16754  00DF5A  0101               	movlb	1	; () banked
 16755  00DF5C  251B               	addwf	fl_fwrite@file& (0+255),w,b
 16756  00DF5E  6E01               	movwf	memcpy@d1,c
 16757  00DF60  0100               	movlb	0	; () banked
 16758  00DF62  51E8               	movf	(??_fl_fwrite+1)& (0+255),w,b
 16759  00DF64  0101               	movlb	1	; () banked
 16760  00DF66  211C               	addwfc	(fl_fwrite@file+1)& (0+255),w,b
 16761  00DF68  6E02               	movwf	memcpy@d1+1,c
 16762  00DF6A  5113               	movf	fl_fwrite@bytesWritten& (0+255),w,b
 16763  00DF6C  2500               	addwf	fl_fwrite@buffer& (0+255),w,b
 16764  00DF6E  0100               	movlb	0	; () banked
 16765  00DF70  6FE9               	movwf	(??_fl_fwrite+2)& (0+255),b
 16766  00DF72  0101               	movlb	1	; () banked
 16767  00DF74  5114               	movf	(fl_fwrite@bytesWritten+1)& (0+255),w,b
 16768  00DF76  2101               	addwfc	(fl_fwrite@buffer+1)& (0+255),w,b
 16769  00DF78  0100               	movlb	0	; () banked
 16770  00DF7A  6FEA               	movwf	(??_fl_fwrite+3)& (0+255),b
 16771  00DF7C  0E00               	movlw	0
 16772  00DF7E  0101               	movlb	1	; () banked
 16773  00DF80  2102               	addwfc	(fl_fwrite@buffer+2)& (0+255),w,b
 16774  00DF82  0100               	movlb	0	; () banked
 16775  00DF84  6FEB               	movwf	(??_fl_fwrite+4)& (0+255),b
 16776  00DF86  C0E9  F003         	movff	??_fl_fwrite+2,memcpy@s1
 16777  00DF8A  C0EA  F004         	movff	??_fl_fwrite+3,memcpy@s1+1
 16778  00DF8E  C0EB  F005         	movff	??_fl_fwrite+4,memcpy@s1+2
 16779  00DF92  C117  F006         	movff	fl_fwrite@copyCount,memcpy@n
 16780  00DF96  C118  F007         	movff	fl_fwrite@copyCount+1,memcpy@n+1
 16781  00DF9A  ECA4  F023         	call	_memcpy	;wreg free
 16782                           
 16783                           ;fat_filelib.c: 1360: file->file_data_dirty = 1;
 16784  00DF9E  EE22 F03D          	lfsr	2,573
 16785  00DFA2  0101               	movlb	1	; () banked
 16786  00DFA4  511B               	movf	fl_fwrite@file& (0+255),w,b
 16787  00DFA6  26D9               	addwf	fsr2l,f,c
 16788  00DFA8  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16789  00DFAA  22DA               	addwfc	fsr2h,f,c
 16790  00DFAC  0E01               	movlw	1
 16791  00DFAE  6EDE               	movwf	postinc2,c
 16792  00DFB0  6ADD               	clrf	postdec2,c
 16793                           
 16794                           ; BSR set to: 1
 16795                           ;fat_filelib.c: 1363: bytesWritten += copyCount;
 16796  00DFB2  5117               	movf	fl_fwrite@copyCount& (0+255),w,b
 16797  00DFB4  2713               	addwf	fl_fwrite@bytesWritten& (0+255),f,b
 16798  00DFB6  5118               	movf	(fl_fwrite@copyCount+1)& (0+255),w,b
 16799  00DFB8  2314               	addwfc	(fl_fwrite@bytesWritten+1)& (0+255),f,b
 16800  00DFBA  5119               	movf	(fl_fwrite@copyCount+2)& (0+255),w,b
 16801  00DFBC  2315               	addwfc	(fl_fwrite@bytesWritten+2)& (0+255),f,b
 16802  00DFBE  511A               	movf	(fl_fwrite@copyCount+3)& (0+255),w,b
 16803  00DFC0  2316               	addwfc	(fl_fwrite@bytesWritten+3)& (0+255),f,b
 16804                           
 16805                           ; BSR set to: 1
 16806                           ;fat_filelib.c: 1366: file->bytenum += copyCount;
 16807  00DFC2  EE20 F008          	lfsr	2,8
 16808  00DFC6  511B               	movf	fl_fwrite@file& (0+255),w,b
 16809  00DFC8  26D9               	addwf	fsr2l,f,c
 16810  00DFCA  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16811  00DFCC  22DA               	addwfc	fsr2h,f,c
 16812  00DFCE  5117               	movf	fl_fwrite@copyCount& (0+255),w,b
 16813  00DFD0  26DE               	addwf	postinc2,f,c
 16814  00DFD2  5118               	movf	(fl_fwrite@copyCount+1)& (0+255),w,b
 16815  00DFD4  22DE               	addwfc	postinc2,f,c
 16816  00DFD6  5119               	movf	(fl_fwrite@copyCount+2)& (0+255),w,b
 16817  00DFD8  22DE               	addwfc	postinc2,f,c
 16818  00DFDA  511A               	movf	(fl_fwrite@copyCount+3)& (0+255),w,b
 16819  00DFDC  22DD               	addwfc	postdec2,f,c
 16820  00DFDE  52DD               	movf	postdec2,f,c
 16821  00DFE0  52DD               	movf	postdec2,f,c
 16822                           
 16823                           ; BSR set to: 1
 16824                           ;fat_filelib.c: 1369: sector++;
 16825  00DFE2  2B0B               	incf	fl_fwrite@sector& (0+255),f,b
 16826  00DFE4  0E00               	movlw	0
 16827  00DFE6  230C               	addwfc	(fl_fwrite@sector+1)& (0+255),f,b
 16828  00DFE8  230D               	addwfc	(fl_fwrite@sector+2)& (0+255),f,b
 16829  00DFEA  230E               	addwfc	(fl_fwrite@sector+3)& (0+255),f,b
 16830                           
 16831                           ; BSR set to: 1
 16832                           ;fat_filelib.c: 1370: offset = 0;
 16833  00DFEC  6B07               	clrf	fl_fwrite@offset& (0+255),b
 16834  00DFEE  6B08               	clrf	(fl_fwrite@offset+1)& (0+255),b
 16835  00DFF0  6B09               	clrf	(fl_fwrite@offset+2)& (0+255),b
 16836  00DFF2                     L39:
 16837  00DFF2  0101               	movlb	1	; () banked
 16838  00DFF4  6F0A               	movwf	(fl_fwrite@offset+3)& (0+255),b
 16839  00DFF6                     l12524:
 16840                           
 16841                           ; BSR set to: 1
 16842  00DFF6  0101               	movlb	1	; () banked
 16843  00DFF8  510F               	movf	fl_fwrite@length& (0+255),w,b
 16844  00DFFA  5D13               	subwf	fl_fwrite@bytesWritten& (0+255),w,b
 16845  00DFFC  5110               	movf	(fl_fwrite@length+1)& (0+255),w,b
 16846  00DFFE  5914               	subwfb	(fl_fwrite@bytesWritten+1)& (0+255),w,b
 16847  00E000  5111               	movf	(fl_fwrite@length+2)& (0+255),w,b
 16848  00E002  5915               	subwfb	(fl_fwrite@bytesWritten+2)& (0+255),w,b
 16849  00E004  5112               	movf	(fl_fwrite@length+3)& (0+255),w,b
 16850  00E006  5916               	subwfb	(fl_fwrite@bytesWritten+3)& (0+255),w,b
 16851  00E008  E201 D57C          	bnc	l12464
 16852  00E00C                     l12526:
 16853                           
 16854                           ; BSR set to: 1
 16855                           ;fat_filelib.c: 1371: }
 16856                           ;fat_filelib.c: 1372: }
 16857                           ;fat_filelib.c: 1375: if (file->bytenum > file->filelength)
 16858  00E00C  EE20 F008          	lfsr	2,8
 16859  00E010  0101               	movlb	1	; () banked
 16860  00E012  511B               	movf	fl_fwrite@file& (0+255),w,b
 16861  00E014  26D9               	addwf	fsr2l,f,c
 16862  00E016  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16863  00E018  22DA               	addwfc	fsr2h,f,c
 16864  00E01A  CFDE F0E7          	movff	postinc2,??_fl_fwrite
 16865  00E01E  CFDE F0E8          	movff	postinc2,??_fl_fwrite+1
 16866  00E022  CFDE F0E9          	movff	postinc2,??_fl_fwrite+2
 16867  00E026  CFDE F0EA          	movff	postinc2,??_fl_fwrite+3
 16868  00E02A  EE20 F00C          	lfsr	2,12
 16869  00E02E  511B               	movf	fl_fwrite@file& (0+255),w,b
 16870  00E030  26D9               	addwf	fsr2l,f,c
 16871  00E032  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16872  00E034  22DA               	addwfc	fsr2h,f,c
 16873  00E036  CFDE F0EB          	movff	postinc2,??_fl_fwrite+4
 16874  00E03A  CFDE F0EC          	movff	postinc2,??_fl_fwrite+5
 16875  00E03E  CFDE F0ED          	movff	postinc2,??_fl_fwrite+6
 16876  00E042  CFDE F0EE          	movff	postinc2,??_fl_fwrite+7
 16877  00E046  0100               	movlb	0	; () banked
 16878  00E048  51E7               	movf	??_fl_fwrite& (0+255),w,b
 16879  00E04A  5DEB               	subwf	(??_fl_fwrite+4)& (0+255),w,b
 16880  00E04C  51E8               	movf	(??_fl_fwrite+1)& (0+255),w,b
 16881  00E04E  59EC               	subwfb	(??_fl_fwrite+5)& (0+255),w,b
 16882  00E050  51E9               	movf	(??_fl_fwrite+2)& (0+255),w,b
 16883  00E052  59ED               	subwfb	(??_fl_fwrite+6)& (0+255),w,b
 16884  00E054  51EA               	movf	(??_fl_fwrite+3)& (0+255),w,b
 16885  00E056  59EE               	subwfb	(??_fl_fwrite+7)& (0+255),w,b
 16886  00E058  E21E               	bc	l12534
 16887                           
 16888                           ; BSR set to: 0
 16889                           ;fat_filelib.c: 1376: {
 16890                           ;fat_filelib.c: 1378: file->filelength = file->bytenum;
 16891  00E05A  EE20 F008          	lfsr	2,8
 16892  00E05E  0101               	movlb	1	; () banked
 16893  00E060  511B               	movf	fl_fwrite@file& (0+255),w,b
 16894  00E062  26D9               	addwf	fsr2l,f,c
 16895  00E064  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16896  00E066  22DA               	addwfc	fsr2h,f,c
 16897  00E068  EE10 F00C          	lfsr	1,12
 16898  00E06C  511B               	movf	fl_fwrite@file& (0+255),w,b
 16899  00E06E  26E1               	addwf	fsr1l,f,c
 16900  00E070  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16901  00E072  22E2               	addwfc	fsr1h,f,c
 16902  00E074  CFDE FFE6          	movff	postinc2,postinc1
 16903  00E078  CFDE FFE6          	movff	postinc2,postinc1
 16904  00E07C  CFDE FFE6          	movff	postinc2,postinc1
 16905  00E080  CFDD FFE5          	movff	postdec2,postdec1
 16906                           
 16907                           ; BSR set to: 1
 16908                           ;fat_filelib.c: 1382: file->filelength_changed = 1;
 16909  00E084  EE20 F010          	lfsr	2,16
 16910  00E088  511B               	movf	fl_fwrite@file& (0+255),w,b
 16911  00E08A  26D9               	addwf	fsr2l,f,c
 16912  00E08C  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16913  00E08E  22DA               	addwfc	fsr2h,f,c
 16914  00E090  0E01               	movlw	1
 16915  00E092  6EDE               	movwf	postinc2,c
 16916  00E094  6ADD               	clrf	postdec2,c
 16917  00E096                     l12534:
 16918                           
 16919                           ;fat_filelib.c: 1393: return (size*count);
 16920  00E096  0100               	movlb	0	; () banked
 16921  00E098  51E3               	movf	fl_fwrite@count& (0+255),w,b
 16922  00E09A  03E1               	mulwf	fl_fwrite@size& (0+255),b
 16923  00E09C  CFF3 F0E7          	movff	prodl,??_fl_fwrite
 16924  00E0A0  CFF4 F0E8          	movff	prodh,??_fl_fwrite+1
 16925  00E0A4  03E2               	mulwf	(fl_fwrite@size+1)& (0+255),b
 16926  00E0A6  50F3               	movf	243,w,c
 16927  00E0A8  27E8               	addwf	(??_fl_fwrite+1)& (0+255),f,b
 16928  00E0AA  51E4               	movf	(fl_fwrite@count+1)& (0+255),w,b
 16929  00E0AC  03E1               	mulwf	fl_fwrite@size& (0+255),b
 16930  00E0AE  50F3               	movf	243,w,c
 16931  00E0B0  27E8               	addwf	(??_fl_fwrite+1)& (0+255),f,b
 16932  00E0B2  C0E7  F0DE         	movff	??_fl_fwrite,?_fl_fwrite
 16933  00E0B6  C0E8  F0DF         	movff	??_fl_fwrite+1,?_fl_fwrite+1
 16934  00E0BA                     l722:
 16935                           
 16936                           ; BSR set to: 0
 16937  00E0BA  0012               	return	
 16938  00E0BC                     __end_of_fl_fwrite:
 16939                           	opt stack 0
 16940                           tosu	equ	0xFFF
 16941                           tosh	equ	0xFFE
 16942                           tosl	equ	0xFFD
 16943                           pclath	equ	0xFFA
 16944                           tblptru	equ	0xFF8
 16945                           tblptrh	equ	0xFF7
 16946                           tblptrl	equ	0xFF6
 16947                           tablat	equ	0xFF5
 16948                           prodh	equ	0xFF4
 16949                           prodl	equ	0xFF3
 16950                           indf0	equ	0xFEF
 16951                           postinc0	equ	0xFEE
 16952                           fsr0h	equ	0xFEA
 16953                           fsr0l	equ	0xFE9
 16954                           wreg	equ	0xFE8
 16955                           indf1	equ	0xFE7
 16956                           postinc1	equ	0xFE6
 16957                           postdec1	equ	0xFE5
 16958                           fsr1h	equ	0xFE2
 16959                           fsr1l	equ	0xFE1
 16960                           indf2	equ	0xFDF
 16961                           postinc2	equ	0xFDE
 16962                           postdec2	equ	0xFDD
 16963                           fsr2h	equ	0xFDA
 16964                           fsr2l	equ	0xFD9
 16965                           status	equ	0xFD8
 16966                           
 16967 ;; *************** function _fl_ftell *****************
 16968 ;; Defined at:
 16969 ;;		line 1203 in file "fat_filelib.c"
 16970 ;; Parameters:    Size  Location     Type
 16971 ;;  f               2    6[COMRAM] PTR void 
 16972 ;;		 -> RAM(3967), NULL(0), 
 16973 ;; Auto vars:     Size  Location     Type
 16974 ;;  pos             4   10[COMRAM] unsigned long 
 16975 ;; Return value:  Size  Location     Type
 16976 ;;                  4    6[COMRAM] long 
 16977 ;; Registers used:
 16978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16979 ;; Tracked objects:
 16980 ;;		On entry : 0/0
 16981 ;;		On exit  : 0/0
 16982 ;;		Unchanged: 0/0
 16983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16985 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16987 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16988 ;;Total ram usage:        8 bytes
 16989 ;; Hardware stack levels used:    1
 16990 ;; Hardware stack levels required when called:    1
 16991 ;; This function calls:
 16992 ;;		_fl_fgetpos
 16993 ;; This function is called by:
 16994 ;;		_File_append
 16995 ;; This function uses a non-reentrant model
 16996 ;;
 16997                           
 16998                           	psect	text41
 16999  00408E                     __ptext41:
 17000                           	opt stack 0
 17001  00408E                     _fl_ftell:
 17002                           	opt stack 28
 17003                           
 17004                           ;fat_filelib.c: 1205: uint32 pos = 0;
 17005                           
 17006                           ; BSR set to: 0
 17007                           ;incstack = 0
 17008  00408E  6A0B               	clrf	fl_ftell@pos,c
 17009  004090  6A0C               	clrf	fl_ftell@pos+1,c
 17010  004092  6A0D               	clrf	fl_ftell@pos+2,c
 17011  004094  6A0E               	clrf	fl_ftell@pos+3,c
 17012                           
 17013                           ;fat_filelib.c: 1207: fl_fgetpos(f, &pos);
 17014  004096  C008  F002         	movff	fl_ftell@f+1,fl_fgetpos@f+1
 17015  00409A  C007  F001         	movff	fl_ftell@f,fl_fgetpos@f
 17016  00409E  0E00               	movlw	high fl_ftell@pos
 17017  0040A0  6E04               	movwf	fl_fgetpos@position+1,c
 17018  0040A2  0E0B               	movlw	low fl_ftell@pos
 17019  0040A4  6E03               	movwf	fl_fgetpos@position,c
 17020  0040A6  ECA9  F020         	call	_fl_fgetpos	;wreg free
 17021                           
 17022                           ;fat_filelib.c: 1209: return (long)pos;
 17023  0040AA  C00B  F007         	movff	fl_ftell@pos,?_fl_ftell
 17024  0040AE  C00C  F008         	movff	fl_ftell@pos+1,?_fl_ftell+1
 17025  0040B2  C00D  F009         	movff	fl_ftell@pos+2,?_fl_ftell+2
 17026  0040B6  C00E  F00A         	movff	fl_ftell@pos+3,?_fl_ftell+3
 17027  0040BA  0012               	return	
 17028  0040BC                     __end_of_fl_ftell:
 17029                           	opt stack 0
 17030                           tosu	equ	0xFFF
 17031                           tosh	equ	0xFFE
 17032                           tosl	equ	0xFFD
 17033                           pclath	equ	0xFFA
 17034                           tblptru	equ	0xFF8
 17035                           tblptrh	equ	0xFF7
 17036                           tblptrl	equ	0xFF6
 17037                           tablat	equ	0xFF5
 17038                           prodh	equ	0xFF4
 17039                           prodl	equ	0xFF3
 17040                           indf0	equ	0xFEF
 17041                           postinc0	equ	0xFEE
 17042                           fsr0h	equ	0xFEA
 17043                           fsr0l	equ	0xFE9
 17044                           wreg	equ	0xFE8
 17045                           indf1	equ	0xFE7
 17046                           postinc1	equ	0xFE6
 17047                           postdec1	equ	0xFE5
 17048                           fsr1h	equ	0xFE2
 17049                           fsr1l	equ	0xFE1
 17050                           indf2	equ	0xFDF
 17051                           postinc2	equ	0xFDE
 17052                           postdec2	equ	0xFDD
 17053                           fsr2h	equ	0xFDA
 17054                           fsr2l	equ	0xFD9
 17055                           status	equ	0xFD8
 17056                           
 17057 ;; *************** function _fl_fgetpos *****************
 17058 ;; Defined at:
 17059 ;;		line 1184 in file "fat_filelib.c"
 17060 ;; Parameters:    Size  Location     Type
 17061 ;;  f               2    0[COMRAM] PTR void 
 17062 ;;		 -> RAM(3967), NULL(0), 
 17063 ;;  position        2    2[COMRAM] PTR unsigned long 
 17064 ;;		 -> fl_ftell@pos(4), 
 17065 ;; Auto vars:     Size  Location     Type
 17066 ;;  file            2    4[COMRAM] PTR struct sFL_FILE
 17067 ;;		 -> RAM(3967), NULL(0), 
 17068 ;; Return value:  Size  Location     Type
 17069 ;;                  2    0[COMRAM] int 
 17070 ;; Registers used:
 17071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17072 ;; Tracked objects:
 17073 ;;		On entry : 0/0
 17074 ;;		On exit  : 0/0
 17075 ;;		Unchanged: 0/0
 17076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17080 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17081 ;;Total ram usage:        6 bytes
 17082 ;; Hardware stack levels used:    1
 17083 ;; This function calls:
 17084 ;;		Nothing
 17085 ;; This function is called by:
 17086 ;;		_fl_ftell
 17087 ;; This function uses a non-reentrant model
 17088 ;;
 17089                           
 17090                           	psect	text42
 17091  004152                     __ptext42:
 17092                           	opt stack 0
 17093  004152                     _fl_fgetpos:
 17094                           	opt stack 28
 17095                           
 17096                           ;fat_filelib.c: 1186: FL_FILE *file = (FL_FILE *)f;
 17097                           
 17098                           ;incstack = 0
 17099  004152  C002  F006         	movff	fl_fgetpos@f+1,fl_fgetpos@file+1
 17100  004156  C001  F005         	movff	fl_fgetpos@f,fl_fgetpos@file
 17101                           
 17102                           ;fat_filelib.c: 1188: if (!file)
 17103  00415A  5006               	movf	fl_fgetpos@file+1,w,c
 17104  00415C  1005               	iorwf	fl_fgetpos@file,w,c
 17105  00415E  E014               	bz	l691
 17106                           
 17107                           ;fat_filelib.c: 1194: *position = file->bytenum;
 17108                           
 17109                           ;fat_filelib.c: 1191: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
 17110                           
 17111                           ;fat_filelib.c: 1189: return -1;
 17112                           ;	Return value of _fl_fgetpos is never used
 17113  004160  EE20 F008          	lfsr	2,8
 17114  004164  5005               	movf	fl_fgetpos@file,w,c
 17115  004166  26D9               	addwf	fsr2l,f,c
 17116  004168  5006               	movf	fl_fgetpos@file+1,w,c
 17117  00416A  22DA               	addwfc	fsr2h,f,c
 17118  00416C  C003  FFE1         	movff	fl_fgetpos@position,fsr1l
 17119  004170  C004  FFE2         	movff	fl_fgetpos@position+1,fsr1h
 17120  004174  CFDE FFE6          	movff	postinc2,postinc1
 17121  004178  CFDE FFE6          	movff	postinc2,postinc1
 17122  00417C  CFDE FFE6          	movff	postinc2,postinc1
 17123  004180  CFDD FFE5          	movff	postdec2,postdec1
 17124  004184  52E5               	movf	postdec1,f,c
 17125  004186  52E5               	movf	postdec1,f,c
 17126  004188                     l691:
 17127  004188  0012               	return	
 17128  00418A                     __end_of_fl_fgetpos:
 17129                           	opt stack 0
 17130                           tosu	equ	0xFFF
 17131                           tosh	equ	0xFFE
 17132                           tosl	equ	0xFFD
 17133                           pclath	equ	0xFFA
 17134                           tblptru	equ	0xFF8
 17135                           tblptrh	equ	0xFF7
 17136                           tblptrl	equ	0xFF6
 17137                           tablat	equ	0xFF5
 17138                           prodh	equ	0xFF4
 17139                           prodl	equ	0xFF3
 17140                           indf0	equ	0xFEF
 17141                           postinc0	equ	0xFEE
 17142                           fsr0h	equ	0xFEA
 17143                           fsr0l	equ	0xFE9
 17144                           wreg	equ	0xFE8
 17145                           indf1	equ	0xFE7
 17146                           postinc1	equ	0xFE6
 17147                           postdec1	equ	0xFE5
 17148                           fsr1h	equ	0xFE2
 17149                           fsr1l	equ	0xFE1
 17150                           indf2	equ	0xFDF
 17151                           postinc2	equ	0xFDE
 17152                           postdec2	equ	0xFDD
 17153                           fsr2h	equ	0xFDA
 17154                           fsr2l	equ	0xFD9
 17155                           status	equ	0xFD8
 17156                           
 17157 ;; *************** function _fl_fseek *****************
 17158 ;; Defined at:
 17159 ;;		line 1115 in file "fat_filelib.c"
 17160 ;; Parameters:    Size  Location     Type
 17161 ;;  f               2   22[COMRAM] PTR void 
 17162 ;;		 -> RAM(3967), NULL(0), 
 17163 ;;  offset          4   24[COMRAM] long 
 17164 ;;  origin          2   28[COMRAM] int 
 17165 ;; Auto vars:     Size  Location     Type
 17166 ;;  file            2   40[COMRAM] PTR struct sFL_FILE
 17167 ;;		 -> RAM(3967), NULL(0), 
 17168 ;;  res             2   38[COMRAM] int 
 17169 ;; Return value:  Size  Location     Type
 17170 ;;                  2   22[COMRAM] int 
 17171 ;; Registers used:
 17172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17173 ;; Tracked objects:
 17174 ;;		On entry : 0/0
 17175 ;;		On exit  : 0/0
 17176 ;;		Unchanged: 0/0
 17177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17178 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17179 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17180 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17181 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17182 ;;Total ram usage:       20 bytes
 17183 ;; Hardware stack levels used:    1
 17184 ;; Hardware stack levels required when called:    4
 17185 ;; This function calls:
 17186 ;;		_fl_init
 17187 ;; This function is called by:
 17188 ;;		_File_append
 17189 ;;		_File_read_
 17190 ;; This function uses a non-reentrant model
 17191 ;;
 17192                           
 17193                           	psect	text43
 17194  007212                     __ptext43:
 17195                           	opt stack 0
 17196  007212                     _fl_fseek:
 17197                           	opt stack 25
 17198                           
 17199                           ;fat_filelib.c: 1117: FL_FILE *file = (FL_FILE *)f;
 17200                           
 17201                           ;incstack = 0
 17202  007212  C018  F02A         	movff	fl_fseek@f+1,fl_fseek@file+1
 17203  007216  C017  F029         	movff	fl_fseek@f,fl_fseek@file
 17204                           
 17205                           ;fat_filelib.c: 1118: int res = -1;
 17206  00721A  6827               	setf	fl_fseek@res,c
 17207  00721C  6828               	setf	fl_fseek@res+1,c
 17208                           
 17209                           ;fat_filelib.c: 1121: { if (_filelib_init==0) fl_init(); };
 17210  00721E  0101               	movlb	1	; () banked
 17211  007220  5192               	movf	(__filelib_init+1)& (0+255),w,b
 17212  007222  1191               	iorwf	__filelib_init& (0+255),w,b
 17213  007224  B4D8               	btfsc	status,2,c
 17214                           
 17215                           ; BSR set to: 1
 17216  007226  EC3A  F029         	call	_fl_init	;wreg free
 17217                           
 17218                           ;fat_filelib.c: 1123: if (!file)
 17219  00722A  502A               	movf	fl_fseek@file+1,w,c
 17220  00722C  1029               	iorwf	fl_fseek@file,w,c
 17221  00722E  E101 D0C2          	bz	l668
 17222                           
 17223                           ;fat_filelib.c: 1126: if (origin == 2 && offset != 0)
 17224                           
 17225                           ;fat_filelib.c: 1124: return -1;
 17226                           ;	Return value of _fl_fseek is never used
 17227  007232  501D               	movf	fl_fseek@origin,w,c
 17228  007234  0A02               	xorlw	2
 17229  007236  101E               	iorwf	fl_fseek@origin+1,w,c
 17230  007238  E106               	bnz	l12376
 17231  00723A  501C               	movf	fl_fseek@offset+3,w,c
 17232  00723C  1019               	iorwf	fl_fseek@offset,w,c
 17233  00723E  101A               	iorwf	fl_fseek@offset+1,w,c
 17234  007240  101B               	iorwf	fl_fseek@offset+2,w,c
 17235  007242  E001 D0B8          	bnz	l668
 17236  007246                     l12376:
 17237                           
 17238                           ;fat_filelib.c: 1132: file->file_data_address = 0xFFFFFFFF;
 17239  007246  EE22 F039          	lfsr	2,569
 17240  00724A  5029               	movf	fl_fseek@file,w,c
 17241  00724C  26D9               	addwf	fsr2l,f,c
 17242  00724E  502A               	movf	fl_fseek@file+1,w,c
 17243  007250  22DA               	addwfc	fsr2h,f,c
 17244  007252  68DE               	setf	postinc2,c
 17245  007254  68DE               	setf	postinc2,c
 17246  007256  68DE               	setf	postinc2,c
 17247  007258  68DD               	setf	postdec2,c
 17248                           
 17249                           ;fat_filelib.c: 1133: file->file_data_dirty = 0;
 17250  00725A  EE22 F03D          	lfsr	2,573
 17251  00725E  5029               	movf	fl_fseek@file,w,c
 17252  007260  26D9               	addwf	fsr2l,f,c
 17253  007262  502A               	movf	fl_fseek@file+1,w,c
 17254  007264  22DA               	addwfc	fsr2h,f,c
 17255  007266  6ADE               	clrf	postinc2,c
 17256  007268  6ADD               	clrf	postdec2,c
 17257                           
 17258                           ;fat_filelib.c: 1135: if (origin == 0)
 17259  00726A  501E               	movf	fl_fseek@origin+1,w,c
 17260  00726C  101D               	iorwf	fl_fseek@origin,w,c
 17261  00726E  E10F               	bnz	l12386
 17262                           
 17263                           ;fat_filelib.c: 1136: {
 17264                           ;fat_filelib.c: 1137: file->bytenum = (uint32)offset;
 17265  007270  EE20 F008          	lfsr	2,8
 17266  007274  5029               	movf	fl_fseek@file,w,c
 17267  007276  26D9               	addwf	fsr2l,f,c
 17268  007278  502A               	movf	fl_fseek@file+1,w,c
 17269  00727A  22DA               	addwfc	fsr2h,f,c
 17270  00727C  C019  FFDE         	movff	fl_fseek@offset,postinc2
 17271  007280  C01A  FFDE         	movff	fl_fseek@offset+1,postinc2
 17272  007284  C01B  FFDE         	movff	fl_fseek@offset+2,postinc2
 17273  007288  C01C  FFDE         	movff	fl_fseek@offset+3,postinc2
 17274  00728C  D013               	goto	L42
 17275  00728E                     l12386:
 17276                           
 17277                           ;fat_filelib.c: 1144: else if (origin == 1)
 17278  00728E  041D               	decf	fl_fseek@origin,w,c
 17279  007290  101E               	iorwf	fl_fseek@origin+1,w,c
 17280  007292  E171               	bnz	l12404
 17281                           
 17282                           ;fat_filelib.c: 1145: {
 17283                           ;fat_filelib.c: 1147: if (offset >= 0)
 17284  007294  BE1C               	btfsc	fl_fseek@offset+3,7,c
 17285  007296  D034               	goto	l12394
 17286                           
 17287                           ;fat_filelib.c: 1148: {
 17288                           ;fat_filelib.c: 1149: file->bytenum += offset;
 17289  007298  EE20 F008          	lfsr	2,8
 17290  00729C  5029               	movf	fl_fseek@file,w,c
 17291  00729E  26D9               	addwf	fsr2l,f,c
 17292  0072A0  502A               	movf	fl_fseek@file+1,w,c
 17293  0072A2  22DA               	addwfc	fsr2h,f,c
 17294  0072A4  5019               	movf	fl_fseek@offset,w,c
 17295  0072A6  26DE               	addwf	postinc2,f,c
 17296  0072A8  501A               	movf	fl_fseek@offset+1,w,c
 17297  0072AA  22DE               	addwfc	postinc2,f,c
 17298  0072AC  501B               	movf	fl_fseek@offset+2,w,c
 17299  0072AE  22DE               	addwfc	postinc2,f,c
 17300  0072B0  501C               	movf	fl_fseek@offset+3,w,c
 17301  0072B2  22DD               	addwfc	postdec2,f,c
 17302  0072B4                     L42:
 17303                           
 17304                           ;fat_filelib.c: 1151: if (file->bytenum > file->filelength)
 17305  0072B4  EE20 F008          	lfsr	2,8
 17306  0072B8  5029               	movf	fl_fseek@file,w,c
 17307  0072BA  26D9               	addwf	fsr2l,f,c
 17308  0072BC  502A               	movf	fl_fseek@file+1,w,c
 17309  0072BE  22DA               	addwfc	fsr2h,f,c
 17310  0072C0  CFDE F01F          	movff	postinc2,??_fl_fseek
 17311  0072C4  CFDE F020          	movff	postinc2,??_fl_fseek+1
 17312  0072C8  CFDE F021          	movff	postinc2,??_fl_fseek+2
 17313  0072CC  CFDE F022          	movff	postinc2,??_fl_fseek+3
 17314  0072D0  EE20 F00C          	lfsr	2,12
 17315  0072D4  5029               	movf	fl_fseek@file,w,c
 17316  0072D6  26D9               	addwf	fsr2l,f,c
 17317  0072D8  502A               	movf	fl_fseek@file+1,w,c
 17318  0072DA  22DA               	addwfc	fsr2h,f,c
 17319  0072DC  CFDE F023          	movff	postinc2,??_fl_fseek+4
 17320  0072E0  CFDE F024          	movff	postinc2,??_fl_fseek+5
 17321  0072E4  CFDE F025          	movff	postinc2,??_fl_fseek+6
 17322  0072E8  CFDE F026          	movff	postinc2,??_fl_fseek+7
 17323  0072EC  501F               	movf	??_fl_fseek,w,c
 17324  0072EE  5C23               	subwf	??_fl_fseek+4,w,c
 17325  0072F0  5020               	movf	??_fl_fseek+1,w,c
 17326  0072F2  5824               	subwfb	??_fl_fseek+5,w,c
 17327  0072F4  5021               	movf	??_fl_fseek+2,w,c
 17328  0072F6  5825               	subwfb	??_fl_fseek+6,w,c
 17329  0072F8  5022               	movf	??_fl_fseek+3,w,c
 17330  0072FA  5826               	subwfb	??_fl_fseek+7,w,c
 17331  0072FC  E256               	bc	L40
 17332  0072FE  D03F               	goto	L41
 17333  007300                     l12394:
 17334                           
 17335                           ;fat_filelib.c: 1155: else
 17336                           ;fat_filelib.c: 1156: {
 17337                           ;fat_filelib.c: 1158: offset = -offset;
 17338  007300  1E1C               	comf	fl_fseek@offset+3,f,c
 17339  007302  1E1B               	comf	fl_fseek@offset+2,f,c
 17340  007304  1E1A               	comf	fl_fseek@offset+1,f,c
 17341  007306  6C19               	negf	fl_fseek@offset,c
 17342  007308  0E00               	movlw	0
 17343  00730A  221A               	addwfc	fl_fseek@offset+1,f,c
 17344  00730C  221B               	addwfc	fl_fseek@offset+2,f,c
 17345  00730E  221C               	addwfc	fl_fseek@offset+3,f,c
 17346                           
 17347                           ;fat_filelib.c: 1161: if ((uint32)offset > file->bytenum)
 17348  007310  EE20 F008          	lfsr	2,8
 17349  007314  5029               	movf	fl_fseek@file,w,c
 17350  007316  26D9               	addwf	fsr2l,f,c
 17351  007318  502A               	movf	fl_fseek@file+1,w,c
 17352  00731A  22DA               	addwfc	fsr2h,f,c
 17353  00731C  CFDE F01F          	movff	postinc2,??_fl_fseek
 17354  007320  CFDE F020          	movff	postinc2,??_fl_fseek+1
 17355  007324  CFDE F021          	movff	postinc2,??_fl_fseek+2
 17356  007328  CFDE F022          	movff	postinc2,??_fl_fseek+3
 17357  00732C  5019               	movf	fl_fseek@offset,w,c
 17358  00732E  5C1F               	subwf	??_fl_fseek,w,c
 17359  007330  501A               	movf	fl_fseek@offset+1,w,c
 17360  007332  5820               	subwfb	??_fl_fseek+1,w,c
 17361  007334  501B               	movf	fl_fseek@offset+2,w,c
 17362  007336  5821               	subwfb	??_fl_fseek+2,w,c
 17363  007338  501C               	movf	fl_fseek@offset+3,w,c
 17364  00733A  5822               	subwfb	??_fl_fseek+3,w,c
 17365  00733C  E20B               	bc	l12400
 17366                           
 17367                           ;fat_filelib.c: 1162: file->bytenum = 0;
 17368  00733E  EE20 F008          	lfsr	2,8
 17369  007342  5029               	movf	fl_fseek@file,w,c
 17370  007344  26D9               	addwf	fsr2l,f,c
 17371  007346  502A               	movf	fl_fseek@file+1,w,c
 17372  007348  22DA               	addwfc	fsr2h,f,c
 17373  00734A  6ADE               	clrf	postinc2,c
 17374  00734C  6ADE               	clrf	postinc2,c
 17375  00734E  6ADE               	clrf	postinc2,c
 17376  007350  6ADD               	clrf	postdec2,c
 17377  007352  D02B               	goto	L40
 17378  007354                     l12400:
 17379                           
 17380                           ;fat_filelib.c: 1163: else
 17381                           ;fat_filelib.c: 1164: file->bytenum-= offset;
 17382  007354  EE20 F008          	lfsr	2,8
 17383  007358  5029               	movf	fl_fseek@file,w,c
 17384  00735A  26D9               	addwf	fsr2l,f,c
 17385  00735C  502A               	movf	fl_fseek@file+1,w,c
 17386  00735E  22DA               	addwfc	fsr2h,f,c
 17387  007360  5019               	movf	fl_fseek@offset,w,c
 17388  007362  5EDE               	subwf	postinc2,f,c
 17389  007364  501A               	movf	fl_fseek@offset+1,w,c
 17390  007366  5ADE               	subwfb	postinc2,f,c
 17391  007368  501B               	movf	fl_fseek@offset+2,w,c
 17392  00736A  5ADE               	subwfb	postinc2,f,c
 17393  00736C  501C               	movf	fl_fseek@offset+3,w,c
 17394  00736E  5ADD               	subwfb	postdec2,f,c
 17395  007370  52DD               	movf	postdec2,f,c
 17396  007372  52DD               	movf	postdec2,f,c
 17397  007374  D01A               	goto	L40
 17398  007376                     l12404:
 17399                           
 17400                           ;fat_filelib.c: 1169: else if (origin == 2)
 17401  007376  501D               	movf	fl_fseek@origin,w,c
 17402  007378  0A02               	xorlw	2
 17403  00737A  101E               	iorwf	fl_fseek@origin+1,w,c
 17404  00737C  E11A               	bnz	l683
 17405  00737E                     L41:
 17406                           
 17407                           ;fat_filelib.c: 1170: {
 17408                           ;fat_filelib.c: 1171: file->bytenum = file->filelength;
 17409  00737E  EE20 F00C          	lfsr	2,12
 17410  007382  5029               	movf	fl_fseek@file,w,c
 17411  007384  26D9               	addwf	fsr2l,f,c
 17412  007386  502A               	movf	fl_fseek@file+1,w,c
 17413  007388  22DA               	addwfc	fsr2h,f,c
 17414  00738A  EE10 F008          	lfsr	1,8
 17415  00738E  5029               	movf	fl_fseek@file,w,c
 17416  007390  26E1               	addwf	fsr1l,f,c
 17417  007392  502A               	movf	fl_fseek@file+1,w,c
 17418  007394  22E2               	addwfc	fsr1h,f,c
 17419  007396  CFDE FFE6          	movff	postinc2,postinc1
 17420  00739A  CFDE FFE6          	movff	postinc2,postinc1
 17421  00739E  CFDE FFE6          	movff	postinc2,postinc1
 17422  0073A2  CFDD FFE5          	movff	postdec2,postdec1
 17423  0073A6  52E5               	movf	postdec1,f,c
 17424  0073A8  52E5               	movf	postdec1,f,c
 17425  0073AA                     L40:
 17426                           
 17427                           ;fat_filelib.c: 1172: res = 0;
 17428  0073AA  0E00               	movlw	0
 17429  0073AC  6E28               	movwf	fl_fseek@res+1,c
 17430  0073AE  6E27               	movwf	fl_fseek@res,c
 17431                           
 17432                           ;fat_filelib.c: 1173: }
 17433  0073B0  D002               	goto	l668
 17434  0073B2                     l683:
 17435                           
 17436                           ;fat_filelib.c: 1174: else
 17437                           ;fat_filelib.c: 1175: res = -1;
 17438  0073B2  6827               	setf	fl_fseek@res,c
 17439  0073B4  6828               	setf	fl_fseek@res+1,c
 17440  0073B6                     l668:
 17441  0073B6  0012               	return	
 17442  0073B8                     __end_of_fl_fseek:
 17443                           	opt stack 0
 17444                           tosu	equ	0xFFF
 17445                           tosh	equ	0xFFE
 17446                           tosl	equ	0xFFD
 17447                           pclath	equ	0xFFA
 17448                           tblptru	equ	0xFF8
 17449                           tblptrh	equ	0xFF7
 17450                           tblptrl	equ	0xFF6
 17451                           tablat	equ	0xFF5
 17452                           prodh	equ	0xFF4
 17453                           prodl	equ	0xFF3
 17454                           indf0	equ	0xFEF
 17455                           postinc0	equ	0xFEE
 17456                           fsr0h	equ	0xFEA
 17457                           fsr0l	equ	0xFE9
 17458                           wreg	equ	0xFE8
 17459                           indf1	equ	0xFE7
 17460                           postinc1	equ	0xFE6
 17461                           postdec1	equ	0xFE5
 17462                           fsr1h	equ	0xFE2
 17463                           fsr1l	equ	0xFE1
 17464                           indf2	equ	0xFDF
 17465                           postinc2	equ	0xFDE
 17466                           postdec2	equ	0xFDD
 17467                           fsr2h	equ	0xFDA
 17468                           fsr2l	equ	0xFD9
 17469                           status	equ	0xFD8
 17470                           
 17471 ;; *************** function _fl_fread *****************
 17472 ;; Defined at:
 17473 ;;		line 1013 in file "fat_filelib.c"
 17474 ;; Parameters:    Size  Location     Type
 17475 ;;  buffer          2   94[BANK0 ] PTR void 
 17476 ;;		 -> data(1), fl_fgetc@data(1), 
 17477 ;;  size            2   96[BANK0 ] int 
 17478 ;;  length          2   98[BANK0 ] int 
 17479 ;;  f               2  100[BANK0 ] PTR void 
 17480 ;;		 -> RAM(3967), NULL(0), 
 17481 ;; Auto vars:     Size  Location     Type
 17482 ;;  sectorsRead     4    0[BANK1 ] unsigned long 
 17483 ;;  sector          4    8[BANK1 ] unsigned long 
 17484 ;;  offset          4    4[BANK1 ] unsigned long 
 17485 ;;  file            2   18[BANK1 ] PTR struct sFL_FILE
 17486 ;;		 -> RAM(3967), NULL(0), 
 17487 ;;  bytesRead       2   16[BANK1 ] int 
 17488 ;;  count           2   14[BANK1 ] int 
 17489 ;;  copyCount       2   12[BANK1 ] int 
 17490 ;; Return value:  Size  Location     Type
 17491 ;;                  2   94[BANK0 ] int 
 17492 ;; Registers used:
 17493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17494 ;; Tracked objects:
 17495 ;;		On entry : 0/0
 17496 ;;		On exit  : 0/0
 17497 ;;		Unchanged: 0/0
 17498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17499 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17500 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17501 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17502 ;;      Totals:         0      24      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17503 ;;Total ram usage:       44 bytes
 17504 ;; Hardware stack levels used:    1
 17505 ;; Hardware stack levels required when called:    9
 17506 ;; This function calls:
 17507 ;;		___awdiv
 17508 ;;		__read_sectors
 17509 ;;		_fl_fflush
 17510 ;;		_fl_init
 17511 ;;		_memcpy
 17512 ;; This function is called by:
 17513 ;;		_fl_fgetc
 17514 ;;		_File_append
 17515 ;;		_File_read_
 17516 ;; This function uses a non-reentrant model
 17517 ;;
 17518                           
 17519                           	psect	text44
 17520  00CA1A                     __ptext44:
 17521                           	opt stack 0
 17522  00CA1A                     _fl_fread:
 17523                           	opt stack 19
 17524                           
 17525                           ;fat_filelib.c: 1015: uint32 sector;
 17526                           ;fat_filelib.c: 1016: uint32 offset;
 17527                           ;fat_filelib.c: 1017: int copyCount;
 17528                           ;fat_filelib.c: 1018: int count = size * length;
 17529                           
 17530                           ;incstack = 0
 17531  00CA1A  0100               	movlb	0	; () banked
 17532  00CA1C  51E2               	movf	fl_fread@length& (0+255),w,b
 17533  00CA1E  03E0               	mulwf	fl_fread@size& (0+255),b
 17534  00CA20  CFF3 F0E6          	movff	prodl,??_fl_fread
 17535  00CA24  CFF4 F0E7          	movff	prodh,??_fl_fread+1
 17536  00CA28  03E1               	mulwf	(fl_fread@size+1)& (0+255),b
 17537  00CA2A  50F3               	movf	243,w,c
 17538  00CA2C  27E7               	addwf	(??_fl_fread+1)& (0+255),f,b
 17539  00CA2E  51E3               	movf	(fl_fread@length+1)& (0+255),w,b
 17540  00CA30  03E0               	mulwf	fl_fread@size& (0+255),b
 17541  00CA32  50F3               	movf	243,w,c
 17542  00CA34  27E7               	addwf	(??_fl_fread+1)& (0+255),f,b
 17543  00CA36  C0E6  F10E         	movff	??_fl_fread,fl_fread@count
 17544  00CA3A  C0E7  F10F         	movff	??_fl_fread+1,fl_fread@count+1
 17545                           
 17546                           ; BSR set to: 0
 17547                           ;fat_filelib.c: 1019: int bytesRead = 0;
 17548  00CA3E  0101               	movlb	1	; () banked
 17549  00CA40  6B11               	clrf	(fl_fread@bytesRead+1)& (0+255),b
 17550  00CA42  6B10               	clrf	fl_fread@bytesRead& (0+255),b
 17551                           
 17552                           ; BSR set to: 1
 17553                           ;fat_filelib.c: 1021: FL_FILE *file = (FL_FILE *)f;
 17554  00CA44  C0E5  F113         	movff	fl_fread@f+1,fl_fread@file+1
 17555  00CA48  C0E4  F112         	movff	fl_fread@f,fl_fread@file
 17556                           
 17557                           ; BSR set to: 1
 17558                           ;fat_filelib.c: 1024: { if (_filelib_init==0) fl_init(); };
 17559  00CA4C  5192               	movf	(__filelib_init+1)& (0+255),w,b
 17560  00CA4E  1191               	iorwf	__filelib_init& (0+255),w,b
 17561  00CA50  B4D8               	btfsc	status,2,c
 17562                           
 17563                           ; BSR set to: 1
 17564  00CA52  EC3A  F029         	call	_fl_init	;wreg free
 17565                           
 17566                           ;fat_filelib.c: 1026: if (buffer==(0) || file==(0))
 17567  00CA56  0100               	movlb	0	; () banked
 17568  00CA58  51DF               	movf	(fl_fread@buffer+1)& (0+255),w,b
 17569  00CA5A  11DE               	iorwf	fl_fread@buffer& (0+255),w,b
 17570  00CA5C  E03F               	bz	u14130
 17571                           
 17572                           ; BSR set to: 0
 17573  00CA5E  0101               	movlb	1	; () banked
 17574  00CA60  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17575  00CA62  1112               	iorwf	fl_fread@file& (0+255),w,b
 17576  00CA64  E03B               	bz	u14130
 17577                           
 17578                           ;fat_filelib.c: 1030: if (!(file->flags & (1 << 0)))
 17579                           
 17580                           ; BSR set to: 0
 17581                           
 17582                           ;fat_filelib.c: 1027: return -1;
 17583  00CA66  EE22 F03F          	lfsr	2,575
 17584  00CA6A  5112               	movf	fl_fread@file& (0+255),w,b
 17585  00CA6C  26D9               	addwf	fsr2l,f,c
 17586  00CA6E  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17587  00CA70  22DA               	addwfc	fsr2h,f,c
 17588  00CA72  50DF               	movf	indf2,w,c
 17589  00CA74  0100               	movlb	0	; () banked
 17590  00CA76  6FE6               	movwf	??_fl_fread& (0+255),b
 17591  00CA78  A1E6               	btfss	??_fl_fread& (0+255),0,b
 17592  00CA7A  D030               	goto	u14130
 17593                           
 17594                           ; BSR set to: 0
 17595                           ;fat_filelib.c: 1034: if (!count)
 17596                           
 17597                           ; BSR set to: 0
 17598                           
 17599                           ; BSR set to: 0
 17600                           ;fat_filelib.c: 1031: return -1;
 17601  00CA7C  0101               	movlb	1	; () banked
 17602  00CA7E  510F               	movf	(fl_fread@count+1)& (0+255),w,b
 17603  00CA80  110E               	iorwf	fl_fread@count& (0+255),w,b
 17604  00CA82  E105               	bnz	l11964
 17605                           
 17606                           ; BSR set to: 1
 17607                           ;fat_filelib.c: 1035: return 0;
 17608  00CA84  0E00               	movlw	0
 17609  00CA86  0100               	movlb	0	; () banked
 17610  00CA88  6FDF               	movwf	(?_fl_fread+1)& (0+255),b
 17611  00CA8A  6FDE               	movwf	?_fl_fread& (0+255),b
 17612  00CA8C  D254               	goto	l648
 17613  00CA8E                     l11964:
 17614                           
 17615                           ;fat_filelib.c: 1038: if (file->bytenum >= file->filelength)
 17616  00CA8E  EE20 F00C          	lfsr	2,12
 17617  00CA92  0101               	movlb	1	; () banked
 17618  00CA94  5112               	movf	fl_fread@file& (0+255),w,b
 17619  00CA96  26D9               	addwf	fsr2l,f,c
 17620  00CA98  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17621  00CA9A  22DA               	addwfc	fsr2h,f,c
 17622  00CA9C  CFDE F0E6          	movff	postinc2,??_fl_fread
 17623  00CAA0  CFDE F0E7          	movff	postinc2,??_fl_fread+1
 17624  00CAA4  CFDE F0E8          	movff	postinc2,??_fl_fread+2
 17625  00CAA8  CFDE F0E9          	movff	postinc2,??_fl_fread+3
 17626  00CAAC  EE20 F008          	lfsr	2,8
 17627  00CAB0  5112               	movf	fl_fread@file& (0+255),w,b
 17628  00CAB2  26D9               	addwf	fsr2l,f,c
 17629  00CAB4  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17630  00CAB6  22DA               	addwfc	fsr2h,f,c
 17631  00CAB8  CFDE F0EA          	movff	postinc2,??_fl_fread+4
 17632  00CABC  CFDE F0EB          	movff	postinc2,??_fl_fread+5
 17633  00CAC0  CFDE F0EC          	movff	postinc2,??_fl_fread+6
 17634  00CAC4  CFDE F0ED          	movff	postinc2,??_fl_fread+7
 17635  00CAC8  0100               	movlb	0	; () banked
 17636  00CACA  51E6               	movf	??_fl_fread& (0+255),w,b
 17637  00CACC  5DEA               	subwf	(??_fl_fread+4)& (0+255),w,b
 17638  00CACE  51E7               	movf	(??_fl_fread+1)& (0+255),w,b
 17639  00CAD0  59EB               	subwfb	(??_fl_fread+5)& (0+255),w,b
 17640  00CAD2  51E8               	movf	(??_fl_fread+2)& (0+255),w,b
 17641  00CAD4  59EC               	subwfb	(??_fl_fread+6)& (0+255),w,b
 17642  00CAD6  51E9               	movf	(??_fl_fread+3)& (0+255),w,b
 17643  00CAD8  59ED               	subwfb	(??_fl_fread+7)& (0+255),w,b
 17644  00CADA  E304               	bnc	l11968
 17645  00CADC                     u14130:
 17646                           
 17647                           ; BSR set to: 0
 17648                           ;fat_filelib.c: 1039: return -1;
 17649  00CADC  0100               	movlb	0	; () banked
 17650  00CADE  69DE               	setf	?_fl_fread& (0+255),b
 17651  00CAE0  69DF               	setf	(?_fl_fread+1)& (0+255),b
 17652  00CAE2  D229               	goto	l648
 17653  00CAE4                     l11968:
 17654                           
 17655                           ; BSR set to: 0
 17656                           ;fat_filelib.c: 1042: if ( (file->bytenum + count) > file->filelength )
 17657  00CAE4  EE20 F008          	lfsr	2,8
 17658  00CAE8  0101               	movlb	1	; () banked
 17659  00CAEA  5112               	movf	fl_fread@file& (0+255),w,b
 17660  00CAEC  26D9               	addwf	fsr2l,f,c
 17661  00CAEE  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17662  00CAF0  22DA               	addwfc	fsr2h,f,c
 17663  00CAF2  CFDE F0E6          	movff	postinc2,??_fl_fread
 17664  00CAF6  CFDE F0E7          	movff	postinc2,??_fl_fread+1
 17665  00CAFA  CFDE F0E8          	movff	postinc2,??_fl_fread+2
 17666  00CAFE  CFDE F0E9          	movff	postinc2,??_fl_fread+3
 17667  00CB02  C10E  F0EA         	movff	fl_fread@count,??_fl_fread+4
 17668  00CB06  C10F  F0EB         	movff	fl_fread@count+1,??_fl_fread+5
 17669  00CB0A  0E00               	movlw	0
 17670  00CB0C  0100               	movlb	0	; () banked
 17671  00CB0E  BFEB               	btfsc	(??_fl_fread+5)& (0+255),7,b
 17672  00CB10  0EFF               	movlw	255
 17673  00CB12  6FEC               	movwf	(??_fl_fread+6)& (0+255),b
 17674  00CB14  6FED               	movwf	(??_fl_fread+7)& (0+255),b
 17675  00CB16  51E6               	movf	??_fl_fread& (0+255),w,b
 17676  00CB18  25EA               	addwf	(??_fl_fread+4)& (0+255),w,b
 17677  00CB1A  6FEE               	movwf	(??_fl_fread+8)& (0+255),b
 17678  00CB1C  51E7               	movf	(??_fl_fread+1)& (0+255),w,b
 17679  00CB1E  21EB               	addwfc	(??_fl_fread+5)& (0+255),w,b
 17680  00CB20  6FEF               	movwf	(??_fl_fread+9)& (0+255),b
 17681  00CB22  51E8               	movf	(??_fl_fread+2)& (0+255),w,b
 17682  00CB24  21EC               	addwfc	(??_fl_fread+6)& (0+255),w,b
 17683  00CB26  6FF0               	movwf	(??_fl_fread+10)& (0+255),b
 17684  00CB28  51E9               	movf	(??_fl_fread+3)& (0+255),w,b
 17685  00CB2A  21ED               	addwfc	(??_fl_fread+7)& (0+255),w,b
 17686  00CB2C  6FF1               	movwf	(??_fl_fread+11)& (0+255),b
 17687  00CB2E  EE20 F00C          	lfsr	2,12
 17688  00CB32  0101               	movlb	1	; () banked
 17689  00CB34  5112               	movf	fl_fread@file& (0+255),w,b
 17690  00CB36  26D9               	addwf	fsr2l,f,c
 17691  00CB38  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17692  00CB3A  22DA               	addwfc	fsr2h,f,c
 17693  00CB3C  CFDE F0F2          	movff	postinc2,??_fl_fread+12
 17694  00CB40  CFDE F0F3          	movff	postinc2,??_fl_fread+13
 17695  00CB44  CFDE F0F4          	movff	postinc2,??_fl_fread+14
 17696  00CB48  CFDE F0F5          	movff	postinc2,??_fl_fread+15
 17697  00CB4C  0100               	movlb	0	; () banked
 17698  00CB4E  51EE               	movf	(??_fl_fread+8)& (0+255),w,b
 17699  00CB50  5DF2               	subwf	(??_fl_fread+12)& (0+255),w,b
 17700  00CB52  51EF               	movf	(??_fl_fread+9)& (0+255),w,b
 17701  00CB54  59F3               	subwfb	(??_fl_fread+13)& (0+255),w,b
 17702  00CB56  51F0               	movf	(??_fl_fread+10)& (0+255),w,b
 17703  00CB58  59F4               	subwfb	(??_fl_fread+14)& (0+255),w,b
 17704  00CB5A  51F1               	movf	(??_fl_fread+11)& (0+255),w,b
 17705  00CB5C  59F5               	subwfb	(??_fl_fread+15)& (0+255),w,b
 17706  00CB5E  E223               	bc	l652
 17707                           
 17708                           ; BSR set to: 0
 17709                           ;fat_filelib.c: 1043: count = file->filelength - file->bytenum;
 17710  00CB60  EE20 F00C          	lfsr	2,12
 17711  00CB64  0101               	movlb	1	; () banked
 17712  00CB66  5112               	movf	fl_fread@file& (0+255),w,b
 17713  00CB68  26D9               	addwf	fsr2l,f,c
 17714  00CB6A  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17715  00CB6C  22DA               	addwfc	fsr2h,f,c
 17716  00CB6E  CFDE F0E6          	movff	postinc2,??_fl_fread
 17717  00CB72  CFDD F0E7          	movff	postdec2,??_fl_fread+1
 17718  00CB76  EE20 F008          	lfsr	2,8
 17719  00CB7A  5112               	movf	fl_fread@file& (0+255),w,b
 17720  00CB7C  26D9               	addwf	fsr2l,f,c
 17721  00CB7E  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17722  00CB80  22DA               	addwfc	fsr2h,f,c
 17723  00CB82  CFDE F0E8          	movff	postinc2,??_fl_fread+2
 17724  00CB86  CFDD F0E9          	movff	postdec2,??_fl_fread+3
 17725  00CB8A  0100               	movlb	0	; () banked
 17726  00CB8C  1FE8               	comf	(??_fl_fread+2)& (0+255),f,b
 17727  00CB8E  1FE9               	comf	(??_fl_fread+3)& (0+255),f,b
 17728  00CB90  4BE8               	infsnz	(??_fl_fread+2)& (0+255),f,b
 17729  00CB92  2BE9               	incf	(??_fl_fread+3)& (0+255),f,b
 17730  00CB94  51E6               	movf	??_fl_fread& (0+255),w,b
 17731  00CB96  25E8               	addwf	(??_fl_fread+2)& (0+255),w,b
 17732  00CB98  0101               	movlb	1	; () banked
 17733  00CB9A  6F0E               	movwf	fl_fread@count& (0+255),b
 17734  00CB9C  0100               	movlb	0	; () banked
 17735  00CB9E  51E7               	movf	(??_fl_fread+1)& (0+255),w,b
 17736  00CBA0  21E9               	addwfc	(??_fl_fread+3)& (0+255),w,b
 17737  00CBA2  0101               	movlb	1	; () banked
 17738  00CBA4  6F0F               	movwf	(fl_fread@count+1)& (0+255),b
 17739  00CBA6                     l652:
 17740                           
 17741                           ;fat_filelib.c: 1046: sector = file->bytenum / 512;
 17742  00CBA6  EE20 F008          	lfsr	2,8
 17743  00CBAA  0101               	movlb	1	; () banked
 17744  00CBAC  5112               	movf	fl_fread@file& (0+255),w,b
 17745  00CBAE  26D9               	addwf	fsr2l,f,c
 17746  00CBB0  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17747  00CBB2  22DA               	addwfc	fsr2h,f,c
 17748  00CBB4  CFDE F0E6          	movff	postinc2,??_fl_fread
 17749  00CBB8  CFDE F0E7          	movff	postinc2,??_fl_fread+1
 17750  00CBBC  CFDE F0E8          	movff	postinc2,??_fl_fread+2
 17751  00CBC0  CFDE F0E9          	movff	postinc2,??_fl_fread+3
 17752  00CBC4  0E0A               	movlw	10
 17753  00CBC6  D006               	goto	u14150
 17754  00CBC8                     u14155:
 17755  00CBC8  0100               	movlb	0	; () banked
 17756  00CBCA  90D8               	bcf	status,0,c
 17757  00CBCC  33E9               	rrcf	(??_fl_fread+3)& (0+255),f,b
 17758  00CBCE  33E8               	rrcf	(??_fl_fread+2)& (0+255),f,b
 17759  00CBD0  33E7               	rrcf	(??_fl_fread+1)& (0+255),f,b
 17760  00CBD2  33E6               	rrcf	??_fl_fread& (0+255),f,b
 17761  00CBD4                     u14150:
 17762  00CBD4  2EE8               	decfsz	wreg,f,c
 17763  00CBD6  D7F8               	goto	u14155
 17764  00CBD8  C0E6  F108         	movff	??_fl_fread,fl_fread@sector
 17765  00CBDC  C0E7  F109         	movff	??_fl_fread+1,fl_fread@sector+1
 17766  00CBE0  C0E8  F10A         	movff	??_fl_fread+2,fl_fread@sector+2
 17767  00CBE4  C0E9  F10B         	movff	??_fl_fread+3,fl_fread@sector+3
 17768                           
 17769                           ;fat_filelib.c: 1049: offset = file->bytenum % 512;
 17770  00CBE8  EE20 F008          	lfsr	2,8
 17771  00CBEC  0101               	movlb	1	; () banked
 17772  00CBEE  5112               	movf	fl_fread@file& (0+255),w,b
 17773  00CBF0  26D9               	addwf	fsr2l,f,c
 17774  00CBF2  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17775  00CBF4  22DA               	addwfc	fsr2h,f,c
 17776  00CBF6  0EFF               	movlw	255
 17777  00CBF8  14DE               	andwf	postinc2,w,c
 17778  00CBFA  6F04               	movwf	fl_fread@offset& (0+255),b
 17779  00CBFC  0E01               	movlw	1
 17780  00CBFE  14DE               	andwf	postinc2,w,c
 17781  00CC00  6F05               	movwf	(fl_fread@offset+1)& (0+255),b
 17782  00CC02  0E00               	movlw	0
 17783  00CC04  14DE               	andwf	postinc2,w,c
 17784  00CC06  6F06               	movwf	(fl_fread@offset+2)& (0+255),b
 17785  00CC08  0E00               	movlw	0
 17786  00CC0A  14DE               	andwf	postinc2,w,c
 17787  00CC0C  6F07               	movwf	(fl_fread@offset+3)& (0+255),b
 17788                           
 17789                           ;fat_filelib.c: 1051: while (bytesRead < count)
 17790  00CC0E  D181               	goto	l12010
 17791  00CC10                     l11972:
 17792                           
 17793                           ;fat_filelib.c: 1052: {
 17794                           ;fat_filelib.c: 1054: if ((offset == 0) && ((count - bytesRead) >= 512))
 17795  00CC10  0101               	movlb	1	; () banked
 17796  00CC12  5107               	movf	(fl_fread@offset+3)& (0+255),w,b
 17797  00CC14  1104               	iorwf	fl_fread@offset& (0+255),w,b
 17798  00CC16  1105               	iorwf	(fl_fread@offset+1)& (0+255),w,b
 17799  00CC18  1106               	iorwf	(fl_fread@offset+2)& (0+255),w,b
 17800  00CC1A  E179               	bnz	l11984
 17801                           
 17802                           ; BSR set to: 1
 17803  00CC1C  C110  F0E6         	movff	fl_fread@bytesRead,??_fl_fread
 17804  00CC20  C111  F0E7         	movff	fl_fread@bytesRead+1,??_fl_fread+1
 17805  00CC24  0100               	movlb	0	; () banked
 17806  00CC26  1FE6               	comf	??_fl_fread& (0+255),f,b
 17807  00CC28  1FE7               	comf	(??_fl_fread+1)& (0+255),f,b
 17808  00CC2A  4BE6               	infsnz	??_fl_fread& (0+255),f,b
 17809  00CC2C  2BE7               	incf	(??_fl_fread+1)& (0+255),f,b
 17810  00CC2E  0101               	movlb	1	; () banked
 17811  00CC30  510E               	movf	fl_fread@count& (0+255),w,b
 17812  00CC32  0100               	movlb	0	; () banked
 17813  00CC34  27E6               	addwf	??_fl_fread& (0+255),f,b
 17814  00CC36  0101               	movlb	1	; () banked
 17815  00CC38  510F               	movf	(fl_fread@count+1)& (0+255),w,b
 17816  00CC3A  0100               	movlb	0	; () banked
 17817  00CC3C  23E7               	addwfc	(??_fl_fread+1)& (0+255),f,b
 17818  00CC3E  51E7               	movf	(??_fl_fread+1)& (0+255),w,b
 17819  00CC40  0A80               	xorlw	128
 17820  00CC42  0F7E               	addlw	-130
 17821  00CC44  0E00               	movlw	0
 17822  00CC46  B4D8               	btfsc	status,2,c
 17823  00CC48  5DE6               	subwf	??_fl_fread& (0+255),w,b
 17824  00CC4A  E361               	bnc	l11984
 17825                           
 17826                           ; BSR set to: 0
 17827                           ;fat_filelib.c: 1055: {
 17828                           ;fat_filelib.c: 1057: uint32 sectorsRead = _read_sectors(file, sector, (uint8*)((uint8*)
      +                          buffer + bytesRead), (count - bytesRead) / 512);
 17829  00CC4C  C113  F081         	movff	fl_fread@file+1,__read_sectors@file+1
 17830  00CC50  C112  F080         	movff	fl_fread@file,__read_sectors@file
 17831  00CC54  C108  F082         	movff	fl_fread@sector,__read_sectors@offset
 17832  00CC58  C109  F083         	movff	fl_fread@sector+1,__read_sectors@offset+1
 17833  00CC5C  C10A  F084         	movff	fl_fread@sector+2,__read_sectors@offset+2
 17834  00CC60  C10B  F085         	movff	fl_fread@sector+3,__read_sectors@offset+3
 17835  00CC64  0101               	movlb	1	; () banked
 17836  00CC66  5110               	movf	fl_fread@bytesRead& (0+255),w,b
 17837  00CC68  0100               	movlb	0	; () banked
 17838  00CC6A  25DE               	addwf	fl_fread@buffer& (0+255),w,b
 17839  00CC6C  6F86               	movwf	__read_sectors@buffer& (0+255),b
 17840  00CC6E  0101               	movlb	1	; () banked
 17841  00CC70  5111               	movf	(fl_fread@bytesRead+1)& (0+255),w,b
 17842  00CC72  0100               	movlb	0	; () banked
 17843  00CC74  21DF               	addwfc	(fl_fread@buffer+1)& (0+255),w,b
 17844  00CC76  6F87               	movwf	(__read_sectors@buffer+1)& (0+255),b
 17845  00CC78  C110  F0E6         	movff	fl_fread@bytesRead,??_fl_fread
 17846  00CC7C  C111  F0E7         	movff	fl_fread@bytesRead+1,??_fl_fread+1
 17847  00CC80  1FE6               	comf	??_fl_fread& (0+255),f,b
 17848  00CC82  1FE7               	comf	(??_fl_fread+1)& (0+255),f,b
 17849  00CC84  4BE6               	infsnz	??_fl_fread& (0+255),f,b
 17850  00CC86  2BE7               	incf	(??_fl_fread+1)& (0+255),f,b
 17851  00CC88  0101               	movlb	1	; () banked
 17852  00CC8A  510E               	movf	fl_fread@count& (0+255),w,b
 17853  00CC8C  0100               	movlb	0	; () banked
 17854  00CC8E  25E6               	addwf	??_fl_fread& (0+255),w,b
 17855  00CC90  6E01               	movwf	___awdiv@dividend,c
 17856  00CC92  0101               	movlb	1	; () banked
 17857  00CC94  510F               	movf	(fl_fread@count+1)& (0+255),w,b
 17858  00CC96  0100               	movlb	0	; () banked
 17859  00CC98  21E7               	addwfc	(??_fl_fread+1)& (0+255),w,b
 17860  00CC9A  6E02               	movwf	___awdiv@dividend+1,c
 17861  00CC9C  0E02               	movlw	2
 17862  00CC9E  6E04               	movwf	___awdiv@divisor+1,c
 17863  00CCA0  0E00               	movlw	0
 17864  00CCA2  6A03               	clrf	___awdiv@divisor,c
 17865  00CCA4  EC10  F02A         	call	___awdiv	;wreg free
 17866  00CCA8  C001  F088         	movff	?___awdiv,__read_sectors@count
 17867  00CCAC  C002  F089         	movff	?___awdiv+1,__read_sectors@count+1
 17868  00CCB0  0E00               	movlw	0
 17869  00CCB2  0100               	movlb	0	; () banked
 17870  00CCB4  BF89               	btfsc	(__read_sectors@count+1)& (0+255),7,b
 17871  00CCB6  0EFF               	movlw	-1
 17872  00CCB8  6F8A               	movwf	(__read_sectors@count+2)& (0+255),b
 17873  00CCBA  6F8B               	movwf	(__read_sectors@count+3)& (0+255),b
 17874  00CCBC  EC06  F05C         	call	__read_sectors	;wreg free
 17875  00CCC0  C080  F100         	movff	?__read_sectors,fl_fread@sectorsRead
 17876  00CCC4  C081  F101         	movff	?__read_sectors+1,fl_fread@sectorsRead+1
 17877  00CCC8  C082  F102         	movff	?__read_sectors+2,fl_fread@sectorsRead+2
 17878  00CCCC  C083  F103         	movff	?__read_sectors+3,fl_fread@sectorsRead+3
 17879                           
 17880                           ;fat_filelib.c: 1058: if (sectorsRead)
 17881  00CCD0  0101               	movlb	1	; () banked
 17882  00CCD2  5103               	movf	(fl_fread@sectorsRead+3)& (0+255),w,b
 17883  00CCD4  1100               	iorwf	fl_fread@sectorsRead& (0+255),w,b
 17884  00CCD6  1101               	iorwf	(fl_fread@sectorsRead+1)& (0+255),w,b
 17885  00CCD8  1102               	iorwf	(fl_fread@sectorsRead+2)& (0+255),w,b
 17886  00CCDA  E101 D128          	bz	l658
 17887                           
 17888                           ; BSR set to: 1
 17889                           ;fat_filelib.c: 1059: {
 17890                           ;fat_filelib.c: 1061: copyCount = 512 * sectorsRead;
 17891  00CCDE  C100  F0E6         	movff	fl_fread@sectorsRead,??_fl_fread
 17892  00CCE2  C101  F0E7         	movff	fl_fread@sectorsRead+1,??_fl_fread+1
 17893  00CCE6  0E09               	movlw	9
 17894  00CCE8                     u14195:
 17895  00CCE8  90D8               	bcf	status,0,c
 17896  00CCEA  0100               	movlb	0	; () banked
 17897  00CCEC  37E6               	rlcf	??_fl_fread& (0+255),f,b
 17898  00CCEE  37E7               	rlcf	(??_fl_fread+1)& (0+255),f,b
 17899  00CCF0  2EE8               	decfsz	wreg,f,c
 17900  00CCF2  D7FA               	goto	u14195
 17901  00CCF4  C0E6  F10C         	movff	??_fl_fread,fl_fread@copyCount
 17902  00CCF8  C0E7  F10D         	movff	??_fl_fread+1,fl_fread@copyCount+1
 17903                           
 17904                           ;fat_filelib.c: 1064: sector+= sectorsRead;
 17905  00CCFC  0101               	movlb	1	; () banked
 17906  00CCFE  5100               	movf	fl_fread@sectorsRead& (0+255),w,b
 17907  00CD00  2708               	addwf	fl_fread@sector& (0+255),f,b
 17908  00CD02  5101               	movf	(fl_fread@sectorsRead+1)& (0+255),w,b
 17909  00CD04  2309               	addwfc	(fl_fread@sector+1)& (0+255),f,b
 17910  00CD06  5102               	movf	(fl_fread@sectorsRead+2)& (0+255),w,b
 17911  00CD08  230A               	addwfc	(fl_fread@sector+2)& (0+255),f,b
 17912  00CD0A  5103               	movf	(fl_fread@sectorsRead+3)& (0+255),w,b
 17913  00CD0C  D0E7               	goto	L43
 17914  00CD0E                     l11984:
 17915                           
 17916                           ;fat_filelib.c: 1070: else
 17917                           ;fat_filelib.c: 1071: {
 17918                           ;fat_filelib.c: 1073: if (file->file_data_address != sector)
 17919  00CD0E  EE22 F039          	lfsr	2,569
 17920  00CD12  0101               	movlb	1	; () banked
 17921  00CD14  5112               	movf	fl_fread@file& (0+255),w,b
 17922  00CD16  26D9               	addwf	fsr2l,f,c
 17923  00CD18  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17924  00CD1A  22DA               	addwfc	fsr2h,f,c
 17925  00CD1C  CFDE F0E6          	movff	postinc2,??_fl_fread
 17926  00CD20  CFDE F0E7          	movff	postinc2,??_fl_fread+1
 17927  00CD24  CFDE F0E8          	movff	postinc2,??_fl_fread+2
 17928  00CD28  CFDE F0E9          	movff	postinc2,??_fl_fread+3
 17929  00CD2C  510B               	movf	(fl_fread@sector+3)& (0+255),w,b
 17930  00CD2E  0100               	movlb	0	; () banked
 17931  00CD30  19E9               	xorwf	(??_fl_fread+3)& (0+255),w,b
 17932  00CD32  E10E               	bnz	u14205
 17933  00CD34  0101               	movlb	1	; () banked
 17934  00CD36  510A               	movf	(fl_fread@sector+2)& (0+255),w,b
 17935  00CD38  0100               	movlb	0	; () banked
 17936  00CD3A  19E8               	xorwf	(??_fl_fread+2)& (0+255),w,b
 17937  00CD3C  E109               	bnz	u14205
 17938  00CD3E  0101               	movlb	1	; () banked
 17939  00CD40  5109               	movf	(fl_fread@sector+1)& (0+255),w,b
 17940  00CD42  0100               	movlb	0	; () banked
 17941  00CD44  19E7               	xorwf	(??_fl_fread+1)& (0+255),w,b
 17942  00CD46  E104               	bnz	u14205
 17943  00CD48  0101               	movlb	1	; () banked
 17944  00CD4A  5108               	movf	fl_fread@sector& (0+255),w,b
 17945  00CD4C  0100               	movlb	0	; () banked
 17946  00CD4E  19E6               	xorwf	??_fl_fread& (0+255),w,b
 17947  00CD50                     u14205:
 17948  00CD50  E055               	bz	l11994
 17949                           
 17950                           ; BSR set to: 0
 17951                           ;fat_filelib.c: 1074: {
 17952                           ;fat_filelib.c: 1076: if (file->file_data_dirty)
 17953  00CD52  EE22 F03D          	lfsr	2,573
 17954  00CD56  0101               	movlb	1	; () banked
 17955  00CD58  5112               	movf	fl_fread@file& (0+255),w,b
 17956  00CD5A  26D9               	addwf	fsr2l,f,c
 17957  00CD5C  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17958  00CD5E  22DA               	addwfc	fsr2h,f,c
 17959  00CD60  50DE               	movf	postinc2,w,c
 17960  00CD62  10DD               	iorwf	postdec2,w,c
 17961  00CD64  E007               	bz	l661
 17962                           
 17963                           ; BSR set to: 1
 17964                           ;fat_filelib.c: 1077: fl_fflush(file);
 17965  00CD66  C113  F0D5         	movff	fl_fread@file+1,fl_fflush@f+1
 17966  00CD6A  0100               	movlb	0	; () banked
 17967  00CD6C  C112  F0D4         	movff	fl_fread@file,fl_fflush@f
 17968  00CD70  EC9B  F02B         	call	_fl_fflush	;wreg free
 17969  00CD74                     l661:
 17970                           
 17971                           ;fat_filelib.c: 1080: if (!_read_sectors(file, sector, file->file_data_sector, 1))
 17972  00CD74  C113  F081         	movff	fl_fread@file+1,__read_sectors@file+1
 17973  00CD78  C112  F080         	movff	fl_fread@file,__read_sectors@file
 17974  00CD7C  C108  F082         	movff	fl_fread@sector,__read_sectors@offset
 17975  00CD80  C109  F083         	movff	fl_fread@sector+1,__read_sectors@offset+1
 17976  00CD84  C10A  F084         	movff	fl_fread@sector+2,__read_sectors@offset+2
 17977  00CD88  C10B  F085         	movff	fl_fread@sector+3,__read_sectors@offset+3
 17978  00CD8C  0E39               	movlw	57
 17979  00CD8E  0101               	movlb	1	; () banked
 17980  00CD90  2512               	addwf	fl_fread@file& (0+255),w,b
 17981  00CD92  0100               	movlb	0	; () banked
 17982  00CD94  6F86               	movwf	__read_sectors@buffer& (0+255),b
 17983  00CD96  0E00               	movlw	0
 17984  00CD98  0101               	movlb	1	; () banked
 17985  00CD9A  2113               	addwfc	(fl_fread@file+1)& (0+255),w,b
 17986  00CD9C  0100               	movlb	0	; () banked
 17987  00CD9E  6F87               	movwf	(__read_sectors@buffer+1)& (0+255),b
 17988  00CDA0  0E01               	movlw	1
 17989  00CDA2  6F88               	movwf	__read_sectors@count& (0+255),b
 17990  00CDA4  0E00               	movlw	0
 17991  00CDA6  6B89               	clrf	(__read_sectors@count+1)& (0+255),b
 17992  00CDA8  6B8A               	clrf	(__read_sectors@count+2)& (0+255),b
 17993  00CDAA  6B8B               	clrf	(__read_sectors@count+3)& (0+255),b
 17994  00CDAC  EC06  F05C         	call	__read_sectors	;wreg free
 17995  00CDB0  C080  F0E6         	movff	?__read_sectors,??_fl_fread
 17996  00CDB4  C081  F0E7         	movff	?__read_sectors+1,??_fl_fread+1
 17997  00CDB8  C082  F0E8         	movff	?__read_sectors+2,??_fl_fread+2
 17998  00CDBC  C083  F0E9         	movff	?__read_sectors+3,??_fl_fread+3
 17999  00CDC0  0100               	movlb	0	; () banked
 18000  00CDC2  51E9               	movf	(??_fl_fread+3)& (0+255),w,b
 18001  00CDC4  11E6               	iorwf	??_fl_fread& (0+255),w,b
 18002  00CDC6  11E7               	iorwf	(??_fl_fread+1)& (0+255),w,b
 18003  00CDC8  11E8               	iorwf	(??_fl_fread+2)& (0+255),w,b
 18004  00CDCA  E101 D0B0          	bz	l658
 18005                           
 18006                           ; BSR set to: 0
 18007                           ;fat_filelib.c: 1084: file->file_data_address = sector;
 18008                           
 18009                           ; BSR set to: 0
 18010                           
 18011                           ; BSR set to: 0
 18012                           ;fat_filelib.c: 1082: break;
 18013  00CDCE  EE22 F039          	lfsr	2,569
 18014  00CDD2  0101               	movlb	1	; () banked
 18015  00CDD4  5112               	movf	fl_fread@file& (0+255),w,b
 18016  00CDD6  26D9               	addwf	fsr2l,f,c
 18017  00CDD8  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 18018  00CDDA  22DA               	addwfc	fsr2h,f,c
 18019  00CDDC  C108  FFDE         	movff	fl_fread@sector,postinc2
 18020  00CDE0  C109  FFDE         	movff	fl_fread@sector+1,postinc2
 18021  00CDE4  C10A  FFDE         	movff	fl_fread@sector+2,postinc2
 18022  00CDE8  C10B  FFDE         	movff	fl_fread@sector+3,postinc2
 18023                           
 18024                           ;fat_filelib.c: 1085: file->file_data_dirty = 0;
 18025  00CDEC  EE22 F03D          	lfsr	2,573
 18026  00CDF0  5112               	movf	fl_fread@file& (0+255),w,b
 18027  00CDF2  26D9               	addwf	fsr2l,f,c
 18028  00CDF4  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 18029  00CDF6  22DA               	addwfc	fsr2h,f,c
 18030  00CDF8  6ADE               	clrf	postinc2,c
 18031  00CDFA  6ADD               	clrf	postdec2,c
 18032  00CDFC                     l11994:
 18033                           
 18034                           ;fat_filelib.c: 1086: }
 18035                           ;fat_filelib.c: 1089: copyCount = 512 - offset;
 18036  00CDFC  C104  F0E6         	movff	fl_fread@offset,??_fl_fread
 18037  00CE00  C105  F0E7         	movff	fl_fread@offset+1,??_fl_fread+1
 18038  00CE04  0100               	movlb	0	; () banked
 18039  00CE06  1FE6               	comf	??_fl_fread& (0+255),f,b
 18040  00CE08  1FE7               	comf	(??_fl_fread+1)& (0+255),f,b
 18041  00CE0A  4BE6               	infsnz	??_fl_fread& (0+255),f,b
 18042  00CE0C  2BE7               	incf	(??_fl_fread+1)& (0+255),f,b
 18043  00CE0E  0E00               	movlw	0
 18044  00CE10  25E6               	addwf	??_fl_fread& (0+255),w,b
 18045  00CE12  0101               	movlb	1	; () banked
 18046  00CE14  6F0C               	movwf	fl_fread@copyCount& (0+255),b
 18047  00CE16  0E02               	movlw	2
 18048  00CE18  0100               	movlb	0	; () banked
 18049  00CE1A  21E7               	addwfc	(??_fl_fread+1)& (0+255),w,b
 18050  00CE1C  0101               	movlb	1	; () banked
 18051  00CE1E  6F0D               	movwf	(fl_fread@copyCount+1)& (0+255),b
 18052                           
 18053                           ; BSR set to: 1
 18054                           ;fat_filelib.c: 1092: if (copyCount > (count - bytesRead))
 18055  00CE20  C110  F0E6         	movff	fl_fread@bytesRead,??_fl_fread
 18056  00CE24  C111  F0E7         	movff	fl_fread@bytesRead+1,??_fl_fread+1
 18057  00CE28  0100               	movlb	0	; () banked
 18058  00CE2A  1FE6               	comf	??_fl_fread& (0+255),f,b
 18059  00CE2C  1FE7               	comf	(??_fl_fread+1)& (0+255),f,b
 18060  00CE2E  4BE6               	infsnz	??_fl_fread& (0+255),f,b
 18061  00CE30  2BE7               	incf	(??_fl_fread+1)& (0+255),f,b
 18062  00CE32  0101               	movlb	1	; () banked
 18063  00CE34  510E               	movf	fl_fread@count& (0+255),w,b
 18064  00CE36  0100               	movlb	0	; () banked
 18065  00CE38  27E6               	addwf	??_fl_fread& (0+255),f,b
 18066  00CE3A  0101               	movlb	1	; () banked
 18067  00CE3C  510F               	movf	(fl_fread@count+1)& (0+255),w,b
 18068  00CE3E  0100               	movlb	0	; () banked
 18069  00CE40  23E7               	addwfc	(??_fl_fread+1)& (0+255),f,b
 18070  00CE42  51E7               	movf	(??_fl_fread+1)& (0+255),w,b
 18071  00CE44  0A80               	xorlw	128
 18072  00CE46  6FE8               	movwf	(??_fl_fread+2)& (0+255),b
 18073  00CE48  0101               	movlb	1	; () banked
 18074  00CE4A  510C               	movf	fl_fread@copyCount& (0+255),w,b
 18075  00CE4C  0100               	movlb	0	; () banked
 18076  00CE4E  5DE6               	subwf	??_fl_fread& (0+255),w,b
 18077  00CE50  0101               	movlb	1	; () banked
 18078  00CE52  510D               	movf	(fl_fread@copyCount+1)& (0+255),w,b
 18079  00CE54  0A80               	xorlw	128
 18080  00CE56  0100               	movlb	0	; () banked
 18081  00CE58  59E8               	subwfb	(??_fl_fread+2)& (0+255),w,b
 18082  00CE5A  E213               	bc	l12000
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;fat_filelib.c: 1093: copyCount = (count - bytesRead);
 18086  00CE5C  C110  F0E6         	movff	fl_fread@bytesRead,??_fl_fread
 18087  00CE60  C111  F0E7         	movff	fl_fread@bytesRead+1,??_fl_fread+1
 18088  00CE64  1FE6               	comf	??_fl_fread& (0+255),f,b
 18089  00CE66  1FE7               	comf	(??_fl_fread+1)& (0+255),f,b
 18090  00CE68  4BE6               	infsnz	??_fl_fread& (0+255),f,b
 18091  00CE6A  2BE7               	incf	(??_fl_fread+1)& (0+255),f,b
 18092  00CE6C  0101               	movlb	1	; () banked
 18093  00CE6E  510E               	movf	fl_fread@count& (0+255),w,b
 18094  00CE70  0100               	movlb	0	; () banked
 18095  00CE72  25E6               	addwf	??_fl_fread& (0+255),w,b
 18096  00CE74  0101               	movlb	1	; () banked
 18097  00CE76  6F0C               	movwf	fl_fread@copyCount& (0+255),b
 18098  00CE78  510F               	movf	(fl_fread@count+1)& (0+255),w,b
 18099  00CE7A  0100               	movlb	0	; () banked
 18100  00CE7C  21E7               	addwfc	(??_fl_fread+1)& (0+255),w,b
 18101  00CE7E  0101               	movlb	1	; () banked
 18102  00CE80  6F0D               	movwf	(fl_fread@copyCount+1)& (0+255),b
 18103  00CE82                     l12000:
 18104                           
 18105                           ;fat_filelib.c: 1096: memcpy( (uint8*)((uint8*)buffer + bytesRead), (uint8*)(file->file_
      +                          data_sector + offset), copyCount);
 18106  00CE82  0101               	movlb	1	; () banked
 18107  00CE84  5110               	movf	fl_fread@bytesRead& (0+255),w,b
 18108  00CE86  0100               	movlb	0	; () banked
 18109  00CE88  25DE               	addwf	fl_fread@buffer& (0+255),w,b
 18110  00CE8A  6E01               	movwf	memcpy@d1,c
 18111  00CE8C  0101               	movlb	1	; () banked
 18112  00CE8E  5111               	movf	(fl_fread@bytesRead+1)& (0+255),w,b
 18113  00CE90  0100               	movlb	0	; () banked
 18114  00CE92  21DF               	addwfc	(fl_fread@buffer+1)& (0+255),w,b
 18115  00CE94  6E02               	movwf	memcpy@d1+1,c
 18116  00CE96  0E39               	movlw	57
 18117  00CE98  0101               	movlb	1	; () banked
 18118  00CE9A  2504               	addwf	fl_fread@offset& (0+255),w,b
 18119  00CE9C  0100               	movlb	0	; () banked
 18120  00CE9E  6FE6               	movwf	??_fl_fread& (0+255),b
 18121  00CEA0  0E00               	movlw	0
 18122  00CEA2  0101               	movlb	1	; () banked
 18123  00CEA4  2105               	addwfc	(fl_fread@offset+1)& (0+255),w,b
 18124  00CEA6  0100               	movlb	0	; () banked
 18125  00CEA8  6FE7               	movwf	(??_fl_fread+1)& (0+255),b
 18126  00CEAA  C112  F0E8         	movff	fl_fread@file,??_fl_fread+2
 18127  00CEAE  C113  F0E9         	movff	fl_fread@file+1,??_fl_fread+3
 18128  00CEB2  51E6               	movf	??_fl_fread& (0+255),w,b
 18129  00CEB4  27E8               	addwf	(??_fl_fread+2)& (0+255),f,b
 18130  00CEB6  51E7               	movf	(??_fl_fread+1)& (0+255),w,b
 18131  00CEB8  23E9               	addwfc	(??_fl_fread+3)& (0+255),f,b
 18132  00CEBA  0E20               	movlw	32
 18133  00CEBC  6E05               	movwf	memcpy@s1+2,c
 18134  00CEBE  C0E9  F004         	movff	??_fl_fread+3,memcpy@s1+1
 18135  00CEC2  C0E8  F003         	movff	??_fl_fread+2,memcpy@s1
 18136  00CEC6  C10C  F006         	movff	fl_fread@copyCount,memcpy@n
 18137  00CECA  C10D  F007         	movff	fl_fread@copyCount+1,memcpy@n+1
 18138  00CECE  ECA4  F023         	call	_memcpy	;wreg free
 18139                           
 18140                           ;fat_filelib.c: 1099: sector++;
 18141  00CED2  0101               	movlb	1	; () banked
 18142  00CED4  2B08               	incf	fl_fread@sector& (0+255),f,b
 18143  00CED6  0E00               	movlw	0
 18144  00CED8  2309               	addwfc	(fl_fread@sector+1)& (0+255),f,b
 18145  00CEDA  230A               	addwfc	(fl_fread@sector+2)& (0+255),f,b
 18146  00CEDC                     L43:
 18147  00CEDC  0101               	movlb	1	; () banked
 18148  00CEDE  230B               	addwfc	(fl_fread@sector+3)& (0+255),f,b
 18149                           
 18150                           ; BSR set to: 1
 18151                           ;fat_filelib.c: 1100: offset = 0;
 18152  00CEE0  6B04               	clrf	fl_fread@offset& (0+255),b
 18153  00CEE2  6B05               	clrf	(fl_fread@offset+1)& (0+255),b
 18154  00CEE4  6B06               	clrf	(fl_fread@offset+2)& (0+255),b
 18155  00CEE6  6B07               	clrf	(fl_fread@offset+3)& (0+255),b
 18156                           
 18157                           ; BSR set to: 1
 18158                           ;fat_filelib.c: 1101: }
 18159                           ;fat_filelib.c: 1104: bytesRead += copyCount;
 18160                           
 18161                           ; BSR set to: 1
 18162  00CEE8  510C               	movf	fl_fread@copyCount& (0+255),w,b
 18163  00CEEA  2710               	addwf	fl_fread@bytesRead& (0+255),f,b
 18164  00CEEC  510D               	movf	(fl_fread@copyCount+1)& (0+255),w,b
 18165  00CEEE  2311               	addwfc	(fl_fread@bytesRead+1)& (0+255),f,b
 18166                           
 18167                           ; BSR set to: 1
 18168                           ;fat_filelib.c: 1107: file->bytenum += copyCount;
 18169  00CEF0  EE20 F008          	lfsr	2,8
 18170  00CEF4  5112               	movf	fl_fread@file& (0+255),w,b
 18171  00CEF6  26D9               	addwf	fsr2l,f,c
 18172  00CEF8  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 18173  00CEFA  22DA               	addwfc	fsr2h,f,c
 18174  00CEFC  510C               	movf	fl_fread@copyCount& (0+255),w,b
 18175  00CEFE  26DE               	addwf	postinc2,f,c
 18176  00CF00  510D               	movf	(fl_fread@copyCount+1)& (0+255),w,b
 18177  00CF02  22DE               	addwfc	postinc2,f,c
 18178  00CF04  0E00               	movlw	0
 18179  00CF06  BF0D               	btfsc	(fl_fread@copyCount+1)& (0+255),7,b
 18180  00CF08  0EFF               	movlw	255
 18181  00CF0A  22DE               	addwfc	postinc2,f,c
 18182  00CF0C  22DD               	addwfc	postdec2,f,c
 18183  00CF0E  52DD               	movf	postdec2,f,c
 18184  00CF10  52DD               	movf	postdec2,f,c
 18185  00CF12                     l12010:
 18186                           
 18187                           ; BSR set to: 1
 18188  00CF12  0101               	movlb	1	; () banked
 18189  00CF14  5111               	movf	(fl_fread@bytesRead+1)& (0+255),w,b
 18190  00CF16  0A80               	xorlw	128
 18191  00CF18  0100               	movlb	0	; () banked
 18192  00CF1A  6FE6               	movwf	??_fl_fread& (0+255),b
 18193  00CF1C  0101               	movlb	1	; () banked
 18194  00CF1E  510E               	movf	fl_fread@count& (0+255),w,b
 18195  00CF20  5D10               	subwf	fl_fread@bytesRead& (0+255),w,b
 18196  00CF22  510F               	movf	(fl_fread@count+1)& (0+255),w,b
 18197  00CF24  0A80               	xorlw	128
 18198  00CF26  0100               	movlb	0	; () banked
 18199  00CF28  59E6               	subwfb	??_fl_fread& (0+255),w,b
 18200  00CF2A  E201 D671          	bnc	l11972
 18201  00CF2E                     l658:
 18202                           
 18203                           ;fat_filelib.c: 1108: }
 18204                           ;fat_filelib.c: 1110: return bytesRead;
 18205  00CF2E  C110  F0DE         	movff	fl_fread@bytesRead,?_fl_fread
 18206  00CF32  C111  F0DF         	movff	fl_fread@bytesRead+1,?_fl_fread+1
 18207  00CF36                     l648:
 18208  00CF36  0012               	return	
 18209  00CF38                     __end_of_fl_fread:
 18210                           	opt stack 0
 18211                           tosu	equ	0xFFF
 18212                           tosh	equ	0xFFE
 18213                           tosl	equ	0xFFD
 18214                           pclath	equ	0xFFA
 18215                           tblptru	equ	0xFF8
 18216                           tblptrh	equ	0xFF7
 18217                           tblptrl	equ	0xFF6
 18218                           tablat	equ	0xFF5
 18219                           prodh	equ	0xFF4
 18220                           prodl	equ	0xFF3
 18221                           indf0	equ	0xFEF
 18222                           postinc0	equ	0xFEE
 18223                           fsr0h	equ	0xFEA
 18224                           fsr0l	equ	0xFE9
 18225                           wreg	equ	0xFE8
 18226                           indf1	equ	0xFE7
 18227                           postinc1	equ	0xFE6
 18228                           postdec1	equ	0xFE5
 18229                           fsr1h	equ	0xFE2
 18230                           fsr1l	equ	0xFE1
 18231                           indf2	equ	0xFDF
 18232                           postinc2	equ	0xFDE
 18233                           postdec2	equ	0xFDD
 18234                           fsr2h	equ	0xFDA
 18235                           fsr2l	equ	0xFD9
 18236                           status	equ	0xFD8
 18237                           
 18238 ;; *************** function __read_sectors *****************
 18239 ;; Defined at:
 18240 ;;		line 551 in file "fat_filelib.c"
 18241 ;; Parameters:    Size  Location     Type
 18242 ;;  file            2    0[BANK0 ] PTR struct sFL_FILE
 18243 ;;		 -> RAM(3967), NULL(0), 
 18244 ;;  offset          4    2[BANK0 ] unsigned long 
 18245 ;;  buffer          2    6[BANK0 ] PTR unsigned char 
 18246 ;;		 -> data(1), fl_fgetc@data(1), RAM(3967), NULL(0), 
 18247 ;;  count           4    8[BANK0 ] unsigned long 
 18248 ;; Auto vars:     Size  Location     Type
 18249 ;;  nextCluster     4   25[BANK0 ] unsigned long 
 18250 ;;  ClusterIdx      4   41[BANK0 ] unsigned long 
 18251 ;;  Cluster         4   37[BANK0 ] unsigned long 
 18252 ;;  i               4   33[BANK0 ] unsigned long 
 18253 ;;  Sector          4   29[BANK0 ] unsigned long 
 18254 ;;  lba             4   21[BANK0 ] unsigned long 
 18255 ;; Return value:  Size  Location     Type
 18256 ;;                  4    0[BANK0 ] unsigned long 
 18257 ;; Registers used:
 18258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 18259 ;; Tracked objects:
 18260 ;;		On entry : 0/0
 18261 ;;		On exit  : 0/0
 18262 ;;		Unchanged: 0/0
 18263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18264 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18265 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18266 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18267 ;;      Totals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18268 ;;Total ram usage:       45 bytes
 18269 ;; Hardware stack levels used:    1
 18270 ;; Hardware stack levels required when called:    6
 18271 ;; This function calls:
 18272 ;;		___lldiv
 18273 ;;		_fatfs_cache_get_next_cluster
 18274 ;;		_fatfs_cache_set_next_cluster
 18275 ;;		_fatfs_find_next_cluster
 18276 ;;		_fatfs_lba_of_cluster
 18277 ;;		_fatfs_sector_read
 18278 ;; This function is called by:
 18279 ;;		_fl_fread
 18280 ;;		_fl_fwrite
 18281 ;; This function uses a non-reentrant model
 18282 ;;
 18283                           
 18284                           	psect	text45
 18285  00B80C                     __ptext45:
 18286                           	opt stack 0
 18287  00B80C                     __read_sectors:
 18288                           	opt stack 22
 18289                           
 18290                           ;fat_filelib.c: 553: uint32 Sector = 0;
 18291                           
 18292                           ;incstack = 0
 18293  00B80C  0100               	movlb	0	; () banked
 18294  00B80E  6B9D               	clrf	__read_sectors@Sector& (0+255),b
 18295  00B810  6B9E               	clrf	(__read_sectors@Sector+1)& (0+255),b
 18296  00B812  6B9F               	clrf	(__read_sectors@Sector+2)& (0+255),b
 18297  00B814  6BA0               	clrf	(__read_sectors@Sector+3)& (0+255),b
 18298                           
 18299                           ;fat_filelib.c: 554: uint32 ClusterIdx = 0;
 18300  00B816  6BA9               	clrf	__read_sectors@ClusterIdx& (0+255),b
 18301  00B818  6BAA               	clrf	(__read_sectors@ClusterIdx+1)& (0+255),b
 18302  00B81A  6BAB               	clrf	(__read_sectors@ClusterIdx+2)& (0+255),b
 18303  00B81C  6BAC               	clrf	(__read_sectors@ClusterIdx+3)& (0+255),b
 18304                           
 18305                           ;fat_filelib.c: 555: uint32 Cluster = 0;
 18306  00B81E  6BA5               	clrf	__read_sectors@Cluster& (0+255),b
 18307  00B820  6BA6               	clrf	(__read_sectors@Cluster+1)& (0+255),b
 18308  00B822  6BA7               	clrf	(__read_sectors@Cluster+2)& (0+255),b
 18309  00B824  6BA8               	clrf	(__read_sectors@Cluster+3)& (0+255),b
 18310                           
 18311                           ; BSR set to: 0
 18312                           ;fat_filelib.c: 556: uint32 i;
 18313                           ;fat_filelib.c: 557: uint32 lba;
 18314                           ;fat_filelib.c: 560: ClusterIdx = offset / _fs.sectors_per_cluster;
 18315  00B826  C082  F001         	movff	__read_sectors@offset,___lldiv@dividend
 18316  00B82A  C083  F002         	movff	__read_sectors@offset+1,___lldiv@dividend+1
 18317  00B82E  C084  F003         	movff	__read_sectors@offset+2,___lldiv@dividend+2
 18318  00B832  C085  F004         	movff	__read_sectors@offset+3,___lldiv@dividend+3
 18319  00B836  C978  F08C         	movff	__fs,??__read_sectors
 18320  00B83A  518C               	movf	??__read_sectors& (0+255),w,b
 18321  00B83C  6E05               	movwf	___lldiv@divisor,c
 18322  00B83E  6A06               	clrf	___lldiv@divisor+1,c
 18323  00B840  6A07               	clrf	___lldiv@divisor+2,c
 18324  00B842  6A08               	clrf	___lldiv@divisor+3,c
 18325  00B844  EC7B  F026         	call	___lldiv	;wreg free
 18326  00B848  C001  F0A9         	movff	?___lldiv,__read_sectors@ClusterIdx
 18327  00B84C  C002  F0AA         	movff	?___lldiv+1,__read_sectors@ClusterIdx+1
 18328  00B850  C003  F0AB         	movff	?___lldiv+2,__read_sectors@ClusterIdx+2
 18329  00B854  C004  F0AC         	movff	?___lldiv+3,__read_sectors@ClusterIdx+3
 18330                           
 18331                           ;fat_filelib.c: 561: Sector = offset - (ClusterIdx * _fs.sectors_per_cluster);
 18332  00B858  C978  F08C         	movff	__fs,??__read_sectors
 18333  00B85C  C08C  F08D         	movff	??__read_sectors,??__read_sectors+1
 18334  00B860  0100               	movlb	0	; () banked
 18335  00B862  6B8E               	clrf	(??__read_sectors+2)& (0+255),b
 18336  00B864  6B8F               	clrf	(??__read_sectors+3)& (0+255),b
 18337  00B866  6B90               	clrf	(??__read_sectors+4)& (0+255),b
 18338  00B868  518D               	movf	(??__read_sectors+1)& (0+255),w,b
 18339  00B86A  03A9               	mulwf	__read_sectors@ClusterIdx& (0+255),b
 18340  00B86C  CFF3 F091          	movff	prodl,??__read_sectors+5
 18341  00B870  CFF4 F092          	movff	prodh,??__read_sectors+6
 18342  00B874  6B93               	clrf	(??__read_sectors+7)& (0+255),b
 18343  00B876  6B94               	clrf	(??__read_sectors+8)& (0+255),b
 18344  00B878  03AA               	mulwf	(__read_sectors@ClusterIdx+1)& (0+255),b
 18345  00B87A  50F3               	movf	243,w,c
 18346  00B87C  2792               	addwf	(??__read_sectors+6)& (0+255),f,b
 18347  00B87E  50F4               	movf	244,w,c
 18348  00B880  2393               	addwfc	(??__read_sectors+7)& (0+255),f,b
 18349  00B882  0E00               	movlw	0
 18350  00B884  2394               	addwfc	(??__read_sectors+8)& (0+255),f,b
 18351  00B886  518E               	movf	(??__read_sectors+2)& (0+255),w,b
 18352  00B888  03A9               	mulwf	__read_sectors@ClusterIdx& (0+255),b
 18353  00B88A  50F3               	movf	243,w,c
 18354  00B88C  2792               	addwf	(??__read_sectors+6)& (0+255),f,b
 18355  00B88E  50F4               	movf	244,w,c
 18356  00B890  2393               	addwfc	(??__read_sectors+7)& (0+255),f,b
 18357  00B892  0E00               	movlw	0
 18358  00B894  2394               	addwfc	(??__read_sectors+8)& (0+255),f,b
 18359  00B896  518D               	movf	(??__read_sectors+1)& (0+255),w,b
 18360  00B898  03AB               	mulwf	(__read_sectors@ClusterIdx+2)& (0+255),b
 18361  00B89A  50F3               	movf	243,w,c
 18362  00B89C  2793               	addwf	(??__read_sectors+7)& (0+255),f,b
 18363  00B89E  50F4               	movf	244,w,c
 18364  00B8A0  2394               	addwfc	(??__read_sectors+8)& (0+255),f,b
 18365  00B8A2  518E               	movf	(??__read_sectors+2)& (0+255),w,b
 18366  00B8A4  03AA               	mulwf	(__read_sectors@ClusterIdx+1)& (0+255),b
 18367  00B8A6  50F3               	movf	243,w,c
 18368  00B8A8  2793               	addwf	(??__read_sectors+7)& (0+255),f,b
 18369  00B8AA  50F4               	movf	244,w,c
 18370  00B8AC  2394               	addwfc	(??__read_sectors+8)& (0+255),f,b
 18371  00B8AE  518F               	movf	(??__read_sectors+3)& (0+255),w,b
 18372  00B8B0  03A9               	mulwf	__read_sectors@ClusterIdx& (0+255),b
 18373  00B8B2  50F3               	movf	243,w,c
 18374  00B8B4  2793               	addwf	(??__read_sectors+7)& (0+255),f,b
 18375  00B8B6  50F4               	movf	244,w,c
 18376  00B8B8  2394               	addwfc	(??__read_sectors+8)& (0+255),f,b
 18377  00B8BA  51AC               	movf	(__read_sectors@ClusterIdx+3)& (0+255),w,b
 18378  00B8BC  038D               	mulwf	(??__read_sectors+1)& (0+255),b
 18379  00B8BE  50F3               	movf	243,w,c
 18380  00B8C0  2794               	addwf	(??__read_sectors+8)& (0+255),f,b
 18381  00B8C2  518E               	movf	(??__read_sectors+2)& (0+255),w,b
 18382  00B8C4  03AB               	mulwf	(__read_sectors@ClusterIdx+2)& (0+255),b
 18383  00B8C6  50F3               	movf	243,w,c
 18384  00B8C8  2794               	addwf	(??__read_sectors+8)& (0+255),f,b
 18385  00B8CA  518F               	movf	(??__read_sectors+3)& (0+255),w,b
 18386  00B8CC  03AA               	mulwf	(__read_sectors@ClusterIdx+1)& (0+255),b
 18387  00B8CE  50F3               	movf	243,w,c
 18388  00B8D0  2794               	addwf	(??__read_sectors+8)& (0+255),f,b
 18389  00B8D2  5190               	movf	(??__read_sectors+4)& (0+255),w,b
 18390  00B8D4  03A9               	mulwf	__read_sectors@ClusterIdx& (0+255),b
 18391  00B8D6  50F3               	movf	243,w,c
 18392  00B8D8  2794               	addwf	(??__read_sectors+8)& (0+255),f,b
 18393  00B8DA  1F91               	comf	(??__read_sectors+5)& (0+255),f,b
 18394  00B8DC  1F92               	comf	(??__read_sectors+6)& (0+255),f,b
 18395  00B8DE  1F93               	comf	(??__read_sectors+7)& (0+255),f,b
 18396  00B8E0  1F94               	comf	(??__read_sectors+8)& (0+255),f,b
 18397  00B8E2  2B91               	incf	(??__read_sectors+5)& (0+255),f,b
 18398  00B8E4  0E00               	movlw	0
 18399  00B8E6  2392               	addwfc	(??__read_sectors+6)& (0+255),f,b
 18400  00B8E8  2393               	addwfc	(??__read_sectors+7)& (0+255),f,b
 18401  00B8EA  2394               	addwfc	(??__read_sectors+8)& (0+255),f,b
 18402  00B8EC  5182               	movf	__read_sectors@offset& (0+255),w,b
 18403  00B8EE  2591               	addwf	(??__read_sectors+5)& (0+255),w,b
 18404  00B8F0  6F9D               	movwf	__read_sectors@Sector& (0+255),b
 18405  00B8F2  5183               	movf	(__read_sectors@offset+1)& (0+255),w,b
 18406  00B8F4  2192               	addwfc	(??__read_sectors+6)& (0+255),w,b
 18407  00B8F6  6F9E               	movwf	(__read_sectors@Sector+1)& (0+255),b
 18408  00B8F8  5184               	movf	(__read_sectors@offset+2)& (0+255),w,b
 18409  00B8FA  2193               	addwfc	(??__read_sectors+7)& (0+255),w,b
 18410  00B8FC  6F9F               	movwf	(__read_sectors@Sector+2)& (0+255),b
 18411  00B8FE  5185               	movf	(__read_sectors@offset+3)& (0+255),w,b
 18412  00B900  2194               	addwfc	(??__read_sectors+8)& (0+255),w,b
 18413  00B902  6FA0               	movwf	(__read_sectors@Sector+3)& (0+255),b
 18414                           
 18415                           ; BSR set to: 0
 18416                           ;fat_filelib.c: 564: if ((Sector + count) > _fs.sectors_per_cluster)
 18417  00B904  5188               	movf	__read_sectors@count& (0+255),w,b
 18418  00B906  259D               	addwf	__read_sectors@Sector& (0+255),w,b
 18419  00B908  6F8C               	movwf	??__read_sectors& (0+255),b
 18420  00B90A  5189               	movf	(__read_sectors@count+1)& (0+255),w,b
 18421  00B90C  219E               	addwfc	(__read_sectors@Sector+1)& (0+255),w,b
 18422  00B90E  6F8D               	movwf	(??__read_sectors+1)& (0+255),b
 18423  00B910  518A               	movf	(__read_sectors@count+2)& (0+255),w,b
 18424  00B912  219F               	addwfc	(__read_sectors@Sector+2)& (0+255),w,b
 18425  00B914  6F8E               	movwf	(??__read_sectors+2)& (0+255),b
 18426  00B916  518B               	movf	(__read_sectors@count+3)& (0+255),w,b
 18427  00B918  21A0               	addwfc	(__read_sectors@Sector+3)& (0+255),w,b
 18428  00B91A  6F8F               	movwf	(??__read_sectors+3)& (0+255),b
 18429  00B91C  C978  F090         	movff	__fs,??__read_sectors+4
 18430  00B920  C090  F091         	movff	??__read_sectors+4,??__read_sectors+5
 18431  00B924  6B92               	clrf	(??__read_sectors+6)& (0+255),b
 18432  00B926  6B93               	clrf	(??__read_sectors+7)& (0+255),b
 18433  00B928  6B94               	clrf	(??__read_sectors+8)& (0+255),b
 18434  00B92A  518C               	movf	??__read_sectors& (0+255),w,b
 18435  00B92C  5D91               	subwf	(??__read_sectors+5)& (0+255),w,b
 18436  00B92E  518D               	movf	(??__read_sectors+1)& (0+255),w,b
 18437  00B930  5992               	subwfb	(??__read_sectors+6)& (0+255),w,b
 18438  00B932  518E               	movf	(??__read_sectors+2)& (0+255),w,b
 18439  00B934  5993               	subwfb	(??__read_sectors+7)& (0+255),w,b
 18440  00B936  518F               	movf	(??__read_sectors+3)& (0+255),w,b
 18441  00B938  5994               	subwfb	(??__read_sectors+8)& (0+255),w,b
 18442  00B93A  E21F               	bc	l11446
 18443                           
 18444                           ; BSR set to: 0
 18445                           ;fat_filelib.c: 565: count = _fs.sectors_per_cluster - Sector;
 18446  00B93C  C09D  F08C         	movff	__read_sectors@Sector,??__read_sectors
 18447  00B940  C09E  F08D         	movff	__read_sectors@Sector+1,??__read_sectors+1
 18448  00B944  C09F  F08E         	movff	__read_sectors@Sector+2,??__read_sectors+2
 18449  00B948  C0A0  F08F         	movff	__read_sectors@Sector+3,??__read_sectors+3
 18450  00B94C  1F8C               	comf	??__read_sectors& (0+255),f,b
 18451  00B94E  1F8D               	comf	(??__read_sectors+1)& (0+255),f,b
 18452  00B950  1F8E               	comf	(??__read_sectors+2)& (0+255),f,b
 18453  00B952  1F8F               	comf	(??__read_sectors+3)& (0+255),f,b
 18454  00B954  2B8C               	incf	??__read_sectors& (0+255),f,b
 18455  00B956  0E00               	movlw	0
 18456  00B958  238D               	addwfc	(??__read_sectors+1)& (0+255),f,b
 18457  00B95A  238E               	addwfc	(??__read_sectors+2)& (0+255),f,b
 18458  00B95C  238F               	addwfc	(??__read_sectors+3)& (0+255),f,b
 18459  00B95E  C978  F090         	movff	__fs,??__read_sectors+4
 18460  00B962  5190               	movf	(??__read_sectors+4)& (0+255),w,b
 18461  00B964  258C               	addwf	??__read_sectors& (0+255),w,b
 18462  00B966  6F88               	movwf	__read_sectors@count& (0+255),b
 18463  00B968  0E00               	movlw	0
 18464  00B96A  218D               	addwfc	(??__read_sectors+1)& (0+255),w,b
 18465  00B96C  6F89               	movwf	(__read_sectors@count+1)& (0+255),b
 18466  00B96E  0E00               	movlw	0
 18467  00B970  218E               	addwfc	(??__read_sectors+2)& (0+255),w,b
 18468  00B972  6F8A               	movwf	(__read_sectors@count+2)& (0+255),b
 18469  00B974  0E00               	movlw	0
 18470  00B976  218F               	addwfc	(??__read_sectors+3)& (0+255),w,b
 18471  00B978  6F8B               	movwf	(__read_sectors@count+3)& (0+255),b
 18472  00B97A                     l11446:
 18473                           
 18474                           ; BSR set to: 0
 18475                           ;fat_filelib.c: 568: if (ClusterIdx == file->last_fat_lookup.ClusterIdx)
 18476  00B97A  EE20 F031          	lfsr	2,49
 18477  00B97E  0100               	movlb	0	; () banked
 18478  00B980  5180               	movf	__read_sectors@file& (0+255),w,b
 18479  00B982  26D9               	addwf	fsr2l,f,c
 18480  00B984  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18481  00B986  22DA               	addwfc	fsr2h,f,c
 18482  00B988  CFDE F08C          	movff	postinc2,??__read_sectors
 18483  00B98C  CFDE F08D          	movff	postinc2,??__read_sectors+1
 18484  00B990  CFDE F08E          	movff	postinc2,??__read_sectors+2
 18485  00B994  CFDE F08F          	movff	postinc2,??__read_sectors+3
 18486  00B998  51AC               	movf	(__read_sectors@ClusterIdx+3)& (0+255),w,b
 18487  00B99A  198F               	xorwf	(??__read_sectors+3)& (0+255),w,b
 18488  00B99C  E108               	bnz	u13295
 18489  00B99E  51AB               	movf	(__read_sectors@ClusterIdx+2)& (0+255),w,b
 18490  00B9A0  198E               	xorwf	(??__read_sectors+2)& (0+255),w,b
 18491  00B9A2  E105               	bnz	u13295
 18492  00B9A4  51AA               	movf	(__read_sectors@ClusterIdx+1)& (0+255),w,b
 18493  00B9A6  198D               	xorwf	(??__read_sectors+1)& (0+255),w,b
 18494  00B9A8  E102               	bnz	u13295
 18495  00B9AA  51A9               	movf	__read_sectors@ClusterIdx& (0+255),w,b
 18496  00B9AC  198C               	xorwf	??__read_sectors& (0+255),w,b
 18497  00B9AE                     u13295:
 18498  00B9AE  E110               	bnz	l11450
 18499                           
 18500                           ; BSR set to: 0
 18501                           ;fat_filelib.c: 569: Cluster = file->last_fat_lookup.CurrentCluster;
 18502  00B9B0  EE20 F035          	lfsr	2,53
 18503  00B9B4  0100               	movlb	0	; () banked
 18504  00B9B6  5180               	movf	__read_sectors@file& (0+255),w,b
 18505  00B9B8  26D9               	addwf	fsr2l,f,c
 18506  00B9BA  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18507  00B9BC  22DA               	addwfc	fsr2h,f,c
 18508  00B9BE  CFDE F0A5          	movff	postinc2,__read_sectors@Cluster
 18509  00B9C2  CFDE F0A6          	movff	postinc2,__read_sectors@Cluster+1
 18510  00B9C6  CFDE F0A7          	movff	postinc2,__read_sectors@Cluster+2
 18511  00B9CA  CFDE F0A8          	movff	postinc2,__read_sectors@Cluster+3
 18512  00B9CE  D0D8               	goto	l11476
 18513  00B9D0                     l11450:
 18514                           
 18515                           ; BSR set to: 0
 18516                           ;fat_filelib.c: 571: else
 18517                           ;fat_filelib.c: 572: {
 18518                           ;fat_filelib.c: 574: if (ClusterIdx && ClusterIdx == file->last_fat_lookup.ClusterIdx + 
      +                          1)
 18519  00B9D0  0100               	movlb	0	; () banked
 18520  00B9D2  51AC               	movf	(__read_sectors@ClusterIdx+3)& (0+255),w,b
 18521  00B9D4  11A9               	iorwf	__read_sectors@ClusterIdx& (0+255),w,b
 18522  00B9D6  11AA               	iorwf	(__read_sectors@ClusterIdx+1)& (0+255),w,b
 18523  00B9D8  11AB               	iorwf	(__read_sectors@ClusterIdx+2)& (0+255),w,b
 18524  00B9DA  E036               	bz	l11456
 18525                           
 18526                           ; BSR set to: 0
 18527  00B9DC  EE20 F031          	lfsr	2,49
 18528  00B9E0  5180               	movf	__read_sectors@file& (0+255),w,b
 18529  00B9E2  26D9               	addwf	fsr2l,f,c
 18530  00B9E4  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18531  00B9E6  22DA               	addwfc	fsr2h,f,c
 18532  00B9E8  CFDE F08C          	movff	postinc2,??__read_sectors
 18533  00B9EC  CFDE F08D          	movff	postinc2,??__read_sectors+1
 18534  00B9F0  CFDE F08E          	movff	postinc2,??__read_sectors+2
 18535  00B9F4  CFDE F08F          	movff	postinc2,??__read_sectors+3
 18536  00B9F8  298C               	incf	??__read_sectors& (0+255),w,b
 18537  00B9FA  6F90               	movwf	(??__read_sectors+4)& (0+255),b
 18538  00B9FC  0E00               	movlw	0
 18539  00B9FE  218D               	addwfc	(??__read_sectors+1)& (0+255),w,b
 18540  00BA00  6F91               	movwf	(??__read_sectors+5)& (0+255),b
 18541  00BA02  0E00               	movlw	0
 18542  00BA04  218E               	addwfc	(??__read_sectors+2)& (0+255),w,b
 18543  00BA06  6F92               	movwf	(??__read_sectors+6)& (0+255),b
 18544  00BA08  0E00               	movlw	0
 18545  00BA0A  218F               	addwfc	(??__read_sectors+3)& (0+255),w,b
 18546  00BA0C  6F93               	movwf	(??__read_sectors+7)& (0+255),b
 18547  00BA0E  19AC               	xorwf	(__read_sectors@ClusterIdx+3)& (0+255),w,b
 18548  00BA10  E108               	bnz	u13315
 18549  00BA12  51AB               	movf	(__read_sectors@ClusterIdx+2)& (0+255),w,b
 18550  00BA14  1992               	xorwf	(??__read_sectors+6)& (0+255),w,b
 18551  00BA16  E105               	bnz	u13315
 18552  00BA18  51AA               	movf	(__read_sectors@ClusterIdx+1)& (0+255),w,b
 18553  00BA1A  1991               	xorwf	(??__read_sectors+5)& (0+255),w,b
 18554  00BA1C  E102               	bnz	u13315
 18555  00BA1E  51A9               	movf	__read_sectors@ClusterIdx& (0+255),w,b
 18556  00BA20  1990               	xorwf	(??__read_sectors+4)& (0+255),w,b
 18557  00BA22                     u13315:
 18558  00BA22  E112               	bnz	l11456
 18559                           
 18560                           ; BSR set to: 0
 18561                           ;fat_filelib.c: 575: {
 18562                           ;fat_filelib.c: 576: i = file->last_fat_lookup.ClusterIdx;
 18563  00BA24  EE20 F031          	lfsr	2,49
 18564  00BA28  0100               	movlb	0	; () banked
 18565  00BA2A  5180               	movf	__read_sectors@file& (0+255),w,b
 18566  00BA2C  26D9               	addwf	fsr2l,f,c
 18567  00BA2E  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18568  00BA30  22DA               	addwfc	fsr2h,f,c
 18569  00BA32  CFDE F0A1          	movff	postinc2,__read_sectors@i
 18570  00BA36  CFDE F0A2          	movff	postinc2,__read_sectors@i+1
 18571  00BA3A  CFDE F0A3          	movff	postinc2,__read_sectors@i+2
 18572  00BA3E  CFDE F0A4          	movff	postinc2,__read_sectors@i+3
 18573                           
 18574                           ;fat_filelib.c: 577: Cluster = file->last_fat_lookup.CurrentCluster;
 18575  00BA42  EE20 F035          	lfsr	2,53
 18576  00BA46  D007               	goto	L44
 18577  00BA48                     l11456:
 18578                           
 18579                           ; BSR set to: 0
 18580                           ;fat_filelib.c: 580: else
 18581                           ;fat_filelib.c: 581: {
 18582                           ;fat_filelib.c: 583: i = 0;
 18583  00BA48  0100               	movlb	0	; () banked
 18584  00BA4A  6BA1               	clrf	__read_sectors@i& (0+255),b
 18585  00BA4C  6BA2               	clrf	(__read_sectors@i+1)& (0+255),b
 18586  00BA4E  6BA3               	clrf	(__read_sectors@i+2)& (0+255),b
 18587  00BA50  6BA4               	clrf	(__read_sectors@i+3)& (0+255),b
 18588                           
 18589                           ; BSR set to: 0
 18590                           ;fat_filelib.c: 584: Cluster = file->startcluster;
 18591  00BA52  EE20 F004          	lfsr	2,4
 18592  00BA56                     L44:
 18593  00BA56  0100               	movlb	0	; () banked
 18594  00BA58  5180               	movf	__read_sectors@file& (0+255),w,b
 18595  00BA5A  26D9               	addwf	fsr2l,f,c
 18596  00BA5C  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18597  00BA5E  22DA               	addwfc	fsr2h,f,c
 18598  00BA60  CFDE F0A5          	movff	postinc2,__read_sectors@Cluster
 18599  00BA64  CFDE F0A6          	movff	postinc2,__read_sectors@Cluster+1
 18600  00BA68  CFDE F0A7          	movff	postinc2,__read_sectors@Cluster+2
 18601  00BA6C  CFDE F0A8          	movff	postinc2,__read_sectors@Cluster+3
 18602  00BA70  D059               	goto	l11470
 18603  00BA72                     l11460:
 18604                           
 18605                           ; BSR set to: 0
 18606                           ;fat_filelib.c: 589: {
 18607                           ;fat_filelib.c: 590: uint32 nextCluster;
 18608                           ;fat_filelib.c: 593: if (!fatfs_cache_get_next_cluster(&_fs, file, i, &nextCluster))
 18609  00BA72  0E09               	movlw	high __fs
 18610  00BA74  6E02               	movwf	fatfs_cache_get_next_cluster@fs+1,c
 18611  00BA76  0E78               	movlw	low __fs
 18612  00BA78  6E01               	movwf	fatfs_cache_get_next_cluster@fs,c
 18613  00BA7A  C081  F004         	movff	__read_sectors@file+1,fatfs_cache_get_next_cluster@file+1
 18614  00BA7E  C080  F003         	movff	__read_sectors@file,fatfs_cache_get_next_cluster@file
 18615  00BA82  C0A1  F005         	movff	__read_sectors@i,fatfs_cache_get_next_cluster@clusterIdx
 18616  00BA86  C0A2  F006         	movff	__read_sectors@i+1,fatfs_cache_get_next_cluster@clusterIdx+1
 18617  00BA8A  C0A3  F007         	movff	__read_sectors@i+2,fatfs_cache_get_next_cluster@clusterIdx+2
 18618  00BA8E  C0A4  F008         	movff	__read_sectors@i+3,fatfs_cache_get_next_cluster@clusterIdx+3
 18619  00BA92  0E00               	movlw	high __read_sectors@nextCluster
 18620  00BA94  6E0A               	movwf	fatfs_cache_get_next_cluster@pNextCluster+1,c
 18621  00BA96  0100               	movlb	0	; () banked
 18622  00BA98  0E99               	movlw	low __read_sectors@nextCluster
 18623  00BA9A  6E09               	movwf	fatfs_cache_get_next_cluster@pNextCluster,c
 18624  00BA9C  EC22  F01F         	call	_fatfs_cache_get_next_cluster	;wreg free
 18625  00BAA0  5002               	movf	?_fatfs_cache_get_next_cluster+1,w,c
 18626  00BAA2  1001               	iorwf	?_fatfs_cache_get_next_cluster,w,c
 18627  00BAA4  E131               	bnz	l11466
 18628                           
 18629                           ;fat_filelib.c: 594: {
 18630                           ;fat_filelib.c: 596: nextCluster = fatfs_find_next_cluster(&_fs, Cluster);
 18631  00BAA6  0E09               	movlw	high __fs
 18632  00BAA8  6E47               	movwf	fatfs_find_next_cluster@fs+1,c
 18633  00BAAA  0E78               	movlw	low __fs
 18634  00BAAC  6E46               	movwf	fatfs_find_next_cluster@fs,c
 18635  00BAAE  C0A5  F048         	movff	__read_sectors@Cluster,fatfs_find_next_cluster@current_cluster
 18636  00BAB2  C0A6  F049         	movff	__read_sectors@Cluster+1,fatfs_find_next_cluster@current_cluster+1
 18637  00BAB6  C0A7  F04A         	movff	__read_sectors@Cluster+2,fatfs_find_next_cluster@current_cluster+2
 18638  00BABA  C0A8  F04B         	movff	__read_sectors@Cluster+3,fatfs_find_next_cluster@current_cluster+3
 18639  00BABE  EC9E  F054         	call	_fatfs_find_next_cluster	;wreg free
 18640  00BAC2  C046  F099         	movff	?_fatfs_find_next_cluster,__read_sectors@nextCluster
 18641  00BAC6  C047  F09A         	movff	?_fatfs_find_next_cluster+1,__read_sectors@nextCluster+1
 18642  00BACA  C048  F09B         	movff	?_fatfs_find_next_cluster+2,__read_sectors@nextCluster+2
 18643  00BACE  C049  F09C         	movff	?_fatfs_find_next_cluster+3,__read_sectors@nextCluster+3
 18644                           
 18645                           ;fat_filelib.c: 599: fatfs_cache_set_next_cluster(&_fs, file, i, nextCluster);
 18646  00BAD2  0E09               	movlw	high __fs
 18647  00BAD4  6E02               	movwf	fatfs_cache_set_next_cluster@fs+1,c
 18648  00BAD6  0E78               	movlw	low __fs
 18649  00BAD8  6E01               	movwf	fatfs_cache_set_next_cluster@fs,c
 18650  00BADA  C081  F004         	movff	__read_sectors@file+1,fatfs_cache_set_next_cluster@file+1
 18651  00BADE  0100               	movlb	0	; () banked
 18652  00BAE0  C080  F003         	movff	__read_sectors@file,fatfs_cache_set_next_cluster@file
 18653  00BAE4  C0A1  F005         	movff	__read_sectors@i,fatfs_cache_set_next_cluster@clusterIdx
 18654  00BAE8  C0A2  F006         	movff	__read_sectors@i+1,fatfs_cache_set_next_cluster@clusterIdx+1
 18655  00BAEC  C0A3  F007         	movff	__read_sectors@i+2,fatfs_cache_set_next_cluster@clusterIdx+2
 18656  00BAF0  C0A4  F008         	movff	__read_sectors@i+3,fatfs_cache_set_next_cluster@clusterIdx+3
 18657  00BAF4  C099  F009         	movff	__read_sectors@nextCluster,fatfs_cache_set_next_cluster@nextCluster
 18658  00BAF8  C09A  F00A         	movff	__read_sectors@nextCluster+1,fatfs_cache_set_next_cluster@nextCluster+1
 18659  00BAFC  C09B  F00B         	movff	__read_sectors@nextCluster+2,fatfs_cache_set_next_cluster@nextCluster+2
 18660  00BB00  C09C  F00C         	movff	__read_sectors@nextCluster+3,fatfs_cache_set_next_cluster@nextCluster+3
 18661  00BB04  EC1B  F01F         	call	_fatfs_cache_set_next_cluster	;wreg free
 18662  00BB08                     l11466:
 18663                           
 18664                           ;fat_filelib.c: 600: }
 18665                           ;fat_filelib.c: 602: Cluster = nextCluster;
 18666  00BB08  C099  F0A5         	movff	__read_sectors@nextCluster,__read_sectors@Cluster
 18667  00BB0C  C09A  F0A6         	movff	__read_sectors@nextCluster+1,__read_sectors@Cluster+1
 18668  00BB10  C09B  F0A7         	movff	__read_sectors@nextCluster+2,__read_sectors@Cluster+2
 18669  00BB14  C09C  F0A8         	movff	__read_sectors@nextCluster+3,__read_sectors@Cluster+3
 18670  00BB18  0100               	movlb	0	; () banked
 18671  00BB1A  2BA1               	incf	__read_sectors@i& (0+255),f,b
 18672  00BB1C  0E00               	movlw	0
 18673  00BB1E  23A2               	addwfc	(__read_sectors@i+1)& (0+255),f,b
 18674  00BB20  23A3               	addwfc	(__read_sectors@i+2)& (0+255),f,b
 18675  00BB22  23A4               	addwfc	(__read_sectors@i+3)& (0+255),f,b
 18676  00BB24                     l11470:
 18677                           
 18678                           ; BSR set to: 0
 18679  00BB24  0100               	movlb	0	; () banked
 18680  00BB26  51A9               	movf	__read_sectors@ClusterIdx& (0+255),w,b
 18681  00BB28  5DA1               	subwf	__read_sectors@i& (0+255),w,b
 18682  00BB2A  51AA               	movf	(__read_sectors@ClusterIdx+1)& (0+255),w,b
 18683  00BB2C  59A2               	subwfb	(__read_sectors@i+1)& (0+255),w,b
 18684  00BB2E  51AB               	movf	(__read_sectors@ClusterIdx+2)& (0+255),w,b
 18685  00BB30  59A3               	subwfb	(__read_sectors@i+2)& (0+255),w,b
 18686  00BB32  51AC               	movf	(__read_sectors@ClusterIdx+3)& (0+255),w,b
 18687  00BB34  59A4               	subwfb	(__read_sectors@i+3)& (0+255),w,b
 18688  00BB36  E39D               	bnc	l11460
 18689                           
 18690                           ; BSR set to: 0
 18691                           ;fat_filelib.c: 603: }
 18692                           ;fat_filelib.c: 606: if (Cluster != 0xFFFFFFFF)
 18693                           
 18694                           ; BSR set to: 0
 18695  00BB38  29A5               	incf	__read_sectors@Cluster& (0+255),w,b
 18696  00BB3A  B4D8               	btfsc	status,2,c
 18697  00BB3C  29A6               	incf	(__read_sectors@Cluster+1)& (0+255),w,b
 18698  00BB3E  B4D8               	btfsc	status,2,c
 18699  00BB40  29A7               	incf	(__read_sectors@Cluster+2)& (0+255),w,b
 18700  00BB42  B4D8               	btfsc	status,2,c
 18701  00BB44  29A8               	incf	(__read_sectors@Cluster+3)& (0+255),w,b
 18702  00BB46  E01C               	bz	l11476
 18703                           
 18704                           ; BSR set to: 0
 18705                           ;fat_filelib.c: 607: {
 18706                           ;fat_filelib.c: 608: file->last_fat_lookup.CurrentCluster = Cluster;
 18707  00BB48  EE20 F035          	lfsr	2,53
 18708  00BB4C  5180               	movf	__read_sectors@file& (0+255),w,b
 18709  00BB4E  26D9               	addwf	fsr2l,f,c
 18710  00BB50  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18711  00BB52  22DA               	addwfc	fsr2h,f,c
 18712  00BB54  C0A5  FFDE         	movff	__read_sectors@Cluster,postinc2
 18713  00BB58  C0A6  FFDE         	movff	__read_sectors@Cluster+1,postinc2
 18714  00BB5C  C0A7  FFDE         	movff	__read_sectors@Cluster+2,postinc2
 18715  00BB60  C0A8  FFDE         	movff	__read_sectors@Cluster+3,postinc2
 18716                           
 18717                           ;fat_filelib.c: 609: file->last_fat_lookup.ClusterIdx = ClusterIdx;
 18718  00BB64  EE20 F031          	lfsr	2,49
 18719  00BB68  5180               	movf	__read_sectors@file& (0+255),w,b
 18720  00BB6A  26D9               	addwf	fsr2l,f,c
 18721  00BB6C  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18722  00BB6E  22DA               	addwfc	fsr2h,f,c
 18723  00BB70  C0A9  FFDE         	movff	__read_sectors@ClusterIdx,postinc2
 18724  00BB74  C0AA  FFDE         	movff	__read_sectors@ClusterIdx+1,postinc2
 18725  00BB78  C0AB  FFDE         	movff	__read_sectors@ClusterIdx+2,postinc2
 18726  00BB7C  C0AC  FFDE         	movff	__read_sectors@ClusterIdx+3,postinc2
 18727  00BB80                     l11476:
 18728                           
 18729                           ; BSR set to: 0
 18730                           ;fat_filelib.c: 610: }
 18731                           ;fat_filelib.c: 611: }
 18732                           ;fat_filelib.c: 614: if (Cluster == 0xFFFFFFFF)
 18733  00BB80  0100               	movlb	0	; () banked
 18734  00BB82  29A5               	incf	__read_sectors@Cluster& (0+255),w,b
 18735  00BB84  B4D8               	btfsc	status,2,c
 18736  00BB86  29A6               	incf	(__read_sectors@Cluster+1)& (0+255),w,b
 18737  00BB88  B4D8               	btfsc	status,2,c
 18738  00BB8A  29A7               	incf	(__read_sectors@Cluster+2)& (0+255),w,b
 18739  00BB8C  B4D8               	btfsc	status,2,c
 18740  00BB8E  29A8               	incf	(__read_sectors@Cluster+3)& (0+255),w,b
 18741  00BB90  E049               	bz	l11490
 18742                           
 18743                           ; BSR set to: 0
 18744                           ;fat_filelib.c: 618: lba = fatfs_lba_of_cluster(&_fs, Cluster) + Sector;
 18745                           
 18746                           ; BSR set to: 0
 18747                           
 18748                           ; BSR set to: 0
 18749                           
 18750                           ; BSR set to: 0
 18751                           ;fat_filelib.c: 615: return 0;
 18752  00BB92  0E09               	movlw	high __fs
 18753  00BB94  6E02               	movwf	fatfs_lba_of_cluster@fs+1,c
 18754  00BB96  0E78               	movlw	low __fs
 18755  00BB98  6E01               	movwf	fatfs_lba_of_cluster@fs,c
 18756  00BB9A  C0A5  F003         	movff	__read_sectors@Cluster,fatfs_lba_of_cluster@Cluster_Number
 18757  00BB9E  C0A6  F004         	movff	__read_sectors@Cluster+1,fatfs_lba_of_cluster@Cluster_Number+1
 18758  00BBA2  C0A7  F005         	movff	__read_sectors@Cluster+2,fatfs_lba_of_cluster@Cluster_Number+2
 18759  00BBA6  C0A8  F006         	movff	__read_sectors@Cluster+3,fatfs_lba_of_cluster@Cluster_Number+3
 18760  00BBAA  EC4C  F03E         	call	_fatfs_lba_of_cluster	;wreg free
 18761  00BBAE  C001  F08C         	movff	?_fatfs_lba_of_cluster,??__read_sectors
 18762  00BBB2  C002  F08D         	movff	?_fatfs_lba_of_cluster+1,??__read_sectors+1
 18763  00BBB6  C003  F08E         	movff	?_fatfs_lba_of_cluster+2,??__read_sectors+2
 18764  00BBBA  C004  F08F         	movff	?_fatfs_lba_of_cluster+3,??__read_sectors+3
 18765  00BBBE  0100               	movlb	0	; () banked
 18766  00BBC0  519D               	movf	__read_sectors@Sector& (0+255),w,b
 18767  00BBC2  258C               	addwf	??__read_sectors& (0+255),w,b
 18768  00BBC4  6F95               	movwf	__read_sectors@lba& (0+255),b
 18769  00BBC6  519E               	movf	(__read_sectors@Sector+1)& (0+255),w,b
 18770  00BBC8  218D               	addwfc	(??__read_sectors+1)& (0+255),w,b
 18771  00BBCA  6F96               	movwf	(__read_sectors@lba+1)& (0+255),b
 18772  00BBCC  519F               	movf	(__read_sectors@Sector+2)& (0+255),w,b
 18773  00BBCE  218E               	addwfc	(??__read_sectors+2)& (0+255),w,b
 18774  00BBD0  6F97               	movwf	(__read_sectors@lba+2)& (0+255),b
 18775  00BBD2  51A0               	movf	(__read_sectors@Sector+3)& (0+255),w,b
 18776  00BBD4  218F               	addwfc	(??__read_sectors+3)& (0+255),w,b
 18777  00BBD6  6F98               	movwf	(__read_sectors@lba+3)& (0+255),b
 18778                           
 18779                           ; BSR set to: 0
 18780                           ;fat_filelib.c: 621: if (fatfs_sector_read(&_fs, lba, buffer, count))
 18781  00BBD8  0E09               	movlw	high __fs
 18782  00BBDA  6E20               	movwf	fatfs_sector_read@fs+1,c
 18783  00BBDC  0E78               	movlw	low __fs
 18784  00BBDE  6E1F               	movwf	fatfs_sector_read@fs,c
 18785  00BBE0  C095  F021         	movff	__read_sectors@lba,fatfs_sector_read@lba
 18786  00BBE4  C096  F022         	movff	__read_sectors@lba+1,fatfs_sector_read@lba+1
 18787  00BBE8  C097  F023         	movff	__read_sectors@lba+2,fatfs_sector_read@lba+2
 18788  00BBEC  C098  F024         	movff	__read_sectors@lba+3,fatfs_sector_read@lba+3
 18789  00BBF0  C087  F026         	movff	__read_sectors@buffer+1,fatfs_sector_read@target+1
 18790  00BBF4  C086  F025         	movff	__read_sectors@buffer,fatfs_sector_read@target
 18791  00BBF8  C088  F027         	movff	__read_sectors@count,fatfs_sector_read@count
 18792  00BBFC  C089  F028         	movff	__read_sectors@count+1,fatfs_sector_read@count+1
 18793  00BC00  C08A  F029         	movff	__read_sectors@count+2,fatfs_sector_read@count+2
 18794  00BC04  C08B  F02A         	movff	__read_sectors@count+3,fatfs_sector_read@count+3
 18795  00BC08  EC19  F023         	call	_fatfs_sector_read	;wreg free
 18796  00BC0C  5020               	movf	?_fatfs_sector_read+1,w,c
 18797  00BC0E  101F               	iorwf	?_fatfs_sector_read,w,c
 18798  00BC10  E009               	bz	l11490
 18799                           
 18800                           ;fat_filelib.c: 622: return count;
 18801  00BC12  C088  F080         	movff	__read_sectors@count,?__read_sectors
 18802  00BC16  C089  F081         	movff	__read_sectors@count+1,?__read_sectors+1
 18803  00BC1A  C08A  F082         	movff	__read_sectors@count+2,?__read_sectors+2
 18804  00BC1E  C08B  F083         	movff	__read_sectors@count+3,?__read_sectors+3
 18805  00BC22  D006               	goto	l515
 18806  00BC24                     l11490:
 18807                           
 18808                           ;fat_filelib.c: 623: else
 18809                           ;fat_filelib.c: 624: return 0;
 18810  00BC24  0E00               	movlw	0
 18811  00BC26  0100               	movlb	0	; () banked
 18812  00BC28  6F80               	movwf	?__read_sectors& (0+255),b
 18813  00BC2A  6F81               	movwf	(?__read_sectors+1)& (0+255),b
 18814  00BC2C  6F82               	movwf	(?__read_sectors+2)& (0+255),b
 18815  00BC2E  6F83               	movwf	(?__read_sectors+3)& (0+255),b
 18816  00BC30                     l515:
 18817  00BC30  0012               	return	
 18818  00BC32                     __end_of__read_sectors:
 18819                           	opt stack 0
 18820                           tosu	equ	0xFFF
 18821                           tosh	equ	0xFFE
 18822                           tosl	equ	0xFFD
 18823                           pclath	equ	0xFFA
 18824                           tblptru	equ	0xFF8
 18825                           tblptrh	equ	0xFF7
 18826                           tblptrl	equ	0xFF6
 18827                           tablat	equ	0xFF5
 18828                           prodh	equ	0xFF4
 18829                           prodl	equ	0xFF3
 18830                           indf0	equ	0xFEF
 18831                           postinc0	equ	0xFEE
 18832                           fsr0h	equ	0xFEA
 18833                           fsr0l	equ	0xFE9
 18834                           wreg	equ	0xFE8
 18835                           indf1	equ	0xFE7
 18836                           postinc1	equ	0xFE6
 18837                           postdec1	equ	0xFE5
 18838                           fsr1h	equ	0xFE2
 18839                           fsr1l	equ	0xFE1
 18840                           indf2	equ	0xFDF
 18841                           postinc2	equ	0xFDE
 18842                           postdec2	equ	0xFDD
 18843                           fsr2h	equ	0xFDA
 18844                           fsr2l	equ	0xFD9
 18845                           status	equ	0xFD8
 18846                           
 18847 ;; *************** function _fatfs_sector_read *****************
 18848 ;; Defined at:
 18849 ;;		line 204 in file "fat_access.c"
 18850 ;; Parameters:    Size  Location     Type
 18851 ;;  fs              2   30[COMRAM] PTR struct fatfs
 18852 ;;		 -> _fs(1095), 
 18853 ;;  lba             4   32[COMRAM] unsigned long 
 18854 ;;  target          2   36[COMRAM] PTR unsigned char 
 18855 ;;		 -> data(1), fl_fgetc@data(1), RAM(3967), NULL(0), 
 18856 ;;  count           4   38[COMRAM] unsigned long 
 18857 ;; Auto vars:     Size  Location     Type
 18858 ;;		None
 18859 ;; Return value:  Size  Location     Type
 18860 ;;                  2   30[COMRAM] int 
 18861 ;; Registers used:
 18862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 18863 ;; Tracked objects:
 18864 ;;		On entry : 0/0
 18865 ;;		On exit  : 0/0
 18866 ;;		Unchanged: 0/0
 18867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18868 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18871 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18872 ;;Total ram usage:       14 bytes
 18873 ;; Hardware stack levels used:    1
 18874 ;; Hardware stack levels required when called:    3
 18875 ;; This function calls:
 18876 ;;		_media_read
 18877 ;; This function is called by:
 18878 ;;		__read_sectors
 18879 ;; This function uses a non-reentrant model
 18880 ;;
 18881                           
 18882                           	psect	text46
 18883  004632                     __ptext46:
 18884                           	opt stack 0
 18885  004632                     _fatfs_sector_read:
 18886                           	opt stack 24
 18887                           
 18888                           ;fat_access.c: 206: return fs->disk_io.read_media(lba, target, count);
 18889                           
 18890                           ;incstack = 0
 18891  004632  C021  F009         	movff	fatfs_sector_read@lba,media_read@sector
 18892  004636  C022  F00A         	movff	fatfs_sector_read@lba+1,media_read@sector+1
 18893  00463A  C023  F00B         	movff	fatfs_sector_read@lba+2,media_read@sector+2
 18894  00463E  C024  F00C         	movff	fatfs_sector_read@lba+3,media_read@sector+3
 18895  004642  C026  F00E         	movff	fatfs_sector_read@target+1,media_read@buffer+1
 18896  004646  C025  F00D         	movff	fatfs_sector_read@target,media_read@buffer
 18897  00464A  C027  F00F         	movff	fatfs_sector_read@count,media_read@sector_count
 18898  00464E  C028  F010         	movff	fatfs_sector_read@count+1,media_read@sector_count+1
 18899  004652  C029  F011         	movff	fatfs_sector_read@count+2,media_read@sector_count+2
 18900  004656  C02A  F012         	movff	fatfs_sector_read@count+3,media_read@sector_count+3
 18901  00465A  EE20 F029          	lfsr	2,41
 18902  00465E  501F               	movf	fatfs_sector_read@fs,w,c
 18903  004660  26D9               	addwf	fsr2l,f,c
 18904  004662  5020               	movf	fatfs_sector_read@fs+1,w,c
 18905  004664  22DA               	addwfc	fsr2h,f,c
 18906  004666  CFDE F02B          	movff	postinc2,??_fatfs_sector_read
 18907  00466A  CFDD F02C          	movff	postdec2,??_fatfs_sector_read+1
 18908  00466E  D801               	call	u11718
 18909  004670  D009               	goto	u11719
 18910  004672                     u11718:
 18911  004672  0005               	push	
 18912  004674  6EFA               	movwf	pclath,c
 18913  004676  502B               	movf	??_fatfs_sector_read,w,c
 18914  004678  6EFD               	movwf	tosl,c
 18915  00467A  502C               	movf	??_fatfs_sector_read+1,w,c
 18916  00467C  6EFE               	movwf	tosh,c
 18917  00467E  6AFF               	clrf	tosu,c
 18918  004680  50FA               	movf	pclath,w,c
 18919  004682  0012               	return		;indir
 18920  004684                     u11719:
 18921  004684  C009  F01F         	movff	?_media_read,?_fatfs_sector_read
 18922  004688  C00A  F020         	movff	?_media_read+1,?_fatfs_sector_read+1
 18923  00468C  0012               	return	
 18924  00468E                     __end_of_fatfs_sector_read:
 18925                           	opt stack 0
 18926                           tosu	equ	0xFFF
 18927                           tosh	equ	0xFFE
 18928                           tosl	equ	0xFFD
 18929                           pclath	equ	0xFFA
 18930                           tblptru	equ	0xFF8
 18931                           tblptrh	equ	0xFF7
 18932                           tblptrl	equ	0xFF6
 18933                           tablat	equ	0xFF5
 18934                           prodh	equ	0xFF4
 18935                           prodl	equ	0xFF3
 18936                           indf0	equ	0xFEF
 18937                           postinc0	equ	0xFEE
 18938                           fsr0h	equ	0xFEA
 18939                           fsr0l	equ	0xFE9
 18940                           wreg	equ	0xFE8
 18941                           indf1	equ	0xFE7
 18942                           postinc1	equ	0xFE6
 18943                           postdec1	equ	0xFE5
 18944                           fsr1h	equ	0xFE2
 18945                           fsr1l	equ	0xFE1
 18946                           indf2	equ	0xFDF
 18947                           postinc2	equ	0xFDE
 18948                           postdec2	equ	0xFDD
 18949                           fsr2h	equ	0xFDA
 18950                           fsr2l	equ	0xFD9
 18951                           status	equ	0xFD8
 18952                           
 18953 ;; *************** function _fl_fopen *****************
 18954 ;; Defined at:
 18955 ;;		line 693 in file "fat_filelib.c"
 18956 ;; Parameters:    Size  Location     Type
 18957 ;;  path            2  124[BANK0 ] PTR const unsigned char 
 18958 ;;		 -> s(17), m(30), 
 18959 ;;  mode            2  126[BANK0 ] PTR const unsigned char 
 18960 ;;		 -> STR_43(2), STR_36(2), STR_29(2), STR_23(2), 
 18961 ;;		 -> STR_21(2), STR_18(2), STR_10(2), 
 18962 ;; Auto vars:     Size  Location     Type
 18963 ;;  file            2  128[BANK1 ] PTR struct sFL_FILE
 18964 ;;		 -> RAM(3967), NULL(0), 
 18965 ;;  i               2  126[BANK1 ] int 
 18966 ;;  flags           1  130[BANK1 ] unsigned char 
 18967 ;; Return value:  Size  Location     Type
 18968 ;;                  2  124[BANK0 ] PTR void 
 18969 ;; Registers used:
 18970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 18971 ;; Tracked objects:
 18972 ;;		On entry : 0/0
 18973 ;;		On exit  : 0/0
 18974 ;;		Unchanged: 0/0
 18975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18976 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18977 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18978 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18979 ;;      Totals:         0       4       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18980 ;;Total ram usage:       11 bytes
 18981 ;; Hardware stack levels used:    1
 18982 ;; Hardware stack levels required when called:   10
 18983 ;; This function calls:
 18984 ;;		__create_file
 18985 ;;		__open_file
 18986 ;;		_fl_init
 18987 ;;		_strlen
 18988 ;; This function is called by:
 18989 ;;		_fl_remove
 18990 ;;		_File_write
 18991 ;;		_File_append
 18992 ;;		_File_read
 18993 ;;		_File_read_
 18994 ;; This function uses a non-reentrant model
 18995 ;;
 18996                           
 18997                           	psect	text47
 18998  006D54                     __ptext47:
 18999                           	opt stack 0
 19000  006D54                     _fl_fopen:
 19001                           	opt stack 18
 19002                           
 19003                           ;fat_filelib.c: 695: int i;
 19004                           ;fat_filelib.c: 696: FL_FILE* file;
 19005                           ;fat_filelib.c: 697: uint8 flags = 0;
 19006                           
 19007                           ;incstack = 0
 19008  006D54  0101               	movlb	1	; () banked
 19009  006D56  6B82               	clrf	fl_fopen@flags& (0+255),b
 19010                           
 19011                           ; BSR set to: 1
 19012                           ;fat_filelib.c: 700: { if (_filelib_init==0) fl_init(); };
 19013  006D58  5192               	movf	(__filelib_init+1)& (0+255),w,b
 19014  006D5A  1191               	iorwf	__filelib_init& (0+255),w,b
 19015  006D5C  B4D8               	btfsc	status,2,c
 19016                           
 19017                           ; BSR set to: 1
 19018  006D5E  EC3A  F029         	call	_fl_init	;wreg free
 19019                           
 19020                           ;fat_filelib.c: 702: if (!_filelib_valid)
 19021  006D62  0101               	movlb	1	; () banked
 19022  006D64  5194               	movf	(__filelib_valid+1)& (0+255),w,b
 19023  006D66  1193               	iorwf	__filelib_valid& (0+255),w,b
 19024  006D68  E007               	bz	l11844
 19025                           
 19026                           ;fat_filelib.c: 705: if (!path || !mode)
 19027                           
 19028                           ; BSR set to: 0
 19029                           
 19030                           ; BSR set to: 0
 19031                           
 19032                           ; BSR set to: 1
 19033                           ;fat_filelib.c: 703: return (0);
 19034  006D6A  0100               	movlb	0	; () banked
 19035  006D6C  51FD               	movf	(fl_fopen@path+1)& (0+255),w,b
 19036  006D6E  11FC               	iorwf	fl_fopen@path& (0+255),w,b
 19037  006D70  E003               	bz	l11844
 19038                           
 19039                           ; BSR set to: 0
 19040  006D72  51FF               	movf	(fl_fopen@mode+1)& (0+255),w,b
 19041  006D74  11FE               	iorwf	fl_fopen@mode& (0+255),w,b
 19042  006D76  E105               	bnz	l11848
 19043  006D78                     l11844:
 19044                           
 19045                           ; BSR set to: 0
 19046                           ;fat_filelib.c: 706: return (0);
 19047  006D78  0E00               	movlw	0
 19048  006D7A  0100               	movlb	0	; () banked
 19049  006D7C  6FFD               	movwf	(?_fl_fopen+1)& (0+255),b
 19050  006D7E  6FFC               	movwf	?_fl_fopen& (0+255),b
 19051  006D80  D0AA               	goto	l545
 19052  006D82                     l11848:
 19053                           
 19054                           ; BSR set to: 0
 19055                           ;fat_filelib.c: 726: for (i=0;i<(int)strlen(mode);i++)
 19056  006D82  0E00               	movlw	0
 19057  006D84  0101               	movlb	1	; () banked
 19058  006D86  6B7F               	clrf	(fl_fopen@i+1)& (0+255),b
 19059  006D88  6B7E               	clrf	fl_fopen@i& (0+255),b
 19060  006D8A  D044               	goto	l11870
 19061  006D8C                     l11850:
 19062                           
 19063                           ; BSR set to: 1
 19064                           ;fat_filelib.c: 731: case 'R':
 19065                           ;fat_filelib.c: 732: flags |= (1 << 0);
 19066  006D8C  0101               	movlb	1	; () banked
 19067  006D8E  8182               	bsf	fl_fopen@flags& (0+255),0,b
 19068                           
 19069                           ;fat_filelib.c: 733: break;
 19070  006D90  D03E               	goto	l11868
 19071  006D92                     l11852:
 19072                           
 19073                           ; BSR set to: 1
 19074                           ;fat_filelib.c: 735: case 'W':
 19075                           ;fat_filelib.c: 736: flags |= (1 << 1);
 19076  006D92  0101               	movlb	1	; () banked
 19077  006D94  8382               	bsf	fl_fopen@flags& (0+255),1,b
 19078  006D96                     
 19079                           ;fat_filelib.c: 737: flags |= (1 << 4);
 19080  006D96  0101               	movlb	1	; () banked
 19081  006D98  8982               	bsf	fl_fopen@flags& (0+255),4,b
 19082  006D9A  D011               	goto	L47
 19083  006D9C                     l559:
 19084                           
 19085                           ; BSR set to: 1
 19086                           ;fat_filelib.c: 747: if (flags & (1 << 0))
 19087  006D9C  0101               	movlb	1	; () banked
 19088  006D9E  A182               	btfss	fl_fopen@flags& (0+255),0,b
 19089  006DA0  D002               	goto	l560
 19090                           
 19091                           ; BSR set to: 1
 19092                           ;fat_filelib.c: 748: flags |= (1 << 1);
 19093  006DA2  8382               	bsf	fl_fopen@flags& (0+255),1,b
 19094  006DA4  D034               	goto	l11868
 19095  006DA6                     l560:
 19096                           
 19097                           ; BSR set to: 1
 19098                           ;fat_filelib.c: 749: else if (flags & (1 << 1))
 19099  006DA6  0101               	movlb	1	; () banked
 19100  006DA8  A382               	btfss	fl_fopen@flags& (0+255),1,b
 19101  006DAA  D002               	goto	l562
 19102                           
 19103                           ; BSR set to: 1
 19104                           ;fat_filelib.c: 750: {
 19105                           ;fat_filelib.c: 751: flags |= (1 << 0);
 19106  006DAC  8182               	bsf	fl_fopen@flags& (0+255),0,b
 19107  006DAE  D7F3               	goto	L49
 19108  006DB0                     l562:
 19109                           
 19110                           ; BSR set to: 1
 19111                           ;fat_filelib.c: 755: else if (flags & (1 << 2))
 19112  006DB0  0101               	movlb	1	; () banked
 19113  006DB2  A582               	btfss	fl_fopen@flags& (0+255),2,b
 19114  006DB4  D02C               	goto	l11868
 19115                           
 19116                           ; BSR set to: 1
 19117                           ;fat_filelib.c: 756: {
 19118                           ;fat_filelib.c: 757: flags |= (1 << 0);
 19119  006DB6  8182               	bsf	fl_fopen@flags& (0+255),0,b
 19120  006DB8                     
 19121                           ;fat_filelib.c: 758: flags |= (1 << 1);
 19122  006DB8  0101               	movlb	1	; () banked
 19123  006DBA  8382               	bsf	fl_fopen@flags& (0+255),1,b
 19124                           
 19125                           ;fat_filelib.c: 759: flags |= (1 << 2);
 19126  006DBC  8582               	bsf	fl_fopen@flags& (0+255),2,b
 19127  006DBE                     L47:
 19128                           
 19129                           ;fat_filelib.c: 760: flags |= (1 << 5);
 19130  006DBE  0101               	movlb	1	; () banked
 19131  006DC0  8B82               	bsf	fl_fopen@flags& (0+255),5,b
 19132  006DC2  D025               	goto	l11868
 19133  006DC4                     l11862:
 19134                           
 19135                           ; BSR set to: 1
 19136                           ;fat_filelib.c: 764: case 'B':
 19137                           ;fat_filelib.c: 765: flags |= (1 << 3);
 19138  006DC4  0101               	movlb	1	; () banked
 19139  006DC6  8782               	bsf	fl_fopen@flags& (0+255),3,b
 19140                           
 19141                           ;fat_filelib.c: 766: break;
 19142  006DC8  D022               	goto	l11868
 19143  006DCA                     l11866:
 19144                           
 19145                           ; BSR set to: 1
 19146  006DCA  C0FE  F17C         	movff	fl_fopen@mode,??_fl_fopen
 19147  006DCE  C0FF  F17D         	movff	fl_fopen@mode+1,??_fl_fopen+1
 19148  006DD2  0101               	movlb	1	; () banked
 19149  006DD4  517E               	movf	fl_fopen@i& (0+255),w,b
 19150  006DD6  277C               	addwf	??_fl_fopen& (0+255),f,b
 19151  006DD8  517F               	movf	(fl_fopen@i+1)& (0+255),w,b
 19152  006DDA  237D               	addwfc	(??_fl_fopen+1)& (0+255),f,b
 19153  006DDC  C17C  FFF6         	movff	??_fl_fopen,tblptrl
 19154  006DE0  C17D  FFF7         	movff	??_fl_fopen+1,tblptrh
 19155  006DE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19156  006DE4  6AF8               	clrf	tblptru,c
 19157  006DE6                     	endif
 19158  006DE6                     	if	0	;tblptru may be non-zero
 19159  006DE6                     	endif
 19160  006DE6  0008               	tblrd		*
 19161  006DE8  50F5               	movf	tablat,w,c
 19162                           
 19163                           ; Switch size 1, requested type "speed"
 19164                           ; Number of cases is 9, Range of values is 43 to 119
 19165                           ; switch strategies available:
 19166                           ; Name         Instructions Cycles
 19167                           ; simple_byte           28    15 (average)
 19168                           ;	Chosen strategy is simple_byte
 19169  006DEA  0A2B               	xorlw	43	; case 43
 19170  006DEC  E0D7               	bz	l559
 19171  006DEE  0A6A               	xorlw	106	; case 65
 19172  006DF0  E0E3               	bz	L48
 19173  006DF2  0A03               	xorlw	3	; case 66
 19174  006DF4  E0E7               	bz	l11862
 19175  006DF6  0A10               	xorlw	16	; case 82
 19176  006DF8  E0C9               	bz	l11850
 19177  006DFA  0A05               	xorlw	5	; case 87
 19178  006DFC  E0CA               	bz	l11852
 19179  006DFE  0A36               	xorlw	54	; case 97
 19180  006E00  E0DB               	bz	L48
 19181  006E02  0A03               	xorlw	3	; case 98
 19182  006E04  E0DF               	bz	l11862
 19183  006E06  0A10               	xorlw	16	; case 114
 19184  006E08  E0C1               	bz	l11850
 19185  006E0A  0A05               	xorlw	5	; case 119
 19186  006E0C  E0C2               	bz	l11852
 19187  006E0E                     l11868:
 19188                           
 19189                           ; BSR set to: 1
 19190  006E0E  0101               	movlb	1	; () banked
 19191  006E10  4B7E               	infsnz	fl_fopen@i& (0+255),f,b
 19192  006E12  2B7F               	incf	(fl_fopen@i+1)& (0+255),f,b
 19193  006E14                     l11870:
 19194                           
 19195                           ; BSR set to: 1
 19196  006E14  C0FF  F002         	movff	fl_fopen@mode+1,strlen@s+1
 19197  006E18  0100               	movlb	0	; () banked
 19198  006E1A  C0FE  F001         	movff	fl_fopen@mode,strlen@s
 19199  006E1E  EC71  F022         	call	_strlen	;wreg free
 19200  006E22  0101               	movlb	1	; () banked
 19201  006E24  517F               	movf	(fl_fopen@i+1)& (0+255),w,b
 19202  006E26  0A80               	xorlw	128
 19203  006E28  6F7C               	movwf	??_fl_fopen& (0+255),b
 19204  006E2A  5001               	movf	?_strlen,w,c
 19205  006E2C  5D7E               	subwf	fl_fopen@i& (0+255),w,b
 19206  006E2E  5002               	movf	?_strlen+1,w,c
 19207  006E30  0A80               	xorlw	128
 19208  006E32  597C               	subwfb	??_fl_fopen& (0+255),w,b
 19209  006E34  E3CA               	bnc	l11866
 19210                           
 19211                           ; BSR set to: 1
 19212                           ;fat_filelib.c: 768: }
 19213                           ;fat_filelib.c: 769: file = (0);
 19214                           
 19215                           ; BSR set to: 1
 19216  006E36  6B81               	clrf	(fl_fopen@file+1)& (0+255),b
 19217  006E38  6B80               	clrf	fl_fopen@file& (0+255),b
 19218                           
 19219                           ; BSR set to: 1
 19220                           ;fat_filelib.c: 777: if (!_fs.disk_io.write_media)
 19221  006E3A  EE29  F0A3         	lfsr	2,__fs+43
 19222  006E3E  50DE               	movf	postinc2,w,c
 19223  006E40  10DD               	iorwf	postdec2,w,c
 19224  006E42  E102               	bnz	l571
 19225                           
 19226                           ; BSR set to: 1
 19227                           ;fat_filelib.c: 778: flags &= ~((1 << 5) | (1 << 1) | (1 << 2));
 19228  006E44  0ED9               	movlw	217
 19229  006E46  1782               	andwf	fl_fopen@flags& (0+255),f,b
 19230  006E48                     l571:
 19231                           
 19232                           ; BSR set to: 1
 19233                           ;fat_filelib.c: 783: if (flags & (1 << 0))
 19234  006E48  0101               	movlb	1	; () banked
 19235  006E4A  A182               	btfss	fl_fopen@flags& (0+255),0,b
 19236  006E4C  D00B               	goto	l11882
 19237                           
 19238                           ; BSR set to: 1
 19239                           ;fat_filelib.c: 784: file = _open_file(path);
 19240  006E4E  C0FD  F0F3         	movff	fl_fopen@path+1,__open_file@path+1
 19241  006E52  0100               	movlb	0	; () banked
 19242  006E54  C0FC  F0F2         	movff	fl_fopen@path,__open_file@path
 19243  006E58  EC35  F04E         	call	__open_file	;wreg free
 19244  006E5C  C0F2  F180         	movff	?__open_file,fl_fopen@file
 19245  006E60  C0F3  F181         	movff	?__open_file+1,fl_fopen@file+1
 19246  006E64                     l11882:
 19247                           
 19248                           ;fat_filelib.c: 788: if (!file && (flags & (1 << 5)))
 19249  006E64  0101               	movlb	1	; () banked
 19250  006E66  5181               	movf	(fl_fopen@file+1)& (0+255),w,b
 19251  006E68  1180               	iorwf	fl_fopen@file& (0+255),w,b
 19252  006E6A  E10D               	bnz	l11888
 19253                           
 19254                           ; BSR set to: 1
 19255  006E6C  AB82               	btfss	fl_fopen@flags& (0+255),5,b
 19256  006E6E  D00B               	goto	l11888
 19257                           
 19258                           ; BSR set to: 1
 19259                           ;fat_filelib.c: 789: file = _create_file(path);
 19260  006E70  C0FD  F0F3         	movff	fl_fopen@path+1,__create_file@filename+1
 19261  006E74  0100               	movlb	0	; () banked
 19262  006E76  C0FC  F0F2         	movff	fl_fopen@path,__create_file@filename
 19263  006E7A  EC49  F060         	call	__create_file	;wreg free
 19264  006E7E  C0F2  F180         	movff	?__create_file,fl_fopen@file
 19265  006E82  C0F3  F181         	movff	?__create_file+1,fl_fopen@file+1
 19266  006E86                     l11888:
 19267                           
 19268                           ;fat_filelib.c: 793: if (!(flags & (1 << 0)))
 19269  006E86  0101               	movlb	1	; () banked
 19270  006E88  A182               	btfss	fl_fopen@flags& (0+255),0,b
 19271                           
 19272                           ; BSR set to: 1
 19273                           ;fat_filelib.c: 794: if ((flags & (1 << 5)) && !file)
 19274  006E8A  AB82               	btfss	fl_fopen@flags& (0+255),5,b
 19275  006E8C  D013               	goto	l11898
 19276                           
 19277                           ; BSR set to: 1
 19278  006E8E  5181               	movf	(fl_fopen@file+1)& (0+255),w,b
 19279  006E90  1180               	iorwf	fl_fopen@file& (0+255),w,b
 19280  006E92  E110               	bnz	l11898
 19281                           
 19282                           ; BSR set to: 1
 19283                           ;fat_filelib.c: 795: if (flags & ((1 << 1) | (1 << 2)))
 19284  006E94  C182  F17C         	movff	fl_fopen@flags,??_fl_fopen
 19285  006E98  0E06               	movlw	6
 19286  006E9A  177C               	andwf	??_fl_fopen& (0+255),f,b
 19287  006E9C  E00B               	bz	l11898
 19288                           
 19289                           ; BSR set to: 1
 19290                           ;fat_filelib.c: 796: file = _open_file(path);
 19291  006E9E  C0FD  F0F3         	movff	fl_fopen@path+1,__open_file@path+1
 19292  006EA2  0100               	movlb	0	; () banked
 19293  006EA4  C0FC  F0F2         	movff	fl_fopen@path,__open_file@path
 19294  006EA8  EC35  F04E         	call	__open_file	;wreg free
 19295  006EAC  C0F2  F180         	movff	?__open_file,fl_fopen@file
 19296  006EB0  C0F3  F181         	movff	?__open_file+1,fl_fopen@file+1
 19297  006EB4                     l11898:
 19298                           
 19299                           ;fat_filelib.c: 798: if (file)
 19300  006EB4  0101               	movlb	1	; () banked
 19301  006EB6  5181               	movf	(fl_fopen@file+1)& (0+255),w,b
 19302  006EB8  1180               	iorwf	fl_fopen@file& (0+255),w,b
 19303  006EBA  E008               	bz	l11902
 19304                           
 19305                           ; BSR set to: 1
 19306                           ;fat_filelib.c: 799: file->flags = flags;
 19307  006EBC  EE22 F03F          	lfsr	2,575
 19308  006EC0  5180               	movf	fl_fopen@file& (0+255),w,b
 19309  006EC2  26D9               	addwf	fsr2l,f,c
 19310  006EC4  5181               	movf	(fl_fopen@file+1)& (0+255),w,b
 19311  006EC6  22DA               	addwfc	fsr2h,f,c
 19312  006EC8  C182  FFDF         	movff	fl_fopen@flags,indf2
 19313  006ECC                     l11902:
 19314                           
 19315                           ; BSR set to: 1
 19316                           ;fat_filelib.c: 802: return file;
 19317  006ECC  C181  F0FD         	movff	fl_fopen@file+1,?_fl_fopen+1
 19318  006ED0  0100               	movlb	0	; () banked
 19319  006ED2  C180  F0FC         	movff	fl_fopen@file,?_fl_fopen
 19320  006ED6                     l545:
 19321                           
 19322                           ; BSR set to: 0
 19323  006ED6  0012               	return	
 19324  006ED8                     __end_of_fl_fopen:
 19325                           	opt stack 0
 19326                           tosu	equ	0xFFF
 19327                           tosh	equ	0xFFE
 19328                           tosl	equ	0xFFD
 19329                           pclath	equ	0xFFA
 19330                           tblptru	equ	0xFF8
 19331                           tblptrh	equ	0xFF7
 19332                           tblptrl	equ	0xFF6
 19333                           tablat	equ	0xFF5
 19334                           prodh	equ	0xFF4
 19335                           prodl	equ	0xFF3
 19336                           indf0	equ	0xFEF
 19337                           postinc0	equ	0xFEE
 19338                           fsr0h	equ	0xFEA
 19339                           fsr0l	equ	0xFE9
 19340                           wreg	equ	0xFE8
 19341                           indf1	equ	0xFE7
 19342                           postinc1	equ	0xFE6
 19343                           postdec1	equ	0xFE5
 19344                           fsr1h	equ	0xFE2
 19345                           fsr1l	equ	0xFE1
 19346                           indf2	equ	0xFDF
 19347                           postinc2	equ	0xFDE
 19348                           postdec2	equ	0xFDD
 19349                           fsr2h	equ	0xFDA
 19350                           fsr2l	equ	0xFD9
 19351                           status	equ	0xFD8
 19352                           
 19353 ;; *************** function __open_file *****************
 19354 ;; Defined at:
 19355 ;;		line 327 in file "fat_filelib.c"
 19356 ;; Parameters:    Size  Location     Type
 19357 ;;  path            2  114[BANK0 ] PTR const unsigned char 
 19358 ;;		 -> s(17), m(30), 
 19359 ;; Auto vars:     Size  Location     Type
 19360 ;;  sfEntry        32   79[BANK1 ] struct fat_dir_entry
 19361 ;;  file            2   77[BANK1 ] PTR struct sFL_FILE
 19362 ;;		 -> RAM(3967), NULL(0), 
 19363 ;; Return value:  Size  Location     Type
 19364 ;;                  2  114[BANK0 ] PTR struct sFL_FILE
 19365 ;; Registers used:
 19366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 19367 ;; Tracked objects:
 19368 ;;		On entry : 0/0
 19369 ;;		On exit  : 0/0
 19370 ;;		Unchanged: 0/0
 19371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19372 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19373 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19374 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19375 ;;      Totals:         0      10      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19376 ;;Total ram usage:       44 bytes
 19377 ;; Hardware stack levels used:    1
 19378 ;; Hardware stack levels required when called:    9
 19379 ;; This function calls:
 19380 ;;		__allocate_file
 19381 ;;		__check_file_open
 19382 ;;		__free_file
 19383 ;;		__open_directory
 19384 ;;		_fatfs_cache_init
 19385 ;;		_fatfs_entry_is_file
 19386 ;;		_fatfs_fat_purge
 19387 ;;		_fatfs_get_file_entry
 19388 ;;		_fatfs_get_root_cluster
 19389 ;;		_fatfs_split_path
 19390 ;;		_memcpy
 19391 ;;		_memset
 19392 ;; This function is called by:
 19393 ;;		_fl_fopen
 19394 ;; This function uses a non-reentrant model
 19395 ;;
 19396                           
 19397                           	psect	text48
 19398  009C6A                     __ptext48:
 19399                           	opt stack 0
 19400  009C6A                     __open_file:
 19401                           	opt stack 18
 19402                           
 19403                           ;fat_filelib.c: 329: FL_FILE* file;
 19404                           ;fat_filelib.c: 330: struct fat_dir_entry sfEntry;
 19405                           ;fat_filelib.c: 333: file = _allocate_file();
 19406                           
 19407                           ; BSR set to: 0
 19408                           ;incstack = 0
 19409  009C6A  ECD0  F021         	call	__allocate_file	;wreg free
 19410  009C6E  C00F  F14D         	movff	?__allocate_file,__open_file@file
 19411  009C72  C010  F14E         	movff	?__allocate_file+1,__open_file@file+1
 19412                           
 19413                           ;fat_filelib.c: 334: if (!file)
 19414  009C76  0101               	movlb	1	; () banked
 19415  009C78  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19416  009C7A  114D               	iorwf	__open_file@file& (0+255),w,b
 19417  009C7C  E101 D175          	bz	L53
 19418                           
 19419                           ;fat_filelib.c: 338: memset(file->path, '\0', sizeof(file->path));
 19420                           
 19421                           ; BSR set to: 0
 19422                           
 19423                           ; BSR set to: 0
 19424                           
 19425                           ; BSR set to: 1
 19426                           ;fat_filelib.c: 335: return (0);
 19427  009C80  0E12               	movlw	18
 19428  009C82  254D               	addwf	__open_file@file& (0+255),w,b
 19429  009C84  6E01               	movwf	memset@p1,c
 19430  009C86  0E00               	movlw	0
 19431  009C88  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19432  009C8A  6E02               	movwf	memset@p1+1,c
 19433  009C8C  6A04               	clrf	memset@c+1,c
 19434  009C8E  6A03               	clrf	memset@c,c
 19435  009C90  6A06               	clrf	memset@n+1,c
 19436  009C92  0E0A               	movlw	10
 19437  009C94  6E05               	movwf	memset@n,c
 19438  009C96  EC1A  F020         	call	_memset	;wreg free
 19439                           
 19440                           ;fat_filelib.c: 339: memset(file->filename, '\0', sizeof(file->filename));
 19441  009C9A  0E1C               	movlw	28
 19442  009C9C  0101               	movlb	1	; () banked
 19443  009C9E  254D               	addwf	__open_file@file& (0+255),w,b
 19444  009CA0  6E01               	movwf	memset@p1,c
 19445  009CA2  0E00               	movlw	0
 19446  009CA4  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19447  009CA6  6E02               	movwf	memset@p1+1,c
 19448  009CA8  6A04               	clrf	memset@c+1,c
 19449  009CAA  6A03               	clrf	memset@c,c
 19450  009CAC  6A06               	clrf	memset@n+1,c
 19451  009CAE  0E0A               	movlw	10
 19452  009CB0  6E05               	movwf	memset@n,c
 19453  009CB2  EC1A  F020         	call	_memset	;wreg free
 19454                           
 19455                           ;fat_filelib.c: 342: if (fatfs_split_path((char*)path, file->path, sizeof(file->path), f
      +                          ile->filename, sizeof(file->filename)) == -1)
 19456  009CB6  C0F3  F01E         	movff	__open_file@path+1,fatfs_split_path@full_path+1
 19457  009CBA  C0F2  F01D         	movff	__open_file@path,fatfs_split_path@full_path
 19458  009CBE  0E12               	movlw	18
 19459  009CC0  0101               	movlb	1	; () banked
 19460  009CC2  254D               	addwf	__open_file@file& (0+255),w,b
 19461  009CC4  6E1F               	movwf	fatfs_split_path@path,c
 19462  009CC6  0E00               	movlw	0
 19463  009CC8  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19464  009CCA  6E20               	movwf	fatfs_split_path@path+1,c
 19465  009CCC  6A22               	clrf	fatfs_split_path@max_path+1,c
 19466  009CCE  0E0A               	movlw	10
 19467  009CD0  6E21               	movwf	fatfs_split_path@max_path,c
 19468  009CD2  0E1C               	movlw	28
 19469  009CD4  254D               	addwf	__open_file@file& (0+255),w,b
 19470  009CD6  6E23               	movwf	fatfs_split_path@filename,c
 19471  009CD8  0E00               	movlw	0
 19472  009CDA  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19473  009CDC  6E24               	movwf	fatfs_split_path@filename+1,c
 19474  009CDE  6A26               	clrf	fatfs_split_path@max_filename+1,c
 19475  009CE0  0E0A               	movlw	10
 19476  009CE2  6E25               	movwf	fatfs_split_path@max_filename,c
 19477  009CE4  EC1D  F02F         	call	_fatfs_split_path	;wreg free
 19478  009CE8  281D               	incf	?_fatfs_split_path,w,c
 19479  009CEA  B4D8               	btfsc	status,2,c
 19480  009CEC  281E               	incf	?_fatfs_split_path+1,w,c
 19481  009CEE  E108               	bnz	l11268
 19482                           
 19483                           ;fat_filelib.c: 343: {
 19484                           ;fat_filelib.c: 344: _free_file(file);
 19485  009CF0  C14E  F010         	movff	__open_file@file+1,__free_file@file+1
 19486  009CF4  0101               	movlb	1	; () banked
 19487  009CF6  C14D  F00F         	movff	__open_file@file,__free_file@file
 19488  009CFA  EC8F  F020         	call	__free_file	;wreg free
 19489  009CFE  D135               	goto	L53
 19490  009D00                     l11268:
 19491                           
 19492                           ;fat_filelib.c: 346: }
 19493                           ;fat_filelib.c: 349: if (_check_file_open(file))
 19494  009D00  C14E  F026         	movff	__open_file@file+1,__check_file_open@file+1
 19495  009D04  0101               	movlb	1	; () banked
 19496  009D06  C14D  F025         	movff	__open_file@file,__check_file_open@file
 19497  009D0A  ECA7  F02A         	call	__check_file_open	;wreg free
 19498  009D0E  5026               	movf	?__check_file_open+1,w,c
 19499  009D10  1025               	iorwf	?__check_file_open,w,c
 19500  009D12  E008               	bz	l11276
 19501                           
 19502                           ;fat_filelib.c: 350: {
 19503                           ;fat_filelib.c: 351: _free_file(file);
 19504  009D14  C14E  F010         	movff	__open_file@file+1,__free_file@file+1
 19505  009D18  0101               	movlb	1	; () banked
 19506  009D1A  C14D  F00F         	movff	__open_file@file,__free_file@file
 19507  009D1E  EC8F  F020         	call	__free_file	;wreg free
 19508  009D22  D123               	goto	L53
 19509  009D24                     l11276:
 19510                           
 19511                           ;fat_filelib.c: 353: }
 19512                           ;fat_filelib.c: 356: if (file->path[0]==0)
 19513  009D24  EE20 F012          	lfsr	2,18
 19514  009D28  0101               	movlb	1	; () banked
 19515  009D2A  514D               	movf	__open_file@file& (0+255),w,b
 19516  009D2C  26D9               	addwf	fsr2l,f,c
 19517  009D2E  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19518  009D30  22DA               	addwfc	fsr2h,f,c
 19519  009D32  50DF               	movf	indf2,w,c
 19520  009D34  E11D               	bnz	l11280
 19521                           
 19522                           ; BSR set to: 1
 19523                           ;fat_filelib.c: 357: file->parentcluster = fatfs_get_root_cluster(&_fs);
 19524  009D36  0E09               	movlw	high __fs
 19525  009D38  6E02               	movwf	fatfs_get_root_cluster@fs+1,c
 19526  009D3A  0E78               	movlw	low __fs
 19527  009D3C  6E01               	movwf	fatfs_get_root_cluster@fs,c
 19528  009D3E  EC86  F01F         	call	_fatfs_get_root_cluster	;wreg free
 19529  009D42  C001  F0F4         	movff	?_fatfs_get_root_cluster,??__open_file
 19530  009D46  C002  F0F5         	movff	?_fatfs_get_root_cluster+1,??__open_file+1
 19531  009D4A  C003  F0F6         	movff	?_fatfs_get_root_cluster+2,??__open_file+2
 19532  009D4E  C004  F0F7         	movff	?_fatfs_get_root_cluster+3,??__open_file+3
 19533  009D52  C14D  FFD9         	movff	__open_file@file,fsr2l
 19534  009D56  C14E  FFDA         	movff	__open_file@file+1,fsr2h
 19535  009D5A  C0F4  FFDE         	movff	??__open_file,postinc2
 19536  009D5E  C0F5  FFDE         	movff	??__open_file+1,postinc2
 19537  009D62  C0F6  FFDE         	movff	??__open_file+2,postinc2
 19538  009D66  C0F7  FFDD         	movff	??__open_file+3,postdec2
 19539  009D6A  06D9               	decf	fsr2l,f,c
 19540  009D6C  06D9               	decf	fsr2l,f,c
 19541  009D6E  D01C               	goto	l11288
 19542  009D70                     l11280:
 19543                           
 19544                           ;fat_filelib.c: 358: else
 19545                           ;fat_filelib.c: 359: {
 19546                           ;fat_filelib.c: 361: if (!_open_directory(file->path, &file->parentcluster))
 19547  009D70  0E12               	movlw	18
 19548  009D72  0101               	movlb	1	; () banked
 19549  009D74  254D               	addwf	__open_file@file& (0+255),w,b
 19550  009D76  0100               	movlb	0	; () banked
 19551  009D78  6FB8               	movwf	__open_directory@path& (0+255),b
 19552  009D7A  0E00               	movlw	0
 19553  009D7C  0101               	movlb	1	; () banked
 19554  009D7E  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19555  009D80  0100               	movlb	0	; () banked
 19556  009D82  6FB9               	movwf	(__open_directory@path+1)& (0+255),b
 19557  009D84  C14E  F0BB         	movff	__open_file@file+1,__open_directory@pathCluster+1
 19558  009D88  C14D  F0BA         	movff	__open_file@file,__open_directory@pathCluster
 19559  009D8C  EC0C  F034         	call	__open_directory	;wreg free
 19560  009D90  0100               	movlb	0	; () banked
 19561  009D92  51B9               	movf	(?__open_directory+1)& (0+255),w,b
 19562  009D94  11B8               	iorwf	?__open_directory& (0+255),w,b
 19563  009D96  E108               	bnz	l11288
 19564                           
 19565                           ; BSR set to: 0
 19566                           ;fat_filelib.c: 362: {
 19567                           ;fat_filelib.c: 363: _free_file(file);
 19568  009D98  C14E  F010         	movff	__open_file@file+1,__free_file@file+1
 19569  009D9C  0101               	movlb	1	; () banked
 19570  009D9E  C14D  F00F         	movff	__open_file@file,__free_file@file
 19571  009DA2  EC8F  F020         	call	__free_file	;wreg free
 19572  009DA6  D0E1               	goto	L53
 19573  009DA8                     l11288:
 19574                           
 19575                           ;fat_filelib.c: 365: }
 19576                           ;fat_filelib.c: 366: }
 19577                           ;fat_filelib.c: 369: if (fatfs_get_file_entry(&_fs, file->parentcluster, file->filename,
      +                          &sfEntry))
 19578  009DA8  0E09               	movlw	high __fs
 19579  009DAA  0100               	movlb	0	; () banked
 19580  009DAC  6FAD               	movwf	(fatfs_get_file_entry@fs+1)& (0+255),b
 19581  009DAE  0E78               	movlw	low __fs
 19582  009DB0  6FAC               	movwf	fatfs_get_file_entry@fs& (0+255),b
 19583  009DB2  C14D  FFD9         	movff	__open_file@file,fsr2l
 19584  009DB6  C14E  FFDA         	movff	__open_file@file+1,fsr2h
 19585  009DBA  CFDE F0AE          	movff	postinc2,fatfs_get_file_entry@Cluster
 19586  009DBE  CFDE F0AF          	movff	postinc2,fatfs_get_file_entry@Cluster+1
 19587  009DC2  CFDE F0B0          	movff	postinc2,fatfs_get_file_entry@Cluster+2
 19588  009DC6  CFDE F0B1          	movff	postinc2,fatfs_get_file_entry@Cluster+3
 19589  009DCA  0E1C               	movlw	28
 19590  009DCC  0101               	movlb	1	; () banked
 19591  009DCE  254D               	addwf	__open_file@file& (0+255),w,b
 19592  009DD0  0100               	movlb	0	; () banked
 19593  009DD2  6FB2               	movwf	fatfs_get_file_entry@name_to_find& (0+255),b
 19594  009DD4  0E00               	movlw	0
 19595  009DD6  0101               	movlb	1	; () banked
 19596  009DD8  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19597  009DDA  0100               	movlb	0	; () banked
 19598  009DDC  6FB3               	movwf	(fatfs_get_file_entry@name_to_find+1)& (0+255),b
 19599  009DDE  0E01               	movlw	high __open_file@sfEntry
 19600  009DE0  6FB5               	movwf	(fatfs_get_file_entry@sfEntry+1)& (0+255),b
 19601  009DE2  0E4F               	movlw	low __open_file@sfEntry
 19602  009DE4  6FB4               	movwf	fatfs_get_file_entry@sfEntry& (0+255),b
 19603  009DE6  ECB5  F049         	call	_fatfs_get_file_entry	;wreg free
 19604  009DEA  C0AC  F0F4         	movff	?_fatfs_get_file_entry,??__open_file
 19605  009DEE  C0AD  F0F5         	movff	?_fatfs_get_file_entry+1,??__open_file+1
 19606  009DF2  C0AE  F0F6         	movff	?_fatfs_get_file_entry+2,??__open_file+2
 19607  009DF6  C0AF  F0F7         	movff	?_fatfs_get_file_entry+3,??__open_file+3
 19608  009DFA  0100               	movlb	0	; () banked
 19609  009DFC  51F7               	movf	(??__open_file+3)& (0+255),w,b
 19610  009DFE  11F4               	iorwf	??__open_file& (0+255),w,b
 19611  009E00  11F5               	iorwf	(??__open_file+1)& (0+255),w,b
 19612  009E02  11F6               	iorwf	(??__open_file+2)& (0+255),w,b
 19613  009E04  E101 D0AA          	bz	l11318
 19614                           
 19615                           ; BSR set to: 0
 19616                           ;fat_filelib.c: 371: if (fatfs_entry_is_file(&sfEntry))
 19617  009E08  0E01               	movlw	high __open_file@sfEntry
 19618  009E0A  6E02               	movwf	fatfs_entry_is_file@entry+1,c
 19619  009E0C  0101               	movlb	1	; () banked
 19620  009E0E  0E4F               	movlw	low __open_file@sfEntry
 19621  009E10  6E01               	movwf	fatfs_entry_is_file@entry,c
 19622  009E12  ECCA  F01F         	call	_fatfs_entry_is_file	;wreg free
 19623  009E16  5002               	movf	?_fatfs_entry_is_file+1,w,c
 19624  009E18  1001               	iorwf	?_fatfs_entry_is_file,w,c
 19625  009E1A  E101 D09F          	bz	l11318
 19626                           
 19627                           ;fat_filelib.c: 372: {
 19628                           ;fat_filelib.c: 374: memcpy(file->shortfilename, sfEntry.Name, 11);
 19629  009E1E  0E26               	movlw	38
 19630  009E20  0101               	movlb	1	; () banked
 19631  009E22  254D               	addwf	__open_file@file& (0+255),w,b
 19632  009E24  6E01               	movwf	memcpy@d1,c
 19633  009E26  0E00               	movlw	0
 19634  009E28  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19635  009E2A  6E02               	movwf	memcpy@d1+1,c
 19636  009E2C  0E20               	movlw	32
 19637  009E2E  6E05               	movwf	memcpy@s1+2,c
 19638  009E30  0E01               	movlw	high __open_file@sfEntry
 19639  009E32  6E04               	movwf	memcpy@s1+1,c
 19640  009E34  0E4F               	movlw	low __open_file@sfEntry
 19641  009E36  6E03               	movwf	memcpy@s1,c
 19642  009E38  6A07               	clrf	memcpy@n+1,c
 19643  009E3A  0E0B               	movlw	11
 19644  009E3C  6E06               	movwf	memcpy@n,c
 19645  009E3E  ECA4  F023         	call	_memcpy	;wreg free
 19646                           
 19647                           ;fat_filelib.c: 375: file->filelength = (sfEntry.FileSize);
 19648  009E42  EE20 F00C          	lfsr	2,12
 19649  009E46  0101               	movlb	1	; () banked
 19650  009E48  514D               	movf	__open_file@file& (0+255),w,b
 19651  009E4A  26D9               	addwf	fsr2l,f,c
 19652  009E4C  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19653  009E4E  22DA               	addwfc	fsr2h,f,c
 19654  009E50  C16B  FFDE         	movff	__open_file@sfEntry+28,postinc2
 19655  009E54  C16C  FFDE         	movff	__open_file@sfEntry+29,postinc2
 19656  009E58  C16D  FFDE         	movff	__open_file@sfEntry+30,postinc2
 19657  009E5C  C16E  FFDE         	movff	__open_file@sfEntry+31,postinc2
 19658                           
 19659                           ; BSR set to: 1
 19660                           ;fat_filelib.c: 376: file->bytenum = 0;
 19661  009E60  EE20 F008          	lfsr	2,8
 19662  009E64  514D               	movf	__open_file@file& (0+255),w,b
 19663  009E66  26D9               	addwf	fsr2l,f,c
 19664  009E68  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19665  009E6A  22DA               	addwfc	fsr2h,f,c
 19666  009E6C  6ADE               	clrf	postinc2,c
 19667  009E6E  6ADE               	clrf	postinc2,c
 19668  009E70  6ADE               	clrf	postinc2,c
 19669  009E72  6ADD               	clrf	postdec2,c
 19670                           
 19671                           ; BSR set to: 1
 19672                           ;fat_filelib.c: 377: file->startcluster = ((((uint32)sfEntry.FstClusHI))<<16) + (sfEntry
      +                          .FstClusLO);
 19673  009E74  5163               	movf	(__open_file@sfEntry+20)& (0+255),w,b
 19674  009E76  0100               	movlb	0	; () banked
 19675  009E78  6FF4               	movwf	??__open_file& (0+255),b
 19676  009E7A  0101               	movlb	1	; () banked
 19677  009E7C  5164               	movf	(__open_file@sfEntry+21)& (0+255),w,b
 19678  009E7E  0100               	movlb	0	; () banked
 19679  009E80  6FF5               	movwf	(??__open_file+1)& (0+255),b
 19680  009E82  6BF6               	clrf	(??__open_file+2)& (0+255),b
 19681  009E84  6BF7               	clrf	(??__open_file+3)& (0+255),b
 19682  009E86  C0F5  F0F7         	movff	??__open_file+1,??__open_file+3
 19683  009E8A  C0F4  F0F6         	movff	??__open_file,??__open_file+2
 19684  009E8E  6BF5               	clrf	(??__open_file+1)& (0+255),b
 19685  009E90  6BF4               	clrf	??__open_file& (0+255),b
 19686  009E92  0101               	movlb	1	; () banked
 19687  009E94  5169               	movf	(__open_file@sfEntry+26)& (0+255),w,b
 19688  009E96  0100               	movlb	0	; () banked
 19689  009E98  25F4               	addwf	??__open_file& (0+255),w,b
 19690  009E9A  6FF8               	movwf	(??__open_file+4)& (0+255),b
 19691  009E9C  0101               	movlb	1	; () banked
 19692  009E9E  516A               	movf	(__open_file@sfEntry+27)& (0+255),w,b
 19693  009EA0  0100               	movlb	0	; () banked
 19694  009EA2  21F5               	addwfc	(??__open_file+1)& (0+255),w,b
 19695  009EA4  6FF9               	movwf	(??__open_file+5)& (0+255),b
 19696  009EA6  0E00               	movlw	0
 19697  009EA8  21F6               	addwfc	(??__open_file+2)& (0+255),w,b
 19698  009EAA  6FFA               	movwf	(??__open_file+6)& (0+255),b
 19699  009EAC  0E00               	movlw	0
 19700  009EAE  21F7               	addwfc	(??__open_file+3)& (0+255),w,b
 19701  009EB0  6FFB               	movwf	(??__open_file+7)& (0+255),b
 19702  009EB2  EE20 F004          	lfsr	2,4
 19703  009EB6  0101               	movlb	1	; () banked
 19704  009EB8  514D               	movf	__open_file@file& (0+255),w,b
 19705  009EBA  26D9               	addwf	fsr2l,f,c
 19706  009EBC  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19707  009EBE  22DA               	addwfc	fsr2h,f,c
 19708  009EC0  C0F8  FFDE         	movff	??__open_file+4,postinc2
 19709  009EC4  C0F9  FFDE         	movff	??__open_file+5,postinc2
 19710  009EC8  C0FA  FFDE         	movff	??__open_file+6,postinc2
 19711  009ECC  C0FB  FFDD         	movff	??__open_file+7,postdec2
 19712  009ED0  06D9               	decf	fsr2l,f,c
 19713  009ED2  06D9               	decf	fsr2l,f,c
 19714                           
 19715                           ; BSR set to: 1
 19716                           ;fat_filelib.c: 378: file->file_data_address = 0xFFFFFFFF;
 19717  009ED4  EE22 F039          	lfsr	2,569
 19718  009ED8  514D               	movf	__open_file@file& (0+255),w,b
 19719  009EDA  26D9               	addwf	fsr2l,f,c
 19720  009EDC  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19721  009EDE  22DA               	addwfc	fsr2h,f,c
 19722  009EE0  68DE               	setf	postinc2,c
 19723  009EE2  68DE               	setf	postinc2,c
 19724  009EE4  68DE               	setf	postinc2,c
 19725  009EE6  68DD               	setf	postdec2,c
 19726                           
 19727                           ; BSR set to: 1
 19728                           ;fat_filelib.c: 379: file->file_data_dirty = 0;
 19729  009EE8  EE22 F03D          	lfsr	2,573
 19730  009EEC  514D               	movf	__open_file@file& (0+255),w,b
 19731  009EEE  26D9               	addwf	fsr2l,f,c
 19732  009EF0  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19733  009EF2  22DA               	addwfc	fsr2h,f,c
 19734  009EF4  6ADE               	clrf	postinc2,c
 19735  009EF6  6ADD               	clrf	postdec2,c
 19736                           
 19737                           ; BSR set to: 1
 19738                           ;fat_filelib.c: 380: file->filelength_changed = 0;
 19739  009EF8  EE20 F010          	lfsr	2,16
 19740  009EFC  514D               	movf	__open_file@file& (0+255),w,b
 19741  009EFE  26D9               	addwf	fsr2l,f,c
 19742  009F00  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19743  009F02  22DA               	addwfc	fsr2h,f,c
 19744  009F04  6ADE               	clrf	postinc2,c
 19745  009F06  6ADD               	clrf	postdec2,c
 19746                           
 19747                           ; BSR set to: 1
 19748                           ;fat_filelib.c: 383: file->last_fat_lookup.ClusterIdx = 0xFFFFFFFF;
 19749  009F08  EE20 F031          	lfsr	2,49
 19750  009F0C  514D               	movf	__open_file@file& (0+255),w,b
 19751  009F0E  26D9               	addwf	fsr2l,f,c
 19752  009F10  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19753  009F12  22DA               	addwfc	fsr2h,f,c
 19754  009F14  68DE               	setf	postinc2,c
 19755  009F16  68DE               	setf	postinc2,c
 19756  009F18  68DE               	setf	postinc2,c
 19757  009F1A  68DD               	setf	postdec2,c
 19758                           
 19759                           ; BSR set to: 1
 19760                           ;fat_filelib.c: 384: file->last_fat_lookup.CurrentCluster = 0xFFFFFFFF;
 19761  009F1C  EE20 F035          	lfsr	2,53
 19762  009F20  514D               	movf	__open_file@file& (0+255),w,b
 19763  009F22  26D9               	addwf	fsr2l,f,c
 19764  009F24  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19765  009F26  22DA               	addwfc	fsr2h,f,c
 19766  009F28  68DE               	setf	postinc2,c
 19767  009F2A  68DE               	setf	postinc2,c
 19768  009F2C  68DE               	setf	postinc2,c
 19769  009F2E  68DD               	setf	postdec2,c
 19770                           
 19771                           ; BSR set to: 1
 19772                           ;fat_filelib.c: 386: fatfs_cache_init(&_fs, file);
 19773  009F30  0E09               	movlw	high __fs
 19774  009F32  6E02               	movwf	fatfs_cache_init@fs+1,c
 19775  009F34  0E78               	movlw	low __fs
 19776  009F36  6E01               	movwf	fatfs_cache_init@fs,c
 19777  009F38  C14E  F004         	movff	__open_file@file+1,fatfs_cache_init@file+1
 19778  009F3C  C14D  F003         	movff	__open_file@file,fatfs_cache_init@file
 19779  009F40  EC1C  F01F         	call	_fatfs_cache_init	;wreg free
 19780                           
 19781                           ;fat_filelib.c: 388: fatfs_fat_purge(&_fs);
 19782  009F44  0E09               	movlw	high __fs
 19783  009F46  6E35               	movwf	fatfs_fat_purge@fs+1,c
 19784  009F48  0E78               	movlw	low __fs
 19785  009F4A  6E34               	movwf	fatfs_fat_purge@fs,c
 19786  009F4C  ECC3  F022         	call	_fatfs_fat_purge	;wreg free
 19787                           
 19788                           ;fat_filelib.c: 390: return file;
 19789  009F50  C14E  F0F3         	movff	__open_file@file+1,?__open_file+1
 19790  009F54  0100               	movlb	0	; () banked
 19791  009F56  C14D  F0F2         	movff	__open_file@file,?__open_file
 19792  009F5A  D00B               	goto	l475
 19793  009F5C                     l11318:
 19794                           
 19795                           ;fat_filelib.c: 391: }
 19796                           ;fat_filelib.c: 393: _free_file(file);
 19797  009F5C  C14E  F010         	movff	__open_file@file+1,__free_file@file+1
 19798  009F60  0101               	movlb	1	; () banked
 19799  009F62  C14D  F00F         	movff	__open_file@file,__free_file@file
 19800  009F66  EC8F  F020         	call	__free_file	;wreg free
 19801  009F6A                     L53:
 19802                           
 19803                           ;fat_filelib.c: 394: return (0);
 19804  009F6A  0E00               	movlw	0
 19805  009F6C  0100               	movlb	0	; () banked
 19806  009F6E  6FF3               	movwf	(?__open_file+1)& (0+255),b
 19807  009F70  6FF2               	movwf	?__open_file& (0+255),b
 19808  009F72                     l475:
 19809                           
 19810                           ; BSR set to: 0
 19811  009F72  0012               	return	
 19812  009F74                     __end_of__open_file:
 19813                           	opt stack 0
 19814                           tosu	equ	0xFFF
 19815                           tosh	equ	0xFFE
 19816                           tosl	equ	0xFFD
 19817                           pclath	equ	0xFFA
 19818                           tblptru	equ	0xFF8
 19819                           tblptrh	equ	0xFF7
 19820                           tblptrl	equ	0xFF6
 19821                           tablat	equ	0xFF5
 19822                           prodh	equ	0xFF4
 19823                           prodl	equ	0xFF3
 19824                           indf0	equ	0xFEF
 19825                           postinc0	equ	0xFEE
 19826                           fsr0h	equ	0xFEA
 19827                           fsr0l	equ	0xFE9
 19828                           wreg	equ	0xFE8
 19829                           indf1	equ	0xFE7
 19830                           postinc1	equ	0xFE6
 19831                           postdec1	equ	0xFE5
 19832                           fsr1h	equ	0xFE2
 19833                           fsr1l	equ	0xFE1
 19834                           indf2	equ	0xFDF
 19835                           postinc2	equ	0xFDE
 19836                           postdec2	equ	0xFDD
 19837                           fsr2h	equ	0xFDA
 19838                           fsr2l	equ	0xFD9
 19839                           status	equ	0xFD8
 19840                           
 19841 ;; *************** function _fatfs_entry_is_file *****************
 19842 ;; Defined at:
 19843 ;;		line 182 in file "fat_misc.c"
 19844 ;; Parameters:    Size  Location     Type
 19845 ;;  entry           2    0[COMRAM] PTR struct fat_dir_entry
 19846 ;;		 -> _open_file@sfEntry(32), 
 19847 ;; Auto vars:     Size  Location     Type
 19848 ;;		None
 19849 ;; Return value:  Size  Location     Type
 19850 ;;                  2    0[COMRAM] int 
 19851 ;; Registers used:
 19852 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19853 ;; Tracked objects:
 19854 ;;		On entry : 0/0
 19855 ;;		On exit  : 0/0
 19856 ;;		Unchanged: 0/0
 19857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19861 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19862 ;;Total ram usage:        3 bytes
 19863 ;; Hardware stack levels used:    1
 19864 ;; This function calls:
 19865 ;;		Nothing
 19866 ;; This function is called by:
 19867 ;;		__open_file
 19868 ;; This function uses a non-reentrant model
 19869 ;;
 19870                           
 19871                           	psect	text49
 19872  003F94                     __ptext49:
 19873                           	opt stack 0
 19874  003F94                     _fatfs_entry_is_file:
 19875                           	opt stack 26
 19876                           
 19877                           ;fat_misc.c: 184: if (entry->Attr & 0x20)
 19878                           
 19879                           ; BSR set to: 0
 19880                           ;incstack = 0
 19881  003F94  EE20 F00B          	lfsr	2,11
 19882  003F98  5001               	movf	fatfs_entry_is_file@entry,w,c
 19883  003F9A  26D9               	addwf	fsr2l,f,c
 19884  003F9C  5002               	movf	fatfs_entry_is_file@entry+1,w,c
 19885  003F9E  22DA               	addwfc	fsr2h,f,c
 19886  003FA0  50DF               	movf	indf2,w,c
 19887  003FA2  6E03               	movwf	??_fatfs_entry_is_file& (0+255),c
 19888  003FA4  AA03               	btfss	??_fatfs_entry_is_file,5,c
 19889  003FA6  D004               	goto	l10900
 19890                           
 19891                           ;fat_misc.c: 185: return 1;
 19892  003FA8  0E00               	movlw	0
 19893  003FAA  6E02               	movwf	?_fatfs_entry_is_file+1,c
 19894  003FAC  0E01               	movlw	1
 19895  003FAE  D002               	goto	L54
 19896  003FB0                     l10900:
 19897                           
 19898                           ;fat_misc.c: 186: else
 19899                           ;fat_misc.c: 187: return 0;
 19900  003FB0  0E00               	movlw	0
 19901  003FB2  6E02               	movwf	?_fatfs_entry_is_file+1,c
 19902  003FB4                     L54:
 19903  003FB4  6E01               	movwf	?_fatfs_entry_is_file,c
 19904  003FB6  0012               	return	
 19905  003FB8                     __end_of_fatfs_entry_is_file:
 19906                           	opt stack 0
 19907                           tosu	equ	0xFFF
 19908                           tosh	equ	0xFFE
 19909                           tosl	equ	0xFFD
 19910                           pclath	equ	0xFFA
 19911                           tblptru	equ	0xFF8
 19912                           tblptrh	equ	0xFF7
 19913                           tblptrl	equ	0xFF6
 19914                           tablat	equ	0xFF5
 19915                           prodh	equ	0xFF4
 19916                           prodl	equ	0xFF3
 19917                           indf0	equ	0xFEF
 19918                           postinc0	equ	0xFEE
 19919                           fsr0h	equ	0xFEA
 19920                           fsr0l	equ	0xFE9
 19921                           wreg	equ	0xFE8
 19922                           indf1	equ	0xFE7
 19923                           postinc1	equ	0xFE6
 19924                           postdec1	equ	0xFE5
 19925                           fsr1h	equ	0xFE2
 19926                           fsr1l	equ	0xFE1
 19927                           indf2	equ	0xFDF
 19928                           postinc2	equ	0xFDE
 19929                           postdec2	equ	0xFDD
 19930                           fsr2h	equ	0xFDA
 19931                           fsr2l	equ	0xFD9
 19932                           status	equ	0xFD8
 19933                           
 19934 ;; *************** function __create_file *****************
 19935 ;; Defined at:
 19936 ;;		line 400 in file "fat_filelib.c"
 19937 ;; Parameters:    Size  Location     Type
 19938 ;;  filename        2  114[BANK0 ] PTR const unsigned char 
 19939 ;;		 -> s(17), m(30), 
 19940 ;; Auto vars:     Size  Location     Type
 19941 ;;  sfEntry        32   88[BANK1 ] struct fat_dir_entry
 19942 ;;  shortFilenam   11   77[BANK1 ] unsigned char [11]
 19943 ;;  file            2  122[BANK1 ] PTR struct sFL_FILE
 19944 ;;		 -> RAM(3967), NULL(0), 
 19945 ;;  tailNum         2  120[BANK1 ] int 
 19946 ;; Return value:  Size  Location     Type
 19947 ;;                  2  114[BANK0 ] PTR struct sFL_FILE
 19948 ;; Registers used:
 19949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 19950 ;; Tracked objects:
 19951 ;;		On entry : 0/0
 19952 ;;		On exit  : 0/0
 19953 ;;		Unchanged: 0/0
 19954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19955 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19956 ;;      Locals:         0       0      47       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19957 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19958 ;;      Totals:         0       6      47       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19959 ;;Total ram usage:       53 bytes
 19960 ;; Hardware stack levels used:    1
 19961 ;; Hardware stack levels required when called:    9
 19962 ;; This function calls:
 19963 ;;		__allocate_file
 19964 ;;		__check_file_open
 19965 ;;		__free_file
 19966 ;;		__open_directory
 19967 ;;		_fatfs_add_file_entry
 19968 ;;		_fatfs_allocate_free_space
 19969 ;;		_fatfs_cache_init
 19970 ;;		_fatfs_fat_purge
 19971 ;;		_fatfs_free_cluster_chain
 19972 ;;		_fatfs_get_file_entry
 19973 ;;		_fatfs_get_root_cluster
 19974 ;;		_fatfs_lfn_create_sfn
 19975 ;;		_fatfs_lfn_generate_tail
 19976 ;;		_fatfs_sfn_exists
 19977 ;;		_fatfs_split_path
 19978 ;;		_memcpy
 19979 ;;		_memset
 19980 ;; This function is called by:
 19981 ;;		_fl_fopen
 19982 ;; This function uses a non-reentrant model
 19983 ;;
 19984                           
 19985                           	psect	text50
 19986  00C092                     __ptext50:
 19987                           	opt stack 0
 19988  00C092                     __create_file:
 19989                           	opt stack 18
 19990                           
 19991                           ;fat_filelib.c: 402: FL_FILE* file;
 19992                           ;fat_filelib.c: 403: struct fat_dir_entry sfEntry;
 19993                           ;fat_filelib.c: 404: char shortFilename[11];
 19994                           ;fat_filelib.c: 405: int tailNum = 0;
 19995                           
 19996                           ;incstack = 0
 19997  00C092  0101               	movlb	1	; () banked
 19998  00C094  6B79               	clrf	(__create_file@tailNum+1)& (0+255),b
 19999  00C096  6B78               	clrf	__create_file@tailNum& (0+255),b
 20000                           
 20001                           ; BSR set to: 1
 20002                           ;fat_filelib.c: 408: if (!_fs.disk_io.write_media)
 20003  00C098  EE29  F0A3         	lfsr	2,__fs+43
 20004  00C09C  50DE               	movf	postinc2,w,c
 20005  00C09E  10DD               	iorwf	postdec2,w,c
 20006  00C0A0  E101 D1F3          	bz	L61
 20007                           
 20008                           ;fat_filelib.c: 412: file = _allocate_file();
 20009                           
 20010                           ; BSR set to: 0
 20011                           
 20012                           ; BSR set to: 0
 20013                           
 20014                           ; BSR set to: 1
 20015                           ;fat_filelib.c: 409: return (0);
 20016  00C0A4  ECD0  F021         	call	__allocate_file	;wreg free
 20017  00C0A8  C00F  F17A         	movff	?__allocate_file,__create_file@file
 20018  00C0AC  C010  F17B         	movff	?__allocate_file+1,__create_file@file+1
 20019                           
 20020                           ;fat_filelib.c: 413: if (!file)
 20021  00C0B0  0101               	movlb	1	; () banked
 20022  00C0B2  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20023  00C0B4  117A               	iorwf	__create_file@file& (0+255),w,b
 20024  00C0B6  E101 D1E8          	bz	L61
 20025                           
 20026                           ;fat_filelib.c: 417: memset(file->path, '\0', sizeof(file->path));
 20027                           
 20028                           ; BSR set to: 0
 20029                           
 20030                           ; BSR set to: 0
 20031                           
 20032                           ; BSR set to: 1
 20033                           ;fat_filelib.c: 414: return (0);
 20034  00C0BA  0E12               	movlw	18
 20035  00C0BC  257A               	addwf	__create_file@file& (0+255),w,b
 20036  00C0BE  6E01               	movwf	memset@p1,c
 20037  00C0C0  0E00               	movlw	0
 20038  00C0C2  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20039  00C0C4  6E02               	movwf	memset@p1+1,c
 20040  00C0C6  6A04               	clrf	memset@c+1,c
 20041  00C0C8  6A03               	clrf	memset@c,c
 20042  00C0CA  6A06               	clrf	memset@n+1,c
 20043  00C0CC  0E0A               	movlw	10
 20044  00C0CE  6E05               	movwf	memset@n,c
 20045  00C0D0  EC1A  F020         	call	_memset	;wreg free
 20046                           
 20047                           ;fat_filelib.c: 418: memset(file->filename, '\0', sizeof(file->filename));
 20048  00C0D4  0E1C               	movlw	28
 20049  00C0D6  0101               	movlb	1	; () banked
 20050  00C0D8  257A               	addwf	__create_file@file& (0+255),w,b
 20051  00C0DA  6E01               	movwf	memset@p1,c
 20052  00C0DC  0E00               	movlw	0
 20053  00C0DE  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20054  00C0E0  6E02               	movwf	memset@p1+1,c
 20055  00C0E2  6A04               	clrf	memset@c+1,c
 20056  00C0E4  6A03               	clrf	memset@c,c
 20057  00C0E6  6A06               	clrf	memset@n+1,c
 20058  00C0E8  0E0A               	movlw	10
 20059  00C0EA  6E05               	movwf	memset@n,c
 20060  00C0EC  EC1A  F020         	call	_memset	;wreg free
 20061                           
 20062                           ;fat_filelib.c: 421: if (fatfs_split_path((char*)filename, file->path, sizeof(file->path
      +                          ), file->filename, sizeof(file->filename)) == -1)
 20063  00C0F0  C0F3  F01E         	movff	__create_file@filename+1,fatfs_split_path@full_path+1
 20064  00C0F4  C0F2  F01D         	movff	__create_file@filename,fatfs_split_path@full_path
 20065  00C0F8  0E12               	movlw	18
 20066  00C0FA  0101               	movlb	1	; () banked
 20067  00C0FC  257A               	addwf	__create_file@file& (0+255),w,b
 20068  00C0FE  6E1F               	movwf	fatfs_split_path@path,c
 20069  00C100  0E00               	movlw	0
 20070  00C102  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20071  00C104  6E20               	movwf	fatfs_split_path@path+1,c
 20072  00C106  6A22               	clrf	fatfs_split_path@max_path+1,c
 20073  00C108  0E0A               	movlw	10
 20074  00C10A  6E21               	movwf	fatfs_split_path@max_path,c
 20075  00C10C  0E1C               	movlw	28
 20076  00C10E  257A               	addwf	__create_file@file& (0+255),w,b
 20077  00C110  6E23               	movwf	fatfs_split_path@filename,c
 20078  00C112  0E00               	movlw	0
 20079  00C114  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20080  00C116  6E24               	movwf	fatfs_split_path@filename+1,c
 20081  00C118  6A26               	clrf	fatfs_split_path@max_filename+1,c
 20082  00C11A  0E0A               	movlw	10
 20083  00C11C  6E25               	movwf	fatfs_split_path@max_filename,c
 20084  00C11E  EC1D  F02F         	call	_fatfs_split_path	;wreg free
 20085  00C122  281D               	incf	?_fatfs_split_path,w,c
 20086  00C124  B4D8               	btfsc	status,2,c
 20087  00C126  281E               	incf	?_fatfs_split_path+1,w,c
 20088  00C128  E108               	bnz	l11350
 20089                           
 20090                           ;fat_filelib.c: 422: {
 20091                           ;fat_filelib.c: 423: _free_file(file);
 20092  00C12A  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20093  00C12E  0101               	movlb	1	; () banked
 20094  00C130  C17A  F00F         	movff	__create_file@file,__free_file@file
 20095  00C134  EC8F  F020         	call	__free_file	;wreg free
 20096  00C138  D1A8               	goto	L61
 20097  00C13A                     l11350:
 20098                           
 20099                           ;fat_filelib.c: 425: }
 20100                           ;fat_filelib.c: 428: if (_check_file_open(file))
 20101  00C13A  C17B  F026         	movff	__create_file@file+1,__check_file_open@file+1
 20102  00C13E  0101               	movlb	1	; () banked
 20103  00C140  C17A  F025         	movff	__create_file@file,__check_file_open@file
 20104  00C144  ECA7  F02A         	call	__check_file_open	;wreg free
 20105  00C148  5026               	movf	?__check_file_open+1,w,c
 20106  00C14A  1025               	iorwf	?__check_file_open,w,c
 20107  00C14C  E008               	bz	l11358
 20108                           
 20109                           ;fat_filelib.c: 429: {
 20110                           ;fat_filelib.c: 430: _free_file(file);
 20111  00C14E  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20112  00C152  0101               	movlb	1	; () banked
 20113  00C154  C17A  F00F         	movff	__create_file@file,__free_file@file
 20114  00C158  EC8F  F020         	call	__free_file	;wreg free
 20115  00C15C  D196               	goto	L61
 20116  00C15E                     l11358:
 20117                           
 20118                           ;fat_filelib.c: 432: }
 20119                           ;fat_filelib.c: 435: if (file->path[0] == 0)
 20120  00C15E  EE20 F012          	lfsr	2,18
 20121  00C162  0101               	movlb	1	; () banked
 20122  00C164  517A               	movf	__create_file@file& (0+255),w,b
 20123  00C166  26D9               	addwf	fsr2l,f,c
 20124  00C168  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20125  00C16A  22DA               	addwfc	fsr2h,f,c
 20126  00C16C  50DF               	movf	indf2,w,c
 20127  00C16E  E11D               	bnz	l11362
 20128                           
 20129                           ; BSR set to: 1
 20130                           ;fat_filelib.c: 436: file->parentcluster = fatfs_get_root_cluster(&_fs);
 20131  00C170  0E09               	movlw	high __fs
 20132  00C172  6E02               	movwf	fatfs_get_root_cluster@fs+1,c
 20133  00C174  0E78               	movlw	low __fs
 20134  00C176  6E01               	movwf	fatfs_get_root_cluster@fs,c
 20135  00C178  EC86  F01F         	call	_fatfs_get_root_cluster	;wreg free
 20136  00C17C  C001  F0F4         	movff	?_fatfs_get_root_cluster,??__create_file
 20137  00C180  C002  F0F5         	movff	?_fatfs_get_root_cluster+1,??__create_file+1
 20138  00C184  C003  F0F6         	movff	?_fatfs_get_root_cluster+2,??__create_file+2
 20139  00C188  C004  F0F7         	movff	?_fatfs_get_root_cluster+3,??__create_file+3
 20140  00C18C  C17A  FFD9         	movff	__create_file@file,fsr2l
 20141  00C190  C17B  FFDA         	movff	__create_file@file+1,fsr2h
 20142  00C194  C0F4  FFDE         	movff	??__create_file,postinc2
 20143  00C198  C0F5  FFDE         	movff	??__create_file+1,postinc2
 20144  00C19C  C0F6  FFDE         	movff	??__create_file+2,postinc2
 20145  00C1A0  C0F7  FFDD         	movff	??__create_file+3,postdec2
 20146  00C1A4  06D9               	decf	fsr2l,f,c
 20147  00C1A6  06D9               	decf	fsr2l,f,c
 20148  00C1A8  D01C               	goto	l11370
 20149  00C1AA                     l11362:
 20150                           
 20151                           ;fat_filelib.c: 437: else
 20152                           ;fat_filelib.c: 438: {
 20153                           ;fat_filelib.c: 440: if (!_open_directory(file->path, &file->parentcluster))
 20154  00C1AA  0E12               	movlw	18
 20155  00C1AC  0101               	movlb	1	; () banked
 20156  00C1AE  257A               	addwf	__create_file@file& (0+255),w,b
 20157  00C1B0  0100               	movlb	0	; () banked
 20158  00C1B2  6FB8               	movwf	__open_directory@path& (0+255),b
 20159  00C1B4  0E00               	movlw	0
 20160  00C1B6  0101               	movlb	1	; () banked
 20161  00C1B8  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20162  00C1BA  0100               	movlb	0	; () banked
 20163  00C1BC  6FB9               	movwf	(__open_directory@path+1)& (0+255),b
 20164  00C1BE  C17B  F0BB         	movff	__create_file@file+1,__open_directory@pathCluster+1
 20165  00C1C2  C17A  F0BA         	movff	__create_file@file,__open_directory@pathCluster
 20166  00C1C6  EC0C  F034         	call	__open_directory	;wreg free
 20167  00C1CA  0100               	movlb	0	; () banked
 20168  00C1CC  51B9               	movf	(?__open_directory+1)& (0+255),w,b
 20169  00C1CE  11B8               	iorwf	?__open_directory& (0+255),w,b
 20170  00C1D0  E108               	bnz	l11370
 20171                           
 20172                           ; BSR set to: 0
 20173                           ;fat_filelib.c: 441: {
 20174                           ;fat_filelib.c: 442: _free_file(file);
 20175  00C1D2  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20176  00C1D6  0101               	movlb	1	; () banked
 20177  00C1D8  C17A  F00F         	movff	__create_file@file,__free_file@file
 20178  00C1DC  EC8F  F020         	call	__free_file	;wreg free
 20179  00C1E0  D154               	goto	L61
 20180  00C1E2                     l11370:
 20181                           
 20182                           ;fat_filelib.c: 444: }
 20183                           ;fat_filelib.c: 445: }
 20184                           ;fat_filelib.c: 448: if (fatfs_get_file_entry(&_fs, file->parentcluster, file->filename,
      +                          &sfEntry) == 1)
 20185  00C1E2  0E09               	movlw	high __fs
 20186  00C1E4  0100               	movlb	0	; () banked
 20187  00C1E6  6FAD               	movwf	(fatfs_get_file_entry@fs+1)& (0+255),b
 20188  00C1E8  0E78               	movlw	low __fs
 20189  00C1EA  6FAC               	movwf	fatfs_get_file_entry@fs& (0+255),b
 20190  00C1EC  C17A  FFD9         	movff	__create_file@file,fsr2l
 20191  00C1F0  C17B  FFDA         	movff	__create_file@file+1,fsr2h
 20192  00C1F4  CFDE F0AE          	movff	postinc2,fatfs_get_file_entry@Cluster
 20193  00C1F8  CFDE F0AF          	movff	postinc2,fatfs_get_file_entry@Cluster+1
 20194  00C1FC  CFDE F0B0          	movff	postinc2,fatfs_get_file_entry@Cluster+2
 20195  00C200  CFDE F0B1          	movff	postinc2,fatfs_get_file_entry@Cluster+3
 20196  00C204  0E1C               	movlw	28
 20197  00C206  0101               	movlb	1	; () banked
 20198  00C208  257A               	addwf	__create_file@file& (0+255),w,b
 20199  00C20A  0100               	movlb	0	; () banked
 20200  00C20C  6FB2               	movwf	fatfs_get_file_entry@name_to_find& (0+255),b
 20201  00C20E  0E00               	movlw	0
 20202  00C210  0101               	movlb	1	; () banked
 20203  00C212  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20204  00C214  0100               	movlb	0	; () banked
 20205  00C216  6FB3               	movwf	(fatfs_get_file_entry@name_to_find+1)& (0+255),b
 20206  00C218  0E01               	movlw	high __create_file@sfEntry
 20207  00C21A  6FB5               	movwf	(fatfs_get_file_entry@sfEntry+1)& (0+255),b
 20208  00C21C  0E58               	movlw	low __create_file@sfEntry
 20209  00C21E  6FB4               	movwf	fatfs_get_file_entry@sfEntry& (0+255),b
 20210  00C220  ECB5  F049         	call	_fatfs_get_file_entry	;wreg free
 20211  00C224  C0AC  F0F4         	movff	?_fatfs_get_file_entry,??__create_file
 20212  00C228  C0AD  F0F5         	movff	?_fatfs_get_file_entry+1,??__create_file+1
 20213  00C22C  C0AE  F0F6         	movff	?_fatfs_get_file_entry+2,??__create_file+2
 20214  00C230  C0AF  F0F7         	movff	?_fatfs_get_file_entry+3,??__create_file+3
 20215  00C234  0100               	movlb	0	; () banked
 20216  00C236  05F4               	decf	??__create_file& (0+255),w,b
 20217  00C238  11F5               	iorwf	(??__create_file+1)& (0+255),w,b
 20218  00C23A  11F6               	iorwf	(??__create_file+2)& (0+255),w,b
 20219  00C23C  11F7               	iorwf	(??__create_file+3)& (0+255),w,b
 20220  00C23E  E108               	bnz	l11378
 20221                           
 20222                           ; BSR set to: 0
 20223                           ;fat_filelib.c: 449: {
 20224                           ;fat_filelib.c: 450: _free_file(file);
 20225  00C240  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20226  00C244  0101               	movlb	1	; () banked
 20227  00C246  C17A  F00F         	movff	__create_file@file,__free_file@file
 20228  00C24A  EC8F  F020         	call	__free_file	;wreg free
 20229  00C24E  D11D               	goto	L61
 20230  00C250                     l11378:
 20231                           
 20232                           ; BSR set to: 0
 20233                           ;fat_filelib.c: 452: }
 20234                           ;fat_filelib.c: 454: file->startcluster = 0;
 20235  00C250  EE20 F004          	lfsr	2,4
 20236  00C254  0101               	movlb	1	; () banked
 20237  00C256  517A               	movf	__create_file@file& (0+255),w,b
 20238  00C258  26D9               	addwf	fsr2l,f,c
 20239  00C25A  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20240  00C25C  22DA               	addwfc	fsr2h,f,c
 20241  00C25E  6ADE               	clrf	postinc2,c
 20242  00C260  6ADE               	clrf	postinc2,c
 20243  00C262  6ADE               	clrf	postinc2,c
 20244  00C264  6ADD               	clrf	postdec2,c
 20245                           
 20246                           ; BSR set to: 1
 20247                           ;fat_filelib.c: 457: if (!fatfs_allocate_free_space(&_fs, 1, &file->startcluster, 1))
 20248  00C266  0E09               	movlw	high __fs
 20249  00C268  0100               	movlb	0	; () banked
 20250  00C26A  6F9F               	movwf	(fatfs_allocate_free_space@fs+1)& (0+255),b
 20251  00C26C  0E78               	movlw	low __fs
 20252  00C26E  6F9E               	movwf	fatfs_allocate_free_space@fs& (0+255),b
 20253  00C270  6BA1               	clrf	(fatfs_allocate_free_space@newFile+1)& (0+255),b
 20254  00C272  0E01               	movlw	1
 20255  00C274  6FA0               	movwf	fatfs_allocate_free_space@newFile& (0+255),b
 20256  00C276  0E04               	movlw	4
 20257  00C278  0101               	movlb	1	; () banked
 20258  00C27A  257A               	addwf	__create_file@file& (0+255),w,b
 20259  00C27C  0100               	movlb	0	; () banked
 20260  00C27E  6FA2               	movwf	fatfs_allocate_free_space@startCluster& (0+255),b
 20261  00C280  0E00               	movlw	0
 20262  00C282  0101               	movlb	1	; () banked
 20263  00C284  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20264  00C286  0100               	movlb	0	; () banked
 20265  00C288  6FA3               	movwf	(fatfs_allocate_free_space@startCluster+1)& (0+255),b
 20266  00C28A  0E01               	movlw	1
 20267  00C28C  6FA4               	movwf	fatfs_allocate_free_space@size& (0+255),b
 20268  00C28E  0E00               	movlw	0
 20269  00C290  6BA5               	clrf	(fatfs_allocate_free_space@size+1)& (0+255),b
 20270  00C292  6BA6               	clrf	(fatfs_allocate_free_space@size+2)& (0+255),b
 20271  00C294  6BA7               	clrf	(fatfs_allocate_free_space@size+3)& (0+255),b
 20272  00C296  ECAB  F044         	call	_fatfs_allocate_free_space	;wreg free
 20273  00C29A  0100               	movlb	0	; () banked
 20274  00C29C  519F               	movf	(?_fatfs_allocate_free_space+1)& (0+255),w,b
 20275  00C29E  119E               	iorwf	?_fatfs_allocate_free_space& (0+255),w,b
 20276  00C2A0  E108               	bnz	l11388
 20277                           
 20278                           ; BSR set to: 0
 20279                           ;fat_filelib.c: 458: {
 20280                           ;fat_filelib.c: 459: _free_file(file);
 20281  00C2A2  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20282  00C2A6  0101               	movlb	1	; () banked
 20283  00C2A8  C17A  F00F         	movff	__create_file@file,__free_file@file
 20284  00C2AC  EC8F  F020         	call	__free_file	;wreg free
 20285  00C2B0  D0EC               	goto	L61
 20286  00C2B2                     l11388:
 20287                           
 20288                           ; BSR set to: 0
 20289                           ;fat_filelib.c: 461: }
 20290                           ;fat_filelib.c: 465: tailNum = 0;
 20291  00C2B2  0101               	movlb	1	; () banked
 20292  00C2B4  6B79               	clrf	(__create_file@tailNum+1)& (0+255),b
 20293  00C2B6  6B78               	clrf	__create_file@tailNum& (0+255),b
 20294  00C2B8                     l11390:
 20295                           
 20296                           ; BSR set to: 1
 20297                           ;fat_filelib.c: 467: {
 20298                           ;fat_filelib.c: 469: fatfs_lfn_create_sfn(shortFilename, file->filename);
 20299  00C2B8  0E01               	movlw	high __create_file@shortFilename
 20300  00C2BA  6E0A               	movwf	fatfs_lfn_create_sfn@sfn_output+1,c
 20301  00C2BC  0E4D               	movlw	low __create_file@shortFilename
 20302  00C2BE  6E09               	movwf	fatfs_lfn_create_sfn@sfn_output,c
 20303  00C2C0  0E1C               	movlw	28
 20304  00C2C2  0101               	movlb	1	; () banked
 20305  00C2C4  257A               	addwf	__create_file@file& (0+255),w,b
 20306  00C2C6  6E0B               	movwf	fatfs_lfn_create_sfn@filename,c
 20307  00C2C8  0E00               	movlw	0
 20308  00C2CA  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20309  00C2CC  6E0C               	movwf	fatfs_lfn_create_sfn@filename+1,c
 20310  00C2CE  EC65  F048         	call	_fatfs_lfn_create_sfn	;wreg free
 20311                           
 20312                           ;fat_filelib.c: 472: if (tailNum != 0)
 20313  00C2D2  0101               	movlb	1	; () banked
 20314  00C2D4  5179               	movf	(__create_file@tailNum+1)& (0+255),w,b
 20315  00C2D6  1178               	iorwf	__create_file@tailNum& (0+255),w,b
 20316  00C2D8  E016               	bz	l11396
 20317                           
 20318                           ; BSR set to: 1
 20319                           ;fat_filelib.c: 473: fatfs_lfn_generate_tail((char*)file->shortfilename, shortFilename, 
      +                          tailNum);
 20320  00C2DA  0E26               	movlw	38
 20321  00C2DC  257A               	addwf	__create_file@file& (0+255),w,b
 20322  00C2DE  6E37               	movwf	fatfs_lfn_generate_tail@sfn_output,c
 20323  00C2E0  0E00               	movlw	0
 20324  00C2E2  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20325  00C2E4  6E38               	movwf	fatfs_lfn_generate_tail@sfn_output+1,c
 20326  00C2E6  0E01               	movlw	high __create_file@shortFilename
 20327  00C2E8  6E3A               	movwf	fatfs_lfn_generate_tail@sfn_input+1,c
 20328  00C2EA  0E4D               	movlw	low __create_file@shortFilename
 20329  00C2EC  6E39               	movwf	fatfs_lfn_generate_tail@sfn_input,c
 20330  00C2EE  C178  F03B         	movff	__create_file@tailNum,fatfs_lfn_generate_tail@tailNum
 20331  00C2F2  C179  F03C         	movff	__create_file@tailNum+1,fatfs_lfn_generate_tail@tailNum+1
 20332  00C2F6  0E00               	movlw	0
 20333  00C2F8  BE3C               	btfsc	fatfs_lfn_generate_tail@tailNum+1,7,c
 20334  00C2FA  0EFF               	movlw	-1
 20335  00C2FC  6E3D               	movwf	fatfs_lfn_generate_tail@tailNum+2,c
 20336  00C2FE  6E3E               	movwf	fatfs_lfn_generate_tail@tailNum+3,c
 20337  00C300  EC49  F02C         	call	_fatfs_lfn_generate_tail	;wreg free
 20338  00C304  D012               	goto	l11398
 20339  00C306                     l11396:
 20340                           
 20341                           ;fat_filelib.c: 475: else
 20342                           ;fat_filelib.c: 476: memcpy(file->shortfilename, shortFilename, 11);
 20343  00C306  0E26               	movlw	38
 20344  00C308  0101               	movlb	1	; () banked
 20345  00C30A  257A               	addwf	__create_file@file& (0+255),w,b
 20346  00C30C  6E01               	movwf	memcpy@d1,c
 20347  00C30E  0E00               	movlw	0
 20348  00C310  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20349  00C312  6E02               	movwf	memcpy@d1+1,c
 20350  00C314  0E20               	movlw	32
 20351  00C316  6E05               	movwf	memcpy@s1+2,c
 20352  00C318  0E01               	movlw	high __create_file@shortFilename
 20353  00C31A  6E04               	movwf	memcpy@s1+1,c
 20354  00C31C  0E4D               	movlw	low __create_file@shortFilename
 20355  00C31E  6E03               	movwf	memcpy@s1,c
 20356  00C320  6A07               	clrf	memcpy@n+1,c
 20357  00C322  0E0B               	movlw	11
 20358  00C324  6E06               	movwf	memcpy@n,c
 20359  00C326  ECA4  F023         	call	_memcpy	;wreg free
 20360  00C32A                     l11398:
 20361                           
 20362                           ;fat_filelib.c: 479: if (fatfs_sfn_exists(&_fs, file->parentcluster, (char*)file->shortf
      +                          ilename) == 0)
 20363  00C32A  0E09               	movlw	high __fs
 20364  00C32C  0100               	movlb	0	; () banked
 20365  00C32E  6FAD               	movwf	(fatfs_sfn_exists@fs+1)& (0+255),b
 20366  00C330  0E78               	movlw	low __fs
 20367  00C332  6FAC               	movwf	fatfs_sfn_exists@fs& (0+255),b
 20368  00C334  C17A  FFD9         	movff	__create_file@file,fsr2l
 20369  00C338  C17B  FFDA         	movff	__create_file@file+1,fsr2h
 20370  00C33C  CFDE F0AE          	movff	postinc2,fatfs_sfn_exists@Cluster
 20371  00C340  CFDE F0AF          	movff	postinc2,fatfs_sfn_exists@Cluster+1
 20372  00C344  CFDE F0B0          	movff	postinc2,fatfs_sfn_exists@Cluster+2
 20373  00C348  CFDE F0B1          	movff	postinc2,fatfs_sfn_exists@Cluster+3
 20374  00C34C  0E26               	movlw	38
 20375  00C34E  0101               	movlb	1	; () banked
 20376  00C350  257A               	addwf	__create_file@file& (0+255),w,b
 20377  00C352  0100               	movlb	0	; () banked
 20378  00C354  6FB2               	movwf	fatfs_sfn_exists@shortname& (0+255),b
 20379  00C356  0E00               	movlw	0
 20380  00C358  0101               	movlb	1	; () banked
 20381  00C35A  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20382  00C35C  0100               	movlb	0	; () banked
 20383  00C35E  6FB3               	movwf	(fatfs_sfn_exists@shortname+1)& (0+255),b
 20384  00C360  EC15  F031         	call	_fatfs_sfn_exists	;wreg free
 20385  00C364  0100               	movlb	0	; () banked
 20386  00C366  51AD               	movf	(?_fatfs_sfn_exists+1)& (0+255),w,b
 20387  00C368  11AC               	iorwf	?_fatfs_sfn_exists& (0+255),w,b
 20388  00C36A  E00A               	bz	l11406
 20389                           
 20390                           ; BSR set to: 0
 20391                           ;fat_filelib.c: 482: tailNum++;
 20392                           
 20393                           ; BSR set to: 0
 20394                           
 20395                           ; BSR set to: 0
 20396                           ;fat_filelib.c: 480: break;
 20397  00C36C  0101               	movlb	1	; () banked
 20398  00C36E  4B78               	infsnz	__create_file@tailNum& (0+255),f,b
 20399  00C370  2B79               	incf	(__create_file@tailNum+1)& (0+255),f,b
 20400                           
 20401                           ; BSR set to: 1
 20402                           ;fat_filelib.c: 483: }
 20403                           ;fat_filelib.c: 484: while (tailNum < 9999);
 20404  00C372  5179               	movf	(__create_file@tailNum+1)& (0+255),w,b
 20405  00C374  0A80               	xorlw	128
 20406  00C376  0F59               	addlw	-167
 20407  00C378  0E0F               	movlw	15
 20408  00C37A  B4D8               	btfsc	status,2,c
 20409  00C37C  5D78               	subwf	__create_file@tailNum& (0+255),w,b
 20410  00C37E  E39C               	bnc	l11390
 20411  00C380                     l11406:
 20412                           
 20413                           ;fat_filelib.c: 487: if (tailNum == 9999)
 20414  00C380  0101               	movlb	1	; () banked
 20415  00C382  5179               	movf	(__create_file@tailNum+1)& (0+255),w,b
 20416  00C384  0A27               	xorlw	39
 20417  00C386  0E0F               	movlw	15
 20418  00C388  B4D8               	btfsc	status,2,c
 20419  00C38A  1978               	xorwf	__create_file@tailNum& (0+255),w,b
 20420  00C38C  E11F               	bnz	l11416
 20421                           
 20422                           ; BSR set to: 1
 20423                           ;fat_filelib.c: 488: {
 20424                           ;fat_filelib.c: 490: fatfs_free_cluster_chain(&_fs, file->startcluster);
 20425  00C38E  0E09               	movlw	high __fs
 20426  00C390  0100               	movlb	0	; () banked
 20427  00C392  6F81               	movwf	(fatfs_free_cluster_chain@fs+1)& (0+255),b
 20428  00C394  0E78               	movlw	low __fs
 20429  00C396  6F80               	movwf	fatfs_free_cluster_chain@fs& (0+255),b
 20430  00C398  EE20 F004          	lfsr	2,4
 20431  00C39C  0101               	movlb	1	; () banked
 20432  00C39E  517A               	movf	__create_file@file& (0+255),w,b
 20433  00C3A0  26D9               	addwf	fsr2l,f,c
 20434  00C3A2  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20435  00C3A4  22DA               	addwfc	fsr2h,f,c
 20436  00C3A6  CFDE F082          	movff	postinc2,fatfs_free_cluster_chain@start_cluster
 20437  00C3AA  CFDE F083          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+1
 20438  00C3AE  CFDE F084          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+2
 20439  00C3B2  0100               	movlb	0	; () banked
 20440  00C3B4  CFDE F085          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+3
 20441  00C3B8  ECF6  F02A         	call	_fatfs_free_cluster_chain	;wreg free
 20442                           
 20443                           ;fat_filelib.c: 492: _free_file(file);
 20444  00C3BC  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20445  00C3C0  0101               	movlb	1	; () banked
 20446  00C3C2  C17A  F00F         	movff	__create_file@file,__free_file@file
 20447  00C3C6  EC8F  F020         	call	__free_file	;wreg free
 20448  00C3CA  D05F               	goto	L61
 20449  00C3CC                     l11416:
 20450                           
 20451                           ;fat_filelib.c: 494: }
 20452                           ;fat_filelib.c: 521: if (!fatfs_add_file_entry(&_fs, file->parentcluster, (char*)file->f
      +                          ilename, (char*)file->shortfilename, file->startcluster, 0, 0))
 20453  00C3CC  0E09               	movlw	high __fs
 20454  00C3CE  0100               	movlb	0	; () banked
 20455  00C3D0  6FCD               	movwf	(fatfs_add_file_entry@fs+1)& (0+255),b
 20456  00C3D2  0E78               	movlw	low __fs
 20457  00C3D4  6FCC               	movwf	fatfs_add_file_entry@fs& (0+255),b
 20458  00C3D6  C17A  FFD9         	movff	__create_file@file,fsr2l
 20459  00C3DA  C17B  FFDA         	movff	__create_file@file+1,fsr2h
 20460  00C3DE  CFDE F0CE          	movff	postinc2,fatfs_add_file_entry@dirCluster
 20461  00C3E2  CFDE F0CF          	movff	postinc2,fatfs_add_file_entry@dirCluster+1
 20462  00C3E6  CFDE F0D0          	movff	postinc2,fatfs_add_file_entry@dirCluster+2
 20463  00C3EA  CFDE F0D1          	movff	postinc2,fatfs_add_file_entry@dirCluster+3
 20464  00C3EE  0E1C               	movlw	28
 20465  00C3F0  0101               	movlb	1	; () banked
 20466  00C3F2  257A               	addwf	__create_file@file& (0+255),w,b
 20467  00C3F4  0100               	movlb	0	; () banked
 20468  00C3F6  6FD2               	movwf	fatfs_add_file_entry@filename& (0+255),b
 20469  00C3F8  0E00               	movlw	0
 20470  00C3FA  0101               	movlb	1	; () banked
 20471  00C3FC  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20472  00C3FE  0100               	movlb	0	; () banked
 20473  00C400  6FD3               	movwf	(fatfs_add_file_entry@filename+1)& (0+255),b
 20474  00C402  0E26               	movlw	38
 20475  00C404  0101               	movlb	1	; () banked
 20476  00C406  257A               	addwf	__create_file@file& (0+255),w,b
 20477  00C408  0100               	movlb	0	; () banked
 20478  00C40A  6FD4               	movwf	fatfs_add_file_entry@shortfilename& (0+255),b
 20479  00C40C  0E00               	movlw	0
 20480  00C40E  0101               	movlb	1	; () banked
 20481  00C410  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20482  00C412  0100               	movlb	0	; () banked
 20483  00C414  6FD5               	movwf	(fatfs_add_file_entry@shortfilename+1)& (0+255),b
 20484  00C416  EE20 F004          	lfsr	2,4
 20485  00C41A  0101               	movlb	1	; () banked
 20486  00C41C  517A               	movf	__create_file@file& (0+255),w,b
 20487  00C41E  26D9               	addwf	fsr2l,f,c
 20488  00C420  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20489  00C422  22DA               	addwfc	fsr2h,f,c
 20490  00C424  CFDE F0D6          	movff	postinc2,fatfs_add_file_entry@startCluster
 20491  00C428  CFDE F0D7          	movff	postinc2,fatfs_add_file_entry@startCluster+1
 20492  00C42C  CFDE F0D8          	movff	postinc2,fatfs_add_file_entry@startCluster+2
 20493  00C430  CFDE F0D9          	movff	postinc2,fatfs_add_file_entry@startCluster+3
 20494  00C434  0E00               	movlw	0
 20495  00C436  0100               	movlb	0	; () banked
 20496  00C438  6BDA               	clrf	fatfs_add_file_entry@size& (0+255),b
 20497  00C43A  6BDB               	clrf	(fatfs_add_file_entry@size+1)& (0+255),b
 20498  00C43C  6BDC               	clrf	(fatfs_add_file_entry@size+2)& (0+255),b
 20499  00C43E  6BDD               	clrf	(fatfs_add_file_entry@size+3)& (0+255),b
 20500  00C440  6BDF               	clrf	(fatfs_add_file_entry@dir+1)& (0+255),b
 20501  00C442  6BDE               	clrf	fatfs_add_file_entry@dir& (0+255),b
 20502  00C444  EC71  F056         	call	_fatfs_add_file_entry	;wreg free
 20503  00C448  0100               	movlb	0	; () banked
 20504  00C44A  51CD               	movf	(?_fatfs_add_file_entry+1)& (0+255),w,b
 20505  00C44C  11CC               	iorwf	?_fatfs_add_file_entry& (0+255),w,b
 20506  00C44E  E122               	bnz	l11426
 20507                           
 20508                           ; BSR set to: 0
 20509                           ;fat_filelib.c: 522: {
 20510                           ;fat_filelib.c: 524: fatfs_free_cluster_chain(&_fs, file->startcluster);
 20511  00C450  0E09               	movlw	high __fs
 20512  00C452  6F81               	movwf	(fatfs_free_cluster_chain@fs+1)& (0+255),b
 20513  00C454  0E78               	movlw	low __fs
 20514  00C456  6F80               	movwf	fatfs_free_cluster_chain@fs& (0+255),b
 20515  00C458  EE20 F004          	lfsr	2,4
 20516  00C45C  0101               	movlb	1	; () banked
 20517  00C45E  517A               	movf	__create_file@file& (0+255),w,b
 20518  00C460  26D9               	addwf	fsr2l,f,c
 20519  00C462  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20520  00C464  22DA               	addwfc	fsr2h,f,c
 20521  00C466  CFDE F082          	movff	postinc2,fatfs_free_cluster_chain@start_cluster
 20522  00C46A  CFDE F083          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+1
 20523  00C46E  CFDE F084          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+2
 20524  00C472  0100               	movlb	0	; () banked
 20525  00C474  CFDE F085          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+3
 20526  00C478  ECF6  F02A         	call	_fatfs_free_cluster_chain	;wreg free
 20527                           
 20528                           ;fat_filelib.c: 526: _free_file(file);
 20529  00C47C  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20530  00C480  0101               	movlb	1	; () banked
 20531  00C482  C17A  F00F         	movff	__create_file@file,__free_file@file
 20532  00C486  EC8F  F020         	call	__free_file	;wreg free
 20533  00C48A                     L61:
 20534                           
 20535                           ;fat_filelib.c: 527: return (0);
 20536  00C48A  0E00               	movlw	0
 20537  00C48C  0100               	movlb	0	; () banked
 20538  00C48E  6FF3               	movwf	(?__create_file+1)& (0+255),b
 20539  00C490  6FF2               	movwf	?__create_file& (0+255),b
 20540  00C492  D058               	goto	l486
 20541  00C494                     l11426:
 20542                           
 20543                           ; BSR set to: 0
 20544                           ;fat_filelib.c: 528: }
 20545                           ;fat_filelib.c: 531: file->filelength = 0;
 20546  00C494  EE20 F00C          	lfsr	2,12
 20547  00C498  0101               	movlb	1	; () banked
 20548  00C49A  517A               	movf	__create_file@file& (0+255),w,b
 20549  00C49C  26D9               	addwf	fsr2l,f,c
 20550  00C49E  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20551  00C4A0  22DA               	addwfc	fsr2h,f,c
 20552  00C4A2  6ADE               	clrf	postinc2,c
 20553  00C4A4  6ADE               	clrf	postinc2,c
 20554  00C4A6  6ADE               	clrf	postinc2,c
 20555  00C4A8  6ADD               	clrf	postdec2,c
 20556                           
 20557                           ;fat_filelib.c: 532: file->bytenum = 0;
 20558  00C4AA  EE20 F008          	lfsr	2,8
 20559  00C4AE  517A               	movf	__create_file@file& (0+255),w,b
 20560  00C4B0  26D9               	addwf	fsr2l,f,c
 20561  00C4B2  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20562  00C4B4  22DA               	addwfc	fsr2h,f,c
 20563  00C4B6  6ADE               	clrf	postinc2,c
 20564  00C4B8  6ADE               	clrf	postinc2,c
 20565  00C4BA  6ADE               	clrf	postinc2,c
 20566  00C4BC  6ADD               	clrf	postdec2,c
 20567                           
 20568                           ;fat_filelib.c: 533: file->file_data_address = 0xFFFFFFFF;
 20569  00C4BE  EE22 F039          	lfsr	2,569
 20570  00C4C2  517A               	movf	__create_file@file& (0+255),w,b
 20571  00C4C4  26D9               	addwf	fsr2l,f,c
 20572  00C4C6  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20573  00C4C8  22DA               	addwfc	fsr2h,f,c
 20574  00C4CA  68DE               	setf	postinc2,c
 20575  00C4CC  68DE               	setf	postinc2,c
 20576  00C4CE  68DE               	setf	postinc2,c
 20577  00C4D0  68DD               	setf	postdec2,c
 20578                           
 20579                           ;fat_filelib.c: 534: file->file_data_dirty = 0;
 20580  00C4D2  EE22 F03D          	lfsr	2,573
 20581  00C4D6  517A               	movf	__create_file@file& (0+255),w,b
 20582  00C4D8  26D9               	addwf	fsr2l,f,c
 20583  00C4DA  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20584  00C4DC  22DA               	addwfc	fsr2h,f,c
 20585  00C4DE  6ADE               	clrf	postinc2,c
 20586  00C4E0  6ADD               	clrf	postdec2,c
 20587                           
 20588                           ;fat_filelib.c: 535: file->filelength_changed = 0;
 20589  00C4E2  EE20 F010          	lfsr	2,16
 20590  00C4E6  517A               	movf	__create_file@file& (0+255),w,b
 20591  00C4E8  26D9               	addwf	fsr2l,f,c
 20592  00C4EA  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20593  00C4EC  22DA               	addwfc	fsr2h,f,c
 20594  00C4EE  6ADE               	clrf	postinc2,c
 20595  00C4F0  6ADD               	clrf	postdec2,c
 20596                           
 20597                           ;fat_filelib.c: 538: file->last_fat_lookup.ClusterIdx = 0xFFFFFFFF;
 20598  00C4F2  EE20 F031          	lfsr	2,49
 20599  00C4F6  517A               	movf	__create_file@file& (0+255),w,b
 20600  00C4F8  26D9               	addwf	fsr2l,f,c
 20601  00C4FA  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20602  00C4FC  22DA               	addwfc	fsr2h,f,c
 20603  00C4FE  68DE               	setf	postinc2,c
 20604  00C500  68DE               	setf	postinc2,c
 20605  00C502  68DE               	setf	postinc2,c
 20606  00C504  68DD               	setf	postdec2,c
 20607                           
 20608                           ;fat_filelib.c: 539: file->last_fat_lookup.CurrentCluster = 0xFFFFFFFF;
 20609  00C506  EE20 F035          	lfsr	2,53
 20610  00C50A  517A               	movf	__create_file@file& (0+255),w,b
 20611  00C50C  26D9               	addwf	fsr2l,f,c
 20612  00C50E  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20613  00C510  22DA               	addwfc	fsr2h,f,c
 20614  00C512  68DE               	setf	postinc2,c
 20615  00C514  68DE               	setf	postinc2,c
 20616  00C516  68DE               	setf	postinc2,c
 20617  00C518  68DD               	setf	postdec2,c
 20618                           
 20619                           ; BSR set to: 1
 20620                           ;fat_filelib.c: 541: fatfs_cache_init(&_fs, file);
 20621  00C51A  0E09               	movlw	high __fs
 20622  00C51C  6E02               	movwf	fatfs_cache_init@fs+1,c
 20623  00C51E  0E78               	movlw	low __fs
 20624  00C520  6E01               	movwf	fatfs_cache_init@fs,c
 20625  00C522  C17B  F004         	movff	__create_file@file+1,fatfs_cache_init@file+1
 20626  00C526  C17A  F003         	movff	__create_file@file,fatfs_cache_init@file
 20627  00C52A  EC1C  F01F         	call	_fatfs_cache_init	;wreg free
 20628                           
 20629                           ;fat_filelib.c: 543: fatfs_fat_purge(&_fs);
 20630  00C52E  0E09               	movlw	high __fs
 20631  00C530  6E35               	movwf	fatfs_fat_purge@fs+1,c
 20632  00C532  0E78               	movlw	low __fs
 20633  00C534  6E34               	movwf	fatfs_fat_purge@fs,c
 20634  00C536  ECC3  F022         	call	_fatfs_fat_purge	;wreg free
 20635                           
 20636                           ;fat_filelib.c: 545: return file;
 20637  00C53A  C17B  F0F3         	movff	__create_file@file+1,?__create_file+1
 20638  00C53E  0100               	movlb	0	; () banked
 20639  00C540  C17A  F0F2         	movff	__create_file@file,?__create_file
 20640  00C544                     l486:
 20641                           
 20642                           ; BSR set to: 0
 20643  00C544  0012               	return	
 20644  00C546                     __end_of__create_file:
 20645                           	opt stack 0
 20646                           tosu	equ	0xFFF
 20647                           tosh	equ	0xFFE
 20648                           tosl	equ	0xFFD
 20649                           pclath	equ	0xFFA
 20650                           tblptru	equ	0xFF8
 20651                           tblptrh	equ	0xFF7
 20652                           tblptrl	equ	0xFF6
 20653                           tablat	equ	0xFF5
 20654                           prodh	equ	0xFF4
 20655                           prodl	equ	0xFF3
 20656                           indf0	equ	0xFEF
 20657                           postinc0	equ	0xFEE
 20658                           fsr0h	equ	0xFEA
 20659                           fsr0l	equ	0xFE9
 20660                           wreg	equ	0xFE8
 20661                           indf1	equ	0xFE7
 20662                           postinc1	equ	0xFE6
 20663                           postdec1	equ	0xFE5
 20664                           fsr1h	equ	0xFE2
 20665                           fsr1l	equ	0xFE1
 20666                           indf2	equ	0xFDF
 20667                           postinc2	equ	0xFDE
 20668                           postdec2	equ	0xFDD
 20669                           fsr2h	equ	0xFDA
 20670                           fsr2l	equ	0xFD9
 20671                           status	equ	0xFD8
 20672                           
 20673 ;; *************** function _fatfs_cache_init *****************
 20674 ;; Defined at:
 20675 ;;		line 42 in file "fat_cache.c"
 20676 ;; Parameters:    Size  Location     Type
 20677 ;;  fs              2    0[COMRAM] PTR struct fatfs
 20678 ;;		 -> _fs(1095), 
 20679 ;;  file            2    2[COMRAM] PTR struct sFL_FILE
 20680 ;;		 -> RAM(3967), NULL(0), 
 20681 ;; Auto vars:     Size  Location     Type
 20682 ;;		None
 20683 ;; Return value:  Size  Location     Type
 20684 ;;                  2    0[COMRAM] int 
 20685 ;; Registers used:
 20686 ;;		None
 20687 ;; Tracked objects:
 20688 ;;		On entry : 0/0
 20689 ;;		On exit  : 0/0
 20690 ;;		Unchanged: 0/0
 20691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20695 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20696 ;;Total ram usage:        4 bytes
 20697 ;; Hardware stack levels used:    1
 20698 ;; This function calls:
 20699 ;;		Nothing
 20700 ;; This function is called by:
 20701 ;;		__open_file
 20702 ;;		__create_file
 20703 ;; This function uses a non-reentrant model
 20704 ;;
 20705                           
 20706                           	psect	text51
 20707  003E38                     __ptext51:
 20708                           	opt stack 0
 20709  003E38                     _fatfs_cache_init:
 20710                           	opt stack 26
 20711                           
 20712                           ;fat_cache.c: 54: return 1;
 20713                           ;	Return value of _fatfs_cache_init is never used
 20714                           
 20715                           ; BSR set to: 0
 20716                           ;incstack = 0
 20717  003E38  0012               	return	
 20718  003E3A                     __end_of_fatfs_cache_init:
 20719                           	opt stack 0
 20720                           tosu	equ	0xFFF
 20721                           tosh	equ	0xFFE
 20722                           tosl	equ	0xFFD
 20723                           pclath	equ	0xFFA
 20724                           tblptru	equ	0xFF8
 20725                           tblptrh	equ	0xFF7
 20726                           tblptrl	equ	0xFF6
 20727                           tablat	equ	0xFF5
 20728                           prodh	equ	0xFF4
 20729                           prodl	equ	0xFF3
 20730                           indf0	equ	0xFEF
 20731                           postinc0	equ	0xFEE
 20732                           fsr0h	equ	0xFEA
 20733                           fsr0l	equ	0xFE9
 20734                           wreg	equ	0xFE8
 20735                           indf1	equ	0xFE7
 20736                           postinc1	equ	0xFE6
 20737                           postdec1	equ	0xFE5
 20738                           fsr1h	equ	0xFE2
 20739                           fsr1l	equ	0xFE1
 20740                           indf2	equ	0xFDF
 20741                           postinc2	equ	0xFDE
 20742                           postdec2	equ	0xFDD
 20743                           fsr2h	equ	0xFDA
 20744                           fsr2l	equ	0xFD9
 20745                           status	equ	0xFD8
 20746                           
 20747 ;; *************** function _fl_fclose *****************
 20748 ;; Defined at:
 20749 ;;		line 924 in file "fat_filelib.c"
 20750 ;; Parameters:    Size  Location     Type
 20751 ;;  f               2   94[BANK0 ] PTR void 
 20752 ;;		 -> RAM(3967), NULL(0), 
 20753 ;; Auto vars:     Size  Location     Type
 20754 ;;  file            2   96[BANK0 ] PTR struct sFL_FILE
 20755 ;;		 -> RAM(3967), NULL(0), 
 20756 ;; Return value:  Size  Location     Type
 20757 ;;		None               void
 20758 ;; Registers used:
 20759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20760 ;; Tracked objects:
 20761 ;;		On entry : 0/0
 20762 ;;		On exit  : 0/0
 20763 ;;		Unchanged: 0/0
 20764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20765 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20766 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20768 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20769 ;;Total ram usage:        4 bytes
 20770 ;; Hardware stack levels used:    1
 20771 ;; Hardware stack levels required when called:    9
 20772 ;; This function calls:
 20773 ;;		__free_file
 20774 ;;		_fatfs_fat_purge
 20775 ;;		_fatfs_update_file_length
 20776 ;;		_fl_fflush
 20777 ;;		_fl_init
 20778 ;; This function is called by:
 20779 ;;		_fl_remove
 20780 ;;		_File_write
 20781 ;;		_File_append
 20782 ;;		_File_read
 20783 ;;		_File_read_
 20784 ;; This function uses a non-reentrant model
 20785 ;;
 20786                           
 20787                           	psect	text52
 20788  006332                     __ptext52:
 20789                           	opt stack 0
 20790  006332                     _fl_fclose:
 20791                           	opt stack 19
 20792                           
 20793                           ;fat_filelib.c: 926: FL_FILE *file = (FL_FILE *)f;
 20794                           
 20795                           ;incstack = 0
 20796  006332  C0DF  F0E1         	movff	fl_fclose@f+1,fl_fclose@file+1
 20797  006336  C0DE  F0E0         	movff	fl_fclose@f,fl_fclose@file
 20798                           
 20799                           ;fat_filelib.c: 929: { if (_filelib_init==0) fl_init(); };
 20800  00633A  0101               	movlb	1	; () banked
 20801  00633C  5192               	movf	(__filelib_init+1)& (0+255),w,b
 20802  00633E  1191               	iorwf	__filelib_init& (0+255),w,b
 20803  006340  B4D8               	btfsc	status,2,c
 20804                           
 20805                           ; BSR set to: 1
 20806  006342  EC3A  F029         	call	_fl_init	;wreg free
 20807                           
 20808                           ;fat_filelib.c: 931: if (file)
 20809  006346  0100               	movlb	0	; () banked
 20810  006348  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20811  00634A  11E0               	iorwf	fl_fclose@file& (0+255),w,b
 20812  00634C  E101 D085          	bz	l622
 20813                           
 20814                           ; BSR set to: 0
 20815                           ;fat_filelib.c: 936: fl_fflush(f);
 20816                           
 20817                           ; BSR set to: 0
 20818                           
 20819                           ; BSR set to: 0
 20820                           
 20821                           ; BSR set to: 0
 20822                           
 20823                           ; BSR set to: 0
 20824                           
 20825                           ;fat_filelib.c: 932: {
 20826                           ;fat_filelib.c: 933: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
 20827  006350  C0DF  F0D5         	movff	fl_fclose@f+1,fl_fflush@f+1
 20828  006354  C0DE  F0D4         	movff	fl_fclose@f,fl_fflush@f
 20829  006358  EC9B  F02B         	call	_fl_fflush	;wreg free
 20830                           
 20831                           ;fat_filelib.c: 939: if (file->filelength_changed)
 20832  00635C  EE20 F010          	lfsr	2,16
 20833  006360  0100               	movlb	0	; () banked
 20834  006362  51E0               	movf	fl_fclose@file& (0+255),w,b
 20835  006364  26D9               	addwf	fsr2l,f,c
 20836  006366  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20837  006368  22DA               	addwfc	fsr2h,f,c
 20838  00636A  50DE               	movf	postinc2,w,c
 20839  00636C  10DD               	iorwf	postdec2,w,c
 20840  00636E  E02F               	bz	l11922
 20841                           
 20842                           ; BSR set to: 0
 20843                           ;fat_filelib.c: 940: {
 20844                           ;fat_filelib.c: 943: fatfs_update_file_length(&_fs, file->parentcluster, (char*)file->sh
      +                          ortfilename, file->filelength);
 20845  006370  0E09               	movlw	high __fs
 20846  006372  6FAD               	movwf	(fatfs_update_file_length@fs+1)& (0+255),b
 20847  006374  0E78               	movlw	low __fs
 20848  006376  6FAC               	movwf	fatfs_update_file_length@fs& (0+255),b
 20849  006378  C0E0  FFD9         	movff	fl_fclose@file,fsr2l
 20850  00637C  C0E1  FFDA         	movff	fl_fclose@file+1,fsr2h
 20851  006380  CFDE F0AE          	movff	postinc2,fatfs_update_file_length@Cluster
 20852  006384  CFDE F0AF          	movff	postinc2,fatfs_update_file_length@Cluster+1
 20853  006388  CFDE F0B0          	movff	postinc2,fatfs_update_file_length@Cluster+2
 20854  00638C  CFDE F0B1          	movff	postinc2,fatfs_update_file_length@Cluster+3
 20855  006390  0E26               	movlw	38
 20856  006392  25E0               	addwf	fl_fclose@file& (0+255),w,b
 20857  006394  6FB2               	movwf	fatfs_update_file_length@shortname& (0+255),b
 20858  006396  0E00               	movlw	0
 20859  006398  21E1               	addwfc	(fl_fclose@file+1)& (0+255),w,b
 20860  00639A  6FB3               	movwf	(fatfs_update_file_length@shortname+1)& (0+255),b
 20861  00639C  EE20 F00C          	lfsr	2,12
 20862  0063A0  51E0               	movf	fl_fclose@file& (0+255),w,b
 20863  0063A2  26D9               	addwf	fsr2l,f,c
 20864  0063A4  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20865  0063A6  22DA               	addwfc	fsr2h,f,c
 20866  0063A8  CFDE F0B4          	movff	postinc2,fatfs_update_file_length@fileLength
 20867  0063AC  CFDE F0B5          	movff	postinc2,fatfs_update_file_length@fileLength+1
 20868  0063B0  CFDE F0B6          	movff	postinc2,fatfs_update_file_length@fileLength+2
 20869  0063B4  CFDE F0B7          	movff	postinc2,fatfs_update_file_length@fileLength+3
 20870  0063B8  ECB1  F03A         	call	_fatfs_update_file_length	;wreg free
 20871                           
 20872                           ;fat_filelib.c: 945: file->filelength_changed = 0;
 20873  0063BC  EE20 F010          	lfsr	2,16
 20874  0063C0  0100               	movlb	0	; () banked
 20875  0063C2  51E0               	movf	fl_fclose@file& (0+255),w,b
 20876  0063C4  26D9               	addwf	fsr2l,f,c
 20877  0063C6  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20878  0063C8  22DA               	addwfc	fsr2h,f,c
 20879  0063CA  6ADE               	clrf	postinc2,c
 20880  0063CC  6ADD               	clrf	postdec2,c
 20881  0063CE                     l11922:
 20882                           
 20883                           ; BSR set to: 0
 20884                           ;fat_filelib.c: 946: }
 20885                           ;fat_filelib.c: 948: file->bytenum = 0;
 20886  0063CE  EE20 F008          	lfsr	2,8
 20887  0063D2  0100               	movlb	0	; () banked
 20888  0063D4  51E0               	movf	fl_fclose@file& (0+255),w,b
 20889  0063D6  26D9               	addwf	fsr2l,f,c
 20890  0063D8  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20891  0063DA  22DA               	addwfc	fsr2h,f,c
 20892  0063DC  6ADE               	clrf	postinc2,c
 20893  0063DE  6ADE               	clrf	postinc2,c
 20894  0063E0  6ADE               	clrf	postinc2,c
 20895  0063E2  6ADD               	clrf	postdec2,c
 20896                           
 20897                           ; BSR set to: 0
 20898                           ;fat_filelib.c: 949: file->filelength = 0;
 20899  0063E4  EE20 F00C          	lfsr	2,12
 20900  0063E8  51E0               	movf	fl_fclose@file& (0+255),w,b
 20901  0063EA  26D9               	addwf	fsr2l,f,c
 20902  0063EC  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20903  0063EE  22DA               	addwfc	fsr2h,f,c
 20904  0063F0  6ADE               	clrf	postinc2,c
 20905  0063F2  6ADE               	clrf	postinc2,c
 20906  0063F4  6ADE               	clrf	postinc2,c
 20907  0063F6  6ADD               	clrf	postdec2,c
 20908                           
 20909                           ; BSR set to: 0
 20910                           ;fat_filelib.c: 950: file->startcluster = 0;
 20911  0063F8  EE20 F004          	lfsr	2,4
 20912  0063FC  51E0               	movf	fl_fclose@file& (0+255),w,b
 20913  0063FE  26D9               	addwf	fsr2l,f,c
 20914  006400  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20915  006402  22DA               	addwfc	fsr2h,f,c
 20916  006404  6ADE               	clrf	postinc2,c
 20917  006406  6ADE               	clrf	postinc2,c
 20918  006408  6ADE               	clrf	postinc2,c
 20919  00640A  6ADD               	clrf	postdec2,c
 20920                           
 20921                           ; BSR set to: 0
 20922                           ;fat_filelib.c: 951: file->file_data_address = 0xFFFFFFFF;
 20923  00640C  EE22 F039          	lfsr	2,569
 20924  006410  51E0               	movf	fl_fclose@file& (0+255),w,b
 20925  006412  26D9               	addwf	fsr2l,f,c
 20926  006414  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20927  006416  22DA               	addwfc	fsr2h,f,c
 20928  006418  68DE               	setf	postinc2,c
 20929  00641A  68DE               	setf	postinc2,c
 20930  00641C  68DE               	setf	postinc2,c
 20931  00641E  68DD               	setf	postdec2,c
 20932                           
 20933                           ; BSR set to: 0
 20934                           ;fat_filelib.c: 952: file->file_data_dirty = 0;
 20935  006420  EE22 F03D          	lfsr	2,573
 20936  006424  51E0               	movf	fl_fclose@file& (0+255),w,b
 20937  006426  26D9               	addwf	fsr2l,f,c
 20938  006428  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20939  00642A  22DA               	addwfc	fsr2h,f,c
 20940  00642C  6ADE               	clrf	postinc2,c
 20941  00642E  6ADD               	clrf	postdec2,c
 20942                           
 20943                           ; BSR set to: 0
 20944                           ;fat_filelib.c: 953: file->filelength_changed = 0;
 20945  006430  EE20 F010          	lfsr	2,16
 20946  006434  51E0               	movf	fl_fclose@file& (0+255),w,b
 20947  006436  26D9               	addwf	fsr2l,f,c
 20948  006438  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20949  00643A  22DA               	addwfc	fsr2h,f,c
 20950  00643C  0E00               	movlw	0
 20951  00643E  6ADE               	clrf	postinc2,c
 20952  006440  6ADD               	clrf	postdec2,c
 20953                           
 20954                           ; BSR set to: 0
 20955                           ;fat_filelib.c: 956: _free_file(file);
 20956  006442  C0E1  F010         	movff	fl_fclose@file+1,__free_file@file+1
 20957  006446  C0E0  F00F         	movff	fl_fclose@file,__free_file@file
 20958  00644A  EC8F  F020         	call	__free_file	;wreg free
 20959                           
 20960                           ;fat_filelib.c: 958: fatfs_fat_purge(&_fs);
 20961  00644E  0E09               	movlw	high __fs
 20962  006450  6E35               	movwf	fatfs_fat_purge@fs+1,c
 20963  006452  0E78               	movlw	low __fs
 20964  006454  6E34               	movwf	fatfs_fat_purge@fs,c
 20965  006456  ECC3  F022         	call	_fatfs_fat_purge	;wreg free
 20966  00645A                     l622:
 20967  00645A  0012               	return	
 20968  00645C                     __end_of_fl_fclose:
 20969                           	opt stack 0
 20970                           tosu	equ	0xFFF
 20971                           tosh	equ	0xFFE
 20972                           tosl	equ	0xFFD
 20973                           pclath	equ	0xFFA
 20974                           tblptru	equ	0xFF8
 20975                           tblptrh	equ	0xFF7
 20976                           tblptrl	equ	0xFF6
 20977                           tablat	equ	0xFF5
 20978                           prodh	equ	0xFF4
 20979                           prodl	equ	0xFF3
 20980                           indf0	equ	0xFEF
 20981                           postinc0	equ	0xFEE
 20982                           fsr0h	equ	0xFEA
 20983                           fsr0l	equ	0xFE9
 20984                           wreg	equ	0xFE8
 20985                           indf1	equ	0xFE7
 20986                           postinc1	equ	0xFE6
 20987                           postdec1	equ	0xFE5
 20988                           fsr1h	equ	0xFE2
 20989                           fsr1l	equ	0xFE1
 20990                           indf2	equ	0xFDF
 20991                           postinc2	equ	0xFDE
 20992                           postdec2	equ	0xFDD
 20993                           fsr2h	equ	0xFDA
 20994                           fsr2l	equ	0xFD9
 20995                           status	equ	0xFD8
 20996                           
 20997 ;; *************** function _fl_fflush *****************
 20998 ;; Defined at:
 20999 ;;		line 896 in file "fat_filelib.c"
 21000 ;; Parameters:    Size  Location     Type
 21001 ;;  f               2   84[BANK0 ] PTR void 
 21002 ;;		 -> RAM(3967), NULL(0), 
 21003 ;; Auto vars:     Size  Location     Type
 21004 ;;  file            2   92[BANK0 ] PTR struct sFL_FILE
 21005 ;;		 -> RAM(3967), NULL(0), 
 21006 ;; Return value:  Size  Location     Type
 21007 ;;                  2   84[BANK0 ] int 
 21008 ;; Registers used:
 21009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21010 ;; Tracked objects:
 21011 ;;		On entry : 0/0
 21012 ;;		On exit  : 0/0
 21013 ;;		Unchanged: 0/0
 21014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21015 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21016 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21017 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21018 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21019 ;;Total ram usage:       10 bytes
 21020 ;; Hardware stack levels used:    1
 21021 ;; Hardware stack levels required when called:    8
 21022 ;; This function calls:
 21023 ;;		__write_sectors
 21024 ;;		_fl_init
 21025 ;; This function is called by:
 21026 ;;		_fl_fclose
 21027 ;;		_fl_fread
 21028 ;;		_fl_fwrite
 21029 ;; This function uses a non-reentrant model
 21030 ;;
 21031                           
 21032                           	psect	text53
 21033  005736                     __ptext53:
 21034                           	opt stack 0
 21035  005736                     _fl_fflush:
 21036                           	opt stack 19
 21037                           
 21038                           ;fat_filelib.c: 899: FL_FILE *file = (FL_FILE *)f;
 21039                           
 21040                           ;incstack = 0
 21041  005736  C0D5  F0DD         	movff	fl_fflush@f+1,fl_fflush@file+1
 21042  00573A  C0D4  F0DC         	movff	fl_fflush@f,fl_fflush@file
 21043                           
 21044                           ;fat_filelib.c: 902: { if (_filelib_init==0) fl_init(); };
 21045  00573E  0101               	movlb	1	; () banked
 21046  005740  5192               	movf	(__filelib_init+1)& (0+255),w,b
 21047  005742  1191               	iorwf	__filelib_init& (0+255),w,b
 21048  005744  B4D8               	btfsc	status,2,c
 21049                           
 21050                           ; BSR set to: 1
 21051  005746  EC3A  F029         	call	_fl_init	;wreg free
 21052                           
 21053                           ;fat_filelib.c: 904: if (file)
 21054  00574A  0100               	movlb	0	; () banked
 21055  00574C  51DD               	movf	(fl_fflush@file+1)& (0+255),w,b
 21056  00574E  11DC               	iorwf	fl_fflush@file& (0+255),w,b
 21057  005750  E046               	bz	l610
 21058                           
 21059                           ; BSR set to: 0
 21060                           ;fat_filelib.c: 909: if (file->file_data_dirty)
 21061                           
 21062                           ; BSR set to: 0
 21063                           
 21064                           ; BSR set to: 0
 21065                           
 21066                           ; BSR set to: 0
 21067                           
 21068                           ; BSR set to: 0
 21069                           
 21070                           ;fat_filelib.c: 905: {
 21071                           ;fat_filelib.c: 906: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
 21072  005752  EE22 F03D          	lfsr	2,573
 21073  005756  51DC               	movf	fl_fflush@file& (0+255),w,b
 21074  005758  26D9               	addwf	fsr2l,f,c
 21075  00575A  51DD               	movf	(fl_fflush@file+1)& (0+255),w,b
 21076  00575C  22DA               	addwfc	fsr2h,f,c
 21077  00575E  50DE               	movf	postinc2,w,c
 21078  005760  10DD               	iorwf	postdec2,w,c
 21079  005762  E03D               	bz	l610
 21080                           
 21081                           ; BSR set to: 0
 21082                           ;fat_filelib.c: 910: {
 21083                           ;fat_filelib.c: 912: if (_write_sectors(file, file->file_data_address, file->file_data_s
      +                          ector, 1))
 21084  005764  C0DD  F09F         	movff	fl_fflush@file+1,__write_sectors@file+1
 21085  005768  C0DC  F09E         	movff	fl_fflush@file,__write_sectors@file
 21086  00576C  EE22 F039          	lfsr	2,569
 21087  005770  51DC               	movf	fl_fflush@file& (0+255),w,b
 21088  005772  26D9               	addwf	fsr2l,f,c
 21089  005774  51DD               	movf	(fl_fflush@file+1)& (0+255),w,b
 21090  005776  22DA               	addwfc	fsr2h,f,c
 21091  005778  CFDE F0A0          	movff	postinc2,__write_sectors@offset
 21092  00577C  CFDE F0A1          	movff	postinc2,__write_sectors@offset+1
 21093  005780  CFDE F0A2          	movff	postinc2,__write_sectors@offset+2
 21094  005784  CFDE F0A3          	movff	postinc2,__write_sectors@offset+3
 21095  005788  0E39               	movlw	57
 21096  00578A  25DC               	addwf	fl_fflush@file& (0+255),w,b
 21097  00578C  6FD6               	movwf	??_fl_fflush& (0+255),b
 21098  00578E  0E00               	movlw	0
 21099  005790  21DD               	addwfc	(fl_fflush@file+1)& (0+255),w,b
 21100  005792  6FD7               	movwf	(??_fl_fflush+1)& (0+255),b
 21101  005794  0E20               	movlw	32
 21102  005796  6FA6               	movwf	(__write_sectors@buf+2)& (0+255),b
 21103  005798  C0D7  F0A5         	movff	??_fl_fflush+1,__write_sectors@buf+1
 21104  00579C  C0D6  F0A4         	movff	??_fl_fflush,__write_sectors@buf
 21105  0057A0  0E01               	movlw	1
 21106  0057A2  6FA7               	movwf	__write_sectors@count& (0+255),b
 21107  0057A4  0E00               	movlw	0
 21108  0057A6  6BA8               	clrf	(__write_sectors@count+1)& (0+255),b
 21109  0057A8  6BA9               	clrf	(__write_sectors@count+2)& (0+255),b
 21110  0057AA  6BAA               	clrf	(__write_sectors@count+3)& (0+255),b
 21111  0057AC  ECA3  F062         	call	__write_sectors	;wreg free
 21112  0057B0  C09E  F0D8         	movff	?__write_sectors,??_fl_fflush+2
 21113  0057B4  C09F  F0D9         	movff	?__write_sectors+1,??_fl_fflush+3
 21114  0057B8  C0A0  F0DA         	movff	?__write_sectors+2,??_fl_fflush+4
 21115  0057BC  C0A1  F0DB         	movff	?__write_sectors+3,??_fl_fflush+5
 21116  0057C0  0100               	movlb	0	; () banked
 21117  0057C2  51DB               	movf	(??_fl_fflush+5)& (0+255),w,b
 21118  0057C4  11D8               	iorwf	(??_fl_fflush+2)& (0+255),w,b
 21119  0057C6  11D9               	iorwf	(??_fl_fflush+3)& (0+255),w,b
 21120  0057C8  11DA               	iorwf	(??_fl_fflush+4)& (0+255),w,b
 21121  0057CA  E009               	bz	l610
 21122                           
 21123                           ; BSR set to: 0
 21124                           ;fat_filelib.c: 913: file->file_data_dirty = 0;
 21125  0057CC  EE22 F03D          	lfsr	2,573
 21126  0057D0  51DC               	movf	fl_fflush@file& (0+255),w,b
 21127  0057D2  26D9               	addwf	fsr2l,f,c
 21128  0057D4  51DD               	movf	(fl_fflush@file+1)& (0+255),w,b
 21129  0057D6  22DA               	addwfc	fsr2h,f,c
 21130  0057D8  0E00               	movlw	0
 21131  0057DA  6EDE               	movwf	postinc2,c
 21132  0057DC  6EDD               	movwf	postdec2,c
 21133  0057DE                     l610:
 21134                           
 21135                           ; BSR set to: 0
 21136  0057DE  0012               	return	
 21137  0057E0                     __end_of_fl_fflush:
 21138                           	opt stack 0
 21139                           tosu	equ	0xFFF
 21140                           tosh	equ	0xFFE
 21141                           tosl	equ	0xFFD
 21142                           pclath	equ	0xFFA
 21143                           tblptru	equ	0xFF8
 21144                           tblptrh	equ	0xFF7
 21145                           tblptrl	equ	0xFF6
 21146                           tablat	equ	0xFF5
 21147                           prodh	equ	0xFF4
 21148                           prodl	equ	0xFF3
 21149                           indf0	equ	0xFEF
 21150                           postinc0	equ	0xFEE
 21151                           fsr0h	equ	0xFEA
 21152                           fsr0l	equ	0xFE9
 21153                           wreg	equ	0xFE8
 21154                           indf1	equ	0xFE7
 21155                           postinc1	equ	0xFE6
 21156                           postdec1	equ	0xFE5
 21157                           fsr1h	equ	0xFE2
 21158                           fsr1l	equ	0xFE1
 21159                           indf2	equ	0xFDF
 21160                           postinc2	equ	0xFDE
 21161                           postdec2	equ	0xFDD
 21162                           fsr2h	equ	0xFDA
 21163                           fsr2l	equ	0xFD9
 21164                           status	equ	0xFD8
 21165                           
 21166 ;; *************** function __write_sectors *****************
 21167 ;; Defined at:
 21168 ;;		line 808 in file "fat_filelib.c"
 21169 ;; Parameters:    Size  Location     Type
 21170 ;;  file            2   30[BANK0 ] PTR struct sFL_FILE
 21171 ;;		 -> RAM(3967), NULL(0), 
 21172 ;;  offset          4   32[BANK0 ] unsigned long 
 21173 ;;  buf             3   36[BANK0 ] PTR unsigned char 
 21174 ;;		 -> w(1), str_0(26), data(1), fl_fputc@data(1), 
 21175 ;;		 -> ROM(65535), RAM(3967), NULL(0), 
 21176 ;;  count           4   39[BANK0 ] unsigned long 
 21177 ;; Auto vars:     Size  Location     Type
 21178 ;;  nextCluster     4   64[BANK0 ] unsigned long 
 21179 ;;  Cluster         4   80[BANK0 ] unsigned long 
 21180 ;;  ClusterIdx      4   76[BANK0 ] unsigned long 
 21181 ;;  i               4   72[BANK0 ] unsigned long 
 21182 ;;  SectorNumber    4   68[BANK0 ] unsigned long 
 21183 ;;  LastCluster     4   60[BANK0 ] unsigned long 
 21184 ;;  TotalWriteCo    4   56[BANK0 ] unsigned long 
 21185 ;;  lba             4   52[BANK0 ] unsigned long 
 21186 ;; Return value:  Size  Location     Type
 21187 ;;                  4   30[BANK0 ] unsigned long 
 21188 ;; Registers used:
 21189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21190 ;; Tracked objects:
 21191 ;;		On entry : 0/0
 21192 ;;		On exit  : 0/0
 21193 ;;		Unchanged: 0/0
 21194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21195 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21196 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21197 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21198 ;;      Totals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21199 ;;Total ram usage:       54 bytes
 21200 ;; Hardware stack levels used:    1
 21201 ;; Hardware stack levels required when called:    7
 21202 ;; This function calls:
 21203 ;;		___lldiv
 21204 ;;		_fatfs_add_free_space
 21205 ;;		_fatfs_cache_get_next_cluster
 21206 ;;		_fatfs_cache_set_next_cluster
 21207 ;;		_fatfs_find_next_cluster
 21208 ;;		_fatfs_lba_of_cluster
 21209 ;;		_fatfs_sector_write
 21210 ;; This function is called by:
 21211 ;;		_fl_fflush
 21212 ;;		_fl_fwrite
 21213 ;; This function uses a non-reentrant model
 21214 ;;
 21215                           
 21216                           	psect	text54
 21217  00C546                     __ptext54:
 21218                           	opt stack 0
 21219  00C546                     __write_sectors:
 21220                           	opt stack 19
 21221                           
 21222                           ;fat_filelib.c: 810: uint32 SectorNumber = 0;
 21223                           
 21224                           ; BSR set to: 0
 21225                           ;incstack = 0
 21226  00C546  0100               	movlb	0	; () banked
 21227  00C548  6BC4               	clrf	__write_sectors@SectorNumber& (0+255),b
 21228  00C54A  6BC5               	clrf	(__write_sectors@SectorNumber+1)& (0+255),b
 21229  00C54C  6BC6               	clrf	(__write_sectors@SectorNumber+2)& (0+255),b
 21230  00C54E  6BC7               	clrf	(__write_sectors@SectorNumber+3)& (0+255),b
 21231                           
 21232                           ;fat_filelib.c: 811: uint32 ClusterIdx = 0;
 21233  00C550  6BCC               	clrf	__write_sectors@ClusterIdx& (0+255),b
 21234  00C552  6BCD               	clrf	(__write_sectors@ClusterIdx+1)& (0+255),b
 21235  00C554  6BCE               	clrf	(__write_sectors@ClusterIdx+2)& (0+255),b
 21236  00C556  6BCF               	clrf	(__write_sectors@ClusterIdx+3)& (0+255),b
 21237                           
 21238                           ;fat_filelib.c: 812: uint32 Cluster = 0;
 21239  00C558  6BD0               	clrf	__write_sectors@Cluster& (0+255),b
 21240  00C55A  6BD1               	clrf	(__write_sectors@Cluster+1)& (0+255),b
 21241  00C55C  6BD2               	clrf	(__write_sectors@Cluster+2)& (0+255),b
 21242  00C55E  6BD3               	clrf	(__write_sectors@Cluster+3)& (0+255),b
 21243                           
 21244                           ; BSR set to: 0
 21245                           ;fat_filelib.c: 813: uint32 LastCluster = 0xFFFFFFFF;
 21246  00C560  69BC               	setf	__write_sectors@LastCluster& (0+255),b
 21247  00C562  69BD               	setf	(__write_sectors@LastCluster+1)& (0+255),b
 21248  00C564  69BE               	setf	(__write_sectors@LastCluster+2)& (0+255),b
 21249  00C566  69BF               	setf	(__write_sectors@LastCluster+3)& (0+255),b
 21250                           
 21251                           ; BSR set to: 0
 21252                           ;fat_filelib.c: 814: uint32 i;
 21253                           ;fat_filelib.c: 815: uint32 lba;
 21254                           ;fat_filelib.c: 816: uint32 TotalWriteCount = count;
 21255  00C568  C0A7  F0B8         	movff	__write_sectors@count,__write_sectors@TotalWriteCount
 21256  00C56C  C0A8  F0B9         	movff	__write_sectors@count+1,__write_sectors@TotalWriteCount+1
 21257  00C570  C0A9  F0BA         	movff	__write_sectors@count+2,__write_sectors@TotalWriteCount+2
 21258  00C574  C0AA  F0BB         	movff	__write_sectors@count+3,__write_sectors@TotalWriteCount+3
 21259                           
 21260                           ; BSR set to: 0
 21261                           ;fat_filelib.c: 819: ClusterIdx = offset / _fs.sectors_per_cluster;
 21262  00C578  C0A0  F001         	movff	__write_sectors@offset,___lldiv@dividend
 21263  00C57C  C0A1  F002         	movff	__write_sectors@offset+1,___lldiv@dividend+1
 21264  00C580  C0A2  F003         	movff	__write_sectors@offset+2,___lldiv@dividend+2
 21265  00C584  C0A3  F004         	movff	__write_sectors@offset+3,___lldiv@dividend+3
 21266  00C588  C978  F0AB         	movff	__fs,??__write_sectors
 21267  00C58C  51AB               	movf	??__write_sectors& (0+255),w,b
 21268  00C58E  6E05               	movwf	___lldiv@divisor,c
 21269  00C590  6A06               	clrf	___lldiv@divisor+1,c
 21270  00C592  6A07               	clrf	___lldiv@divisor+2,c
 21271  00C594  6A08               	clrf	___lldiv@divisor+3,c
 21272  00C596  EC7B  F026         	call	___lldiv	;wreg free
 21273  00C59A  C001  F0CC         	movff	?___lldiv,__write_sectors@ClusterIdx
 21274  00C59E  C002  F0CD         	movff	?___lldiv+1,__write_sectors@ClusterIdx+1
 21275  00C5A2  C003  F0CE         	movff	?___lldiv+2,__write_sectors@ClusterIdx+2
 21276  00C5A6  C004  F0CF         	movff	?___lldiv+3,__write_sectors@ClusterIdx+3
 21277                           
 21278                           ;fat_filelib.c: 820: SectorNumber = offset - (ClusterIdx * _fs.sectors_per_cluster);
 21279  00C5AA  C978  F0AB         	movff	__fs,??__write_sectors
 21280  00C5AE  C0AB  F0AC         	movff	??__write_sectors,??__write_sectors+1
 21281  00C5B2  0100               	movlb	0	; () banked
 21282  00C5B4  6BAD               	clrf	(??__write_sectors+2)& (0+255),b
 21283  00C5B6  6BAE               	clrf	(??__write_sectors+3)& (0+255),b
 21284  00C5B8  6BAF               	clrf	(??__write_sectors+4)& (0+255),b
 21285  00C5BA  51AC               	movf	(??__write_sectors+1)& (0+255),w,b
 21286  00C5BC  03CC               	mulwf	__write_sectors@ClusterIdx& (0+255),b
 21287  00C5BE  CFF3 F0B0          	movff	prodl,??__write_sectors+5
 21288  00C5C2  CFF4 F0B1          	movff	prodh,??__write_sectors+6
 21289  00C5C6  6BB2               	clrf	(??__write_sectors+7)& (0+255),b
 21290  00C5C8  6BB3               	clrf	(??__write_sectors+8)& (0+255),b
 21291  00C5CA  03CD               	mulwf	(__write_sectors@ClusterIdx+1)& (0+255),b
 21292  00C5CC  50F3               	movf	243,w,c
 21293  00C5CE  27B1               	addwf	(??__write_sectors+6)& (0+255),f,b
 21294  00C5D0  50F4               	movf	244,w,c
 21295  00C5D2  23B2               	addwfc	(??__write_sectors+7)& (0+255),f,b
 21296  00C5D4  0E00               	movlw	0
 21297  00C5D6  23B3               	addwfc	(??__write_sectors+8)& (0+255),f,b
 21298  00C5D8  51AD               	movf	(??__write_sectors+2)& (0+255),w,b
 21299  00C5DA  03CC               	mulwf	__write_sectors@ClusterIdx& (0+255),b
 21300  00C5DC  50F3               	movf	243,w,c
 21301  00C5DE  27B1               	addwf	(??__write_sectors+6)& (0+255),f,b
 21302  00C5E0  50F4               	movf	244,w,c
 21303  00C5E2  23B2               	addwfc	(??__write_sectors+7)& (0+255),f,b
 21304  00C5E4  0E00               	movlw	0
 21305  00C5E6  23B3               	addwfc	(??__write_sectors+8)& (0+255),f,b
 21306  00C5E8  51AC               	movf	(??__write_sectors+1)& (0+255),w,b
 21307  00C5EA  03CE               	mulwf	(__write_sectors@ClusterIdx+2)& (0+255),b
 21308  00C5EC  50F3               	movf	243,w,c
 21309  00C5EE  27B2               	addwf	(??__write_sectors+7)& (0+255),f,b
 21310  00C5F0  50F4               	movf	244,w,c
 21311  00C5F2  23B3               	addwfc	(??__write_sectors+8)& (0+255),f,b
 21312  00C5F4  51AD               	movf	(??__write_sectors+2)& (0+255),w,b
 21313  00C5F6  03CD               	mulwf	(__write_sectors@ClusterIdx+1)& (0+255),b
 21314  00C5F8  50F3               	movf	243,w,c
 21315  00C5FA  27B2               	addwf	(??__write_sectors+7)& (0+255),f,b
 21316  00C5FC  50F4               	movf	244,w,c
 21317  00C5FE  23B3               	addwfc	(??__write_sectors+8)& (0+255),f,b
 21318  00C600  51AE               	movf	(??__write_sectors+3)& (0+255),w,b
 21319  00C602  03CC               	mulwf	__write_sectors@ClusterIdx& (0+255),b
 21320  00C604  50F3               	movf	243,w,c
 21321  00C606  27B2               	addwf	(??__write_sectors+7)& (0+255),f,b
 21322  00C608  50F4               	movf	244,w,c
 21323  00C60A  23B3               	addwfc	(??__write_sectors+8)& (0+255),f,b
 21324  00C60C  51CF               	movf	(__write_sectors@ClusterIdx+3)& (0+255),w,b
 21325  00C60E  03AC               	mulwf	(??__write_sectors+1)& (0+255),b
 21326  00C610  50F3               	movf	243,w,c
 21327  00C612  27B3               	addwf	(??__write_sectors+8)& (0+255),f,b
 21328  00C614  51AD               	movf	(??__write_sectors+2)& (0+255),w,b
 21329  00C616  03CE               	mulwf	(__write_sectors@ClusterIdx+2)& (0+255),b
 21330  00C618  50F3               	movf	243,w,c
 21331  00C61A  27B3               	addwf	(??__write_sectors+8)& (0+255),f,b
 21332  00C61C  51AE               	movf	(??__write_sectors+3)& (0+255),w,b
 21333  00C61E  03CD               	mulwf	(__write_sectors@ClusterIdx+1)& (0+255),b
 21334  00C620  50F3               	movf	243,w,c
 21335  00C622  27B3               	addwf	(??__write_sectors+8)& (0+255),f,b
 21336  00C624  51AF               	movf	(??__write_sectors+4)& (0+255),w,b
 21337  00C626  03CC               	mulwf	__write_sectors@ClusterIdx& (0+255),b
 21338  00C628  50F3               	movf	243,w,c
 21339  00C62A  27B3               	addwf	(??__write_sectors+8)& (0+255),f,b
 21340  00C62C  1FB0               	comf	(??__write_sectors+5)& (0+255),f,b
 21341  00C62E  1FB1               	comf	(??__write_sectors+6)& (0+255),f,b
 21342  00C630  1FB2               	comf	(??__write_sectors+7)& (0+255),f,b
 21343  00C632  1FB3               	comf	(??__write_sectors+8)& (0+255),f,b
 21344  00C634  2BB0               	incf	(??__write_sectors+5)& (0+255),f,b
 21345  00C636  0E00               	movlw	0
 21346  00C638  23B1               	addwfc	(??__write_sectors+6)& (0+255),f,b
 21347  00C63A  23B2               	addwfc	(??__write_sectors+7)& (0+255),f,b
 21348  00C63C  23B3               	addwfc	(??__write_sectors+8)& (0+255),f,b
 21349  00C63E  51A0               	movf	__write_sectors@offset& (0+255),w,b
 21350  00C640  25B0               	addwf	(??__write_sectors+5)& (0+255),w,b
 21351  00C642  6FC4               	movwf	__write_sectors@SectorNumber& (0+255),b
 21352  00C644  51A1               	movf	(__write_sectors@offset+1)& (0+255),w,b
 21353  00C646  21B1               	addwfc	(??__write_sectors+6)& (0+255),w,b
 21354  00C648  6FC5               	movwf	(__write_sectors@SectorNumber+1)& (0+255),b
 21355  00C64A  51A2               	movf	(__write_sectors@offset+2)& (0+255),w,b
 21356  00C64C  21B2               	addwfc	(??__write_sectors+7)& (0+255),w,b
 21357  00C64E  6FC6               	movwf	(__write_sectors@SectorNumber+2)& (0+255),b
 21358  00C650  51A3               	movf	(__write_sectors@offset+3)& (0+255),w,b
 21359  00C652  21B3               	addwfc	(??__write_sectors+8)& (0+255),w,b
 21360  00C654  6FC7               	movwf	(__write_sectors@SectorNumber+3)& (0+255),b
 21361                           
 21362                           ; BSR set to: 0
 21363                           ;fat_filelib.c: 823: if ((SectorNumber + count) > _fs.sectors_per_cluster)
 21364  00C656  51A7               	movf	__write_sectors@count& (0+255),w,b
 21365  00C658  25C4               	addwf	__write_sectors@SectorNumber& (0+255),w,b
 21366  00C65A  6FAB               	movwf	??__write_sectors& (0+255),b
 21367  00C65C  51A8               	movf	(__write_sectors@count+1)& (0+255),w,b
 21368  00C65E  21C5               	addwfc	(__write_sectors@SectorNumber+1)& (0+255),w,b
 21369  00C660  6FAC               	movwf	(??__write_sectors+1)& (0+255),b
 21370  00C662  51A9               	movf	(__write_sectors@count+2)& (0+255),w,b
 21371  00C664  21C6               	addwfc	(__write_sectors@SectorNumber+2)& (0+255),w,b
 21372  00C666  6FAD               	movwf	(??__write_sectors+2)& (0+255),b
 21373  00C668  51AA               	movf	(__write_sectors@count+3)& (0+255),w,b
 21374  00C66A  21C7               	addwfc	(__write_sectors@SectorNumber+3)& (0+255),w,b
 21375  00C66C  6FAE               	movwf	(??__write_sectors+3)& (0+255),b
 21376  00C66E  C978  F0AF         	movff	__fs,??__write_sectors+4
 21377  00C672  C0AF  F0B0         	movff	??__write_sectors+4,??__write_sectors+5
 21378  00C676  6BB1               	clrf	(??__write_sectors+6)& (0+255),b
 21379  00C678  6BB2               	clrf	(??__write_sectors+7)& (0+255),b
 21380  00C67A  6BB3               	clrf	(??__write_sectors+8)& (0+255),b
 21381  00C67C  51AB               	movf	??__write_sectors& (0+255),w,b
 21382  00C67E  5DB0               	subwf	(??__write_sectors+5)& (0+255),w,b
 21383  00C680  51AC               	movf	(??__write_sectors+1)& (0+255),w,b
 21384  00C682  59B1               	subwfb	(??__write_sectors+6)& (0+255),w,b
 21385  00C684  51AD               	movf	(??__write_sectors+2)& (0+255),w,b
 21386  00C686  59B2               	subwfb	(??__write_sectors+7)& (0+255),w,b
 21387  00C688  51AE               	movf	(??__write_sectors+3)& (0+255),w,b
 21388  00C68A  59B3               	subwfb	(??__write_sectors+8)& (0+255),w,b
 21389  00C68C  E21F               	bc	l10934
 21390                           
 21391                           ; BSR set to: 0
 21392                           ;fat_filelib.c: 824: count = _fs.sectors_per_cluster - SectorNumber;
 21393  00C68E  C0C4  F0AB         	movff	__write_sectors@SectorNumber,??__write_sectors
 21394  00C692  C0C5  F0AC         	movff	__write_sectors@SectorNumber+1,??__write_sectors+1
 21395  00C696  C0C6  F0AD         	movff	__write_sectors@SectorNumber+2,??__write_sectors+2
 21396  00C69A  C0C7  F0AE         	movff	__write_sectors@SectorNumber+3,??__write_sectors+3
 21397  00C69E  1FAB               	comf	??__write_sectors& (0+255),f,b
 21398  00C6A0  1FAC               	comf	(??__write_sectors+1)& (0+255),f,b
 21399  00C6A2  1FAD               	comf	(??__write_sectors+2)& (0+255),f,b
 21400  00C6A4  1FAE               	comf	(??__write_sectors+3)& (0+255),f,b
 21401  00C6A6  2BAB               	incf	??__write_sectors& (0+255),f,b
 21402  00C6A8  0E00               	movlw	0
 21403  00C6AA  23AC               	addwfc	(??__write_sectors+1)& (0+255),f,b
 21404  00C6AC  23AD               	addwfc	(??__write_sectors+2)& (0+255),f,b
 21405  00C6AE  23AE               	addwfc	(??__write_sectors+3)& (0+255),f,b
 21406  00C6B0  C978  F0AF         	movff	__fs,??__write_sectors+4
 21407  00C6B4  51AF               	movf	(??__write_sectors+4)& (0+255),w,b
 21408  00C6B6  25AB               	addwf	??__write_sectors& (0+255),w,b
 21409  00C6B8  6FA7               	movwf	__write_sectors@count& (0+255),b
 21410  00C6BA  0E00               	movlw	0
 21411  00C6BC  21AC               	addwfc	(??__write_sectors+1)& (0+255),w,b
 21412  00C6BE  6FA8               	movwf	(__write_sectors@count+1)& (0+255),b
 21413  00C6C0  0E00               	movlw	0
 21414  00C6C2  21AD               	addwfc	(??__write_sectors+2)& (0+255),w,b
 21415  00C6C4  6FA9               	movwf	(__write_sectors@count+2)& (0+255),b
 21416  00C6C6  0E00               	movlw	0
 21417  00C6C8  21AE               	addwfc	(??__write_sectors+3)& (0+255),w,b
 21418  00C6CA  6FAA               	movwf	(__write_sectors@count+3)& (0+255),b
 21419  00C6CC                     l10934:
 21420                           
 21421                           ; BSR set to: 0
 21422                           ;fat_filelib.c: 827: if (ClusterIdx == file->last_fat_lookup.ClusterIdx)
 21423  00C6CC  EE20 F031          	lfsr	2,49
 21424  00C6D0  0100               	movlb	0	; () banked
 21425  00C6D2  519E               	movf	__write_sectors@file& (0+255),w,b
 21426  00C6D4  26D9               	addwf	fsr2l,f,c
 21427  00C6D6  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21428  00C6D8  22DA               	addwfc	fsr2h,f,c
 21429  00C6DA  CFDE F0AB          	movff	postinc2,??__write_sectors
 21430  00C6DE  CFDE F0AC          	movff	postinc2,??__write_sectors+1
 21431  00C6E2  CFDE F0AD          	movff	postinc2,??__write_sectors+2
 21432  00C6E6  CFDE F0AE          	movff	postinc2,??__write_sectors+3
 21433  00C6EA  51CF               	movf	(__write_sectors@ClusterIdx+3)& (0+255),w,b
 21434  00C6EC  19AE               	xorwf	(??__write_sectors+3)& (0+255),w,b
 21435  00C6EE  E108               	bnz	u12535
 21436  00C6F0  51CE               	movf	(__write_sectors@ClusterIdx+2)& (0+255),w,b
 21437  00C6F2  19AD               	xorwf	(??__write_sectors+2)& (0+255),w,b
 21438  00C6F4  E105               	bnz	u12535
 21439  00C6F6  51CD               	movf	(__write_sectors@ClusterIdx+1)& (0+255),w,b
 21440  00C6F8  19AC               	xorwf	(??__write_sectors+1)& (0+255),w,b
 21441  00C6FA  E102               	bnz	u12535
 21442  00C6FC  51CC               	movf	__write_sectors@ClusterIdx& (0+255),w,b
 21443  00C6FE  19AB               	xorwf	??__write_sectors& (0+255),w,b
 21444  00C700                     u12535:
 21445  00C700  E110               	bnz	l10938
 21446                           
 21447                           ; BSR set to: 0
 21448                           ;fat_filelib.c: 828: Cluster = file->last_fat_lookup.CurrentCluster;
 21449  00C702  EE20 F035          	lfsr	2,53
 21450  00C706  0100               	movlb	0	; () banked
 21451  00C708  519E               	movf	__write_sectors@file& (0+255),w,b
 21452  00C70A  26D9               	addwf	fsr2l,f,c
 21453  00C70C  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21454  00C70E  22DA               	addwfc	fsr2h,f,c
 21455  00C710  CFDE F0D0          	movff	postinc2,__write_sectors@Cluster
 21456  00C714  CFDE F0D1          	movff	postinc2,__write_sectors@Cluster+1
 21457  00C718  CFDE F0D2          	movff	postinc2,__write_sectors@Cluster+2
 21458  00C71C  CFDE F0D3          	movff	postinc2,__write_sectors@Cluster+3
 21459  00C720  D12A               	goto	l10974
 21460  00C722                     l10938:
 21461                           
 21462                           ; BSR set to: 0
 21463                           ;fat_filelib.c: 830: else
 21464                           ;fat_filelib.c: 831: {
 21465                           ;fat_filelib.c: 833: if (ClusterIdx && ClusterIdx == file->last_fat_lookup.ClusterIdx + 
      +                          1)
 21466  00C722  0100               	movlb	0	; () banked
 21467  00C724  51CF               	movf	(__write_sectors@ClusterIdx+3)& (0+255),w,b
 21468  00C726  11CC               	iorwf	__write_sectors@ClusterIdx& (0+255),w,b
 21469  00C728  11CD               	iorwf	(__write_sectors@ClusterIdx+1)& (0+255),w,b
 21470  00C72A  11CE               	iorwf	(__write_sectors@ClusterIdx+2)& (0+255),w,b
 21471  00C72C  E036               	bz	l10944
 21472                           
 21473                           ; BSR set to: 0
 21474  00C72E  EE20 F031          	lfsr	2,49
 21475  00C732  519E               	movf	__write_sectors@file& (0+255),w,b
 21476  00C734  26D9               	addwf	fsr2l,f,c
 21477  00C736  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21478  00C738  22DA               	addwfc	fsr2h,f,c
 21479  00C73A  CFDE F0AB          	movff	postinc2,??__write_sectors
 21480  00C73E  CFDE F0AC          	movff	postinc2,??__write_sectors+1
 21481  00C742  CFDE F0AD          	movff	postinc2,??__write_sectors+2
 21482  00C746  CFDE F0AE          	movff	postinc2,??__write_sectors+3
 21483  00C74A  29AB               	incf	??__write_sectors& (0+255),w,b
 21484  00C74C  6FAF               	movwf	(??__write_sectors+4)& (0+255),b
 21485  00C74E  0E00               	movlw	0
 21486  00C750  21AC               	addwfc	(??__write_sectors+1)& (0+255),w,b
 21487  00C752  6FB0               	movwf	(??__write_sectors+5)& (0+255),b
 21488  00C754  0E00               	movlw	0
 21489  00C756  21AD               	addwfc	(??__write_sectors+2)& (0+255),w,b
 21490  00C758  6FB1               	movwf	(??__write_sectors+6)& (0+255),b
 21491  00C75A  0E00               	movlw	0
 21492  00C75C  21AE               	addwfc	(??__write_sectors+3)& (0+255),w,b
 21493  00C75E  6FB2               	movwf	(??__write_sectors+7)& (0+255),b
 21494  00C760  19CF               	xorwf	(__write_sectors@ClusterIdx+3)& (0+255),w,b
 21495  00C762  E108               	bnz	u12555
 21496  00C764  51CE               	movf	(__write_sectors@ClusterIdx+2)& (0+255),w,b
 21497  00C766  19B1               	xorwf	(??__write_sectors+6)& (0+255),w,b
 21498  00C768  E105               	bnz	u12555
 21499  00C76A  51CD               	movf	(__write_sectors@ClusterIdx+1)& (0+255),w,b
 21500  00C76C  19B0               	xorwf	(??__write_sectors+5)& (0+255),w,b
 21501  00C76E  E102               	bnz	u12555
 21502  00C770  51CC               	movf	__write_sectors@ClusterIdx& (0+255),w,b
 21503  00C772  19AF               	xorwf	(??__write_sectors+4)& (0+255),w,b
 21504  00C774                     u12555:
 21505  00C774  E112               	bnz	l10944
 21506                           
 21507                           ; BSR set to: 0
 21508                           ;fat_filelib.c: 834: {
 21509                           ;fat_filelib.c: 835: i = file->last_fat_lookup.ClusterIdx;
 21510  00C776  EE20 F031          	lfsr	2,49
 21511  00C77A  0100               	movlb	0	; () banked
 21512  00C77C  519E               	movf	__write_sectors@file& (0+255),w,b
 21513  00C77E  26D9               	addwf	fsr2l,f,c
 21514  00C780  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21515  00C782  22DA               	addwfc	fsr2h,f,c
 21516  00C784  CFDE F0C8          	movff	postinc2,__write_sectors@i
 21517  00C788  CFDE F0C9          	movff	postinc2,__write_sectors@i+1
 21518  00C78C  CFDE F0CA          	movff	postinc2,__write_sectors@i+2
 21519  00C790  CFDE F0CB          	movff	postinc2,__write_sectors@i+3
 21520                           
 21521                           ;fat_filelib.c: 836: Cluster = file->last_fat_lookup.CurrentCluster;
 21522  00C794  EE20 F035          	lfsr	2,53
 21523  00C798  D007               	goto	L62
 21524  00C79A                     l10944:
 21525                           
 21526                           ; BSR set to: 0
 21527                           ;fat_filelib.c: 839: else
 21528                           ;fat_filelib.c: 840: {
 21529                           ;fat_filelib.c: 842: i = 0;
 21530  00C79A  0100               	movlb	0	; () banked
 21531  00C79C  6BC8               	clrf	__write_sectors@i& (0+255),b
 21532  00C79E  6BC9               	clrf	(__write_sectors@i+1)& (0+255),b
 21533  00C7A0  6BCA               	clrf	(__write_sectors@i+2)& (0+255),b
 21534  00C7A2  6BCB               	clrf	(__write_sectors@i+3)& (0+255),b
 21535                           
 21536                           ; BSR set to: 0
 21537                           ;fat_filelib.c: 843: Cluster = file->startcluster;
 21538  00C7A4  EE20 F004          	lfsr	2,4
 21539  00C7A8                     L62:
 21540  00C7A8  0100               	movlb	0	; () banked
 21541  00C7AA  519E               	movf	__write_sectors@file& (0+255),w,b
 21542  00C7AC  26D9               	addwf	fsr2l,f,c
 21543  00C7AE  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21544  00C7B0  22DA               	addwfc	fsr2h,f,c
 21545  00C7B2  CFDE F0D0          	movff	postinc2,__write_sectors@Cluster
 21546  00C7B6  CFDE F0D1          	movff	postinc2,__write_sectors@Cluster+1
 21547  00C7BA  CFDE F0D2          	movff	postinc2,__write_sectors@Cluster+2
 21548  00C7BE  CFDE F0D3          	movff	postinc2,__write_sectors@Cluster+3
 21549  00C7C2  D069               	goto	l588
 21550  00C7C4                     l10948:
 21551                           
 21552                           ; BSR set to: 0
 21553                           ;fat_filelib.c: 848: {
 21554                           ;fat_filelib.c: 849: uint32 nextCluster;
 21555                           ;fat_filelib.c: 852: if (!fatfs_cache_get_next_cluster(&_fs, file, i, &nextCluster))
 21556  00C7C4  0E09               	movlw	high __fs
 21557  00C7C6  6E02               	movwf	fatfs_cache_get_next_cluster@fs+1,c
 21558  00C7C8  0E78               	movlw	low __fs
 21559  00C7CA  6E01               	movwf	fatfs_cache_get_next_cluster@fs,c
 21560  00C7CC  C09F  F004         	movff	__write_sectors@file+1,fatfs_cache_get_next_cluster@file+1
 21561  00C7D0  C09E  F003         	movff	__write_sectors@file,fatfs_cache_get_next_cluster@file
 21562  00C7D4  C0C8  F005         	movff	__write_sectors@i,fatfs_cache_get_next_cluster@clusterIdx
 21563  00C7D8  C0C9  F006         	movff	__write_sectors@i+1,fatfs_cache_get_next_cluster@clusterIdx+1
 21564  00C7DC  C0CA  F007         	movff	__write_sectors@i+2,fatfs_cache_get_next_cluster@clusterIdx+2
 21565  00C7E0  C0CB  F008         	movff	__write_sectors@i+3,fatfs_cache_get_next_cluster@clusterIdx+3
 21566  00C7E4  0E00               	movlw	high __write_sectors@nextCluster
 21567  00C7E6  6E0A               	movwf	fatfs_cache_get_next_cluster@pNextCluster+1,c
 21568  00C7E8  0100               	movlb	0	; () banked
 21569  00C7EA  0EC0               	movlw	low __write_sectors@nextCluster
 21570  00C7EC  6E09               	movwf	fatfs_cache_get_next_cluster@pNextCluster,c
 21571  00C7EE  EC22  F01F         	call	_fatfs_cache_get_next_cluster	;wreg free
 21572  00C7F2  5002               	movf	?_fatfs_cache_get_next_cluster+1,w,c
 21573  00C7F4  1001               	iorwf	?_fatfs_cache_get_next_cluster,w,c
 21574  00C7F6  E131               	bnz	l10954
 21575                           
 21576                           ;fat_filelib.c: 853: {
 21577                           ;fat_filelib.c: 855: nextCluster = fatfs_find_next_cluster(&_fs, Cluster);
 21578  00C7F8  0E09               	movlw	high __fs
 21579  00C7FA  6E47               	movwf	fatfs_find_next_cluster@fs+1,c
 21580  00C7FC  0E78               	movlw	low __fs
 21581  00C7FE  6E46               	movwf	fatfs_find_next_cluster@fs,c
 21582  00C800  C0D0  F048         	movff	__write_sectors@Cluster,fatfs_find_next_cluster@current_cluster
 21583  00C804  C0D1  F049         	movff	__write_sectors@Cluster+1,fatfs_find_next_cluster@current_cluster+1
 21584  00C808  C0D2  F04A         	movff	__write_sectors@Cluster+2,fatfs_find_next_cluster@current_cluster+2
 21585  00C80C  C0D3  F04B         	movff	__write_sectors@Cluster+3,fatfs_find_next_cluster@current_cluster+3
 21586  00C810  EC9E  F054         	call	_fatfs_find_next_cluster	;wreg free
 21587  00C814  C046  F0C0         	movff	?_fatfs_find_next_cluster,__write_sectors@nextCluster
 21588  00C818  C047  F0C1         	movff	?_fatfs_find_next_cluster+1,__write_sectors@nextCluster+1
 21589  00C81C  C048  F0C2         	movff	?_fatfs_find_next_cluster+2,__write_sectors@nextCluster+2
 21590  00C820  C049  F0C3         	movff	?_fatfs_find_next_cluster+3,__write_sectors@nextCluster+3
 21591                           
 21592                           ;fat_filelib.c: 858: fatfs_cache_set_next_cluster(&_fs, file, i, nextCluster);
 21593  00C824  0E09               	movlw	high __fs
 21594  00C826  6E02               	movwf	fatfs_cache_set_next_cluster@fs+1,c
 21595  00C828  0E78               	movlw	low __fs
 21596  00C82A  6E01               	movwf	fatfs_cache_set_next_cluster@fs,c
 21597  00C82C  C09F  F004         	movff	__write_sectors@file+1,fatfs_cache_set_next_cluster@file+1
 21598  00C830  0100               	movlb	0	; () banked
 21599  00C832  C09E  F003         	movff	__write_sectors@file,fatfs_cache_set_next_cluster@file
 21600  00C836  C0C8  F005         	movff	__write_sectors@i,fatfs_cache_set_next_cluster@clusterIdx
 21601  00C83A  C0C9  F006         	movff	__write_sectors@i+1,fatfs_cache_set_next_cluster@clusterIdx+1
 21602  00C83E  C0CA  F007         	movff	__write_sectors@i+2,fatfs_cache_set_next_cluster@clusterIdx+2
 21603  00C842  C0CB  F008         	movff	__write_sectors@i+3,fatfs_cache_set_next_cluster@clusterIdx+3
 21604  00C846  C0C0  F009         	movff	__write_sectors@nextCluster,fatfs_cache_set_next_cluster@nextCluster
 21605  00C84A  C0C1  F00A         	movff	__write_sectors@nextCluster+1,fatfs_cache_set_next_cluster@nextCluster+1
 21606  00C84E  C0C2  F00B         	movff	__write_sectors@nextCluster+2,fatfs_cache_set_next_cluster@nextCluster+2
 21607  00C852  C0C3  F00C         	movff	__write_sectors@nextCluster+3,fatfs_cache_set_next_cluster@nextCluster+3
 21608  00C856  EC1B  F01F         	call	_fatfs_cache_set_next_cluster	;wreg free
 21609  00C85A                     l10954:
 21610                           
 21611                           ;fat_filelib.c: 859: }
 21612                           ;fat_filelib.c: 861: LastCluster = Cluster;
 21613  00C85A  C0D0  F0BC         	movff	__write_sectors@Cluster,__write_sectors@LastCluster
 21614  00C85E  C0D1  F0BD         	movff	__write_sectors@Cluster+1,__write_sectors@LastCluster+1
 21615  00C862  C0D2  F0BE         	movff	__write_sectors@Cluster+2,__write_sectors@LastCluster+2
 21616  00C866  C0D3  F0BF         	movff	__write_sectors@Cluster+3,__write_sectors@LastCluster+3
 21617                           
 21618                           ;fat_filelib.c: 862: Cluster = nextCluster;
 21619  00C86A  C0C0  F0D0         	movff	__write_sectors@nextCluster,__write_sectors@Cluster
 21620  00C86E  C0C1  F0D1         	movff	__write_sectors@nextCluster+1,__write_sectors@Cluster+1
 21621  00C872  C0C2  F0D2         	movff	__write_sectors@nextCluster+2,__write_sectors@Cluster+2
 21622  00C876  C0C3  F0D3         	movff	__write_sectors@nextCluster+3,__write_sectors@Cluster+3
 21623                           
 21624                           ;fat_filelib.c: 865: if (Cluster == 0xFFFFFFFF)
 21625  00C87A  0100               	movlb	0	; () banked
 21626  00C87C  29D0               	incf	__write_sectors@Cluster& (0+255),w,b
 21627  00C87E  B4D8               	btfsc	status,2,c
 21628  00C880  29D1               	incf	(__write_sectors@Cluster+1)& (0+255),w,b
 21629  00C882  B4D8               	btfsc	status,2,c
 21630  00C884  29D2               	incf	(__write_sectors@Cluster+2)& (0+255),w,b
 21631  00C886  B4D8               	btfsc	status,2,c
 21632  00C888  29D3               	incf	(__write_sectors@Cluster+3)& (0+255),w,b
 21633  00C88A  E00F               	bz	l10964
 21634                           
 21635                           ; BSR set to: 0
 21636                           
 21637                           ; BSR set to: 0
 21638                           
 21639                           ; BSR set to: 0
 21640                           ;fat_filelib.c: 866: break;
 21641  00C88C  2BC8               	incf	__write_sectors@i& (0+255),f,b
 21642  00C88E  0E00               	movlw	0
 21643  00C890  23C9               	addwfc	(__write_sectors@i+1)& (0+255),f,b
 21644  00C892  23CA               	addwfc	(__write_sectors@i+2)& (0+255),f,b
 21645  00C894  23CB               	addwfc	(__write_sectors@i+3)& (0+255),f,b
 21646  00C896                     l588:
 21647                           
 21648                           ; BSR set to: 0
 21649  00C896  0100               	movlb	0	; () banked
 21650  00C898  51CC               	movf	__write_sectors@ClusterIdx& (0+255),w,b
 21651  00C89A  5DC8               	subwf	__write_sectors@i& (0+255),w,b
 21652  00C89C  51CD               	movf	(__write_sectors@ClusterIdx+1)& (0+255),w,b
 21653  00C89E  59C9               	subwfb	(__write_sectors@i+1)& (0+255),w,b
 21654  00C8A0  51CE               	movf	(__write_sectors@ClusterIdx+2)& (0+255),w,b
 21655  00C8A2  59CA               	subwfb	(__write_sectors@i+2)& (0+255),w,b
 21656  00C8A4  51CF               	movf	(__write_sectors@ClusterIdx+3)& (0+255),w,b
 21657  00C8A6  59CB               	subwfb	(__write_sectors@i+3)& (0+255),w,b
 21658  00C8A8  E38D               	bnc	l10948
 21659  00C8AA                     l10964:
 21660                           
 21661                           ; BSR set to: 0
 21662                           ;fat_filelib.c: 867: }
 21663                           ;fat_filelib.c: 870: if (Cluster == 0xFFFFFFFF)
 21664  00C8AA  0100               	movlb	0	; () banked
 21665  00C8AC  29D0               	incf	__write_sectors@Cluster& (0+255),w,b
 21666  00C8AE  B4D8               	btfsc	status,2,c
 21667  00C8B0  29D1               	incf	(__write_sectors@Cluster+1)& (0+255),w,b
 21668  00C8B2  B4D8               	btfsc	status,2,c
 21669  00C8B4  29D2               	incf	(__write_sectors@Cluster+2)& (0+255),w,b
 21670  00C8B6  B4D8               	btfsc	status,2,c
 21671  00C8B8  29D3               	incf	(__write_sectors@Cluster+3)& (0+255),w,b
 21672  00C8BA  E140               	bnz	l10972
 21673                           
 21674                           ; BSR set to: 0
 21675                           ;fat_filelib.c: 871: {
 21676                           ;fat_filelib.c: 873: if (!fatfs_add_free_space(&_fs, &LastCluster, (TotalWriteCount + _f
      +                          s.sectors_per_cluster -1) / _fs.sectors_per_cluster))
 21677  00C8BC  0E09               	movlw	high __fs
 21678  00C8BE  6E75               	movwf	fatfs_add_free_space@fs+1,c
 21679  00C8C0  0E78               	movlw	low __fs
 21680  00C8C2  6E74               	movwf	fatfs_add_free_space@fs,c
 21681  00C8C4  0E00               	movlw	high __write_sectors@LastCluster
 21682  00C8C6  6E77               	movwf	fatfs_add_free_space@startCluster+1,c
 21683  00C8C8  0EBC               	movlw	low __write_sectors@LastCluster
 21684  00C8CA  6E76               	movwf	fatfs_add_free_space@startCluster,c
 21685  00C8CC  C978  F0AB         	movff	__fs,??__write_sectors
 21686  00C8D0  51AB               	movf	??__write_sectors& (0+255),w,b
 21687  00C8D2  25B8               	addwf	__write_sectors@TotalWriteCount& (0+255),w,b
 21688  00C8D4  6FAC               	movwf	(??__write_sectors+1)& (0+255),b
 21689  00C8D6  0E00               	movlw	0
 21690  00C8D8  21B9               	addwfc	(__write_sectors@TotalWriteCount+1)& (0+255),w,b
 21691  00C8DA  6FAD               	movwf	(??__write_sectors+2)& (0+255),b
 21692  00C8DC  0E00               	movlw	0
 21693  00C8DE  21BA               	addwfc	(__write_sectors@TotalWriteCount+2)& (0+255),w,b
 21694  00C8E0  6FAE               	movwf	(??__write_sectors+3)& (0+255),b
 21695  00C8E2  0E00               	movlw	0
 21696  00C8E4  21BB               	addwfc	(__write_sectors@TotalWriteCount+3)& (0+255),w,b
 21697  00C8E6  6FAF               	movwf	(??__write_sectors+4)& (0+255),b
 21698  00C8E8  0EFF               	movlw	255
 21699  00C8EA  25AC               	addwf	(??__write_sectors+1)& (0+255),w,b
 21700  00C8EC  6E01               	movwf	___lldiv@dividend,c
 21701  00C8EE  0EFF               	movlw	255
 21702  00C8F0  21AD               	addwfc	(??__write_sectors+2)& (0+255),w,b
 21703  00C8F2  6E02               	movwf	___lldiv@dividend+1,c
 21704  00C8F4  0EFF               	movlw	255
 21705  00C8F6  21AE               	addwfc	(??__write_sectors+3)& (0+255),w,b
 21706  00C8F8  6E03               	movwf	___lldiv@dividend+2,c
 21707  00C8FA  0EFF               	movlw	255
 21708  00C8FC  21AF               	addwfc	(??__write_sectors+4)& (0+255),w,b
 21709  00C8FE  6E04               	movwf	___lldiv@dividend+3,c
 21710  00C900  C978  F0B0         	movff	__fs,??__write_sectors+5
 21711  00C904  51B0               	movf	(??__write_sectors+5)& (0+255),w,b
 21712  00C906  6E05               	movwf	___lldiv@divisor,c
 21713  00C908  6A06               	clrf	___lldiv@divisor+1,c
 21714  00C90A  6A07               	clrf	___lldiv@divisor+2,c
 21715  00C90C  6A08               	clrf	___lldiv@divisor+3,c
 21716  00C90E  EC7B  F026         	call	___lldiv	;wreg free
 21717  00C912  C001  F078         	movff	?___lldiv,fatfs_add_free_space@clusters
 21718  00C916  C002  F079         	movff	?___lldiv+1,fatfs_add_free_space@clusters+1
 21719  00C91A  C003  F07A         	movff	?___lldiv+2,fatfs_add_free_space@clusters+2
 21720  00C91E  C004  F07B         	movff	?___lldiv+3,fatfs_add_free_space@clusters+3
 21721  00C922  ECFE  F035         	call	_fatfs_add_free_space	;wreg free
 21722  00C926  5075               	movf	?_fatfs_add_free_space+1,w,c
 21723  00C928  1074               	iorwf	?_fatfs_add_free_space,w,c
 21724  00C92A  E070               	bz	l10982
 21725                           
 21726                           ;fat_filelib.c: 876: Cluster = LastCluster;
 21727                           
 21728                           ; BSR set to: 0
 21729                           
 21730                           ;fat_filelib.c: 874: return 0;
 21731  00C92C  C0BC  F0D0         	movff	__write_sectors@LastCluster,__write_sectors@Cluster
 21732  00C930  C0BD  F0D1         	movff	__write_sectors@LastCluster+1,__write_sectors@Cluster+1
 21733  00C934  C0BE  F0D2         	movff	__write_sectors@LastCluster+2,__write_sectors@Cluster+2
 21734  00C938  C0BF  F0D3         	movff	__write_sectors@LastCluster+3,__write_sectors@Cluster+3
 21735  00C93C                     l10972:
 21736                           
 21737                           ;fat_filelib.c: 877: }
 21738                           ;fat_filelib.c: 880: file->last_fat_lookup.CurrentCluster = Cluster;
 21739  00C93C  EE20 F035          	lfsr	2,53
 21740  00C940  0100               	movlb	0	; () banked
 21741  00C942  519E               	movf	__write_sectors@file& (0+255),w,b
 21742  00C944  26D9               	addwf	fsr2l,f,c
 21743  00C946  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21744  00C948  22DA               	addwfc	fsr2h,f,c
 21745  00C94A  C0D0  FFDE         	movff	__write_sectors@Cluster,postinc2
 21746  00C94E  C0D1  FFDE         	movff	__write_sectors@Cluster+1,postinc2
 21747  00C952  C0D2  FFDE         	movff	__write_sectors@Cluster+2,postinc2
 21748  00C956  C0D3  FFDE         	movff	__write_sectors@Cluster+3,postinc2
 21749                           
 21750                           ;fat_filelib.c: 881: file->last_fat_lookup.ClusterIdx = ClusterIdx;
 21751  00C95A  EE20 F031          	lfsr	2,49
 21752  00C95E  519E               	movf	__write_sectors@file& (0+255),w,b
 21753  00C960  26D9               	addwf	fsr2l,f,c
 21754  00C962  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21755  00C964  22DA               	addwfc	fsr2h,f,c
 21756  00C966  C0CC  FFDE         	movff	__write_sectors@ClusterIdx,postinc2
 21757  00C96A  C0CD  FFDE         	movff	__write_sectors@ClusterIdx+1,postinc2
 21758  00C96E  C0CE  FFDE         	movff	__write_sectors@ClusterIdx+2,postinc2
 21759  00C972  C0CF  FFDE         	movff	__write_sectors@ClusterIdx+3,postinc2
 21760  00C976                     l10974:
 21761                           
 21762                           ; BSR set to: 0
 21763                           ;fat_filelib.c: 882: }
 21764                           ;fat_filelib.c: 885: lba = fatfs_lba_of_cluster(&_fs, Cluster) + SectorNumber;
 21765  00C976  0E09               	movlw	high __fs
 21766  00C978  6E02               	movwf	fatfs_lba_of_cluster@fs+1,c
 21767  00C97A  0E78               	movlw	low __fs
 21768  00C97C  6E01               	movwf	fatfs_lba_of_cluster@fs,c
 21769  00C97E  C0D0  F003         	movff	__write_sectors@Cluster,fatfs_lba_of_cluster@Cluster_Number
 21770  00C982  C0D1  F004         	movff	__write_sectors@Cluster+1,fatfs_lba_of_cluster@Cluster_Number+1
 21771  00C986  C0D2  F005         	movff	__write_sectors@Cluster+2,fatfs_lba_of_cluster@Cluster_Number+2
 21772  00C98A  C0D3  F006         	movff	__write_sectors@Cluster+3,fatfs_lba_of_cluster@Cluster_Number+3
 21773  00C98E  EC4C  F03E         	call	_fatfs_lba_of_cluster	;wreg free
 21774  00C992  C001  F0AB         	movff	?_fatfs_lba_of_cluster,??__write_sectors
 21775  00C996  C002  F0AC         	movff	?_fatfs_lba_of_cluster+1,??__write_sectors+1
 21776  00C99A  C003  F0AD         	movff	?_fatfs_lba_of_cluster+2,??__write_sectors+2
 21777  00C99E  C004  F0AE         	movff	?_fatfs_lba_of_cluster+3,??__write_sectors+3
 21778  00C9A2  0100               	movlb	0	; () banked
 21779  00C9A4  51C4               	movf	__write_sectors@SectorNumber& (0+255),w,b
 21780  00C9A6  25AB               	addwf	??__write_sectors& (0+255),w,b
 21781  00C9A8  6FB4               	movwf	__write_sectors@lba& (0+255),b
 21782  00C9AA  51C5               	movf	(__write_sectors@SectorNumber+1)& (0+255),w,b
 21783  00C9AC  21AC               	addwfc	(??__write_sectors+1)& (0+255),w,b
 21784  00C9AE  6FB5               	movwf	(__write_sectors@lba+1)& (0+255),b
 21785  00C9B0  51C6               	movf	(__write_sectors@SectorNumber+2)& (0+255),w,b
 21786  00C9B2  21AD               	addwfc	(??__write_sectors+2)& (0+255),w,b
 21787  00C9B4  6FB6               	movwf	(__write_sectors@lba+2)& (0+255),b
 21788  00C9B6  51C7               	movf	(__write_sectors@SectorNumber+3)& (0+255),w,b
 21789  00C9B8  21AE               	addwfc	(??__write_sectors+3)& (0+255),w,b
 21790  00C9BA  6FB7               	movwf	(__write_sectors@lba+3)& (0+255),b
 21791                           
 21792                           ; BSR set to: 0
 21793                           ;fat_filelib.c: 887: if (fatfs_sector_write(&_fs, lba, buf, count))
 21794  00C9BC  0E09               	movlw	high __fs
 21795  00C9BE  6E21               	movwf	fatfs_sector_write@fs+1,c
 21796  00C9C0  0E78               	movlw	low __fs
 21797  00C9C2  6E20               	movwf	fatfs_sector_write@fs,c
 21798  00C9C4  C0B4  F022         	movff	__write_sectors@lba,fatfs_sector_write@lba
 21799  00C9C8  C0B5  F023         	movff	__write_sectors@lba+1,fatfs_sector_write@lba+1
 21800  00C9CC  C0B6  F024         	movff	__write_sectors@lba+2,fatfs_sector_write@lba+2
 21801  00C9D0  C0B7  F025         	movff	__write_sectors@lba+3,fatfs_sector_write@lba+3
 21802  00C9D4  C0A6  F028         	movff	__write_sectors@buf+2,fatfs_sector_write@target+2
 21803  00C9D8  C0A5  F027         	movff	__write_sectors@buf+1,fatfs_sector_write@target+1
 21804  00C9DC  C0A4  F026         	movff	__write_sectors@buf,fatfs_sector_write@target
 21805  00C9E0  C0A7  F029         	movff	__write_sectors@count,fatfs_sector_write@count
 21806  00C9E4  C0A8  F02A         	movff	__write_sectors@count+1,fatfs_sector_write@count+1
 21807  00C9E8  C0A9  F02B         	movff	__write_sectors@count+2,fatfs_sector_write@count+2
 21808  00C9EC  C0AA  F02C         	movff	__write_sectors@count+3,fatfs_sector_write@count+3
 21809  00C9F0  EC03  F024         	call	_fatfs_sector_write	;wreg free
 21810  00C9F4  5021               	movf	?_fatfs_sector_write+1,w,c
 21811  00C9F6  1020               	iorwf	?_fatfs_sector_write,w,c
 21812  00C9F8  E009               	bz	l10982
 21813                           
 21814                           ;fat_filelib.c: 888: return count;
 21815  00C9FA  C0A7  F09E         	movff	__write_sectors@count,?__write_sectors
 21816  00C9FE  C0A8  F09F         	movff	__write_sectors@count+1,?__write_sectors+1
 21817  00CA02  C0A9  F0A0         	movff	__write_sectors@count+2,?__write_sectors+2
 21818  00CA06  C0AA  F0A1         	movff	__write_sectors@count+3,?__write_sectors+3
 21819  00CA0A  D006               	goto	l595
 21820  00CA0C                     l10982:
 21821                           
 21822                           ;fat_filelib.c: 889: else
 21823                           ;fat_filelib.c: 890: return 0;
 21824  00CA0C  0E00               	movlw	0
 21825  00CA0E  0100               	movlb	0	; () banked
 21826  00CA10  6F9E               	movwf	?__write_sectors& (0+255),b
 21827  00CA12  6F9F               	movwf	(?__write_sectors+1)& (0+255),b
 21828  00CA14  6FA0               	movwf	(?__write_sectors+2)& (0+255),b
 21829  00CA16  6FA1               	movwf	(?__write_sectors+3)& (0+255),b
 21830  00CA18                     l595:
 21831  00CA18  0012               	return	
 21832  00CA1A                     __end_of__write_sectors:
 21833                           	opt stack 0
 21834                           tosu	equ	0xFFF
 21835                           tosh	equ	0xFFE
 21836                           tosl	equ	0xFFD
 21837                           pclath	equ	0xFFA
 21838                           tblptru	equ	0xFF8
 21839                           tblptrh	equ	0xFF7
 21840                           tblptrl	equ	0xFF6
 21841                           tablat	equ	0xFF5
 21842                           prodh	equ	0xFF4
 21843                           prodl	equ	0xFF3
 21844                           indf0	equ	0xFEF
 21845                           postinc0	equ	0xFEE
 21846                           fsr0h	equ	0xFEA
 21847                           fsr0l	equ	0xFE9
 21848                           wreg	equ	0xFE8
 21849                           indf1	equ	0xFE7
 21850                           postinc1	equ	0xFE6
 21851                           postdec1	equ	0xFE5
 21852                           fsr1h	equ	0xFE2
 21853                           fsr1l	equ	0xFE1
 21854                           indf2	equ	0xFDF
 21855                           postinc2	equ	0xFDE
 21856                           postdec2	equ	0xFDD
 21857                           fsr2h	equ	0xFDA
 21858                           fsr2l	equ	0xFD9
 21859                           status	equ	0xFD8
 21860                           
 21861 ;; *************** function _fatfs_sector_write *****************
 21862 ;; Defined at:
 21863 ;;		line 211 in file "fat_access.c"
 21864 ;; Parameters:    Size  Location     Type
 21865 ;;  fs              2   31[COMRAM] PTR struct fatfs
 21866 ;;		 -> _fs(1095), 
 21867 ;;  lba             4   33[COMRAM] unsigned long 
 21868 ;;  target          3   37[COMRAM] PTR unsigned char 
 21869 ;;		 -> w(1), str_0(26), data(1), fl_fputc@data(1), 
 21870 ;;		 -> ROM(65535), RAM(3967), NULL(0), 
 21871 ;;  count           4   40[COMRAM] unsigned long 
 21872 ;; Auto vars:     Size  Location     Type
 21873 ;;		None
 21874 ;; Return value:  Size  Location     Type
 21875 ;;                  2   31[COMRAM] int 
 21876 ;; Registers used:
 21877 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 21878 ;; Tracked objects:
 21879 ;;		On entry : 0/0
 21880 ;;		On exit  : 0/0
 21881 ;;		Unchanged: 0/0
 21882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21883 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21886 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21887 ;;Total ram usage:       15 bytes
 21888 ;; Hardware stack levels used:    1
 21889 ;; Hardware stack levels required when called:    3
 21890 ;; This function calls:
 21891 ;;		_media_write
 21892 ;; This function is called by:
 21893 ;;		__write_sectors
 21894 ;; This function uses a non-reentrant model
 21895 ;;
 21896                           
 21897                           	psect	text55
 21898  004806                     __ptext55:
 21899                           	opt stack 0
 21900  004806                     _fatfs_sector_write:
 21901                           	opt stack 22
 21902                           
 21903                           ;fat_access.c: 213: return fs->disk_io.write_media(lba, target, count);
 21904                           
 21905                           ;incstack = 0
 21906  004806  C022  F009         	movff	fatfs_sector_write@lba,media_write@sector
 21907  00480A  C023  F00A         	movff	fatfs_sector_write@lba+1,media_write@sector+1
 21908  00480E  C024  F00B         	movff	fatfs_sector_write@lba+2,media_write@sector+2
 21909  004812  C025  F00C         	movff	fatfs_sector_write@lba+3,media_write@sector+3
 21910  004816  C028  F00F         	movff	fatfs_sector_write@target+2,media_write@buffer+2
 21911  00481A  C027  F00E         	movff	fatfs_sector_write@target+1,media_write@buffer+1
 21912  00481E  C026  F00D         	movff	fatfs_sector_write@target,media_write@buffer
 21913  004822  C029  F010         	movff	fatfs_sector_write@count,media_write@sector_count
 21914  004826  C02A  F011         	movff	fatfs_sector_write@count+1,media_write@sector_count+1
 21915  00482A  C02B  F012         	movff	fatfs_sector_write@count+2,media_write@sector_count+2
 21916  00482E  C02C  F013         	movff	fatfs_sector_write@count+3,media_write@sector_count+3
 21917  004832  EE20 F02B          	lfsr	2,43
 21918  004836  5020               	movf	fatfs_sector_write@fs,w,c
 21919  004838  26D9               	addwf	fsr2l,f,c
 21920  00483A  5021               	movf	fatfs_sector_write@fs+1,w,c
 21921  00483C  22DA               	addwfc	fsr2h,f,c
 21922  00483E  CFDE F02D          	movff	postinc2,??_fatfs_sector_write
 21923  004842  CFDD F02E          	movff	postdec2,??_fatfs_sector_write+1
 21924  004846  D801               	call	u10558
 21925  004848  D009               	goto	u10559
 21926  00484A                     u10558:
 21927  00484A  0005               	push	
 21928  00484C  6EFA               	movwf	pclath,c
 21929  00484E  502D               	movf	??_fatfs_sector_write,w,c
 21930  004850  6EFD               	movwf	tosl,c
 21931  004852  502E               	movf	??_fatfs_sector_write+1,w,c
 21932  004854  6EFE               	movwf	tosh,c
 21933  004856  6AFF               	clrf	tosu,c
 21934  004858  50FA               	movf	pclath,w,c
 21935  00485A  0012               	return		;indir
 21936  00485C                     u10559:
 21937  00485C  C009  F020         	movff	?_media_write,?_fatfs_sector_write
 21938  004860  C00A  F021         	movff	?_media_write+1,?_fatfs_sector_write+1
 21939  004864  0012               	return	
 21940  004866                     __end_of_fatfs_sector_write:
 21941                           	opt stack 0
 21942                           tosu	equ	0xFFF
 21943                           tosh	equ	0xFFE
 21944                           tosl	equ	0xFFD
 21945                           pclath	equ	0xFFA
 21946                           tblptru	equ	0xFF8
 21947                           tblptrh	equ	0xFF7
 21948                           tblptrl	equ	0xFF6
 21949                           tablat	equ	0xFF5
 21950                           prodh	equ	0xFF4
 21951                           prodl	equ	0xFF3
 21952                           indf0	equ	0xFEF
 21953                           postinc0	equ	0xFEE
 21954                           fsr0h	equ	0xFEA
 21955                           fsr0l	equ	0xFE9
 21956                           wreg	equ	0xFE8
 21957                           indf1	equ	0xFE7
 21958                           postinc1	equ	0xFE6
 21959                           postdec1	equ	0xFE5
 21960                           fsr1h	equ	0xFE2
 21961                           fsr1l	equ	0xFE1
 21962                           indf2	equ	0xFDF
 21963                           postinc2	equ	0xFDE
 21964                           postdec2	equ	0xFDD
 21965                           fsr2h	equ	0xFDA
 21966                           fsr2l	equ	0xFD9
 21967                           status	equ	0xFD8
 21968                           
 21969 ;; *************** function _fatfs_cache_set_next_cluster *****************
 21970 ;; Defined at:
 21971 ;;		line 76 in file "fat_cache.c"
 21972 ;; Parameters:    Size  Location     Type
 21973 ;;  fs              2    0[COMRAM] PTR struct fatfs
 21974 ;;		 -> _fs(1095), 
 21975 ;;  file            2    2[COMRAM] PTR struct sFL_FILE
 21976 ;;		 -> RAM(3967), NULL(0), 
 21977 ;;  clusterIdx      4    4[COMRAM] unsigned long 
 21978 ;;  nextCluster     4    8[COMRAM] unsigned long 
 21979 ;; Auto vars:     Size  Location     Type
 21980 ;;		None
 21981 ;; Return value:  Size  Location     Type
 21982 ;;                  2    0[COMRAM] int 
 21983 ;; Registers used:
 21984 ;;		None
 21985 ;; Tracked objects:
 21986 ;;		On entry : 0/0
 21987 ;;		On exit  : 0/0
 21988 ;;		Unchanged: 0/0
 21989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21990 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21993 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21994 ;;Total ram usage:       12 bytes
 21995 ;; Hardware stack levels used:    1
 21996 ;; This function calls:
 21997 ;;		Nothing
 21998 ;; This function is called by:
 21999 ;;		__read_sectors
 22000 ;;		__write_sectors
 22001 ;; This function uses a non-reentrant model
 22002 ;;
 22003                           
 22004                           	psect	text56
 22005  003E36                     __ptext56:
 22006                           	opt stack 0
 22007  003E36                     _fatfs_cache_set_next_cluster:
 22008                           	opt stack 25
 22009                           
 22010                           ;fat_cache.c: 90: return 1;
 22011                           ;	Return value of _fatfs_cache_set_next_cluster is never used
 22012                           
 22013                           ;incstack = 0
 22014  003E36  0012               	return	
 22015  003E38                     __end_of_fatfs_cache_set_next_cluster:
 22016                           	opt stack 0
 22017                           tosu	equ	0xFFF
 22018                           tosh	equ	0xFFE
 22019                           tosl	equ	0xFFD
 22020                           pclath	equ	0xFFA
 22021                           tblptru	equ	0xFF8
 22022                           tblptrh	equ	0xFF7
 22023                           tblptrl	equ	0xFF6
 22024                           tablat	equ	0xFF5
 22025                           prodh	equ	0xFF4
 22026                           prodl	equ	0xFF3
 22027                           indf0	equ	0xFEF
 22028                           postinc0	equ	0xFEE
 22029                           fsr0h	equ	0xFEA
 22030                           fsr0l	equ	0xFE9
 22031                           wreg	equ	0xFE8
 22032                           indf1	equ	0xFE7
 22033                           postinc1	equ	0xFE6
 22034                           postdec1	equ	0xFE5
 22035                           fsr1h	equ	0xFE2
 22036                           fsr1l	equ	0xFE1
 22037                           indf2	equ	0xFDF
 22038                           postinc2	equ	0xFDE
 22039                           postdec2	equ	0xFDD
 22040                           fsr2h	equ	0xFDA
 22041                           fsr2l	equ	0xFD9
 22042                           status	equ	0xFD8
 22043                           
 22044 ;; *************** function _fatfs_cache_get_next_cluster *****************
 22045 ;; Defined at:
 22046 ;;		line 59 in file "fat_cache.c"
 22047 ;; Parameters:    Size  Location     Type
 22048 ;;  fs              2    0[COMRAM] PTR struct fatfs
 22049 ;;		 -> _fs(1095), 
 22050 ;;  file            2    2[COMRAM] PTR struct sFL_FILE
 22051 ;;		 -> RAM(3967), NULL(0), 
 22052 ;;  clusterIdx      4    4[COMRAM] unsigned long 
 22053 ;;  pNextCluster    2    8[COMRAM] PTR unsigned long 
 22054 ;;		 -> _write_sectors@nextCluster(4), _read_sectors@nextCluster(4), 
 22055 ;; Auto vars:     Size  Location     Type
 22056 ;;		None
 22057 ;; Return value:  Size  Location     Type
 22058 ;;                  2    0[COMRAM] int 
 22059 ;; Registers used:
 22060 ;;		wreg, status,2
 22061 ;; Tracked objects:
 22062 ;;		On entry : 0/0
 22063 ;;		On exit  : 0/0
 22064 ;;		Unchanged: 0/0
 22065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22066 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22069 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22070 ;;Total ram usage:       10 bytes
 22071 ;; Hardware stack levels used:    1
 22072 ;; This function calls:
 22073 ;;		Nothing
 22074 ;; This function is called by:
 22075 ;;		__read_sectors
 22076 ;;		__write_sectors
 22077 ;; This function uses a non-reentrant model
 22078 ;;
 22079                           
 22080                           	psect	text57
 22081  003E44                     __ptext57:
 22082                           	opt stack 0
 22083  003E44                     _fatfs_cache_get_next_cluster:
 22084                           	opt stack 25
 22085                           
 22086                           ;fat_cache.c: 71: return 0;
 22087                           
 22088                           ;incstack = 0
 22089  003E44  0E00               	movlw	0
 22090  003E46  6E02               	movwf	?_fatfs_cache_get_next_cluster+1,c
 22091  003E48  6E01               	movwf	?_fatfs_cache_get_next_cluster,c
 22092  003E4A  0C00               	retlw	0
 22093  003E4C                     __end_of_fatfs_cache_get_next_cluster:
 22094                           	opt stack 0
 22095                           tosu	equ	0xFFF
 22096                           tosh	equ	0xFFE
 22097                           tosl	equ	0xFFD
 22098                           pclath	equ	0xFFA
 22099                           tblptru	equ	0xFF8
 22100                           tblptrh	equ	0xFF7
 22101                           tblptrl	equ	0xFF6
 22102                           tablat	equ	0xFF5
 22103                           prodh	equ	0xFF4
 22104                           prodl	equ	0xFF3
 22105                           indf0	equ	0xFEF
 22106                           postinc0	equ	0xFEE
 22107                           fsr0h	equ	0xFEA
 22108                           fsr0l	equ	0xFE9
 22109                           wreg	equ	0xFE8
 22110                           indf1	equ	0xFE7
 22111                           postinc1	equ	0xFE6
 22112                           postdec1	equ	0xFE5
 22113                           fsr1h	equ	0xFE2
 22114                           fsr1l	equ	0xFE1
 22115                           indf2	equ	0xFDF
 22116                           postinc2	equ	0xFDE
 22117                           postdec2	equ	0xFDD
 22118                           fsr2h	equ	0xFDA
 22119                           fsr2l	equ	0xFD9
 22120                           status	equ	0xFD8
 22121                           
 22122 ;; *************** function _fatfs_update_file_length *****************
 22123 ;; Defined at:
 22124 ;;		line 615 in file "fat_access.c"
 22125 ;; Parameters:    Size  Location     Type
 22126 ;;  fs              2   44[BANK0 ] PTR struct fatfs
 22127 ;;		 -> _fs(1095), 
 22128 ;;  Cluster         4   46[BANK0 ] unsigned long 
 22129 ;;  shortname       2   50[BANK0 ] PTR unsigned char 
 22130 ;;		 -> RAM(3967), NULL(0), 
 22131 ;;  fileLength      4   52[BANK0 ] unsigned long 
 22132 ;; Auto vars:     Size  Location     Type
 22133 ;;  directoryEnt    2   65[BANK0 ] PTR struct fat_dir_entry
 22134 ;;		 -> _fs.currentsector.sector(512), 
 22135 ;;  recordoffset    2   62[BANK0 ] unsigned short 
 22136 ;;  x               2   60[BANK0 ] int 
 22137 ;;  item            1   64[BANK0 ] unsigned char 
 22138 ;; Return value:  Size  Location     Type
 22139 ;;                  2   44[BANK0 ] int 
 22140 ;; Registers used:
 22141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22142 ;; Tracked objects:
 22143 ;;		On entry : 0/0
 22144 ;;		On exit  : 0/0
 22145 ;;		Unchanged: 0/0
 22146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22147 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22148 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22149 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22150 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22151 ;;Total ram usage:       23 bytes
 22152 ;; Hardware stack levels used:    1
 22153 ;; Hardware stack levels required when called:    7
 22154 ;; This function calls:
 22155 ;;		_fatfs_entry_lfn_invalid
 22156 ;;		_fatfs_entry_lfn_text
 22157 ;;		_fatfs_entry_sfn_only
 22158 ;;		_fatfs_sector_reader
 22159 ;;		_media_write
 22160 ;;		_memcpy
 22161 ;;		_strncmp
 22162 ;; This function is called by:
 22163 ;;		_fl_fclose
 22164 ;; This function uses a non-reentrant model
 22165 ;;
 22166                           
 22167                           	psect	text58
 22168  007562                     __ptext58:
 22169                           	opt stack 0
 22170  007562                     _fatfs_update_file_length:
 22171                           	opt stack 20
 22172                           
 22173                           ;fat_access.c: 617: uint8 item=0;
 22174                           
 22175                           ;incstack = 0
 22176  007562  0100               	movlb	0	; () banked
 22177  007564  6BC0               	clrf	fatfs_update_file_length@item& (0+255),b
 22178                           
 22179                           ;fat_access.c: 618: uint16 recordoffset = 0;
 22180  007566  6BBF               	clrf	(fatfs_update_file_length@recordoffset+1)& (0+255),b
 22181  007568  6BBE               	clrf	fatfs_update_file_length@recordoffset& (0+255),b
 22182                           
 22183                           ;fat_access.c: 619: int x=0;
 22184  00756A  6BBD               	clrf	(fatfs_update_file_length@x+1)& (0+255),b
 22185  00756C  6BBC               	clrf	fatfs_update_file_length@x& (0+255),b
 22186                           
 22187                           ; BSR set to: 0
 22188                           ;fat_access.c: 620: struct fat_dir_entry *directoryEntry;
 22189                           ;fat_access.c: 623: if (!fs->disk_io.write_media)
 22190  00756E  EE20 F02B          	lfsr	2,43
 22191  007572  51AC               	movf	fatfs_update_file_length@fs& (0+255),w,b
 22192  007574  26D9               	addwf	fsr2l,f,c
 22193  007576  51AD               	movf	(fatfs_update_file_length@fs+1)& (0+255),w,b
 22194  007578  22DA               	addwfc	fsr2h,f,c
 22195  00757A  50DE               	movf	postinc2,w,c
 22196  00757C  10DD               	iorwf	postdec2,w,c
 22197  00757E  E101 D0D2          	bz	l179
 22198  007582                     l11084:
 22199                           
 22200                           ; BSR set to: 0
 22201                           ;fat_access.c: 628: {
 22202                           ;fat_access.c: 630: if (fatfs_sector_reader(fs, Cluster, x++, 0))
 22203  007582  C0AD  F081         	movff	fatfs_update_file_length@fs+1,fatfs_sector_reader@fs+1
 22204  007586  C0AC  F080         	movff	fatfs_update_file_length@fs,fatfs_sector_reader@fs
 22205  00758A  C0AE  F082         	movff	fatfs_update_file_length@Cluster,fatfs_sector_reader@start_cluster
 22206  00758E  C0AF  F083         	movff	fatfs_update_file_length@Cluster+1,fatfs_sector_reader@start_cluster+1
 22207  007592  C0B0  F084         	movff	fatfs_update_file_length@Cluster+2,fatfs_sector_reader@start_cluster+2
 22208  007596  C0B1  F085         	movff	fatfs_update_file_length@Cluster+3,fatfs_sector_reader@start_cluster+3
 22209  00759A  0100               	movlb	0	; () banked
 22210  00759C  51BC               	movf	fatfs_update_file_length@x& (0+255),w,b
 22211  00759E  6FB8               	movwf	??_fatfs_update_file_length& (0+255),b
 22212  0075A0  51BD               	movf	(fatfs_update_file_length@x+1)& (0+255),w,b
 22213  0075A2  6FB9               	movwf	(??_fatfs_update_file_length+1)& (0+255),b
 22214  0075A4  4BBC               	infsnz	fatfs_update_file_length@x& (0+255),f,b
 22215  0075A6  2BBD               	incf	(fatfs_update_file_length@x+1)& (0+255),f,b
 22216  0075A8  C0B8  F086         	movff	??_fatfs_update_file_length,fatfs_sector_reader@offset
 22217  0075AC  C0B9  F087         	movff	??_fatfs_update_file_length+1,fatfs_sector_reader@offset+1
 22218  0075B0  0E00               	movlw	0
 22219  0075B2  BF87               	btfsc	(fatfs_sector_reader@offset+1)& (0+255),7,b
 22220  0075B4  0EFF               	movlw	-1
 22221  0075B6  6F88               	movwf	(fatfs_sector_reader@offset+2)& (0+255),b
 22222  0075B8  6F89               	movwf	(fatfs_sector_reader@offset+3)& (0+255),b
 22223  0075BA  0E00               	movlw	0
 22224  0075BC  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
 22225  0075BE  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
 22226  0075C0  ECD5  F052         	call	_fatfs_sector_reader	;wreg free
 22227  0075C4  0100               	movlb	0	; () banked
 22228  0075C6  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
 22229  0075C8  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
 22230  0075CA  E101 D0AC          	bz	l179
 22231                           
 22232                           ; BSR set to: 0
 22233                           ;fat_access.c: 631: {
 22234                           ;fat_access.c: 633: for (item = 0; item < (512 / 32); item++)
 22235  0075CE  6BC0               	clrf	fatfs_update_file_length@item& (0+255),b
 22236                           
 22237                           ; BSR set to: 0
 22238  0075D0  0E0F               	movlw	15
 22239  0075D2  65C0               	cpfsgt	fatfs_update_file_length@item& (0+255),b
 22240  0075D4  D001               	goto	l11092
 22241  0075D6  D7D5               	goto	l11084
 22242  0075D8                     l11092:
 22243                           
 22244                           ; BSR set to: 0
 22245                           ;fat_access.c: 634: {
 22246                           ;fat_access.c: 636: recordoffset = 32 * item;
 22247  0075D8  0100               	movlb	0	; () banked
 22248  0075DA  51C0               	movf	fatfs_update_file_length@item& (0+255),w,b
 22249  0075DC  0D20               	mullw	32
 22250  0075DE  CFF3 F0BE          	movff	prodl,fatfs_update_file_length@recordoffset
 22251  0075E2  CFF4 F0BF          	movff	prodh,fatfs_update_file_length@recordoffset+1
 22252                           
 22253                           ; BSR set to: 0
 22254                           ;fat_access.c: 639: directoryEntry = (struct fat_dir_entry*)(fs->currentsector.sector+re
      +                          cordoffset);
 22255  0075E6  C0AC  F0B8         	movff	fatfs_update_file_length@fs,??_fatfs_update_file_length
 22256  0075EA  C0AD  F0B9         	movff	fatfs_update_file_length@fs+1,??_fatfs_update_file_length+1
 22257  0075EE  51BE               	movf	fatfs_update_file_length@recordoffset& (0+255),w,b
 22258  0075F0  27B8               	addwf	??_fatfs_update_file_length& (0+255),f,b
 22259  0075F2  51BF               	movf	(fatfs_update_file_length@recordoffset+1)& (0+255),w,b
 22260  0075F4  23B9               	addwfc	(??_fatfs_update_file_length+1)& (0+255),f,b
 22261  0075F6  0E31               	movlw	49
 22262  0075F8  25B8               	addwf	??_fatfs_update_file_length& (0+255),w,b
 22263  0075FA  6FC1               	movwf	fatfs_update_file_length@directoryEntry& (0+255),b
 22264  0075FC  0E00               	movlw	0
 22265  0075FE  21B9               	addwfc	(??_fatfs_update_file_length+1)& (0+255),w,b
 22266  007600  6FC2               	movwf	(fatfs_update_file_length@directoryEntry+1)& (0+255),b
 22267                           
 22268                           ; BSR set to: 0
 22269                           ;fat_access.c: 643: if (fatfs_entry_lfn_text(directoryEntry) )
 22270  007602  C0C2  F002         	movff	fatfs_update_file_length@directoryEntry+1,fatfs_entry_lfn_text@entry+1
 22271  007606  C0C1  F001         	movff	fatfs_update_file_length@directoryEntry,fatfs_entry_lfn_text@entry
 22272  00760A  ECF0  F01F         	call	_fatfs_entry_lfn_text	;wreg free
 22273  00760E  5002               	movf	?_fatfs_entry_lfn_text+1,w,c
 22274  007610  1001               	iorwf	?_fatfs_entry_lfn_text,w,c
 22275  007612  E001 D082          	bnz	l11116
 22276                           
 22277                           ;fat_access.c: 647: else if (fatfs_entry_lfn_invalid(directoryEntry) )
 22278                           
 22279                           ;fat_access.c: 644: ;
 22280  007616  C0C2  F002         	movff	fatfs_update_file_length@directoryEntry+1,fatfs_entry_lfn_invalid@entry+1
 22281  00761A  0100               	movlb	0	; () banked
 22282  00761C  C0C1  F001         	movff	fatfs_update_file_length@directoryEntry,fatfs_entry_lfn_invalid@entry
 22283  007620  EC9A  F022         	call	_fatfs_entry_lfn_invalid	;wreg free
 22284  007624  5002               	movf	?_fatfs_entry_lfn_invalid+1,w,c
 22285  007626  1001               	iorwf	?_fatfs_entry_lfn_invalid,w,c
 22286  007628  E178               	bnz	l11116
 22287                           
 22288                           ;fat_access.c: 651: else
 22289                           ;fat_access.c: 653: if (fatfs_entry_sfn_only(directoryEntry) )
 22290                           
 22291                           ;fat_access.c: 648: ;
 22292  00762A  C0C2  F002         	movff	fatfs_update_file_length@directoryEntry+1,fatfs_entry_sfn_only@entry+1
 22293  00762E  0100               	movlb	0	; () banked
 22294  007630  C0C1  F001         	movff	fatfs_update_file_length@directoryEntry,fatfs_entry_sfn_only@entry
 22295  007634  ECC6  F024         	call	_fatfs_entry_sfn_only	;wreg free
 22296  007638  5002               	movf	?_fatfs_entry_sfn_only+1,w,c
 22297  00763A  1001               	iorwf	?_fatfs_entry_sfn_only,w,c
 22298  00763C  E06E               	bz	l11116
 22299                           
 22300                           ;fat_access.c: 654: {
 22301                           ;fat_access.c: 655: if (strncmp((const char*)directoryEntry->Name, shortname, 11)==0)
 22302  00763E  C0C2  F002         	movff	fatfs_update_file_length@directoryEntry+1,strncmp@s1+1
 22303  007642  C0C1  F001         	movff	fatfs_update_file_length@directoryEntry,strncmp@s1
 22304  007646  C0B3  F004         	movff	fatfs_update_file_length@shortname+1,strncmp@s2+1
 22305  00764A  0100               	movlb	0	; () banked
 22306  00764C  C0B2  F003         	movff	fatfs_update_file_length@shortname,strncmp@s2
 22307  007650  6A06               	clrf	strncmp@len+1,c
 22308  007652  0E0B               	movlw	11
 22309  007654  6E05               	movwf	strncmp@len,c
 22310  007656  EC07  F026         	call	_strncmp	;wreg free
 22311  00765A  5002               	movf	?_strncmp+1,w,c
 22312  00765C  1001               	iorwf	?_strncmp,w,c
 22313  00765E  E15D               	bnz	l11116
 22314                           
 22315                           ;fat_access.c: 656: {
 22316                           ;fat_access.c: 657: directoryEntry->FileSize = (fileLength);
 22317  007660  EE20 F01C          	lfsr	2,28
 22318  007664  0100               	movlb	0	; () banked
 22319  007666  51C1               	movf	fatfs_update_file_length@directoryEntry& (0+255),w,b
 22320  007668  26D9               	addwf	fsr2l,f,c
 22321  00766A  51C2               	movf	(fatfs_update_file_length@directoryEntry+1)& (0+255),w,b
 22322  00766C  22DA               	addwfc	fsr2h,f,c
 22323  00766E  C0B4  FFDE         	movff	fatfs_update_file_length@fileLength,postinc2
 22324  007672  C0B5  FFDE         	movff	fatfs_update_file_length@fileLength+1,postinc2
 22325  007676  C0B6  FFDE         	movff	fatfs_update_file_length@fileLength+2,postinc2
 22326  00767A  C0B7  FFDE         	movff	fatfs_update_file_length@fileLength+3,postinc2
 22327                           
 22328                           ; BSR set to: 0
 22329                           ;fat_access.c: 665: memcpy((uint8*)(fs->currentsector.sector+recordoffset), (uint8*)dire
      +                          ctoryEntry, sizeof(struct fat_dir_entry));
 22330  00767E  C0AC  F0B8         	movff	fatfs_update_file_length@fs,??_fatfs_update_file_length
 22331  007682  C0AD  F0B9         	movff	fatfs_update_file_length@fs+1,??_fatfs_update_file_length+1
 22332  007686  51BE               	movf	fatfs_update_file_length@recordoffset& (0+255),w,b
 22333  007688  27B8               	addwf	??_fatfs_update_file_length& (0+255),f,b
 22334  00768A  51BF               	movf	(fatfs_update_file_length@recordoffset+1)& (0+255),w,b
 22335  00768C  23B9               	addwfc	(??_fatfs_update_file_length+1)& (0+255),f,b
 22336  00768E  0E31               	movlw	49
 22337  007690  25B8               	addwf	??_fatfs_update_file_length& (0+255),w,b
 22338  007692  6E01               	movwf	memcpy@d1,c
 22339  007694  0E00               	movlw	0
 22340  007696  21B9               	addwfc	(??_fatfs_update_file_length+1)& (0+255),w,b
 22341  007698  6E02               	movwf	memcpy@d1+1,c
 22342  00769A  0E20               	movlw	32
 22343  00769C  6E05               	movwf	memcpy@s1+2,c
 22344  00769E  C0C2  F004         	movff	fatfs_update_file_length@directoryEntry+1,memcpy@s1+1
 22345  0076A2  C0C1  F003         	movff	fatfs_update_file_length@directoryEntry,memcpy@s1
 22346  0076A6  6A07               	clrf	memcpy@n+1,c
 22347  0076A8  6E06               	movwf	memcpy@n,c
 22348  0076AA  ECA4  F023         	call	_memcpy	;wreg free
 22349                           
 22350                           ;fat_access.c: 668: return fs->disk_io.write_media(fs->currentsector.address, fs->curren
      +                          tsector.sector, 1);
 22351                           ;	Return value of _fatfs_update_file_length is never used
 22352  0076AE  EE22 F031          	lfsr	2,561
 22353  0076B2  0100               	movlb	0	; () banked
 22354  0076B4  51AC               	movf	fatfs_update_file_length@fs& (0+255),w,b
 22355  0076B6  26D9               	addwf	fsr2l,f,c
 22356  0076B8  51AD               	movf	(fatfs_update_file_length@fs+1)& (0+255),w,b
 22357  0076BA  22DA               	addwfc	fsr2h,f,c
 22358  0076BC  CFDE F009          	movff	postinc2,media_write@sector
 22359  0076C0  CFDE F00A          	movff	postinc2,media_write@sector+1
 22360  0076C4  CFDE F00B          	movff	postinc2,media_write@sector+2
 22361  0076C8  CFDE F00C          	movff	postinc2,media_write@sector+3
 22362  0076CC  0E31               	movlw	49
 22363  0076CE  25AC               	addwf	fatfs_update_file_length@fs& (0+255),w,b
 22364  0076D0  6FB8               	movwf	??_fatfs_update_file_length& (0+255),b
 22365  0076D2  0E00               	movlw	0
 22366  0076D4  21AD               	addwfc	(fatfs_update_file_length@fs+1)& (0+255),w,b
 22367  0076D6  6FB9               	movwf	(??_fatfs_update_file_length+1)& (0+255),b
 22368  0076D8  0E20               	movlw	32
 22369  0076DA  6E0F               	movwf	media_write@buffer+2,c
 22370  0076DC  C0B9  F00E         	movff	??_fatfs_update_file_length+1,media_write@buffer+1
 22371  0076E0  C0B8  F00D         	movff	??_fatfs_update_file_length,media_write@buffer
 22372  0076E4  0E01               	movlw	1
 22373  0076E6  6E10               	movwf	media_write@sector_count,c
 22374  0076E8  6A11               	clrf	media_write@sector_count+1,c
 22375  0076EA  6A12               	clrf	media_write@sector_count+2,c
 22376  0076EC  6A13               	clrf	media_write@sector_count+3,c
 22377  0076EE  EE20 F02B          	lfsr	2,43
 22378  0076F2  51AC               	movf	fatfs_update_file_length@fs& (0+255),w,b
 22379  0076F4  26D9               	addwf	fsr2l,f,c
 22380  0076F6  51AD               	movf	(fatfs_update_file_length@fs+1)& (0+255),w,b
 22381  0076F8  22DA               	addwfc	fsr2h,f,c
 22382  0076FA  CFDE F0BA          	movff	postinc2,??_fatfs_update_file_length+2
 22383  0076FE  CFDD F0BB          	movff	postdec2,??_fatfs_update_file_length+3
 22384  007702  D801               	call	u12908
 22385  007704  D010               	goto	l179
 22386  007706                     u12908:
 22387  007706  0005               	push	
 22388  007708  6EFA               	movwf	pclath,c
 22389  00770A  0100               	movlb	0	; () banked
 22390  00770C  51BA               	movf	(??_fatfs_update_file_length+2)& (0+255),w,b
 22391  00770E  6EFD               	movwf	tosl,c
 22392  007710  51BB               	movf	(??_fatfs_update_file_length+3)& (0+255),w,b
 22393  007712  6EFE               	movwf	tosh,c
 22394  007714  6AFF               	clrf	tosu,c
 22395  007716  50FA               	movf	pclath,w,c
 22396  007718  0012               	return		;indir
 22397  00771A                     l11116:
 22398  00771A  0100               	movlb	0	; () banked
 22399  00771C  2BC0               	incf	fatfs_update_file_length@item& (0+255),f,b
 22400                           
 22401                           ; BSR set to: 0
 22402  00771E  0E0F               	movlw	15
 22403  007720  65C0               	cpfsgt	fatfs_update_file_length@item& (0+255),b
 22404  007722  D75A               	goto	l11092
 22405  007724  D72E               	goto	l11084
 22406  007726                     l179:
 22407  007726  0012               	return	
 22408  007728                     __end_of_fatfs_update_file_length:
 22409                           	opt stack 0
 22410                           tosu	equ	0xFFF
 22411                           tosh	equ	0xFFE
 22412                           tosl	equ	0xFFD
 22413                           pclath	equ	0xFFA
 22414                           tblptru	equ	0xFF8
 22415                           tblptrh	equ	0xFF7
 22416                           tblptrl	equ	0xFF6
 22417                           tablat	equ	0xFF5
 22418                           prodh	equ	0xFF4
 22419                           prodl	equ	0xFF3
 22420                           indf0	equ	0xFEF
 22421                           postinc0	equ	0xFEE
 22422                           fsr0h	equ	0xFEA
 22423                           fsr0l	equ	0xFE9
 22424                           wreg	equ	0xFE8
 22425                           indf1	equ	0xFE7
 22426                           postinc1	equ	0xFE6
 22427                           postdec1	equ	0xFE5
 22428                           fsr1h	equ	0xFE2
 22429                           fsr1l	equ	0xFE1
 22430                           indf2	equ	0xFDF
 22431                           postinc2	equ	0xFDE
 22432                           postdec2	equ	0xFDD
 22433                           fsr2h	equ	0xFDA
 22434                           fsr2l	equ	0xFD9
 22435                           status	equ	0xFD8
 22436                           
 22437 ;; *************** function _Write *****************
 22438 ;; Defined at:
 22439 ;;		line 36 in file "uart.c"
 22440 ;; Parameters:    Size  Location     Type
 22441 ;;  data            1    wreg     unsigned char 
 22442 ;; Auto vars:     Size  Location     Type
 22443 ;;  data            1    1[COMRAM] unsigned char 
 22444 ;; Return value:  Size  Location     Type
 22445 ;;		None               void
 22446 ;; Registers used:
 22447 ;;		wreg, status,2, status,0, cstack
 22448 ;; Tracked objects:
 22449 ;;		On entry : 0/0
 22450 ;;		On exit  : 0/0
 22451 ;;		Unchanged: 0/0
 22452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22457 ;;Total ram usage:        1 bytes
 22458 ;; Hardware stack levels used:    1
 22459 ;; Hardware stack levels required when called:    1
 22460 ;; This function calls:
 22461 ;;		_WriteUSART
 22462 ;; This function is called by:
 22463 ;;		_Draw_Line
 22464 ;;		_File_append
 22465 ;;		_File_read
 22466 ;;		_putch
 22467 ;;		_File_read_
 22468 ;;		_Read_string
 22469 ;; This function uses a non-reentrant model
 22470 ;;
 22471                           
 22472                           	psect	text59
 22473  00400A                     __ptext59:
 22474                           	opt stack 0
 22475  00400A                     _Write:
 22476                           	opt stack 26
 22477                           
 22478                           ;incstack = 0
 22479                           ;Write@data stored from wreg
 22480  00400A  6E02               	movwf	Write@data,c
 22481                           
 22482                           ;uart.c: 38: if(data!='\r')
 22483  00400C  5002               	movf	Write@data,w,c
 22484  00400E  0A0D               	xorlw	13
 22485  004010  E006               	bz	l11070
 22486                           
 22487                           ;uart.c: 39: {
 22488                           ;uart.c: 40: WriteUSART(data);
 22489  004012  5002               	movf	Write@data,w,c
 22490  004014  EC45  F01F         	call	_WriteUSART
 22491  004018                     l2160:
 22492  004018  B2AC               	btfsc	4012,1,c	;volatile
 22493  00401A  D00B               	goto	l2170
 22494  00401C  D7FD               	goto	l2160
 22495  00401E                     l11070:
 22496                           
 22497                           ;uart.c: 43: else
 22498                           ;uart.c: 44: {
 22499                           ;uart.c: 45: WriteUSART('\n');
 22500  00401E  0E0A               	movlw	10
 22501  004020  EC45  F01F         	call	_WriteUSART
 22502  004024                     l2164:
 22503  004024  A2AC               	btfss	4012,1,c	;volatile
 22504  004026  D7FE               	goto	l2164
 22505                           
 22506                           ;uart.c: 47: WriteUSART('\r');
 22507  004028  0E0D               	movlw	13
 22508  00402A  EC45  F01F         	call	_WriteUSART
 22509  00402E                     l2167:
 22510  00402E  A2AC               	btfss	4012,1,c	;volatile
 22511  004030  D7FE               	goto	l2167
 22512  004032                     l2170:
 22513  004032  0012               	return	
 22514  004034                     __end_of_Write:
 22515                           	opt stack 0
 22516                           tosu	equ	0xFFF
 22517                           tosh	equ	0xFFE
 22518                           tosl	equ	0xFFD
 22519                           pclath	equ	0xFFA
 22520                           tblptru	equ	0xFF8
 22521                           tblptrh	equ	0xFF7
 22522                           tblptrl	equ	0xFF6
 22523                           tablat	equ	0xFF5
 22524                           prodh	equ	0xFF4
 22525                           prodl	equ	0xFF3
 22526                           indf0	equ	0xFEF
 22527                           postinc0	equ	0xFEE
 22528                           fsr0h	equ	0xFEA
 22529                           fsr0l	equ	0xFE9
 22530                           wreg	equ	0xFE8
 22531                           indf1	equ	0xFE7
 22532                           postinc1	equ	0xFE6
 22533                           postdec1	equ	0xFE5
 22534                           fsr1h	equ	0xFE2
 22535                           fsr1l	equ	0xFE1
 22536                           indf2	equ	0xFDF
 22537                           postinc2	equ	0xFDE
 22538                           postdec2	equ	0xFDD
 22539                           fsr2h	equ	0xFDA
 22540                           fsr2l	equ	0xFD9
 22541                           status	equ	0xFD8
 22542                           
 22543 ;; *************** function _ReadUART *****************
 22544 ;; Defined at:
 22545 ;;		line 23 in file "uart.c"
 22546 ;; Parameters:    Size  Location     Type
 22547 ;;		None
 22548 ;; Auto vars:     Size  Location     Type
 22549 ;;		None
 22550 ;; Return value:  Size  Location     Type
 22551 ;;                  1    wreg      unsigned char 
 22552 ;; Registers used:
 22553 ;;		wreg, status,2, status,0, cstack
 22554 ;; Tracked objects:
 22555 ;;		On entry : 0/0
 22556 ;;		On exit  : 0/0
 22557 ;;		Unchanged: 0/0
 22558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22563 ;;Total ram usage:        0 bytes
 22564 ;; Hardware stack levels used:    1
 22565 ;; Hardware stack levels required when called:    1
 22566 ;; This function calls:
 22567 ;;		_ReadUSART
 22568 ;; This function is called by:
 22569 ;;		_File_write
 22570 ;;		_File_append
 22571 ;;		_Format_drive
 22572 ;;		_main
 22573 ;;		_File_read_
 22574 ;; This function uses a non-reentrant model
 22575 ;;
 22576                           
 22577                           	psect	text60
 22578  003E3C                     __ptext60:
 22579                           	opt stack 0
 22580  003E3C                     _ReadUART:
 22581                           	opt stack 29
 22582  003E3C                     l2147:
 22583  003E3C  AA9E               	btfss	3998,5,c	;volatile
 22584  003E3E  D7FE               	goto	l2147
 22585                           
 22586                           ;uart.c: 26: return(ReadUSART());
 22587  003E40  EFDC  F01F         	goto	_ReadUSART	;wreg free
 22588  003E44                     __end_of_ReadUART:
 22589                           	opt stack 0
 22590                           tosu	equ	0xFFF
 22591                           tosh	equ	0xFFE
 22592                           tosl	equ	0xFFD
 22593                           pclath	equ	0xFFA
 22594                           tblptru	equ	0xFF8
 22595                           tblptrh	equ	0xFF7
 22596                           tblptrl	equ	0xFF6
 22597                           tablat	equ	0xFF5
 22598                           prodh	equ	0xFF4
 22599                           prodl	equ	0xFF3
 22600                           indf0	equ	0xFEF
 22601                           postinc0	equ	0xFEE
 22602                           fsr0h	equ	0xFEA
 22603                           fsr0l	equ	0xFE9
 22604                           wreg	equ	0xFE8
 22605                           indf1	equ	0xFE7
 22606                           postinc1	equ	0xFE6
 22607                           postdec1	equ	0xFE5
 22608                           fsr1h	equ	0xFE2
 22609                           fsr1l	equ	0xFE1
 22610                           indf2	equ	0xFDF
 22611                           postinc2	equ	0xFDE
 22612                           postdec2	equ	0xFDD
 22613                           fsr2h	equ	0xFDA
 22614                           fsr2l	equ	0xFD9
 22615                           status	equ	0xFD8
 22616                           
 22617 ;; *************** function _Create_folder *****************
 22618 ;; Defined at:
 22619 ;;		line 704 in file "main.c"
 22620 ;; Parameters:    Size  Location     Type
 22621 ;;		None
 22622 ;; Auto vars:     Size  Location     Type
 22623 ;;		None
 22624 ;; Return value:  Size  Location     Type
 22625 ;;		None               void
 22626 ;; Registers used:
 22627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22628 ;; Tracked objects:
 22629 ;;		On entry : 0/0
 22630 ;;		On exit  : 0/0
 22631 ;;		Unchanged: 0/0
 22632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22637 ;;Total ram usage:        0 bytes
 22638 ;; Hardware stack levels used:    1
 22639 ;; Hardware stack levels required when called:   11
 22640 ;; This function calls:
 22641 ;;		_Clr_str
 22642 ;;		_Read_str
 22643 ;;		_Switch
 22644 ;;		_Write_str
 22645 ;;		_fl_createdirectory
 22646 ;; This function is called by:
 22647 ;;		_main
 22648 ;; This function uses a non-reentrant model
 22649 ;;
 22650                           
 22651                           	psect	text61
 22652  0050D8                     __ptext61:
 22653                           	opt stack 0
 22654  0050D8                     _Create_folder:
 22655                           	opt stack 19
 22656                           
 22657                           ;main.c: 706: Write_str("\n\rEnter a name/ path\n\r");
 22658                           
 22659                           ;incstack = 0
 22660  0050D8  0EFE               	movlw	high STR_50
 22661  0050DA  6E07               	movwf	Write_str@str+1,c
 22662  0050DC  0E98               	movlw	low STR_50
 22663  0050DE  6E06               	movwf	Write_str@str,c
 22664  0050E0  EC3C  F01F         	call	_Write_str	;wreg free
 22665                           
 22666                           ;main.c: 707: Clr_str(string);
 22667  0050E4  0E01               	movlw	high _string
 22668  0050E6  6E02               	movwf	Clr_str@buffer+1,c
 22669  0050E8  0101               	movlb	1	; () banked
 22670  0050EA  0EAF               	movlw	low _string
 22671  0050EC  6E01               	movwf	Clr_str@buffer,c
 22672  0050EE  EC95  F01F         	call	_Clr_str	;wreg free
 22673                           
 22674                           ;main.c: 708: Clr_str(m);
 22675  0050F2  0E02               	movlw	high _m
 22676  0050F4  6E02               	movwf	Clr_str@buffer+1,c
 22677  0050F6  0102               	movlb	2	; () banked
 22678  0050F8  0E89               	movlw	low _m
 22679  0050FA  6E01               	movwf	Clr_str@buffer,c
 22680  0050FC  EC95  F01F         	call	_Clr_str	;wreg free
 22681                           
 22682                           ;main.c: 709: Read_str(string);
 22683  005100  0E01               	movlw	high _string
 22684  005102  6E03               	movwf	Read_str@buffer+1,c
 22685  005104  0101               	movlb	1	; () banked
 22686  005106  0EAF               	movlw	low _string
 22687  005108  6E02               	movwf	Read_str@buffer,c
 22688  00510A  EC22  F021         	call	_Read_str	;wreg free
 22689                           
 22690                           ;main.c: 710: Switch('r');
 22691  00510E  0E72               	movlw	114
 22692  005110  EC13  F030         	call	_Switch
 22693                           
 22694                           ;main.c: 711: Write_str("\n\r");
 22695  005114  0EFE               	movlw	high (STR_20+18)
 22696  005116  6E07               	movwf	Write_str@str+1,c
 22697  005118  0ED7               	movlw	low (STR_20+18)
 22698  00511A  6E06               	movwf	Write_str@str,c
 22699  00511C  EC3C  F01F         	call	_Write_str	;wreg free
 22700                           
 22701                           ;main.c: 712: Write_str(m);
 22702  005120  0E02               	movlw	high _m
 22703  005122  6E07               	movwf	Write_str@str+1,c
 22704  005124  0102               	movlb	2	; () banked
 22705  005126  0E89               	movlw	low _m
 22706  005128  6E06               	movwf	Write_str@str,c
 22707  00512A  EC3C  F01F         	call	_Write_str	;wreg free
 22708                           
 22709                           ;main.c: 713: if(fl_createdirectory(m))
 22710  00512E  0E02               	movlw	high _m
 22711  005130  0100               	movlb	0	; () banked
 22712  005132  6FF9               	movwf	(fl_createdirectory@path+1)& (0+255),b
 22713  005134  0E89               	movlw	low _m
 22714  005136  6FF8               	movwf	fl_createdirectory@path& (0+255),b
 22715  005138  EC30  F020         	call	_fl_createdirectory	;wreg free
 22716  00513C  0100               	movlb	0	; () banked
 22717  00513E  51F9               	movf	(?_fl_createdirectory+1)& (0+255),w,b
 22718  005140  11F8               	iorwf	?_fl_createdirectory& (0+255),w,b
 22719  005142  E007               	bz	l13172
 22720                           
 22721                           ; BSR set to: 0
 22722                           ;main.c: 714: Write_str("\n\rNew folder created..!");
 22723  005144  0EFE               	movlw	high STR_52
 22724  005146  6E07               	movwf	Write_str@str+1,c
 22725  005148  0E50               	movlw	low STR_52
 22726  00514A  6E06               	movwf	Write_str@str,c
 22727  00514C  EC3C  F01F         	call	_Write_str	;wreg free
 22728  005150  D006               	goto	l1783
 22729  005152                     l13172:
 22730                           
 22731                           ;main.c: 715: else
 22732                           ;main.c: 716: Write_str("\n\rFolder already exists/ error..!");
 22733  005152  0EFC               	movlw	high STR_53
 22734  005154  6E07               	movwf	Write_str@str+1,c
 22735  005156  0ED1               	movlw	low STR_53
 22736  005158  6E06               	movwf	Write_str@str,c
 22737  00515A  EC3C  F01F         	call	_Write_str	;wreg free
 22738  00515E                     l1783:
 22739  00515E  0012               	return	
 22740  005160                     __end_of_Create_folder:
 22741                           	opt stack 0
 22742                           tosu	equ	0xFFF
 22743                           tosh	equ	0xFFE
 22744                           tosl	equ	0xFFD
 22745                           pclath	equ	0xFFA
 22746                           tblptru	equ	0xFF8
 22747                           tblptrh	equ	0xFF7
 22748                           tblptrl	equ	0xFF6
 22749                           tablat	equ	0xFF5
 22750                           prodh	equ	0xFF4
 22751                           prodl	equ	0xFF3
 22752                           indf0	equ	0xFEF
 22753                           postinc0	equ	0xFEE
 22754                           fsr0h	equ	0xFEA
 22755                           fsr0l	equ	0xFE9
 22756                           wreg	equ	0xFE8
 22757                           indf1	equ	0xFE7
 22758                           postinc1	equ	0xFE6
 22759                           postdec1	equ	0xFE5
 22760                           fsr1h	equ	0xFE2
 22761                           fsr1l	equ	0xFE1
 22762                           indf2	equ	0xFDF
 22763                           postinc2	equ	0xFDE
 22764                           postdec2	equ	0xFDD
 22765                           fsr2h	equ	0xFDA
 22766                           fsr2l	equ	0xFD9
 22767                           status	equ	0xFD8
 22768                           
 22769 ;; *************** function _fl_createdirectory *****************
 22770 ;; Defined at:
 22771 ;;		line 1450 in file "fat_filelib.c"
 22772 ;; Parameters:    Size  Location     Type
 22773 ;;  path            2  120[BANK0 ] PTR const unsigned char 
 22774 ;;		 -> m(30), 
 22775 ;; Auto vars:     Size  Location     Type
 22776 ;;  res             2  122[BANK0 ] int 
 22777 ;; Return value:  Size  Location     Type
 22778 ;;                  2  120[BANK0 ] int 
 22779 ;; Registers used:
 22780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22781 ;; Tracked objects:
 22782 ;;		On entry : 0/0
 22783 ;;		On exit  : 0/0
 22784 ;;		Unchanged: 0/0
 22785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22786 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22787 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22789 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22790 ;;Total ram usage:        4 bytes
 22791 ;; Hardware stack levels used:    1
 22792 ;; Hardware stack levels required when called:   10
 22793 ;; This function calls:
 22794 ;;		__create_directory
 22795 ;;		_fl_init
 22796 ;; This function is called by:
 22797 ;;		_Create_folder
 22798 ;; This function uses a non-reentrant model
 22799 ;;
 22800                           
 22801                           	psect	text62
 22802  004060                     __ptext62:
 22803                           	opt stack 0
 22804  004060                     _fl_createdirectory:
 22805                           	opt stack 19
 22806                           
 22807                           ;fat_filelib.c: 1452: int res;
 22808                           ;fat_filelib.c: 1455: { if (_filelib_init==0) fl_init(); };
 22809                           
 22810                           ;incstack = 0
 22811  004060  0101               	movlb	1	; () banked
 22812  004062  5192               	movf	(__filelib_init+1)& (0+255),w,b
 22813  004064  1191               	iorwf	__filelib_init& (0+255),w,b
 22814  004066  B4D8               	btfsc	status,2,c
 22815                           
 22816                           ; BSR set to: 1
 22817  004068  EC3A  F029         	call	_fl_init	;wreg free
 22818                           
 22819                           ;fat_filelib.c: 1458: res =_create_directory((char*)path);
 22820                           
 22821                           ;fat_filelib.c: 1457: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
 22822  00406C  C0F9  F0F3         	movff	fl_createdirectory@path+1,__create_directory@path+1
 22823  004070  0100               	movlb	0	; () banked
 22824  004072  C0F8  F0F2         	movff	fl_createdirectory@path,__create_directory@path
 22825  004076  EC43  F06A         	call	__create_directory	;wreg free
 22826  00407A  C0F2  F0FA         	movff	?__create_directory,fl_createdirectory@res
 22827  00407E  0100               	movlb	0	; () banked
 22828  004080  C0F3  F0FB         	movff	?__create_directory+1,fl_createdirectory@res+1
 22829                           
 22830                           ; BSR set to: 0
 22831                           ;fat_filelib.c: 1461: return res;
 22832                           
 22833                           ; BSR set to: 0
 22834                           
 22835                           ; BSR set to: 0
 22836                           
 22837                           ; BSR set to: 0
 22838                           
 22839                           ;fat_filelib.c: 1459: do { if ((&_fs)->fl_unlock) (&_fs)->fl_unlock(); } while (0);
 22840  004084  C0FA  F0F8         	movff	fl_createdirectory@res,?_fl_createdirectory
 22841  004088  C0FB  F0F9         	movff	fl_createdirectory@res+1,?_fl_createdirectory+1
 22842                           
 22843                           ; BSR set to: 0
 22844  00408C  0012               	return	
 22845  00408E                     __end_of_fl_createdirectory:
 22846                           	opt stack 0
 22847                           tosu	equ	0xFFF
 22848                           tosh	equ	0xFFE
 22849                           tosl	equ	0xFFD
 22850                           pclath	equ	0xFFA
 22851                           tblptru	equ	0xFF8
 22852                           tblptrh	equ	0xFF7
 22853                           tblptrl	equ	0xFF6
 22854                           tablat	equ	0xFF5
 22855                           prodh	equ	0xFF4
 22856                           prodl	equ	0xFF3
 22857                           indf0	equ	0xFEF
 22858                           postinc0	equ	0xFEE
 22859                           fsr0h	equ	0xFEA
 22860                           fsr0l	equ	0xFE9
 22861                           wreg	equ	0xFE8
 22862                           indf1	equ	0xFE7
 22863                           postinc1	equ	0xFE6
 22864                           postdec1	equ	0xFE5
 22865                           fsr1h	equ	0xFE2
 22866                           fsr1l	equ	0xFE1
 22867                           indf2	equ	0xFDF
 22868                           postinc2	equ	0xFDE
 22869                           postdec2	equ	0xFDD
 22870                           fsr2h	equ	0xFDA
 22871                           fsr2l	equ	0xFD9
 22872                           status	equ	0xFD8
 22873                           
 22874 ;; *************** function _fl_init *****************
 22875 ;; Defined at:
 22876 ;;		line 634 in file "fat_filelib.c"
 22877 ;; Parameters:    Size  Location     Type
 22878 ;;		None
 22879 ;; Auto vars:     Size  Location     Type
 22880 ;;  i               2   20[COMRAM] int 
 22881 ;; Return value:  Size  Location     Type
 22882 ;;		None               void
 22883 ;; Registers used:
 22884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22885 ;; Tracked objects:
 22886 ;;		On entry : 0/0
 22887 ;;		On exit  : 0/0
 22888 ;;		Unchanged: 0/0
 22889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22892 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22893 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22894 ;;Total ram usage:        8 bytes
 22895 ;; Hardware stack levels used:    1
 22896 ;; Hardware stack levels required when called:    3
 22897 ;; This function calls:
 22898 ;;		fat_list@fat_list_init
 22899 ;;		fat_list@fat_list_insert_last
 22900 ;; This function is called by:
 22901 ;;		_fl_attach_media
 22902 ;;		_fl_shutdown
 22903 ;;		_fl_fopen
 22904 ;;		_fl_fflush
 22905 ;;		_fl_fclose
 22906 ;;		_fl_fread
 22907 ;;		_fl_fseek
 22908 ;;		_fl_fwrite
 22909 ;;		_fl_createdirectory
 22910 ;;		_fl_listdirectory
 22911 ;;		_fl_opendir
 22912 ;;		_fl_readdir
 22913 ;;		_main
 22914 ;; This function uses a non-reentrant model
 22915 ;;
 22916                           
 22917                           	psect	text63
 22918  005274                     __ptext63:
 22919                           	opt stack 0
 22920  005274                     _fl_init:
 22921                           	opt stack 26
 22922                           
 22923                           ;fat_filelib.c: 636: int i;
 22924                           ;fat_filelib.c: 638: fat_list_init(&_free_file_list);
 22925                           
 22926                           ; BSR set to: 0
 22927                           ;incstack = 0
 22928  005274  0E01               	movlw	high __free_file_list
 22929  005276  6E02               	movwf	fat_list@fat_list_init@list+1,c
 22930  005278  0101               	movlb	1	; () banked
 22931  00527A  0ED6               	movlw	low __free_file_list
 22932  00527C  6E01               	movwf	fat_list@fat_list_init@list,c
 22933  00527E  ECB8  F01F         	call	fat_list@fat_list_init	;wreg free
 22934                           
 22935                           ;fat_filelib.c: 639: fat_list_init(&_open_file_list);
 22936  005282  0E01               	movlw	high __open_file_list
 22937  005284  6E02               	movwf	fat_list@fat_list_init@list+1,c
 22938  005286  0101               	movlb	1	; () banked
 22939  005288  0EDA               	movlw	low __open_file_list
 22940  00528A  6E01               	movwf	fat_list@fat_list_init@list,c
 22941  00528C  ECB8  F01F         	call	fat_list@fat_list_init	;wreg free
 22942                           
 22943                           ;fat_filelib.c: 642: for (i=0;i<2;i++)
 22944  005290  6A16               	clrf	fl_init@i+1,c
 22945  005292  6A15               	clrf	fl_init@i,c
 22946  005294  5016               	movf	fl_init@i+1,w,c
 22947  005296  0A80               	xorlw	128
 22948  005298  0F80               	addlw	-128
 22949  00529A  0E02               	movlw	2
 22950  00529C  B4D8               	btfsc	status,2,c
 22951  00529E  5C15               	subwf	fl_init@i,w,c
 22952  0052A0  E229               	bc	l10918
 22953                           
 22954                           ;fat_filelib.c: 643: fat_list_insert_last(&_free_file_list, &_files[i].list_node);
 22955  0052A2  0E01               	movlw	high __free_file_list
 22956  0052A4  6E0C               	movwf	fat_list@fat_list_insert_last@list+1,c
 22957  0052A6  0101               	movlb	1	; () banked
 22958  0052A8  0ED6               	movlw	low __free_file_list
 22959  0052AA  6E0B               	movwf	fat_list@fat_list_insert_last@list,c
 22960  0052AC  0E40               	movlw	64
 22961  0052AE  6E0F               	movwf	??_fl_init& (0+255),c
 22962  0052B0  0E02               	movlw	2
 22963  0052B2  6E10               	movwf	(??_fl_init+1)& (0+255),c
 22964  0052B4  0E44               	movlw	68
 22965  0052B6  6E11               	movwf	(??_fl_init+2)& (0+255),c
 22966  0052B8  0E02               	movlw	2
 22967  0052BA  6E12               	movwf	(??_fl_init+3)& (0+255),c
 22968  0052BC  5011               	movf	(??_fl_init+2)& (0+255),w,c
 22969  0052BE  0215               	mulwf	fl_init@i,c
 22970  0052C0  CFF3 F013          	movff	prodl,??_fl_init+4
 22971  0052C4  CFF4 F014          	movff	prodh,??_fl_init+5
 22972  0052C8  0216               	mulwf	fl_init@i+1,c
 22973  0052CA  50F3               	movf	243,w,c
 22974  0052CC  2614               	addwf	(??_fl_init+5)& (0+255),f,c
 22975  0052CE  5012               	movf	(??_fl_init+3)& (0+255),w,c
 22976  0052D0  0215               	mulwf	fl_init@i,c
 22977  0052D2  50F3               	movf	243,w,c
 22978  0052D4  2614               	addwf	(??_fl_init+5)& (0+255),f,c
 22979  0052D6  500F               	movf	??_fl_init,w,c
 22980  0052D8  2613               	addwf	??_fl_init+4,f,c
 22981  0052DA  5010               	movf	??_fl_init+1,w,c
 22982  0052DC  2214               	addwfc	??_fl_init+5,f,c
 22983  0052DE  0EF0               	movlw	low __files
 22984  0052E0  2413               	addwf	??_fl_init+4,w,c
 22985  0052E2  6E0D               	movwf	fat_list@fat_list_insert_last@node,c
 22986  0052E4  0E04               	movlw	high __files
 22987  0052E6  2014               	addwfc	??_fl_init+5,w,c
 22988  0052E8  6E0E               	movwf	fat_list@fat_list_insert_last@node+1,c
 22989  0052EA  EC1F  F022         	call	fat_list@fat_list_insert_last	;wreg free
 22990  0052EE  4A15               	infsnz	fl_init@i,f,c
 22991  0052F0  2A16               	incf	fl_init@i+1,f,c
 22992  0052F2  D7D0               	goto	L63
 22993  0052F4                     l10918:
 22994                           
 22995                           ;fat_filelib.c: 645: _filelib_init = 1;
 22996  0052F4  0E00               	movlw	0
 22997  0052F6  0101               	movlb	1	; () banked
 22998  0052F8  6F92               	movwf	(__filelib_init+1)& (0+255),b
 22999  0052FA  0E01               	movlw	1
 23000  0052FC  6F91               	movwf	__filelib_init& (0+255),b
 23001                           
 23002                           ; BSR set to: 1
 23003  0052FE  0C01               	retlw	1
 23004  005300                     __end_of_fl_init:
 23005                           	opt stack 0
 23006                           tosu	equ	0xFFF
 23007                           tosh	equ	0xFFE
 23008                           tosl	equ	0xFFD
 23009                           pclath	equ	0xFFA
 23010                           tblptru	equ	0xFF8
 23011                           tblptrh	equ	0xFF7
 23012                           tblptrl	equ	0xFF6
 23013                           tablat	equ	0xFF5
 23014                           prodh	equ	0xFF4
 23015                           prodl	equ	0xFF3
 23016                           indf0	equ	0xFEF
 23017                           postinc0	equ	0xFEE
 23018                           fsr0h	equ	0xFEA
 23019                           fsr0l	equ	0xFE9
 23020                           wreg	equ	0xFE8
 23021                           indf1	equ	0xFE7
 23022                           postinc1	equ	0xFE6
 23023                           postdec1	equ	0xFE5
 23024                           fsr1h	equ	0xFE2
 23025                           fsr1l	equ	0xFE1
 23026                           indf2	equ	0xFDF
 23027                           postinc2	equ	0xFDE
 23028                           postdec2	equ	0xFDD
 23029                           fsr2h	equ	0xFDA
 23030                           fsr2l	equ	0xFD9
 23031                           status	equ	0xFD8
 23032                           
 23033 ;; *************** function fat_list@fat_list_init *****************
 23034 ;; Defined at:
 23035 ;;		line 46 in file "fat_list.h"
 23036 ;; Parameters:    Size  Location     Type
 23037 ;;  list            2    0[COMRAM] PTR struct fat_list
 23038 ;;		 -> _open_file_list(4), _free_file_list(4), 
 23039 ;; Auto vars:     Size  Location     Type
 23040 ;;		None
 23041 ;; Return value:  Size  Location     Type
 23042 ;;		None               void
 23043 ;; Registers used:
 23044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23045 ;; Tracked objects:
 23046 ;;		On entry : 0/0
 23047 ;;		On exit  : 0/0
 23048 ;;		Unchanged: 0/0
 23049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23054 ;;Total ram usage:        2 bytes
 23055 ;; Hardware stack levels used:    1
 23056 ;; This function calls:
 23057 ;;		Nothing
 23058 ;; This function is called by:
 23059 ;;		_fl_init
 23060 ;; This function uses a non-reentrant model
 23061 ;;
 23062                           
 23063                           	psect	text64
 23064  003F70                     __ptext64:
 23065                           	opt stack 0
 23066  003F70                     fat_list@fat_list_init:
 23067                           	opt stack 28
 23068                           
 23069                           ;fat_list.h: 48: ;
 23070                           ;fat_list.h: 50: list->head = list->tail = 0;
 23071                           
 23072                           ; BSR set to: 1
 23073                           ;incstack = 0
 23074  003F70  EE20 F002          	lfsr	2,2
 23075  003F74  5001               	movf	fat_list@fat_list_init@list,w,c
 23076  003F76  26D9               	addwf	fsr2l,f,c
 23077  003F78  5002               	movf	fat_list@fat_list_init@list+1,w,c
 23078  003F7A  22DA               	addwfc	fsr2h,f,c
 23079  003F7C  0E00               	movlw	0
 23080  003F7E  6EDE               	movwf	postinc2,c
 23081  003F80  6EDD               	movwf	postdec2,c
 23082  003F82  C001  FFE1         	movff	fat_list@fat_list_init@list,fsr1l
 23083  003F86  C002  FFE2         	movff	fat_list@fat_list_init@list+1,fsr1h
 23084  003F8A  CFDE FFE6          	movff	postinc2,postinc1
 23085  003F8E  CFDD FFE5          	movff	postdec2,postdec1
 23086  003F92  0C00               	retlw	0
 23087  003F94                     __end_offat_list@fat_list_init:
 23088                           	opt stack 0
 23089                           tosu	equ	0xFFF
 23090                           tosh	equ	0xFFE
 23091                           tosl	equ	0xFFD
 23092                           pclath	equ	0xFFA
 23093                           tblptru	equ	0xFF8
 23094                           tblptrh	equ	0xFF7
 23095                           tblptrl	equ	0xFF6
 23096                           tablat	equ	0xFF5
 23097                           prodh	equ	0xFF4
 23098                           prodl	equ	0xFF3
 23099                           indf0	equ	0xFEF
 23100                           postinc0	equ	0xFEE
 23101                           fsr0h	equ	0xFEA
 23102                           fsr0l	equ	0xFE9
 23103                           wreg	equ	0xFE8
 23104                           indf1	equ	0xFE7
 23105                           postinc1	equ	0xFE6
 23106                           postdec1	equ	0xFE5
 23107                           fsr1h	equ	0xFE2
 23108                           fsr1l	equ	0xFE1
 23109                           indf2	equ	0xFDF
 23110                           postinc2	equ	0xFDE
 23111                           postdec2	equ	0xFDD
 23112                           fsr2h	equ	0xFDA
 23113                           fsr2l	equ	0xFD9
 23114                           status	equ	0xFD8
 23115                           
 23116 ;; *************** function __create_directory *****************
 23117 ;; Defined at:
 23118 ;;		line 168 in file "fat_filelib.c"
 23119 ;; Parameters:    Size  Location     Type
 23120 ;;  path            2  114[BANK0 ] PTR unsigned char 
 23121 ;;		 -> m(30), 
 23122 ;; Auto vars:     Size  Location     Type
 23123 ;;  sfEntry        32   88[BANK1 ] struct fat_dir_entry
 23124 ;;  shortFilenam   11   77[BANK1 ] unsigned char [11]
 23125 ;;  file            2  124[BANK1 ] PTR struct sFL_FILE
 23126 ;;		 -> RAM(3967), NULL(0), 
 23127 ;;  tailNum         2  122[BANK1 ] int 
 23128 ;;  i               2  120[BANK1 ] int 
 23129 ;; Return value:  Size  Location     Type
 23130 ;;                  2  114[BANK0 ] int 
 23131 ;; Registers used:
 23132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23133 ;; Tracked objects:
 23134 ;;		On entry : 0/0
 23135 ;;		On exit  : 0/0
 23136 ;;		Unchanged: 0/0
 23137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23139 ;;      Locals:         0       0      49       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23141 ;;      Totals:         0       6      49       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23142 ;;Total ram usage:       55 bytes
 23143 ;; Hardware stack levels used:    1
 23144 ;; Hardware stack levels required when called:    9
 23145 ;; This function calls:
 23146 ;;		__allocate_file
 23147 ;;		__check_file_open
 23148 ;;		__free_file
 23149 ;;		__open_directory
 23150 ;;		_fatfs_add_file_entry
 23151 ;;		_fatfs_allocate_free_space
 23152 ;;		_fatfs_fat_purge
 23153 ;;		_fatfs_free_cluster_chain
 23154 ;;		_fatfs_get_file_entry
 23155 ;;		_fatfs_get_root_cluster
 23156 ;;		_fatfs_lfn_create_sfn
 23157 ;;		_fatfs_lfn_generate_tail
 23158 ;;		_fatfs_sfn_exists
 23159 ;;		_fatfs_split_path
 23160 ;;		_fatfs_write_sector
 23161 ;;		_memcpy
 23162 ;;		_memset
 23163 ;; This function is called by:
 23164 ;;		_fl_createdirectory
 23165 ;; This function uses a non-reentrant model
 23166 ;;
 23167                           
 23168                           	psect	text65
 23169  00D486                     __ptext65:
 23170                           	opt stack 0
 23171  00D486                     __create_directory:
 23172                           	opt stack 19
 23173                           
 23174                           ;fat_filelib.c: 170: FL_FILE* file;
 23175                           ;fat_filelib.c: 171: struct fat_dir_entry sfEntry;
 23176                           ;fat_filelib.c: 172: char shortFilename[11];
 23177                           ;fat_filelib.c: 173: int tailNum = 0;
 23178                           
 23179                           ;incstack = 0
 23180  00D486  0E00               	movlw	0
 23181  00D488  0101               	movlb	1	; () banked
 23182  00D48A  6B7B               	clrf	(__create_directory@tailNum+1)& (0+255),b
 23183  00D48C  6B7A               	clrf	__create_directory@tailNum& (0+255),b
 23184                           
 23185                           ; BSR set to: 1
 23186                           ;fat_filelib.c: 174: int i;
 23187                           ;fat_filelib.c: 177: file = _allocate_file();
 23188  00D48E  ECD0  F021         	call	__allocate_file	;wreg free
 23189  00D492  C00F  F17C         	movff	?__allocate_file,__create_directory@file
 23190  00D496  C010  F17D         	movff	?__allocate_file+1,__create_directory@file+1
 23191                           
 23192                           ;fat_filelib.c: 178: if (!file)
 23193  00D49A  0101               	movlb	1	; () banked
 23194  00D49C  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23195  00D49E  117C               	iorwf	__create_directory@file& (0+255),w,b
 23196  00D4A0  E101 D240          	bz	L71
 23197                           
 23198                           ;fat_filelib.c: 182: memset(file->path, '\0', sizeof(file->path));
 23199                           
 23200                           ; BSR set to: 0
 23201                           
 23202                           ; BSR set to: 0
 23203                           
 23204                           ; BSR set to: 1
 23205                           ;fat_filelib.c: 179: return 0;
 23206  00D4A4  0E12               	movlw	18
 23207  00D4A6  257C               	addwf	__create_directory@file& (0+255),w,b
 23208  00D4A8  6E01               	movwf	memset@p1,c
 23209  00D4AA  0E00               	movlw	0
 23210  00D4AC  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23211  00D4AE  6E02               	movwf	memset@p1+1,c
 23212  00D4B0  6A04               	clrf	memset@c+1,c
 23213  00D4B2  6A03               	clrf	memset@c,c
 23214  00D4B4  6A06               	clrf	memset@n+1,c
 23215  00D4B6  0E0A               	movlw	10
 23216  00D4B8  6E05               	movwf	memset@n,c
 23217  00D4BA  EC1A  F020         	call	_memset	;wreg free
 23218                           
 23219                           ;fat_filelib.c: 183: memset(file->filename, '\0', sizeof(file->filename));
 23220  00D4BE  0E1C               	movlw	28
 23221  00D4C0  0101               	movlb	1	; () banked
 23222  00D4C2  257C               	addwf	__create_directory@file& (0+255),w,b
 23223  00D4C4  6E01               	movwf	memset@p1,c
 23224  00D4C6  0E00               	movlw	0
 23225  00D4C8  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23226  00D4CA  6E02               	movwf	memset@p1+1,c
 23227  00D4CC  6A04               	clrf	memset@c+1,c
 23228  00D4CE  6A03               	clrf	memset@c,c
 23229  00D4D0  6A06               	clrf	memset@n+1,c
 23230  00D4D2  0E0A               	movlw	10
 23231  00D4D4  6E05               	movwf	memset@n,c
 23232  00D4D6  EC1A  F020         	call	_memset	;wreg free
 23233                           
 23234                           ;fat_filelib.c: 186: if (fatfs_split_path((char*)path, file->path, sizeof(file->path), f
      +                          ile->filename, sizeof(file->filename)) == -1)
 23235  00D4DA  C0F3  F01E         	movff	__create_directory@path+1,fatfs_split_path@full_path+1
 23236  00D4DE  C0F2  F01D         	movff	__create_directory@path,fatfs_split_path@full_path
 23237  00D4E2  0E12               	movlw	18
 23238  00D4E4  0101               	movlb	1	; () banked
 23239  00D4E6  257C               	addwf	__create_directory@file& (0+255),w,b
 23240  00D4E8  6E1F               	movwf	fatfs_split_path@path,c
 23241  00D4EA  0E00               	movlw	0
 23242  00D4EC  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23243  00D4EE  6E20               	movwf	fatfs_split_path@path+1,c
 23244  00D4F0  6A22               	clrf	fatfs_split_path@max_path+1,c
 23245  00D4F2  0E0A               	movlw	10
 23246  00D4F4  6E21               	movwf	fatfs_split_path@max_path,c
 23247  00D4F6  0E1C               	movlw	28
 23248  00D4F8  257C               	addwf	__create_directory@file& (0+255),w,b
 23249  00D4FA  6E23               	movwf	fatfs_split_path@filename,c
 23250  00D4FC  0E00               	movlw	0
 23251  00D4FE  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23252  00D500  6E24               	movwf	fatfs_split_path@filename+1,c
 23253  00D502  6A26               	clrf	fatfs_split_path@max_filename+1,c
 23254  00D504  0E0A               	movlw	10
 23255  00D506  6E25               	movwf	fatfs_split_path@max_filename,c
 23256  00D508  EC1D  F02F         	call	_fatfs_split_path	;wreg free
 23257  00D50C  281D               	incf	?_fatfs_split_path,w,c
 23258  00D50E  B4D8               	btfsc	status,2,c
 23259  00D510  281E               	incf	?_fatfs_split_path+1,w,c
 23260  00D512  E108               	bnz	l11726
 23261                           
 23262                           ;fat_filelib.c: 187: {
 23263                           ;fat_filelib.c: 188: _free_file(file);
 23264  00D514  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23265  00D518  0101               	movlb	1	; () banked
 23266  00D51A  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23267  00D51E  EC8F  F020         	call	__free_file	;wreg free
 23268  00D522  D200               	goto	L71
 23269  00D524                     l11726:
 23270                           
 23271                           ;fat_filelib.c: 190: }
 23272                           ;fat_filelib.c: 193: if (_check_file_open(file))
 23273  00D524  C17D  F026         	movff	__create_directory@file+1,__check_file_open@file+1
 23274  00D528  0101               	movlb	1	; () banked
 23275  00D52A  C17C  F025         	movff	__create_directory@file,__check_file_open@file
 23276  00D52E  ECA7  F02A         	call	__check_file_open	;wreg free
 23277  00D532  5026               	movf	?__check_file_open+1,w,c
 23278  00D534  1025               	iorwf	?__check_file_open,w,c
 23279  00D536  E008               	bz	l11734
 23280                           
 23281                           ;fat_filelib.c: 194: {
 23282                           ;fat_filelib.c: 195: _free_file(file);
 23283  00D538  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23284  00D53C  0101               	movlb	1	; () banked
 23285  00D53E  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23286  00D542  EC8F  F020         	call	__free_file	;wreg free
 23287  00D546  D1EE               	goto	L71
 23288  00D548                     l11734:
 23289                           
 23290                           ;fat_filelib.c: 197: }
 23291                           ;fat_filelib.c: 200: if (file->path[0] == 0)
 23292  00D548  EE20 F012          	lfsr	2,18
 23293  00D54C  0101               	movlb	1	; () banked
 23294  00D54E  517C               	movf	__create_directory@file& (0+255),w,b
 23295  00D550  26D9               	addwf	fsr2l,f,c
 23296  00D552  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23297  00D554  22DA               	addwfc	fsr2h,f,c
 23298  00D556  50DF               	movf	indf2,w,c
 23299  00D558  E11D               	bnz	l11738
 23300                           
 23301                           ; BSR set to: 1
 23302                           ;fat_filelib.c: 201: file->parentcluster = fatfs_get_root_cluster(&_fs);
 23303  00D55A  0E09               	movlw	high __fs
 23304  00D55C  6E02               	movwf	fatfs_get_root_cluster@fs+1,c
 23305  00D55E  0E78               	movlw	low __fs
 23306  00D560  6E01               	movwf	fatfs_get_root_cluster@fs,c
 23307  00D562  EC86  F01F         	call	_fatfs_get_root_cluster	;wreg free
 23308  00D566  C001  F0F4         	movff	?_fatfs_get_root_cluster,??__create_directory
 23309  00D56A  C002  F0F5         	movff	?_fatfs_get_root_cluster+1,??__create_directory+1
 23310  00D56E  C003  F0F6         	movff	?_fatfs_get_root_cluster+2,??__create_directory+2
 23311  00D572  C004  F0F7         	movff	?_fatfs_get_root_cluster+3,??__create_directory+3
 23312  00D576  C17C  FFD9         	movff	__create_directory@file,fsr2l
 23313  00D57A  C17D  FFDA         	movff	__create_directory@file+1,fsr2h
 23314  00D57E  C0F4  FFDE         	movff	??__create_directory,postinc2
 23315  00D582  C0F5  FFDE         	movff	??__create_directory+1,postinc2
 23316  00D586  C0F6  FFDE         	movff	??__create_directory+2,postinc2
 23317  00D58A  C0F7  FFDD         	movff	??__create_directory+3,postdec2
 23318  00D58E  06D9               	decf	fsr2l,f,c
 23319  00D590  06D9               	decf	fsr2l,f,c
 23320  00D592  D01C               	goto	l11746
 23321  00D594                     l11738:
 23322                           
 23323                           ;fat_filelib.c: 202: else
 23324                           ;fat_filelib.c: 203: {
 23325                           ;fat_filelib.c: 205: if (!_open_directory(file->path, &file->parentcluster))
 23326  00D594  0E12               	movlw	18
 23327  00D596  0101               	movlb	1	; () banked
 23328  00D598  257C               	addwf	__create_directory@file& (0+255),w,b
 23329  00D59A  0100               	movlb	0	; () banked
 23330  00D59C  6FB8               	movwf	__open_directory@path& (0+255),b
 23331  00D59E  0E00               	movlw	0
 23332  00D5A0  0101               	movlb	1	; () banked
 23333  00D5A2  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23334  00D5A4  0100               	movlb	0	; () banked
 23335  00D5A6  6FB9               	movwf	(__open_directory@path+1)& (0+255),b
 23336  00D5A8  C17D  F0BB         	movff	__create_directory@file+1,__open_directory@pathCluster+1
 23337  00D5AC  C17C  F0BA         	movff	__create_directory@file,__open_directory@pathCluster
 23338  00D5B0  EC0C  F034         	call	__open_directory	;wreg free
 23339  00D5B4  0100               	movlb	0	; () banked
 23340  00D5B6  51B9               	movf	(?__open_directory+1)& (0+255),w,b
 23341  00D5B8  11B8               	iorwf	?__open_directory& (0+255),w,b
 23342  00D5BA  E108               	bnz	l11746
 23343                           
 23344                           ; BSR set to: 0
 23345                           ;fat_filelib.c: 206: {
 23346                           ;fat_filelib.c: 207: _free_file(file);
 23347  00D5BC  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23348  00D5C0  0101               	movlb	1	; () banked
 23349  00D5C2  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23350  00D5C6  EC8F  F020         	call	__free_file	;wreg free
 23351  00D5CA  D1AC               	goto	L71
 23352  00D5CC                     l11746:
 23353                           
 23354                           ;fat_filelib.c: 209: }
 23355                           ;fat_filelib.c: 210: }
 23356                           ;fat_filelib.c: 213: if (fatfs_get_file_entry(&_fs, file->parentcluster, file->filename,
      +                          &sfEntry) == 1)
 23357  00D5CC  0E09               	movlw	high __fs
 23358  00D5CE  0100               	movlb	0	; () banked
 23359  00D5D0  6FAD               	movwf	(fatfs_get_file_entry@fs+1)& (0+255),b
 23360  00D5D2  0E78               	movlw	low __fs
 23361  00D5D4  6FAC               	movwf	fatfs_get_file_entry@fs& (0+255),b
 23362  00D5D6  C17C  FFD9         	movff	__create_directory@file,fsr2l
 23363  00D5DA  C17D  FFDA         	movff	__create_directory@file+1,fsr2h
 23364  00D5DE  CFDE F0AE          	movff	postinc2,fatfs_get_file_entry@Cluster
 23365  00D5E2  CFDE F0AF          	movff	postinc2,fatfs_get_file_entry@Cluster+1
 23366  00D5E6  CFDE F0B0          	movff	postinc2,fatfs_get_file_entry@Cluster+2
 23367  00D5EA  CFDE F0B1          	movff	postinc2,fatfs_get_file_entry@Cluster+3
 23368  00D5EE  0E1C               	movlw	28
 23369  00D5F0  0101               	movlb	1	; () banked
 23370  00D5F2  257C               	addwf	__create_directory@file& (0+255),w,b
 23371  00D5F4  0100               	movlb	0	; () banked
 23372  00D5F6  6FB2               	movwf	fatfs_get_file_entry@name_to_find& (0+255),b
 23373  00D5F8  0E00               	movlw	0
 23374  00D5FA  0101               	movlb	1	; () banked
 23375  00D5FC  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23376  00D5FE  0100               	movlb	0	; () banked
 23377  00D600  6FB3               	movwf	(fatfs_get_file_entry@name_to_find+1)& (0+255),b
 23378  00D602  0E01               	movlw	high __create_directory@sfEntry
 23379  00D604  6FB5               	movwf	(fatfs_get_file_entry@sfEntry+1)& (0+255),b
 23380  00D606  0E58               	movlw	low __create_directory@sfEntry
 23381  00D608  6FB4               	movwf	fatfs_get_file_entry@sfEntry& (0+255),b
 23382  00D60A  ECB5  F049         	call	_fatfs_get_file_entry	;wreg free
 23383  00D60E  C0AC  F0F4         	movff	?_fatfs_get_file_entry,??__create_directory
 23384  00D612  C0AD  F0F5         	movff	?_fatfs_get_file_entry+1,??__create_directory+1
 23385  00D616  C0AE  F0F6         	movff	?_fatfs_get_file_entry+2,??__create_directory+2
 23386  00D61A  C0AF  F0F7         	movff	?_fatfs_get_file_entry+3,??__create_directory+3
 23387  00D61E  0100               	movlb	0	; () banked
 23388  00D620  05F4               	decf	??__create_directory& (0+255),w,b
 23389  00D622  11F5               	iorwf	(??__create_directory+1)& (0+255),w,b
 23390  00D624  11F6               	iorwf	(??__create_directory+2)& (0+255),w,b
 23391  00D626  11F7               	iorwf	(??__create_directory+3)& (0+255),w,b
 23392  00D628  E108               	bnz	l11754
 23393                           
 23394                           ; BSR set to: 0
 23395                           ;fat_filelib.c: 214: {
 23396                           ;fat_filelib.c: 215: _free_file(file);
 23397  00D62A  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23398  00D62E  0101               	movlb	1	; () banked
 23399  00D630  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23400  00D634  EC8F  F020         	call	__free_file	;wreg free
 23401  00D638  D175               	goto	L71
 23402  00D63A                     l11754:
 23403                           
 23404                           ; BSR set to: 0
 23405                           ;fat_filelib.c: 217: }
 23406                           ;fat_filelib.c: 219: file->startcluster = 0;
 23407  00D63A  EE20 F004          	lfsr	2,4
 23408  00D63E  0101               	movlb	1	; () banked
 23409  00D640  517C               	movf	__create_directory@file& (0+255),w,b
 23410  00D642  26D9               	addwf	fsr2l,f,c
 23411  00D644  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23412  00D646  22DA               	addwfc	fsr2h,f,c
 23413  00D648  6ADE               	clrf	postinc2,c
 23414  00D64A  6ADE               	clrf	postinc2,c
 23415  00D64C  6ADE               	clrf	postinc2,c
 23416  00D64E  6ADD               	clrf	postdec2,c
 23417                           
 23418                           ; BSR set to: 1
 23419                           ;fat_filelib.c: 222: if (!fatfs_allocate_free_space(&_fs, 1, &file->startcluster, 1))
 23420  00D650  0E09               	movlw	high __fs
 23421  00D652  0100               	movlb	0	; () banked
 23422  00D654  6F9F               	movwf	(fatfs_allocate_free_space@fs+1)& (0+255),b
 23423  00D656  0E78               	movlw	low __fs
 23424  00D658  6F9E               	movwf	fatfs_allocate_free_space@fs& (0+255),b
 23425  00D65A  6BA1               	clrf	(fatfs_allocate_free_space@newFile+1)& (0+255),b
 23426  00D65C  0E01               	movlw	1
 23427  00D65E  6FA0               	movwf	fatfs_allocate_free_space@newFile& (0+255),b
 23428  00D660  0E04               	movlw	4
 23429  00D662  0101               	movlb	1	; () banked
 23430  00D664  257C               	addwf	__create_directory@file& (0+255),w,b
 23431  00D666  0100               	movlb	0	; () banked
 23432  00D668  6FA2               	movwf	fatfs_allocate_free_space@startCluster& (0+255),b
 23433  00D66A  0E00               	movlw	0
 23434  00D66C  0101               	movlb	1	; () banked
 23435  00D66E  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23436  00D670  0100               	movlb	0	; () banked
 23437  00D672  6FA3               	movwf	(fatfs_allocate_free_space@startCluster+1)& (0+255),b
 23438  00D674  0E01               	movlw	1
 23439  00D676  6FA4               	movwf	fatfs_allocate_free_space@size& (0+255),b
 23440  00D678  0E00               	movlw	0
 23441  00D67A  6BA5               	clrf	(fatfs_allocate_free_space@size+1)& (0+255),b
 23442  00D67C  6BA6               	clrf	(fatfs_allocate_free_space@size+2)& (0+255),b
 23443  00D67E  6BA7               	clrf	(fatfs_allocate_free_space@size+3)& (0+255),b
 23444  00D680  ECAB  F044         	call	_fatfs_allocate_free_space	;wreg free
 23445  00D684  0100               	movlb	0	; () banked
 23446  00D686  519F               	movf	(?_fatfs_allocate_free_space+1)& (0+255),w,b
 23447  00D688  119E               	iorwf	?_fatfs_allocate_free_space& (0+255),w,b
 23448  00D68A  E108               	bnz	l11764
 23449                           
 23450                           ; BSR set to: 0
 23451                           ;fat_filelib.c: 223: {
 23452                           ;fat_filelib.c: 224: _free_file(file);
 23453  00D68C  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23454  00D690  0101               	movlb	1	; () banked
 23455  00D692  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23456  00D696  EC8F  F020         	call	__free_file	;wreg free
 23457  00D69A  D144               	goto	L71
 23458  00D69C                     l11764:
 23459                           
 23460                           ; BSR set to: 0
 23461                           ;fat_filelib.c: 226: }
 23462                           ;fat_filelib.c: 229: memset(file->file_data_sector, 0x00, 512);
 23463  00D69C  0E39               	movlw	57
 23464  00D69E  0101               	movlb	1	; () banked
 23465  00D6A0  257C               	addwf	__create_directory@file& (0+255),w,b
 23466  00D6A2  6E01               	movwf	memset@p1,c
 23467  00D6A4  0E00               	movlw	0
 23468  00D6A6  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23469  00D6A8  6E02               	movwf	memset@p1+1,c
 23470  00D6AA  6A04               	clrf	memset@c+1,c
 23471  00D6AC  6A03               	clrf	memset@c,c
 23472  00D6AE  0E02               	movlw	2
 23473  00D6B0  6E06               	movwf	memset@n+1,c
 23474  00D6B2  0E00               	movlw	0
 23475  00D6B4  6A05               	clrf	memset@n,c
 23476  00D6B6  EC1A  F020         	call	_memset	;wreg free
 23477                           
 23478                           ;fat_filelib.c: 230: for (i=0;i<_fs.sectors_per_cluster;i++)
 23479  00D6BA  0101               	movlb	1	; () banked
 23480  00D6BC  6B79               	clrf	(__create_directory@i+1)& (0+255),b
 23481  00D6BE  6B78               	clrf	__create_directory@i& (0+255),b
 23482  00D6C0  D032               	goto	l11778
 23483  00D6C2                     l11768:
 23484                           
 23485                           ;fat_filelib.c: 231: {
 23486                           ;fat_filelib.c: 232: if (!fatfs_write_sector(&_fs, file->startcluster, i, file->file_dat
      +                          a_sector))
 23487  00D6C2  0E09               	movlw	high __fs
 23488  00D6C4  6E21               	movwf	fatfs_write_sector@fs+1,c
 23489  00D6C6  0E78               	movlw	low __fs
 23490  00D6C8  6E20               	movwf	fatfs_write_sector@fs,c
 23491  00D6CA  EE20 F004          	lfsr	2,4
 23492  00D6CE  0101               	movlb	1	; () banked
 23493  00D6D0  517C               	movf	__create_directory@file& (0+255),w,b
 23494  00D6D2  26D9               	addwf	fsr2l,f,c
 23495  00D6D4  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23496  00D6D6  22DA               	addwfc	fsr2h,f,c
 23497  00D6D8  CFDE F022          	movff	postinc2,fatfs_write_sector@cluster
 23498  00D6DC  CFDE F023          	movff	postinc2,fatfs_write_sector@cluster+1
 23499  00D6E0  CFDE F024          	movff	postinc2,fatfs_write_sector@cluster+2
 23500  00D6E4  CFDE F025          	movff	postinc2,fatfs_write_sector@cluster+3
 23501  00D6E8  C178  F026         	movff	__create_directory@i,fatfs_write_sector@sector
 23502  00D6EC  C179  F027         	movff	__create_directory@i+1,fatfs_write_sector@sector+1
 23503  00D6F0  0E00               	movlw	0
 23504  00D6F2  BE27               	btfsc	fatfs_write_sector@sector+1,7,c
 23505  00D6F4  0EFF               	movlw	-1
 23506  00D6F6  6E28               	movwf	fatfs_write_sector@sector+2,c
 23507  00D6F8  6E29               	movwf	fatfs_write_sector@sector+3,c
 23508  00D6FA  0E39               	movlw	57
 23509  00D6FC  257C               	addwf	__create_directory@file& (0+255),w,b
 23510  00D6FE  6E2A               	movwf	fatfs_write_sector@target,c
 23511  00D700  0E00               	movlw	0
 23512  00D702  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23513  00D704  6E2B               	movwf	fatfs_write_sector@target+1,c
 23514  00D706  ECBA  F04F         	call	_fatfs_write_sector	;wreg free
 23515  00D70A  5021               	movf	?_fatfs_write_sector+1,w,c
 23516  00D70C  1020               	iorwf	?_fatfs_write_sector,w,c
 23517  00D70E  E108               	bnz	l11776
 23518                           
 23519                           ;fat_filelib.c: 233: {
 23520                           ;fat_filelib.c: 234: _free_file(file);
 23521  00D710  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23522  00D714  0101               	movlb	1	; () banked
 23523  00D716  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23524  00D71A  EC8F  F020         	call	__free_file	;wreg free
 23525  00D71E  D102               	goto	L71
 23526  00D720                     l11776:
 23527  00D720  0101               	movlb	1	; () banked
 23528  00D722  4B78               	infsnz	__create_directory@i& (0+255),f,b
 23529  00D724  2B79               	incf	(__create_directory@i+1)& (0+255),f,b
 23530  00D726                     l11778:
 23531                           
 23532                           ; BSR set to: 1
 23533  00D726  C978  F0F4         	movff	__fs,??__create_directory
 23534  00D72A  C0F4  F0F5         	movff	??__create_directory,??__create_directory+1
 23535  00D72E  0100               	movlb	0	; () banked
 23536  00D730  6BF6               	clrf	(??__create_directory+2)& (0+255),b
 23537  00D732  0101               	movlb	1	; () banked
 23538  00D734  5179               	movf	(__create_directory@i+1)& (0+255),w,b
 23539  00D736  0A80               	xorlw	128
 23540  00D738  0100               	movlb	0	; () banked
 23541  00D73A  6FF7               	movwf	(??__create_directory+3)& (0+255),b
 23542  00D73C  51F5               	movf	(??__create_directory+1)& (0+255),w,b
 23543  00D73E  0101               	movlb	1	; () banked
 23544  00D740  5D78               	subwf	__create_directory@i& (0+255),w,b
 23545  00D742  0100               	movlb	0	; () banked
 23546  00D744  51F6               	movf	(??__create_directory+2)& (0+255),w,b
 23547  00D746  0A80               	xorlw	128
 23548  00D748  59F7               	subwfb	(??__create_directory+3)& (0+255),w,b
 23549  00D74A  E3BB               	bnc	l11768
 23550                           
 23551                           ; BSR set to: 0
 23552                           ;fat_filelib.c: 236: }
 23553                           ;fat_filelib.c: 237: }
 23554                           ;fat_filelib.c: 242: tailNum = 0;
 23555                           
 23556                           ; BSR set to: 0
 23557  00D74C  0101               	movlb	1	; () banked
 23558  00D74E  6B7B               	clrf	(__create_directory@tailNum+1)& (0+255),b
 23559  00D750  6B7A               	clrf	__create_directory@tailNum& (0+255),b
 23560  00D752                     l11782:
 23561                           
 23562                           ; BSR set to: 1
 23563                           ;fat_filelib.c: 244: {
 23564                           ;fat_filelib.c: 246: fatfs_lfn_create_sfn(shortFilename, file->filename);
 23565  00D752  0E01               	movlw	high __create_directory@shortFilename
 23566  00D754  6E0A               	movwf	fatfs_lfn_create_sfn@sfn_output+1,c
 23567  00D756  0E4D               	movlw	low __create_directory@shortFilename
 23568  00D758  6E09               	movwf	fatfs_lfn_create_sfn@sfn_output,c
 23569  00D75A  0E1C               	movlw	28
 23570  00D75C  0101               	movlb	1	; () banked
 23571  00D75E  257C               	addwf	__create_directory@file& (0+255),w,b
 23572  00D760  6E0B               	movwf	fatfs_lfn_create_sfn@filename,c
 23573  00D762  0E00               	movlw	0
 23574  00D764  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23575  00D766  6E0C               	movwf	fatfs_lfn_create_sfn@filename+1,c
 23576  00D768  EC65  F048         	call	_fatfs_lfn_create_sfn	;wreg free
 23577                           
 23578                           ;fat_filelib.c: 249: if (tailNum != 0)
 23579  00D76C  0101               	movlb	1	; () banked
 23580  00D76E  517B               	movf	(__create_directory@tailNum+1)& (0+255),w,b
 23581  00D770  117A               	iorwf	__create_directory@tailNum& (0+255),w,b
 23582  00D772  E016               	bz	l11788
 23583                           
 23584                           ; BSR set to: 1
 23585                           ;fat_filelib.c: 250: fatfs_lfn_generate_tail((char*)file->shortfilename, shortFilename, 
      +                          tailNum);
 23586  00D774  0E26               	movlw	38
 23587  00D776  257C               	addwf	__create_directory@file& (0+255),w,b
 23588  00D778  6E37               	movwf	fatfs_lfn_generate_tail@sfn_output,c
 23589  00D77A  0E00               	movlw	0
 23590  00D77C  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23591  00D77E  6E38               	movwf	fatfs_lfn_generate_tail@sfn_output+1,c
 23592  00D780  0E01               	movlw	high __create_directory@shortFilename
 23593  00D782  6E3A               	movwf	fatfs_lfn_generate_tail@sfn_input+1,c
 23594  00D784  0E4D               	movlw	low __create_directory@shortFilename
 23595  00D786  6E39               	movwf	fatfs_lfn_generate_tail@sfn_input,c
 23596  00D788  C17A  F03B         	movff	__create_directory@tailNum,fatfs_lfn_generate_tail@tailNum
 23597  00D78C  C17B  F03C         	movff	__create_directory@tailNum+1,fatfs_lfn_generate_tail@tailNum+1
 23598  00D790  0E00               	movlw	0
 23599  00D792  BE3C               	btfsc	fatfs_lfn_generate_tail@tailNum+1,7,c
 23600  00D794  0EFF               	movlw	-1
 23601  00D796  6E3D               	movwf	fatfs_lfn_generate_tail@tailNum+2,c
 23602  00D798  6E3E               	movwf	fatfs_lfn_generate_tail@tailNum+3,c
 23603  00D79A  EC49  F02C         	call	_fatfs_lfn_generate_tail	;wreg free
 23604  00D79E  D012               	goto	l11790
 23605  00D7A0                     l11788:
 23606                           
 23607                           ;fat_filelib.c: 252: else
 23608                           ;fat_filelib.c: 253: memcpy(file->shortfilename, shortFilename, 11);
 23609  00D7A0  0E26               	movlw	38
 23610  00D7A2  0101               	movlb	1	; () banked
 23611  00D7A4  257C               	addwf	__create_directory@file& (0+255),w,b
 23612  00D7A6  6E01               	movwf	memcpy@d1,c
 23613  00D7A8  0E00               	movlw	0
 23614  00D7AA  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23615  00D7AC  6E02               	movwf	memcpy@d1+1,c
 23616  00D7AE  0E20               	movlw	32
 23617  00D7B0  6E05               	movwf	memcpy@s1+2,c
 23618  00D7B2  0E01               	movlw	high __create_directory@shortFilename
 23619  00D7B4  6E04               	movwf	memcpy@s1+1,c
 23620  00D7B6  0E4D               	movlw	low __create_directory@shortFilename
 23621  00D7B8  6E03               	movwf	memcpy@s1,c
 23622  00D7BA  6A07               	clrf	memcpy@n+1,c
 23623  00D7BC  0E0B               	movlw	11
 23624  00D7BE  6E06               	movwf	memcpy@n,c
 23625  00D7C0  ECA4  F023         	call	_memcpy	;wreg free
 23626  00D7C4                     l11790:
 23627                           
 23628                           ;fat_filelib.c: 256: if (fatfs_sfn_exists(&_fs, file->parentcluster, (char*)file->shortf
      +                          ilename) == 0)
 23629  00D7C4  0E09               	movlw	high __fs
 23630  00D7C6  0100               	movlb	0	; () banked
 23631  00D7C8  6FAD               	movwf	(fatfs_sfn_exists@fs+1)& (0+255),b
 23632  00D7CA  0E78               	movlw	low __fs
 23633  00D7CC  6FAC               	movwf	fatfs_sfn_exists@fs& (0+255),b
 23634  00D7CE  C17C  FFD9         	movff	__create_directory@file,fsr2l
 23635  00D7D2  C17D  FFDA         	movff	__create_directory@file+1,fsr2h
 23636  00D7D6  CFDE F0AE          	movff	postinc2,fatfs_sfn_exists@Cluster
 23637  00D7DA  CFDE F0AF          	movff	postinc2,fatfs_sfn_exists@Cluster+1
 23638  00D7DE  CFDE F0B0          	movff	postinc2,fatfs_sfn_exists@Cluster+2
 23639  00D7E2  CFDE F0B1          	movff	postinc2,fatfs_sfn_exists@Cluster+3
 23640  00D7E6  0E26               	movlw	38
 23641  00D7E8  0101               	movlb	1	; () banked
 23642  00D7EA  257C               	addwf	__create_directory@file& (0+255),w,b
 23643  00D7EC  0100               	movlb	0	; () banked
 23644  00D7EE  6FB2               	movwf	fatfs_sfn_exists@shortname& (0+255),b
 23645  00D7F0  0E00               	movlw	0
 23646  00D7F2  0101               	movlb	1	; () banked
 23647  00D7F4  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23648  00D7F6  0100               	movlb	0	; () banked
 23649  00D7F8  6FB3               	movwf	(fatfs_sfn_exists@shortname+1)& (0+255),b
 23650  00D7FA  EC15  F031         	call	_fatfs_sfn_exists	;wreg free
 23651  00D7FE  0100               	movlb	0	; () banked
 23652  00D800  51AD               	movf	(?_fatfs_sfn_exists+1)& (0+255),w,b
 23653  00D802  11AC               	iorwf	?_fatfs_sfn_exists& (0+255),w,b
 23654  00D804  E00A               	bz	l11798
 23655                           
 23656                           ; BSR set to: 0
 23657                           ;fat_filelib.c: 259: tailNum++;
 23658                           
 23659                           ; BSR set to: 0
 23660                           
 23661                           ; BSR set to: 0
 23662                           ;fat_filelib.c: 257: break;
 23663  00D806  0101               	movlb	1	; () banked
 23664  00D808  4B7A               	infsnz	__create_directory@tailNum& (0+255),f,b
 23665  00D80A  2B7B               	incf	(__create_directory@tailNum+1)& (0+255),f,b
 23666                           
 23667                           ; BSR set to: 1
 23668                           ;fat_filelib.c: 260: }
 23669                           ;fat_filelib.c: 261: while (tailNum < 9999);
 23670  00D80C  517B               	movf	(__create_directory@tailNum+1)& (0+255),w,b
 23671  00D80E  0A80               	xorlw	128
 23672  00D810  0F59               	addlw	-167
 23673  00D812  0E0F               	movlw	15
 23674  00D814  B4D8               	btfsc	status,2,c
 23675  00D816  5D7A               	subwf	__create_directory@tailNum& (0+255),w,b
 23676  00D818  E39C               	bnc	l11782
 23677  00D81A                     l11798:
 23678                           
 23679                           ;fat_filelib.c: 264: if (tailNum == 9999)
 23680  00D81A  0101               	movlb	1	; () banked
 23681  00D81C  517B               	movf	(__create_directory@tailNum+1)& (0+255),w,b
 23682  00D81E  0A27               	xorlw	39
 23683  00D820  0E0F               	movlw	15
 23684  00D822  B4D8               	btfsc	status,2,c
 23685  00D824  197A               	xorwf	__create_directory@tailNum& (0+255),w,b
 23686  00D826  E11F               	bnz	l11808
 23687                           
 23688                           ; BSR set to: 1
 23689                           ;fat_filelib.c: 265: {
 23690                           ;fat_filelib.c: 267: fatfs_free_cluster_chain(&_fs, file->startcluster);
 23691  00D828  0E09               	movlw	high __fs
 23692  00D82A  0100               	movlb	0	; () banked
 23693  00D82C  6F81               	movwf	(fatfs_free_cluster_chain@fs+1)& (0+255),b
 23694  00D82E  0E78               	movlw	low __fs
 23695  00D830  6F80               	movwf	fatfs_free_cluster_chain@fs& (0+255),b
 23696  00D832  EE20 F004          	lfsr	2,4
 23697  00D836  0101               	movlb	1	; () banked
 23698  00D838  517C               	movf	__create_directory@file& (0+255),w,b
 23699  00D83A  26D9               	addwf	fsr2l,f,c
 23700  00D83C  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23701  00D83E  22DA               	addwfc	fsr2h,f,c
 23702  00D840  CFDE F082          	movff	postinc2,fatfs_free_cluster_chain@start_cluster
 23703  00D844  CFDE F083          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+1
 23704  00D848  CFDE F084          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+2
 23705  00D84C  0100               	movlb	0	; () banked
 23706  00D84E  CFDE F085          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+3
 23707  00D852  ECF6  F02A         	call	_fatfs_free_cluster_chain	;wreg free
 23708                           
 23709                           ;fat_filelib.c: 269: _free_file(file);
 23710  00D856  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23711  00D85A  0101               	movlb	1	; () banked
 23712  00D85C  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23713  00D860  EC8F  F020         	call	__free_file	;wreg free
 23714  00D864  D05F               	goto	L71
 23715  00D866                     l11808:
 23716                           
 23717                           ;fat_filelib.c: 271: }
 23718                           ;fat_filelib.c: 298: if (!fatfs_add_file_entry(&_fs, file->parentcluster, (char*)file->f
      +                          ilename, (char*)file->shortfilename, file->startcluster, 0, 1))
 23719  00D866  0E09               	movlw	high __fs
 23720  00D868  0100               	movlb	0	; () banked
 23721  00D86A  6FCD               	movwf	(fatfs_add_file_entry@fs+1)& (0+255),b
 23722  00D86C  0E78               	movlw	low __fs
 23723  00D86E  6FCC               	movwf	fatfs_add_file_entry@fs& (0+255),b
 23724  00D870  C17C  FFD9         	movff	__create_directory@file,fsr2l
 23725  00D874  C17D  FFDA         	movff	__create_directory@file+1,fsr2h
 23726  00D878  CFDE F0CE          	movff	postinc2,fatfs_add_file_entry@dirCluster
 23727  00D87C  CFDE F0CF          	movff	postinc2,fatfs_add_file_entry@dirCluster+1
 23728  00D880  CFDE F0D0          	movff	postinc2,fatfs_add_file_entry@dirCluster+2
 23729  00D884  CFDE F0D1          	movff	postinc2,fatfs_add_file_entry@dirCluster+3
 23730  00D888  0E1C               	movlw	28
 23731  00D88A  0101               	movlb	1	; () banked
 23732  00D88C  257C               	addwf	__create_directory@file& (0+255),w,b
 23733  00D88E  0100               	movlb	0	; () banked
 23734  00D890  6FD2               	movwf	fatfs_add_file_entry@filename& (0+255),b
 23735  00D892  0E00               	movlw	0
 23736  00D894  0101               	movlb	1	; () banked
 23737  00D896  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23738  00D898  0100               	movlb	0	; () banked
 23739  00D89A  6FD3               	movwf	(fatfs_add_file_entry@filename+1)& (0+255),b
 23740  00D89C  0E26               	movlw	38
 23741  00D89E  0101               	movlb	1	; () banked
 23742  00D8A0  257C               	addwf	__create_directory@file& (0+255),w,b
 23743  00D8A2  0100               	movlb	0	; () banked
 23744  00D8A4  6FD4               	movwf	fatfs_add_file_entry@shortfilename& (0+255),b
 23745  00D8A6  0E00               	movlw	0
 23746  00D8A8  0101               	movlb	1	; () banked
 23747  00D8AA  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23748  00D8AC  0100               	movlb	0	; () banked
 23749  00D8AE  6FD5               	movwf	(fatfs_add_file_entry@shortfilename+1)& (0+255),b
 23750  00D8B0  EE20 F004          	lfsr	2,4
 23751  00D8B4  0101               	movlb	1	; () banked
 23752  00D8B6  517C               	movf	__create_directory@file& (0+255),w,b
 23753  00D8B8  26D9               	addwf	fsr2l,f,c
 23754  00D8BA  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23755  00D8BC  22DA               	addwfc	fsr2h,f,c
 23756  00D8BE  CFDE F0D6          	movff	postinc2,fatfs_add_file_entry@startCluster
 23757  00D8C2  CFDE F0D7          	movff	postinc2,fatfs_add_file_entry@startCluster+1
 23758  00D8C6  CFDE F0D8          	movff	postinc2,fatfs_add_file_entry@startCluster+2
 23759  00D8CA  CFDE F0D9          	movff	postinc2,fatfs_add_file_entry@startCluster+3
 23760  00D8CE  0100               	movlb	0	; () banked
 23761  00D8D0  6BDA               	clrf	fatfs_add_file_entry@size& (0+255),b
 23762  00D8D2  6BDB               	clrf	(fatfs_add_file_entry@size+1)& (0+255),b
 23763  00D8D4  6BDC               	clrf	(fatfs_add_file_entry@size+2)& (0+255),b
 23764  00D8D6  6BDD               	clrf	(fatfs_add_file_entry@size+3)& (0+255),b
 23765  00D8D8  6BDF               	clrf	(fatfs_add_file_entry@dir+1)& (0+255),b
 23766  00D8DA  0E01               	movlw	1
 23767  00D8DC  6FDE               	movwf	fatfs_add_file_entry@dir& (0+255),b
 23768  00D8DE  EC71  F056         	call	_fatfs_add_file_entry	;wreg free
 23769  00D8E2  0100               	movlb	0	; () banked
 23770  00D8E4  51CD               	movf	(?_fatfs_add_file_entry+1)& (0+255),w,b
 23771  00D8E6  11CC               	iorwf	?_fatfs_add_file_entry& (0+255),w,b
 23772  00D8E8  E121               	bnz	l11818
 23773                           
 23774                           ; BSR set to: 0
 23775                           ;fat_filelib.c: 299: {
 23776                           ;fat_filelib.c: 301: fatfs_free_cluster_chain(&_fs, file->startcluster);
 23777  00D8EA  0E09               	movlw	high __fs
 23778  00D8EC  6F81               	movwf	(fatfs_free_cluster_chain@fs+1)& (0+255),b
 23779  00D8EE  0E78               	movlw	low __fs
 23780  00D8F0  6F80               	movwf	fatfs_free_cluster_chain@fs& (0+255),b
 23781  00D8F2  EE20 F004          	lfsr	2,4
 23782  00D8F6  0101               	movlb	1	; () banked
 23783  00D8F8  517C               	movf	__create_directory@file& (0+255),w,b
 23784  00D8FA  26D9               	addwf	fsr2l,f,c
 23785  00D8FC  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23786  00D8FE  22DA               	addwfc	fsr2h,f,c
 23787  00D900  CFDE F082          	movff	postinc2,fatfs_free_cluster_chain@start_cluster
 23788  00D904  CFDE F083          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+1
 23789  00D908  CFDE F084          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+2
 23790  00D90C  0100               	movlb	0	; () banked
 23791  00D90E  CFDE F085          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+3
 23792  00D912  ECF6  F02A         	call	_fatfs_free_cluster_chain	;wreg free
 23793                           
 23794                           ;fat_filelib.c: 303: _free_file(file);
 23795  00D916  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23796  00D91A  0101               	movlb	1	; () banked
 23797  00D91C  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23798  00D920  EC8F  F020         	call	__free_file	;wreg free
 23799  00D924                     L71:
 23800                           
 23801                           ;fat_filelib.c: 304: return 0;
 23802  00D924  0E00               	movlw	0
 23803  00D926  0100               	movlb	0	; () banked
 23804  00D928  6FF3               	movwf	(?__create_directory+1)& (0+255),b
 23805  00D92A  D054               	goto	L72
 23806  00D92C                     l11818:
 23807                           
 23808                           ; BSR set to: 0
 23809                           ;fat_filelib.c: 305: }
 23810                           ;fat_filelib.c: 308: file->filelength = 0;
 23811  00D92C  EE20 F00C          	lfsr	2,12
 23812  00D930  0101               	movlb	1	; () banked
 23813  00D932  517C               	movf	__create_directory@file& (0+255),w,b
 23814  00D934  26D9               	addwf	fsr2l,f,c
 23815  00D936  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23816  00D938  22DA               	addwfc	fsr2h,f,c
 23817  00D93A  6ADE               	clrf	postinc2,c
 23818  00D93C  6ADE               	clrf	postinc2,c
 23819  00D93E  6ADE               	clrf	postinc2,c
 23820  00D940  6ADD               	clrf	postdec2,c
 23821                           
 23822                           ;fat_filelib.c: 309: file->bytenum = 0;
 23823  00D942  EE20 F008          	lfsr	2,8
 23824  00D946  517C               	movf	__create_directory@file& (0+255),w,b
 23825  00D948  26D9               	addwf	fsr2l,f,c
 23826  00D94A  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23827  00D94C  22DA               	addwfc	fsr2h,f,c
 23828  00D94E  6ADE               	clrf	postinc2,c
 23829  00D950  6ADE               	clrf	postinc2,c
 23830  00D952  6ADE               	clrf	postinc2,c
 23831  00D954  6ADD               	clrf	postdec2,c
 23832                           
 23833                           ;fat_filelib.c: 310: file->file_data_address = 0xFFFFFFFF;
 23834  00D956  EE22 F039          	lfsr	2,569
 23835  00D95A  517C               	movf	__create_directory@file& (0+255),w,b
 23836  00D95C  26D9               	addwf	fsr2l,f,c
 23837  00D95E  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23838  00D960  22DA               	addwfc	fsr2h,f,c
 23839  00D962  68DE               	setf	postinc2,c
 23840  00D964  68DE               	setf	postinc2,c
 23841  00D966  68DE               	setf	postinc2,c
 23842  00D968  68DD               	setf	postdec2,c
 23843                           
 23844                           ;fat_filelib.c: 311: file->file_data_dirty = 0;
 23845  00D96A  EE22 F03D          	lfsr	2,573
 23846  00D96E  517C               	movf	__create_directory@file& (0+255),w,b
 23847  00D970  26D9               	addwf	fsr2l,f,c
 23848  00D972  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23849  00D974  22DA               	addwfc	fsr2h,f,c
 23850  00D976  6ADE               	clrf	postinc2,c
 23851  00D978  6ADD               	clrf	postdec2,c
 23852                           
 23853                           ;fat_filelib.c: 312: file->filelength_changed = 0;
 23854  00D97A  EE20 F010          	lfsr	2,16
 23855  00D97E  517C               	movf	__create_directory@file& (0+255),w,b
 23856  00D980  26D9               	addwf	fsr2l,f,c
 23857  00D982  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23858  00D984  22DA               	addwfc	fsr2h,f,c
 23859  00D986  6ADE               	clrf	postinc2,c
 23860  00D988  6ADD               	clrf	postdec2,c
 23861                           
 23862                           ;fat_filelib.c: 315: file->last_fat_lookup.ClusterIdx = 0xFFFFFFFF;
 23863  00D98A  EE20 F031          	lfsr	2,49
 23864  00D98E  517C               	movf	__create_directory@file& (0+255),w,b
 23865  00D990  26D9               	addwf	fsr2l,f,c
 23866  00D992  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23867  00D994  22DA               	addwfc	fsr2h,f,c
 23868  00D996  68DE               	setf	postinc2,c
 23869  00D998  68DE               	setf	postinc2,c
 23870  00D99A  68DE               	setf	postinc2,c
 23871  00D99C  68DD               	setf	postdec2,c
 23872                           
 23873                           ;fat_filelib.c: 316: file->last_fat_lookup.CurrentCluster = 0xFFFFFFFF;
 23874  00D99E  EE20 F035          	lfsr	2,53
 23875  00D9A2  517C               	movf	__create_directory@file& (0+255),w,b
 23876  00D9A4  26D9               	addwf	fsr2l,f,c
 23877  00D9A6  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23878  00D9A8  22DA               	addwfc	fsr2h,f,c
 23879  00D9AA  68DE               	setf	postinc2,c
 23880  00D9AC  68DE               	setf	postinc2,c
 23881  00D9AE  68DE               	setf	postinc2,c
 23882  00D9B0  68DD               	setf	postdec2,c
 23883                           
 23884                           ; BSR set to: 1
 23885                           ;fat_filelib.c: 318: fatfs_fat_purge(&_fs);
 23886  00D9B2  0E09               	movlw	high __fs
 23887  00D9B4  6E35               	movwf	fatfs_fat_purge@fs+1,c
 23888  00D9B6  0E78               	movlw	low __fs
 23889  00D9B8  6E34               	movwf	fatfs_fat_purge@fs,c
 23890  00D9BA  ECC3  F022         	call	_fatfs_fat_purge	;wreg free
 23891                           
 23892                           ;fat_filelib.c: 320: _free_file(file);
 23893  00D9BE  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23894  00D9C2  0101               	movlb	1	; () banked
 23895  00D9C4  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23896  00D9C8  EC8F  F020         	call	__free_file	;wreg free
 23897                           
 23898                           ;fat_filelib.c: 321: return 1;
 23899  00D9CC  0E00               	movlw	0
 23900  00D9CE  0100               	movlb	0	; () banked
 23901  00D9D0  6FF3               	movwf	(?__create_directory+1)& (0+255),b
 23902  00D9D2  0E01               	movlw	1
 23903  00D9D4                     L72:
 23904  00D9D4  0100               	movlb	0	; () banked
 23905  00D9D6  6FF2               	movwf	?__create_directory& (0+255),b
 23906                           
 23907                           ; BSR set to: 0
 23908                           
 23909                           ; BSR set to: 0
 23910  00D9D8  0012               	return	
 23911  00D9DA                     __end_of__create_directory:
 23912                           	opt stack 0
 23913                           tosu	equ	0xFFF
 23914                           tosh	equ	0xFFE
 23915                           tosl	equ	0xFFD
 23916                           pclath	equ	0xFFA
 23917                           tblptru	equ	0xFF8
 23918                           tblptrh	equ	0xFF7
 23919                           tblptrl	equ	0xFF6
 23920                           tablat	equ	0xFF5
 23921                           prodh	equ	0xFF4
 23922                           prodl	equ	0xFF3
 23923                           indf0	equ	0xFEF
 23924                           postinc0	equ	0xFEE
 23925                           fsr0h	equ	0xFEA
 23926                           fsr0l	equ	0xFE9
 23927                           wreg	equ	0xFE8
 23928                           indf1	equ	0xFE7
 23929                           postinc1	equ	0xFE6
 23930                           postdec1	equ	0xFE5
 23931                           fsr1h	equ	0xFE2
 23932                           fsr1l	equ	0xFE1
 23933                           indf2	equ	0xFDF
 23934                           postinc2	equ	0xFDE
 23935                           postdec2	equ	0xFDD
 23936                           fsr2h	equ	0xFDA
 23937                           fsr2l	equ	0xFD9
 23938                           status	equ	0xFD8
 23939                           
 23940 ;; *************** function _fatfs_split_path *****************
 23941 ;; Defined at:
 23942 ;;		line 151 in file "fat_string.c"
 23943 ;; Parameters:    Size  Location     Type
 23944 ;;  full_path       2   28[COMRAM] PTR unsigned char 
 23945 ;;		 -> s(17), m(30), 
 23946 ;;  path            2   30[COMRAM] PTR unsigned char 
 23947 ;;		 -> RAM(3967), NULL(0), 
 23948 ;;  max_path        2   32[COMRAM] int 
 23949 ;;  filename        2   34[COMRAM] PTR unsigned char 
 23950 ;;		 -> RAM(3967), NULL(0), 
 23951 ;;  max_filename    2   36[COMRAM] int 
 23952 ;; Auto vars:     Size  Location     Type
 23953 ;;  strindex        2   44[COMRAM] int 
 23954 ;;  levels          2   42[COMRAM] int 
 23955 ;; Return value:  Size  Location     Type
 23956 ;;                  2   28[COMRAM] int 
 23957 ;; Registers used:
 23958 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 23959 ;; Tracked objects:
 23960 ;;		On entry : 0/0
 23961 ;;		On exit  : 0/0
 23962 ;;		Unchanged: 0/0
 23963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23964 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23965 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23966 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23967 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23968 ;;Total ram usage:       18 bytes
 23969 ;; Hardware stack levels used:    1
 23970 ;; Hardware stack levels required when called:    2
 23971 ;; This function calls:
 23972 ;;		_fatfs_get_substring
 23973 ;;		_fatfs_total_path_levels
 23974 ;;		_memcpy
 23975 ;;		_strlen
 23976 ;; This function is called by:
 23977 ;;		__create_directory
 23978 ;;		__open_file
 23979 ;;		__create_file
 23980 ;; This function uses a non-reentrant model
 23981 ;;
 23982                           
 23983                           	psect	text66
 23984  005E3A                     __ptext66:
 23985                           	opt stack 0
 23986  005E3A                     _fatfs_split_path:
 23987                           	opt stack 24
 23988                           
 23989                           ;fat_string.c: 153: int strindex;
 23990                           ;fat_string.c: 156: int levels = fatfs_total_path_levels(full_path);
 23991                           
 23992                           ; BSR set to: 0
 23993                           ;incstack = 0
 23994  005E3A  C01E  F002         	movff	fatfs_split_path@full_path+1,fatfs_total_path_levels@path+1
 23995  005E3E  C01D  F001         	movff	fatfs_split_path@full_path,fatfs_total_path_levels@path
 23996  005E42  ECCD  F032         	call	_fatfs_total_path_levels	;wreg free
 23997  005E46  C001  F02B         	movff	?_fatfs_total_path_levels,fatfs_split_path@levels
 23998  005E4A  C002  F02C         	movff	?_fatfs_total_path_levels+1,fatfs_split_path@levels+1
 23999                           
 24000                           ;fat_string.c: 157: if (levels == -1)
 24001  005E4E  282B               	incf	fatfs_split_path@levels,w,c
 24002  005E50  B4D8               	btfsc	status,2,c
 24003  005E52  282C               	incf	fatfs_split_path@levels+1,w,c
 24004  005E54  E015               	bz	u11990
 24005                           
 24006                           ;fat_string.c: 161: if (fatfs_get_substring(full_path, levels, filename, max_filename) !
      +                          = 0)
 24007                           
 24008                           ;fat_string.c: 158: return -1;
 24009  005E56  C01E  F008         	movff	fatfs_split_path@full_path+1,fatfs_get_substring@path+1
 24010  005E5A  C01D  F007         	movff	fatfs_split_path@full_path,fatfs_get_substring@path
 24011  005E5E  C02B  F009         	movff	fatfs_split_path@levels,fatfs_get_substring@levelreq
 24012  005E62  C02C  F00A         	movff	fatfs_split_path@levels+1,fatfs_get_substring@levelreq+1
 24013  005E66  C024  F00C         	movff	fatfs_split_path@filename+1,fatfs_get_substring@output+1
 24014  005E6A  C023  F00B         	movff	fatfs_split_path@filename,fatfs_get_substring@output
 24015  005E6E  C025  F00D         	movff	fatfs_split_path@max_filename,fatfs_get_substring@max_len
 24016  005E72  C026  F00E         	movff	fatfs_split_path@max_filename+1,fatfs_get_substring@max_len+1
 24017  005E76  EC5E  F03D         	call	_fatfs_get_substring	;wreg free
 24018  005E7A  5008               	movf	?_fatfs_get_substring+1,w,c
 24019  005E7C  1007               	iorwf	?_fatfs_get_substring,w,c
 24020  005E7E  E003               	bz	l10606
 24021  005E80                     u11990:
 24022                           
 24023                           ;fat_string.c: 162: return -1;
 24024  005E80  681D               	setf	?_fatfs_split_path,c
 24025  005E82  681E               	setf	?_fatfs_split_path+1,c
 24026  005E84  D053               	goto	l1091
 24027  005E86                     l10606:
 24028                           
 24029                           ;fat_string.c: 165: if (levels == 0)
 24030  005E86  502C               	movf	fatfs_split_path@levels+1,w,c
 24031  005E88  102B               	iorwf	fatfs_split_path@levels,w,c
 24032  005E8A  E105               	bnz	l10610
 24033                           
 24034                           ;fat_string.c: 166: path[0] = '\0';
 24035  005E8C  C01F  FFD9         	movff	fatfs_split_path@path,fsr2l
 24036  005E90  C020  FFDA         	movff	fatfs_split_path@path+1,fsr2h
 24037  005E94  D047               	goto	L73
 24038  005E96                     l10610:
 24039                           
 24040                           ;fat_string.c: 167: else
 24041                           ;fat_string.c: 168: {
 24042                           ;fat_string.c: 169: strindex = (int)strlen(full_path) - (int)strlen(filename);
 24043  005E96  C01E  F002         	movff	fatfs_split_path@full_path+1,strlen@s+1
 24044  005E9A  C01D  F001         	movff	fatfs_split_path@full_path,strlen@s
 24045  005E9E  EC71  F022         	call	_strlen	;wreg free
 24046  005EA2  C001  F027         	movff	?_strlen,??_fatfs_split_path
 24047  005EA6  C002  F028         	movff	?_strlen+1,??_fatfs_split_path+1
 24048  005EAA  C024  F002         	movff	fatfs_split_path@filename+1,strlen@s+1
 24049  005EAE  C023  F001         	movff	fatfs_split_path@filename,strlen@s
 24050  005EB2  EC71  F022         	call	_strlen	;wreg free
 24051  005EB6  1E01               	comf	?_strlen,f,c
 24052  005EB8  1E02               	comf	?_strlen+1,f,c
 24053  005EBA  4A01               	infsnz	?_strlen,f,c
 24054  005EBC  2A02               	incf	?_strlen+1,f,c
 24055  005EBE  5001               	movf	?_strlen,w,c
 24056  005EC0  2427               	addwf	??_fatfs_split_path,w,c
 24057  005EC2  6E2D               	movwf	fatfs_split_path@strindex,c
 24058  005EC4  5002               	movf	?_strlen+1,w,c
 24059  005EC6  2028               	addwfc	??_fatfs_split_path+1,w,c
 24060  005EC8  6E2E               	movwf	fatfs_split_path@strindex+1,c
 24061                           
 24062                           ;fat_string.c: 170: if (strindex > max_path)
 24063  005ECA  5022               	movf	fatfs_split_path@max_path+1,w,c
 24064  005ECC  0A80               	xorlw	128
 24065  005ECE  6E27               	movwf	??_fatfs_split_path& (0+255),c
 24066  005ED0  502D               	movf	fatfs_split_path@strindex,w,c
 24067  005ED2  5C21               	subwf	fatfs_split_path@max_path,w,c
 24068  005ED4  502E               	movf	fatfs_split_path@strindex+1,w,c
 24069  005ED6  0A80               	xorlw	128
 24070  005ED8  5827               	subwfb	??_fatfs_split_path& (0+255),w,c
 24071  005EDA  E204               	bc	l10616
 24072                           
 24073                           ;fat_string.c: 171: strindex = max_path;
 24074  005EDC  C021  F02D         	movff	fatfs_split_path@max_path,fatfs_split_path@strindex
 24075  005EE0  C022  F02E         	movff	fatfs_split_path@max_path+1,fatfs_split_path@strindex+1
 24076  005EE4                     l10616:
 24077                           
 24078                           ;fat_string.c: 173: memcpy(path, full_path, strindex);
 24079  005EE4  C020  F002         	movff	fatfs_split_path@path+1,memcpy@d1+1
 24080  005EE8  C01F  F001         	movff	fatfs_split_path@path,memcpy@d1
 24081  005EEC  0E20               	movlw	32
 24082  005EEE  6E05               	movwf	memcpy@s1+2,c
 24083  005EF0  C01E  F004         	movff	fatfs_split_path@full_path+1,memcpy@s1+1
 24084  005EF4  C01D  F003         	movff	fatfs_split_path@full_path,memcpy@s1
 24085  005EF8  C02D  F006         	movff	fatfs_split_path@strindex,memcpy@n
 24086  005EFC  C02E  F007         	movff	fatfs_split_path@strindex+1,memcpy@n+1
 24087  005F00  ECA4  F023         	call	_memcpy	;wreg free
 24088                           
 24089                           ;fat_string.c: 174: path[strindex-1] = '\0';
 24090  005F04  6827               	setf	??_fatfs_split_path& (0+255),c
 24091  005F06  6828               	setf	(??_fatfs_split_path+1)& (0+255),c
 24092  005F08  C02D  F029         	movff	fatfs_split_path@strindex,??_fatfs_split_path+2
 24093  005F0C  C02E  F02A         	movff	fatfs_split_path@strindex+1,??_fatfs_split_path+3
 24094  005F10  5027               	movf	??_fatfs_split_path,w,c
 24095  005F12  2629               	addwf	??_fatfs_split_path+2,f,c
 24096  005F14  5028               	movf	??_fatfs_split_path+1,w,c
 24097  005F16  222A               	addwfc	??_fatfs_split_path+3,f,c
 24098  005F18  5029               	movf	??_fatfs_split_path+2,w,c
 24099  005F1A  241F               	addwf	fatfs_split_path@path,w,c
 24100  005F1C  6ED9               	movwf	fsr2l,c
 24101  005F1E  502A               	movf	??_fatfs_split_path+3,w,c
 24102  005F20  2020               	addwfc	fatfs_split_path@path+1,w,c
 24103  005F22  6EDA               	movwf	fsr2h,c
 24104  005F24                     L73:
 24105  005F24  0E00               	movlw	0
 24106  005F26  6EDF               	movwf	indf2,c
 24107                           
 24108                           ;fat_string.c: 175: }
 24109                           ;fat_string.c: 177: return 0;
 24110  005F28  6E1E               	movwf	?_fatfs_split_path+1,c
 24111  005F2A  6E1D               	movwf	?_fatfs_split_path,c
 24112  005F2C                     l1091:
 24113  005F2C  0012               	return	
 24114  005F2E                     __end_of_fatfs_split_path:
 24115                           	opt stack 0
 24116                           tosu	equ	0xFFF
 24117                           tosh	equ	0xFFE
 24118                           tosl	equ	0xFFD
 24119                           pclath	equ	0xFFA
 24120                           tblptru	equ	0xFF8
 24121                           tblptrh	equ	0xFF7
 24122                           tblptrl	equ	0xFF6
 24123                           tablat	equ	0xFF5
 24124                           prodh	equ	0xFF4
 24125                           prodl	equ	0xFF3
 24126                           indf0	equ	0xFEF
 24127                           postinc0	equ	0xFEE
 24128                           fsr0h	equ	0xFEA
 24129                           fsr0l	equ	0xFE9
 24130                           wreg	equ	0xFE8
 24131                           indf1	equ	0xFE7
 24132                           postinc1	equ	0xFE6
 24133                           postdec1	equ	0xFE5
 24134                           fsr1h	equ	0xFE2
 24135                           fsr1l	equ	0xFE1
 24136                           indf2	equ	0xFDF
 24137                           postinc2	equ	0xFDE
 24138                           postdec2	equ	0xFDD
 24139                           fsr2h	equ	0xFDA
 24140                           fsr2l	equ	0xFD9
 24141                           status	equ	0xFD8
 24142                           
 24143 ;; *************** function _fatfs_sfn_exists *****************
 24144 ;; Defined at:
 24145 ;;		line 512 in file "fat_access.c"
 24146 ;; Parameters:    Size  Location     Type
 24147 ;;  fs              2   44[BANK0 ] PTR struct fatfs
 24148 ;;		 -> _fs(1095), 
 24149 ;;  Cluster         4   46[BANK0 ] unsigned long 
 24150 ;;  shortname       2   50[BANK0 ] PTR unsigned char 
 24151 ;;		 -> RAM(3967), NULL(0), 
 24152 ;; Auto vars:     Size  Location     Type
 24153 ;;  directoryEnt    2   59[BANK0 ] PTR struct fat_dir_entry
 24154 ;;		 -> _fs.currentsector.sector.currentsector.sector(512), 
 24155 ;;  recordoffset    2   56[BANK0 ] unsigned short 
 24156 ;;  x               2   54[BANK0 ] int 
 24157 ;;  item            1   58[BANK0 ] unsigned char 
 24158 ;; Return value:  Size  Location     Type
 24159 ;;                  2   44[BANK0 ] int 
 24160 ;; Registers used:
 24161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24162 ;; Tracked objects:
 24163 ;;		On entry : 0/0
 24164 ;;		On exit  : 0/0
 24165 ;;		Unchanged: 0/0
 24166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24167 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24168 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24169 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24170 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24171 ;;Total ram usage:       17 bytes
 24172 ;; Hardware stack levels used:    1
 24173 ;; Hardware stack levels required when called:    7
 24174 ;; This function calls:
 24175 ;;		_fatfs_entry_lfn_invalid
 24176 ;;		_fatfs_entry_lfn_text
 24177 ;;		_fatfs_entry_sfn_only
 24178 ;;		_fatfs_sector_reader
 24179 ;;		_strncmp
 24180 ;; This function is called by:
 24181 ;;		__create_directory
 24182 ;;		__create_file
 24183 ;; This function uses a non-reentrant model
 24184 ;;
 24185                           
 24186                           	psect	text67
 24187  00622A                     __ptext67:
 24188                           	opt stack 0
 24189  00622A                     _fatfs_sfn_exists:
 24190                           	opt stack 19
 24191                           
 24192                           ;fat_access.c: 514: uint8 item=0;
 24193                           
 24194                           ;incstack = 0
 24195  00622A  0100               	movlb	0	; () banked
 24196  00622C  6BBA               	clrf	fatfs_sfn_exists@item& (0+255),b
 24197                           
 24198                           ;fat_access.c: 515: uint16 recordoffset = 0;
 24199  00622E  6BB9               	clrf	(fatfs_sfn_exists@recordoffset+1)& (0+255),b
 24200  006230  6BB8               	clrf	fatfs_sfn_exists@recordoffset& (0+255),b
 24201                           
 24202                           ;fat_access.c: 516: int x=0;
 24203  006232  6BB7               	clrf	(fatfs_sfn_exists@x+1)& (0+255),b
 24204  006234  6BB6               	clrf	fatfs_sfn_exists@x& (0+255),b
 24205  006236                     l10432:
 24206                           
 24207                           ; BSR set to: 0
 24208                           ;fat_access.c: 521: {
 24209                           ;fat_access.c: 523: if (fatfs_sector_reader(fs, Cluster, x++, 0))
 24210  006236  C0AD  F081         	movff	fatfs_sfn_exists@fs+1,fatfs_sector_reader@fs+1
 24211  00623A  C0AC  F080         	movff	fatfs_sfn_exists@fs,fatfs_sector_reader@fs
 24212  00623E  C0AE  F082         	movff	fatfs_sfn_exists@Cluster,fatfs_sector_reader@start_cluster
 24213  006242  C0AF  F083         	movff	fatfs_sfn_exists@Cluster+1,fatfs_sector_reader@start_cluster+1
 24214  006246  C0B0  F084         	movff	fatfs_sfn_exists@Cluster+2,fatfs_sector_reader@start_cluster+2
 24215  00624A  C0B1  F085         	movff	fatfs_sfn_exists@Cluster+3,fatfs_sector_reader@start_cluster+3
 24216  00624E  0100               	movlb	0	; () banked
 24217  006250  51B6               	movf	fatfs_sfn_exists@x& (0+255),w,b
 24218  006252  6FB4               	movwf	??_fatfs_sfn_exists& (0+255),b
 24219  006254  51B7               	movf	(fatfs_sfn_exists@x+1)& (0+255),w,b
 24220  006256  6FB5               	movwf	(??_fatfs_sfn_exists+1)& (0+255),b
 24221  006258  4BB6               	infsnz	fatfs_sfn_exists@x& (0+255),f,b
 24222  00625A  2BB7               	incf	(fatfs_sfn_exists@x+1)& (0+255),f,b
 24223  00625C  C0B4  F086         	movff	??_fatfs_sfn_exists,fatfs_sector_reader@offset
 24224  006260  C0B5  F087         	movff	??_fatfs_sfn_exists+1,fatfs_sector_reader@offset+1
 24225  006264  0E00               	movlw	0
 24226  006266  BF87               	btfsc	(fatfs_sector_reader@offset+1)& (0+255),7,b
 24227  006268  0EFF               	movlw	-1
 24228  00626A  6F88               	movwf	(fatfs_sector_reader@offset+2)& (0+255),b
 24229  00626C  6F89               	movwf	(fatfs_sector_reader@offset+3)& (0+255),b
 24230  00626E  0E00               	movlw	0
 24231  006270  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
 24232  006272  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
 24233  006274  ECD5  F052         	call	_fatfs_sector_reader	;wreg free
 24234  006278  0100               	movlb	0	; () banked
 24235  00627A  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
 24236  00627C  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
 24237  00627E  E053               	bz	l10464
 24238                           
 24239                           ; BSR set to: 0
 24240                           ;fat_access.c: 524: {
 24241                           ;fat_access.c: 526: for (item = 0; item < (512 / 32); item++)
 24242  006280  6BBA               	clrf	fatfs_sfn_exists@item& (0+255),b
 24243                           
 24244                           ; BSR set to: 0
 24245  006282  0E0F               	movlw	15
 24246  006284  65BA               	cpfsgt	fatfs_sfn_exists@item& (0+255),b
 24247  006286  D001               	goto	l10440
 24248  006288  D7D6               	goto	l10432
 24249  00628A                     l10440:
 24250                           
 24251                           ; BSR set to: 0
 24252                           ;fat_access.c: 527: {
 24253                           ;fat_access.c: 529: recordoffset = 32 * item;
 24254  00628A  0100               	movlb	0	; () banked
 24255  00628C  51BA               	movf	fatfs_sfn_exists@item& (0+255),w,b
 24256  00628E  0D20               	mullw	32
 24257  006290  CFF3 F0B8          	movff	prodl,fatfs_sfn_exists@recordoffset
 24258  006294  CFF4 F0B9          	movff	prodh,fatfs_sfn_exists@recordoffset+1
 24259                           
 24260                           ; BSR set to: 0
 24261                           ;fat_access.c: 532: directoryEntry = (struct fat_dir_entry*)(fs->currentsector.sector+re
      +                          cordoffset);
 24262  006298  C0AC  F0B4         	movff	fatfs_sfn_exists@fs,??_fatfs_sfn_exists
 24263  00629C  C0AD  F0B5         	movff	fatfs_sfn_exists@fs+1,??_fatfs_sfn_exists+1
 24264  0062A0  51B8               	movf	fatfs_sfn_exists@recordoffset& (0+255),w,b
 24265  0062A2  27B4               	addwf	??_fatfs_sfn_exists& (0+255),f,b
 24266  0062A4  51B9               	movf	(fatfs_sfn_exists@recordoffset+1)& (0+255),w,b
 24267  0062A6  23B5               	addwfc	(??_fatfs_sfn_exists+1)& (0+255),f,b
 24268  0062A8  0E31               	movlw	49
 24269  0062AA  25B4               	addwf	??_fatfs_sfn_exists& (0+255),w,b
 24270  0062AC  6FBB               	movwf	fatfs_sfn_exists@directoryEntry& (0+255),b
 24271  0062AE  0E00               	movlw	0
 24272  0062B0  21B5               	addwfc	(??_fatfs_sfn_exists+1)& (0+255),w,b
 24273  0062B2  6FBC               	movwf	(fatfs_sfn_exists@directoryEntry+1)& (0+255),b
 24274                           
 24275                           ; BSR set to: 0
 24276                           ;fat_access.c: 536: if (fatfs_entry_lfn_text(directoryEntry) )
 24277  0062B4  C0BC  F002         	movff	fatfs_sfn_exists@directoryEntry+1,fatfs_entry_lfn_text@entry+1
 24278  0062B8  C0BB  F001         	movff	fatfs_sfn_exists@directoryEntry,fatfs_entry_lfn_text@entry
 24279  0062BC  ECF0  F01F         	call	_fatfs_entry_lfn_text	;wreg free
 24280  0062C0  5002               	movf	?_fatfs_entry_lfn_text+1,w,c
 24281  0062C2  1001               	iorwf	?_fatfs_entry_lfn_text,w,c
 24282  0062C4  E12A               	bnz	l10460
 24283                           
 24284                           ;fat_access.c: 540: else if (fatfs_entry_lfn_invalid(directoryEntry) )
 24285                           
 24286                           ;fat_access.c: 537: ;
 24287  0062C6  C0BC  F002         	movff	fatfs_sfn_exists@directoryEntry+1,fatfs_entry_lfn_invalid@entry+1
 24288  0062CA  0100               	movlb	0	; () banked
 24289  0062CC  C0BB  F001         	movff	fatfs_sfn_exists@directoryEntry,fatfs_entry_lfn_invalid@entry
 24290  0062D0  EC9A  F022         	call	_fatfs_entry_lfn_invalid	;wreg free
 24291  0062D4  5002               	movf	?_fatfs_entry_lfn_invalid+1,w,c
 24292  0062D6  1001               	iorwf	?_fatfs_entry_lfn_invalid,w,c
 24293  0062D8  E120               	bnz	l10460
 24294                           
 24295                           ;fat_access.c: 542: else
 24296                           ;fat_access.c: 545: if (fatfs_entry_sfn_only(directoryEntry) )
 24297                           
 24298                           ;fat_access.c: 541: ;
 24299  0062DA  C0BC  F002         	movff	fatfs_sfn_exists@directoryEntry+1,fatfs_entry_sfn_only@entry+1
 24300  0062DE  0100               	movlb	0	; () banked
 24301  0062E0  C0BB  F001         	movff	fatfs_sfn_exists@directoryEntry,fatfs_entry_sfn_only@entry
 24302  0062E4  ECC6  F024         	call	_fatfs_entry_sfn_only	;wreg free
 24303  0062E8  5002               	movf	?_fatfs_entry_sfn_only+1,w,c
 24304  0062EA  1001               	iorwf	?_fatfs_entry_sfn_only,w,c
 24305  0062EC  E016               	bz	l10460
 24306                           
 24307                           ;fat_access.c: 546: {
 24308                           ;fat_access.c: 547: if (strncmp((const char*)directoryEntry->Name, shortname, 11)==0)
 24309  0062EE  C0BC  F002         	movff	fatfs_sfn_exists@directoryEntry+1,strncmp@s1+1
 24310  0062F2  C0BB  F001         	movff	fatfs_sfn_exists@directoryEntry,strncmp@s1
 24311  0062F6  C0B3  F004         	movff	fatfs_sfn_exists@shortname+1,strncmp@s2+1
 24312  0062FA  0100               	movlb	0	; () banked
 24313  0062FC  C0B2  F003         	movff	fatfs_sfn_exists@shortname,strncmp@s2
 24314  006300  6A06               	clrf	strncmp@len+1,c
 24315  006302  0E0B               	movlw	11
 24316  006304  6E05               	movwf	strncmp@len,c
 24317  006306  EC07  F026         	call	_strncmp	;wreg free
 24318  00630A  5002               	movf	?_strncmp+1,w,c
 24319  00630C  1001               	iorwf	?_strncmp,w,c
 24320  00630E  E105               	bnz	l10460
 24321                           
 24322                           ;fat_access.c: 548: return 1;
 24323  006310  0E00               	movlw	0
 24324  006312  0100               	movlb	0	; () banked
 24325  006314  6FAD               	movwf	(?_fatfs_sfn_exists+1)& (0+255),b
 24326  006316  0E01               	movlw	1
 24327  006318  D009               	goto	L74
 24328  00631A                     l10460:
 24329  00631A  0100               	movlb	0	; () banked
 24330  00631C  2BBA               	incf	fatfs_sfn_exists@item& (0+255),f,b
 24331                           
 24332                           ; BSR set to: 0
 24333  00631E  0E0F               	movlw	15
 24334  006320  65BA               	cpfsgt	fatfs_sfn_exists@item& (0+255),b
 24335  006322  D7B3               	goto	l10440
 24336  006324  D788               	goto	l10432
 24337  006326                     l10464:
 24338                           
 24339                           ; BSR set to: 0
 24340                           ;fat_access.c: 554: }
 24341                           ;fat_access.c: 556: return 0;
 24342  006326  0E00               	movlw	0
 24343  006328  0100               	movlb	0	; () banked
 24344  00632A  6FAD               	movwf	(?_fatfs_sfn_exists+1)& (0+255),b
 24345  00632C                     L74:
 24346  00632C  0100               	movlb	0	; () banked
 24347  00632E  6FAC               	movwf	?_fatfs_sfn_exists& (0+255),b
 24348                           
 24349                           ; BSR set to: 0
 24350                           
 24351                           ; BSR set to: 0
 24352  006330  0012               	return	
 24353  006332                     __end_of_fatfs_sfn_exists:
 24354                           	opt stack 0
 24355                           tosu	equ	0xFFF
 24356                           tosh	equ	0xFFE
 24357                           tosl	equ	0xFFD
 24358                           pclath	equ	0xFFA
 24359                           tblptru	equ	0xFF8
 24360                           tblptrh	equ	0xFF7
 24361                           tblptrl	equ	0xFF6
 24362                           tablat	equ	0xFF5
 24363                           prodh	equ	0xFF4
 24364                           prodl	equ	0xFF3
 24365                           indf0	equ	0xFEF
 24366                           postinc0	equ	0xFEE
 24367                           fsr0h	equ	0xFEA
 24368                           fsr0l	equ	0xFE9
 24369                           wreg	equ	0xFE8
 24370                           indf1	equ	0xFE7
 24371                           postinc1	equ	0xFE6
 24372                           postdec1	equ	0xFE5
 24373                           fsr1h	equ	0xFE2
 24374                           fsr1l	equ	0xFE1
 24375                           indf2	equ	0xFDF
 24376                           postinc2	equ	0xFDE
 24377                           postdec2	equ	0xFDD
 24378                           fsr2h	equ	0xFDA
 24379                           fsr2l	equ	0xFD9
 24380                           status	equ	0xFD8
 24381                           
 24382 ;; *************** function _fatfs_lfn_generate_tail *****************
 24383 ;; Defined at:
 24384 ;;		line 380 in file "fat_misc.c"
 24385 ;; Parameters:    Size  Location     Type
 24386 ;;  sfn_output      2   54[COMRAM] PTR unsigned char 
 24387 ;;		 -> RAM(3967), NULL(0), 
 24388 ;;  sfn_input       2   56[COMRAM] PTR unsigned char 
 24389 ;;		 -> _create_file@shortFilename(11), _create_directory@shortFilename(11), 
 24390 ;;  tailNum         4   58[COMRAM] unsigned long 
 24391 ;; Auto vars:     Size  Location     Type
 24392 ;;  tail_str       12   64[COMRAM] unsigned char [12]
 24393 ;;  tail_chars      2   76[COMRAM] int 
 24394 ;; Return value:  Size  Location     Type
 24395 ;;                  2   54[COMRAM] int 
 24396 ;; Registers used:
 24397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24398 ;; Tracked objects:
 24399 ;;		On entry : 0/0
 24400 ;;		On exit  : 0/0
 24401 ;;		Unchanged: 0/0
 24402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24403 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24404 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24406 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24407 ;;Total ram usage:       24 bytes
 24408 ;; Hardware stack levels used:    1
 24409 ;; Hardware stack levels required when called:    2
 24410 ;; This function calls:
 24411 ;;		_fatfs_itoa
 24412 ;;		_memcpy
 24413 ;;		_memset
 24414 ;;		_strlen
 24415 ;; This function is called by:
 24416 ;;		__create_directory
 24417 ;;		__create_file
 24418 ;; This function uses a non-reentrant model
 24419 ;;
 24420                           
 24421                           	psect	text68
 24422  005892                     __ptext68:
 24423                           	opt stack 0
 24424  005892                     _fatfs_lfn_generate_tail:
 24425                           	opt stack 24
 24426                           
 24427                           ;fat_misc.c: 382: int tail_chars;
 24428                           ;fat_misc.c: 383: char tail_str[12];
 24429                           ;fat_misc.c: 385: if (tailNum > 99999)
 24430                           
 24431                           ; BSR set to: 0
 24432                           ;incstack = 0
 24433  005892  0EA0               	movlw	160
 24434  005894  5C3B               	subwf	fatfs_lfn_generate_tail@tailNum,w,c
 24435  005896  0E86               	movlw	134
 24436  005898  583C               	subwfb	fatfs_lfn_generate_tail@tailNum+1,w,c
 24437  00589A  0E01               	movlw	1
 24438  00589C  583D               	subwfb	fatfs_lfn_generate_tail@tailNum+2,w,c
 24439  00589E  0E00               	movlw	0
 24440  0058A0  583E               	subwfb	fatfs_lfn_generate_tail@tailNum+3,w,c
 24441  0058A2  E252               	bc	l1047
 24442                           
 24443                           ;fat_misc.c: 389: memset(tail_str, 0x00, sizeof(tail_str));
 24444                           
 24445                           ;fat_misc.c: 386: return 0;
 24446                           ;	Return value of _fatfs_lfn_generate_tail is never used
 24447  0058A4  0E00               	movlw	high fatfs_lfn_generate_tail@tail_str
 24448  0058A6  6E02               	movwf	memset@p1+1,c
 24449  0058A8  0E41               	movlw	low fatfs_lfn_generate_tail@tail_str
 24450  0058AA  6E01               	movwf	memset@p1,c
 24451  0058AC  6A04               	clrf	memset@c+1,c
 24452  0058AE  6A03               	clrf	memset@c,c
 24453  0058B0  6A06               	clrf	memset@n+1,c
 24454  0058B2  0E0C               	movlw	12
 24455  0058B4  6E05               	movwf	memset@n,c
 24456  0058B6  EC1A  F020         	call	_memset	;wreg free
 24457                           
 24458                           ;fat_misc.c: 390: tail_str[0] = '~';
 24459  0058BA  0E7E               	movlw	126
 24460  0058BC  6E41               	movwf	fatfs_lfn_generate_tail@tail_str,c
 24461                           
 24462                           ;fat_misc.c: 391: fatfs_itoa(tailNum, tail_str+1);
 24463  0058BE  C03B  F00E         	movff	fatfs_lfn_generate_tail@tailNum,fatfs_itoa@num
 24464  0058C2  C03C  F00F         	movff	fatfs_lfn_generate_tail@tailNum+1,fatfs_itoa@num+1
 24465  0058C6  C03D  F010         	movff	fatfs_lfn_generate_tail@tailNum+2,fatfs_itoa@num+2
 24466  0058CA  C03E  F011         	movff	fatfs_lfn_generate_tail@tailNum+3,fatfs_itoa@num+3
 24467  0058CE  0E00               	movlw	high (fatfs_lfn_generate_tail@tail_str+1)
 24468  0058D0  6E13               	movwf	fatfs_itoa@s+1,c
 24469  0058D2  0E42               	movlw	low (fatfs_lfn_generate_tail@tail_str+1)
 24470  0058D4  6E12               	movwf	fatfs_itoa@s,c
 24471  0058D6  ECA4  F02E         	call	_fatfs_itoa	;wreg free
 24472                           
 24473                           ;fat_misc.c: 394: memcpy(sfn_output, sfn_input, 11);
 24474  0058DA  C038  F002         	movff	fatfs_lfn_generate_tail@sfn_output+1,memcpy@d1+1
 24475  0058DE  C037  F001         	movff	fatfs_lfn_generate_tail@sfn_output,memcpy@d1
 24476  0058E2  0E20               	movlw	32
 24477  0058E4  6E05               	movwf	memcpy@s1+2,c
 24478  0058E6  C03A  F004         	movff	fatfs_lfn_generate_tail@sfn_input+1,memcpy@s1+1
 24479  0058EA  C039  F003         	movff	fatfs_lfn_generate_tail@sfn_input,memcpy@s1
 24480  0058EE  6A07               	clrf	memcpy@n+1,c
 24481  0058F0  0E0B               	movlw	11
 24482  0058F2  6E06               	movwf	memcpy@n,c
 24483  0058F4  ECA4  F023         	call	_memcpy	;wreg free
 24484                           
 24485                           ;fat_misc.c: 397: tail_chars = (int)strlen(tail_str);
 24486  0058F8  0E00               	movlw	high fatfs_lfn_generate_tail@tail_str
 24487  0058FA  6E02               	movwf	strlen@s+1,c
 24488  0058FC  0E41               	movlw	low fatfs_lfn_generate_tail@tail_str
 24489  0058FE  6E01               	movwf	strlen@s,c
 24490  005900  EC71  F022         	call	_strlen	;wreg free
 24491  005904  C001  F04D         	movff	?_strlen,fatfs_lfn_generate_tail@tail_chars
 24492  005908  C002  F04E         	movff	?_strlen+1,fatfs_lfn_generate_tail@tail_chars+1
 24493                           
 24494                           ;fat_misc.c: 398: memcpy(sfn_output+(8-tail_chars), tail_str, tail_chars);
 24495  00590C  C04D  F03F         	movff	fatfs_lfn_generate_tail@tail_chars,??_fatfs_lfn_generate_tail
 24496  005910  C04E  F040         	movff	fatfs_lfn_generate_tail@tail_chars+1,??_fatfs_lfn_generate_tail+1
 24497  005914  1E3F               	comf	??_fatfs_lfn_generate_tail,f,c
 24498  005916  1E40               	comf	??_fatfs_lfn_generate_tail+1,f,c
 24499  005918  4A3F               	infsnz	??_fatfs_lfn_generate_tail,f,c
 24500  00591A  2A40               	incf	??_fatfs_lfn_generate_tail+1,f,c
 24501  00591C  0E08               	movlw	8
 24502  00591E  263F               	addwf	??_fatfs_lfn_generate_tail,f,c
 24503  005920  0E00               	movlw	0
 24504  005922  2240               	addwfc	??_fatfs_lfn_generate_tail+1,f,c
 24505  005924  503F               	movf	??_fatfs_lfn_generate_tail,w,c
 24506  005926  2437               	addwf	fatfs_lfn_generate_tail@sfn_output,w,c
 24507  005928  6E01               	movwf	memcpy@d1,c
 24508  00592A  5040               	movf	??_fatfs_lfn_generate_tail+1,w,c
 24509  00592C  2038               	addwfc	fatfs_lfn_generate_tail@sfn_output+1,w,c
 24510  00592E  6E02               	movwf	memcpy@d1+1,c
 24511  005930  0E20               	movlw	32
 24512  005932  6E05               	movwf	memcpy@s1+2,c
 24513  005934  0E00               	movlw	high fatfs_lfn_generate_tail@tail_str
 24514  005936  6E04               	movwf	memcpy@s1+1,c
 24515  005938  0E41               	movlw	low fatfs_lfn_generate_tail@tail_str
 24516  00593A  6E03               	movwf	memcpy@s1,c
 24517  00593C  C04D  F006         	movff	fatfs_lfn_generate_tail@tail_chars,memcpy@n
 24518  005940  C04E  F007         	movff	fatfs_lfn_generate_tail@tail_chars+1,memcpy@n+1
 24519  005944  ECA4  F023         	call	_memcpy	;wreg free
 24520  005948                     l1047:
 24521  005948  0012               	return	
 24522  00594A                     __end_of_fatfs_lfn_generate_tail:
 24523                           	opt stack 0
 24524                           tosu	equ	0xFFF
 24525                           tosh	equ	0xFFE
 24526                           tosl	equ	0xFFD
 24527                           pclath	equ	0xFFA
 24528                           tblptru	equ	0xFF8
 24529                           tblptrh	equ	0xFF7
 24530                           tblptrl	equ	0xFF6
 24531                           tablat	equ	0xFF5
 24532                           prodh	equ	0xFF4
 24533                           prodl	equ	0xFF3
 24534                           indf0	equ	0xFEF
 24535                           postinc0	equ	0xFEE
 24536                           fsr0h	equ	0xFEA
 24537                           fsr0l	equ	0xFE9
 24538                           wreg	equ	0xFE8
 24539                           indf1	equ	0xFE7
 24540                           postinc1	equ	0xFE6
 24541                           postdec1	equ	0xFE5
 24542                           fsr1h	equ	0xFE2
 24543                           fsr1l	equ	0xFE1
 24544                           indf2	equ	0xFDF
 24545                           postinc2	equ	0xFDE
 24546                           postdec2	equ	0xFDD
 24547                           fsr2h	equ	0xFDA
 24548                           fsr2l	equ	0xFD9
 24549                           status	equ	0xFD8
 24550                           
 24551 ;; *************** function _fatfs_itoa *****************
 24552 ;; Defined at:
 24553 ;;		line 350 in file "fat_misc.c"
 24554 ;; Parameters:    Size  Location     Type
 24555 ;;  num             4   13[COMRAM] unsigned long 
 24556 ;;  s               2   17[COMRAM] PTR unsigned char 
 24557 ;;		 -> fatfs_lfn_generate_tail@tail_str(12), 
 24558 ;; Auto vars:     Size  Location     Type
 24559 ;;  digits         17   23[COMRAM] const unsigned char [17]
 24560 ;;  outbuf         12   40[COMRAM] unsigned char [12]
 24561 ;;  cp              2   52[COMRAM] PTR unsigned char 
 24562 ;;		 -> fatfs_itoa@outbuf(12), 
 24563 ;; Return value:  Size  Location     Type
 24564 ;;		None               void
 24565 ;; Registers used:
 24566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24567 ;; Tracked objects:
 24568 ;;		On entry : 0/0
 24569 ;;		On exit  : 0/0
 24570 ;;		Unchanged: 0/0
 24571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24572 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24573 ;;      Locals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24574 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24575 ;;      Totals:        41       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24576 ;;Total ram usage:       41 bytes
 24577 ;; Hardware stack levels used:    1
 24578 ;; Hardware stack levels required when called:    1
 24579 ;; This function calls:
 24580 ;;		___lldiv
 24581 ;;		___llmod
 24582 ;; This function is called by:
 24583 ;;		_fatfs_lfn_generate_tail
 24584 ;; This function uses a non-reentrant model
 24585 ;;
 24586                           
 24587                           	psect	text69
 24588  005D48                     __ptext69:
 24589                           	opt stack 0
 24590  005D48                     _fatfs_itoa:
 24591                           	opt stack 24
 24592                           
 24593                           ;fat_misc.c: 352: char* cp;
 24594                           ;fat_misc.c: 353: char outbuf[12];
 24595                           ;fat_misc.c: 354: const char digits[] = "0123456789ABCDEF";
 24596                           
 24597                           ;incstack = 0
 24598  005D48  0E47               	movlw	low fatfs_itoa@F407
 24599  005D4A  6EF6               	movwf	tblptrl,c
 24600  005D4C                     	if	1	;There is more than 1 active tblptr byte
 24601  005D4C  0EFA               	movlw	high fatfs_itoa@F407
 24602  005D4E  6EF7               	movwf	tblptrh,c
 24603  005D50                     	endif
 24604  005D50                     	if	1	;There are 3 active tblptr bytes
 24605  005D50  0E00               	movlw	low (fatfs_itoa@F407 shr (0+16))
 24606  005D52  6EF8               	movwf	tblptru,c
 24607  005D54                     	endif
 24608  005D54  EE20  F018         	lfsr	2,fatfs_itoa@digits
 24609  005D58  0E11               	movlw	17
 24610  005D5A                     u11490:
 24611  005D5A  0009               	tblrd		*+
 24612  005D5C  CFF5 FFDE          	movff	tablat,postinc2
 24613  005D60  2EE8               	decfsz	wreg,f,c
 24614  005D62  D7FB               	bra	u11490
 24615                           
 24616                           ;fat_misc.c: 357: cp = outbuf;
 24617  005D64  0E00               	movlw	high fatfs_itoa@outbuf
 24618  005D66  6E36               	movwf	fatfs_itoa@cp+1,c
 24619  005D68  0E29               	movlw	low fatfs_itoa@outbuf
 24620  005D6A  6E35               	movwf	fatfs_itoa@cp,c
 24621  005D6C                     l10282:
 24622                           
 24623                           ;fat_misc.c: 359: {
 24624                           ;fat_misc.c: 360: *cp++ = digits[(int)(num % 10)];
 24625  005D6C  C00E  F001         	movff	fatfs_itoa@num,___llmod@dividend
 24626  005D70  C00F  F002         	movff	fatfs_itoa@num+1,___llmod@dividend+1
 24627  005D74  C010  F003         	movff	fatfs_itoa@num+2,___llmod@dividend+2
 24628  005D78  C011  F004         	movff	fatfs_itoa@num+3,___llmod@dividend+3
 24629  005D7C  0E0A               	movlw	10
 24630  005D7E  6E05               	movwf	___llmod@divisor,c
 24631  005D80  0E00               	movlw	0
 24632  005D82  6A06               	clrf	___llmod@divisor+1,c
 24633  005D84  6A07               	clrf	___llmod@divisor+2,c
 24634  005D86  6A08               	clrf	___llmod@divisor+3,c
 24635  005D88  EC63  F024         	call	___llmod	;wreg free
 24636  005D8C  C001  F014         	movff	?___llmod,??_fatfs_itoa
 24637  005D90  C002  F015         	movff	?___llmod+1,??_fatfs_itoa+1
 24638  005D94  C003  F016         	movff	?___llmod+2,??_fatfs_itoa+2
 24639  005D98  C004  F017         	movff	?___llmod+3,??_fatfs_itoa+3
 24640  005D9C  0E18               	movlw	low fatfs_itoa@digits
 24641  005D9E  2414               	addwf	??_fatfs_itoa,w,c
 24642  005DA0  6ED9               	movwf	fsr2l,c
 24643  005DA2  0E00               	movlw	high fatfs_itoa@digits
 24644  005DA4  2015               	addwfc	??_fatfs_itoa+1,w,c
 24645  005DA6  6EDA               	movwf	fsr2h,c
 24646  005DA8  C035  FFE1         	movff	fatfs_itoa@cp,fsr1l
 24647  005DAC  C036  FFE2         	movff	fatfs_itoa@cp+1,fsr1h
 24648  005DB0  CFDF FFE7          	movff	indf2,indf1
 24649  005DB4  4A35               	infsnz	fatfs_itoa@cp,f,c
 24650  005DB6  2A36               	incf	fatfs_itoa@cp+1,f,c
 24651                           
 24652                           ;fat_misc.c: 361: }
 24653                           ;fat_misc.c: 362: while ((num /= 10) > 0);
 24654  005DB8  C00E  F001         	movff	fatfs_itoa@num,___lldiv@dividend
 24655  005DBC  C00F  F002         	movff	fatfs_itoa@num+1,___lldiv@dividend+1
 24656  005DC0  C010  F003         	movff	fatfs_itoa@num+2,___lldiv@dividend+2
 24657  005DC4  C011  F004         	movff	fatfs_itoa@num+3,___lldiv@dividend+3
 24658  005DC8  0E0A               	movlw	10
 24659  005DCA  6E05               	movwf	___lldiv@divisor,c
 24660  005DCC  0E00               	movlw	0
 24661  005DCE  6A06               	clrf	___lldiv@divisor+1,c
 24662  005DD0  6A07               	clrf	___lldiv@divisor+2,c
 24663  005DD2  6A08               	clrf	___lldiv@divisor+3,c
 24664  005DD4  EC7B  F026         	call	___lldiv	;wreg free
 24665  005DD8  C001  F00E         	movff	?___lldiv,fatfs_itoa@num
 24666  005DDC  C002  F00F         	movff	?___lldiv+1,fatfs_itoa@num+1
 24667  005DE0  C003  F010         	movff	?___lldiv+2,fatfs_itoa@num+2
 24668  005DE4  C004  F011         	movff	?___lldiv+3,fatfs_itoa@num+3
 24669  005DE8  5011               	movf	(fatfs_itoa@num+3)& (0+255),w,c
 24670  005DEA  100E               	iorwf	fatfs_itoa@num& (0+255),w,c
 24671  005DEC  100F               	iorwf	(fatfs_itoa@num+1)& (0+255),w,c
 24672  005DEE  1010               	iorwf	(fatfs_itoa@num+2)& (0+255),w,c
 24673  005DF0  E1BD               	bnz	l10282
 24674                           
 24675                           ;fat_misc.c: 364: *cp-- = 0;
 24676  005DF2  C035  FFD9         	movff	fatfs_itoa@cp,fsr2l
 24677  005DF6  C036  FFDA         	movff	fatfs_itoa@cp+1,fsr2h
 24678  005DFA  6ADF               	clrf	indf2,c
 24679  005DFC  0635               	decf	fatfs_itoa@cp,f,c
 24680  005DFE  A0D8               	btfss	status,0,c
 24681  005E00  0636               	decf	fatfs_itoa@cp+1,f,c
 24682                           
 24683                           ;fat_misc.c: 367: while (cp >= outbuf)
 24684  005E02  D00F               	goto	l10298
 24685  005E04                     l10292:
 24686                           
 24687                           ;fat_misc.c: 368: *s++ = *cp--;
 24688  005E04  C035  FFD9         	movff	fatfs_itoa@cp,fsr2l
 24689  005E08  C036  FFDA         	movff	fatfs_itoa@cp+1,fsr2h
 24690  005E0C  C012  FFE1         	movff	fatfs_itoa@s,fsr1l
 24691  005E10  C013  FFE2         	movff	fatfs_itoa@s+1,fsr1h
 24692  005E14  CFDF FFE7          	movff	indf2,indf1
 24693  005E18  0635               	decf	fatfs_itoa@cp,f,c
 24694  005E1A  A0D8               	btfss	status,0,c
 24695  005E1C  0636               	decf	fatfs_itoa@cp+1,f,c
 24696  005E1E  4A12               	infsnz	fatfs_itoa@s,f,c
 24697  005E20  2A13               	incf	fatfs_itoa@s+1,f,c
 24698  005E22                     l10298:
 24699  005E22  0E29               	movlw	low fatfs_itoa@outbuf
 24700  005E24  5C35               	subwf	fatfs_itoa@cp,w,c
 24701  005E26  0E00               	movlw	high fatfs_itoa@outbuf
 24702  005E28  5836               	subwfb	fatfs_itoa@cp+1,w,c
 24703  005E2A  E2EC               	bc	l10292
 24704                           
 24705                           ;fat_misc.c: 370: *s = 0;
 24706  005E2C  C012  FFD9         	movff	fatfs_itoa@s,fsr2l
 24707  005E30  C013  FFDA         	movff	fatfs_itoa@s+1,fsr2h
 24708  005E34  0E00               	movlw	0
 24709  005E36  6EDF               	movwf	indf2,c
 24710  005E38  0C00               	retlw	0
 24711  005E3A                     __end_of_fatfs_itoa:
 24712                           	opt stack 0
 24713                           tosu	equ	0xFFF
 24714                           tosh	equ	0xFFE
 24715                           tosl	equ	0xFFD
 24716                           pclath	equ	0xFFA
 24717                           tblptru	equ	0xFF8
 24718                           tblptrh	equ	0xFF7
 24719                           tblptrl	equ	0xFF6
 24720                           tablat	equ	0xFF5
 24721                           prodh	equ	0xFF4
 24722                           prodl	equ	0xFF3
 24723                           indf0	equ	0xFEF
 24724                           postinc0	equ	0xFEE
 24725                           fsr0h	equ	0xFEA
 24726                           fsr0l	equ	0xFE9
 24727                           wreg	equ	0xFE8
 24728                           indf1	equ	0xFE7
 24729                           postinc1	equ	0xFE6
 24730                           postdec1	equ	0xFE5
 24731                           fsr1h	equ	0xFE2
 24732                           fsr1l	equ	0xFE1
 24733                           indf2	equ	0xFDF
 24734                           postinc2	equ	0xFDE
 24735                           postdec2	equ	0xFDD
 24736                           fsr2h	equ	0xFDA
 24737                           fsr2l	equ	0xFD9
 24738                           status	equ	0xFD8
 24739                           
 24740 ;; *************** function ___llmod *****************
 24741 ;; Defined at:
 24742 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\llmod.c"
 24743 ;; Parameters:    Size  Location     Type
 24744 ;;  dividend        4    0[COMRAM] unsigned long 
 24745 ;;  divisor         4    4[COMRAM] unsigned long 
 24746 ;; Auto vars:     Size  Location     Type
 24747 ;;  counter         1    8[COMRAM] unsigned char 
 24748 ;; Return value:  Size  Location     Type
 24749 ;;                  4    0[COMRAM] unsigned long 
 24750 ;; Registers used:
 24751 ;;		wreg, status,2, status,0
 24752 ;; Tracked objects:
 24753 ;;		On entry : 0/0
 24754 ;;		On exit  : 0/0
 24755 ;;		Unchanged: 0/0
 24756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24757 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24760 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24761 ;;Total ram usage:        9 bytes
 24762 ;; Hardware stack levels used:    1
 24763 ;; This function calls:
 24764 ;;		Nothing
 24765 ;; This function is called by:
 24766 ;;		_fatfs_itoa
 24767 ;; This function uses a non-reentrant model
 24768 ;;
 24769                           
 24770                           	psect	text70
 24771  0048C6                     __ptext70:
 24772                           	opt stack 0
 24773  0048C6                     ___llmod:
 24774                           	opt stack 24
 24775                           
 24776                           ;incstack = 0
 24777  0048C6  5008               	movf	___llmod@divisor+3,w,c
 24778  0048C8  1005               	iorwf	___llmod@divisor,w,c
 24779  0048CA  1006               	iorwf	___llmod@divisor+1,w,c
 24780  0048CC  1007               	iorwf	___llmod@divisor+2,w,c
 24781  0048CE  E023               	bz	l2789
 24782  0048D0  0E01               	movlw	1
 24783  0048D2  6E09               	movwf	___llmod@counter,c
 24784  0048D4  D006               	goto	l9588
 24785  0048D6                     l9586:
 24786  0048D6  90D8               	bcf	status,0,c
 24787  0048D8  3605               	rlcf	___llmod@divisor,f,c
 24788  0048DA  3606               	rlcf	___llmod@divisor+1,f,c
 24789  0048DC  3607               	rlcf	___llmod@divisor+2,f,c
 24790  0048DE  3608               	rlcf	___llmod@divisor+3,f,c
 24791  0048E0  2A09               	incf	___llmod@counter,f,c
 24792  0048E2                     l9588:
 24793  0048E2  AE08               	btfss	___llmod@divisor+3,7,c
 24794  0048E4  D7F8               	goto	l9586
 24795  0048E6                     l9590:
 24796  0048E6  5005               	movf	___llmod@divisor,w,c
 24797  0048E8  5C01               	subwf	___llmod@dividend,w,c
 24798  0048EA  5006               	movf	___llmod@divisor+1,w,c
 24799  0048EC  5802               	subwfb	___llmod@dividend+1,w,c
 24800  0048EE  5007               	movf	___llmod@divisor+2,w,c
 24801  0048F0  5803               	subwfb	___llmod@dividend+2,w,c
 24802  0048F2  5008               	movf	___llmod@divisor+3,w,c
 24803  0048F4  5804               	subwfb	___llmod@dividend+3,w,c
 24804  0048F6  E308               	bnc	l9594
 24805  0048F8  5005               	movf	___llmod@divisor,w,c
 24806  0048FA  5E01               	subwf	___llmod@dividend,f,c
 24807  0048FC  5006               	movf	___llmod@divisor+1,w,c
 24808  0048FE  5A02               	subwfb	___llmod@dividend+1,f,c
 24809  004900  5007               	movf	___llmod@divisor+2,w,c
 24810  004902  5A03               	subwfb	___llmod@dividend+2,f,c
 24811  004904  5008               	movf	___llmod@divisor+3,w,c
 24812  004906  5A04               	subwfb	___llmod@dividend+3,f,c
 24813  004908                     l9594:
 24814  004908  90D8               	bcf	status,0,c
 24815  00490A  3208               	rrcf	___llmod@divisor+3,f,c
 24816  00490C  3207               	rrcf	___llmod@divisor+2,f,c
 24817  00490E  3206               	rrcf	___llmod@divisor+1,f,c
 24818  004910  3205               	rrcf	___llmod@divisor,f,c
 24819  004912  2E09               	decfsz	___llmod@counter,f,c
 24820  004914  D7E8               	goto	l9590
 24821  004916                     l2789:
 24822  004916  C001  F001         	movff	___llmod@dividend,?___llmod
 24823  00491A  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 24824  00491E  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 24825  004922  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 24826  004926  0012               	return	
 24827  004928                     __end_of___llmod:
 24828                           	opt stack 0
 24829                           tosu	equ	0xFFF
 24830                           tosh	equ	0xFFE
 24831                           tosl	equ	0xFFD
 24832                           pclath	equ	0xFFA
 24833                           tblptru	equ	0xFF8
 24834                           tblptrh	equ	0xFF7
 24835                           tblptrl	equ	0xFF6
 24836                           tablat	equ	0xFF5
 24837                           prodh	equ	0xFF4
 24838                           prodl	equ	0xFF3
 24839                           indf0	equ	0xFEF
 24840                           postinc0	equ	0xFEE
 24841                           fsr0h	equ	0xFEA
 24842                           fsr0l	equ	0xFE9
 24843                           wreg	equ	0xFE8
 24844                           indf1	equ	0xFE7
 24845                           postinc1	equ	0xFE6
 24846                           postdec1	equ	0xFE5
 24847                           fsr1h	equ	0xFE2
 24848                           fsr1l	equ	0xFE1
 24849                           indf2	equ	0xFDF
 24850                           postinc2	equ	0xFDE
 24851                           postdec2	equ	0xFDD
 24852                           fsr2h	equ	0xFDA
 24853                           fsr2l	equ	0xFD9
 24854                           status	equ	0xFD8
 24855                           
 24856 ;; *************** function _fatfs_lfn_create_sfn *****************
 24857 ;; Defined at:
 24858 ;;		line 285 in file "fat_misc.c"
 24859 ;; Parameters:    Size  Location     Type
 24860 ;;  sfn_output      2    8[COMRAM] PTR unsigned char 
 24861 ;;		 -> _create_file@shortFilename(11), _create_directory@shortFilename(11), 
 24862 ;;  filename        2   10[COMRAM] PTR unsigned char 
 24863 ;;		 -> RAM(3967), NULL(0), 
 24864 ;; Auto vars:     Size  Location     Type
 24865 ;;  ext             3   17[COMRAM] unsigned char [3]
 24866 ;;  i               2   26[COMRAM] int 
 24867 ;;  dotPos          2   24[COMRAM] int 
 24868 ;;  pos             2   22[COMRAM] int 
 24869 ;;  len             2   20[COMRAM] int 
 24870 ;; Return value:  Size  Location     Type
 24871 ;;                  2    8[COMRAM] int 
 24872 ;; Registers used:
 24873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24874 ;; Tracked objects:
 24875 ;;		On entry : 0/0
 24876 ;;		On exit  : 0/0
 24877 ;;		Unchanged: 0/0
 24878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24879 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24880 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24881 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24882 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24883 ;;Total ram usage:       20 bytes
 24884 ;; Hardware stack levels used:    1
 24885 ;; Hardware stack levels required when called:    1
 24886 ;; This function calls:
 24887 ;;		_memset
 24888 ;;		_strlen
 24889 ;; This function is called by:
 24890 ;;		__create_directory
 24891 ;;		__create_file
 24892 ;; This function uses a non-reentrant model
 24893 ;;
 24894                           
 24895                           	psect	text71
 24896  0090CA                     __ptext71:
 24897                           	opt stack 0
 24898  0090CA                     _fatfs_lfn_create_sfn:
 24899                           	opt stack 25
 24900                           
 24901                           ;fat_misc.c: 287: int i;
 24902                           ;fat_misc.c: 288: int dotPos = -1;
 24903                           
 24904                           ;incstack = 0
 24905  0090CA  6819               	setf	fatfs_lfn_create_sfn@dotPos,c
 24906  0090CC  681A               	setf	fatfs_lfn_create_sfn@dotPos+1,c
 24907                           
 24908                           ;fat_misc.c: 289: char ext[3];
 24909                           ;fat_misc.c: 290: int pos;
 24910                           ;fat_misc.c: 291: int len = (int)strlen(filename);
 24911  0090CE  C00C  F002         	movff	fatfs_lfn_create_sfn@filename+1,strlen@s+1
 24912  0090D2  C00B  F001         	movff	fatfs_lfn_create_sfn@filename,strlen@s
 24913  0090D6  EC71  F022         	call	_strlen	;wreg free
 24914  0090DA  C001  F015         	movff	?_strlen,fatfs_lfn_create_sfn@len
 24915  0090DE  C002  F016         	movff	?_strlen+1,fatfs_lfn_create_sfn@len+1
 24916                           
 24917                           ;fat_misc.c: 294: if (filename[0]=='.')
 24918  0090E2  0E2E               	movlw	46
 24919  0090E4  C00B  FFD9         	movff	fatfs_lfn_create_sfn@filename,fsr2l
 24920  0090E8  C00C  FFDA         	movff	fatfs_lfn_create_sfn@filename+1,fsr2h
 24921  0090EC  62DF               	cpfseq	indf2,c
 24922  0090EE  D001               	goto	l10678
 24923  0090F0  D13B               	goto	l1013
 24924  0090F2                     l10678:
 24925                           
 24926                           ;fat_misc.c: 297: memset(sfn_output, ' ', 11);
 24927  0090F2  C00A  F002         	movff	fatfs_lfn_create_sfn@sfn_output+1,memset@p1+1
 24928  0090F6  C009  F001         	movff	fatfs_lfn_create_sfn@sfn_output,memset@p1
 24929  0090FA  6A04               	clrf	memset@c+1,c
 24930  0090FC  0E20               	movlw	32
 24931  0090FE  6E03               	movwf	memset@c,c
 24932  009100  6A06               	clrf	memset@n+1,c
 24933  009102  0E0B               	movlw	11
 24934  009104  6E05               	movwf	memset@n,c
 24935  009106  EC1A  F020         	call	_memset	;wreg free
 24936                           
 24937                           ;fat_misc.c: 298: memset(ext, ' ', 3);
 24938  00910A  0E00               	movlw	high fatfs_lfn_create_sfn@ext
 24939  00910C  6E02               	movwf	memset@p1+1,c
 24940  00910E  0E12               	movlw	low fatfs_lfn_create_sfn@ext
 24941  009110  6E01               	movwf	memset@p1,c
 24942  009112  6A04               	clrf	memset@c+1,c
 24943  009114  0E20               	movlw	32
 24944  009116  6E03               	movwf	memset@c,c
 24945  009118  6A06               	clrf	memset@n+1,c
 24946  00911A  0E03               	movlw	3
 24947  00911C  6E05               	movwf	memset@n,c
 24948  00911E  EC1A  F020         	call	_memset	;wreg free
 24949                           
 24950                           ;fat_misc.c: 301: for (i = 0; i< len; i++)
 24951  009122  6A1C               	clrf	fatfs_lfn_create_sfn@i+1,c
 24952  009124  6A1B               	clrf	fatfs_lfn_create_sfn@i,c
 24953  009126  D00F               	goto	l10688
 24954  009128                     l10682:
 24955                           
 24956                           ;fat_misc.c: 302: {
 24957                           ;fat_misc.c: 303: if (filename[i]=='.')
 24958  009128  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 24959  00912A  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 24960  00912C  6ED9               	movwf	fsr2l,c
 24961  00912E  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 24962  009130  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 24963  009132  6EDA               	movwf	fsr2h,c
 24964  009134  0E2E               	movlw	46
 24965  009136  62DF               	cpfseq	indf2,c
 24966  009138  D004               	goto	l10686
 24967                           
 24968                           ;fat_misc.c: 304: dotPos = i;
 24969  00913A  C01B  F019         	movff	fatfs_lfn_create_sfn@i,fatfs_lfn_create_sfn@dotPos
 24970  00913E  C01C  F01A         	movff	fatfs_lfn_create_sfn@i+1,fatfs_lfn_create_sfn@dotPos+1
 24971  009142                     l10686:
 24972  009142  4A1B               	infsnz	fatfs_lfn_create_sfn@i,f,c
 24973  009144  2A1C               	incf	fatfs_lfn_create_sfn@i+1,f,c
 24974  009146                     l10688:
 24975  009146  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 24976  009148  0A80               	xorlw	128
 24977  00914A  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 24978  00914C  5015               	movf	fatfs_lfn_create_sfn@len,w,c
 24979  00914E  5C1B               	subwf	fatfs_lfn_create_sfn@i,w,c
 24980  009150  5016               	movf	fatfs_lfn_create_sfn@len+1,w,c
 24981  009152  0A80               	xorlw	128
 24982  009154  580D               	subwfb	??_fatfs_lfn_create_sfn& (0+255),w,c
 24983  009156  E3E8               	bnc	l10682
 24984                           
 24985                           ;fat_misc.c: 305: }
 24986                           ;fat_misc.c: 308: if (dotPos!=-1)
 24987  009158  2819               	incf	fatfs_lfn_create_sfn@dotPos,w,c
 24988  00915A  B4D8               	btfsc	status,2,c
 24989  00915C  281A               	incf	fatfs_lfn_create_sfn@dotPos+1,w,c
 24990  00915E  E03F               	bz	l10702
 24991                           
 24992                           ;fat_misc.c: 309: {
 24993                           ;fat_misc.c: 311: for (i = (dotPos+1); i < (dotPos+1+3); i++)
 24994  009160  2819               	incf	fatfs_lfn_create_sfn@dotPos,w,c
 24995  009162  6E1B               	movwf	fatfs_lfn_create_sfn@i,c
 24996  009164  0E00               	movlw	0
 24997  009166  201A               	addwfc	fatfs_lfn_create_sfn@dotPos+1,w,c
 24998  009168  6E1C               	movwf	fatfs_lfn_create_sfn@i+1,c
 24999  00916A  D026               	goto	l10700
 25000  00916C                     l10694:
 25001                           
 25002                           ;fat_misc.c: 312: if (i<len)
 25003  00916C  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25004  00916E  0A80               	xorlw	128
 25005  009170  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25006  009172  5015               	movf	fatfs_lfn_create_sfn@len,w,c
 25007  009174  5C1B               	subwf	fatfs_lfn_create_sfn@i,w,c
 25008  009176  5016               	movf	fatfs_lfn_create_sfn@len+1,w,c
 25009  009178  0A80               	xorlw	128
 25010  00917A  580D               	subwfb	??_fatfs_lfn_create_sfn& (0+255),w,c
 25011  00917C  E21B               	bc	l10698
 25012                           
 25013                           ;fat_misc.c: 313: ext[i-(dotPos+1)] = filename[i];
 25014  00917E  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25015  009180  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25016  009182  6ED9               	movwf	fsr2l,c
 25017  009184  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25018  009186  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25019  009188  6EDA               	movwf	fsr2h,c
 25020  00918A  2819               	incf	fatfs_lfn_create_sfn@dotPos,w,c
 25021  00918C  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25022  00918E  0E00               	movlw	0
 25023  009190  201A               	addwfc	fatfs_lfn_create_sfn@dotPos+1,w,c
 25024  009192  6E0E               	movwf	(??_fatfs_lfn_create_sfn+1)& (0+255),c
 25025  009194  1E0D               	comf	??_fatfs_lfn_create_sfn,f,c
 25026  009196  1E0E               	comf	??_fatfs_lfn_create_sfn+1,f,c
 25027  009198  4A0D               	infsnz	??_fatfs_lfn_create_sfn,f,c
 25028  00919A  2A0E               	incf	??_fatfs_lfn_create_sfn+1,f,c
 25029  00919C  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25030  00919E  260D               	addwf	??_fatfs_lfn_create_sfn,f,c
 25031  0091A0  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25032  0091A2  220E               	addwfc	??_fatfs_lfn_create_sfn+1,f,c
 25033  0091A4  0E12               	movlw	low fatfs_lfn_create_sfn@ext
 25034  0091A6  240D               	addwf	??_fatfs_lfn_create_sfn,w,c
 25035  0091A8  6EE1               	movwf	fsr1l,c
 25036  0091AA  0E00               	movlw	high fatfs_lfn_create_sfn@ext
 25037  0091AC  200E               	addwfc	??_fatfs_lfn_create_sfn+1,w,c
 25038  0091AE  6EE2               	movwf	fsr1h,c
 25039  0091B0  CFDF FFE7          	movff	indf2,indf1
 25040  0091B4                     l10698:
 25041  0091B4  4A1B               	infsnz	fatfs_lfn_create_sfn@i,f,c
 25042  0091B6  2A1C               	incf	fatfs_lfn_create_sfn@i+1,f,c
 25043  0091B8                     l10700:
 25044  0091B8  0E04               	movlw	4
 25045  0091BA  2419               	addwf	fatfs_lfn_create_sfn@dotPos,w,c
 25046  0091BC  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25047  0091BE  0E00               	movlw	0
 25048  0091C0  201A               	addwfc	fatfs_lfn_create_sfn@dotPos+1,w,c
 25049  0091C2  6E0E               	movwf	(??_fatfs_lfn_create_sfn+1)& (0+255),c
 25050  0091C4  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25051  0091C6  0A80               	xorlw	128
 25052  0091C8  6E0F               	movwf	(??_fatfs_lfn_create_sfn+2)& (0+255),c
 25053  0091CA  500D               	movf	??_fatfs_lfn_create_sfn,w,c
 25054  0091CC  5C1B               	subwf	fatfs_lfn_create_sfn@i,w,c
 25055  0091CE  500E               	movf	??_fatfs_lfn_create_sfn+1,w,c
 25056  0091D0  0A80               	xorlw	128
 25057  0091D2  580F               	subwfb	(??_fatfs_lfn_create_sfn+2)& (0+255),w,c
 25058  0091D4  E3CB               	bnc	l10694
 25059                           
 25060                           ;fat_misc.c: 316: len = dotPos;
 25061  0091D6  C019  F015         	movff	fatfs_lfn_create_sfn@dotPos,fatfs_lfn_create_sfn@len
 25062  0091DA  C01A  F016         	movff	fatfs_lfn_create_sfn@dotPos+1,fatfs_lfn_create_sfn@len+1
 25063  0091DE                     l10702:
 25064                           
 25065                           ;fat_misc.c: 317: }
 25066                           ;fat_misc.c: 320: pos = 0;
 25067  0091DE  6A18               	clrf	fatfs_lfn_create_sfn@pos+1,c
 25068  0091E0  6A17               	clrf	fatfs_lfn_create_sfn@pos,c
 25069                           
 25070                           ;fat_misc.c: 321: for (i=0;i<len;i++)
 25071  0091E2  6A1C               	clrf	fatfs_lfn_create_sfn@i+1,c
 25072  0091E4  6A1B               	clrf	fatfs_lfn_create_sfn@i,c
 25073  0091E6  D04C               	goto	l10726
 25074  0091E8                     l10704:
 25075                           
 25076                           ;fat_misc.c: 322: {
 25077                           ;fat_misc.c: 323: if ( (filename[i]!=' ') && (filename[i]!='.') )
 25078  0091E8  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25079  0091EA  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25080  0091EC  6ED9               	movwf	fsr2l,c
 25081  0091EE  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25082  0091F0  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25083  0091F2  6EDA               	movwf	fsr2h,c
 25084  0091F4  50DF               	movf	indf2,w,c
 25085  0091F6  0A20               	xorlw	32
 25086  0091F8  E03D               	bz	l10720
 25087  0091FA  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25088  0091FC  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25089  0091FE  6ED9               	movwf	fsr2l,c
 25090  009200  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25091  009202  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25092  009204  6EDA               	movwf	fsr2h,c
 25093  009206  50DF               	movf	indf2,w,c
 25094  009208  0A2E               	xorlw	46
 25095  00920A  E034               	bz	l10720
 25096                           
 25097                           ;fat_misc.c: 324: {
 25098                           ;fat_misc.c: 325: if (filename[i] >= 'a' && filename[i] <= 'z')
 25099  00920C  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25100  00920E  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25101  009210  6ED9               	movwf	fsr2l,c
 25102  009212  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25103  009214  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25104  009216  6EDA               	movwf	fsr2h,c
 25105  009218  0E60               	movlw	96
 25106  00921A  64DF               	cpfsgt	indf2,c
 25107  00921C  D01B               	goto	l10716
 25108  00921E  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25109  009220  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25110  009222  6ED9               	movwf	fsr2l,c
 25111  009224  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25112  009226  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25113  009228  6EDA               	movwf	fsr2h,c
 25114  00922A  50DF               	movf	indf2,w,c
 25115  00922C  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25116  00922E  0E7B               	movlw	123
 25117  009230  5C0D               	subwf	??_fatfs_lfn_create_sfn,w,c
 25118  009232  E210               	bc	l10716
 25119                           
 25120                           ;fat_misc.c: 326: sfn_output[pos++] = filename[i] - 'a' + 'A';
 25121  009234  5017               	movf	fatfs_lfn_create_sfn@pos,w,c
 25122  009236  2409               	addwf	fatfs_lfn_create_sfn@sfn_output,w,c
 25123  009238  6ED9               	movwf	fsr2l,c
 25124  00923A  5018               	movf	fatfs_lfn_create_sfn@pos+1,w,c
 25125  00923C  200A               	addwfc	fatfs_lfn_create_sfn@sfn_output+1,w,c
 25126  00923E  6EDA               	movwf	fsr2h,c
 25127  009240  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25128  009242  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25129  009244  6EE1               	movwf	fsr1l,c
 25130  009246  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25131  009248  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25132  00924A  6EE2               	movwf	fsr1h,c
 25133  00924C  50E7               	movf	indf1,w,c
 25134  00924E  0FE0               	addlw	224
 25135  009250  6EDF               	movwf	indf2,c
 25136  009252  D00E               	goto	L75
 25137  009254                     l10716:
 25138                           
 25139                           ;fat_misc.c: 327: else
 25140                           ;fat_misc.c: 328: sfn_output[pos++] = filename[i];
 25141  009254  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25142  009256  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25143  009258  6ED9               	movwf	fsr2l,c
 25144  00925A  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25145  00925C  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25146  00925E  6EDA               	movwf	fsr2h,c
 25147  009260  5017               	movf	fatfs_lfn_create_sfn@pos,w,c
 25148  009262  2409               	addwf	fatfs_lfn_create_sfn@sfn_output,w,c
 25149  009264  6EE1               	movwf	fsr1l,c
 25150  009266  5018               	movf	fatfs_lfn_create_sfn@pos+1,w,c
 25151  009268  200A               	addwfc	fatfs_lfn_create_sfn@sfn_output+1,w,c
 25152  00926A  6EE2               	movwf	fsr1h,c
 25153  00926C  CFDF FFE7          	movff	indf2,indf1
 25154  009270                     L75:
 25155  009270  4A17               	infsnz	fatfs_lfn_create_sfn@pos,f,c
 25156  009272  2A18               	incf	fatfs_lfn_create_sfn@pos+1,f,c
 25157  009274                     l10720:
 25158                           
 25159                           ;fat_misc.c: 329: }
 25160                           ;fat_misc.c: 332: if (pos==8)
 25161  009274  5017               	movf	fatfs_lfn_create_sfn@pos,w,c
 25162  009276  0A08               	xorlw	8
 25163  009278  1018               	iorwf	fatfs_lfn_create_sfn@pos+1,w,c
 25164  00927A  E00B               	bz	l10728
 25165                           
 25166                           ;fat_misc.c: 333: break;
 25167  00927C  4A1B               	infsnz	fatfs_lfn_create_sfn@i,f,c
 25168  00927E  2A1C               	incf	fatfs_lfn_create_sfn@i+1,f,c
 25169  009280                     l10726:
 25170  009280  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25171  009282  0A80               	xorlw	128
 25172  009284  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25173  009286  5015               	movf	fatfs_lfn_create_sfn@len,w,c
 25174  009288  5C1B               	subwf	fatfs_lfn_create_sfn@i,w,c
 25175  00928A  5016               	movf	fatfs_lfn_create_sfn@len+1,w,c
 25176  00928C  0A80               	xorlw	128
 25177  00928E  580D               	subwfb	??_fatfs_lfn_create_sfn& (0+255),w,c
 25178  009290  E3AB               	bnc	l10704
 25179  009292                     l10728:
 25180                           
 25181                           ;fat_misc.c: 334: }
 25182                           ;fat_misc.c: 337: for (i=8;i<11;i++)
 25183  009292  6A1C               	clrf	fatfs_lfn_create_sfn@i+1,c
 25184  009294  0E08               	movlw	8
 25185  009296  6E1B               	movwf	fatfs_lfn_create_sfn@i,c
 25186  009298  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25187  00929A  0A80               	xorlw	128
 25188  00929C  0F80               	addlw	-128
 25189  00929E  0E0B               	movlw	11
 25190  0092A0  B4D8               	btfsc	status,2,c
 25191  0092A2  5C1B               	subwf	fatfs_lfn_create_sfn@i,w,c
 25192  0092A4  E261               	bc	l1013
 25193                           
 25194                           ;fat_misc.c: 338: {
 25195                           ;fat_misc.c: 339: if (ext[i-8] >= 'a' && ext[i-8] <= 'z')
 25196  0092A6  0EF8               	movlw	248
 25197  0092A8  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25198  0092AA  680E               	setf	(??_fatfs_lfn_create_sfn+1)& (0+255),c
 25199  0092AC  C01B  F00F         	movff	fatfs_lfn_create_sfn@i,??_fatfs_lfn_create_sfn+2
 25200  0092B0  C01C  F010         	movff	fatfs_lfn_create_sfn@i+1,??_fatfs_lfn_create_sfn+3
 25201  0092B4  500D               	movf	??_fatfs_lfn_create_sfn,w,c
 25202  0092B6  260F               	addwf	??_fatfs_lfn_create_sfn+2,f,c
 25203  0092B8  500E               	movf	??_fatfs_lfn_create_sfn+1,w,c
 25204  0092BA  2210               	addwfc	??_fatfs_lfn_create_sfn+3,f,c
 25205  0092BC  0E12               	movlw	low fatfs_lfn_create_sfn@ext
 25206  0092BE  240F               	addwf	??_fatfs_lfn_create_sfn+2,w,c
 25207  0092C0  6ED9               	movwf	fsr2l,c
 25208  0092C2  0E00               	movlw	high fatfs_lfn_create_sfn@ext
 25209  0092C4  2010               	addwfc	??_fatfs_lfn_create_sfn+3,w,c
 25210  0092C6  6EDA               	movwf	fsr2h,c
 25211  0092C8  0E60               	movlw	96
 25212  0092CA  64DF               	cpfsgt	indf2,c
 25213  0092CC  D031               	goto	l10740
 25214  0092CE  0EF8               	movlw	248
 25215  0092D0  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25216  0092D2  680E               	setf	(??_fatfs_lfn_create_sfn+1)& (0+255),c
 25217  0092D4  C01B  F00F         	movff	fatfs_lfn_create_sfn@i,??_fatfs_lfn_create_sfn+2
 25218  0092D8  C01C  F010         	movff	fatfs_lfn_create_sfn@i+1,??_fatfs_lfn_create_sfn+3
 25219  0092DC  500D               	movf	??_fatfs_lfn_create_sfn,w,c
 25220  0092DE  260F               	addwf	??_fatfs_lfn_create_sfn+2,f,c
 25221  0092E0  500E               	movf	??_fatfs_lfn_create_sfn+1,w,c
 25222  0092E2  2210               	addwfc	??_fatfs_lfn_create_sfn+3,f,c
 25223  0092E4  0E12               	movlw	low fatfs_lfn_create_sfn@ext
 25224  0092E6  240F               	addwf	??_fatfs_lfn_create_sfn+2,w,c
 25225  0092E8  6ED9               	movwf	fsr2l,c
 25226  0092EA  0E00               	movlw	high fatfs_lfn_create_sfn@ext
 25227  0092EC  2010               	addwfc	??_fatfs_lfn_create_sfn+3,w,c
 25228  0092EE  6EDA               	movwf	fsr2h,c
 25229  0092F0  50DF               	movf	indf2,w,c
 25230  0092F2  6E11               	movwf	(??_fatfs_lfn_create_sfn+4)& (0+255),c
 25231  0092F4  0E7B               	movlw	123
 25232  0092F6  5C11               	subwf	??_fatfs_lfn_create_sfn+4,w,c
 25233  0092F8  E21B               	bc	l10740
 25234                           
 25235                           ;fat_misc.c: 340: sfn_output[i] = ext[i-8] - 'a' + 'A';
 25236  0092FA  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25237  0092FC  2409               	addwf	fatfs_lfn_create_sfn@sfn_output,w,c
 25238  0092FE  6ED9               	movwf	fsr2l,c
 25239  009300  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25240  009302  200A               	addwfc	fatfs_lfn_create_sfn@sfn_output+1,w,c
 25241  009304  6EDA               	movwf	fsr2h,c
 25242  009306  0EF8               	movlw	248
 25243  009308  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25244  00930A  680E               	setf	(??_fatfs_lfn_create_sfn+1)& (0+255),c
 25245  00930C  C01B  F00F         	movff	fatfs_lfn_create_sfn@i,??_fatfs_lfn_create_sfn+2
 25246  009310  C01C  F010         	movff	fatfs_lfn_create_sfn@i+1,??_fatfs_lfn_create_sfn+3
 25247  009314  500D               	movf	??_fatfs_lfn_create_sfn,w,c
 25248  009316  260F               	addwf	??_fatfs_lfn_create_sfn+2,f,c
 25249  009318  500E               	movf	??_fatfs_lfn_create_sfn+1,w,c
 25250  00931A  2210               	addwfc	??_fatfs_lfn_create_sfn+3,f,c
 25251  00931C  0E12               	movlw	low fatfs_lfn_create_sfn@ext
 25252  00931E  240F               	addwf	??_fatfs_lfn_create_sfn+2,w,c
 25253  009320  6EE1               	movwf	fsr1l,c
 25254  009322  0E00               	movlw	high fatfs_lfn_create_sfn@ext
 25255  009324  2010               	addwfc	??_fatfs_lfn_create_sfn+3,w,c
 25256  009326  6EE2               	movwf	fsr1h,c
 25257  009328  50E7               	movf	indf1,w,c
 25258  00932A  0FE0               	addlw	224
 25259  00932C  6EDF               	movwf	indf2,c
 25260  00932E  D019               	goto	l10742
 25261  009330                     l10740:
 25262                           
 25263                           ;fat_misc.c: 341: else
 25264                           ;fat_misc.c: 342: sfn_output[i] = ext[i-8];
 25265  009330  0EF8               	movlw	248
 25266  009332  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25267  009334  680E               	setf	(??_fatfs_lfn_create_sfn+1)& (0+255),c
 25268  009336  C01B  F00F         	movff	fatfs_lfn_create_sfn@i,??_fatfs_lfn_create_sfn+2
 25269  00933A  C01C  F010         	movff	fatfs_lfn_create_sfn@i+1,??_fatfs_lfn_create_sfn+3
 25270  00933E  500D               	movf	??_fatfs_lfn_create_sfn,w,c
 25271  009340  260F               	addwf	??_fatfs_lfn_create_sfn+2,f,c
 25272  009342  500E               	movf	??_fatfs_lfn_create_sfn+1,w,c
 25273  009344  2210               	addwfc	??_fatfs_lfn_create_sfn+3,f,c
 25274  009346  0E12               	movlw	low fatfs_lfn_create_sfn@ext
 25275  009348  240F               	addwf	??_fatfs_lfn_create_sfn+2,w,c
 25276  00934A  6ED9               	movwf	fsr2l,c
 25277  00934C  0E00               	movlw	high fatfs_lfn_create_sfn@ext
 25278  00934E  2010               	addwfc	??_fatfs_lfn_create_sfn+3,w,c
 25279  009350  6EDA               	movwf	fsr2h,c
 25280  009352  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25281  009354  2409               	addwf	fatfs_lfn_create_sfn@sfn_output,w,c
 25282  009356  6EE1               	movwf	fsr1l,c
 25283  009358  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25284  00935A  200A               	addwfc	fatfs_lfn_create_sfn@sfn_output+1,w,c
 25285  00935C  6EE2               	movwf	fsr1h,c
 25286  00935E  CFDF FFE7          	movff	indf2,indf1
 25287  009362                     l10742:
 25288  009362  4A1B               	infsnz	fatfs_lfn_create_sfn@i,f,c
 25289  009364  2A1C               	incf	fatfs_lfn_create_sfn@i+1,f,c
 25290  009366  D798               	goto	L76
 25291  009368                     l1013:
 25292  009368  0012               	return	
 25293  00936A                     __end_of_fatfs_lfn_create_sfn:
 25294                           	opt stack 0
 25295                           tosu	equ	0xFFF
 25296                           tosh	equ	0xFFE
 25297                           tosl	equ	0xFFD
 25298                           pclath	equ	0xFFA
 25299                           tblptru	equ	0xFF8
 25300                           tblptrh	equ	0xFF7
 25301                           tblptrl	equ	0xFF6
 25302                           tablat	equ	0xFF5
 25303                           prodh	equ	0xFF4
 25304                           prodl	equ	0xFF3
 25305                           indf0	equ	0xFEF
 25306                           postinc0	equ	0xFEE
 25307                           fsr0h	equ	0xFEA
 25308                           fsr0l	equ	0xFE9
 25309                           wreg	equ	0xFE8
 25310                           indf1	equ	0xFE7
 25311                           postinc1	equ	0xFE6
 25312                           postdec1	equ	0xFE5
 25313                           fsr1h	equ	0xFE2
 25314                           fsr1l	equ	0xFE1
 25315                           indf2	equ	0xFDF
 25316                           postinc2	equ	0xFDE
 25317                           postdec2	equ	0xFDD
 25318                           fsr2h	equ	0xFDA
 25319                           fsr2l	equ	0xFD9
 25320                           status	equ	0xFD8
 25321                           
 25322 ;; *************** function _fatfs_free_cluster_chain *****************
 25323 ;; Defined at:
 25324 ;;		line 389 in file "fat_table.c"
 25325 ;; Parameters:    Size  Location     Type
 25326 ;;  fs              2    0[BANK0 ] PTR struct fatfs
 25327 ;;		 -> _fs(1095), 
 25328 ;;  start_cluste    4    2[BANK0 ] unsigned long 
 25329 ;; Auto vars:     Size  Location     Type
 25330 ;;  next_cluster    4   10[BANK0 ] unsigned long 
 25331 ;;  last_cluster    4    6[BANK0 ] unsigned long 
 25332 ;; Return value:  Size  Location     Type
 25333 ;;                  2    0[BANK0 ] int 
 25334 ;; Registers used:
 25335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 25336 ;; Tracked objects:
 25337 ;;		On entry : 0/0
 25338 ;;		On exit  : 0/0
 25339 ;;		Unchanged: 0/0
 25340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25341 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25342 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25344 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25345 ;;Total ram usage:       14 bytes
 25346 ;; Hardware stack levels used:    1
 25347 ;; Hardware stack levels required when called:    6
 25348 ;; This function calls:
 25349 ;;		_fatfs_fat_set_cluster
 25350 ;;		_fatfs_find_next_cluster
 25351 ;; This function is called by:
 25352 ;;		__create_directory
 25353 ;;		__create_file
 25354 ;;		_fl_remove
 25355 ;; This function uses a non-reentrant model
 25356 ;;
 25357                           
 25358                           	psect	text72
 25359  0055EC                     __ptext72:
 25360                           	opt stack 0
 25361  0055EC                     _fatfs_free_cluster_chain:
 25362                           	opt stack 20
 25363                           
 25364                           ;fat_table.c: 391: uint32 last_cluster;
 25365                           ;fat_table.c: 392: uint32 next_cluster = start_cluster;
 25366                           
 25367                           ;incstack = 0
 25368  0055EC  C082  F08A         	movff	fatfs_free_cluster_chain@start_cluster,fatfs_free_cluster_chain@next_cluster
 25369  0055F0  C083  F08B         	movff	fatfs_free_cluster_chain@start_cluster+1,fatfs_free_cluster_chain@next_cluster+1
 25370  0055F4  C084  F08C         	movff	fatfs_free_cluster_chain@start_cluster+2,fatfs_free_cluster_chain@next_cluster+2
 25371  0055F8  C085  F08D         	movff	fatfs_free_cluster_chain@start_cluster+3,fatfs_free_cluster_chain@next_cluster+3
 25372                           
 25373                           ;fat_table.c: 395: while ( (next_cluster != 0xFFFFFFFF) && (next_cluster != 0x00000000) 
      +                          )
 25374  0055FC  D033               	goto	l10768
 25375  0055FE                     l1264:
 25376                           
 25377                           ; BSR set to: 0
 25378                           ;fat_table.c: 396: {
 25379                           ;fat_table.c: 397: last_cluster = next_cluster;
 25380  0055FE  C08A  F086         	movff	fatfs_free_cluster_chain@next_cluster,fatfs_free_cluster_chain@last_cluster
 25381  005602  C08B  F087         	movff	fatfs_free_cluster_chain@next_cluster+1,fatfs_free_cluster_chain@last_cluster+1
 25382  005606  C08C  F088         	movff	fatfs_free_cluster_chain@next_cluster+2,fatfs_free_cluster_chain@last_cluster+2
 25383  00560A  C08D  F089         	movff	fatfs_free_cluster_chain@next_cluster+3,fatfs_free_cluster_chain@last_cluster+3
 25384                           
 25385                           ; BSR set to: 0
 25386                           ;fat_table.c: 400: next_cluster = fatfs_find_next_cluster(fs, next_cluster);
 25387  00560E  C081  F047         	movff	fatfs_free_cluster_chain@fs+1,fatfs_find_next_cluster@fs+1
 25388  005612  0100               	movlb	0	; () banked
 25389  005614  C080  F046         	movff	fatfs_free_cluster_chain@fs,fatfs_find_next_cluster@fs
 25390  005618  C08A  F048         	movff	fatfs_free_cluster_chain@next_cluster,fatfs_find_next_cluster@current_cluster
 25391  00561C  C08B  F049         	movff	fatfs_free_cluster_chain@next_cluster+1,fatfs_find_next_cluster@current_cluster+1
 25392  005620  C08C  F04A         	movff	fatfs_free_cluster_chain@next_cluster+2,fatfs_find_next_cluster@current_cluster+2
 25393  005624  C08D  F04B         	movff	fatfs_free_cluster_chain@next_cluster+3,fatfs_find_next_cluster@current_cluster+3
 25394  005628  EC9E  F054         	call	_fatfs_find_next_cluster	;wreg free
 25395  00562C  C046  F08A         	movff	?_fatfs_find_next_cluster,fatfs_free_cluster_chain@next_cluster
 25396  005630  C047  F08B         	movff	?_fatfs_find_next_cluster+1,fatfs_free_cluster_chain@next_cluster+1
 25397  005634  C048  F08C         	movff	?_fatfs_find_next_cluster+2,fatfs_free_cluster_chain@next_cluster+2
 25398  005638  C049  F08D         	movff	?_fatfs_find_next_cluster+3,fatfs_free_cluster_chain@next_cluster+3
 25399                           
 25400                           ;fat_table.c: 403: fatfs_fat_set_cluster(fs, last_cluster, 0x00000000);
 25401  00563C  C081  F047         	movff	fatfs_free_cluster_chain@fs+1,fatfs_fat_set_cluster@fs+1
 25402  005640  0100               	movlb	0	; () banked
 25403  005642  C080  F046         	movff	fatfs_free_cluster_chain@fs,fatfs_fat_set_cluster@fs
 25404  005646  C086  F048         	movff	fatfs_free_cluster_chain@last_cluster,fatfs_fat_set_cluster@cluster
 25405  00564A  C087  F049         	movff	fatfs_free_cluster_chain@last_cluster+1,fatfs_fat_set_cluster@cluster+1
 25406  00564E  C088  F04A         	movff	fatfs_free_cluster_chain@last_cluster+2,fatfs_fat_set_cluster@cluster+2
 25407  005652  C089  F04B         	movff	fatfs_free_cluster_chain@last_cluster+3,fatfs_fat_set_cluster@cluster+3
 25408  005656  0E00               	movlw	0
 25409  005658  6A4C               	clrf	fatfs_fat_set_cluster@next_cluster,c
 25410  00565A  6A4D               	clrf	fatfs_fat_set_cluster@next_cluster+1,c
 25411  00565C  6A4E               	clrf	fatfs_fat_set_cluster@next_cluster+2,c
 25412  00565E  6A4F               	clrf	fatfs_fat_set_cluster@next_cluster+3,c
 25413  005660  EC17  F047         	call	_fatfs_fat_set_cluster	;wreg free
 25414  005664                     l10768:
 25415  005664  0100               	movlb	0	; () banked
 25416  005666  298A               	incf	fatfs_free_cluster_chain@next_cluster& (0+255),w,b
 25417  005668  B4D8               	btfsc	status,2,c
 25418  00566A  298B               	incf	(fatfs_free_cluster_chain@next_cluster+1)& (0+255),w,b
 25419  00566C  B4D8               	btfsc	status,2,c
 25420  00566E  298C               	incf	(fatfs_free_cluster_chain@next_cluster+2)& (0+255),w,b
 25421  005670  B4D8               	btfsc	status,2,c
 25422  005672  298D               	incf	(fatfs_free_cluster_chain@next_cluster+3)& (0+255),w,b
 25423  005674  E005               	bz	l10772
 25424                           
 25425                           ; BSR set to: 0
 25426  005676  518D               	movf	(fatfs_free_cluster_chain@next_cluster+3)& (0+255),w,b
 25427  005678  118A               	iorwf	fatfs_free_cluster_chain@next_cluster& (0+255),w,b
 25428  00567A  118B               	iorwf	(fatfs_free_cluster_chain@next_cluster+1)& (0+255),w,b
 25429  00567C  118C               	iorwf	(fatfs_free_cluster_chain@next_cluster+2)& (0+255),w,b
 25430  00567E  E1BF               	bnz	l1264
 25431  005680                     l10772:
 25432                           
 25433                           ; BSR set to: 0
 25434                           ;fat_table.c: 404: }
 25435                           ;fat_table.c: 406: return 1;
 25436  005680  0E00               	movlw	0
 25437  005682  0100               	movlb	0	; () banked
 25438  005684  6F81               	movwf	(?_fatfs_free_cluster_chain+1)& (0+255),b
 25439  005686  0E01               	movlw	1
 25440  005688  6F80               	movwf	?_fatfs_free_cluster_chain& (0+255),b
 25441                           
 25442                           ; BSR set to: 0
 25443                           
 25444                           ; BSR set to: 0
 25445  00568A  0C01               	retlw	1
 25446  00568C                     __end_of_fatfs_free_cluster_chain:
 25447                           	opt stack 0
 25448                           tosu	equ	0xFFF
 25449                           tosh	equ	0xFFE
 25450                           tosl	equ	0xFFD
 25451                           pclath	equ	0xFFA
 25452                           tblptru	equ	0xFF8
 25453                           tblptrh	equ	0xFF7
 25454                           tblptrl	equ	0xFF6
 25455                           tablat	equ	0xFF5
 25456                           prodh	equ	0xFF4
 25457                           prodl	equ	0xFF3
 25458                           indf0	equ	0xFEF
 25459                           postinc0	equ	0xFEE
 25460                           fsr0h	equ	0xFEA
 25461                           fsr0l	equ	0xFE9
 25462                           wreg	equ	0xFE8
 25463                           indf1	equ	0xFE7
 25464                           postinc1	equ	0xFE6
 25465                           postdec1	equ	0xFE5
 25466                           fsr1h	equ	0xFE2
 25467                           fsr1l	equ	0xFE1
 25468                           indf2	equ	0xFDF
 25469                           postinc2	equ	0xFDE
 25470                           postdec2	equ	0xFDD
 25471                           fsr2h	equ	0xFDA
 25472                           fsr2l	equ	0xFD9
 25473                           status	equ	0xFD8
 25474                           
 25475 ;; *************** function _fatfs_fat_purge *****************
 25476 ;; Defined at:
 25477 ;;		line 179 in file "fat_table.c"
 25478 ;; Parameters:    Size  Location     Type
 25479 ;;  fs              2   51[COMRAM] PTR struct fatfs
 25480 ;;		 -> _fs(1095), 
 25481 ;; Auto vars:     Size  Location     Type
 25482 ;;  pcur            2   53[COMRAM] PTR struct fat_buffer
 25483 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 25484 ;;		 -> NULL(0), 
 25485 ;; Return value:  Size  Location     Type
 25486 ;;                  2   51[COMRAM] int 
 25487 ;; Registers used:
 25488 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 25489 ;; Tracked objects:
 25490 ;;		On entry : 0/0
 25491 ;;		On exit  : 0/0
 25492 ;;		Unchanged: 0/0
 25493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25497 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25498 ;;Total ram usage:        4 bytes
 25499 ;; Hardware stack levels used:    1
 25500 ;; Hardware stack levels required when called:    4
 25501 ;; This function calls:
 25502 ;;		_fatfs_fat_writeback
 25503 ;; This function is called by:
 25504 ;;		__create_directory
 25505 ;;		__open_file
 25506 ;;		__create_file
 25507 ;;		_fl_shutdown
 25508 ;;		_fl_fclose
 25509 ;; This function uses a non-reentrant model
 25510 ;;
 25511                           
 25512                           	psect	text73
 25513  004586                     __ptext73:
 25514                           	opt stack 0
 25515  004586                     _fatfs_fat_purge:
 25516                           	opt stack 25
 25517                           
 25518                           ;fat_table.c: 181: struct fat_buffer *pcur = fs->fat_buffer_head;
 25519                           
 25520                           ; BSR set to: 0
 25521                           ;incstack = 0
 25522  004586  EE22 F03B          	lfsr	2,571
 25523  00458A  5034               	movf	fatfs_fat_purge@fs,w,c
 25524  00458C  26D9               	addwf	fsr2l,f,c
 25525  00458E  5035               	movf	fatfs_fat_purge@fs+1,w,c
 25526  004590  D01B               	goto	L77
 25527  004592                     l10882:
 25528                           
 25529                           ;fat_table.c: 185: {
 25530                           ;fat_table.c: 187: if (pcur->dirty)
 25531  004592  EE22 F004          	lfsr	2,516
 25532  004596  5036               	movf	fatfs_fat_purge@pcur,w,c
 25533  004598  26D9               	addwf	fsr2l,f,c
 25534  00459A  5037               	movf	fatfs_fat_purge@pcur+1,w,c
 25535  00459C  22DA               	addwfc	fsr2h,f,c
 25536  00459E  50DE               	movf	postinc2,w,c
 25537  0045A0  10DD               	iorwf	postdec2,w,c
 25538  0045A2  E00D               	bz	l10888
 25539                           
 25540                           ;fat_table.c: 188: if (!fatfs_fat_writeback(fs, pcur))
 25541  0045A4  C035  F021         	movff	fatfs_fat_purge@fs+1,fatfs_fat_writeback@fs+1
 25542  0045A8  C034  F020         	movff	fatfs_fat_purge@fs,fatfs_fat_writeback@fs
 25543  0045AC  C037  F023         	movff	fatfs_fat_purge@pcur+1,fatfs_fat_writeback@pcur+1
 25544  0045B0  C036  F022         	movff	fatfs_fat_purge@pcur,fatfs_fat_writeback@pcur
 25545  0045B4  EC78  F03C         	call	_fatfs_fat_writeback	;wreg free
 25546  0045B8  5021               	movf	?_fatfs_fat_writeback+1,w,c
 25547  0045BA  1020               	iorwf	?_fatfs_fat_writeback,w,c
 25548  0045BC  E00D               	bz	l1220
 25549  0045BE                     l10888:
 25550                           
 25551                           ;fat_table.c: 191: pcur = pcur->next;
 25552  0045BE  EE22 F008          	lfsr	2,520
 25553  0045C2  5036               	movf	fatfs_fat_purge@pcur,w,c
 25554  0045C4  26D9               	addwf	fsr2l,f,c
 25555  0045C6  5037               	movf	fatfs_fat_purge@pcur+1,w,c
 25556  0045C8                     L77:
 25557  0045C8  22DA               	addwfc	fsr2h,f,c
 25558  0045CA  CFDE F036          	movff	postinc2,fatfs_fat_purge@pcur
 25559  0045CE  CFDD F037          	movff	postdec2,fatfs_fat_purge@pcur+1
 25560  0045D2  5037               	movf	fatfs_fat_purge@pcur+1,w,c
 25561  0045D4  1036               	iorwf	fatfs_fat_purge@pcur,w,c
 25562  0045D6  E1DD               	bnz	l10882
 25563  0045D8                     l1220:
 25564  0045D8  0012               	return	
 25565  0045DA                     __end_of_fatfs_fat_purge:
 25566                           	opt stack 0
 25567                           tosu	equ	0xFFF
 25568                           tosh	equ	0xFFE
 25569                           tosl	equ	0xFFD
 25570                           pclath	equ	0xFFA
 25571                           tblptru	equ	0xFF8
 25572                           tblptrh	equ	0xFF7
 25573                           tblptrl	equ	0xFF6
 25574                           tablat	equ	0xFF5
 25575                           prodh	equ	0xFF4
 25576                           prodl	equ	0xFF3
 25577                           indf0	equ	0xFEF
 25578                           postinc0	equ	0xFEE
 25579                           fsr0h	equ	0xFEA
 25580                           fsr0l	equ	0xFE9
 25581                           wreg	equ	0xFE8
 25582                           indf1	equ	0xFE7
 25583                           postinc1	equ	0xFE6
 25584                           postdec1	equ	0xFE5
 25585                           fsr1h	equ	0xFE2
 25586                           fsr1l	equ	0xFE1
 25587                           indf2	equ	0xFDF
 25588                           postinc2	equ	0xFDE
 25589                           postdec2	equ	0xFDD
 25590                           fsr2h	equ	0xFDA
 25591                           fsr2l	equ	0xFD9
 25592                           status	equ	0xFD8
 25593                           
 25594 ;; *************** function _fatfs_allocate_free_space *****************
 25595 ;; Defined at:
 25596 ;;		line 82 in file "fat_write.c"
 25597 ;; Parameters:    Size  Location     Type
 25598 ;;  fs              2   30[BANK0 ] PTR struct fatfs
 25599 ;;		 -> _fs(1095), 
 25600 ;;  newFile         2   32[BANK0 ] int 
 25601 ;;  startCluster    2   34[BANK0 ] PTR unsigned long 
 25602 ;;		 -> RAM(3967), NULL(0), 
 25603 ;;  size            4   36[BANK0 ] unsigned long 
 25604 ;; Auto vars:     Size  Location     Type
 25605 ;;  nextcluster     4   56[BANK0 ] unsigned long 
 25606 ;;  clusterCount    4   52[BANK0 ] unsigned long 
 25607 ;;  clusterSize     4   48[BANK0 ] unsigned long 
 25608 ;; Return value:  Size  Location     Type
 25609 ;;                  2   30[BANK0 ] int 
 25610 ;; Registers used:
 25611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25612 ;; Tracked objects:
 25613 ;;		On entry : 0/0
 25614 ;;		On exit  : 0/0
 25615 ;;		Unchanged: 0/0
 25616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25617 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25618 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25619 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25620 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25621 ;;Total ram usage:       30 bytes
 25622 ;; Hardware stack levels used:    1
 25623 ;; Hardware stack levels required when called:    7
 25624 ;; This function calls:
 25625 ;;		___lldiv
 25626 ;;		_fatfs_add_free_space
 25627 ;;		_fatfs_fat_set_cluster
 25628 ;;		_fatfs_find_blank_cluster
 25629 ;;		_fatfs_set_fs_info_next_free_cluster
 25630 ;; This function is called by:
 25631 ;;		__create_directory
 25632 ;;		__create_file
 25633 ;; This function uses a non-reentrant model
 25634 ;;
 25635                           
 25636                           	psect	text74
 25637  008956                     __ptext74:
 25638                           	opt stack 0
 25639  008956                     _fatfs_allocate_free_space:
 25640                           	opt stack 19
 25641                           
 25642                           ;fat_write.c: 84: uint32 clusterSize;
 25643                           ;fat_write.c: 85: uint32 clusterCount;
 25644                           ;fat_write.c: 86: uint32 nextcluster;
 25645                           ;fat_write.c: 88: if (size==0)
 25646                           
 25647                           ;incstack = 0
 25648  008956  0100               	movlb	0	; () banked
 25649  008958  51A7               	movf	(fatfs_allocate_free_space@size+3)& (0+255),w,b
 25650  00895A  11A4               	iorwf	fatfs_allocate_free_space@size& (0+255),w,b
 25651  00895C  11A5               	iorwf	(fatfs_allocate_free_space@size+1)& (0+255),w,b
 25652  00895E  11A6               	iorwf	(fatfs_allocate_free_space@size+2)& (0+255),w,b
 25653  008960  E101 D0D4          	bz	u12060
 25654                           
 25655                           ; BSR set to: 0
 25656                           ;fat_write.c: 92: if (fs->next_free_cluster != 0xFFFFFFFF)
 25657                           
 25658                           ; BSR set to: 0
 25659                           
 25660                           ; BSR set to: 0
 25661                           
 25662                           ; BSR set to: 0
 25663                           ;fat_write.c: 89: return 0;
 25664  008964  EE20 F01F          	lfsr	2,31
 25665  008968  519E               	movf	fatfs_allocate_free_space@fs& (0+255),w,b
 25666  00896A  26D9               	addwf	fsr2l,f,c
 25667  00896C  519F               	movf	(fatfs_allocate_free_space@fs+1)& (0+255),w,b
 25668  00896E  22DA               	addwfc	fsr2h,f,c
 25669  008970  CFDE F0A8          	movff	postinc2,??_fatfs_allocate_free_space
 25670  008974  CFDE F0A9          	movff	postinc2,??_fatfs_allocate_free_space+1
 25671  008978  CFDE F0AA          	movff	postinc2,??_fatfs_allocate_free_space+2
 25672  00897C  CFDE F0AB          	movff	postinc2,??_fatfs_allocate_free_space+3
 25673  008980  29A8               	incf	??_fatfs_allocate_free_space& (0+255),w,b
 25674  008982  B4D8               	btfsc	status,2,c
 25675  008984  29A9               	incf	(??_fatfs_allocate_free_space+1)& (0+255),w,b
 25676  008986  B4D8               	btfsc	status,2,c
 25677  008988  29AA               	incf	(??_fatfs_allocate_free_space+2)& (0+255),w,b
 25678  00898A  B4D8               	btfsc	status,2,c
 25679  00898C  29AB               	incf	(??_fatfs_allocate_free_space+3)& (0+255),w,b
 25680  00898E  E00B               	bz	l10634
 25681                           
 25682                           ; BSR set to: 0
 25683                           ;fat_write.c: 93: fatfs_set_fs_info_next_free_cluster(fs, 0xFFFFFFFF);
 25684  008990  C09F  F047         	movff	fatfs_allocate_free_space@fs+1,fatfs_set_fs_info_next_free_cluster@fs+1
 25685  008994  C09E  F046         	movff	fatfs_allocate_free_space@fs,fatfs_set_fs_info_next_free_cluster@fs
 25686  008998  0EFF               	movlw	255
 25687  00899A  6848               	setf	fatfs_set_fs_info_next_free_cluster@newValue,c
 25688  00899C  6849               	setf	fatfs_set_fs_info_next_free_cluster@newValue+1,c
 25689  00899E  684A               	setf	fatfs_set_fs_info_next_free_cluster@newValue+2,c
 25690  0089A0  684B               	setf	fatfs_set_fs_info_next_free_cluster@newValue+3,c
 25691  0089A2  ECDC  F039         	call	_fatfs_set_fs_info_next_free_cluster	;wreg free
 25692  0089A6                     l10634:
 25693                           
 25694                           ;fat_write.c: 96: clusterSize = fs->sectors_per_cluster * 512;
 25695  0089A6  0100               	movlb	0	; () banked
 25696  0089A8  6BA8               	clrf	??_fatfs_allocate_free_space& (0+255),b
 25697  0089AA  0E02               	movlw	2
 25698  0089AC  6FA9               	movwf	(??_fatfs_allocate_free_space+1)& (0+255),b
 25699  0089AE  C09E  FFD9         	movff	fatfs_allocate_free_space@fs,fsr2l
 25700  0089B2  C09F  FFDA         	movff	fatfs_allocate_free_space@fs+1,fsr2h
 25701  0089B6  50DF               	movf	indf2,w,c
 25702  0089B8  6FAA               	movwf	(??_fatfs_allocate_free_space+2)& (0+255),b
 25703  0089BA  6BAB               	clrf	(??_fatfs_allocate_free_space+3)& (0+255),b
 25704  0089BC  51A8               	movf	??_fatfs_allocate_free_space& (0+255),w,b
 25705  0089BE  03AA               	mulwf	(??_fatfs_allocate_free_space+2)& (0+255),b
 25706  0089C0  CFF3 F0AC          	movff	prodl,??_fatfs_allocate_free_space+4
 25707  0089C4  CFF4 F0AD          	movff	prodh,??_fatfs_allocate_free_space+5
 25708  0089C8  03AB               	mulwf	(??_fatfs_allocate_free_space+3)& (0+255),b
 25709  0089CA  50F3               	movf	243,w,c
 25710  0089CC  27AD               	addwf	(??_fatfs_allocate_free_space+5)& (0+255),f,b
 25711  0089CE  51A9               	movf	(??_fatfs_allocate_free_space+1)& (0+255),w,b
 25712  0089D0  03AA               	mulwf	(??_fatfs_allocate_free_space+2)& (0+255),b
 25713  0089D2  50F3               	movf	243,w,c
 25714  0089D4  27AD               	addwf	(??_fatfs_allocate_free_space+5)& (0+255),f,b
 25715  0089D6  C0AC  F0B0         	movff	??_fatfs_allocate_free_space+4,fatfs_allocate_free_space@clusterSize
 25716  0089DA  C0AD  F0B1         	movff	??_fatfs_allocate_free_space+5,fatfs_allocate_free_space@clusterSize+1
 25717  0089DE  0E00               	movlw	0
 25718  0089E0  BFB1               	btfsc	(fatfs_allocate_free_space@clusterSize+1)& (0+255),7,b
 25719  0089E2  0EFF               	movlw	-1
 25720  0089E4  6FB2               	movwf	(fatfs_allocate_free_space@clusterSize+2)& (0+255),b
 25721  0089E6  6FB3               	movwf	(fatfs_allocate_free_space@clusterSize+3)& (0+255),b
 25722                           
 25723                           ; BSR set to: 0
 25724                           ;fat_write.c: 97: clusterCount = (size / clusterSize);
 25725  0089E8  C0A4  F001         	movff	fatfs_allocate_free_space@size,___lldiv@dividend
 25726  0089EC  C0A5  F002         	movff	fatfs_allocate_free_space@size+1,___lldiv@dividend+1
 25727  0089F0  C0A6  F003         	movff	fatfs_allocate_free_space@size+2,___lldiv@dividend+2
 25728  0089F4  C0A7  F004         	movff	fatfs_allocate_free_space@size+3,___lldiv@dividend+3
 25729  0089F8  C0B0  F005         	movff	fatfs_allocate_free_space@clusterSize,___lldiv@divisor
 25730  0089FC  C0B1  F006         	movff	fatfs_allocate_free_space@clusterSize+1,___lldiv@divisor+1
 25731  008A00  C0B2  F007         	movff	fatfs_allocate_free_space@clusterSize+2,___lldiv@divisor+2
 25732  008A04  C0B3  F008         	movff	fatfs_allocate_free_space@clusterSize+3,___lldiv@divisor+3
 25733  008A08  EC7B  F026         	call	___lldiv	;wreg free
 25734  008A0C  C001  F0B4         	movff	?___lldiv,fatfs_allocate_free_space@clusterCount
 25735  008A10  C002  F0B5         	movff	?___lldiv+1,fatfs_allocate_free_space@clusterCount+1
 25736  008A14  C003  F0B6         	movff	?___lldiv+2,fatfs_allocate_free_space@clusterCount+2
 25737  008A18  C004  F0B7         	movff	?___lldiv+3,fatfs_allocate_free_space@clusterCount+3
 25738                           
 25739                           ;fat_write.c: 100: if (size-(clusterSize*clusterCount))
 25740  008A1C  0100               	movlb	0	; () banked
 25741  008A1E  51B0               	movf	fatfs_allocate_free_space@clusterSize& (0+255),w,b
 25742  008A20  03B4               	mulwf	fatfs_allocate_free_space@clusterCount& (0+255),b
 25743  008A22  CFF3 F0A8          	movff	prodl,??_fatfs_allocate_free_space
 25744  008A26  CFF4 F0A9          	movff	prodh,??_fatfs_allocate_free_space+1
 25745  008A2A  6BAA               	clrf	(??_fatfs_allocate_free_space+2)& (0+255),b
 25746  008A2C  6BAB               	clrf	(??_fatfs_allocate_free_space+3)& (0+255),b
 25747  008A2E  03B5               	mulwf	(fatfs_allocate_free_space@clusterCount+1)& (0+255),b
 25748  008A30  50F3               	movf	243,w,c
 25749  008A32  27A9               	addwf	(??_fatfs_allocate_free_space+1)& (0+255),f,b
 25750  008A34  50F4               	movf	244,w,c
 25751  008A36  23AA               	addwfc	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25752  008A38  0E00               	movlw	0
 25753  008A3A  23AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25754  008A3C  51B1               	movf	(fatfs_allocate_free_space@clusterSize+1)& (0+255),w,b
 25755  008A3E  03B4               	mulwf	fatfs_allocate_free_space@clusterCount& (0+255),b
 25756  008A40  50F3               	movf	243,w,c
 25757  008A42  27A9               	addwf	(??_fatfs_allocate_free_space+1)& (0+255),f,b
 25758  008A44  50F4               	movf	244,w,c
 25759  008A46  23AA               	addwfc	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25760  008A48  0E00               	movlw	0
 25761  008A4A  23AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25762  008A4C  51B0               	movf	fatfs_allocate_free_space@clusterSize& (0+255),w,b
 25763  008A4E  03B6               	mulwf	(fatfs_allocate_free_space@clusterCount+2)& (0+255),b
 25764  008A50  50F3               	movf	243,w,c
 25765  008A52  27AA               	addwf	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25766  008A54  50F4               	movf	244,w,c
 25767  008A56  23AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25768  008A58  51B1               	movf	(fatfs_allocate_free_space@clusterSize+1)& (0+255),w,b
 25769  008A5A  03B5               	mulwf	(fatfs_allocate_free_space@clusterCount+1)& (0+255),b
 25770  008A5C  50F3               	movf	243,w,c
 25771  008A5E  27AA               	addwf	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25772  008A60  50F4               	movf	244,w,c
 25773  008A62  23AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25774  008A64  51B2               	movf	(fatfs_allocate_free_space@clusterSize+2)& (0+255),w,b
 25775  008A66  03B4               	mulwf	fatfs_allocate_free_space@clusterCount& (0+255),b
 25776  008A68  50F3               	movf	243,w,c
 25777  008A6A  27AA               	addwf	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25778  008A6C  50F4               	movf	244,w,c
 25779  008A6E  23AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25780  008A70  51B7               	movf	(fatfs_allocate_free_space@clusterCount+3)& (0+255),w,b
 25781  008A72  03B0               	mulwf	fatfs_allocate_free_space@clusterSize& (0+255),b
 25782  008A74  50F3               	movf	243,w,c
 25783  008A76  27AB               	addwf	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25784  008A78  51B1               	movf	(fatfs_allocate_free_space@clusterSize+1)& (0+255),w,b
 25785  008A7A  03B6               	mulwf	(fatfs_allocate_free_space@clusterCount+2)& (0+255),b
 25786  008A7C  50F3               	movf	243,w,c
 25787  008A7E  27AB               	addwf	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25788  008A80  51B2               	movf	(fatfs_allocate_free_space@clusterSize+2)& (0+255),w,b
 25789  008A82  03B5               	mulwf	(fatfs_allocate_free_space@clusterCount+1)& (0+255),b
 25790  008A84  50F3               	movf	243,w,c
 25791  008A86  27AB               	addwf	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25792  008A88  51B3               	movf	(fatfs_allocate_free_space@clusterSize+3)& (0+255),w,b
 25793  008A8A  03B4               	mulwf	fatfs_allocate_free_space@clusterCount& (0+255),b
 25794  008A8C  50F3               	movf	243,w,c
 25795  008A8E  27AB               	addwf	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25796  008A90  1FA8               	comf	??_fatfs_allocate_free_space& (0+255),f,b
 25797  008A92  1FA9               	comf	(??_fatfs_allocate_free_space+1)& (0+255),f,b
 25798  008A94  1FAA               	comf	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25799  008A96  1FAB               	comf	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25800  008A98  2BA8               	incf	??_fatfs_allocate_free_space& (0+255),f,b
 25801  008A9A  0E00               	movlw	0
 25802  008A9C  23A9               	addwfc	(??_fatfs_allocate_free_space+1)& (0+255),f,b
 25803  008A9E  23AA               	addwfc	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25804  008AA0  23AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25805  008AA2  51A4               	movf	fatfs_allocate_free_space@size& (0+255),w,b
 25806  008AA4  25A8               	addwf	??_fatfs_allocate_free_space& (0+255),w,b
 25807  008AA6  6FAC               	movwf	(??_fatfs_allocate_free_space+4)& (0+255),b
 25808  008AA8  51A5               	movf	(fatfs_allocate_free_space@size+1)& (0+255),w,b
 25809  008AAA  21A9               	addwfc	(??_fatfs_allocate_free_space+1)& (0+255),w,b
 25810  008AAC  6FAD               	movwf	(??_fatfs_allocate_free_space+5)& (0+255),b
 25811  008AAE  51A6               	movf	(fatfs_allocate_free_space@size+2)& (0+255),w,b
 25812  008AB0  21AA               	addwfc	(??_fatfs_allocate_free_space+2)& (0+255),w,b
 25813  008AB2  6FAE               	movwf	(??_fatfs_allocate_free_space+6)& (0+255),b
 25814  008AB4  51A7               	movf	(fatfs_allocate_free_space@size+3)& (0+255),w,b
 25815  008AB6  21AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),w,b
 25816  008AB8  6FAF               	movwf	(??_fatfs_allocate_free_space+7)& (0+255),b
 25817  008ABA  51AF               	movf	(??_fatfs_allocate_free_space+7)& (0+255),w,b
 25818  008ABC  11AC               	iorwf	(??_fatfs_allocate_free_space+4)& (0+255),w,b
 25819  008ABE  11AD               	iorwf	(??_fatfs_allocate_free_space+5)& (0+255),w,b
 25820  008AC0  11AE               	iorwf	(??_fatfs_allocate_free_space+6)& (0+255),w,b
 25821  008AC2  E005               	bz	l1329
 25822                           
 25823                           ; BSR set to: 0
 25824                           ;fat_write.c: 101: clusterCount++;
 25825  008AC4  2BB4               	incf	fatfs_allocate_free_space@clusterCount& (0+255),f,b
 25826  008AC6  0E00               	movlw	0
 25827  008AC8  23B5               	addwfc	(fatfs_allocate_free_space@clusterCount+1)& (0+255),f,b
 25828  008ACA  23B6               	addwfc	(fatfs_allocate_free_space@clusterCount+2)& (0+255),f,b
 25829  008ACC  23B7               	addwfc	(fatfs_allocate_free_space@clusterCount+3)& (0+255),f,b
 25830  008ACE                     l1329:
 25831                           
 25832                           ; BSR set to: 0
 25833                           ;fat_write.c: 104: if (newFile)
 25834  008ACE  0100               	movlb	0	; () banked
 25835  008AD0  51A1               	movf	(fatfs_allocate_free_space@newFile+1)& (0+255),w,b
 25836  008AD2  11A0               	iorwf	fatfs_allocate_free_space@newFile& (0+255),w,b
 25837  008AD4  E045               	bz	l10658
 25838                           
 25839                           ; BSR set to: 0
 25840                           ;fat_write.c: 105: {
 25841                           ;fat_write.c: 106: if (!fatfs_find_blank_cluster(fs, fs->rootdir_first_cluster, &nextclu
      +                          ster))
 25842  008AD6  C09F  F047         	movff	fatfs_allocate_free_space@fs+1,fatfs_find_blank_cluster@fs+1
 25843  008ADA  C09E  F046         	movff	fatfs_allocate_free_space@fs,fatfs_find_blank_cluster@fs
 25844  008ADE  EE20 F005          	lfsr	2,5
 25845  008AE2  519E               	movf	fatfs_allocate_free_space@fs& (0+255),w,b
 25846  008AE4  26D9               	addwf	fsr2l,f,c
 25847  008AE6  519F               	movf	(fatfs_allocate_free_space@fs+1)& (0+255),w,b
 25848  008AE8  22DA               	addwfc	fsr2h,f,c
 25849  008AEA  CFDE F048          	movff	postinc2,fatfs_find_blank_cluster@start_cluster
 25850  008AEE  CFDE F049          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+1
 25851  008AF2  CFDE F04A          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+2
 25852  008AF6  CFDE F04B          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+3
 25853  008AFA  0E00               	movlw	high fatfs_allocate_free_space@nextcluster
 25854  008AFC  6E4D               	movwf	fatfs_find_blank_cluster@free_cluster+1,c
 25855  008AFE  0EB8               	movlw	low fatfs_allocate_free_space@nextcluster
 25856  008B00  6E4C               	movwf	fatfs_find_blank_cluster@free_cluster,c
 25857  008B02  EC25  F05A         	call	_fatfs_find_blank_cluster	;wreg free
 25858  008B06  5047               	movf	?_fatfs_find_blank_cluster+1,w,c
 25859  008B08  1046               	iorwf	?_fatfs_find_blank_cluster,w,c
 25860  008B0A  E104               	bnz	l10648
 25861  008B0C                     u12060:
 25862                           
 25863                           ;fat_write.c: 107: return 0;
 25864  008B0C  0E00               	movlw	0
 25865  008B0E  0100               	movlb	0	; () banked
 25866  008B10  6F9F               	movwf	(?_fatfs_allocate_free_space+1)& (0+255),b
 25867  008B12  D04C               	goto	L80
 25868  008B14                     l10648:
 25869                           
 25870                           ;fat_write.c: 110: if (clusterCount==1)
 25871  008B14  0100               	movlb	0	; () banked
 25872  008B16  05B4               	decf	fatfs_allocate_free_space@clusterCount& (0+255),w,b
 25873  008B18  11B5               	iorwf	(fatfs_allocate_free_space@clusterCount+1)& (0+255),w,b
 25874  008B1A  11B6               	iorwf	(fatfs_allocate_free_space@clusterCount+2)& (0+255),w,b
 25875  008B1C  11B7               	iorwf	(fatfs_allocate_free_space@clusterCount+3)& (0+255),w,b
 25876  008B1E  E12C               	bnz	l10660
 25877                           
 25878                           ; BSR set to: 0
 25879                           ;fat_write.c: 111: {
 25880                           ;fat_write.c: 112: fatfs_fat_set_cluster(fs, nextcluster, 0xFFFFFFFF);
 25881  008B20  C09F  F047         	movff	fatfs_allocate_free_space@fs+1,fatfs_fat_set_cluster@fs+1
 25882  008B24  C09E  F046         	movff	fatfs_allocate_free_space@fs,fatfs_fat_set_cluster@fs
 25883  008B28  C0B8  F048         	movff	fatfs_allocate_free_space@nextcluster,fatfs_fat_set_cluster@cluster
 25884  008B2C  C0B9  F049         	movff	fatfs_allocate_free_space@nextcluster+1,fatfs_fat_set_cluster@cluster+1
 25885  008B30  C0BA  F04A         	movff	fatfs_allocate_free_space@nextcluster+2,fatfs_fat_set_cluster@cluster+2
 25886  008B34  C0BB  F04B         	movff	fatfs_allocate_free_space@nextcluster+3,fatfs_fat_set_cluster@cluster+3
 25887  008B38  0EFF               	movlw	255
 25888  008B3A  684C               	setf	fatfs_fat_set_cluster@next_cluster,c
 25889  008B3C  684D               	setf	fatfs_fat_set_cluster@next_cluster+1,c
 25890  008B3E  684E               	setf	fatfs_fat_set_cluster@next_cluster+2,c
 25891  008B40  684F               	setf	fatfs_fat_set_cluster@next_cluster+3,c
 25892  008B42  EC17  F047         	call	_fatfs_fat_set_cluster	;wreg free
 25893                           
 25894                           ;fat_write.c: 113: *startCluster = nextcluster;
 25895  008B46  C0A2  FFD9         	movff	fatfs_allocate_free_space@startCluster,fsr2l
 25896  008B4A  C0A3  FFDA         	movff	fatfs_allocate_free_space@startCluster+1,fsr2h
 25897  008B4E  C0B8  FFDE         	movff	fatfs_allocate_free_space@nextcluster,postinc2
 25898  008B52  C0B9  FFDE         	movff	fatfs_allocate_free_space@nextcluster+1,postinc2
 25899  008B56  C0BA  FFDE         	movff	fatfs_allocate_free_space@nextcluster+2,postinc2
 25900  008B5A  C0BB  FFDE         	movff	fatfs_allocate_free_space@nextcluster+3,postinc2
 25901  008B5E  D022               	goto	l10666
 25902  008B60                     l10658:
 25903                           
 25904                           ; BSR set to: 0
 25905                           ;fat_write.c: 118: else
 25906                           ;fat_write.c: 119: nextcluster = *startCluster;
 25907  008B60  C0A2  FFD9         	movff	fatfs_allocate_free_space@startCluster,fsr2l
 25908  008B64  C0A3  FFDA         	movff	fatfs_allocate_free_space@startCluster+1,fsr2h
 25909  008B68  CFDE F0B8          	movff	postinc2,fatfs_allocate_free_space@nextcluster
 25910  008B6C  CFDE F0B9          	movff	postinc2,fatfs_allocate_free_space@nextcluster+1
 25911  008B70  CFDE F0BA          	movff	postinc2,fatfs_allocate_free_space@nextcluster+2
 25912  008B74  CFDE F0BB          	movff	postinc2,fatfs_allocate_free_space@nextcluster+3
 25913  008B78                     l10660:
 25914                           
 25915                           ; BSR set to: 0
 25916                           ;fat_write.c: 121: if (!fatfs_add_free_space(fs, &nextcluster, clusterCount))
 25917  008B78  C09F  F075         	movff	fatfs_allocate_free_space@fs+1,fatfs_add_free_space@fs+1
 25918  008B7C  C09E  F074         	movff	fatfs_allocate_free_space@fs,fatfs_add_free_space@fs
 25919  008B80  0E00               	movlw	high fatfs_allocate_free_space@nextcluster
 25920  008B82  6E77               	movwf	fatfs_add_free_space@startCluster+1,c
 25921  008B84  0100               	movlb	0	; () banked
 25922  008B86  0EB8               	movlw	low fatfs_allocate_free_space@nextcluster
 25923  008B88  6E76               	movwf	fatfs_add_free_space@startCluster,c
 25924  008B8A  C0B4  F078         	movff	fatfs_allocate_free_space@clusterCount,fatfs_add_free_space@clusters
 25925  008B8E  C0B5  F079         	movff	fatfs_allocate_free_space@clusterCount+1,fatfs_add_free_space@clusters+1
 25926  008B92  C0B6  F07A         	movff	fatfs_allocate_free_space@clusterCount+2,fatfs_add_free_space@clusters+2
 25927  008B96  C0B7  F07B         	movff	fatfs_allocate_free_space@clusterCount+3,fatfs_add_free_space@clusters+3
 25928  008B9A  ECFE  F035         	call	_fatfs_add_free_space	;wreg free
 25929  008B9E  5075               	movf	?_fatfs_add_free_space+1,w,c
 25930  008BA0  1074               	iorwf	?_fatfs_add_free_space,w,c
 25931  008BA2  E0B4               	bz	u12060
 25932  008BA4                     l10666:
 25933                           
 25934                           ;fat_write.c: 124: return 1;
 25935  008BA4  0E00               	movlw	0
 25936  008BA6  0100               	movlb	0	; () banked
 25937  008BA8  6F9F               	movwf	(?_fatfs_allocate_free_space+1)& (0+255),b
 25938  008BAA  0E01               	movlw	1
 25939  008BAC                     L80:
 25940  008BAC  0100               	movlb	0	; () banked
 25941  008BAE  6F9E               	movwf	?_fatfs_allocate_free_space& (0+255),b
 25942                           
 25943                           ; BSR set to: 0
 25944                           
 25945                           ; BSR set to: 0
 25946  008BB0  0012               	return	
 25947  008BB2                     __end_of_fatfs_allocate_free_space:
 25948                           	opt stack 0
 25949                           tosu	equ	0xFFF
 25950                           tosh	equ	0xFFE
 25951                           tosl	equ	0xFFD
 25952                           pclath	equ	0xFFA
 25953                           tblptru	equ	0xFF8
 25954                           tblptrh	equ	0xFF7
 25955                           tblptrl	equ	0xFF6
 25956                           tablat	equ	0xFF5
 25957                           prodh	equ	0xFF4
 25958                           prodl	equ	0xFF3
 25959                           indf0	equ	0xFEF
 25960                           postinc0	equ	0xFEE
 25961                           fsr0h	equ	0xFEA
 25962                           fsr0l	equ	0xFE9
 25963                           wreg	equ	0xFE8
 25964                           indf1	equ	0xFE7
 25965                           postinc1	equ	0xFE6
 25966                           postdec1	equ	0xFE5
 25967                           fsr1h	equ	0xFE2
 25968                           fsr1l	equ	0xFE1
 25969                           indf2	equ	0xFDF
 25970                           postinc2	equ	0xFDE
 25971                           postdec2	equ	0xFDD
 25972                           fsr2h	equ	0xFDA
 25973                           fsr2l	equ	0xFD9
 25974                           status	equ	0xFD8
 25975                           
 25976 ;; *************** function _fatfs_add_free_space *****************
 25977 ;; Defined at:
 25978 ;;		line 45 in file "fat_write.c"
 25979 ;; Parameters:    Size  Location     Type
 25980 ;;  fs              2  115[COMRAM] PTR struct fatfs
 25981 ;;		 -> _fs(1095), 
 25982 ;;  startCluster    2  117[COMRAM] PTR unsigned long 
 25983 ;;		 -> fatfs_allocate_free_space@nextcluster(4), _write_sectors@LastCluster(4), 
 25984 ;;  clusters        4  119[COMRAM] unsigned long 
 25985 ;; Auto vars:     Size  Location     Type
 25986 ;;  nextcluster     4   26[BANK0 ] unsigned long 
 25987 ;;  i               4   22[BANK0 ] unsigned long 
 25988 ;;  start           4   18[BANK0 ] unsigned long 
 25989 ;; Return value:  Size  Location     Type
 25990 ;;                  2  115[COMRAM] int 
 25991 ;; Registers used:
 25992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 25993 ;; Tracked objects:
 25994 ;;		On entry : 0/0
 25995 ;;		On exit  : 0/0
 25996 ;;		Unchanged: 0/0
 25997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25998 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25999 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26000 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26001 ;;      Totals:        12      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26002 ;;Total ram usage:       24 bytes
 26003 ;; Hardware stack levels used:    1
 26004 ;; Hardware stack levels required when called:    6
 26005 ;; This function calls:
 26006 ;;		_fatfs_fat_set_cluster
 26007 ;;		_fatfs_find_blank_cluster
 26008 ;;		_fatfs_set_fs_info_next_free_cluster
 26009 ;; This function is called by:
 26010 ;;		__write_sectors
 26011 ;;		_fatfs_allocate_free_space
 26012 ;; This function uses a non-reentrant model
 26013 ;;
 26014                           
 26015                           	psect	text75
 26016  006BFC                     __ptext75:
 26017                           	opt stack 0
 26018  006BFC                     _fatfs_add_free_space:
 26019                           	opt stack 19
 26020                           
 26021                           ;fat_write.c: 47: uint32 i;
 26022                           ;fat_write.c: 48: uint32 nextcluster;
 26023                           ;fat_write.c: 49: uint32 start = *startCluster;
 26024                           
 26025                           ; BSR set to: 0
 26026                           ;incstack = 0
 26027  006BFC  C076  FFD9         	movff	fatfs_add_free_space@startCluster,fsr2l
 26028  006C00  C077  FFDA         	movff	fatfs_add_free_space@startCluster+1,fsr2h
 26029  006C04  CFDE F092          	movff	postinc2,fatfs_add_free_space@start
 26030  006C08  CFDE F093          	movff	postinc2,fatfs_add_free_space@start+1
 26031  006C0C  CFDE F094          	movff	postinc2,fatfs_add_free_space@start+2
 26032  006C10  0100               	movlb	0	; () banked
 26033  006C12  CFDE F095          	movff	postinc2,fatfs_add_free_space@start+3
 26034                           
 26035                           ; BSR set to: 0
 26036                           ;fat_write.c: 52: if (fs->next_free_cluster != 0xFFFFFFFF)
 26037  006C16  EE20 F01F          	lfsr	2,31
 26038  006C1A  5074               	movf	fatfs_add_free_space@fs,w,c
 26039  006C1C  26D9               	addwf	fsr2l,f,c
 26040  006C1E  5075               	movf	fatfs_add_free_space@fs+1,w,c
 26041  006C20  22DA               	addwfc	fsr2h,f,c
 26042  006C22  CFDE F07C          	movff	postinc2,??_fatfs_add_free_space
 26043  006C26  CFDE F07D          	movff	postinc2,??_fatfs_add_free_space+1
 26044  006C2A  CFDE F07E          	movff	postinc2,??_fatfs_add_free_space+2
 26045  006C2E  CFDE F07F          	movff	postinc2,??_fatfs_add_free_space+3
 26046  006C32  287C               	incf	??_fatfs_add_free_space,w,c
 26047  006C34  B4D8               	btfsc	status,2,c
 26048  006C36  287D               	incf	??_fatfs_add_free_space+1,w,c
 26049  006C38  B4D8               	btfsc	status,2,c
 26050  006C3A  287E               	incf	??_fatfs_add_free_space+2,w,c
 26051  006C3C  B4D8               	btfsc	status,2,c
 26052  006C3E  287F               	incf	??_fatfs_add_free_space+3,w,c
 26053  006C40  E00B               	bz	l9880
 26054                           
 26055                           ; BSR set to: 0
 26056                           ;fat_write.c: 53: fatfs_set_fs_info_next_free_cluster(fs, 0xFFFFFFFF);
 26057  006C42  C075  F047         	movff	fatfs_add_free_space@fs+1,fatfs_set_fs_info_next_free_cluster@fs+1
 26058  006C46  C074  F046         	movff	fatfs_add_free_space@fs,fatfs_set_fs_info_next_free_cluster@fs
 26059  006C4A  0EFF               	movlw	255
 26060  006C4C  6848               	setf	fatfs_set_fs_info_next_free_cluster@newValue,c
 26061  006C4E  6849               	setf	fatfs_set_fs_info_next_free_cluster@newValue+1,c
 26062  006C50  684A               	setf	fatfs_set_fs_info_next_free_cluster@newValue+2,c
 26063  006C52  684B               	setf	fatfs_set_fs_info_next_free_cluster@newValue+3,c
 26064  006C54  ECDC  F039         	call	_fatfs_set_fs_info_next_free_cluster	;wreg free
 26065  006C58                     l9880:
 26066                           
 26067                           ;fat_write.c: 55: for (i=0;i<clusters;i++)
 26068  006C58  0100               	movlb	0	; () banked
 26069  006C5A  6B96               	clrf	fatfs_add_free_space@i& (0+255),b
 26070  006C5C  6B97               	clrf	(fatfs_add_free_space@i+1)& (0+255),b
 26071  006C5E  6B98               	clrf	(fatfs_add_free_space@i+2)& (0+255),b
 26072  006C60  6B99               	clrf	(fatfs_add_free_space@i+3)& (0+255),b
 26073  006C62  D069               	goto	l1317
 26074  006C64                     l9882:
 26075                           
 26076                           ; BSR set to: 0
 26077                           ;fat_write.c: 56: {
 26078                           ;fat_write.c: 58: if (fatfs_find_blank_cluster(fs, fs->rootdir_first_cluster, &nextclust
      +                          er))
 26079  006C64  C075  F047         	movff	fatfs_add_free_space@fs+1,fatfs_find_blank_cluster@fs+1
 26080  006C68  C074  F046         	movff	fatfs_add_free_space@fs,fatfs_find_blank_cluster@fs
 26081  006C6C  EE20 F005          	lfsr	2,5
 26082  006C70  5074               	movf	fatfs_add_free_space@fs,w,c
 26083  006C72  26D9               	addwf	fsr2l,f,c
 26084  006C74  5075               	movf	fatfs_add_free_space@fs+1,w,c
 26085  006C76  22DA               	addwfc	fsr2h,f,c
 26086  006C78  CFDE F048          	movff	postinc2,fatfs_find_blank_cluster@start_cluster
 26087  006C7C  CFDE F049          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+1
 26088  006C80  CFDE F04A          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+2
 26089  006C84  CFDE F04B          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+3
 26090  006C88  0E00               	movlw	high fatfs_add_free_space@nextcluster
 26091  006C8A  6E4D               	movwf	fatfs_find_blank_cluster@free_cluster+1,c
 26092  006C8C  0100               	movlb	0	; () banked
 26093  006C8E  0E9A               	movlw	low fatfs_add_free_space@nextcluster
 26094  006C90  6E4C               	movwf	fatfs_find_blank_cluster@free_cluster,c
 26095  006C92  EC25  F05A         	call	_fatfs_find_blank_cluster	;wreg free
 26096  006C96  5047               	movf	?_fatfs_find_blank_cluster+1,w,c
 26097  006C98  1046               	iorwf	?_fatfs_find_blank_cluster,w,c
 26098  006C9A  E044               	bz	l9892
 26099                           
 26100                           ;fat_write.c: 59: {
 26101                           ;fat_write.c: 61: fatfs_fat_set_cluster(fs, start, nextcluster);
 26102  006C9C  C075  F047         	movff	fatfs_add_free_space@fs+1,fatfs_fat_set_cluster@fs+1
 26103  006CA0  C074  F046         	movff	fatfs_add_free_space@fs,fatfs_fat_set_cluster@fs
 26104  006CA4  C092  F048         	movff	fatfs_add_free_space@start,fatfs_fat_set_cluster@cluster
 26105  006CA8  C093  F049         	movff	fatfs_add_free_space@start+1,fatfs_fat_set_cluster@cluster+1
 26106  006CAC  C094  F04A         	movff	fatfs_add_free_space@start+2,fatfs_fat_set_cluster@cluster+2
 26107  006CB0  C095  F04B         	movff	fatfs_add_free_space@start+3,fatfs_fat_set_cluster@cluster+3
 26108  006CB4  C09A  F04C         	movff	fatfs_add_free_space@nextcluster,fatfs_fat_set_cluster@next_cluster
 26109  006CB8  C09B  F04D         	movff	fatfs_add_free_space@nextcluster+1,fatfs_fat_set_cluster@next_cluster+1
 26110  006CBC  C09C  F04E         	movff	fatfs_add_free_space@nextcluster+2,fatfs_fat_set_cluster@next_cluster+2
 26111  006CC0  C09D  F04F         	movff	fatfs_add_free_space@nextcluster+3,fatfs_fat_set_cluster@next_cluster+3
 26112  006CC4  EC17  F047         	call	_fatfs_fat_set_cluster	;wreg free
 26113                           
 26114                           ;fat_write.c: 64: fatfs_fat_set_cluster(fs, nextcluster, 0xFFFFFFFF);
 26115  006CC8  C075  F047         	movff	fatfs_add_free_space@fs+1,fatfs_fat_set_cluster@fs+1
 26116  006CCC  C074  F046         	movff	fatfs_add_free_space@fs,fatfs_fat_set_cluster@fs
 26117  006CD0  C09A  F048         	movff	fatfs_add_free_space@nextcluster,fatfs_fat_set_cluster@cluster
 26118  006CD4  C09B  F049         	movff	fatfs_add_free_space@nextcluster+1,fatfs_fat_set_cluster@cluster+1
 26119  006CD8  C09C  F04A         	movff	fatfs_add_free_space@nextcluster+2,fatfs_fat_set_cluster@cluster+2
 26120  006CDC  C09D  F04B         	movff	fatfs_add_free_space@nextcluster+3,fatfs_fat_set_cluster@cluster+3
 26121  006CE0  0EFF               	movlw	255
 26122  006CE2  684C               	setf	fatfs_fat_set_cluster@next_cluster,c
 26123  006CE4  684D               	setf	fatfs_fat_set_cluster@next_cluster+1,c
 26124  006CE6  684E               	setf	fatfs_fat_set_cluster@next_cluster+2,c
 26125  006CE8  684F               	setf	fatfs_fat_set_cluster@next_cluster+3,c
 26126  006CEA  EC17  F047         	call	_fatfs_fat_set_cluster	;wreg free
 26127                           
 26128                           ;fat_write.c: 67: start = nextcluster;
 26129  006CEE  C09A  F092         	movff	fatfs_add_free_space@nextcluster,fatfs_add_free_space@start
 26130  006CF2  C09B  F093         	movff	fatfs_add_free_space@nextcluster+1,fatfs_add_free_space@start+1
 26131  006CF6  C09C  F094         	movff	fatfs_add_free_space@nextcluster+2,fatfs_add_free_space@start+2
 26132  006CFA  C09D  F095         	movff	fatfs_add_free_space@nextcluster+3,fatfs_add_free_space@start+3
 26133                           
 26134                           ;fat_write.c: 68: if (i == 0)
 26135  006CFE  0100               	movlb	0	; () banked
 26136  006D00  5199               	movf	(fatfs_add_free_space@i+3)& (0+255),w,b
 26137  006D02  1196               	iorwf	fatfs_add_free_space@i& (0+255),w,b
 26138  006D04  1197               	iorwf	(fatfs_add_free_space@i+1)& (0+255),w,b
 26139  006D06  1198               	iorwf	(fatfs_add_free_space@i+2)& (0+255),w,b
 26140  006D08  E110               	bnz	l9896
 26141                           
 26142                           ; BSR set to: 0
 26143                           ;fat_write.c: 69: *startCluster = nextcluster;
 26144  006D0A  C076  FFD9         	movff	fatfs_add_free_space@startCluster,fsr2l
 26145  006D0E  C077  FFDA         	movff	fatfs_add_free_space@startCluster+1,fsr2h
 26146  006D12  C09A  FFDE         	movff	fatfs_add_free_space@nextcluster,postinc2
 26147  006D16  C09B  FFDE         	movff	fatfs_add_free_space@nextcluster+1,postinc2
 26148  006D1A  C09C  FFDE         	movff	fatfs_add_free_space@nextcluster+2,postinc2
 26149  006D1E  C09D  FFDE         	movff	fatfs_add_free_space@nextcluster+3,postinc2
 26150  006D22  D003               	goto	l9896
 26151  006D24                     l9892:
 26152                           
 26153                           ;fat_write.c: 71: else
 26154                           ;fat_write.c: 72: return 0;
 26155  006D24  0E00               	movlw	0
 26156  006D26  6E75               	movwf	?_fatfs_add_free_space+1,c
 26157  006D28  D013               	goto	L81
 26158  006D2A                     l9896:
 26159  006D2A  0100               	movlb	0	; () banked
 26160  006D2C  2B96               	incf	fatfs_add_free_space@i& (0+255),f,b
 26161  006D2E  0E00               	movlw	0
 26162  006D30  2397               	addwfc	(fatfs_add_free_space@i+1)& (0+255),f,b
 26163  006D32  2398               	addwfc	(fatfs_add_free_space@i+2)& (0+255),f,b
 26164  006D34  2399               	addwfc	(fatfs_add_free_space@i+3)& (0+255),f,b
 26165  006D36                     l1317:
 26166                           
 26167                           ; BSR set to: 0
 26168  006D36  5078               	movf	fatfs_add_free_space@clusters,w,c
 26169  006D38  0100               	movlb	0	; () banked
 26170  006D3A  5D96               	subwf	fatfs_add_free_space@i& (0+255),w,b
 26171  006D3C  5079               	movf	fatfs_add_free_space@clusters+1,w,c
 26172  006D3E  5997               	subwfb	(fatfs_add_free_space@i+1)& (0+255),w,b
 26173  006D40  507A               	movf	fatfs_add_free_space@clusters+2,w,c
 26174  006D42  5998               	subwfb	(fatfs_add_free_space@i+2)& (0+255),w,b
 26175  006D44  507B               	movf	fatfs_add_free_space@clusters+3,w,c
 26176  006D46  5999               	subwfb	(fatfs_add_free_space@i+3)& (0+255),w,b
 26177  006D48  E38D               	bnc	l9882
 26178                           
 26179                           ; BSR set to: 0
 26180                           ;fat_write.c: 73: }
 26181                           ;fat_write.c: 75: return 1;
 26182                           
 26183                           ; BSR set to: 0
 26184  006D4A  0E00               	movlw	0
 26185  006D4C  6E75               	movwf	?_fatfs_add_free_space+1,c
 26186  006D4E  0E01               	movlw	1
 26187  006D50                     L81:
 26188  006D50  6E74               	movwf	?_fatfs_add_free_space,c
 26189                           
 26190                           ; BSR set to: 0
 26191  006D52  0012               	return	
 26192  006D54                     __end_of_fatfs_add_free_space:
 26193                           	opt stack 0
 26194                           tosu	equ	0xFFF
 26195                           tosh	equ	0xFFE
 26196                           tosl	equ	0xFFD
 26197                           pclath	equ	0xFFA
 26198                           tblptru	equ	0xFF8
 26199                           tblptrh	equ	0xFF7
 26200                           tblptrl	equ	0xFF6
 26201                           tablat	equ	0xFF5
 26202                           prodh	equ	0xFF4
 26203                           prodl	equ	0xFF3
 26204                           indf0	equ	0xFEF
 26205                           postinc0	equ	0xFEE
 26206                           fsr0h	equ	0xFEA
 26207                           fsr0l	equ	0xFE9
 26208                           wreg	equ	0xFE8
 26209                           indf1	equ	0xFE7
 26210                           postinc1	equ	0xFE6
 26211                           postdec1	equ	0xFE5
 26212                           fsr1h	equ	0xFE2
 26213                           fsr1l	equ	0xFE1
 26214                           indf2	equ	0xFDF
 26215                           postinc2	equ	0xFDE
 26216                           postdec2	equ	0xFDD
 26217                           fsr2h	equ	0xFDA
 26218                           fsr2l	equ	0xFD9
 26219                           status	equ	0xFD8
 26220                           
 26221 ;; *************** function _fatfs_set_fs_info_next_free_cluster *****************
 26222 ;; Defined at:
 26223 ;;		line 260 in file "fat_table.c"
 26224 ;; Parameters:    Size  Location     Type
 26225 ;;  fs              2   69[COMRAM] PTR struct fatfs
 26226 ;;		 -> _fs(1095), 
 26227 ;;  newValue        4   71[COMRAM] unsigned long 
 26228 ;; Auto vars:     Size  Location     Type
 26229 ;;  pbuf            2   81[COMRAM] PTR struct fat_buffer
 26230 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 26231 ;;		 -> NULL(0), 
 26232 ;; Return value:  Size  Location     Type
 26233 ;;		None               void
 26234 ;; Registers used:
 26235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 26236 ;; Tracked objects:
 26237 ;;		On entry : 0/0
 26238 ;;		On exit  : 0/0
 26239 ;;		Unchanged: 0/0
 26240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26241 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26243 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26244 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26245 ;;Total ram usage:       14 bytes
 26246 ;; Hardware stack levels used:    1
 26247 ;; Hardware stack levels required when called:    5
 26248 ;; This function calls:
 26249 ;;		_fatfs_fat_read_sector
 26250 ;;		_media_write
 26251 ;; This function is called by:
 26252 ;;		_fatfs_add_free_space
 26253 ;;		_fatfs_allocate_free_space
 26254 ;; This function uses a non-reentrant model
 26255 ;;
 26256                           
 26257                           	psect	text76
 26258  0073B8                     __ptext76:
 26259                           	opt stack 0
 26260  0073B8                     _fatfs_set_fs_info_next_free_cluster:
 26261                           	opt stack 20
 26262                           
 26263                           ;fat_table.c: 262: if (fs->fat_type == FAT_TYPE_16)
 26264                           
 26265                           ;incstack = 0
 26266  0073B8  EE20 F028          	lfsr	2,40
 26267  0073BC  5046               	movf	fatfs_set_fs_info_next_free_cluster@fs,w,c
 26268  0073BE  26D9               	addwf	fsr2l,f,c
 26269  0073C0  5047               	movf	fatfs_set_fs_info_next_free_cluster@fs+1,w,c
 26270  0073C2  22DA               	addwfc	fsr2h,f,c
 26271  0073C4  50DF               	movf	indf2,w,c
 26272  0073C6  E101 D0CB          	bz	l1238
 26273                           
 26274                           ;fat_table.c: 264: else
 26275                           ;fat_table.c: 265: {
 26276                           ;fat_table.c: 267: struct fat_buffer *pbuf = fatfs_fat_read_sector(fs, fs->lba_begin+fs-
      +                          >fs_info_sector);
 26277                           
 26278                           ;fat_table.c: 263: ;
 26279  0073CA  C047  F035         	movff	fatfs_set_fs_info_next_free_cluster@fs+1,fatfs_fat_read_sector@fs+1
 26280  0073CE  C046  F034         	movff	fatfs_set_fs_info_next_free_cluster@fs,fatfs_fat_read_sector@fs
 26281  0073D2  EE20 F017          	lfsr	2,23
 26282  0073D6  5046               	movf	fatfs_set_fs_info_next_free_cluster@fs,w,c
 26283  0073D8  26D9               	addwf	fsr2l,f,c
 26284  0073DA  5047               	movf	fatfs_set_fs_info_next_free_cluster@fs+1,w,c
 26285  0073DC  22DA               	addwfc	fsr2h,f,c
 26286  0073DE  CFDE F04C          	movff	postinc2,??_fatfs_set_fs_info_next_free_cluster
 26287  0073E2  CFDE F04D          	movff	postinc2,??_fatfs_set_fs_info_next_free_cluster+1
 26288  0073E6  CFDE F04E          	movff	postinc2,??_fatfs_set_fs_info_next_free_cluster+2
 26289  0073EA  CFDE F04F          	movff	postinc2,??_fatfs_set_fs_info_next_free_cluster+3
 26290  0073EE  EE20 F015          	lfsr	2,21
 26291  0073F2  5046               	movf	fatfs_set_fs_info_next_free_cluster@fs,w,c
 26292  0073F4  26D9               	addwf	fsr2l,f,c
 26293  0073F6  5047               	movf	fatfs_set_fs_info_next_free_cluster@fs+1,w,c
 26294  0073F8  22DA               	addwfc	fsr2h,f,c
 26295  0073FA  CFDE F050          	movff	postinc2,??_fatfs_set_fs_info_next_free_cluster+4
 26296  0073FE  CFDD F051          	movff	postdec2,??_fatfs_set_fs_info_next_free_cluster+5
 26297  007402  5050               	movf	??_fatfs_set_fs_info_next_free_cluster+4,w,c
 26298  007404  244C               	addwf	??_fatfs_set_fs_info_next_free_cluster,w,c
 26299  007406  6E36               	movwf	fatfs_fat_read_sector@sector,c
 26300  007408  5051               	movf	??_fatfs_set_fs_info_next_free_cluster+5,w,c
 26301  00740A  204D               	addwfc	??_fatfs_set_fs_info_next_free_cluster+1,w,c
 26302  00740C  6E37               	movwf	fatfs_fat_read_sector@sector+1,c
 26303  00740E  0E00               	movlw	0
 26304  007410  204E               	addwfc	??_fatfs_set_fs_info_next_free_cluster+2,w,c
 26305  007412  6E38               	movwf	fatfs_fat_read_sector@sector+2,c
 26306  007414  0E00               	movlw	0
 26307  007416  204F               	addwfc	??_fatfs_set_fs_info_next_free_cluster+3,w,c
 26308  007418  6E39               	movwf	fatfs_fat_read_sector@sector+3,c
 26309  00741A  EC81  F043         	call	_fatfs_fat_read_sector	;wreg free
 26310  00741E  C034  F052         	movff	?_fatfs_fat_read_sector,fatfs_set_fs_info_next_free_cluster@pbuf
 26311  007422  C035  F053         	movff	?_fatfs_fat_read_sector+1,fatfs_set_fs_info_next_free_cluster@pbuf+1
 26312                           
 26313                           ;fat_table.c: 268: if (!pbuf)
 26314  007426  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26315  007428  1052               	iorwf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26316  00742A  E101 D099          	bz	l1238
 26317                           
 26318                           ;fat_table.c: 272: { { pbuf->ptr[492+0] = (uint8)((newValue)&0xFF); pbuf->ptr[492+1] = (
      +                          uint8)((newValue>>8)&0xFF); pbuf->ptr[492+2] = (uint8)((newValue>>16)&0xFF); pbuf->ptr[4
      +                          92+3] = (uint8)((newValue>>24)&0xFF); }; pbuf->dirty = 1; };
 26319                           
 26320                           ;fat_table.c: 269: return ;
 26321  00742E  EE22 F006          	lfsr	2,518
 26322  007432  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26323  007434  26D9               	addwf	fsr2l,f,c
 26324  007436  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26325  007438  22DA               	addwfc	fsr2h,f,c
 26326  00743A  EE11 F0EC          	lfsr	1,492
 26327  00743E  50DE               	movf	postinc2,w,c
 26328  007440  26E1               	addwf	fsr1l,f,c
 26329  007442  50DD               	movf	postdec2,w,c
 26330  007444  22E2               	addwfc	fsr1h,f,c
 26331  007446  C048  FFE7         	movff	fatfs_set_fs_info_next_free_cluster@newValue,indf1
 26332  00744A  EE22 F006          	lfsr	2,518
 26333  00744E  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26334  007450  26D9               	addwf	fsr2l,f,c
 26335  007452  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26336  007454  22DA               	addwfc	fsr2h,f,c
 26337  007456  EE11 F0ED          	lfsr	1,493
 26338  00745A  50DE               	movf	postinc2,w,c
 26339  00745C  26E1               	addwf	fsr1l,f,c
 26340  00745E  50DD               	movf	postdec2,w,c
 26341  007460  22E2               	addwfc	fsr1h,f,c
 26342  007462  C049  FFE7         	movff	fatfs_set_fs_info_next_free_cluster@newValue+1,indf1
 26343  007466  EE22 F006          	lfsr	2,518
 26344  00746A  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26345  00746C  26D9               	addwf	fsr2l,f,c
 26346  00746E  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26347  007470  22DA               	addwfc	fsr2h,f,c
 26348  007472  EE11 F0EE          	lfsr	1,494
 26349  007476  50DE               	movf	postinc2,w,c
 26350  007478  26E1               	addwf	fsr1l,f,c
 26351  00747A  50DD               	movf	postdec2,w,c
 26352  00747C  22E2               	addwfc	fsr1h,f,c
 26353  00747E  C04A  FFE7         	movff	fatfs_set_fs_info_next_free_cluster@newValue+2,indf1
 26354  007482  EE22 F006          	lfsr	2,518
 26355  007486  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26356  007488  26D9               	addwf	fsr2l,f,c
 26357  00748A  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26358  00748C  22DA               	addwfc	fsr2h,f,c
 26359  00748E  EE11 F0EF          	lfsr	1,495
 26360  007492  50DE               	movf	postinc2,w,c
 26361  007494  26E1               	addwf	fsr1l,f,c
 26362  007496  50DD               	movf	postdec2,w,c
 26363  007498  22E2               	addwfc	fsr1h,f,c
 26364  00749A  C04B  FFE7         	movff	fatfs_set_fs_info_next_free_cluster@newValue+3,indf1
 26365  00749E  EE22 F004          	lfsr	2,516
 26366  0074A2  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26367  0074A4  26D9               	addwf	fsr2l,f,c
 26368  0074A6  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26369  0074A8  22DA               	addwfc	fsr2h,f,c
 26370  0074AA  0E01               	movlw	1
 26371  0074AC  6EDE               	movwf	postinc2,c
 26372  0074AE  6ADD               	clrf	postdec2,c
 26373                           
 26374                           ;fat_table.c: 273: fs->next_free_cluster = newValue;
 26375  0074B0  EE20 F01F          	lfsr	2,31
 26376  0074B4  5046               	movf	fatfs_set_fs_info_next_free_cluster@fs,w,c
 26377  0074B6  26D9               	addwf	fsr2l,f,c
 26378  0074B8  5047               	movf	fatfs_set_fs_info_next_free_cluster@fs+1,w,c
 26379  0074BA  22DA               	addwfc	fsr2h,f,c
 26380  0074BC  C048  FFDE         	movff	fatfs_set_fs_info_next_free_cluster@newValue,postinc2
 26381  0074C0  C049  FFDE         	movff	fatfs_set_fs_info_next_free_cluster@newValue+1,postinc2
 26382  0074C4  C04A  FFDE         	movff	fatfs_set_fs_info_next_free_cluster@newValue+2,postinc2
 26383  0074C8  C04B  FFDE         	movff	fatfs_set_fs_info_next_free_cluster@newValue+3,postinc2
 26384                           
 26385                           ;fat_table.c: 276: if (fs->disk_io.write_media)
 26386  0074CC  EE20 F02B          	lfsr	2,43
 26387  0074D0  5046               	movf	fatfs_set_fs_info_next_free_cluster@fs,w,c
 26388  0074D2  26D9               	addwf	fsr2l,f,c
 26389  0074D4  5047               	movf	fatfs_set_fs_info_next_free_cluster@fs+1,w,c
 26390  0074D6  22DA               	addwfc	fsr2h,f,c
 26391  0074D8  50DE               	movf	postinc2,w,c
 26392  0074DA  10DD               	iorwf	postdec2,w,c
 26393  0074DC  E02E               	bz	l9508
 26394                           
 26395                           ;fat_table.c: 277: fs->disk_io.write_media(pbuf->address, pbuf->sector, 1);
 26396  0074DE  EE22 F000          	lfsr	2,512
 26397  0074E2  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26398  0074E4  26D9               	addwf	fsr2l,f,c
 26399  0074E6  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26400  0074E8  22DA               	addwfc	fsr2h,f,c
 26401  0074EA  CFDE F009          	movff	postinc2,media_write@sector
 26402  0074EE  CFDE F00A          	movff	postinc2,media_write@sector+1
 26403  0074F2  CFDE F00B          	movff	postinc2,media_write@sector+2
 26404  0074F6  CFDE F00C          	movff	postinc2,media_write@sector+3
 26405  0074FA  0E20               	movlw	32
 26406  0074FC  6E0F               	movwf	media_write@buffer+2,c
 26407  0074FE  C053  F00E         	movff	fatfs_set_fs_info_next_free_cluster@pbuf+1,media_write@buffer+1
 26408  007502  C052  F00D         	movff	fatfs_set_fs_info_next_free_cluster@pbuf,media_write@buffer
 26409  007506  0E01               	movlw	1
 26410  007508  6E10               	movwf	media_write@sector_count,c
 26411  00750A  6A11               	clrf	media_write@sector_count+1,c
 26412  00750C  6A12               	clrf	media_write@sector_count+2,c
 26413  00750E  6A13               	clrf	media_write@sector_count+3,c
 26414  007510  EE20 F02B          	lfsr	2,43
 26415  007514  5046               	movf	fatfs_set_fs_info_next_free_cluster@fs,w,c
 26416  007516  26D9               	addwf	fsr2l,f,c
 26417  007518  5047               	movf	fatfs_set_fs_info_next_free_cluster@fs+1,w,c
 26418  00751A  22DA               	addwfc	fsr2h,f,c
 26419  00751C  CFDE F04C          	movff	postinc2,??_fatfs_set_fs_info_next_free_cluster
 26420  007520  CFDD F04D          	movff	postdec2,??_fatfs_set_fs_info_next_free_cluster+1
 26421  007524  D801               	call	u10378
 26422  007526  D009               	goto	l9508
 26423  007528                     u10378:
 26424  007528  0005               	push	
 26425  00752A  6EFA               	movwf	pclath,c
 26426  00752C  504C               	movf	??_fatfs_set_fs_info_next_free_cluster,w,c
 26427  00752E  6EFD               	movwf	tosl,c
 26428  007530  504D               	movf	??_fatfs_set_fs_info_next_free_cluster+1,w,c
 26429  007532  6EFE               	movwf	tosh,c
 26430  007534  6AFF               	clrf	tosu,c
 26431  007536  50FA               	movf	pclath,w,c
 26432  007538  0012               	return		;indir
 26433  00753A                     l9508:
 26434                           
 26435                           ;fat_table.c: 280: pbuf->address = 0xFFFFFFFF;
 26436  00753A  EE22 F000          	lfsr	2,512
 26437  00753E  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26438  007540  26D9               	addwf	fsr2l,f,c
 26439  007542  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26440  007544  22DA               	addwfc	fsr2h,f,c
 26441  007546  68DE               	setf	postinc2,c
 26442  007548  68DE               	setf	postinc2,c
 26443  00754A  68DE               	setf	postinc2,c
 26444  00754C  68DD               	setf	postdec2,c
 26445                           
 26446                           ;fat_table.c: 281: pbuf->dirty = 0;
 26447  00754E  EE22 F004          	lfsr	2,516
 26448  007552  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26449  007554  26D9               	addwf	fsr2l,f,c
 26450  007556  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26451  007558  22DA               	addwfc	fsr2h,f,c
 26452  00755A  0E00               	movlw	0
 26453  00755C  6EDE               	movwf	postinc2,c
 26454  00755E  6EDD               	movwf	postdec2,c
 26455  007560                     l1238:
 26456  007560  0012               	return	
 26457  007562                     __end_of_fatfs_set_fs_info_next_free_cluster:
 26458                           	opt stack 0
 26459                           tosu	equ	0xFFF
 26460                           tosh	equ	0xFFE
 26461                           tosl	equ	0xFFD
 26462                           pclath	equ	0xFFA
 26463                           tblptru	equ	0xFF8
 26464                           tblptrh	equ	0xFF7
 26465                           tblptrl	equ	0xFF6
 26466                           tablat	equ	0xFF5
 26467                           prodh	equ	0xFF4
 26468                           prodl	equ	0xFF3
 26469                           indf0	equ	0xFEF
 26470                           postinc0	equ	0xFEE
 26471                           fsr0h	equ	0xFEA
 26472                           fsr0l	equ	0xFE9
 26473                           wreg	equ	0xFE8
 26474                           indf1	equ	0xFE7
 26475                           postinc1	equ	0xFE6
 26476                           postdec1	equ	0xFE5
 26477                           fsr1h	equ	0xFE2
 26478                           fsr1l	equ	0xFE1
 26479                           indf2	equ	0xFDF
 26480                           postinc2	equ	0xFDE
 26481                           postdec2	equ	0xFDD
 26482                           fsr2h	equ	0xFDA
 26483                           fsr2l	equ	0xFD9
 26484                           status	equ	0xFD8
 26485                           
 26486 ;; *************** function _fatfs_add_file_entry *****************
 26487 ;; Defined at:
 26488 ;;		line 266 in file "fat_write.c"
 26489 ;; Parameters:    Size  Location     Type
 26490 ;;  fs              2   76[BANK0 ] PTR struct fatfs
 26491 ;;		 -> _fs(1095), 
 26492 ;;  dirCluster      4   78[BANK0 ] unsigned long 
 26493 ;;  filename        2   82[BANK0 ] PTR unsigned char 
 26494 ;;		 -> RAM(3967), NULL(0), 
 26495 ;;  shortfilenam    2   84[BANK0 ] PTR unsigned char 
 26496 ;;		 -> RAM(3967), NULL(0), 
 26497 ;;  startCluster    4   86[BANK0 ] unsigned long 
 26498 ;;  size            4   90[BANK0 ] unsigned long 
 26499 ;;  dir             2   94[BANK0 ] int 
 26500 ;; Auto vars:     Size  Location     Type
 26501 ;;  shortEntry     32   24[BANK1 ] struct fat_dir_entry
 26502 ;;  dirSector       4   20[BANK1 ] unsigned long 
 26503 ;;  x               4    6[BANK1 ] unsigned long 
 26504 ;;  entryCount      2   16[BANK1 ] int 
 26505 ;;  foundEnd        2   12[BANK1 ] int 
 26506 ;;  recordoffset    2   10[BANK1 ] unsigned short 
 26507 ;;  dirtySector     2    4[BANK1 ] int 
 26508 ;;  pSname          2    0[BANK1 ] PTR unsigned char 
 26509 ;;		 -> RAM(3967), NULL(0), 
 26510 ;;  item            1   19[BANK1 ] unsigned char 
 26511 ;;  dirOffset       1   18[BANK1 ] unsigned char 
 26512 ;;  checksum        1   15[BANK1 ] unsigned char 
 26513 ;;  i               1   14[BANK1 ] unsigned char 
 26514 ;; Return value:  Size  Location     Type
 26515 ;;                  2   76[BANK0 ] int 
 26516 ;; Registers used:
 26517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26518 ;; Tracked objects:
 26519 ;;		On entry : 0/0
 26520 ;;		On exit  : 0/0
 26521 ;;		Unchanged: 0/0
 26522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26523 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26524 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26525 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26526 ;;      Totals:         0      24      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26527 ;;Total ram usage:       80 bytes
 26528 ;; Hardware stack levels used:    1
 26529 ;; Hardware stack levels required when called:    8
 26530 ;; This function calls:
 26531 ;;		_fatfs_filename_to_lfn
 26532 ;;		_fatfs_find_free_dir_offset
 26533 ;;		_fatfs_lfn_entries_required
 26534 ;;		_fatfs_sector_reader
 26535 ;;		_fatfs_sfn_create_entry
 26536 ;;		_media_write
 26537 ;;		_memcpy
 26538 ;; This function is called by:
 26539 ;;		__create_directory
 26540 ;;		__create_file
 26541 ;; This function uses a non-reentrant model
 26542 ;;
 26543                           
 26544                           	psect	text77
 26545  00ACE2                     __ptext77:
 26546                           	opt stack 0
 26547  00ACE2                     _fatfs_add_file_entry:
 26548                           	opt stack 18
 26549                           
 26550                           ;fat_write.c: 268: uint8 item=0;
 26551                           
 26552                           ;incstack = 0
 26553  00ACE2  0101               	movlb	1	; () banked
 26554  00ACE4  6B13               	clrf	fatfs_add_file_entry@item& (0+255),b
 26555                           
 26556                           ;fat_write.c: 269: uint16 recordoffset = 0;
 26557  00ACE6  6B0B               	clrf	(fatfs_add_file_entry@recordoffset+1)& (0+255),b
 26558  00ACE8  6B0A               	clrf	fatfs_add_file_entry@recordoffset& (0+255),b
 26559                           
 26560                           ;fat_write.c: 270: uint8 i=0;
 26561  00ACEA  6B0E               	clrf	fatfs_add_file_entry@i& (0+255),b
 26562                           
 26563                           ;fat_write.c: 271: uint32 x=0;
 26564  00ACEC  6B06               	clrf	fatfs_add_file_entry@x& (0+255),b
 26565  00ACEE  6B07               	clrf	(fatfs_add_file_entry@x+1)& (0+255),b
 26566  00ACF0  6B08               	clrf	(fatfs_add_file_entry@x+2)& (0+255),b
 26567  00ACF2  6B09               	clrf	(fatfs_add_file_entry@x+3)& (0+255),b
 26568                           
 26569                           ;fat_write.c: 272: int entryCount;
 26570                           ;fat_write.c: 273: struct fat_dir_entry shortEntry;
 26571                           ;fat_write.c: 274: int dirtySector = 0;
 26572  00ACF4  6B05               	clrf	(fatfs_add_file_entry@dirtySector+1)& (0+255),b
 26573  00ACF6  6B04               	clrf	fatfs_add_file_entry@dirtySector& (0+255),b
 26574                           
 26575                           ;fat_write.c: 276: uint32 dirSector = 0;
 26576  00ACF8  6B14               	clrf	fatfs_add_file_entry@dirSector& (0+255),b
 26577  00ACFA  6B15               	clrf	(fatfs_add_file_entry@dirSector+1)& (0+255),b
 26578  00ACFC  6B16               	clrf	(fatfs_add_file_entry@dirSector+2)& (0+255),b
 26579  00ACFE  6B17               	clrf	(fatfs_add_file_entry@dirSector+3)& (0+255),b
 26580                           
 26581                           ;fat_write.c: 277: uint8 dirOffset = 0;
 26582  00AD00  6B12               	clrf	fatfs_add_file_entry@dirOffset& (0+255),b
 26583                           
 26584                           ;fat_write.c: 278: int foundEnd = 0;
 26585  00AD02  6B0D               	clrf	(fatfs_add_file_entry@foundEnd+1)& (0+255),b
 26586  00AD04  6B0C               	clrf	fatfs_add_file_entry@foundEnd& (0+255),b
 26587                           
 26588                           ; BSR set to: 1
 26589                           ;fat_write.c: 280: uint8 checksum;
 26590                           ;fat_write.c: 281: uint8 *pSname;
 26591                           ;fat_write.c: 284: if (!fs->disk_io.write_media)
 26592  00AD06  EE20 F02B          	lfsr	2,43
 26593  00AD0A  0100               	movlb	0	; () banked
 26594  00AD0C  51CC               	movf	fatfs_add_file_entry@fs& (0+255),w,b
 26595  00AD0E  26D9               	addwf	fsr2l,f,c
 26596  00AD10  51CD               	movf	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 26597  00AD12  22DA               	addwfc	fsr2h,f,c
 26598  00AD14  50DE               	movf	postinc2,w,c
 26599  00AD16  10DD               	iorwf	postdec2,w,c
 26600  00AD18  E101 D1B5          	bz	l10872
 26601                           
 26602                           ; BSR set to: 0
 26603                           ;fat_write.c: 290: entryCount = fatfs_lfn_entries_required(filename);
 26604                           
 26605                           ; BSR set to: 0
 26606                           
 26607                           ; BSR set to: 0
 26608                           
 26609                           ; BSR set to: 0
 26610                           ;fat_write.c: 285: return 0;
 26611  00AD1C  C0D3  F00A         	movff	fatfs_add_file_entry@filename+1,fatfs_lfn_entries_required@filename+1
 26612  00AD20  C0D2  F009         	movff	fatfs_add_file_entry@filename,fatfs_lfn_entries_required@filename
 26613  00AD24  EC43  F021         	call	_fatfs_lfn_entries_required	;wreg free
 26614  00AD28  C009  F110         	movff	?_fatfs_lfn_entries_required,fatfs_add_file_entry@entryCount
 26615  00AD2C  C00A  F111         	movff	?_fatfs_lfn_entries_required+1,fatfs_add_file_entry@entryCount+1
 26616                           
 26617                           ;fat_write.c: 291: if (!entryCount)
 26618  00AD30  0101               	movlb	1	; () banked
 26619  00AD32  5111               	movf	(fatfs_add_file_entry@entryCount+1)& (0+255),w,b
 26620  00AD34  1110               	iorwf	fatfs_add_file_entry@entryCount& (0+255),w,b
 26621  00AD36  E101 D1A6          	bz	l10872
 26622                           
 26623                           ;fat_write.c: 299: if (!fatfs_find_free_dir_offset(fs, dirCluster, entryCount + 1, &dirS
      +                          ector, &dirOffset))
 26624                           
 26625                           ; BSR set to: 0
 26626                           
 26627                           ; BSR set to: 0
 26628                           
 26629                           ; BSR set to: 1
 26630                           ;fat_write.c: 292: return 0;
 26631  00AD3A  C0CD  F0AD         	movff	fatfs_add_file_entry@fs+1,fatfs_find_free_dir_offset@fs+1
 26632  00AD3E  C0CC  F0AC         	movff	fatfs_add_file_entry@fs,fatfs_find_free_dir_offset@fs
 26633  00AD42  C0CE  F0AE         	movff	fatfs_add_file_entry@dirCluster,fatfs_find_free_dir_offset@dirCluster
 26634  00AD46  C0CF  F0AF         	movff	fatfs_add_file_entry@dirCluster+1,fatfs_find_free_dir_offset@dirCluster+1
 26635  00AD4A  C0D0  F0B0         	movff	fatfs_add_file_entry@dirCluster+2,fatfs_find_free_dir_offset@dirCluster+2
 26636  00AD4E  C0D1  F0B1         	movff	fatfs_add_file_entry@dirCluster+3,fatfs_find_free_dir_offset@dirCluster+3
 26637  00AD52  2910               	incf	fatfs_add_file_entry@entryCount& (0+255),w,b
 26638  00AD54  0100               	movlb	0	; () banked
 26639  00AD56  6FB2               	movwf	fatfs_find_free_dir_offset@entryCount& (0+255),b
 26640  00AD58  0E00               	movlw	0
 26641  00AD5A  0101               	movlb	1	; () banked
 26642  00AD5C  2111               	addwfc	(fatfs_add_file_entry@entryCount+1)& (0+255),w,b
 26643  00AD5E  0100               	movlb	0	; () banked
 26644  00AD60  6FB3               	movwf	(fatfs_find_free_dir_offset@entryCount+1)& (0+255),b
 26645  00AD62  0E01               	movlw	high fatfs_add_file_entry@dirSector
 26646  00AD64  6FB5               	movwf	(fatfs_find_free_dir_offset@pSector+1)& (0+255),b
 26647  00AD66  0E14               	movlw	low fatfs_add_file_entry@dirSector
 26648  00AD68  6FB4               	movwf	fatfs_find_free_dir_offset@pSector& (0+255),b
 26649  00AD6A  0E01               	movlw	high fatfs_add_file_entry@dirOffset
 26650  00AD6C  6FB7               	movwf	(fatfs_find_free_dir_offset@pOffset+1)& (0+255),b
 26651  00AD6E  0E12               	movlw	low fatfs_add_file_entry@dirOffset
 26652  00AD70  6FB6               	movwf	fatfs_find_free_dir_offset@pOffset& (0+255),b
 26653  00AD72  ECB3  F04C         	call	_fatfs_find_free_dir_offset	;wreg free
 26654  00AD76  0100               	movlb	0	; () banked
 26655  00AD78  51AD               	movf	(?_fatfs_find_free_dir_offset+1)& (0+255),w,b
 26656  00AD7A  11AC               	iorwf	?_fatfs_find_free_dir_offset& (0+255),w,b
 26657  00AD7C  E101 D183          	bz	l10872
 26658                           
 26659                           ; BSR set to: 0
 26660                           ;fat_write.c: 303: pSname = (uint8*)shortfilename;
 26661                           
 26662                           ; BSR set to: 0
 26663                           
 26664                           ; BSR set to: 0
 26665                           
 26666                           ; BSR set to: 0
 26667                           ;fat_write.c: 300: return 0;
 26668  00AD80  C0D5  F101         	movff	fatfs_add_file_entry@shortfilename+1,fatfs_add_file_entry@pSname+1
 26669  00AD84  C0D4  F100         	movff	fatfs_add_file_entry@shortfilename,fatfs_add_file_entry@pSname
 26670                           
 26671                           ; BSR set to: 1
 26672                           ;fat_write.c: 304: checksum = 0;
 26673  00AD88  0101               	movlb	1	; () banked
 26674  00AD8A  6B0F               	clrf	fatfs_add_file_entry@checksum& (0+255),b
 26675                           
 26676                           ; BSR set to: 1
 26677                           ;fat_write.c: 305: for (i=11; i!=0; i--) checksum = ((checksum & 1) ? 0x80 : 0) + (check
      +                          sum >> 1) + *pSname++;
 26678  00AD8C  0E0B               	movlw	11
 26679  00AD8E  6F0E               	movwf	fatfs_add_file_entry@i& (0+255),b
 26680  00AD90  D01D               	goto	L83
 26681  00AD92                     l1370:
 26682                           
 26683                           ; BSR set to: 1
 26684  00AD92  0101               	movlb	1	; () banked
 26685  00AD94  B10F               	btfsc	fatfs_add_file_entry@checksum& (0+255),0,b
 26686  00AD96  D003               	goto	l10810
 26687                           
 26688                           ; BSR set to: 1
 26689  00AD98  0E00               	movlw	0
 26690  00AD9A  6B03               	clrf	(_fatfs_add_file_entry$3211+1)& (0+255),b
 26691  00AD9C  D003               	goto	L82
 26692  00AD9E                     l10810:
 26693                           
 26694                           ; BSR set to: 1
 26695  00AD9E  0101               	movlb	1	; () banked
 26696  00ADA0  6B03               	clrf	(_fatfs_add_file_entry$3211+1)& (0+255),b
 26697  00ADA2  0E80               	movlw	128
 26698  00ADA4                     L82:
 26699  00ADA4  0101               	movlb	1	; () banked
 26700  00ADA6  6F02               	movwf	_fatfs_add_file_entry$3211& (0+255),b
 26701                           
 26702                           ; BSR set to: 1
 26703                           
 26704                           ; BSR set to: 1
 26705  00ADA8  C100  FFD9         	movff	fatfs_add_file_entry@pSname,fsr2l
 26706  00ADAC  C101  FFDA         	movff	fatfs_add_file_entry@pSname+1,fsr2h
 26707  00ADB0  50DF               	movf	indf2,w,c
 26708  00ADB2  0100               	movlb	0	; () banked
 26709  00ADB4  6FE0               	movwf	??_fatfs_add_file_entry& (0+255),b
 26710  00ADB6  0101               	movlb	1	; () banked
 26711  00ADB8  90D8               	bcf	status,0,c
 26712  00ADBA  310F               	rrcf	fatfs_add_file_entry@checksum& (0+255),w,b
 26713  00ADBC  0100               	movlb	0	; () banked
 26714  00ADBE  25E0               	addwf	??_fatfs_add_file_entry& (0+255),w,b
 26715  00ADC0  0101               	movlb	1	; () banked
 26716  00ADC2  2502               	addwf	_fatfs_add_file_entry$3211& (0+255),w,b
 26717  00ADC4  6F0F               	movwf	fatfs_add_file_entry@checksum& (0+255),b
 26718                           
 26719                           ; BSR set to: 1
 26720  00ADC6  4B00               	infsnz	fatfs_add_file_entry@pSname& (0+255),f,b
 26721  00ADC8  2B01               	incf	(fatfs_add_file_entry@pSname+1)& (0+255),f,b
 26722                           
 26723                           ; BSR set to: 1
 26724  00ADCA  070E               	decf	fatfs_add_file_entry@i& (0+255),f,b
 26725  00ADCC                     L83:
 26726                           
 26727                           ; BSR set to: 1
 26728  00ADCC  0101               	movlb	1	; () banked
 26729  00ADCE  670E               	tstfsz	fatfs_add_file_entry@i& (0+255),b
 26730  00ADD0  D7E0               	goto	l1370
 26731                           
 26732                           ; BSR set to: 1
 26733                           ;fat_write.c: 308: x = dirSector;
 26734  00ADD2  C114  F106         	movff	fatfs_add_file_entry@dirSector,fatfs_add_file_entry@x
 26735  00ADD6  C115  F107         	movff	fatfs_add_file_entry@dirSector+1,fatfs_add_file_entry@x+1
 26736  00ADDA  C116  F108         	movff	fatfs_add_file_entry@dirSector+2,fatfs_add_file_entry@x+2
 26737  00ADDE  C117  F109         	movff	fatfs_add_file_entry@dirSector+3,fatfs_add_file_entry@x+3
 26738  00ADE2                     l10820:
 26739                           
 26740                           ;fat_write.c: 312: {
 26741                           ;fat_write.c: 314: if (fatfs_sector_reader(fs, dirCluster, x++, 0))
 26742  00ADE2  C0CD  F081         	movff	fatfs_add_file_entry@fs+1,fatfs_sector_reader@fs+1
 26743  00ADE6  C0CC  F080         	movff	fatfs_add_file_entry@fs,fatfs_sector_reader@fs
 26744  00ADEA  C0CE  F082         	movff	fatfs_add_file_entry@dirCluster,fatfs_sector_reader@start_cluster
 26745  00ADEE  C0CF  F083         	movff	fatfs_add_file_entry@dirCluster+1,fatfs_sector_reader@start_cluster+1
 26746  00ADF2  C0D0  F084         	movff	fatfs_add_file_entry@dirCluster+2,fatfs_sector_reader@start_cluster+2
 26747  00ADF6  C0D1  F085         	movff	fatfs_add_file_entry@dirCluster+3,fatfs_sector_reader@start_cluster+3
 26748  00ADFA  C106  F0E0         	movff	fatfs_add_file_entry@x,??_fatfs_add_file_entry
 26749  00ADFE  C107  F0E1         	movff	fatfs_add_file_entry@x+1,??_fatfs_add_file_entry+1
 26750  00AE02  C108  F0E2         	movff	fatfs_add_file_entry@x+2,??_fatfs_add_file_entry+2
 26751  00AE06  C109  F0E3         	movff	fatfs_add_file_entry@x+3,??_fatfs_add_file_entry+3
 26752  00AE0A  0101               	movlb	1	; () banked
 26753  00AE0C  2B06               	incf	fatfs_add_file_entry@x& (0+255),f,b
 26754  00AE0E  0E00               	movlw	0
 26755  00AE10  2307               	addwfc	(fatfs_add_file_entry@x+1)& (0+255),f,b
 26756  00AE12  2308               	addwfc	(fatfs_add_file_entry@x+2)& (0+255),f,b
 26757  00AE14  2309               	addwfc	(fatfs_add_file_entry@x+3)& (0+255),f,b
 26758  00AE16  C0E0  F086         	movff	??_fatfs_add_file_entry,fatfs_sector_reader@offset
 26759  00AE1A  C0E1  F087         	movff	??_fatfs_add_file_entry+1,fatfs_sector_reader@offset+1
 26760  00AE1E  C0E2  F088         	movff	??_fatfs_add_file_entry+2,fatfs_sector_reader@offset+2
 26761  00AE22  C0E3  F089         	movff	??_fatfs_add_file_entry+3,fatfs_sector_reader@offset+3
 26762  00AE26  0100               	movlb	0	; () banked
 26763  00AE28  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
 26764  00AE2A  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
 26765  00AE2C  ECD5  F052         	call	_fatfs_sector_reader	;wreg free
 26766  00AE30  0100               	movlb	0	; () banked
 26767  00AE32  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
 26768  00AE34  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
 26769  00AE36  E101 D126          	bz	l10872
 26770                           
 26771                           ; BSR set to: 0
 26772                           ;fat_write.c: 315: {
 26773                           ;fat_write.c: 317: for (item = 0; item < (512 / 32); item++)
 26774  00AE3A  0101               	movlb	1	; () banked
 26775  00AE3C  6B13               	clrf	fatfs_add_file_entry@item& (0+255),b
 26776  00AE3E  D0DE               	goto	L84
 26777  00AE40                     l10828:
 26778                           
 26779                           ; BSR set to: 1
 26780                           ;fat_write.c: 318: {
 26781                           ;fat_write.c: 320: recordoffset = 32 * item;
 26782  00AE40  0101               	movlb	1	; () banked
 26783  00AE42  5113               	movf	fatfs_add_file_entry@item& (0+255),w,b
 26784  00AE44  0D20               	mullw	32
 26785  00AE46  CFF3 F10A          	movff	prodl,fatfs_add_file_entry@recordoffset
 26786  00AE4A  CFF4 F10B          	movff	prodh,fatfs_add_file_entry@recordoffset+1
 26787                           
 26788                           ; BSR set to: 1
 26789                           ;fat_write.c: 323: if (foundEnd==0)
 26790  00AE4E  510D               	movf	(fatfs_add_file_entry@foundEnd+1)& (0+255),w,b
 26791  00AE50  110C               	iorwf	fatfs_add_file_entry@foundEnd& (0+255),w,b
 26792  00AE52  E12E               	bnz	l10838
 26793                           
 26794                           ; BSR set to: 1
 26795                           ;fat_write.c: 324: if ( (dirSector==(x-1)) && (dirOffset==item) )
 26796  00AE54  0EFF               	movlw	255
 26797  00AE56  2506               	addwf	fatfs_add_file_entry@x& (0+255),w,b
 26798  00AE58  0100               	movlb	0	; () banked
 26799  00AE5A  6FE0               	movwf	??_fatfs_add_file_entry& (0+255),b
 26800  00AE5C  0EFF               	movlw	255
 26801  00AE5E  0101               	movlb	1	; () banked
 26802  00AE60  2107               	addwfc	(fatfs_add_file_entry@x+1)& (0+255),w,b
 26803  00AE62  0100               	movlb	0	; () banked
 26804  00AE64  6FE1               	movwf	(??_fatfs_add_file_entry+1)& (0+255),b
 26805  00AE66  0EFF               	movlw	255
 26806  00AE68  0101               	movlb	1	; () banked
 26807  00AE6A  2108               	addwfc	(fatfs_add_file_entry@x+2)& (0+255),w,b
 26808  00AE6C  0100               	movlb	0	; () banked
 26809  00AE6E  6FE2               	movwf	(??_fatfs_add_file_entry+2)& (0+255),b
 26810  00AE70  0EFF               	movlw	255
 26811  00AE72  0101               	movlb	1	; () banked
 26812  00AE74  2109               	addwfc	(fatfs_add_file_entry@x+3)& (0+255),w,b
 26813  00AE76  0100               	movlb	0	; () banked
 26814  00AE78  6FE3               	movwf	(??_fatfs_add_file_entry+3)& (0+255),b
 26815  00AE7A  0101               	movlb	1	; () banked
 26816  00AE7C  5117               	movf	(fatfs_add_file_entry@dirSector+3)& (0+255),w,b
 26817  00AE7E  0100               	movlb	0	; () banked
 26818  00AE80  19E3               	xorwf	(??_fatfs_add_file_entry+3)& (0+255),w,b
 26819  00AE82  E10E               	bnz	u12375
 26820  00AE84  0101               	movlb	1	; () banked
 26821  00AE86  5116               	movf	(fatfs_add_file_entry@dirSector+2)& (0+255),w,b
 26822  00AE88  0100               	movlb	0	; () banked
 26823  00AE8A  19E2               	xorwf	(??_fatfs_add_file_entry+2)& (0+255),w,b
 26824  00AE8C  E109               	bnz	u12375
 26825  00AE8E  0101               	movlb	1	; () banked
 26826  00AE90  5115               	movf	(fatfs_add_file_entry@dirSector+1)& (0+255),w,b
 26827  00AE92  0100               	movlb	0	; () banked
 26828  00AE94  19E1               	xorwf	(??_fatfs_add_file_entry+1)& (0+255),w,b
 26829  00AE96  E104               	bnz	u12375
 26830  00AE98  0101               	movlb	1	; () banked
 26831  00AE9A  5114               	movf	fatfs_add_file_entry@dirSector& (0+255),w,b
 26832  00AE9C  0100               	movlb	0	; () banked
 26833  00AE9E  19E0               	xorwf	??_fatfs_add_file_entry& (0+255),w,b
 26834  00AEA0                     u12375:
 26835  00AEA0  E107               	bnz	l10838
 26836                           
 26837                           ; BSR set to: 0
 26838  00AEA2  0101               	movlb	1	; () banked
 26839  00AEA4  5113               	movf	fatfs_add_file_entry@item& (0+255),w,b
 26840  00AEA6  6312               	cpfseq	fatfs_add_file_entry@dirOffset& (0+255),b
 26841  00AEA8  D003               	goto	l10838
 26842                           
 26843                           ; BSR set to: 1
 26844                           ;fat_write.c: 325: foundEnd = 1;
 26845  00AEAA  6B0D               	clrf	(fatfs_add_file_entry@foundEnd+1)& (0+255),b
 26846  00AEAC  0E01               	movlw	1
 26847  00AEAE  6F0C               	movwf	fatfs_add_file_entry@foundEnd& (0+255),b
 26848  00AEB0                     l10838:
 26849                           
 26850                           ;fat_write.c: 328: if (foundEnd)
 26851  00AEB0  0101               	movlb	1	; () banked
 26852  00AEB2  510D               	movf	(fatfs_add_file_entry@foundEnd+1)& (0+255),w,b
 26853  00AEB4  110C               	iorwf	fatfs_add_file_entry@foundEnd& (0+255),w,b
 26854  00AEB6  E101 D09F          	bz	l10858
 26855                           
 26856                           ; BSR set to: 1
 26857                           ;fat_write.c: 329: {
 26858                           ;fat_write.c: 330: if (entryCount==0)
 26859  00AEBA  5111               	movf	(fatfs_add_file_entry@entryCount+1)& (0+255),w,b
 26860  00AEBC  1110               	iorwf	fatfs_add_file_entry@entryCount& (0+255),w,b
 26861  00AEBE  E177               	bnz	l10852
 26862                           
 26863                           ; BSR set to: 1
 26864                           ;fat_write.c: 331: {
 26865                           ;fat_write.c: 333: fatfs_sfn_create_entry(shortfilename, size, startCluster, &shortEntry
      +                          , dir);
 26866  00AEC0  C0D5  F002         	movff	fatfs_add_file_entry@shortfilename+1,fatfs_sfn_create_entry@shortfilename+1
 26867  00AEC4  C0D4  F001         	movff	fatfs_add_file_entry@shortfilename,fatfs_sfn_create_entry@shortfilename
 26868  00AEC8  C0DA  F003         	movff	fatfs_add_file_entry@size,fatfs_sfn_create_entry@size
 26869  00AECC  C0DB  F004         	movff	fatfs_add_file_entry@size+1,fatfs_sfn_create_entry@size+1
 26870  00AED0  C0DC  F005         	movff	fatfs_add_file_entry@size+2,fatfs_sfn_create_entry@size+2
 26871  00AED4  C0DD  F006         	movff	fatfs_add_file_entry@size+3,fatfs_sfn_create_entry@size+3
 26872  00AED8  C0D6  F007         	movff	fatfs_add_file_entry@startCluster,fatfs_sfn_create_entry@startCluster
 26873  00AEDC  C0D7  F008         	movff	fatfs_add_file_entry@startCluster+1,fatfs_sfn_create_entry@startCluster+1
 26874  00AEE0  C0D8  F009         	movff	fatfs_add_file_entry@startCluster+2,fatfs_sfn_create_entry@startCluster+2
 26875  00AEE4  C0D9  F00A         	movff	fatfs_add_file_entry@startCluster+3,fatfs_sfn_create_entry@startCluster+3
 26876  00AEE8  0E01               	movlw	high fatfs_add_file_entry@shortEntry
 26877  00AEEA  6E0C               	movwf	fatfs_sfn_create_entry@entry+1,c
 26878  00AEEC  0E18               	movlw	low fatfs_add_file_entry@shortEntry
 26879  00AEEE  6E0B               	movwf	fatfs_sfn_create_entry@entry,c
 26880  00AEF0  C0DE  F00D         	movff	fatfs_add_file_entry@dir,fatfs_sfn_create_entry@dir
 26881  00AEF4  C0DF  F00E         	movff	fatfs_add_file_entry@dir+1,fatfs_sfn_create_entry@dir+1
 26882  00AEF8  EC55  F035         	call	_fatfs_sfn_create_entry	;wreg free
 26883                           
 26884                           ;fat_write.c: 340: memcpy(&fs->currentsector.sector[recordoffset], &shortEntry, sizeof(s
      +                          hortEntry));
 26885  00AEFC  C0CC  F0E0         	movff	fatfs_add_file_entry@fs,??_fatfs_add_file_entry
 26886  00AF00  C0CD  F0E1         	movff	fatfs_add_file_entry@fs+1,??_fatfs_add_file_entry+1
 26887  00AF04  0101               	movlb	1	; () banked
 26888  00AF06  510A               	movf	fatfs_add_file_entry@recordoffset& (0+255),w,b
 26889  00AF08  0100               	movlb	0	; () banked
 26890  00AF0A  27E0               	addwf	??_fatfs_add_file_entry& (0+255),f,b
 26891  00AF0C  0101               	movlb	1	; () banked
 26892  00AF0E  510B               	movf	(fatfs_add_file_entry@recordoffset+1)& (0+255),w,b
 26893  00AF10  0100               	movlb	0	; () banked
 26894  00AF12  23E1               	addwfc	(??_fatfs_add_file_entry+1)& (0+255),f,b
 26895  00AF14  0E31               	movlw	49
 26896  00AF16  25E0               	addwf	??_fatfs_add_file_entry& (0+255),w,b
 26897  00AF18  6E01               	movwf	memcpy@d1,c
 26898  00AF1A  0E00               	movlw	0
 26899  00AF1C  21E1               	addwfc	(??_fatfs_add_file_entry+1)& (0+255),w,b
 26900  00AF1E  6E02               	movwf	memcpy@d1+1,c
 26901  00AF20  0E20               	movlw	32
 26902  00AF22  6E05               	movwf	memcpy@s1+2,c
 26903  00AF24  0E01               	movlw	high fatfs_add_file_entry@shortEntry
 26904  00AF26  6E04               	movwf	memcpy@s1+1,c
 26905  00AF28  0101               	movlb	1	; () banked
 26906  00AF2A  0E18               	movlw	low fatfs_add_file_entry@shortEntry
 26907  00AF2C  6E03               	movwf	memcpy@s1,c
 26908  00AF2E  6A07               	clrf	memcpy@n+1,c
 26909  00AF30  0E20               	movlw	32
 26910  00AF32  6E06               	movwf	memcpy@n,c
 26911  00AF34  ECA4  F023         	call	_memcpy	;wreg free
 26912                           
 26913                           ;fat_write.c: 343: return fs->disk_io.write_media(fs->currentsector.address, fs->current
      +                          sector.sector, 1);
 26914  00AF38  EE22 F031          	lfsr	2,561
 26915  00AF3C  0100               	movlb	0	; () banked
 26916  00AF3E  51CC               	movf	fatfs_add_file_entry@fs& (0+255),w,b
 26917  00AF40  26D9               	addwf	fsr2l,f,c
 26918  00AF42  51CD               	movf	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 26919  00AF44  22DA               	addwfc	fsr2h,f,c
 26920  00AF46  CFDE F009          	movff	postinc2,media_write@sector
 26921  00AF4A  CFDE F00A          	movff	postinc2,media_write@sector+1
 26922  00AF4E  CFDE F00B          	movff	postinc2,media_write@sector+2
 26923  00AF52  CFDE F00C          	movff	postinc2,media_write@sector+3
 26924  00AF56  0E31               	movlw	49
 26925  00AF58  25CC               	addwf	fatfs_add_file_entry@fs& (0+255),w,b
 26926  00AF5A  6FE0               	movwf	??_fatfs_add_file_entry& (0+255),b
 26927  00AF5C  0E00               	movlw	0
 26928  00AF5E  21CD               	addwfc	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 26929  00AF60  6FE1               	movwf	(??_fatfs_add_file_entry+1)& (0+255),b
 26930  00AF62  0E20               	movlw	32
 26931  00AF64  6E0F               	movwf	media_write@buffer+2,c
 26932  00AF66  C0E1  F00E         	movff	??_fatfs_add_file_entry+1,media_write@buffer+1
 26933  00AF6A  C0E0  F00D         	movff	??_fatfs_add_file_entry,media_write@buffer
 26934  00AF6E  0E01               	movlw	1
 26935  00AF70  6E10               	movwf	media_write@sector_count,c
 26936  00AF72  6A11               	clrf	media_write@sector_count+1,c
 26937  00AF74  6A12               	clrf	media_write@sector_count+2,c
 26938  00AF76  6A13               	clrf	media_write@sector_count+3,c
 26939  00AF78  EE20 F02B          	lfsr	2,43
 26940  00AF7C  51CC               	movf	fatfs_add_file_entry@fs& (0+255),w,b
 26941  00AF7E  26D9               	addwf	fsr2l,f,c
 26942  00AF80  51CD               	movf	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 26943  00AF82  22DA               	addwfc	fsr2h,f,c
 26944  00AF84  CFDE F0E2          	movff	postinc2,??_fatfs_add_file_entry+2
 26945  00AF88  CFDD F0E3          	movff	postdec2,??_fatfs_add_file_entry+3
 26946  00AF8C  D801               	call	u12418
 26947  00AF8E  D00A               	goto	u12419
 26948  00AF90                     u12418:
 26949  00AF90  0005               	push	
 26950  00AF92  6EFA               	movwf	pclath,c
 26951  00AF94  0100               	movlb	0	; () banked
 26952  00AF96  51E2               	movf	(??_fatfs_add_file_entry+2)& (0+255),w,b
 26953  00AF98  6EFD               	movwf	tosl,c
 26954  00AF9A  51E3               	movf	(??_fatfs_add_file_entry+3)& (0+255),w,b
 26955  00AF9C  6EFE               	movwf	tosh,c
 26956  00AF9E  6AFF               	clrf	tosu,c
 26957  00AFA0  50FA               	movf	pclath,w,c
 26958  00AFA2  0012               	return		;indir
 26959  00AFA4                     u12419:
 26960  00AFA4  C009  F0CC         	movff	?_media_write,?_fatfs_add_file_entry
 26961  00AFA8  C00A  F0CD         	movff	?_media_write+1,?_fatfs_add_file_entry+1
 26962  00AFAC  D070               	goto	l1367
 26963  00AFAE                     l10852:
 26964                           
 26965                           ;fat_write.c: 346: else
 26966                           ;fat_write.c: 347: {
 26967                           ;fat_write.c: 348: entryCount--;
 26968  00AFAE  0101               	movlb	1	; () banked
 26969  00AFB0  0710               	decf	fatfs_add_file_entry@entryCount& (0+255),f,b
 26970  00AFB2  A0D8               	btfss	status,0,c
 26971  00AFB4  0711               	decf	(fatfs_add_file_entry@entryCount+1)& (0+255),f,b
 26972                           
 26973                           ; BSR set to: 1
 26974                           ;fat_write.c: 351: fatfs_filename_to_lfn(filename, &fs->currentsector.sector[recordoffse
      +                          t], entryCount, checksum);
 26975  00AFB6  C0D3  F00E         	movff	fatfs_add_file_entry@filename+1,fatfs_filename_to_lfn@filename+1
 26976  00AFBA  C0D2  F00D         	movff	fatfs_add_file_entry@filename,fatfs_filename_to_lfn@filename
 26977  00AFBE  C0CC  F0E0         	movff	fatfs_add_file_entry@fs,??_fatfs_add_file_entry
 26978  00AFC2  C0CD  F0E1         	movff	fatfs_add_file_entry@fs+1,??_fatfs_add_file_entry+1
 26979  00AFC6  510A               	movf	fatfs_add_file_entry@recordoffset& (0+255),w,b
 26980  00AFC8  0100               	movlb	0	; () banked
 26981  00AFCA  27E0               	addwf	??_fatfs_add_file_entry& (0+255),f,b
 26982  00AFCC  0101               	movlb	1	; () banked
 26983  00AFCE  510B               	movf	(fatfs_add_file_entry@recordoffset+1)& (0+255),w,b
 26984  00AFD0  0100               	movlb	0	; () banked
 26985  00AFD2  23E1               	addwfc	(??_fatfs_add_file_entry+1)& (0+255),f,b
 26986  00AFD4  0E31               	movlw	49
 26987  00AFD6  25E0               	addwf	??_fatfs_add_file_entry& (0+255),w,b
 26988  00AFD8  6E0F               	movwf	fatfs_filename_to_lfn@buffer,c
 26989  00AFDA  0E00               	movlw	0
 26990  00AFDC  21E1               	addwfc	(??_fatfs_add_file_entry+1)& (0+255),w,b
 26991  00AFDE  6E10               	movwf	fatfs_filename_to_lfn@buffer+1,c
 26992  00AFE0  C110  F011         	movff	fatfs_add_file_entry@entryCount,fatfs_filename_to_lfn@entry
 26993  00AFE4  C111  F012         	movff	fatfs_add_file_entry@entryCount+1,fatfs_filename_to_lfn@entry+1
 26994  00AFE8  C10F  F013         	movff	fatfs_add_file_entry@checksum,fatfs_filename_to_lfn@sfnChk
 26995  00AFEC  EC49  F040         	call	_fatfs_filename_to_lfn	;wreg free
 26996                           
 26997                           ;fat_write.c: 352: dirtySector = 1;
 26998  00AFF0  0101               	movlb	1	; () banked
 26999  00AFF2  6B05               	clrf	(fatfs_add_file_entry@dirtySector+1)& (0+255),b
 27000  00AFF4  0E01               	movlw	1
 27001  00AFF6  6F04               	movwf	fatfs_add_file_entry@dirtySector& (0+255),b
 27002  00AFF8                     l10858:
 27003  00AFF8  0101               	movlb	1	; () banked
 27004  00AFFA  2B13               	incf	fatfs_add_file_entry@item& (0+255),f,b
 27005  00AFFC                     L84:
 27006                           
 27007                           ; BSR set to: 1
 27008  00AFFC  0E0F               	movlw	15
 27009  00AFFE  0101               	movlb	1	; () banked
 27010  00B000  6513               	cpfsgt	fatfs_add_file_entry@item& (0+255),b
 27011  00B002  D71E               	goto	l10828
 27012                           
 27013                           ; BSR set to: 1
 27014                           ;fat_write.c: 353: }
 27015                           ;fat_write.c: 355: }
 27016                           ;fat_write.c: 356: }
 27017                           ;fat_write.c: 359: if (dirtySector)
 27018                           
 27019                           ; BSR set to: 1
 27020  00B004  5105               	movf	(fatfs_add_file_entry@dirtySector+1)& (0+255),w,b
 27021  00B006  1104               	iorwf	fatfs_add_file_entry@dirtySector& (0+255),w,b
 27022  00B008  E101 D6EB          	bz	l10820
 27023                           
 27024                           ; BSR set to: 1
 27025                           ;fat_write.c: 360: {
 27026                           ;fat_write.c: 361: if (!fs->disk_io.write_media(fs->currentsector.address, fs->currentse
      +                          ctor.sector, 1))
 27027  00B00C  EE22 F031          	lfsr	2,561
 27028  00B010  0100               	movlb	0	; () banked
 27029  00B012  51CC               	movf	fatfs_add_file_entry@fs& (0+255),w,b
 27030  00B014  26D9               	addwf	fsr2l,f,c
 27031  00B016  51CD               	movf	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 27032  00B018  22DA               	addwfc	fsr2h,f,c
 27033  00B01A  CFDE F009          	movff	postinc2,media_write@sector
 27034  00B01E  CFDE F00A          	movff	postinc2,media_write@sector+1
 27035  00B022  CFDE F00B          	movff	postinc2,media_write@sector+2
 27036  00B026  CFDE F00C          	movff	postinc2,media_write@sector+3
 27037  00B02A  0E31               	movlw	49
 27038  00B02C  25CC               	addwf	fatfs_add_file_entry@fs& (0+255),w,b
 27039  00B02E  6FE0               	movwf	??_fatfs_add_file_entry& (0+255),b
 27040  00B030  0E00               	movlw	0
 27041  00B032  21CD               	addwfc	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 27042  00B034  6FE1               	movwf	(??_fatfs_add_file_entry+1)& (0+255),b
 27043  00B036  0E20               	movlw	32
 27044  00B038  6E0F               	movwf	media_write@buffer+2,c
 27045  00B03A  C0E1  F00E         	movff	??_fatfs_add_file_entry+1,media_write@buffer+1
 27046  00B03E  C0E0  F00D         	movff	??_fatfs_add_file_entry,media_write@buffer
 27047  00B042  0E01               	movlw	1
 27048  00B044  6E10               	movwf	media_write@sector_count,c
 27049  00B046  6A11               	clrf	media_write@sector_count+1,c
 27050  00B048  6A12               	clrf	media_write@sector_count+2,c
 27051  00B04A  6A13               	clrf	media_write@sector_count+3,c
 27052  00B04C  EE20 F02B          	lfsr	2,43
 27053  00B050  51CC               	movf	fatfs_add_file_entry@fs& (0+255),w,b
 27054  00B052  26D9               	addwf	fsr2l,f,c
 27055  00B054  51CD               	movf	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 27056  00B056  22DA               	addwfc	fsr2h,f,c
 27057  00B058  CFDE F0E2          	movff	postinc2,??_fatfs_add_file_entry+2
 27058  00B05C  CFDD F0E3          	movff	postdec2,??_fatfs_add_file_entry+3
 27059  00B060  D801               	call	u12448
 27060  00B062  D00A               	goto	u12449
 27061  00B064                     u12448:
 27062  00B064  0005               	push	
 27063  00B066  6EFA               	movwf	pclath,c
 27064  00B068  0100               	movlb	0	; () banked
 27065  00B06A  51E2               	movf	(??_fatfs_add_file_entry+2)& (0+255),w,b
 27066  00B06C  6EFD               	movwf	tosl,c
 27067  00B06E  51E3               	movf	(??_fatfs_add_file_entry+3)& (0+255),w,b
 27068  00B070  6EFE               	movwf	tosh,c
 27069  00B072  6AFF               	clrf	tosu,c
 27070  00B074  50FA               	movf	pclath,w,c
 27071  00B076  0012               	return		;indir
 27072  00B078                     u12449:
 27073  00B078  500A               	movf	?_media_write+1,w,c
 27074  00B07A  1009               	iorwf	?_media_write,w,c
 27075  00B07C  E004               	bz	l10872
 27076                           
 27077                           ;fat_write.c: 364: dirtySector = 0;
 27078                           
 27079                           ; BSR set to: 0
 27080                           
 27081                           ; BSR set to: 0
 27082                           
 27083                           ;fat_write.c: 362: return 0;
 27084  00B07E  0101               	movlb	1	; () banked
 27085  00B080  6B05               	clrf	(fatfs_add_file_entry@dirtySector+1)& (0+255),b
 27086  00B082  6B04               	clrf	fatfs_add_file_entry@dirtySector& (0+255),b
 27087  00B084  D6AE               	goto	l10820
 27088  00B086                     l10872:
 27089                           
 27090                           ;fat_write.c: 367: else
 27091                           ;fat_write.c: 368: return 0;
 27092  00B086  0E00               	movlw	0
 27093  00B088  0100               	movlb	0	; () banked
 27094  00B08A  6FCD               	movwf	(?_fatfs_add_file_entry+1)& (0+255),b
 27095  00B08C  6FCC               	movwf	?_fatfs_add_file_entry& (0+255),b
 27096  00B08E                     l1367:
 27097  00B08E  0012               	return	
 27098  00B090                     __end_of_fatfs_add_file_entry:
 27099                           	opt stack 0
 27100                           tosu	equ	0xFFF
 27101                           tosh	equ	0xFFE
 27102                           tosl	equ	0xFFD
 27103                           pclath	equ	0xFFA
 27104                           tblptru	equ	0xFF8
 27105                           tblptrh	equ	0xFF7
 27106                           tblptrl	equ	0xFF6
 27107                           tablat	equ	0xFF5
 27108                           prodh	equ	0xFF4
 27109                           prodl	equ	0xFF3
 27110                           indf0	equ	0xFEF
 27111                           postinc0	equ	0xFEE
 27112                           fsr0h	equ	0xFEA
 27113                           fsr0l	equ	0xFE9
 27114                           wreg	equ	0xFE8
 27115                           indf1	equ	0xFE7
 27116                           postinc1	equ	0xFE6
 27117                           postdec1	equ	0xFE5
 27118                           fsr1h	equ	0xFE2
 27119                           fsr1l	equ	0xFE1
 27120                           indf2	equ	0xFDF
 27121                           postinc2	equ	0xFDE
 27122                           postdec2	equ	0xFDD
 27123                           fsr2h	equ	0xFDA
 27124                           fsr2l	equ	0xFD9
 27125                           status	equ	0xFD8
 27126                           
 27127 ;; *************** function _fatfs_sfn_create_entry *****************
 27128 ;; Defined at:
 27129 ;;		line 250 in file "fat_misc.c"
 27130 ;; Parameters:    Size  Location     Type
 27131 ;;  shortfilenam    2    0[COMRAM] PTR unsigned char 
 27132 ;;		 -> RAM(3967), NULL(0), 
 27133 ;;  size            4    2[COMRAM] unsigned long 
 27134 ;;  startCluster    4    6[COMRAM] unsigned long 
 27135 ;;  entry           2   10[COMRAM] PTR struct fat_dir_entry
 27136 ;;		 -> fatfs_add_file_entry@shortEntry(32), 
 27137 ;;  dir             2   12[COMRAM] int 
 27138 ;; Auto vars:     Size  Location     Type
 27139 ;;  i               2   14[COMRAM] int 
 27140 ;; Return value:  Size  Location     Type
 27141 ;;		None               void
 27142 ;; Registers used:
 27143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27144 ;; Tracked objects:
 27145 ;;		On entry : 0/0
 27146 ;;		On exit  : 0/0
 27147 ;;		Unchanged: 0/0
 27148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27149 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27152 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27153 ;;Total ram usage:       16 bytes
 27154 ;; Hardware stack levels used:    1
 27155 ;; This function calls:
 27156 ;;		Nothing
 27157 ;; This function is called by:
 27158 ;;		_fatfs_add_file_entry
 27159 ;; This function uses a non-reentrant model
 27160 ;;
 27161                           
 27162                           	psect	text78
 27163  006AAA                     __ptext78:
 27164                           	opt stack 0
 27165  006AAA                     _fatfs_sfn_create_entry:
 27166                           	opt stack 25
 27167                           
 27168                           ;fat_misc.c: 252: int i;
 27169                           ;fat_misc.c: 255: for (i=0;i<11;i++)
 27170                           
 27171                           ;incstack = 0
 27172  006AAA  6A10               	clrf	fatfs_sfn_create_entry@i+1,c
 27173  006AAC  6A0F               	clrf	fatfs_sfn_create_entry@i,c
 27174  006AAE  5010               	movf	fatfs_sfn_create_entry@i+1,w,c
 27175  006AB0  0A80               	xorlw	128
 27176  006AB2  0F80               	addlw	-128
 27177  006AB4  0E0B               	movlw	11
 27178  006AB6  B4D8               	btfsc	status,2,c
 27179  006AB8  5C0F               	subwf	fatfs_sfn_create_entry@i,w,c
 27180  006ABA  E211               	bc	l10258
 27181                           
 27182                           ;fat_misc.c: 256: entry->Name[i] = shortfilename[i];
 27183  006ABC  500F               	movf	fatfs_sfn_create_entry@i,w,c
 27184  006ABE  2401               	addwf	fatfs_sfn_create_entry@shortfilename,w,c
 27185  006AC0  6ED9               	movwf	fsr2l,c
 27186  006AC2  5010               	movf	fatfs_sfn_create_entry@i+1,w,c
 27187  006AC4  2002               	addwfc	fatfs_sfn_create_entry@shortfilename+1,w,c
 27188  006AC6  6EDA               	movwf	fsr2h,c
 27189  006AC8  500F               	movf	fatfs_sfn_create_entry@i,w,c
 27190  006ACA  240B               	addwf	fatfs_sfn_create_entry@entry,w,c
 27191  006ACC  6EE1               	movwf	fsr1l,c
 27192  006ACE  5010               	movf	fatfs_sfn_create_entry@i+1,w,c
 27193  006AD0  200C               	addwfc	fatfs_sfn_create_entry@entry+1,w,c
 27194  006AD2  6EE2               	movwf	fsr1h,c
 27195  006AD4  CFDF FFE7          	movff	indf2,indf1
 27196  006AD8  4A0F               	infsnz	fatfs_sfn_create_entry@i,f,c
 27197  006ADA  2A10               	incf	fatfs_sfn_create_entry@i+1,f,c
 27198  006ADC  D7E8               	goto	L85
 27199  006ADE                     l10258:
 27200                           
 27201                           ;fat_misc.c: 259: entry->CrtTimeTenth = 0x00;
 27202  006ADE  EE20 F00D          	lfsr	2,13
 27203  006AE2  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27204  006AE4  26D9               	addwf	fsr2l,f,c
 27205  006AE6  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27206  006AE8  22DA               	addwfc	fsr2h,f,c
 27207  006AEA  6ADF               	clrf	indf2,c
 27208                           
 27209                           ;fat_misc.c: 260: entry->CrtTime[1] = entry->CrtTime[0] = 0x00;
 27210  006AEC  EE20 F00E          	lfsr	2,14
 27211  006AF0  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27212  006AF2  26D9               	addwf	fsr2l,f,c
 27213  006AF4  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27214  006AF6  22DA               	addwfc	fsr2h,f,c
 27215  006AF8  6ADF               	clrf	indf2,c
 27216  006AFA  EE10 F00F          	lfsr	1,15
 27217  006AFE  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27218  006B00  26E1               	addwf	fsr1l,f,c
 27219  006B02  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27220  006B04  22E2               	addwfc	fsr1h,f,c
 27221  006B06  CFDF FFE7          	movff	indf2,indf1
 27222                           
 27223                           ;fat_misc.c: 261: entry->CrtDate[1] = 0x00;
 27224  006B0A  EE20 F011          	lfsr	2,17
 27225  006B0E  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27226  006B10  26D9               	addwf	fsr2l,f,c
 27227  006B12  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27228  006B14  22DA               	addwfc	fsr2h,f,c
 27229  006B16  6ADF               	clrf	indf2,c
 27230                           
 27231                           ;fat_misc.c: 262: entry->CrtDate[0] = 0x20;
 27232  006B18  EE20 F010          	lfsr	2,16
 27233  006B1C  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27234  006B1E  26D9               	addwf	fsr2l,f,c
 27235  006B20  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27236  006B22  22DA               	addwfc	fsr2h,f,c
 27237  006B24  0E20               	movlw	32
 27238  006B26  6EDF               	movwf	indf2,c
 27239                           
 27240                           ;fat_misc.c: 263: entry->LstAccDate[1] = 0x00;
 27241  006B28  EE20 F013          	lfsr	2,19
 27242  006B2C  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27243  006B2E  26D9               	addwf	fsr2l,f,c
 27244  006B30  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27245  006B32  22DA               	addwfc	fsr2h,f,c
 27246  006B34  6ADF               	clrf	indf2,c
 27247                           
 27248                           ;fat_misc.c: 264: entry->LstAccDate[0] = 0x20;
 27249  006B36  EE20 F012          	lfsr	2,18
 27250  006B3A  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27251  006B3C  26D9               	addwf	fsr2l,f,c
 27252  006B3E  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27253  006B40  22DA               	addwfc	fsr2h,f,c
 27254  006B42  0E20               	movlw	32
 27255  006B44  6EDF               	movwf	indf2,c
 27256                           
 27257                           ;fat_misc.c: 265: entry->WrtTime[1] = entry->WrtTime[0] = 0x00;
 27258  006B46  EE20 F016          	lfsr	2,22
 27259  006B4A  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27260  006B4C  26D9               	addwf	fsr2l,f,c
 27261  006B4E  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27262  006B50  22DA               	addwfc	fsr2h,f,c
 27263  006B52  6ADF               	clrf	indf2,c
 27264  006B54  EE10 F017          	lfsr	1,23
 27265  006B58  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27266  006B5A  26E1               	addwf	fsr1l,f,c
 27267  006B5C  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27268  006B5E  22E2               	addwfc	fsr1h,f,c
 27269  006B60  CFDF FFE7          	movff	indf2,indf1
 27270                           
 27271                           ;fat_misc.c: 266: entry->WrtDate[1] = 0x00;
 27272  006B64  EE20 F019          	lfsr	2,25
 27273  006B68  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27274  006B6A  26D9               	addwf	fsr2l,f,c
 27275  006B6C  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27276  006B6E  22DA               	addwfc	fsr2h,f,c
 27277  006B70  6ADF               	clrf	indf2,c
 27278                           
 27279                           ;fat_misc.c: 267: entry->WrtDate[0] = 0x20;
 27280  006B72  EE20 F018          	lfsr	2,24
 27281  006B76  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27282  006B78  26D9               	addwf	fsr2l,f,c
 27283  006B7A  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27284  006B7C  22DA               	addwfc	fsr2h,f,c
 27285  006B7E  0E20               	movlw	32
 27286  006B80  6EDF               	movwf	indf2,c
 27287                           
 27288                           ;fat_misc.c: 269: if (!dir)
 27289  006B82  500E               	movf	fatfs_sfn_create_entry@dir+1,w,c
 27290  006B84  100D               	iorwf	fatfs_sfn_create_entry@dir,w,c
 27291  006B86  E108               	bnz	l10276
 27292                           
 27293                           ;fat_misc.c: 270: entry->Attr = 0x20;
 27294  006B88  EE20 F00B          	lfsr	2,11
 27295  006B8C  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27296  006B8E  26D9               	addwf	fsr2l,f,c
 27297  006B90  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27298  006B92  22DA               	addwfc	fsr2h,f,c
 27299  006B94  0E20               	movlw	32
 27300  006B96  D007               	goto	L86
 27301  006B98                     l10276:
 27302                           
 27303                           ;fat_misc.c: 271: else
 27304                           ;fat_misc.c: 272: entry->Attr = 0x10;
 27305  006B98  EE20 F00B          	lfsr	2,11
 27306  006B9C  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27307  006B9E  26D9               	addwf	fsr2l,f,c
 27308  006BA0  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27309  006BA2  22DA               	addwfc	fsr2h,f,c
 27310  006BA4  0E10               	movlw	16
 27311  006BA6                     L86:
 27312  006BA6  6EDF               	movwf	indf2,c
 27313                           
 27314                           ;fat_misc.c: 274: entry->NTRes = 0x00;
 27315  006BA8  EE20 F00C          	lfsr	2,12
 27316  006BAC  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27317  006BAE  26D9               	addwf	fsr2l,f,c
 27318  006BB0  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27319  006BB2  22DA               	addwfc	fsr2h,f,c
 27320  006BB4  6ADF               	clrf	indf2,c
 27321                           
 27322                           ;fat_misc.c: 276: entry->FstClusHI = ((uint16)((startCluster>>16) & 0xFFFF));
 27323  006BB6  EE20 F014          	lfsr	2,20
 27324  006BBA  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27325  006BBC  26D9               	addwf	fsr2l,f,c
 27326  006BBE  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27327  006BC0  22DA               	addwfc	fsr2h,f,c
 27328  006BC2  C009  FFDE         	movff	fatfs_sfn_create_entry@startCluster+2,postinc2
 27329  006BC6  C00A  FFDD         	movff	fatfs_sfn_create_entry@startCluster+3,postdec2
 27330                           
 27331                           ;fat_misc.c: 277: entry->FstClusLO = ((uint16)((startCluster>>0) & 0xFFFF));
 27332  006BCA  EE20 F01A          	lfsr	2,26
 27333  006BCE  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27334  006BD0  26D9               	addwf	fsr2l,f,c
 27335  006BD2  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27336  006BD4  22DA               	addwfc	fsr2h,f,c
 27337  006BD6  C007  FFDE         	movff	fatfs_sfn_create_entry@startCluster,postinc2
 27338  006BDA  C008  FFDD         	movff	fatfs_sfn_create_entry@startCluster+1,postdec2
 27339                           
 27340                           ;fat_misc.c: 278: entry->FileSize = (size);
 27341  006BDE  EE20 F01C          	lfsr	2,28
 27342  006BE2  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27343  006BE4  26D9               	addwf	fsr2l,f,c
 27344  006BE6  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27345  006BE8  22DA               	addwfc	fsr2h,f,c
 27346  006BEA  C003  FFDE         	movff	fatfs_sfn_create_entry@size,postinc2
 27347  006BEE  C004  FFDE         	movff	fatfs_sfn_create_entry@size+1,postinc2
 27348  006BF2  C005  FFDE         	movff	fatfs_sfn_create_entry@size+2,postinc2
 27349  006BF6  C006  FFDE         	movff	fatfs_sfn_create_entry@size+3,postinc2
 27350  006BFA  0012               	return	
 27351  006BFC                     __end_of_fatfs_sfn_create_entry:
 27352                           	opt stack 0
 27353                           tosu	equ	0xFFF
 27354                           tosh	equ	0xFFE
 27355                           tosl	equ	0xFFD
 27356                           pclath	equ	0xFFA
 27357                           tblptru	equ	0xFF8
 27358                           tblptrh	equ	0xFF7
 27359                           tblptrl	equ	0xFF6
 27360                           tablat	equ	0xFF5
 27361                           prodh	equ	0xFF4
 27362                           prodl	equ	0xFF3
 27363                           indf0	equ	0xFEF
 27364                           postinc0	equ	0xFEE
 27365                           fsr0h	equ	0xFEA
 27366                           fsr0l	equ	0xFE9
 27367                           wreg	equ	0xFE8
 27368                           indf1	equ	0xFE7
 27369                           postinc1	equ	0xFE6
 27370                           postdec1	equ	0xFE5
 27371                           fsr1h	equ	0xFE2
 27372                           fsr1l	equ	0xFE1
 27373                           indf2	equ	0xFDF
 27374                           postinc2	equ	0xFDE
 27375                           postdec2	equ	0xFDD
 27376                           fsr2h	equ	0xFDA
 27377                           fsr2l	equ	0xFD9
 27378                           status	equ	0xFD8
 27379                           
 27380 ;; *************** function _fatfs_find_free_dir_offset *****************
 27381 ;; Defined at:
 27382 ;;		line 130 in file "fat_write.c"
 27383 ;; Parameters:    Size  Location     Type
 27384 ;;  fs              2   44[BANK0 ] PTR struct fatfs
 27385 ;;		 -> _fs(1095), 
 27386 ;;  dirCluster      4   46[BANK0 ] unsigned long 
 27387 ;;  entryCount      2   50[BANK0 ] int 
 27388 ;;  pSector         2   52[BANK0 ] PTR unsigned long 
 27389 ;;		 -> fatfs_add_file_entry@dirSector(4), 
 27390 ;;  pOffset         2   54[BANK0 ] PTR unsigned char 
 27391 ;;		 -> fatfs_add_file_entry@dirOffset(1), 
 27392 ;; Auto vars:     Size  Location     Type
 27393 ;;  newCluster      4   65[BANK0 ] unsigned long 
 27394 ;;  possible_spa    2   73[BANK0 ] int 
 27395 ;;  x               2   71[BANK0 ] int 
 27396 ;;  recordoffset    2   69[BANK0 ] unsigned short 
 27397 ;;  start_record    2   62[BANK0 ] int 
 27398 ;;  directoryEnt    2   60[BANK0 ] PTR struct fat_dir_entry
 27399 ;;  item            1   75[BANK0 ] unsigned char 
 27400 ;;  i               1   64[BANK0 ] unsigned char 
 27401 ;; Return value:  Size  Location     Type
 27402 ;;                  2   44[BANK0 ] int 
 27403 ;; Registers used:
 27404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27405 ;; Tracked objects:
 27406 ;;		On entry : 0/0
 27407 ;;		On exit  : 0/0
 27408 ;;		Unchanged: 0/0
 27409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27410 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27411 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27412 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27413 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27414 ;;Total ram usage:       32 bytes
 27415 ;; Hardware stack levels used:    1
 27416 ;; Hardware stack levels required when called:    7
 27417 ;; This function calls:
 27418 ;;		_fatfs_entry_lfn_text
 27419 ;;		_fatfs_fat_add_cluster_to_chain
 27420 ;;		_fatfs_find_blank_cluster
 27421 ;;		_fatfs_sector_reader
 27422 ;;		_fatfs_write_sector
 27423 ;;		_memset
 27424 ;; This function is called by:
 27425 ;;		_fatfs_add_file_entry
 27426 ;; This function uses a non-reentrant model
 27427 ;;
 27428                           
 27429                           	psect	text79
 27430  009966                     __ptext79:
 27431                           	opt stack 0
 27432  009966                     _fatfs_find_free_dir_offset:
 27433                           	opt stack 18
 27434                           
 27435                           ;fat_write.c: 132: struct fat_dir_entry *directoryEntry;
 27436                           ;fat_write.c: 133: uint8 item=0;
 27437                           
 27438                           ;incstack = 0
 27439  009966  0100               	movlb	0	; () banked
 27440  009968  6BCB               	clrf	fatfs_find_free_dir_offset@item& (0+255),b
 27441                           
 27442                           ;fat_write.c: 134: uint16 recordoffset = 0;
 27443  00996A  6BC6               	clrf	(fatfs_find_free_dir_offset@recordoffset+1)& (0+255),b
 27444  00996C  6BC5               	clrf	fatfs_find_free_dir_offset@recordoffset& (0+255),b
 27445                           
 27446                           ;fat_write.c: 135: uint8 i=0;
 27447  00996E  6BC0               	clrf	fatfs_find_free_dir_offset@i& (0+255),b
 27448                           
 27449                           ;fat_write.c: 136: int x=0;
 27450  009970  6BC8               	clrf	(fatfs_find_free_dir_offset@x+1)& (0+255),b
 27451  009972  6BC7               	clrf	fatfs_find_free_dir_offset@x& (0+255),b
 27452                           
 27453                           ;fat_write.c: 137: int possible_spaces = 0;
 27454  009974  6BCA               	clrf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),b
 27455  009976  6BC9               	clrf	fatfs_find_free_dir_offset@possible_spaces& (0+255),b
 27456                           
 27457                           ;fat_write.c: 138: int start_recorded = 0;
 27458  009978  6BBF               	clrf	(fatfs_find_free_dir_offset@start_recorded+1)& (0+255),b
 27459  00997A  6BBE               	clrf	fatfs_find_free_dir_offset@start_recorded& (0+255),b
 27460                           
 27461                           ; BSR set to: 0
 27462                           ;fat_write.c: 141: if (entryCount == 0)
 27463  00997C  51B3               	movf	(fatfs_find_free_dir_offset@entryCount+1)& (0+255),w,b
 27464  00997E  11B2               	iorwf	fatfs_find_free_dir_offset@entryCount& (0+255),w,b
 27465  009980  E104               	bnz	l10310
 27466  009982                     L90:
 27467                           
 27468                           ; BSR set to: 0
 27469                           ;fat_write.c: 142: return 0;
 27470  009982  0E00               	movlw	0
 27471  009984  0100               	movlb	0	; () banked
 27472  009986  6FAD               	movwf	(?_fatfs_find_free_dir_offset+1)& (0+255),b
 27473  009988  D16D               	goto	L89
 27474  00998A                     l10310:
 27475                           
 27476                           ; BSR set to: 0
 27477                           ;fat_write.c: 146: {
 27478                           ;fat_write.c: 148: if (fatfs_sector_reader(fs, dirCluster, x++, 0))
 27479  00998A  C0AD  F081         	movff	fatfs_find_free_dir_offset@fs+1,fatfs_sector_reader@fs+1
 27480  00998E  C0AC  F080         	movff	fatfs_find_free_dir_offset@fs,fatfs_sector_reader@fs
 27481  009992  C0AE  F082         	movff	fatfs_find_free_dir_offset@dirCluster,fatfs_sector_reader@start_cluster
 27482  009996  C0AF  F083         	movff	fatfs_find_free_dir_offset@dirCluster+1,fatfs_sector_reader@start_cluster+1
 27483  00999A  C0B0  F084         	movff	fatfs_find_free_dir_offset@dirCluster+2,fatfs_sector_reader@start_cluster+2
 27484  00999E  C0B1  F085         	movff	fatfs_find_free_dir_offset@dirCluster+3,fatfs_sector_reader@start_cluster+3
 27485  0099A2  0100               	movlb	0	; () banked
 27486  0099A4  51C7               	movf	fatfs_find_free_dir_offset@x& (0+255),w,b
 27487  0099A6  6FB8               	movwf	??_fatfs_find_free_dir_offset& (0+255),b
 27488  0099A8  51C8               	movf	(fatfs_find_free_dir_offset@x+1)& (0+255),w,b
 27489  0099AA  6FB9               	movwf	(??_fatfs_find_free_dir_offset+1)& (0+255),b
 27490  0099AC  4BC7               	infsnz	fatfs_find_free_dir_offset@x& (0+255),f,b
 27491  0099AE  2BC8               	incf	(fatfs_find_free_dir_offset@x+1)& (0+255),f,b
 27492  0099B0  C0B8  F086         	movff	??_fatfs_find_free_dir_offset,fatfs_sector_reader@offset
 27493  0099B4  C0B9  F087         	movff	??_fatfs_find_free_dir_offset+1,fatfs_sector_reader@offset+1
 27494  0099B8  0E00               	movlw	0
 27495  0099BA  BF87               	btfsc	(fatfs_sector_reader@offset+1)& (0+255),7,b
 27496  0099BC  0EFF               	movlw	-1
 27497  0099BE  6F88               	movwf	(fatfs_sector_reader@offset+2)& (0+255),b
 27498  0099C0  6F89               	movwf	(fatfs_sector_reader@offset+3)& (0+255),b
 27499  0099C2  0E00               	movlw	0
 27500  0099C4  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
 27501  0099C6  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
 27502  0099C8  ECD5  F052         	call	_fatfs_sector_reader	;wreg free
 27503  0099CC  0100               	movlb	0	; () banked
 27504  0099CE  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
 27505  0099D0  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
 27506  0099D2  E101 D0AF          	bz	l10376
 27507                           
 27508                           ; BSR set to: 0
 27509                           ;fat_write.c: 149: {
 27510                           ;fat_write.c: 151: for (item = 0; item < (512 / 32); item++)
 27511  0099D6  6BCB               	clrf	fatfs_find_free_dir_offset@item& (0+255),b
 27512                           
 27513                           ; BSR set to: 0
 27514  0099D8  0E0F               	movlw	15
 27515  0099DA  65CB               	cpfsgt	fatfs_find_free_dir_offset@item& (0+255),b
 27516  0099DC  D001               	goto	l10318
 27517  0099DE  D7D5               	goto	l10310
 27518  0099E0                     l10318:
 27519                           
 27520                           ; BSR set to: 0
 27521                           ;fat_write.c: 152: {
 27522                           ;fat_write.c: 154: recordoffset = 32 * item;
 27523  0099E0  0100               	movlb	0	; () banked
 27524  0099E2  51CB               	movf	fatfs_find_free_dir_offset@item& (0+255),w,b
 27525  0099E4  0D20               	mullw	32
 27526  0099E6  CFF3 F0C5          	movff	prodl,fatfs_find_free_dir_offset@recordoffset
 27527  0099EA  CFF4 F0C6          	movff	prodh,fatfs_find_free_dir_offset@recordoffset+1
 27528                           
 27529                           ; BSR set to: 0
 27530                           ;fat_write.c: 157: directoryEntry = (struct fat_dir_entry*)(fs->currentsector.sector+rec
      +                          ordoffset);
 27531  0099EE  C0AC  F0B8         	movff	fatfs_find_free_dir_offset@fs,??_fatfs_find_free_dir_offset
 27532  0099F2  C0AD  F0B9         	movff	fatfs_find_free_dir_offset@fs+1,??_fatfs_find_free_dir_offset+1
 27533  0099F6  51C5               	movf	fatfs_find_free_dir_offset@recordoffset& (0+255),w,b
 27534  0099F8  27B8               	addwf	??_fatfs_find_free_dir_offset& (0+255),f,b
 27535  0099FA  51C6               	movf	(fatfs_find_free_dir_offset@recordoffset+1)& (0+255),w,b
 27536  0099FC  23B9               	addwfc	(??_fatfs_find_free_dir_offset+1)& (0+255),f,b
 27537  0099FE  0E31               	movlw	49
 27538  009A00  25B8               	addwf	??_fatfs_find_free_dir_offset& (0+255),w,b
 27539  009A02  6FBC               	movwf	fatfs_find_free_dir_offset@directoryEntry& (0+255),b
 27540  009A04  0E00               	movlw	0
 27541  009A06  21B9               	addwfc	(??_fatfs_find_free_dir_offset+1)& (0+255),w,b
 27542  009A08  6FBD               	movwf	(fatfs_find_free_dir_offset@directoryEntry+1)& (0+255),b
 27543                           
 27544                           ; BSR set to: 0
 27545                           ;fat_write.c: 160: if (fatfs_entry_lfn_text(directoryEntry))
 27546  009A0A  C0BD  F002         	movff	fatfs_find_free_dir_offset@directoryEntry+1,fatfs_entry_lfn_text@entry+1
 27547  009A0E  C0BC  F001         	movff	fatfs_find_free_dir_offset@directoryEntry,fatfs_entry_lfn_text@entry
 27548  009A12  ECF0  F01F         	call	_fatfs_entry_lfn_text	;wreg free
 27549  009A16  5002               	movf	?_fatfs_entry_lfn_text+1,w,c
 27550  009A18  1001               	iorwf	?_fatfs_entry_lfn_text,w,c
 27551  009A1A  E02A               	bz	l10334
 27552                           
 27553                           ;fat_write.c: 161: {
 27554                           ;fat_write.c: 163: if (possible_spaces == 0)
 27555  009A1C  0100               	movlb	0	; () banked
 27556  009A1E  51CA               	movf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),w,b
 27557  009A20  11C9               	iorwf	fatfs_find_free_dir_offset@possible_spaces& (0+255),w,b
 27558  009A22  E122               	bnz	l10332
 27559                           
 27560                           ; BSR set to: 0
 27561                           ;fat_write.c: 164: {
 27562                           ;fat_write.c: 166: *pSector = x-1;
 27563  009A24  0EFF               	movlw	255
 27564  009A26  25C7               	addwf	fatfs_find_free_dir_offset@x& (0+255),w,b
 27565  009A28  6FB8               	movwf	??_fatfs_find_free_dir_offset& (0+255),b
 27566  009A2A  0EFF               	movlw	255
 27567  009A2C  21C8               	addwfc	(fatfs_find_free_dir_offset@x+1)& (0+255),w,b
 27568  009A2E  6FB9               	movwf	(??_fatfs_find_free_dir_offset+1)& (0+255),b
 27569  009A30  6BBA               	clrf	(??_fatfs_find_free_dir_offset+2)& (0+255),b
 27570  009A32  BFB9               	btfsc	(??_fatfs_find_free_dir_offset+1)& (0+255),7,b
 27571  009A34  07BA               	decf	(??_fatfs_find_free_dir_offset+2)& (0+255),f,b
 27572  009A36  51BA               	movf	(??_fatfs_find_free_dir_offset+2)& (0+255),w,b
 27573  009A38  6FBB               	movwf	(??_fatfs_find_free_dir_offset+3)& (0+255),b
 27574  009A3A  C0B4  FFD9         	movff	fatfs_find_free_dir_offset@pSector,fsr2l
 27575  009A3E  C0B5  FFDA         	movff	fatfs_find_free_dir_offset@pSector+1,fsr2h
 27576  009A42  C0B8  FFDE         	movff	??_fatfs_find_free_dir_offset,postinc2
 27577  009A46  C0B9  FFDE         	movff	??_fatfs_find_free_dir_offset+1,postinc2
 27578  009A4A  C0BA  FFDE         	movff	??_fatfs_find_free_dir_offset+2,postinc2
 27579  009A4E  C0BB  FFDD         	movff	??_fatfs_find_free_dir_offset+3,postdec2
 27580  009A52  06D9               	decf	fsr2l,f,c
 27581  009A54  06D9               	decf	fsr2l,f,c
 27582                           
 27583                           ; BSR set to: 0
 27584                           ;fat_write.c: 167: *pOffset = item;
 27585  009A56  C0B6  FFD9         	movff	fatfs_find_free_dir_offset@pOffset,fsr2l
 27586  009A5A  C0B7  FFDA         	movff	fatfs_find_free_dir_offset@pOffset+1,fsr2h
 27587  009A5E  C0CB  FFDF         	movff	fatfs_find_free_dir_offset@item,indf2
 27588                           
 27589                           ; BSR set to: 0
 27590                           ;fat_write.c: 168: start_recorded = 1;
 27591  009A62  6BBF               	clrf	(fatfs_find_free_dir_offset@start_recorded+1)& (0+255),b
 27592  009A64  0E01               	movlw	1
 27593  009A66  6FBE               	movwf	fatfs_find_free_dir_offset@start_recorded& (0+255),b
 27594  009A68                     l10332:
 27595                           
 27596                           ; BSR set to: 0
 27597                           ;fat_write.c: 169: }
 27598                           ;fat_write.c: 173: possible_spaces++;
 27599  009A68  0100               	movlb	0	; () banked
 27600  009A6A  4BC9               	infsnz	fatfs_find_free_dir_offset@possible_spaces& (0+255),f,b
 27601  009A6C  2BCA               	incf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),f,b
 27602                           
 27603                           ;fat_write.c: 174: }
 27604  009A6E  D05C               	goto	l10372
 27605  009A70                     l10334:
 27606                           
 27607                           ;fat_write.c: 176: else
 27608                           ;fat_write.c: 177: {
 27609                           ;fat_write.c: 179: if (fs->currentsector.sector[recordoffset] == 0xE5)
 27610  009A70  C0AC  F0B8         	movff	fatfs_find_free_dir_offset@fs,??_fatfs_find_free_dir_offset
 27611  009A74  C0AD  F0B9         	movff	fatfs_find_free_dir_offset@fs+1,??_fatfs_find_free_dir_offset+1
 27612  009A78  0100               	movlb	0	; () banked
 27613  009A7A  51C5               	movf	fatfs_find_free_dir_offset@recordoffset& (0+255),w,b
 27614  009A7C  27B8               	addwf	??_fatfs_find_free_dir_offset& (0+255),f,b
 27615  009A7E  51C6               	movf	(fatfs_find_free_dir_offset@recordoffset+1)& (0+255),w,b
 27616  009A80  23B9               	addwfc	(??_fatfs_find_free_dir_offset+1)& (0+255),f,b
 27617  009A82  0E31               	movlw	49
 27618  009A84  25B8               	addwf	??_fatfs_find_free_dir_offset& (0+255),w,b
 27619  009A86  6ED9               	movwf	fsr2l,c
 27620  009A88  0E00               	movlw	0
 27621  009A8A  21B9               	addwfc	(??_fatfs_find_free_dir_offset+1)& (0+255),w,b
 27622  009A8C  6EDA               	movwf	fsr2h,c
 27623  009A8E  0EE5               	movlw	229
 27624  009A90  62DF               	cpfseq	indf2,c
 27625  009A92  D001               	goto	l10352
 27626  009A94  D011               	goto	L91
 27627  009A96                     l10352:
 27628                           
 27629                           ; BSR set to: 0
 27630                           ;fat_write.c: 199: else if (fs->currentsector.sector[recordoffset] == 0x00)
 27631  009A96  C0AC  F0B8         	movff	fatfs_find_free_dir_offset@fs,??_fatfs_find_free_dir_offset
 27632  009A9A  C0AD  F0B9         	movff	fatfs_find_free_dir_offset@fs+1,??_fatfs_find_free_dir_offset+1
 27633  009A9E  0100               	movlb	0	; () banked
 27634  009AA0  51C5               	movf	fatfs_find_free_dir_offset@recordoffset& (0+255),w,b
 27635  009AA2  27B8               	addwf	??_fatfs_find_free_dir_offset& (0+255),f,b
 27636  009AA4  51C6               	movf	(fatfs_find_free_dir_offset@recordoffset+1)& (0+255),w,b
 27637  009AA6  23B9               	addwfc	(??_fatfs_find_free_dir_offset+1)& (0+255),f,b
 27638  009AA8  0E31               	movlw	49
 27639  009AAA  25B8               	addwf	??_fatfs_find_free_dir_offset& (0+255),w,b
 27640  009AAC  6ED9               	movwf	fsr2l,c
 27641  009AAE  0E00               	movlw	0
 27642  009AB0  21B9               	addwfc	(??_fatfs_find_free_dir_offset+1)& (0+255),w,b
 27643  009AB2  6EDA               	movwf	fsr2h,c
 27644  009AB4  50DF               	movf	indf2,w,c
 27645  009AB6  E133               	bnz	l10370
 27646  009AB8                     L91:
 27647                           
 27648                           ; BSR set to: 0
 27649                           ;fat_write.c: 200: {
 27650                           ;fat_write.c: 202: if (possible_spaces == 0)
 27651  009AB8  0100               	movlb	0	; () banked
 27652  009ABA  51CA               	movf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),w,b
 27653  009ABC  11C9               	iorwf	fatfs_find_free_dir_offset@possible_spaces& (0+255),w,b
 27654  009ABE  E122               	bnz	l10362
 27655                           
 27656                           ; BSR set to: 0
 27657                           ;fat_write.c: 203: {
 27658                           ;fat_write.c: 205: *pSector = x-1;
 27659  009AC0  0EFF               	movlw	255
 27660  009AC2  25C7               	addwf	fatfs_find_free_dir_offset@x& (0+255),w,b
 27661  009AC4  6FB8               	movwf	??_fatfs_find_free_dir_offset& (0+255),b
 27662  009AC6  0EFF               	movlw	255
 27663  009AC8  21C8               	addwfc	(fatfs_find_free_dir_offset@x+1)& (0+255),w,b
 27664  009ACA  6FB9               	movwf	(??_fatfs_find_free_dir_offset+1)& (0+255),b
 27665  009ACC  6BBA               	clrf	(??_fatfs_find_free_dir_offset+2)& (0+255),b
 27666  009ACE  BFB9               	btfsc	(??_fatfs_find_free_dir_offset+1)& (0+255),7,b
 27667  009AD0  07BA               	decf	(??_fatfs_find_free_dir_offset+2)& (0+255),f,b
 27668  009AD2  51BA               	movf	(??_fatfs_find_free_dir_offset+2)& (0+255),w,b
 27669  009AD4  6FBB               	movwf	(??_fatfs_find_free_dir_offset+3)& (0+255),b
 27670  009AD6  C0B4  FFD9         	movff	fatfs_find_free_dir_offset@pSector,fsr2l
 27671  009ADA  C0B5  FFDA         	movff	fatfs_find_free_dir_offset@pSector+1,fsr2h
 27672  009ADE  C0B8  FFDE         	movff	??_fatfs_find_free_dir_offset,postinc2
 27673  009AE2  C0B9  FFDE         	movff	??_fatfs_find_free_dir_offset+1,postinc2
 27674  009AE6  C0BA  FFDE         	movff	??_fatfs_find_free_dir_offset+2,postinc2
 27675  009AEA  C0BB  FFDD         	movff	??_fatfs_find_free_dir_offset+3,postdec2
 27676  009AEE  06D9               	decf	fsr2l,f,c
 27677  009AF0  06D9               	decf	fsr2l,f,c
 27678                           
 27679                           ; BSR set to: 0
 27680                           ;fat_write.c: 206: *pOffset = item;
 27681  009AF2  C0B6  FFD9         	movff	fatfs_find_free_dir_offset@pOffset,fsr2l
 27682  009AF6  C0B7  FFDA         	movff	fatfs_find_free_dir_offset@pOffset+1,fsr2h
 27683  009AFA  C0CB  FFDF         	movff	fatfs_find_free_dir_offset@item,indf2
 27684                           
 27685                           ; BSR set to: 0
 27686                           ;fat_write.c: 207: start_recorded = 1;
 27687  009AFE  6BBF               	clrf	(fatfs_find_free_dir_offset@start_recorded+1)& (0+255),b
 27688  009B00  0E01               	movlw	1
 27689  009B02  6FBE               	movwf	fatfs_find_free_dir_offset@start_recorded& (0+255),b
 27690  009B04                     l10362:
 27691                           
 27692                           ; BSR set to: 0
 27693                           ;fat_write.c: 208: }
 27694                           ;fat_write.c: 211: possible_spaces++;
 27695  009B04  0100               	movlb	0	; () banked
 27696  009B06  4BC9               	infsnz	fatfs_find_free_dir_offset@possible_spaces& (0+255),f,b
 27697  009B08  2BCA               	incf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),f,b
 27698                           
 27699                           ; BSR set to: 0
 27700                           ;fat_write.c: 214: if (possible_spaces >= entryCount)
 27701  009B0A  51CA               	movf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),w,b
 27702  009B0C  0A80               	xorlw	128
 27703  009B0E  6FB8               	movwf	??_fatfs_find_free_dir_offset& (0+255),b
 27704  009B10  51B2               	movf	fatfs_find_free_dir_offset@entryCount& (0+255),w,b
 27705  009B12  5DC9               	subwf	fatfs_find_free_dir_offset@possible_spaces& (0+255),w,b
 27706  009B14  51B3               	movf	(fatfs_find_free_dir_offset@entryCount+1)& (0+255),w,b
 27707  009B16  0A80               	xorlw	128
 27708  009B18  59B8               	subwfb	??_fatfs_find_free_dir_offset& (0+255),w,b
 27709  009B1A  E306               	bnc	l10372
 27710  009B1C  D09F               	goto	l10410
 27711  009B1E                     l10370:
 27712                           
 27713                           ; BSR set to: 0
 27714                           ;fat_write.c: 218: else
 27715                           ;fat_write.c: 219: {
 27716                           ;fat_write.c: 221: possible_spaces = 0;
 27717  009B1E  0100               	movlb	0	; () banked
 27718  009B20  6BCA               	clrf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),b
 27719  009B22  6BC9               	clrf	fatfs_find_free_dir_offset@possible_spaces& (0+255),b
 27720                           
 27721                           ;fat_write.c: 222: start_recorded = 0;
 27722  009B24  6BBF               	clrf	(fatfs_find_free_dir_offset@start_recorded+1)& (0+255),b
 27723  009B26  6BBE               	clrf	fatfs_find_free_dir_offset@start_recorded& (0+255),b
 27724  009B28                     l10372:
 27725                           
 27726                           ; BSR set to: 0
 27727  009B28  0100               	movlb	0	; () banked
 27728  009B2A  2BCB               	incf	fatfs_find_free_dir_offset@item& (0+255),f,b
 27729                           
 27730                           ; BSR set to: 0
 27731  009B2C  0E0F               	movlw	15
 27732  009B2E  65CB               	cpfsgt	fatfs_find_free_dir_offset@item& (0+255),b
 27733  009B30  D757               	goto	l10318
 27734  009B32  D72B               	goto	l10310
 27735  009B34                     l10376:
 27736                           
 27737                           ; BSR set to: 0
 27738                           ;fat_write.c: 228: else
 27739                           ;fat_write.c: 229: {
 27740                           ;fat_write.c: 230: uint32 newCluster;
 27741                           ;fat_write.c: 233: if (!fatfs_find_blank_cluster(fs, fs->rootdir_first_cluster, &newClus
      +                          ter))
 27742  009B34  C0AD  F047         	movff	fatfs_find_free_dir_offset@fs+1,fatfs_find_blank_cluster@fs+1
 27743  009B38  C0AC  F046         	movff	fatfs_find_free_dir_offset@fs,fatfs_find_blank_cluster@fs
 27744  009B3C  EE20 F005          	lfsr	2,5
 27745  009B40  0100               	movlb	0	; () banked
 27746  009B42  51AC               	movf	fatfs_find_free_dir_offset@fs& (0+255),w,b
 27747  009B44  26D9               	addwf	fsr2l,f,c
 27748  009B46  51AD               	movf	(fatfs_find_free_dir_offset@fs+1)& (0+255),w,b
 27749  009B48  22DA               	addwfc	fsr2h,f,c
 27750  009B4A  CFDE F048          	movff	postinc2,fatfs_find_blank_cluster@start_cluster
 27751  009B4E  CFDE F049          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+1
 27752  009B52  CFDE F04A          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+2
 27753  009B56  CFDE F04B          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+3
 27754  009B5A  0E00               	movlw	high fatfs_find_free_dir_offset@newCluster
 27755  009B5C  6E4D               	movwf	fatfs_find_blank_cluster@free_cluster+1,c
 27756  009B5E  0EC1               	movlw	low fatfs_find_free_dir_offset@newCluster
 27757  009B60  6E4C               	movwf	fatfs_find_blank_cluster@free_cluster,c
 27758  009B62  EC25  F05A         	call	_fatfs_find_blank_cluster	;wreg free
 27759  009B66  5047               	movf	?_fatfs_find_blank_cluster+1,w,c
 27760  009B68  1046               	iorwf	?_fatfs_find_blank_cluster,w,c
 27761  009B6A  E101 D70A          	bz	L90
 27762                           
 27763                           ;fat_write.c: 237: if (!fatfs_fat_add_cluster_to_chain(fs, dirCluster, newCluster))
 27764                           
 27765                           ; BSR set to: 0
 27766                           
 27767                           ; BSR set to: 0
 27768                           
 27769                           ;fat_write.c: 234: return 0;
 27770  009B6E  C0AD  F081         	movff	fatfs_find_free_dir_offset@fs+1,fatfs_fat_add_cluster_to_chain@fs+1
 27771  009B72  0100               	movlb	0	; () banked
 27772  009B74  C0AC  F080         	movff	fatfs_find_free_dir_offset@fs,fatfs_fat_add_cluster_to_chain@fs
 27773  009B78  C0AE  F082         	movff	fatfs_find_free_dir_offset@dirCluster,fatfs_fat_add_cluster_to_chain@start_cluste
      +                          r
 27774  009B7C  C0AF  F083         	movff	fatfs_find_free_dir_offset@dirCluster+1,fatfs_fat_add_cluster_to_chain@start_clus
      +                          ter+1
 27775  009B80  C0B0  F084         	movff	fatfs_find_free_dir_offset@dirCluster+2,fatfs_fat_add_cluster_to_chain@start_clus
      +                          ter+2
 27776  009B84  C0B1  F085         	movff	fatfs_find_free_dir_offset@dirCluster+3,fatfs_fat_add_cluster_to_chain@start_clus
      +                          ter+3
 27777  009B88  C0C1  F086         	movff	fatfs_find_free_dir_offset@newCluster,fatfs_fat_add_cluster_to_chain@newEntry
 27778  009B8C  C0C2  F087         	movff	fatfs_find_free_dir_offset@newCluster+1,fatfs_fat_add_cluster_to_chain@newEntry+1
 27779  009B90  C0C3  F088         	movff	fatfs_find_free_dir_offset@newCluster+2,fatfs_fat_add_cluster_to_chain@newEntry+2
 27780  009B94  C0C4  F089         	movff	fatfs_find_free_dir_offset@newCluster+3,fatfs_fat_add_cluster_to_chain@newEntry+3
 27781  009B98  EC2C  F02E         	call	_fatfs_fat_add_cluster_to_chain	;wreg free
 27782  009B9C  0100               	movlb	0	; () banked
 27783  009B9E  5181               	movf	(?_fatfs_fat_add_cluster_to_chain+1)& (0+255),w,b
 27784  009BA0  1180               	iorwf	?_fatfs_fat_add_cluster_to_chain& (0+255),w,b
 27785  009BA2  E101 D6EE          	bz	L90
 27786                           
 27787                           ; BSR set to: 0
 27788                           ;fat_write.c: 241: memset(fs->currentsector.sector, 0x00, 512);
 27789                           
 27790                           ; BSR set to: 0
 27791                           
 27792                           ; BSR set to: 0
 27793                           
 27794                           ; BSR set to: 0
 27795                           ;fat_write.c: 238: return 0;
 27796  009BA6  0E31               	movlw	49
 27797  009BA8  25AC               	addwf	fatfs_find_free_dir_offset@fs& (0+255),w,b
 27798  009BAA  6E01               	movwf	memset@p1,c
 27799  009BAC  0E00               	movlw	0
 27800  009BAE  21AD               	addwfc	(fatfs_find_free_dir_offset@fs+1)& (0+255),w,b
 27801  009BB0  6E02               	movwf	memset@p1+1,c
 27802  009BB2  6A04               	clrf	memset@c+1,c
 27803  009BB4  6A03               	clrf	memset@c,c
 27804  009BB6  0E02               	movlw	2
 27805  009BB8  6E06               	movwf	memset@n+1,c
 27806  009BBA  0E00               	movlw	0
 27807  009BBC  6A05               	clrf	memset@n,c
 27808  009BBE  EC1A  F020         	call	_memset	;wreg free
 27809                           
 27810                           ;fat_write.c: 242: for (i=0;i<fs->sectors_per_cluster;i++)
 27811  009BC2  0100               	movlb	0	; () banked
 27812  009BC4  6BC0               	clrf	fatfs_find_free_dir_offset@i& (0+255),b
 27813  009BC6  D01D               	goto	l10400
 27814  009BC8                     l10392:
 27815                           
 27816                           ; BSR set to: 0
 27817                           ;fat_write.c: 243: {
 27818                           ;fat_write.c: 244: if (!fatfs_write_sector(fs, newCluster, i, 0))
 27819  009BC8  C0AD  F021         	movff	fatfs_find_free_dir_offset@fs+1,fatfs_write_sector@fs+1
 27820  009BCC  C0AC  F020         	movff	fatfs_find_free_dir_offset@fs,fatfs_write_sector@fs
 27821  009BD0  C0C1  F022         	movff	fatfs_find_free_dir_offset@newCluster,fatfs_write_sector@cluster
 27822  009BD4  C0C2  F023         	movff	fatfs_find_free_dir_offset@newCluster+1,fatfs_write_sector@cluster+1
 27823  009BD8  C0C3  F024         	movff	fatfs_find_free_dir_offset@newCluster+2,fatfs_write_sector@cluster+2
 27824  009BDC  C0C4  F025         	movff	fatfs_find_free_dir_offset@newCluster+3,fatfs_write_sector@cluster+3
 27825  009BE0  0100               	movlb	0	; () banked
 27826  009BE2  51C0               	movf	fatfs_find_free_dir_offset@i& (0+255),w,b
 27827  009BE4  6E26               	movwf	fatfs_write_sector@sector,c
 27828  009BE6  6A27               	clrf	fatfs_write_sector@sector+1,c
 27829  009BE8  6A28               	clrf	fatfs_write_sector@sector+2,c
 27830  009BEA  6A29               	clrf	fatfs_write_sector@sector+3,c
 27831  009BEC  0E00               	movlw	0
 27832  009BEE  6A2B               	clrf	fatfs_write_sector@target+1,c
 27833  009BF0  6A2A               	clrf	fatfs_write_sector@target,c
 27834  009BF2  ECBA  F04F         	call	_fatfs_write_sector	;wreg free
 27835  009BF6  5021               	movf	?_fatfs_write_sector+1,w,c
 27836  009BF8  1020               	iorwf	?_fatfs_write_sector,w,c
 27837  009BFA  E101 D6C2          	bz	L90
 27838                           
 27839                           ; BSR set to: 0
 27840                           
 27841                           ; BSR set to: 0
 27842                           
 27843                           ;fat_write.c: 245: return 0;
 27844  009BFE  0100               	movlb	0	; () banked
 27845  009C00  2BC0               	incf	fatfs_find_free_dir_offset@i& (0+255),f,b
 27846  009C02                     l10400:
 27847                           
 27848                           ; BSR set to: 0
 27849  009C02  C0AC  FFD9         	movff	fatfs_find_free_dir_offset@fs,fsr2l
 27850  009C06  C0AD  FFDA         	movff	fatfs_find_free_dir_offset@fs+1,fsr2h
 27851  009C0A  50DF               	movf	indf2,w,c
 27852  009C0C  0100               	movlb	0	; () banked
 27853  009C0E  5DC0               	subwf	fatfs_find_free_dir_offset@i& (0+255),w,b
 27854  009C10  E3DB               	bnc	l10392
 27855                           
 27856                           ; BSR set to: 0
 27857                           ;fat_write.c: 246: }
 27858                           ;fat_write.c: 249: if (!start_recorded)
 27859                           
 27860                           ; BSR set to: 0
 27861  009C12  51BF               	movf	(fatfs_find_free_dir_offset@start_recorded+1)& (0+255),w,b
 27862  009C14  11BE               	iorwf	fatfs_find_free_dir_offset@start_recorded& (0+255),w,b
 27863  009C16  E122               	bnz	l10410
 27864                           
 27865                           ; BSR set to: 0
 27866                           ;fat_write.c: 250: {
 27867                           ;fat_write.c: 252: *pSector = (x-1);
 27868  009C18  0EFF               	movlw	255
 27869  009C1A  25C7               	addwf	fatfs_find_free_dir_offset@x& (0+255),w,b
 27870  009C1C  6FB8               	movwf	??_fatfs_find_free_dir_offset& (0+255),b
 27871  009C1E  0EFF               	movlw	255
 27872  009C20  21C8               	addwfc	(fatfs_find_free_dir_offset@x+1)& (0+255),w,b
 27873  009C22  6FB9               	movwf	(??_fatfs_find_free_dir_offset+1)& (0+255),b
 27874  009C24  6BBA               	clrf	(??_fatfs_find_free_dir_offset+2)& (0+255),b
 27875  009C26  BFB9               	btfsc	(??_fatfs_find_free_dir_offset+1)& (0+255),7,b
 27876  009C28  07BA               	decf	(??_fatfs_find_free_dir_offset+2)& (0+255),f,b
 27877  009C2A  51BA               	movf	(??_fatfs_find_free_dir_offset+2)& (0+255),w,b
 27878  009C2C  6FBB               	movwf	(??_fatfs_find_free_dir_offset+3)& (0+255),b
 27879  009C2E  C0B4  FFD9         	movff	fatfs_find_free_dir_offset@pSector,fsr2l
 27880  009C32  C0B5  FFDA         	movff	fatfs_find_free_dir_offset@pSector+1,fsr2h
 27881  009C36  C0B8  FFDE         	movff	??_fatfs_find_free_dir_offset,postinc2
 27882  009C3A  C0B9  FFDE         	movff	??_fatfs_find_free_dir_offset+1,postinc2
 27883  009C3E  C0BA  FFDE         	movff	??_fatfs_find_free_dir_offset+2,postinc2
 27884  009C42  C0BB  FFDD         	movff	??_fatfs_find_free_dir_offset+3,postdec2
 27885  009C46  06D9               	decf	fsr2l,f,c
 27886  009C48  06D9               	decf	fsr2l,f,c
 27887                           
 27888                           ; BSR set to: 0
 27889                           ;fat_write.c: 253: *pOffset = 0;
 27890  009C4A  C0B6  FFD9         	movff	fatfs_find_free_dir_offset@pOffset,fsr2l
 27891  009C4E  C0B7  FFDA         	movff	fatfs_find_free_dir_offset@pOffset+1,fsr2h
 27892  009C52  0E00               	movlw	0
 27893  009C54  6EDF               	movwf	indf2,c
 27894                           
 27895                           ; BSR set to: 0
 27896                           ;fat_write.c: 254: start_recorded = 1;
 27897  009C56  6FBF               	movwf	(fatfs_find_free_dir_offset@start_recorded+1)& (0+255),b
 27898  009C58  0E01               	movlw	1
 27899  009C5A  6FBE               	movwf	fatfs_find_free_dir_offset@start_recorded& (0+255),b
 27900  009C5C                     l10410:
 27901                           
 27902                           ; BSR set to: 0
 27903                           ;fat_write.c: 255: }
 27904                           ;fat_write.c: 257: return 1;
 27905  009C5C  0E00               	movlw	0
 27906  009C5E  0100               	movlb	0	; () banked
 27907  009C60  6FAD               	movwf	(?_fatfs_find_free_dir_offset+1)& (0+255),b
 27908  009C62  0E01               	movlw	1
 27909  009C64                     L89:
 27910  009C64  0100               	movlb	0	; () banked
 27911  009C66  6FAC               	movwf	?_fatfs_find_free_dir_offset& (0+255),b
 27912                           
 27913                           ; BSR set to: 0
 27914                           
 27915                           ; BSR set to: 0
 27916                           
 27917                           ; BSR set to: 0
 27918                           ;fat_write.c: 258: }
 27919                           ;fat_write.c: 259: }
 27920                           ;fat_write.c: 261: return 0;
 27921                           
 27922                           ; BSR set to: 0
 27923                           
 27924                           ; BSR set to: 0
 27925                           
 27926                           ; BSR set to: 0
 27927                           
 27928                           ; BSR set to: 0
 27929  009C68  0012               	return	
 27930  009C6A                     __end_of_fatfs_find_free_dir_offset:
 27931                           	opt stack 0
 27932                           tosu	equ	0xFFF
 27933                           tosh	equ	0xFFE
 27934                           tosl	equ	0xFFD
 27935                           pclath	equ	0xFFA
 27936                           tblptru	equ	0xFF8
 27937                           tblptrh	equ	0xFF7
 27938                           tblptrl	equ	0xFF6
 27939                           tablat	equ	0xFF5
 27940                           prodh	equ	0xFF4
 27941                           prodl	equ	0xFF3
 27942                           indf0	equ	0xFEF
 27943                           postinc0	equ	0xFEE
 27944                           fsr0h	equ	0xFEA
 27945                           fsr0l	equ	0xFE9
 27946                           wreg	equ	0xFE8
 27947                           indf1	equ	0xFE7
 27948                           postinc1	equ	0xFE6
 27949                           postdec1	equ	0xFE5
 27950                           fsr1h	equ	0xFE2
 27951                           fsr1l	equ	0xFE1
 27952                           indf2	equ	0xFDF
 27953                           postinc2	equ	0xFDE
 27954                           postdec2	equ	0xFDD
 27955                           fsr2h	equ	0xFDA
 27956                           fsr2l	equ	0xFD9
 27957                           status	equ	0xFD8
 27958                           
 27959 ;; *************** function _fatfs_write_sector *****************
 27960 ;; Defined at:
 27961 ;;		line 328 in file "fat_access.c"
 27962 ;; Parameters:    Size  Location     Type
 27963 ;;  fs              2   31[COMRAM] PTR struct fatfs
 27964 ;;		 -> _fs(1095), 
 27965 ;;  cluster         4   33[COMRAM] unsigned long 
 27966 ;;  sector          4   37[COMRAM] unsigned long 
 27967 ;;  target          2   41[COMRAM] PTR unsigned char 
 27968 ;;		 -> RAM(3967), NULL(0), 
 27969 ;; Auto vars:     Size  Location     Type
 27970 ;;  lba             4   55[COMRAM] unsigned long 
 27971 ;;  lba             4   59[COMRAM] unsigned long 
 27972 ;; Return value:  Size  Location     Type
 27973 ;;                  2   31[COMRAM] int 
 27974 ;; Registers used:
 27975 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27976 ;; Tracked objects:
 27977 ;;		On entry : 0/0
 27978 ;;		On exit  : 0/0
 27979 ;;		Unchanged: 0/0
 27980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27981 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27982 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27983 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27984 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27985 ;;Total ram usage:       32 bytes
 27986 ;; Hardware stack levels used:    1
 27987 ;; Hardware stack levels required when called:    3
 27988 ;; This function calls:
 27989 ;;		_fatfs_lba_of_cluster
 27990 ;;		_media_write
 27991 ;; This function is called by:
 27992 ;;		__create_directory
 27993 ;;		_fatfs_find_free_dir_offset
 27994 ;; This function uses a non-reentrant model
 27995 ;;
 27996                           
 27997                           	psect	text80
 27998  009F74                     __ptext80:
 27999                           	opt stack 0
 28000  009F74                     _fatfs_write_sector:
 28001                           	opt stack 21
 28002                           
 28003                           ;fat_access.c: 331: if (!fs->disk_io.write_media)
 28004                           
 28005                           ; BSR set to: 0
 28006                           ;incstack = 0
 28007  009F74  EE20 F02B          	lfsr	2,43
 28008  009F78  5020               	movf	fatfs_write_sector@fs,w,c
 28009  009F7A  26D9               	addwf	fsr2l,f,c
 28010  009F7C  5021               	movf	fatfs_write_sector@fs+1,w,c
 28011  009F7E  22DA               	addwfc	fsr2h,f,c
 28012  009F80  50DE               	movf	postinc2,w,c
 28013  009F82  10DD               	iorwf	postdec2,w,c
 28014  009F84  E05B               	bz	l9150
 28015                           
 28016                           ;fat_access.c: 335: if (fs->fat_type == FAT_TYPE_16 && cluster == 0)
 28017                           
 28018                           ;fat_access.c: 332: return 0;
 28019  009F86  EE20 F028          	lfsr	2,40
 28020  009F8A  5020               	movf	fatfs_write_sector@fs,w,c
 28021  009F8C  26D9               	addwf	fsr2l,f,c
 28022  009F8E  5021               	movf	fatfs_write_sector@fs+1,w,c
 28023  009F90  22DA               	addwfc	fsr2h,f,c
 28024  009F92  50DF               	movf	indf2,w,c
 28025  009F94  E001 D0C0          	bnz	l9168
 28026  009F98  5025               	movf	fatfs_write_sector@cluster+3,w,c
 28027  009F9A  1022               	iorwf	fatfs_write_sector@cluster,w,c
 28028  009F9C  1023               	iorwf	fatfs_write_sector@cluster+1,w,c
 28029  009F9E  1024               	iorwf	fatfs_write_sector@cluster+2,w,c
 28030  009FA0  E001 D0BA          	bnz	l9168
 28031                           
 28032                           ;fat_access.c: 336: {
 28033                           ;fat_access.c: 337: uint32 lba;
 28034                           ;fat_access.c: 340: if (sector < fs->rootdir_sectors)
 28035  009FA4  EE20 F00D          	lfsr	2,13
 28036  009FA8  5020               	movf	fatfs_write_sector@fs,w,c
 28037  009FAA  26D9               	addwf	fsr2l,f,c
 28038  009FAC  5021               	movf	fatfs_write_sector@fs+1,w,c
 28039  009FAE  22DA               	addwfc	fsr2h,f,c
 28040  009FB0  CFDE F02C          	movff	postinc2,??_fatfs_write_sector
 28041  009FB4  CFDE F02D          	movff	postinc2,??_fatfs_write_sector+1
 28042  009FB8  CFDE F02E          	movff	postinc2,??_fatfs_write_sector+2
 28043  009FBC  CFDE F02F          	movff	postinc2,??_fatfs_write_sector+3
 28044  009FC0  502C               	movf	??_fatfs_write_sector,w,c
 28045  009FC2  5C26               	subwf	fatfs_write_sector@sector,w,c
 28046  009FC4  502D               	movf	??_fatfs_write_sector+1,w,c
 28047  009FC6  5827               	subwfb	fatfs_write_sector@sector+1,w,c
 28048  009FC8  502E               	movf	??_fatfs_write_sector+2,w,c
 28049  009FCA  5828               	subwfb	fatfs_write_sector@sector+2,w,c
 28050  009FCC  502F               	movf	??_fatfs_write_sector+3,w,c
 28051  009FCE  5829               	subwfb	fatfs_write_sector@sector+3,w,c
 28052  009FD0  E235               	bc	l9150
 28053                           
 28054                           ;fat_access.c: 341: lba = fs->lba_begin + fs->rootdir_first_sector + sector;
 28055  009FD2  EE20 F009          	lfsr	2,9
 28056  009FD6  5020               	movf	fatfs_write_sector@fs,w,c
 28057  009FD8  26D9               	addwf	fsr2l,f,c
 28058  009FDA  5021               	movf	fatfs_write_sector@fs+1,w,c
 28059  009FDC  22DA               	addwfc	fsr2h,f,c
 28060  009FDE  CFDE F02C          	movff	postinc2,??_fatfs_write_sector
 28061  009FE2  CFDE F02D          	movff	postinc2,??_fatfs_write_sector+1
 28062  009FE6  CFDE F02E          	movff	postinc2,??_fatfs_write_sector+2
 28063  009FEA  CFDE F02F          	movff	postinc2,??_fatfs_write_sector+3
 28064  009FEE  EE20 F017          	lfsr	2,23
 28065  009FF2  5020               	movf	fatfs_write_sector@fs,w,c
 28066  009FF4  26D9               	addwf	fsr2l,f,c
 28067  009FF6  5021               	movf	fatfs_write_sector@fs+1,w,c
 28068  009FF8  22DA               	addwfc	fsr2h,f,c
 28069  009FFA  CFDE F030          	movff	postinc2,??_fatfs_write_sector+4
 28070  009FFE  CFDE F031          	movff	postinc2,??_fatfs_write_sector+5
 28071  00A002  CFDE F032          	movff	postinc2,??_fatfs_write_sector+6
 28072  00A006  CFDE F033          	movff	postinc2,??_fatfs_write_sector+7
 28073  00A00A  502C               	movf	??_fatfs_write_sector,w,c
 28074  00A00C  2430               	addwf	??_fatfs_write_sector+4,w,c
 28075  00A00E  6E34               	movwf	(??_fatfs_write_sector+8)& (0+255),c
 28076  00A010  502D               	movf	??_fatfs_write_sector+1,w,c
 28077  00A012  2031               	addwfc	??_fatfs_write_sector+5,w,c
 28078  00A014  6E35               	movwf	(??_fatfs_write_sector+9)& (0+255),c
 28079  00A016  502E               	movf	??_fatfs_write_sector+2,w,c
 28080  00A018  2032               	addwfc	??_fatfs_write_sector+6,w,c
 28081  00A01A  6E36               	movwf	(??_fatfs_write_sector+10)& (0+255),c
 28082  00A01C  502F               	movf	??_fatfs_write_sector+3,w,c
 28083  00A01E  2033               	addwfc	??_fatfs_write_sector+7,w,c
 28084  00A020  6E37               	movwf	(??_fatfs_write_sector+11)& (0+255),c
 28085  00A022  5026               	movf	fatfs_write_sector@sector,w,c
 28086  00A024  2434               	addwf	??_fatfs_write_sector+8,w,c
 28087  00A026  6E3C               	movwf	fatfs_write_sector@lba,c
 28088  00A028  5027               	movf	fatfs_write_sector@sector+1,w,c
 28089  00A02A  2035               	addwfc	??_fatfs_write_sector+9,w,c
 28090  00A02C  6E3D               	movwf	fatfs_write_sector@lba+1,c
 28091  00A02E  5028               	movf	fatfs_write_sector@sector+2,w,c
 28092  00A030  2036               	addwfc	??_fatfs_write_sector+10,w,c
 28093  00A032  6E3E               	movwf	fatfs_write_sector@lba+2,c
 28094  00A034  5029               	movf	fatfs_write_sector@sector+3,w,c
 28095  00A036  2037               	addwfc	??_fatfs_write_sector+11,w,c
 28096  00A038  6E3F               	movwf	fatfs_write_sector@lba+3,c
 28097  00A03A  D004               	goto	l9154
 28098  00A03C                     l9150:
 28099                           
 28100                           ;fat_access.c: 342: else
 28101                           ;fat_access.c: 343: return 0;
 28102  00A03C  0E00               	movlw	0
 28103  00A03E  6E21               	movwf	?_fatfs_write_sector+1,c
 28104  00A040  6E20               	movwf	?_fatfs_write_sector,c
 28105  00A042  D121               	goto	l113
 28106  00A044                     l9154:
 28107                           
 28108                           ;fat_access.c: 346: if (target)
 28109  00A044  502B               	movf	fatfs_write_sector@target+1,w,c
 28110  00A046  102A               	iorwf	fatfs_write_sector@target,w,c
 28111  00A048  E025               	bz	l9162
 28112                           
 28113                           ;fat_access.c: 347: {
 28114                           ;fat_access.c: 349: return fs->disk_io.write_media(lba, target, 1);
 28115  00A04A  C03C  F009         	movff	fatfs_write_sector@lba,media_write@sector
 28116  00A04E  C03D  F00A         	movff	fatfs_write_sector@lba+1,media_write@sector+1
 28117  00A052  C03E  F00B         	movff	fatfs_write_sector@lba+2,media_write@sector+2
 28118  00A056  C03F  F00C         	movff	fatfs_write_sector@lba+3,media_write@sector+3
 28119  00A05A  0E20               	movlw	32
 28120  00A05C  6E0F               	movwf	media_write@buffer+2,c
 28121  00A05E  C02B  F00E         	movff	fatfs_write_sector@target+1,media_write@buffer+1
 28122  00A062  C02A  F00D         	movff	fatfs_write_sector@target,media_write@buffer
 28123  00A066  0E01               	movlw	1
 28124  00A068  6E10               	movwf	media_write@sector_count,c
 28125  00A06A  6A11               	clrf	media_write@sector_count+1,c
 28126  00A06C  6A12               	clrf	media_write@sector_count+2,c
 28127  00A06E  6A13               	clrf	media_write@sector_count+3,c
 28128  00A070  EE20 F02B          	lfsr	2,43
 28129  00A074  5020               	movf	fatfs_write_sector@fs,w,c
 28130  00A076  26D9               	addwf	fsr2l,f,c
 28131  00A078  5021               	movf	fatfs_write_sector@fs+1,w,c
 28132  00A07A  22DA               	addwfc	fsr2h,f,c
 28133  00A07C  CFDE F02C          	movff	postinc2,??_fatfs_write_sector
 28134  00A080  CFDD F02D          	movff	postdec2,??_fatfs_write_sector+1
 28135  00A084  D801               	call	u9818
 28136  00A086  D0FB               	goto	u9859
 28137  00A088                     u9818:
 28138  00A088  0005               	push	
 28139  00A08A  6EFA               	movwf	pclath,c
 28140  00A08C  502C               	movf	??_fatfs_write_sector,w,c
 28141  00A08E  6EFD               	movwf	tosl,c
 28142  00A090  502D               	movf	??_fatfs_write_sector+1,w,c
 28143  00A092  D03E               	goto	L92
 28144  00A094                     l9162:
 28145                           
 28146                           ;fat_access.c: 351: else
 28147                           ;fat_access.c: 352: {
 28148                           ;fat_access.c: 354: fs->currentsector.address = lba;
 28149  00A094  EE22 F031          	lfsr	2,561
 28150  00A098  5020               	movf	fatfs_write_sector@fs,w,c
 28151  00A09A  26D9               	addwf	fsr2l,f,c
 28152  00A09C  5021               	movf	fatfs_write_sector@fs+1,w,c
 28153  00A09E  22DA               	addwfc	fsr2h,f,c
 28154  00A0A0  C03C  FFDE         	movff	fatfs_write_sector@lba,postinc2
 28155  00A0A4  C03D  FFDE         	movff	fatfs_write_sector@lba+1,postinc2
 28156  00A0A8  C03E  FFDE         	movff	fatfs_write_sector@lba+2,postinc2
 28157  00A0AC  C03F  FFDE         	movff	fatfs_write_sector@lba+3,postinc2
 28158                           
 28159                           ;fat_access.c: 357: return fs->disk_io.write_media(fs->currentsector.address, fs->curren
      +                          tsector.sector, 1);
 28160  00A0B0  EE22 F031          	lfsr	2,561
 28161  00A0B4  5020               	movf	fatfs_write_sector@fs,w,c
 28162  00A0B6  26D9               	addwf	fsr2l,f,c
 28163  00A0B8  5021               	movf	fatfs_write_sector@fs+1,w,c
 28164  00A0BA  22DA               	addwfc	fsr2h,f,c
 28165  00A0BC  CFDE F009          	movff	postinc2,media_write@sector
 28166  00A0C0  CFDE F00A          	movff	postinc2,media_write@sector+1
 28167  00A0C4  CFDE F00B          	movff	postinc2,media_write@sector+2
 28168  00A0C8  CFDE F00C          	movff	postinc2,media_write@sector+3
 28169  00A0CC  0E31               	movlw	49
 28170  00A0CE  2420               	addwf	fatfs_write_sector@fs,w,c
 28171  00A0D0  6E2C               	movwf	??_fatfs_write_sector& (0+255),c
 28172  00A0D2  0E00               	movlw	0
 28173  00A0D4  2021               	addwfc	fatfs_write_sector@fs+1,w,c
 28174  00A0D6  6E2D               	movwf	(??_fatfs_write_sector+1)& (0+255),c
 28175  00A0D8  0E20               	movlw	32
 28176  00A0DA  6E0F               	movwf	media_write@buffer+2,c
 28177  00A0DC  C02D  F00E         	movff	??_fatfs_write_sector+1,media_write@buffer+1
 28178  00A0E0  C02C  F00D         	movff	??_fatfs_write_sector,media_write@buffer
 28179  00A0E4  0E01               	movlw	1
 28180  00A0E6  6E10               	movwf	media_write@sector_count,c
 28181  00A0E8  6A11               	clrf	media_write@sector_count+1,c
 28182  00A0EA  6A12               	clrf	media_write@sector_count+2,c
 28183  00A0EC  6A13               	clrf	media_write@sector_count+3,c
 28184  00A0EE  EE20 F02B          	lfsr	2,43
 28185  00A0F2  5020               	movf	fatfs_write_sector@fs,w,c
 28186  00A0F4  26D9               	addwf	fsr2l,f,c
 28187  00A0F6  5021               	movf	fatfs_write_sector@fs+1,w,c
 28188  00A0F8  22DA               	addwfc	fsr2h,f,c
 28189  00A0FA  CFDE F02E          	movff	postinc2,??_fatfs_write_sector+2
 28190  00A0FE  CFDD F02F          	movff	postdec2,??_fatfs_write_sector+3
 28191  00A102  D801               	call	u9828
 28192  00A104  D0BC               	goto	u9859
 28193  00A106                     u9828:
 28194  00A106  0005               	push	
 28195  00A108  6EFA               	movwf	pclath,c
 28196  00A10A  502E               	movf	??_fatfs_write_sector+2,w,c
 28197  00A10C  6EFD               	movwf	tosl,c
 28198  00A10E  502F               	movf	??_fatfs_write_sector+3,w,c
 28199  00A110                     L92:
 28200  00A110  6EFE               	movwf	tosh,c
 28201  00A112  6AFF               	clrf	tosu,c
 28202  00A114  50FA               	movf	pclath,w,c
 28203  00A116  0012               	return		;indir
 28204  00A118                     l9168:
 28205                           
 28206                           ;fat_access.c: 361: else
 28207                           ;fat_access.c: 362: {
 28208                           ;fat_access.c: 364: if (target)
 28209  00A118  502B               	movf	fatfs_write_sector@target+1,w,c
 28210  00A11A  102A               	iorwf	fatfs_write_sector@target,w,c
 28211  00A11C  E04A               	bz	l9178
 28212                           
 28213                           ;fat_access.c: 365: {
 28214                           ;fat_access.c: 367: uint32 lba = fatfs_lba_of_cluster(fs, cluster) + sector;
 28215  00A11E  C021  F002         	movff	fatfs_write_sector@fs+1,fatfs_lba_of_cluster@fs+1
 28216  00A122  C020  F001         	movff	fatfs_write_sector@fs,fatfs_lba_of_cluster@fs
 28217  00A126  C022  F003         	movff	fatfs_write_sector@cluster,fatfs_lba_of_cluster@Cluster_Number
 28218  00A12A  C023  F004         	movff	fatfs_write_sector@cluster+1,fatfs_lba_of_cluster@Cluster_Number+1
 28219  00A12E  C024  F005         	movff	fatfs_write_sector@cluster+2,fatfs_lba_of_cluster@Cluster_Number+2
 28220  00A132  C025  F006         	movff	fatfs_write_sector@cluster+3,fatfs_lba_of_cluster@Cluster_Number+3
 28221  00A136  EC4C  F03E         	call	_fatfs_lba_of_cluster	;wreg free
 28222  00A13A  C001  F02C         	movff	?_fatfs_lba_of_cluster,??_fatfs_write_sector
 28223  00A13E  C002  F02D         	movff	?_fatfs_lba_of_cluster+1,??_fatfs_write_sector+1
 28224  00A142  C003  F02E         	movff	?_fatfs_lba_of_cluster+2,??_fatfs_write_sector+2
 28225  00A146  C004  F02F         	movff	?_fatfs_lba_of_cluster+3,??_fatfs_write_sector+3
 28226  00A14A  5026               	movf	fatfs_write_sector@sector,w,c
 28227  00A14C  242C               	addwf	??_fatfs_write_sector,w,c
 28228  00A14E  6E38               	movwf	fatfs_write_sector@lba_440,c
 28229  00A150  5027               	movf	fatfs_write_sector@sector+1,w,c
 28230  00A152  202D               	addwfc	??_fatfs_write_sector+1,w,c
 28231  00A154  6E39               	movwf	fatfs_write_sector@lba_440+1,c
 28232  00A156  5028               	movf	fatfs_write_sector@sector+2,w,c
 28233  00A158  202E               	addwfc	??_fatfs_write_sector+2,w,c
 28234  00A15A  6E3A               	movwf	fatfs_write_sector@lba_440+2,c
 28235  00A15C  5029               	movf	fatfs_write_sector@sector+3,w,c
 28236  00A15E  202F               	addwfc	??_fatfs_write_sector+3,w,c
 28237  00A160  6E3B               	movwf	fatfs_write_sector@lba_440+3,c
 28238                           
 28239                           ;fat_access.c: 370: return fs->disk_io.write_media(lba, target, 1);
 28240  00A162  C038  F009         	movff	fatfs_write_sector@lba_440,media_write@sector
 28241  00A166  C039  F00A         	movff	fatfs_write_sector@lba_440+1,media_write@sector+1
 28242  00A16A  C03A  F00B         	movff	fatfs_write_sector@lba_440+2,media_write@sector+2
 28243  00A16E  C03B  F00C         	movff	fatfs_write_sector@lba_440+3,media_write@sector+3
 28244  00A172  0E20               	movlw	32
 28245  00A174  6E0F               	movwf	media_write@buffer+2,c
 28246  00A176  C02B  F00E         	movff	fatfs_write_sector@target+1,media_write@buffer+1
 28247  00A17A  C02A  F00D         	movff	fatfs_write_sector@target,media_write@buffer
 28248  00A17E  0E01               	movlw	1
 28249  00A180  6E10               	movwf	media_write@sector_count,c
 28250  00A182  6A11               	clrf	media_write@sector_count+1,c
 28251  00A184  6A12               	clrf	media_write@sector_count+2,c
 28252  00A186  6A13               	clrf	media_write@sector_count+3,c
 28253  00A188  EE20 F02B          	lfsr	2,43
 28254  00A18C  5020               	movf	fatfs_write_sector@fs,w,c
 28255  00A18E  26D9               	addwf	fsr2l,f,c
 28256  00A190  5021               	movf	fatfs_write_sector@fs+1,w,c
 28257  00A192  22DA               	addwfc	fsr2h,f,c
 28258  00A194  CFDE F02C          	movff	postinc2,??_fatfs_write_sector
 28259  00A198  CFDD F02D          	movff	postdec2,??_fatfs_write_sector+1
 28260  00A19C  D801               	call	u9848
 28261  00A19E  D06F               	goto	u9859
 28262  00A1A0                     u9848:
 28263  00A1A0  0005               	push	
 28264  00A1A2  6EFA               	movwf	pclath,c
 28265  00A1A4  502C               	movf	??_fatfs_write_sector,w,c
 28266  00A1A6  6EFD               	movwf	tosl,c
 28267  00A1A8  502D               	movf	??_fatfs_write_sector+1,w,c
 28268  00A1AA  6EFE               	movwf	tosh,c
 28269  00A1AC  6AFF               	clrf	tosu,c
 28270  00A1AE  50FA               	movf	pclath,w,c
 28271  00A1B0  0012               	return		;indir
 28272  00A1B2                     l9178:
 28273                           
 28274                           ;fat_access.c: 372: else
 28275                           ;fat_access.c: 373: {
 28276                           ;fat_access.c: 375: fs->currentsector.address = fatfs_lba_of_cluster(fs, cluster)+sector
      +                          ;
 28277  00A1B2  C021  F002         	movff	fatfs_write_sector@fs+1,fatfs_lba_of_cluster@fs+1
 28278  00A1B6  C020  F001         	movff	fatfs_write_sector@fs,fatfs_lba_of_cluster@fs
 28279  00A1BA  C022  F003         	movff	fatfs_write_sector@cluster,fatfs_lba_of_cluster@Cluster_Number
 28280  00A1BE  C023  F004         	movff	fatfs_write_sector@cluster+1,fatfs_lba_of_cluster@Cluster_Number+1
 28281  00A1C2  C024  F005         	movff	fatfs_write_sector@cluster+2,fatfs_lba_of_cluster@Cluster_Number+2
 28282  00A1C6  C025  F006         	movff	fatfs_write_sector@cluster+3,fatfs_lba_of_cluster@Cluster_Number+3
 28283  00A1CA  EC4C  F03E         	call	_fatfs_lba_of_cluster	;wreg free
 28284  00A1CE  C001  F02C         	movff	?_fatfs_lba_of_cluster,??_fatfs_write_sector
 28285  00A1D2  C002  F02D         	movff	?_fatfs_lba_of_cluster+1,??_fatfs_write_sector+1
 28286  00A1D6  C003  F02E         	movff	?_fatfs_lba_of_cluster+2,??_fatfs_write_sector+2
 28287  00A1DA  C004  F02F         	movff	?_fatfs_lba_of_cluster+3,??_fatfs_write_sector+3
 28288  00A1DE  5026               	movf	fatfs_write_sector@sector,w,c
 28289  00A1E0  242C               	addwf	??_fatfs_write_sector,w,c
 28290  00A1E2  6E30               	movwf	(??_fatfs_write_sector+4)& (0+255),c
 28291  00A1E4  5027               	movf	fatfs_write_sector@sector+1,w,c
 28292  00A1E6  202D               	addwfc	??_fatfs_write_sector+1,w,c
 28293  00A1E8  6E31               	movwf	(??_fatfs_write_sector+5)& (0+255),c
 28294  00A1EA  5028               	movf	fatfs_write_sector@sector+2,w,c
 28295  00A1EC  202E               	addwfc	??_fatfs_write_sector+2,w,c
 28296  00A1EE  6E32               	movwf	(??_fatfs_write_sector+6)& (0+255),c
 28297  00A1F0  5029               	movf	fatfs_write_sector@sector+3,w,c
 28298  00A1F2  202F               	addwfc	??_fatfs_write_sector+3,w,c
 28299  00A1F4  6E33               	movwf	(??_fatfs_write_sector+7)& (0+255),c
 28300  00A1F6  EE22 F031          	lfsr	2,561
 28301  00A1FA  5020               	movf	fatfs_write_sector@fs,w,c
 28302  00A1FC  26D9               	addwf	fsr2l,f,c
 28303  00A1FE  5021               	movf	fatfs_write_sector@fs+1,w,c
 28304  00A200  22DA               	addwfc	fsr2h,f,c
 28305  00A202  C030  FFDE         	movff	??_fatfs_write_sector+4,postinc2
 28306  00A206  C031  FFDE         	movff	??_fatfs_write_sector+5,postinc2
 28307  00A20A  C032  FFDE         	movff	??_fatfs_write_sector+6,postinc2
 28308  00A20E  C033  FFDD         	movff	??_fatfs_write_sector+7,postdec2
 28309  00A212  06D9               	decf	fsr2l,f,c
 28310  00A214  06D9               	decf	fsr2l,f,c
 28311                           
 28312                           ;fat_access.c: 378: return fs->disk_io.write_media(fs->currentsector.address, fs->curren
      +                          tsector.sector, 1);
 28313  00A216  EE22 F031          	lfsr	2,561
 28314  00A21A  5020               	movf	fatfs_write_sector@fs,w,c
 28315  00A21C  26D9               	addwf	fsr2l,f,c
 28316  00A21E  5021               	movf	fatfs_write_sector@fs+1,w,c
 28317  00A220  22DA               	addwfc	fsr2h,f,c
 28318  00A222  CFDE F009          	movff	postinc2,media_write@sector
 28319  00A226  CFDE F00A          	movff	postinc2,media_write@sector+1
 28320  00A22A  CFDE F00B          	movff	postinc2,media_write@sector+2
 28321  00A22E  CFDE F00C          	movff	postinc2,media_write@sector+3
 28322  00A232  0E31               	movlw	49
 28323  00A234  2420               	addwf	fatfs_write_sector@fs,w,c
 28324  00A236  6E2C               	movwf	??_fatfs_write_sector& (0+255),c
 28325  00A238  0E00               	movlw	0
 28326  00A23A  2021               	addwfc	fatfs_write_sector@fs+1,w,c
 28327  00A23C  6E2D               	movwf	(??_fatfs_write_sector+1)& (0+255),c
 28328  00A23E  0E20               	movlw	32
 28329  00A240  6E0F               	movwf	media_write@buffer+2,c
 28330  00A242  C02D  F00E         	movff	??_fatfs_write_sector+1,media_write@buffer+1
 28331  00A246  C02C  F00D         	movff	??_fatfs_write_sector,media_write@buffer
 28332  00A24A  0E01               	movlw	1
 28333  00A24C  6E10               	movwf	media_write@sector_count,c
 28334  00A24E  6A11               	clrf	media_write@sector_count+1,c
 28335  00A250  6A12               	clrf	media_write@sector_count+2,c
 28336  00A252  6A13               	clrf	media_write@sector_count+3,c
 28337  00A254  EE20 F02B          	lfsr	2,43
 28338  00A258  5020               	movf	fatfs_write_sector@fs,w,c
 28339  00A25A  26D9               	addwf	fsr2l,f,c
 28340  00A25C  5021               	movf	fatfs_write_sector@fs+1,w,c
 28341  00A25E  22DA               	addwfc	fsr2h,f,c
 28342  00A260  CFDE F02E          	movff	postinc2,??_fatfs_write_sector+2
 28343  00A264  CFDD F02F          	movff	postdec2,??_fatfs_write_sector+3
 28344  00A268  D801               	call	u9858
 28345  00A26A  D009               	goto	u9859
 28346  00A26C                     u9858:
 28347  00A26C  0005               	push	
 28348  00A26E  6EFA               	movwf	pclath,c
 28349  00A270  502E               	movf	??_fatfs_write_sector+2,w,c
 28350  00A272  6EFD               	movwf	tosl,c
 28351  00A274  502F               	movf	??_fatfs_write_sector+3,w,c
 28352  00A276  6EFE               	movwf	tosh,c
 28353  00A278  6AFF               	clrf	tosu,c
 28354  00A27A  50FA               	movf	pclath,w,c
 28355  00A27C  0012               	return		;indir
 28356  00A27E                     u9859:
 28357  00A27E  C009  F020         	movff	?_media_write,?_fatfs_write_sector
 28358  00A282  C00A  F021         	movff	?_media_write+1,?_fatfs_write_sector+1
 28359  00A286                     l113:
 28360  00A286  0012               	return	
 28361  00A288                     __end_of_fatfs_write_sector:
 28362                           	opt stack 0
 28363                           tosu	equ	0xFFF
 28364                           tosh	equ	0xFFE
 28365                           tosl	equ	0xFFD
 28366                           pclath	equ	0xFFA
 28367                           tblptru	equ	0xFF8
 28368                           tblptrh	equ	0xFF7
 28369                           tblptrl	equ	0xFF6
 28370                           tablat	equ	0xFF5
 28371                           prodh	equ	0xFF4
 28372                           prodl	equ	0xFF3
 28373                           indf0	equ	0xFEF
 28374                           postinc0	equ	0xFEE
 28375                           fsr0h	equ	0xFEA
 28376                           fsr0l	equ	0xFE9
 28377                           wreg	equ	0xFE8
 28378                           indf1	equ	0xFE7
 28379                           postinc1	equ	0xFE6
 28380                           postdec1	equ	0xFE5
 28381                           fsr1h	equ	0xFE2
 28382                           fsr1l	equ	0xFE1
 28383                           indf2	equ	0xFDF
 28384                           postinc2	equ	0xFDE
 28385                           postdec2	equ	0xFDD
 28386                           fsr2h	equ	0xFDA
 28387                           fsr2l	equ	0xFD9
 28388                           status	equ	0xFD8
 28389                           
 28390 ;; *************** function _fatfs_find_blank_cluster *****************
 28391 ;; Defined at:
 28392 ;;		line 288 in file "fat_table.c"
 28393 ;; Parameters:    Size  Location     Type
 28394 ;;  fs              2   69[COMRAM] PTR struct fatfs
 28395 ;;		 -> _fs(1095), 
 28396 ;;  start_cluste    4   71[COMRAM] unsigned long 
 28397 ;;  free_cluster    2   75[COMRAM] PTR unsigned long 
 28398 ;;		 -> fatfs_find_free_dir_offset@newCluster(4), fatfs_allocate_free_space@nextcluster(4), fatfs_add_free_space@nextclu
      +ster(4), 
 28399 ;; Auto vars:     Size  Location     Type
 28400 ;;  position        4   12[BANK0 ] unsigned long 
 28401 ;;  current_clus    4    8[BANK0 ] unsigned long 
 28402 ;;  fat_sector_o    4    4[BANK0 ] unsigned long 
 28403 ;;  nextcluster     4    0[BANK0 ] unsigned long 
 28404 ;;  pbuf            2   16[BANK0 ] PTR struct fat_buffer
 28405 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 28406 ;;		 -> NULL(0), 
 28407 ;; Return value:  Size  Location     Type
 28408 ;;                  2   69[COMRAM] int 
 28409 ;; Registers used:
 28410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 28411 ;; Tracked objects:
 28412 ;;		On entry : 0/0
 28413 ;;		On exit  : 0/0
 28414 ;;		Unchanged: 0/0
 28415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28416 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28417 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28418 ;;      Temps:         38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28419 ;;      Totals:        46      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28420 ;;Total ram usage:       64 bytes
 28421 ;; Hardware stack levels used:    1
 28422 ;; Hardware stack levels required when called:    5
 28423 ;; This function calls:
 28424 ;;		_fatfs_fat_read_sector
 28425 ;; This function is called by:
 28426 ;;		_fatfs_add_free_space
 28427 ;;		_fatfs_allocate_free_space
 28428 ;;		_fatfs_find_free_dir_offset
 28429 ;; This function uses a non-reentrant model
 28430 ;;
 28431                           
 28432                           	psect	text81
 28433  00B44A                     __ptext81:
 28434                           	opt stack 0
 28435  00B44A                     _fatfs_find_blank_cluster:
 28436                           	opt stack 20
 28437                           
 28438                           ;fat_table.c: 290: uint32 fat_sector_offset, position;
 28439                           ;fat_table.c: 291: uint32 nextcluster;
 28440                           ;fat_table.c: 292: uint32 current_cluster = start_cluster;
 28441                           
 28442                           ;incstack = 0
 28443  00B44A  C048  F088         	movff	fatfs_find_blank_cluster@start_cluster,fatfs_find_blank_cluster@current_cluster
 28444  00B44E  C049  F089         	movff	fatfs_find_blank_cluster@start_cluster+1,fatfs_find_blank_cluster@current_cluster
      +                          +1
 28445  00B452  C04A  F08A         	movff	fatfs_find_blank_cluster@start_cluster+2,fatfs_find_blank_cluster@current_cluster
      +                          +2
 28446  00B456  C04B  F08B         	movff	fatfs_find_blank_cluster@start_cluster+3,fatfs_find_blank_cluster@current_cluster
      +                          +3
 28447  00B45A                     l9514:
 28448                           
 28449                           ;fat_table.c: 296: {
 28450                           ;fat_table.c: 298: if (fs->fat_type == FAT_TYPE_16)
 28451  00B45A  EE20 F028          	lfsr	2,40
 28452  00B45E  5046               	movf	fatfs_find_blank_cluster@fs,w,c
 28453  00B460  26D9               	addwf	fsr2l,f,c
 28454  00B462  5047               	movf	fatfs_find_blank_cluster@fs+1,w,c
 28455  00B464  22DA               	addwfc	fsr2h,f,c
 28456  00B466  50DF               	movf	indf2,w,c
 28457  00B468  E110               	bnz	l9518
 28458                           
 28459                           ;fat_table.c: 299: fat_sector_offset = current_cluster / 256;
 28460  00B46A  C088  F04E         	movff	fatfs_find_blank_cluster@current_cluster,??_fatfs_find_blank_cluster
 28461  00B46E  C089  F04F         	movff	fatfs_find_blank_cluster@current_cluster+1,??_fatfs_find_blank_cluster+1
 28462  00B472  C08A  F050         	movff	fatfs_find_blank_cluster@current_cluster+2,??_fatfs_find_blank_cluster+2
 28463  00B476  C08B  F051         	movff	fatfs_find_blank_cluster@current_cluster+3,??_fatfs_find_blank_cluster+3
 28464  00B47A  C04F  F04E         	movff	??_fatfs_find_blank_cluster+1,??_fatfs_find_blank_cluster
 28465  00B47E  C050  F04F         	movff	??_fatfs_find_blank_cluster+2,??_fatfs_find_blank_cluster+1
 28466  00B482  C051  F050         	movff	??_fatfs_find_blank_cluster+3,??_fatfs_find_blank_cluster+2
 28467  00B486  6A51               	clrf	??_fatfs_find_blank_cluster+3,c
 28468  00B488  D011               	goto	L93
 28469  00B48A                     l9518:
 28470                           
 28471                           ;fat_table.c: 300: else
 28472                           ;fat_table.c: 301: fat_sector_offset = current_cluster / 128;
 28473  00B48A  C088  F04E         	movff	fatfs_find_blank_cluster@current_cluster,??_fatfs_find_blank_cluster
 28474  00B48E  C089  F04F         	movff	fatfs_find_blank_cluster@current_cluster+1,??_fatfs_find_blank_cluster+1
 28475  00B492  C08A  F050         	movff	fatfs_find_blank_cluster@current_cluster+2,??_fatfs_find_blank_cluster+2
 28476  00B496  C08B  F051         	movff	fatfs_find_blank_cluster@current_cluster+3,??_fatfs_find_blank_cluster+3
 28477  00B49A  0E08               	movlw	8
 28478  00B49C  D005               	goto	u10390
 28479  00B49E                     u10395:
 28480  00B49E  90D8               	bcf	status,0,c
 28481  00B4A0  3251               	rrcf	??_fatfs_find_blank_cluster+3,f,c
 28482  00B4A2  3250               	rrcf	??_fatfs_find_blank_cluster+2,f,c
 28483  00B4A4  324F               	rrcf	??_fatfs_find_blank_cluster+1,f,c
 28484  00B4A6  324E               	rrcf	??_fatfs_find_blank_cluster,f,c
 28485  00B4A8                     u10390:
 28486  00B4A8  2EE8               	decfsz	wreg,f,c
 28487  00B4AA  D7F9               	goto	u10395
 28488  00B4AC                     L93:
 28489  00B4AC  C04E  F084         	movff	??_fatfs_find_blank_cluster,fatfs_find_blank_cluster@fat_sector_offset
 28490  00B4B0  C04F  F085         	movff	??_fatfs_find_blank_cluster+1,fatfs_find_blank_cluster@fat_sector_offset+1
 28491  00B4B4  C050  F086         	movff	??_fatfs_find_blank_cluster+2,fatfs_find_blank_cluster@fat_sector_offset+2
 28492  00B4B8  C051  F087         	movff	??_fatfs_find_blank_cluster+3,fatfs_find_blank_cluster@fat_sector_offset+3
 28493                           
 28494                           ; BSR set to: 0
 28495                           ;fat_table.c: 303: if ( fat_sector_offset < fs->fat_sectors)
 28496                           
 28497                           ; BSR set to: 0
 28498  00B4BC  EE20 F01B          	lfsr	2,27
 28499  00B4C0  5046               	movf	fatfs_find_blank_cluster@fs,w,c
 28500  00B4C2  26D9               	addwf	fsr2l,f,c
 28501  00B4C4  5047               	movf	fatfs_find_blank_cluster@fs+1,w,c
 28502  00B4C6  22DA               	addwfc	fsr2h,f,c
 28503  00B4C8  CFDE F04E          	movff	postinc2,??_fatfs_find_blank_cluster
 28504  00B4CC  CFDE F04F          	movff	postinc2,??_fatfs_find_blank_cluster+1
 28505  00B4D0  CFDE F050          	movff	postinc2,??_fatfs_find_blank_cluster+2
 28506  00B4D4  CFDE F051          	movff	postinc2,??_fatfs_find_blank_cluster+3
 28507  00B4D8  504E               	movf	??_fatfs_find_blank_cluster,w,c
 28508  00B4DA  0100               	movlb	0	; () banked
 28509  00B4DC  5D84               	subwf	fatfs_find_blank_cluster@fat_sector_offset& (0+255),w,b
 28510  00B4DE  504F               	movf	??_fatfs_find_blank_cluster+1,w,c
 28511  00B4E0  5985               	subwfb	(fatfs_find_blank_cluster@fat_sector_offset+1)& (0+255),w,b
 28512  00B4E2  5050               	movf	??_fatfs_find_blank_cluster+2,w,c
 28513  00B4E4  5986               	subwfb	(fatfs_find_blank_cluster@fat_sector_offset+2)& (0+255),w,b
 28514  00B4E6  5051               	movf	??_fatfs_find_blank_cluster+3,w,c
 28515  00B4E8  5987               	subwfb	(fatfs_find_blank_cluster@fat_sector_offset+3)& (0+255),w,b
 28516  00B4EA  E301 D174          	bc	l9546
 28517                           
 28518                           ; BSR set to: 0
 28519                           ;fat_table.c: 304: {
 28520                           ;fat_table.c: 306: pbuf = fatfs_fat_read_sector(fs, fs->fat_begin_lba+fat_sector_offset)
      +                          ;
 28521  00B4EE  C047  F035         	movff	fatfs_find_blank_cluster@fs+1,fatfs_fat_read_sector@fs+1
 28522  00B4F2  C046  F034         	movff	fatfs_find_blank_cluster@fs,fatfs_fat_read_sector@fs
 28523  00B4F6  EE20 F011          	lfsr	2,17
 28524  00B4FA  5046               	movf	fatfs_find_blank_cluster@fs,w,c
 28525  00B4FC  26D9               	addwf	fsr2l,f,c
 28526  00B4FE  5047               	movf	fatfs_find_blank_cluster@fs+1,w,c
 28527  00B500  22DA               	addwfc	fsr2h,f,c
 28528  00B502  CFDE F04E          	movff	postinc2,??_fatfs_find_blank_cluster
 28529  00B506  CFDE F04F          	movff	postinc2,??_fatfs_find_blank_cluster+1
 28530  00B50A  CFDE F050          	movff	postinc2,??_fatfs_find_blank_cluster+2
 28531  00B50E  CFDE F051          	movff	postinc2,??_fatfs_find_blank_cluster+3
 28532  00B512  5184               	movf	fatfs_find_blank_cluster@fat_sector_offset& (0+255),w,b
 28533  00B514  244E               	addwf	??_fatfs_find_blank_cluster,w,c
 28534  00B516  6E36               	movwf	fatfs_fat_read_sector@sector,c
 28535  00B518  5185               	movf	(fatfs_find_blank_cluster@fat_sector_offset+1)& (0+255),w,b
 28536  00B51A  204F               	addwfc	??_fatfs_find_blank_cluster+1,w,c
 28537  00B51C  6E37               	movwf	fatfs_fat_read_sector@sector+1,c
 28538  00B51E  5186               	movf	(fatfs_find_blank_cluster@fat_sector_offset+2)& (0+255),w,b
 28539  00B520  2050               	addwfc	??_fatfs_find_blank_cluster+2,w,c
 28540  00B522  6E38               	movwf	fatfs_fat_read_sector@sector+2,c
 28541  00B524  5187               	movf	(fatfs_find_blank_cluster@fat_sector_offset+3)& (0+255),w,b
 28542  00B526  2051               	addwfc	??_fatfs_find_blank_cluster+3,w,c
 28543  00B528  6E39               	movwf	fatfs_fat_read_sector@sector+3,c
 28544  00B52A  EC81  F043         	call	_fatfs_fat_read_sector	;wreg free
 28545  00B52E  C034  F090         	movff	?_fatfs_fat_read_sector,fatfs_find_blank_cluster@pbuf
 28546  00B532  C035  F091         	movff	?_fatfs_fat_read_sector+1,fatfs_find_blank_cluster@pbuf+1
 28547                           
 28548                           ;fat_table.c: 307: if (!pbuf)
 28549  00B536  0100               	movlb	0	; () banked
 28550  00B538  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28551  00B53A  1190               	iorwf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28552  00B53C  E101 D14B          	bz	l9546
 28553                           
 28554                           ; BSR set to: 0
 28555                           ;fat_table.c: 310: if (fs->fat_type == FAT_TYPE_16)
 28556                           
 28557                           ; BSR set to: 0
 28558                           
 28559                           ; BSR set to: 0
 28560                           
 28561                           ; BSR set to: 0
 28562                           ;fat_table.c: 308: return 0;
 28563  00B540  EE20 F028          	lfsr	2,40
 28564  00B544  5046               	movf	fatfs_find_blank_cluster@fs,w,c
 28565  00B546  26D9               	addwf	fsr2l,f,c
 28566  00B548  5047               	movf	fatfs_find_blank_cluster@fs+1,w,c
 28567  00B54A  22DA               	addwfc	fsr2h,f,c
 28568  00B54C  50DF               	movf	indf2,w,c
 28569  00B54E  E15C               	bnz	l9536
 28570                           
 28571                           ; BSR set to: 0
 28572                           ;fat_table.c: 311: {
 28573                           ;fat_table.c: 313: position = (current_cluster - (fat_sector_offset * 256)) * 2;
 28574  00B550  C084  F04F         	movff	fatfs_find_blank_cluster@fat_sector_offset,??_fatfs_find_blank_cluster+1
 28575  00B554  C085  F050         	movff	fatfs_find_blank_cluster@fat_sector_offset+1,??_fatfs_find_blank_cluster+2
 28576  00B558  C086  F051         	movff	fatfs_find_blank_cluster@fat_sector_offset+2,??_fatfs_find_blank_cluster+3
 28577  00B55C  6A4E               	clrf	??_fatfs_find_blank_cluster& (0+255),c
 28578  00B55E  1E4E               	comf	??_fatfs_find_blank_cluster,f,c
 28579  00B560  1E4F               	comf	??_fatfs_find_blank_cluster+1,f,c
 28580  00B562  1E50               	comf	??_fatfs_find_blank_cluster+2,f,c
 28581  00B564  1E51               	comf	??_fatfs_find_blank_cluster+3,f,c
 28582  00B566  2A4E               	incf	??_fatfs_find_blank_cluster,f,c
 28583  00B568  0E00               	movlw	0
 28584  00B56A  224F               	addwfc	??_fatfs_find_blank_cluster+1,f,c
 28585  00B56C  2250               	addwfc	??_fatfs_find_blank_cluster+2,f,c
 28586  00B56E  2251               	addwfc	??_fatfs_find_blank_cluster+3,f,c
 28587  00B570  5188               	movf	fatfs_find_blank_cluster@current_cluster& (0+255),w,b
 28588  00B572  244E               	addwf	??_fatfs_find_blank_cluster,w,c
 28589  00B574  6E52               	movwf	(??_fatfs_find_blank_cluster+4)& (0+255),c
 28590  00B576  5189               	movf	(fatfs_find_blank_cluster@current_cluster+1)& (0+255),w,b
 28591  00B578  204F               	addwfc	??_fatfs_find_blank_cluster+1,w,c
 28592  00B57A  6E53               	movwf	(??_fatfs_find_blank_cluster+5)& (0+255),c
 28593  00B57C  518A               	movf	(fatfs_find_blank_cluster@current_cluster+2)& (0+255),w,b
 28594  00B57E  2050               	addwfc	??_fatfs_find_blank_cluster+2,w,c
 28595  00B580  6E54               	movwf	(??_fatfs_find_blank_cluster+6)& (0+255),c
 28596  00B582  518B               	movf	(fatfs_find_blank_cluster@current_cluster+3)& (0+255),w,b
 28597  00B584  2051               	addwfc	??_fatfs_find_blank_cluster+3,w,c
 28598  00B586  6E55               	movwf	(??_fatfs_find_blank_cluster+7)& (0+255),c
 28599  00B588  90D8               	bcf	status,0,c
 28600  00B58A  3452               	rlcf	??_fatfs_find_blank_cluster+4,w,c
 28601  00B58C  6F8C               	movwf	fatfs_find_blank_cluster@position& (0+255),b
 28602  00B58E  3453               	rlcf	??_fatfs_find_blank_cluster+5,w,c
 28603  00B590  6F8D               	movwf	(fatfs_find_blank_cluster@position+1)& (0+255),b
 28604  00B592  3454               	rlcf	??_fatfs_find_blank_cluster+6,w,c
 28605  00B594  6F8E               	movwf	(fatfs_find_blank_cluster@position+2)& (0+255),b
 28606  00B596  3455               	rlcf	??_fatfs_find_blank_cluster+7,w,c
 28607  00B598  6F8F               	movwf	(fatfs_find_blank_cluster@position+3)& (0+255),b
 28608                           
 28609                           ; BSR set to: 0
 28610                           ;fat_table.c: 316: nextcluster = ( ( ((uint16)pbuf->ptr[(uint16)position+1]<<8) + (uint1
      +                          6)pbuf->ptr[(uint16)position+0] ) );
 28611  00B59A  298C               	incf	fatfs_find_blank_cluster@position& (0+255),w,b
 28612  00B59C  6E4E               	movwf	??_fatfs_find_blank_cluster& (0+255),c
 28613  00B59E  0E00               	movlw	0
 28614  00B5A0  218D               	addwfc	(fatfs_find_blank_cluster@position+1)& (0+255),w,b
 28615  00B5A2  6E4F               	movwf	(??_fatfs_find_blank_cluster+1)& (0+255),c
 28616  00B5A4  EE22 F006          	lfsr	2,518
 28617  00B5A8  5190               	movf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28618  00B5AA  26D9               	addwf	fsr2l,f,c
 28619  00B5AC  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28620  00B5AE  22DA               	addwfc	fsr2h,f,c
 28621  00B5B0  CFDE F050          	movff	postinc2,??_fatfs_find_blank_cluster+2
 28622  00B5B4  CFDD F051          	movff	postdec2,??_fatfs_find_blank_cluster+3
 28623  00B5B8  504E               	movf	??_fatfs_find_blank_cluster,w,c
 28624  00B5BA  2450               	addwf	??_fatfs_find_blank_cluster+2,w,c
 28625  00B5BC  6ED9               	movwf	fsr2l,c
 28626  00B5BE  504F               	movf	??_fatfs_find_blank_cluster+1,w,c
 28627  00B5C0  2051               	addwfc	??_fatfs_find_blank_cluster+3,w,c
 28628  00B5C2  6EDA               	movwf	fsr2h,c
 28629  00B5C4  50DF               	movf	indf2,w,c
 28630  00B5C6  6E52               	movwf	(??_fatfs_find_blank_cluster+4)& (0+255),c
 28631  00B5C8  5052               	movf	??_fatfs_find_blank_cluster+4,w,c
 28632  00B5CA  6E54               	movwf	(??_fatfs_find_blank_cluster+6)& (0+255),c
 28633  00B5CC  6A53               	clrf	(??_fatfs_find_blank_cluster+5)& (0+255),c
 28634  00B5CE  EE22 F006          	lfsr	2,518
 28635  00B5D2  5190               	movf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28636  00B5D4  26D9               	addwf	fsr2l,f,c
 28637  00B5D6  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28638  00B5D8  22DA               	addwfc	fsr2h,f,c
 28639  00B5DA  CFDE F055          	movff	postinc2,??_fatfs_find_blank_cluster+7
 28640  00B5DE  CFDD F056          	movff	postdec2,??_fatfs_find_blank_cluster+8
 28641  00B5E2  518C               	movf	fatfs_find_blank_cluster@position& (0+255),w,b
 28642  00B5E4  2455               	addwf	??_fatfs_find_blank_cluster+7,w,c
 28643  00B5E6  6ED9               	movwf	fsr2l,c
 28644  00B5E8  518D               	movf	(fatfs_find_blank_cluster@position+1)& (0+255),w,b
 28645  00B5EA  2056               	addwfc	??_fatfs_find_blank_cluster+8,w,c
 28646  00B5EC  6EDA               	movwf	fsr2h,c
 28647  00B5EE  50DF               	movf	indf2,w,c
 28648  00B5F0  6E57               	movwf	(??_fatfs_find_blank_cluster+9)& (0+255),c
 28649  00B5F2  5057               	movf	??_fatfs_find_blank_cluster+9,w,c
 28650  00B5F4  2653               	addwf	??_fatfs_find_blank_cluster+5,f,c
 28651  00B5F6  0E00               	movlw	0
 28652  00B5F8  2254               	addwfc	??_fatfs_find_blank_cluster+6,f,c
 28653  00B5FA  C053  F080         	movff	??_fatfs_find_blank_cluster+5,fatfs_find_blank_cluster@nextcluster
 28654  00B5FE  C054  F081         	movff	??_fatfs_find_blank_cluster+6,fatfs_find_blank_cluster@nextcluster+1
 28655  00B602  6B82               	clrf	(fatfs_find_blank_cluster@nextcluster+2)& (0+255),b
 28656  00B604  6B83               	clrf	(fatfs_find_blank_cluster@nextcluster+3)& (0+255),b
 28657                           
 28658                           ;fat_table.c: 317: }
 28659  00B606  D0DB               	goto	l9542
 28660  00B608                     l9536:
 28661                           
 28662                           ; BSR set to: 0
 28663                           ;fat_table.c: 318: else
 28664                           ;fat_table.c: 319: {
 28665                           ;fat_table.c: 321: position = (current_cluster - (fat_sector_offset * 128)) * 4;
 28666  00B608  C084  F04E         	movff	fatfs_find_blank_cluster@fat_sector_offset,??_fatfs_find_blank_cluster
 28667  00B60C  C085  F04F         	movff	fatfs_find_blank_cluster@fat_sector_offset+1,??_fatfs_find_blank_cluster+1
 28668  00B610  C086  F050         	movff	fatfs_find_blank_cluster@fat_sector_offset+2,??_fatfs_find_blank_cluster+2
 28669  00B614  C087  F051         	movff	fatfs_find_blank_cluster@fat_sector_offset+3,??_fatfs_find_blank_cluster+3
 28670  00B618  0E07               	movlw	7
 28671  00B61A                     u10435:
 28672  00B61A  90D8               	bcf	status,0,c
 28673  00B61C  364E               	rlcf	??_fatfs_find_blank_cluster,f,c
 28674  00B61E  364F               	rlcf	??_fatfs_find_blank_cluster+1,f,c
 28675  00B620  3650               	rlcf	??_fatfs_find_blank_cluster+2,f,c
 28676  00B622  3651               	rlcf	??_fatfs_find_blank_cluster+3,f,c
 28677  00B624  2EE8               	decfsz	wreg,f,c
 28678  00B626  D7F9               	goto	u10435
 28679  00B628  1E4E               	comf	??_fatfs_find_blank_cluster,f,c
 28680  00B62A  1E4F               	comf	??_fatfs_find_blank_cluster+1,f,c
 28681  00B62C  1E50               	comf	??_fatfs_find_blank_cluster+2,f,c
 28682  00B62E  1E51               	comf	??_fatfs_find_blank_cluster+3,f,c
 28683  00B630  2A4E               	incf	??_fatfs_find_blank_cluster,f,c
 28684  00B632  0E00               	movlw	0
 28685  00B634  224F               	addwfc	??_fatfs_find_blank_cluster+1,f,c
 28686  00B636  2250               	addwfc	??_fatfs_find_blank_cluster+2,f,c
 28687  00B638  2251               	addwfc	??_fatfs_find_blank_cluster+3,f,c
 28688  00B63A  0100               	movlb	0	; () banked
 28689  00B63C  5188               	movf	fatfs_find_blank_cluster@current_cluster& (0+255),w,b
 28690  00B63E  244E               	addwf	??_fatfs_find_blank_cluster,w,c
 28691  00B640  6E52               	movwf	(??_fatfs_find_blank_cluster+4)& (0+255),c
 28692  00B642  5189               	movf	(fatfs_find_blank_cluster@current_cluster+1)& (0+255),w,b
 28693  00B644  204F               	addwfc	??_fatfs_find_blank_cluster+1,w,c
 28694  00B646  6E53               	movwf	(??_fatfs_find_blank_cluster+5)& (0+255),c
 28695  00B648  518A               	movf	(fatfs_find_blank_cluster@current_cluster+2)& (0+255),w,b
 28696  00B64A  2050               	addwfc	??_fatfs_find_blank_cluster+2,w,c
 28697  00B64C  6E54               	movwf	(??_fatfs_find_blank_cluster+6)& (0+255),c
 28698  00B64E  518B               	movf	(fatfs_find_blank_cluster@current_cluster+3)& (0+255),w,b
 28699  00B650  2051               	addwfc	??_fatfs_find_blank_cluster+3,w,c
 28700  00B652  6E55               	movwf	(??_fatfs_find_blank_cluster+7)& (0+255),c
 28701  00B654  0E02               	movlw	2
 28702  00B656                     u10445:
 28703  00B656  90D8               	bcf	status,0,c
 28704  00B658  3652               	rlcf	??_fatfs_find_blank_cluster+4,f,c
 28705  00B65A  3653               	rlcf	??_fatfs_find_blank_cluster+5,f,c
 28706  00B65C  3654               	rlcf	??_fatfs_find_blank_cluster+6,f,c
 28707  00B65E  3655               	rlcf	??_fatfs_find_blank_cluster+7,f,c
 28708  00B660  2EE8               	decfsz	wreg,f,c
 28709  00B662  D7F9               	goto	u10445
 28710  00B664  C052  F08C         	movff	??_fatfs_find_blank_cluster+4,fatfs_find_blank_cluster@position
 28711  00B668  C053  F08D         	movff	??_fatfs_find_blank_cluster+5,fatfs_find_blank_cluster@position+1
 28712  00B66C  C054  F08E         	movff	??_fatfs_find_blank_cluster+6,fatfs_find_blank_cluster@position+2
 28713  00B670  C055  F08F         	movff	??_fatfs_find_blank_cluster+7,fatfs_find_blank_cluster@position+3
 28714                           
 28715                           ; BSR set to: 0
 28716                           ;fat_table.c: 324: nextcluster = ( ( ((uint32)pbuf->ptr[(uint16)position+3]<<24) + ((uin
      +                          t32)pbuf->ptr[(uint16)position+2]<<16) + ((uint32)pbuf->ptr[(uint16)position+1]<<8) + (u
      +                          int32)pbuf->ptr[(uint16)position+0] ) );
 28717  00B674  0E01               	movlw	1
 28718  00B676  0100               	movlb	0	; () banked
 28719  00B678  258C               	addwf	fatfs_find_blank_cluster@position& (0+255),w,b
 28720  00B67A  6E4E               	movwf	??_fatfs_find_blank_cluster& (0+255),c
 28721  00B67C  0E00               	movlw	0
 28722  00B67E  218D               	addwfc	(fatfs_find_blank_cluster@position+1)& (0+255),w,b
 28723  00B680  6E4F               	movwf	(??_fatfs_find_blank_cluster+1)& (0+255),c
 28724  00B682  EE22 F006          	lfsr	2,518
 28725  00B686  5190               	movf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28726  00B688  26D9               	addwf	fsr2l,f,c
 28727  00B68A  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28728  00B68C  22DA               	addwfc	fsr2h,f,c
 28729  00B68E  CFDE F050          	movff	postinc2,??_fatfs_find_blank_cluster+2
 28730  00B692  CFDD F051          	movff	postdec2,??_fatfs_find_blank_cluster+3
 28731  00B696  504E               	movf	??_fatfs_find_blank_cluster,w,c
 28732  00B698  2450               	addwf	??_fatfs_find_blank_cluster+2,w,c
 28733  00B69A  6ED9               	movwf	fsr2l,c
 28734  00B69C  504F               	movf	??_fatfs_find_blank_cluster+1,w,c
 28735  00B69E  2051               	addwfc	??_fatfs_find_blank_cluster+3,w,c
 28736  00B6A0  6EDA               	movwf	fsr2h,c
 28737  00B6A2  50DF               	movf	indf2,w,c
 28738  00B6A4  6E52               	movwf	(??_fatfs_find_blank_cluster+4)& (0+255),c
 28739  00B6A6  C052  F053         	movff	??_fatfs_find_blank_cluster+4,??_fatfs_find_blank_cluster+5
 28740  00B6AA  6A54               	clrf	(??_fatfs_find_blank_cluster+6)& (0+255),c
 28741  00B6AC  6A55               	clrf	(??_fatfs_find_blank_cluster+7)& (0+255),c
 28742  00B6AE  6A56               	clrf	(??_fatfs_find_blank_cluster+8)& (0+255),c
 28743  00B6B0  C055  F056         	movff	??_fatfs_find_blank_cluster+7,??_fatfs_find_blank_cluster+8
 28744  00B6B4  C054  F055         	movff	??_fatfs_find_blank_cluster+6,??_fatfs_find_blank_cluster+7
 28745  00B6B8  C053  F054         	movff	??_fatfs_find_blank_cluster+5,??_fatfs_find_blank_cluster+6
 28746  00B6BC  6A53               	clrf	??_fatfs_find_blank_cluster+5,c
 28747  00B6BE  0E02               	movlw	2
 28748  00B6C0  258C               	addwf	fatfs_find_blank_cluster@position& (0+255),w,b
 28749  00B6C2  6E57               	movwf	(??_fatfs_find_blank_cluster+9)& (0+255),c
 28750  00B6C4  0E00               	movlw	0
 28751  00B6C6  218D               	addwfc	(fatfs_find_blank_cluster@position+1)& (0+255),w,b
 28752  00B6C8  6E58               	movwf	(??_fatfs_find_blank_cluster+10)& (0+255),c
 28753  00B6CA  EE22 F006          	lfsr	2,518
 28754  00B6CE  5190               	movf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28755  00B6D0  26D9               	addwf	fsr2l,f,c
 28756  00B6D2  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28757  00B6D4  22DA               	addwfc	fsr2h,f,c
 28758  00B6D6  CFDE F059          	movff	postinc2,??_fatfs_find_blank_cluster+11
 28759  00B6DA  CFDD F05A          	movff	postdec2,??_fatfs_find_blank_cluster+12
 28760  00B6DE  5057               	movf	??_fatfs_find_blank_cluster+9,w,c
 28761  00B6E0  2459               	addwf	??_fatfs_find_blank_cluster+11,w,c
 28762  00B6E2  6ED9               	movwf	fsr2l,c
 28763  00B6E4  5058               	movf	??_fatfs_find_blank_cluster+10,w,c
 28764  00B6E6  205A               	addwfc	??_fatfs_find_blank_cluster+12,w,c
 28765  00B6E8  6EDA               	movwf	fsr2h,c
 28766  00B6EA  50DF               	movf	indf2,w,c
 28767  00B6EC  6E5B               	movwf	(??_fatfs_find_blank_cluster+13)& (0+255),c
 28768  00B6EE  C05B  F05C         	movff	??_fatfs_find_blank_cluster+13,??_fatfs_find_blank_cluster+14
 28769  00B6F2  6A5D               	clrf	(??_fatfs_find_blank_cluster+15)& (0+255),c
 28770  00B6F4  6A5E               	clrf	(??_fatfs_find_blank_cluster+16)& (0+255),c
 28771  00B6F6  6A5F               	clrf	(??_fatfs_find_blank_cluster+17)& (0+255),c
 28772  00B6F8  C05D  F05F         	movff	??_fatfs_find_blank_cluster+15,??_fatfs_find_blank_cluster+17
 28773  00B6FC  C05C  F05E         	movff	??_fatfs_find_blank_cluster+14,??_fatfs_find_blank_cluster+16
 28774  00B700  6A5D               	clrf	??_fatfs_find_blank_cluster+15,c
 28775  00B702  6A5C               	clrf	??_fatfs_find_blank_cluster+14,c
 28776  00B704  0E03               	movlw	3
 28777  00B706  258C               	addwf	fatfs_find_blank_cluster@position& (0+255),w,b
 28778  00B708  6E60               	movwf	(??_fatfs_find_blank_cluster+18)& (0+255),c
 28779  00B70A  0E00               	movlw	0
 28780  00B70C  218D               	addwfc	(fatfs_find_blank_cluster@position+1)& (0+255),w,b
 28781  00B70E  6E61               	movwf	(??_fatfs_find_blank_cluster+19)& (0+255),c
 28782  00B710  EE22 F006          	lfsr	2,518
 28783  00B714  5190               	movf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28784  00B716  26D9               	addwf	fsr2l,f,c
 28785  00B718  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28786  00B71A  22DA               	addwfc	fsr2h,f,c
 28787  00B71C  CFDE F062          	movff	postinc2,??_fatfs_find_blank_cluster+20
 28788  00B720  CFDD F063          	movff	postdec2,??_fatfs_find_blank_cluster+21
 28789  00B724  5060               	movf	??_fatfs_find_blank_cluster+18,w,c
 28790  00B726  2462               	addwf	??_fatfs_find_blank_cluster+20,w,c
 28791  00B728  6ED9               	movwf	fsr2l,c
 28792  00B72A  5061               	movf	??_fatfs_find_blank_cluster+19,w,c
 28793  00B72C  2063               	addwfc	??_fatfs_find_blank_cluster+21,w,c
 28794  00B72E  6EDA               	movwf	fsr2h,c
 28795  00B730  50DF               	movf	indf2,w,c
 28796  00B732  6E64               	movwf	(??_fatfs_find_blank_cluster+22)& (0+255),c
 28797  00B734  C064  F065         	movff	??_fatfs_find_blank_cluster+22,??_fatfs_find_blank_cluster+23
 28798  00B738  6A66               	clrf	(??_fatfs_find_blank_cluster+24)& (0+255),c
 28799  00B73A  6A67               	clrf	(??_fatfs_find_blank_cluster+25)& (0+255),c
 28800  00B73C  6A68               	clrf	(??_fatfs_find_blank_cluster+26)& (0+255),c
 28801  00B73E  C065  F068         	movff	??_fatfs_find_blank_cluster+23,??_fatfs_find_blank_cluster+26
 28802  00B742  6A67               	clrf	??_fatfs_find_blank_cluster+25,c
 28803  00B744  6A66               	clrf	??_fatfs_find_blank_cluster+24,c
 28804  00B746  6A65               	clrf	??_fatfs_find_blank_cluster+23,c
 28805  00B748  505C               	movf	??_fatfs_find_blank_cluster+14,w,c
 28806  00B74A  2465               	addwf	??_fatfs_find_blank_cluster+23,w,c
 28807  00B74C  6E69               	movwf	(??_fatfs_find_blank_cluster+27)& (0+255),c
 28808  00B74E  505D               	movf	??_fatfs_find_blank_cluster+15,w,c
 28809  00B750  2066               	addwfc	??_fatfs_find_blank_cluster+24,w,c
 28810  00B752  6E6A               	movwf	(??_fatfs_find_blank_cluster+28)& (0+255),c
 28811  00B754  505E               	movf	??_fatfs_find_blank_cluster+16,w,c
 28812  00B756  2067               	addwfc	??_fatfs_find_blank_cluster+25,w,c
 28813  00B758  6E6B               	movwf	(??_fatfs_find_blank_cluster+29)& (0+255),c
 28814  00B75A  505F               	movf	??_fatfs_find_blank_cluster+17,w,c
 28815  00B75C  2068               	addwfc	??_fatfs_find_blank_cluster+26,w,c
 28816  00B75E  6E6C               	movwf	(??_fatfs_find_blank_cluster+30)& (0+255),c
 28817  00B760  5053               	movf	??_fatfs_find_blank_cluster+5,w,c
 28818  00B762  2469               	addwf	??_fatfs_find_blank_cluster+27,w,c
 28819  00B764  6E6D               	movwf	(??_fatfs_find_blank_cluster+31)& (0+255),c
 28820  00B766  5054               	movf	??_fatfs_find_blank_cluster+6,w,c
 28821  00B768  206A               	addwfc	??_fatfs_find_blank_cluster+28,w,c
 28822  00B76A  6E6E               	movwf	(??_fatfs_find_blank_cluster+32)& (0+255),c
 28823  00B76C  5055               	movf	??_fatfs_find_blank_cluster+7,w,c
 28824  00B76E  206B               	addwfc	??_fatfs_find_blank_cluster+29,w,c
 28825  00B770  6E6F               	movwf	(??_fatfs_find_blank_cluster+33)& (0+255),c
 28826  00B772  5056               	movf	??_fatfs_find_blank_cluster+8,w,c
 28827  00B774  206C               	addwfc	??_fatfs_find_blank_cluster+30,w,c
 28828  00B776  6E70               	movwf	(??_fatfs_find_blank_cluster+34)& (0+255),c
 28829  00B778  EE22 F006          	lfsr	2,518
 28830  00B77C  5190               	movf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28831  00B77E  26D9               	addwf	fsr2l,f,c
 28832  00B780  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28833  00B782  22DA               	addwfc	fsr2h,f,c
 28834  00B784  CFDE F071          	movff	postinc2,??_fatfs_find_blank_cluster+35
 28835  00B788  CFDD F072          	movff	postdec2,??_fatfs_find_blank_cluster+36
 28836  00B78C  518C               	movf	fatfs_find_blank_cluster@position& (0+255),w,b
 28837  00B78E  2471               	addwf	??_fatfs_find_blank_cluster+35,w,c
 28838  00B790  6ED9               	movwf	fsr2l,c
 28839  00B792  518D               	movf	(fatfs_find_blank_cluster@position+1)& (0+255),w,b
 28840  00B794  2072               	addwfc	??_fatfs_find_blank_cluster+36,w,c
 28841  00B796  6EDA               	movwf	fsr2h,c
 28842  00B798  50DF               	movf	indf2,w,c
 28843  00B79A  6E73               	movwf	(??_fatfs_find_blank_cluster+37)& (0+255),c
 28844  00B79C  5073               	movf	??_fatfs_find_blank_cluster+37,w,c
 28845  00B79E  246D               	addwf	??_fatfs_find_blank_cluster+31,w,c
 28846  00B7A0  6F80               	movwf	fatfs_find_blank_cluster@nextcluster& (0+255),b
 28847  00B7A2  0E00               	movlw	0
 28848  00B7A4  206E               	addwfc	??_fatfs_find_blank_cluster+32,w,c
 28849  00B7A6  6F81               	movwf	(fatfs_find_blank_cluster@nextcluster+1)& (0+255),b
 28850  00B7A8  0E00               	movlw	0
 28851  00B7AA  206F               	addwfc	??_fatfs_find_blank_cluster+33,w,c
 28852  00B7AC  6F82               	movwf	(fatfs_find_blank_cluster@nextcluster+2)& (0+255),b
 28853  00B7AE  0E00               	movlw	0
 28854  00B7B0  2070               	addwfc	??_fatfs_find_blank_cluster+34,w,c
 28855  00B7B2  6F83               	movwf	(fatfs_find_blank_cluster@nextcluster+3)& (0+255),b
 28856                           
 28857                           ; BSR set to: 0
 28858                           ;fat_table.c: 327: nextcluster = nextcluster & 0x0FFFFFFF;
 28859  00B7B4  5180               	movf	fatfs_find_blank_cluster@nextcluster& (0+255),w,b
 28860  00B7B6  5181               	movf	(fatfs_find_blank_cluster@nextcluster+1)& (0+255),w,b
 28861  00B7B8  5182               	movf	(fatfs_find_blank_cluster@nextcluster+2)& (0+255),w,b
 28862  00B7BA  0E0F               	movlw	15
 28863  00B7BC  1783               	andwf	(fatfs_find_blank_cluster@nextcluster+3)& (0+255),f,b
 28864  00B7BE                     l9542:
 28865                           
 28866                           ; BSR set to: 0
 28867                           ;fat_table.c: 328: }
 28868                           ;fat_table.c: 330: if (nextcluster !=0 )
 28869  00B7BE  0100               	movlb	0	; () banked
 28870  00B7C0  5183               	movf	(fatfs_find_blank_cluster@nextcluster+3)& (0+255),w,b
 28871  00B7C2  1180               	iorwf	fatfs_find_blank_cluster@nextcluster& (0+255),w,b
 28872  00B7C4  1181               	iorwf	(fatfs_find_blank_cluster@nextcluster+1)& (0+255),w,b
 28873  00B7C6  1182               	iorwf	(fatfs_find_blank_cluster@nextcluster+2)& (0+255),w,b
 28874  00B7C8  E009               	bz	l9550
 28875                           
 28876                           ; BSR set to: 0
 28877                           ;fat_table.c: 331: current_cluster++;
 28878  00B7CA  2B88               	incf	fatfs_find_blank_cluster@current_cluster& (0+255),f,b
 28879  00B7CC  0E00               	movlw	0
 28880  00B7CE  2389               	addwfc	(fatfs_find_blank_cluster@current_cluster+1)& (0+255),f,b
 28881  00B7D0  238A               	addwfc	(fatfs_find_blank_cluster@current_cluster+2)& (0+255),f,b
 28882  00B7D2  238B               	addwfc	(fatfs_find_blank_cluster@current_cluster+3)& (0+255),f,b
 28883  00B7D4  D003               	goto	l9550
 28884  00B7D6                     l9546:
 28885                           
 28886                           ; BSR set to: 0
 28887                           ;fat_table.c: 333: else
 28888                           ;fat_table.c: 335: return 0;
 28889  00B7D6  0E00               	movlw	0
 28890  00B7D8  6E47               	movwf	?_fatfs_find_blank_cluster+1,c
 28891  00B7DA  D016               	goto	L94
 28892  00B7DC                     l9550:
 28893                           
 28894                           ; BSR set to: 0
 28895                           ;fat_table.c: 336: }
 28896                           ;fat_table.c: 337: while (nextcluster != 0x0);
 28897  00B7DC  0100               	movlb	0	; () banked
 28898  00B7DE  5183               	movf	(fatfs_find_blank_cluster@nextcluster+3)& (0+255),w,b
 28899  00B7E0  1180               	iorwf	fatfs_find_blank_cluster@nextcluster& (0+255),w,b
 28900  00B7E2  1181               	iorwf	(fatfs_find_blank_cluster@nextcluster+1)& (0+255),w,b
 28901  00B7E4  1182               	iorwf	(fatfs_find_blank_cluster@nextcluster+2)& (0+255),w,b
 28902  00B7E6  E001 D638          	bnz	l9514
 28903                           
 28904                           ; BSR set to: 0
 28905                           ;fat_table.c: 340: *free_cluster = current_cluster;
 28906                           
 28907                           ; BSR set to: 0
 28908  00B7EA  C04C  FFD9         	movff	fatfs_find_blank_cluster@free_cluster,fsr2l
 28909  00B7EE  C04D  FFDA         	movff	fatfs_find_blank_cluster@free_cluster+1,fsr2h
 28910  00B7F2  C088  FFDE         	movff	fatfs_find_blank_cluster@current_cluster,postinc2
 28911  00B7F6  C089  FFDE         	movff	fatfs_find_blank_cluster@current_cluster+1,postinc2
 28912  00B7FA  C08A  FFDE         	movff	fatfs_find_blank_cluster@current_cluster+2,postinc2
 28913  00B7FE  C08B  FFDE         	movff	fatfs_find_blank_cluster@current_cluster+3,postinc2
 28914                           
 28915                           ; BSR set to: 0
 28916                           ;fat_table.c: 341: return 1;
 28917  00B802  0E00               	movlw	0
 28918  00B804  6E47               	movwf	?_fatfs_find_blank_cluster+1,c
 28919  00B806  0E01               	movlw	1
 28920  00B808                     L94:
 28921  00B808  6E46               	movwf	?_fatfs_find_blank_cluster,c
 28922                           
 28923                           ; BSR set to: 0
 28924                           
 28925                           ; BSR set to: 0
 28926  00B80A  0012               	return	
 28927  00B80C                     __end_of_fatfs_find_blank_cluster:
 28928                           	opt stack 0
 28929                           tosu	equ	0xFFF
 28930                           tosh	equ	0xFFE
 28931                           tosl	equ	0xFFD
 28932                           pclath	equ	0xFFA
 28933                           tblptru	equ	0xFF8
 28934                           tblptrh	equ	0xFF7
 28935                           tblptrl	equ	0xFF6
 28936                           tablat	equ	0xFF5
 28937                           prodh	equ	0xFF4
 28938                           prodl	equ	0xFF3
 28939                           indf0	equ	0xFEF
 28940                           postinc0	equ	0xFEE
 28941                           fsr0h	equ	0xFEA
 28942                           fsr0l	equ	0xFE9
 28943                           wreg	equ	0xFE8
 28944                           indf1	equ	0xFE7
 28945                           postinc1	equ	0xFE6
 28946                           postdec1	equ	0xFE5
 28947                           fsr1h	equ	0xFE2
 28948                           fsr1l	equ	0xFE1
 28949                           indf2	equ	0xFDF
 28950                           postinc2	equ	0xFDE
 28951                           postdec2	equ	0xFDD
 28952                           fsr2h	equ	0xFDA
 28953                           fsr2l	equ	0xFD9
 28954                           status	equ	0xFD8
 28955                           
 28956 ;; *************** function _fatfs_fat_add_cluster_to_chain *****************
 28957 ;; Defined at:
 28958 ;;		line 414 in file "fat_table.c"
 28959 ;; Parameters:    Size  Location     Type
 28960 ;;  fs              2    0[BANK0 ] PTR struct fatfs
 28961 ;;		 -> _fs(1095), 
 28962 ;;  start_cluste    4    2[BANK0 ] unsigned long 
 28963 ;;  newEntry        4    6[BANK0 ] unsigned long 
 28964 ;; Auto vars:     Size  Location     Type
 28965 ;;  next_cluster    4   14[BANK0 ] unsigned long 
 28966 ;;  last_cluster    4   10[BANK0 ] unsigned long 
 28967 ;; Return value:  Size  Location     Type
 28968 ;;                  2    0[BANK0 ] int 
 28969 ;; Registers used:
 28970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 28971 ;; Tracked objects:
 28972 ;;		On entry : 0/0
 28973 ;;		On exit  : 0/0
 28974 ;;		Unchanged: 0/0
 28975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28976 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28977 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28979 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28980 ;;Total ram usage:       18 bytes
 28981 ;; Hardware stack levels used:    1
 28982 ;; Hardware stack levels required when called:    6
 28983 ;; This function calls:
 28984 ;;		_fatfs_fat_set_cluster
 28985 ;;		_fatfs_find_next_cluster
 28986 ;; This function is called by:
 28987 ;;		_fatfs_find_free_dir_offset
 28988 ;; This function uses a non-reentrant model
 28989 ;;
 28990                           
 28991                           	psect	text82
 28992  005C58                     __ptext82:
 28993                           	opt stack 0
 28994  005C58                     _fatfs_fat_add_cluster_to_chain:
 28995                           	opt stack 18
 28996                           
 28997                           ;fat_table.c: 416: uint32 last_cluster = 0xFFFFFFFF;
 28998                           
 28999                           ; BSR set to: 0
 29000                           ;incstack = 0
 29001  005C58  0100               	movlb	0	; () banked
 29002  005C5A  698A               	setf	fatfs_fat_add_cluster_to_chain@last_cluster& (0+255),b
 29003  005C5C  698B               	setf	(fatfs_fat_add_cluster_to_chain@last_cluster+1)& (0+255),b
 29004  005C5E  698C               	setf	(fatfs_fat_add_cluster_to_chain@last_cluster+2)& (0+255),b
 29005  005C60  698D               	setf	(fatfs_fat_add_cluster_to_chain@last_cluster+3)& (0+255),b
 29006                           
 29007                           ;fat_table.c: 417: uint32 next_cluster = start_cluster;
 29008  005C62  C082  F08E         	movff	fatfs_fat_add_cluster_to_chain@start_cluster,fatfs_fat_add_cluster_to_chain@next_
      +                          cluster
 29009  005C66  C083  F08F         	movff	fatfs_fat_add_cluster_to_chain@start_cluster+1,fatfs_fat_add_cluster_to_chain@nex
      +                          t_cluster+1
 29010  005C6A  C084  F090         	movff	fatfs_fat_add_cluster_to_chain@start_cluster+2,fatfs_fat_add_cluster_to_chain@nex
      +                          t_cluster+2
 29011  005C6E  C085  F091         	movff	fatfs_fat_add_cluster_to_chain@start_cluster+3,fatfs_fat_add_cluster_to_chain@nex
      +                          t_cluster+3
 29012                           
 29013                           ; BSR set to: 0
 29014                           ;fat_table.c: 419: if (start_cluster == 0xFFFFFFFF)
 29015  005C72  2982               	incf	fatfs_fat_add_cluster_to_chain@start_cluster& (0+255),w,b
 29016  005C74  B4D8               	btfsc	status,2,c
 29017  005C76  2983               	incf	(fatfs_fat_add_cluster_to_chain@start_cluster+1)& (0+255),w,b
 29018  005C78  B4D8               	btfsc	status,2,c
 29019  005C7A  2984               	incf	(fatfs_fat_add_cluster_to_chain@start_cluster+2)& (0+255),w,b
 29020  005C7C  B4D8               	btfsc	status,2,c
 29021  005C7E  2985               	incf	(fatfs_fat_add_cluster_to_chain@start_cluster+3)& (0+255),w,b
 29022  005C80  D024               	goto	L96
 29023  005C82                     l1274:
 29024                           
 29025                           ; BSR set to: 0
 29026                           ;fat_table.c: 424: {
 29027                           ;fat_table.c: 425: last_cluster = next_cluster;
 29028  005C82  C08E  F08A         	movff	fatfs_fat_add_cluster_to_chain@next_cluster,fatfs_fat_add_cluster_to_chain@last_c
      +                          luster
 29029  005C86  C08F  F08B         	movff	fatfs_fat_add_cluster_to_chain@next_cluster+1,fatfs_fat_add_cluster_to_chain@last
      +                          _cluster+1
 29030  005C8A  C090  F08C         	movff	fatfs_fat_add_cluster_to_chain@next_cluster+2,fatfs_fat_add_cluster_to_chain@last
      +                          _cluster+2
 29031  005C8E  C091  F08D         	movff	fatfs_fat_add_cluster_to_chain@next_cluster+3,fatfs_fat_add_cluster_to_chain@last
      +                          _cluster+3
 29032                           
 29033                           ; BSR set to: 0
 29034                           ;fat_table.c: 428: next_cluster = fatfs_find_next_cluster(fs, next_cluster);
 29035  005C92  C081  F047         	movff	fatfs_fat_add_cluster_to_chain@fs+1,fatfs_find_next_cluster@fs+1
 29036  005C96  0100               	movlb	0	; () banked
 29037  005C98  C080  F046         	movff	fatfs_fat_add_cluster_to_chain@fs,fatfs_find_next_cluster@fs
 29038  005C9C  C08E  F048         	movff	fatfs_fat_add_cluster_to_chain@next_cluster,fatfs_find_next_cluster@current_clust
      +                          er
 29039  005CA0  C08F  F049         	movff	fatfs_fat_add_cluster_to_chain@next_cluster+1,fatfs_find_next_cluster@current_clu
      +                          ster+1
 29040  005CA4  C090  F04A         	movff	fatfs_fat_add_cluster_to_chain@next_cluster+2,fatfs_find_next_cluster@current_clu
      +                          ster+2
 29041  005CA8  C091  F04B         	movff	fatfs_fat_add_cluster_to_chain@next_cluster+3,fatfs_find_next_cluster@current_clu
      +                          ster+3
 29042  005CAC  EC9E  F054         	call	_fatfs_find_next_cluster	;wreg free
 29043  005CB0  C046  F08E         	movff	?_fatfs_find_next_cluster,fatfs_fat_add_cluster_to_chain@next_cluster
 29044  005CB4  C047  F08F         	movff	?_fatfs_find_next_cluster+1,fatfs_fat_add_cluster_to_chain@next_cluster+1
 29045  005CB8  C048  F090         	movff	?_fatfs_find_next_cluster+2,fatfs_fat_add_cluster_to_chain@next_cluster+2
 29046  005CBC  C049  F091         	movff	?_fatfs_find_next_cluster+3,fatfs_fat_add_cluster_to_chain@next_cluster+3
 29047                           
 29048                           ;fat_table.c: 429: if (!next_cluster)
 29049  005CC0  0100               	movlb	0	; () banked
 29050  005CC2  5191               	movf	(fatfs_fat_add_cluster_to_chain@next_cluster+3)& (0+255),w,b
 29051  005CC4  118E               	iorwf	fatfs_fat_add_cluster_to_chain@next_cluster& (0+255),w,b
 29052  005CC6  118F               	iorwf	(fatfs_fat_add_cluster_to_chain@next_cluster+1)& (0+255),w,b
 29053  005CC8  1190               	iorwf	(fatfs_fat_add_cluster_to_chain@next_cluster+2)& (0+255),w,b
 29054  005CCA                     L96:
 29055  005CCA  E104               	bnz	l9574
 29056                           
 29057                           ; BSR set to: 0
 29058                           ;fat_table.c: 430: return 0;
 29059  005CCC  0E00               	movlw	0
 29060  005CCE  0100               	movlb	0	; () banked
 29061  005CD0  6F81               	movwf	(?_fatfs_fat_add_cluster_to_chain+1)& (0+255),b
 29062  005CD2  D037               	goto	L95
 29063  005CD4                     l9574:
 29064                           
 29065                           ; BSR set to: 0
 29066  005CD4  0100               	movlb	0	; () banked
 29067  005CD6  298E               	incf	fatfs_fat_add_cluster_to_chain@next_cluster& (0+255),w,b
 29068  005CD8  B4D8               	btfsc	status,2,c
 29069  005CDA  298F               	incf	(fatfs_fat_add_cluster_to_chain@next_cluster+1)& (0+255),w,b
 29070  005CDC  B4D8               	btfsc	status,2,c
 29071  005CDE  2990               	incf	(fatfs_fat_add_cluster_to_chain@next_cluster+2)& (0+255),w,b
 29072  005CE0  B4D8               	btfsc	status,2,c
 29073  005CE2  2991               	incf	(fatfs_fat_add_cluster_to_chain@next_cluster+3)& (0+255),w,b
 29074  005CE4  E1CE               	bnz	l1274
 29075                           
 29076                           ; BSR set to: 0
 29077                           ;fat_table.c: 431: }
 29078                           ;fat_table.c: 434: fatfs_fat_set_cluster(fs, last_cluster, newEntry);
 29079                           
 29080                           ; BSR set to: 0
 29081  005CE6  C081  F047         	movff	fatfs_fat_add_cluster_to_chain@fs+1,fatfs_fat_set_cluster@fs+1
 29082  005CEA  C080  F046         	movff	fatfs_fat_add_cluster_to_chain@fs,fatfs_fat_set_cluster@fs
 29083  005CEE  C08A  F048         	movff	fatfs_fat_add_cluster_to_chain@last_cluster,fatfs_fat_set_cluster@cluster
 29084  005CF2  C08B  F049         	movff	fatfs_fat_add_cluster_to_chain@last_cluster+1,fatfs_fat_set_cluster@cluster+1
 29085  005CF6  C08C  F04A         	movff	fatfs_fat_add_cluster_to_chain@last_cluster+2,fatfs_fat_set_cluster@cluster+2
 29086  005CFA  C08D  F04B         	movff	fatfs_fat_add_cluster_to_chain@last_cluster+3,fatfs_fat_set_cluster@cluster+3
 29087  005CFE  C086  F04C         	movff	fatfs_fat_add_cluster_to_chain@newEntry,fatfs_fat_set_cluster@next_cluster
 29088  005D02  C087  F04D         	movff	fatfs_fat_add_cluster_to_chain@newEntry+1,fatfs_fat_set_cluster@next_cluster+1
 29089  005D06  C088  F04E         	movff	fatfs_fat_add_cluster_to_chain@newEntry+2,fatfs_fat_set_cluster@next_cluster+2
 29090  005D0A  C089  F04F         	movff	fatfs_fat_add_cluster_to_chain@newEntry+3,fatfs_fat_set_cluster@next_cluster+3
 29091  005D0E  EC17  F047         	call	_fatfs_fat_set_cluster	;wreg free
 29092                           
 29093                           ;fat_table.c: 437: fatfs_fat_set_cluster(fs, newEntry, 0xFFFFFFFF);
 29094  005D12  C081  F047         	movff	fatfs_fat_add_cluster_to_chain@fs+1,fatfs_fat_set_cluster@fs+1
 29095  005D16  0100               	movlb	0	; () banked
 29096  005D18  C080  F046         	movff	fatfs_fat_add_cluster_to_chain@fs,fatfs_fat_set_cluster@fs
 29097  005D1C  C086  F048         	movff	fatfs_fat_add_cluster_to_chain@newEntry,fatfs_fat_set_cluster@cluster
 29098  005D20  C087  F049         	movff	fatfs_fat_add_cluster_to_chain@newEntry+1,fatfs_fat_set_cluster@cluster+1
 29099  005D24  C088  F04A         	movff	fatfs_fat_add_cluster_to_chain@newEntry+2,fatfs_fat_set_cluster@cluster+2
 29100  005D28  C089  F04B         	movff	fatfs_fat_add_cluster_to_chain@newEntry+3,fatfs_fat_set_cluster@cluster+3
 29101  005D2C  0EFF               	movlw	255
 29102  005D2E  684C               	setf	fatfs_fat_set_cluster@next_cluster,c
 29103  005D30  684D               	setf	fatfs_fat_set_cluster@next_cluster+1,c
 29104  005D32  684E               	setf	fatfs_fat_set_cluster@next_cluster+2,c
 29105  005D34  684F               	setf	fatfs_fat_set_cluster@next_cluster+3,c
 29106  005D36  EC17  F047         	call	_fatfs_fat_set_cluster	;wreg free
 29107                           
 29108                           ;fat_table.c: 439: return 1;
 29109  005D3A  0E00               	movlw	0
 29110  005D3C  0100               	movlb	0	; () banked
 29111  005D3E  6F81               	movwf	(?_fatfs_fat_add_cluster_to_chain+1)& (0+255),b
 29112  005D40  0E01               	movlw	1
 29113  005D42                     L95:
 29114  005D42  0100               	movlb	0	; () banked
 29115  005D44  6F80               	movwf	?_fatfs_fat_add_cluster_to_chain& (0+255),b
 29116                           
 29117                           ; BSR set to: 0
 29118                           
 29119                           ; BSR set to: 0
 29120  005D46  0012               	return	
 29121  005D48                     __end_of_fatfs_fat_add_cluster_to_chain:
 29122                           	opt stack 0
 29123                           tosu	equ	0xFFF
 29124                           tosh	equ	0xFFE
 29125                           tosl	equ	0xFFD
 29126                           pclath	equ	0xFFA
 29127                           tblptru	equ	0xFF8
 29128                           tblptrh	equ	0xFF7
 29129                           tblptrl	equ	0xFF6
 29130                           tablat	equ	0xFF5
 29131                           prodh	equ	0xFF4
 29132                           prodl	equ	0xFF3
 29133                           indf0	equ	0xFEF
 29134                           postinc0	equ	0xFEE
 29135                           fsr0h	equ	0xFEA
 29136                           fsr0l	equ	0xFE9
 29137                           wreg	equ	0xFE8
 29138                           indf1	equ	0xFE7
 29139                           postinc1	equ	0xFE6
 29140                           postdec1	equ	0xFE5
 29141                           fsr1h	equ	0xFE2
 29142                           fsr1l	equ	0xFE1
 29143                           indf2	equ	0xFDF
 29144                           postinc2	equ	0xFDE
 29145                           postdec2	equ	0xFDD
 29146                           fsr2h	equ	0xFDA
 29147                           fsr2l	equ	0xFD9
 29148                           status	equ	0xFD8
 29149                           
 29150 ;; *************** function _fatfs_fat_set_cluster *****************
 29151 ;; Defined at:
 29152 ;;		line 349 in file "fat_table.c"
 29153 ;; Parameters:    Size  Location     Type
 29154 ;;  fs              2   69[COMRAM] PTR struct fatfs
 29155 ;;		 -> _fs(1095), 
 29156 ;;  cluster         4   71[COMRAM] unsigned long 
 29157 ;;  next_cluster    4   75[COMRAM] unsigned long 
 29158 ;; Auto vars:     Size  Location     Type
 29159 ;;  position        4   91[COMRAM] unsigned long 
 29160 ;;  fat_sector_o    4   87[COMRAM] unsigned long 
 29161 ;;  pbuf            2   95[COMRAM] PTR struct fat_buffer
 29162 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 29163 ;;		 -> NULL(0), 
 29164 ;; Return value:  Size  Location     Type
 29165 ;;                  2   69[COMRAM] int 
 29166 ;; Registers used:
 29167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 29168 ;; Tracked objects:
 29169 ;;		On entry : 0/0
 29170 ;;		On exit  : 0/0
 29171 ;;		Unchanged: 0/0
 29172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29173 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29174 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29175 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29176 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29177 ;;Total ram usage:       28 bytes
 29178 ;; Hardware stack levels used:    1
 29179 ;; Hardware stack levels required when called:    5
 29180 ;; This function calls:
 29181 ;;		_fatfs_fat_read_sector
 29182 ;; This function is called by:
 29183 ;;		_fatfs_free_cluster_chain
 29184 ;;		_fatfs_fat_add_cluster_to_chain
 29185 ;;		_fatfs_add_free_space
 29186 ;;		_fatfs_allocate_free_space
 29187 ;; This function uses a non-reentrant model
 29188 ;;
 29189                           
 29190                           	psect	text83
 29191  008E2E                     __ptext83:
 29192                           	opt stack 0
 29193  008E2E                     _fatfs_fat_set_cluster:
 29194                           	opt stack 20
 29195                           
 29196                           ;fat_table.c: 351: struct fat_buffer *pbuf;
 29197                           ;fat_table.c: 352: uint32 fat_sector_offset, position;
 29198                           ;fat_table.c: 355: if (fs->fat_type == FAT_TYPE_16)
 29199                           
 29200                           ; BSR set to: 0
 29201                           ;incstack = 0
 29202  008E2E  EE20 F028          	lfsr	2,40
 29203  008E32  5046               	movf	fatfs_fat_set_cluster@fs,w,c
 29204  008E34  26D9               	addwf	fsr2l,f,c
 29205  008E36  5047               	movf	fatfs_fat_set_cluster@fs+1,w,c
 29206  008E38  22DA               	addwfc	fsr2h,f,c
 29207  008E3A  50DF               	movf	indf2,w,c
 29208  008E3C  E110               	bnz	l8982
 29209                           
 29210                           ;fat_table.c: 356: fat_sector_offset = cluster / 256;
 29211  008E3E  C048  F050         	movff	fatfs_fat_set_cluster@cluster,??_fatfs_fat_set_cluster
 29212  008E42  C049  F051         	movff	fatfs_fat_set_cluster@cluster+1,??_fatfs_fat_set_cluster+1
 29213  008E46  C04A  F052         	movff	fatfs_fat_set_cluster@cluster+2,??_fatfs_fat_set_cluster+2
 29214  008E4A  C04B  F053         	movff	fatfs_fat_set_cluster@cluster+3,??_fatfs_fat_set_cluster+3
 29215  008E4E  C051  F050         	movff	??_fatfs_fat_set_cluster+1,??_fatfs_fat_set_cluster
 29216  008E52  C052  F051         	movff	??_fatfs_fat_set_cluster+2,??_fatfs_fat_set_cluster+1
 29217  008E56  C053  F052         	movff	??_fatfs_fat_set_cluster+3,??_fatfs_fat_set_cluster+2
 29218  008E5A  6A53               	clrf	??_fatfs_fat_set_cluster+3,c
 29219  008E5C  D011               	goto	L97
 29220  008E5E                     l8982:
 29221                           
 29222                           ;fat_table.c: 357: else
 29223                           ;fat_table.c: 358: fat_sector_offset = cluster / 128;
 29224  008E5E  C048  F050         	movff	fatfs_fat_set_cluster@cluster,??_fatfs_fat_set_cluster
 29225  008E62  C049  F051         	movff	fatfs_fat_set_cluster@cluster+1,??_fatfs_fat_set_cluster+1
 29226  008E66  C04A  F052         	movff	fatfs_fat_set_cluster@cluster+2,??_fatfs_fat_set_cluster+2
 29227  008E6A  C04B  F053         	movff	fatfs_fat_set_cluster@cluster+3,??_fatfs_fat_set_cluster+3
 29228  008E6E  0E08               	movlw	8
 29229  008E70  D005               	goto	u9530
 29230  008E72                     u9535:
 29231  008E72  90D8               	bcf	status,0,c
 29232  008E74  3253               	rrcf	??_fatfs_fat_set_cluster+3,f,c
 29233  008E76  3252               	rrcf	??_fatfs_fat_set_cluster+2,f,c
 29234  008E78  3251               	rrcf	??_fatfs_fat_set_cluster+1,f,c
 29235  008E7A  3250               	rrcf	??_fatfs_fat_set_cluster,f,c
 29236  008E7C                     u9530:
 29237  008E7C  2EE8               	decfsz	wreg,f,c
 29238  008E7E  D7F9               	goto	u9535
 29239  008E80                     L97:
 29240  008E80  C050  F058         	movff	??_fatfs_fat_set_cluster,fatfs_fat_set_cluster@fat_sector_offset
 29241  008E84  C051  F059         	movff	??_fatfs_fat_set_cluster+1,fatfs_fat_set_cluster@fat_sector_offset+1
 29242  008E88  C052  F05A         	movff	??_fatfs_fat_set_cluster+2,fatfs_fat_set_cluster@fat_sector_offset+2
 29243  008E8C  C053  F05B         	movff	??_fatfs_fat_set_cluster+3,fatfs_fat_set_cluster@fat_sector_offset+3
 29244                           
 29245                           ;fat_table.c: 361: pbuf = fatfs_fat_read_sector(fs, fs->fat_begin_lba+fat_sector_offset)
      +                          ;
 29246  008E90  C047  F035         	movff	fatfs_fat_set_cluster@fs+1,fatfs_fat_read_sector@fs+1
 29247  008E94  C046  F034         	movff	fatfs_fat_set_cluster@fs,fatfs_fat_read_sector@fs
 29248  008E98  EE20 F011          	lfsr	2,17
 29249  008E9C  5046               	movf	fatfs_fat_set_cluster@fs,w,c
 29250  008E9E  26D9               	addwf	fsr2l,f,c
 29251  008EA0  5047               	movf	fatfs_fat_set_cluster@fs+1,w,c
 29252  008EA2  22DA               	addwfc	fsr2h,f,c
 29253  008EA4  CFDE F050          	movff	postinc2,??_fatfs_fat_set_cluster
 29254  008EA8  CFDE F051          	movff	postinc2,??_fatfs_fat_set_cluster+1
 29255  008EAC  CFDE F052          	movff	postinc2,??_fatfs_fat_set_cluster+2
 29256  008EB0  CFDE F053          	movff	postinc2,??_fatfs_fat_set_cluster+3
 29257  008EB4  5058               	movf	fatfs_fat_set_cluster@fat_sector_offset,w,c
 29258  008EB6  2450               	addwf	??_fatfs_fat_set_cluster,w,c
 29259  008EB8  6E36               	movwf	fatfs_fat_read_sector@sector,c
 29260  008EBA  5059               	movf	fatfs_fat_set_cluster@fat_sector_offset+1,w,c
 29261  008EBC  2051               	addwfc	??_fatfs_fat_set_cluster+1,w,c
 29262  008EBE  6E37               	movwf	fatfs_fat_read_sector@sector+1,c
 29263  008EC0  505A               	movf	fatfs_fat_set_cluster@fat_sector_offset+2,w,c
 29264  008EC2  2052               	addwfc	??_fatfs_fat_set_cluster+2,w,c
 29265  008EC4  6E38               	movwf	fatfs_fat_read_sector@sector+2,c
 29266  008EC6  505B               	movf	fatfs_fat_set_cluster@fat_sector_offset+3,w,c
 29267  008EC8  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29268  008ECA  6E39               	movwf	fatfs_fat_read_sector@sector+3,c
 29269  008ECC  EC81  F043         	call	_fatfs_fat_read_sector	;wreg free
 29270  008ED0  C034  F060         	movff	?_fatfs_fat_read_sector,fatfs_fat_set_cluster@pbuf
 29271  008ED4  C035  F061         	movff	?_fatfs_fat_read_sector+1,fatfs_fat_set_cluster@pbuf+1
 29272                           
 29273                           ;fat_table.c: 362: if (!pbuf)
 29274  008ED8  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29275  008EDA  1060               	iorwf	fatfs_fat_set_cluster@pbuf,w,c
 29276  008EDC  E101 D0F4          	bz	l1258
 29277                           
 29278                           ;fat_table.c: 365: if (fs->fat_type == FAT_TYPE_16)
 29279                           
 29280                           ;fat_table.c: 363: return 0;
 29281                           ;	Return value of _fatfs_fat_set_cluster is never used
 29282  008EE0  EE20 F028          	lfsr	2,40
 29283  008EE4  5046               	movf	fatfs_fat_set_cluster@fs,w,c
 29284  008EE6  26D9               	addwf	fsr2l,f,c
 29285  008EE8  5047               	movf	fatfs_fat_set_cluster@fs+1,w,c
 29286  008EEA  22DA               	addwfc	fsr2h,f,c
 29287  008EEC  50DF               	movf	indf2,w,c
 29288  008EEE  E154               	bnz	l9000
 29289                           
 29290                           ;fat_table.c: 366: {
 29291                           ;fat_table.c: 368: position = (cluster - (fat_sector_offset * 256)) * 2;
 29292  008EF0  C058  F051         	movff	fatfs_fat_set_cluster@fat_sector_offset,??_fatfs_fat_set_cluster+1
 29293  008EF4  C059  F052         	movff	fatfs_fat_set_cluster@fat_sector_offset+1,??_fatfs_fat_set_cluster+2
 29294  008EF8  C05A  F053         	movff	fatfs_fat_set_cluster@fat_sector_offset+2,??_fatfs_fat_set_cluster+3
 29295  008EFC  6A50               	clrf	??_fatfs_fat_set_cluster& (0+255),c
 29296  008EFE  1E50               	comf	??_fatfs_fat_set_cluster,f,c
 29297  008F00  1E51               	comf	??_fatfs_fat_set_cluster+1,f,c
 29298  008F02  1E52               	comf	??_fatfs_fat_set_cluster+2,f,c
 29299  008F04  1E53               	comf	??_fatfs_fat_set_cluster+3,f,c
 29300  008F06  2A50               	incf	??_fatfs_fat_set_cluster,f,c
 29301  008F08  0E00               	movlw	0
 29302  008F0A  2251               	addwfc	??_fatfs_fat_set_cluster+1,f,c
 29303  008F0C  2252               	addwfc	??_fatfs_fat_set_cluster+2,f,c
 29304  008F0E  2253               	addwfc	??_fatfs_fat_set_cluster+3,f,c
 29305  008F10  5048               	movf	fatfs_fat_set_cluster@cluster,w,c
 29306  008F12  2450               	addwf	??_fatfs_fat_set_cluster,w,c
 29307  008F14  6E54               	movwf	(??_fatfs_fat_set_cluster+4)& (0+255),c
 29308  008F16  5049               	movf	fatfs_fat_set_cluster@cluster+1,w,c
 29309  008F18  2051               	addwfc	??_fatfs_fat_set_cluster+1,w,c
 29310  008F1A  6E55               	movwf	(??_fatfs_fat_set_cluster+5)& (0+255),c
 29311  008F1C  504A               	movf	fatfs_fat_set_cluster@cluster+2,w,c
 29312  008F1E  2052               	addwfc	??_fatfs_fat_set_cluster+2,w,c
 29313  008F20  6E56               	movwf	(??_fatfs_fat_set_cluster+6)& (0+255),c
 29314  008F22  504B               	movf	fatfs_fat_set_cluster@cluster+3,w,c
 29315  008F24  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29316  008F26  6E57               	movwf	(??_fatfs_fat_set_cluster+7)& (0+255),c
 29317  008F28  90D8               	bcf	status,0,c
 29318  008F2A  3454               	rlcf	??_fatfs_fat_set_cluster+4,w,c
 29319  008F2C  6E5C               	movwf	fatfs_fat_set_cluster@position,c
 29320  008F2E  3455               	rlcf	??_fatfs_fat_set_cluster+5,w,c
 29321  008F30  6E5D               	movwf	fatfs_fat_set_cluster@position+1,c
 29322  008F32  3456               	rlcf	??_fatfs_fat_set_cluster+6,w,c
 29323  008F34  6E5E               	movwf	fatfs_fat_set_cluster@position+2,c
 29324  008F36  3457               	rlcf	??_fatfs_fat_set_cluster+7,w,c
 29325  008F38  6E5F               	movwf	fatfs_fat_set_cluster@position+3,c
 29326                           
 29327                           ;fat_table.c: 371: { { pbuf->ptr[(uint16)position+0] = (uint8)((((uint16)next_cluster))&
      +                          0xFF); pbuf->ptr[(uint16)position+1] = (uint8)((((uint16)next_cluster)>>8)&0xFF); }; pbu
      +                          f->dirty = 1; };
 29328  008F3A  EE22 F006          	lfsr	2,518
 29329  008F3E  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29330  008F40  26D9               	addwf	fsr2l,f,c
 29331  008F42  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29332  008F44  22DA               	addwfc	fsr2h,f,c
 29333  008F46  CFDE F050          	movff	postinc2,??_fatfs_fat_set_cluster
 29334  008F4A  CFDD F051          	movff	postdec2,??_fatfs_fat_set_cluster+1
 29335  008F4E  505C               	movf	fatfs_fat_set_cluster@position,w,c
 29336  008F50  2450               	addwf	??_fatfs_fat_set_cluster,w,c
 29337  008F52  6ED9               	movwf	fsr2l,c
 29338  008F54  505D               	movf	fatfs_fat_set_cluster@position+1,w,c
 29339  008F56  2051               	addwfc	??_fatfs_fat_set_cluster+1,w,c
 29340  008F58  6EDA               	movwf	fsr2h,c
 29341  008F5A  C04C  FFDF         	movff	fatfs_fat_set_cluster@next_cluster,indf2
 29342  008F5E  285C               	incf	fatfs_fat_set_cluster@position,w,c
 29343  008F60  6E50               	movwf	??_fatfs_fat_set_cluster& (0+255),c
 29344  008F62  0E00               	movlw	0
 29345  008F64  205D               	addwfc	fatfs_fat_set_cluster@position+1,w,c
 29346  008F66  6E51               	movwf	(??_fatfs_fat_set_cluster+1)& (0+255),c
 29347  008F68  EE22 F006          	lfsr	2,518
 29348  008F6C  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29349  008F6E  26D9               	addwf	fsr2l,f,c
 29350  008F70  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29351  008F72  22DA               	addwfc	fsr2h,f,c
 29352  008F74  CFDE F052          	movff	postinc2,??_fatfs_fat_set_cluster+2
 29353  008F78  CFDD F053          	movff	postdec2,??_fatfs_fat_set_cluster+3
 29354  008F7C  5050               	movf	??_fatfs_fat_set_cluster,w,c
 29355  008F7E  2452               	addwf	??_fatfs_fat_set_cluster+2,w,c
 29356  008F80  6ED9               	movwf	fsr2l,c
 29357  008F82  5051               	movf	??_fatfs_fat_set_cluster+1,w,c
 29358  008F84  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29359  008F86  6EDA               	movwf	fsr2h,c
 29360  008F88  C04D  F054         	movff	fatfs_fat_set_cluster@next_cluster+1,??_fatfs_fat_set_cluster+4
 29361  008F8C  C054  F055         	movff	??_fatfs_fat_set_cluster+4,??_fatfs_fat_set_cluster+5
 29362  008F90  6A56               	clrf	(??_fatfs_fat_set_cluster+6)& (0+255),c
 29363  008F92  5055               	movf	??_fatfs_fat_set_cluster+5,w,c
 29364  008F94  6EDF               	movwf	indf2,c
 29365  008F96  D08E               	goto	L98
 29366  008F98                     l9000:
 29367                           
 29368                           ;fat_table.c: 373: else
 29369                           ;fat_table.c: 374: {
 29370                           ;fat_table.c: 376: position = (cluster - (fat_sector_offset * 128)) * 4;
 29371  008F98  C058  F050         	movff	fatfs_fat_set_cluster@fat_sector_offset,??_fatfs_fat_set_cluster
 29372  008F9C  C059  F051         	movff	fatfs_fat_set_cluster@fat_sector_offset+1,??_fatfs_fat_set_cluster+1
 29373  008FA0  C05A  F052         	movff	fatfs_fat_set_cluster@fat_sector_offset+2,??_fatfs_fat_set_cluster+2
 29374  008FA4  C05B  F053         	movff	fatfs_fat_set_cluster@fat_sector_offset+3,??_fatfs_fat_set_cluster+3
 29375  008FA8  0E07               	movlw	7
 29376  008FAA                     u9565:
 29377  008FAA  90D8               	bcf	status,0,c
 29378  008FAC  3650               	rlcf	??_fatfs_fat_set_cluster,f,c
 29379  008FAE  3651               	rlcf	??_fatfs_fat_set_cluster+1,f,c
 29380  008FB0  3652               	rlcf	??_fatfs_fat_set_cluster+2,f,c
 29381  008FB2  3653               	rlcf	??_fatfs_fat_set_cluster+3,f,c
 29382  008FB4  2EE8               	decfsz	wreg,f,c
 29383  008FB6  D7F9               	goto	u9565
 29384  008FB8  1E50               	comf	??_fatfs_fat_set_cluster,f,c
 29385  008FBA  1E51               	comf	??_fatfs_fat_set_cluster+1,f,c
 29386  008FBC  1E52               	comf	??_fatfs_fat_set_cluster+2,f,c
 29387  008FBE  1E53               	comf	??_fatfs_fat_set_cluster+3,f,c
 29388  008FC0  2A50               	incf	??_fatfs_fat_set_cluster,f,c
 29389  008FC2  0E00               	movlw	0
 29390  008FC4  2251               	addwfc	??_fatfs_fat_set_cluster+1,f,c
 29391  008FC6  2252               	addwfc	??_fatfs_fat_set_cluster+2,f,c
 29392  008FC8  2253               	addwfc	??_fatfs_fat_set_cluster+3,f,c
 29393  008FCA  5048               	movf	fatfs_fat_set_cluster@cluster,w,c
 29394  008FCC  2450               	addwf	??_fatfs_fat_set_cluster,w,c
 29395  008FCE  6E54               	movwf	(??_fatfs_fat_set_cluster+4)& (0+255),c
 29396  008FD0  5049               	movf	fatfs_fat_set_cluster@cluster+1,w,c
 29397  008FD2  2051               	addwfc	??_fatfs_fat_set_cluster+1,w,c
 29398  008FD4  6E55               	movwf	(??_fatfs_fat_set_cluster+5)& (0+255),c
 29399  008FD6  504A               	movf	fatfs_fat_set_cluster@cluster+2,w,c
 29400  008FD8  2052               	addwfc	??_fatfs_fat_set_cluster+2,w,c
 29401  008FDA  6E56               	movwf	(??_fatfs_fat_set_cluster+6)& (0+255),c
 29402  008FDC  504B               	movf	fatfs_fat_set_cluster@cluster+3,w,c
 29403  008FDE  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29404  008FE0  6E57               	movwf	(??_fatfs_fat_set_cluster+7)& (0+255),c
 29405  008FE2  0E02               	movlw	2
 29406  008FE4                     u9575:
 29407  008FE4  90D8               	bcf	status,0,c
 29408  008FE6  3654               	rlcf	??_fatfs_fat_set_cluster+4,f,c
 29409  008FE8  3655               	rlcf	??_fatfs_fat_set_cluster+5,f,c
 29410  008FEA  3656               	rlcf	??_fatfs_fat_set_cluster+6,f,c
 29411  008FEC  3657               	rlcf	??_fatfs_fat_set_cluster+7,f,c
 29412  008FEE  2EE8               	decfsz	wreg,f,c
 29413  008FF0  D7F9               	goto	u9575
 29414  008FF2  C054  F05C         	movff	??_fatfs_fat_set_cluster+4,fatfs_fat_set_cluster@position
 29415  008FF6  C055  F05D         	movff	??_fatfs_fat_set_cluster+5,fatfs_fat_set_cluster@position+1
 29416  008FFA  C056  F05E         	movff	??_fatfs_fat_set_cluster+6,fatfs_fat_set_cluster@position+2
 29417  008FFE  C057  F05F         	movff	??_fatfs_fat_set_cluster+7,fatfs_fat_set_cluster@position+3
 29418                           
 29419                           ;fat_table.c: 379: { { pbuf->ptr[(uint16)position+0] = (uint8)((next_cluster)&0xFF); pbu
      +                          f->ptr[(uint16)position+1] = (uint8)((next_cluster>>8)&0xFF); pbuf->ptr[(uint16)position
      +                          +2] = (uint8)((next_cluster>>16)&0xFF); pbuf->ptr[(uint16)position+3] = (uint8)((next_cl
      +                          uster
 29420  009002  EE22 F006          	lfsr	2,518
 29421  009006  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29422  009008  26D9               	addwf	fsr2l,f,c
 29423  00900A  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29424  00900C  22DA               	addwfc	fsr2h,f,c
 29425  00900E  CFDE F050          	movff	postinc2,??_fatfs_fat_set_cluster
 29426  009012  CFDD F051          	movff	postdec2,??_fatfs_fat_set_cluster+1
 29427  009016  505C               	movf	fatfs_fat_set_cluster@position,w,c
 29428  009018  2450               	addwf	??_fatfs_fat_set_cluster,w,c
 29429  00901A  6ED9               	movwf	fsr2l,c
 29430  00901C  505D               	movf	fatfs_fat_set_cluster@position+1,w,c
 29431  00901E  2051               	addwfc	??_fatfs_fat_set_cluster+1,w,c
 29432  009020  6EDA               	movwf	fsr2h,c
 29433  009022  C04C  FFDF         	movff	fatfs_fat_set_cluster@next_cluster,indf2
 29434  009026  285C               	incf	fatfs_fat_set_cluster@position,w,c
 29435  009028  6E50               	movwf	??_fatfs_fat_set_cluster& (0+255),c
 29436  00902A  0E00               	movlw	0
 29437  00902C  205D               	addwfc	fatfs_fat_set_cluster@position+1,w,c
 29438  00902E  6E51               	movwf	(??_fatfs_fat_set_cluster+1)& (0+255),c
 29439  009030  EE22 F006          	lfsr	2,518
 29440  009034  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29441  009036  26D9               	addwf	fsr2l,f,c
 29442  009038  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29443  00903A  22DA               	addwfc	fsr2h,f,c
 29444  00903C  CFDE F052          	movff	postinc2,??_fatfs_fat_set_cluster+2
 29445  009040  CFDD F053          	movff	postdec2,??_fatfs_fat_set_cluster+3
 29446  009044  5050               	movf	??_fatfs_fat_set_cluster,w,c
 29447  009046  2452               	addwf	??_fatfs_fat_set_cluster+2,w,c
 29448  009048  6ED9               	movwf	fsr2l,c
 29449  00904A  5051               	movf	??_fatfs_fat_set_cluster+1,w,c
 29450  00904C  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29451  00904E  6EDA               	movwf	fsr2h,c
 29452  009050  C04D  FFDF         	movff	fatfs_fat_set_cluster@next_cluster+1,indf2
 29453  009054  0E02               	movlw	2
 29454  009056  245C               	addwf	fatfs_fat_set_cluster@position,w,c
 29455  009058  6E50               	movwf	??_fatfs_fat_set_cluster& (0+255),c
 29456  00905A  0E00               	movlw	0
 29457  00905C  205D               	addwfc	fatfs_fat_set_cluster@position+1,w,c
 29458  00905E  6E51               	movwf	(??_fatfs_fat_set_cluster+1)& (0+255),c
 29459  009060  EE22 F006          	lfsr	2,518
 29460  009064  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29461  009066  26D9               	addwf	fsr2l,f,c
 29462  009068  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29463  00906A  22DA               	addwfc	fsr2h,f,c
 29464  00906C  CFDE F052          	movff	postinc2,??_fatfs_fat_set_cluster+2
 29465  009070  CFDD F053          	movff	postdec2,??_fatfs_fat_set_cluster+3
 29466  009074  5050               	movf	??_fatfs_fat_set_cluster,w,c
 29467  009076  2452               	addwf	??_fatfs_fat_set_cluster+2,w,c
 29468  009078  6ED9               	movwf	fsr2l,c
 29469  00907A  5051               	movf	??_fatfs_fat_set_cluster+1,w,c
 29470  00907C  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29471  00907E  6EDA               	movwf	fsr2h,c
 29472  009080  C04E  FFDF         	movff	fatfs_fat_set_cluster@next_cluster+2,indf2
 29473  009084  0E03               	movlw	3
 29474  009086  245C               	addwf	fatfs_fat_set_cluster@position,w,c
 29475  009088  6E50               	movwf	??_fatfs_fat_set_cluster& (0+255),c
 29476  00908A  0E00               	movlw	0
 29477  00908C  205D               	addwfc	fatfs_fat_set_cluster@position+1,w,c
 29478  00908E  6E51               	movwf	(??_fatfs_fat_set_cluster+1)& (0+255),c
 29479  009090  EE22 F006          	lfsr	2,518
 29480  009094  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29481  009096  26D9               	addwf	fsr2l,f,c
 29482  009098  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29483  00909A  22DA               	addwfc	fsr2h,f,c
 29484  00909C  CFDE F052          	movff	postinc2,??_fatfs_fat_set_cluster+2
 29485  0090A0  CFDD F053          	movff	postdec2,??_fatfs_fat_set_cluster+3
 29486  0090A4  5050               	movf	??_fatfs_fat_set_cluster,w,c
 29487  0090A6  2452               	addwf	??_fatfs_fat_set_cluster+2,w,c
 29488  0090A8  6ED9               	movwf	fsr2l,c
 29489  0090AA  5051               	movf	??_fatfs_fat_set_cluster+1,w,c
 29490  0090AC  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29491  0090AE  6EDA               	movwf	fsr2h,c
 29492  0090B0  C04F  FFDF         	movff	fatfs_fat_set_cluster@next_cluster+3,indf2
 29493  0090B4                     L98:
 29494  0090B4  EE22 F004          	lfsr	2,516
 29495  0090B8  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29496  0090BA  26D9               	addwf	fsr2l,f,c
 29497  0090BC  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29498  0090BE  22DA               	addwfc	fsr2h,f,c
 29499  0090C0  0E01               	movlw	1
 29500  0090C2  6EDE               	movwf	postinc2,c
 29501  0090C4  0E00               	movlw	0
 29502  0090C6  6EDD               	movwf	postdec2,c
 29503  0090C8                     l1258:
 29504  0090C8  0012               	return	
 29505  0090CA                     __end_of_fatfs_fat_set_cluster:
 29506                           	opt stack 0
 29507                           tosu	equ	0xFFF
 29508                           tosh	equ	0xFFE
 29509                           tosl	equ	0xFFD
 29510                           pclath	equ	0xFFA
 29511                           tblptru	equ	0xFF8
 29512                           tblptrh	equ	0xFF7
 29513                           tblptrl	equ	0xFF6
 29514                           tablat	equ	0xFF5
 29515                           prodh	equ	0xFF4
 29516                           prodl	equ	0xFF3
 29517                           indf0	equ	0xFEF
 29518                           postinc0	equ	0xFEE
 29519                           fsr0h	equ	0xFEA
 29520                           fsr0l	equ	0xFE9
 29521                           wreg	equ	0xFE8
 29522                           indf1	equ	0xFE7
 29523                           postinc1	equ	0xFE6
 29524                           postdec1	equ	0xFE5
 29525                           fsr1h	equ	0xFE2
 29526                           fsr1l	equ	0xFE1
 29527                           indf2	equ	0xFDF
 29528                           postinc2	equ	0xFDE
 29529                           postdec2	equ	0xFDD
 29530                           fsr2h	equ	0xFDA
 29531                           fsr2l	equ	0xFD9
 29532                           status	equ	0xFD8
 29533                           
 29534 ;; *************** function _fatfs_filename_to_lfn *****************
 29535 ;; Defined at:
 29536 ;;		line 207 in file "fat_misc.c"
 29537 ;; Parameters:    Size  Location     Type
 29538 ;;  filename        2   12[COMRAM] PTR unsigned char 
 29539 ;;		 -> RAM(3967), NULL(0), 
 29540 ;;  buffer          2   14[COMRAM] PTR unsigned char 
 29541 ;;		 -> _fs.currentsector.sector(512), 
 29542 ;;  entry           2   16[COMRAM] int 
 29543 ;;  sfnChk          1   18[COMRAM] unsigned char 
 29544 ;; Auto vars:     Size  Location     Type
 29545 ;;  nameIndexes    10   25[COMRAM] int [5]
 29546 ;;  i               2   43[COMRAM] int 
 29547 ;;  start           2   41[COMRAM] int 
 29548 ;;  length          2   39[COMRAM] int 
 29549 ;;  entriesRequi    2   35[COMRAM] int 
 29550 ;; Return value:  Size  Location     Type
 29551 ;;		None               void
 29552 ;; Registers used:
 29553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29554 ;; Tracked objects:
 29555 ;;		On entry : 0/0
 29556 ;;		On exit  : 0/0
 29557 ;;		Unchanged: 0/0
 29558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29559 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29560 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29561 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29562 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29563 ;;Total ram usage:       33 bytes
 29564 ;; Hardware stack levels used:    1
 29565 ;; Hardware stack levels required when called:    2
 29566 ;; This function calls:
 29567 ;;		_fatfs_lfn_entries_required
 29568 ;;		_memset
 29569 ;;		_strlen
 29570 ;; This function is called by:
 29571 ;;		_fatfs_add_file_entry
 29572 ;; This function uses a non-reentrant model
 29573 ;;
 29574                           
 29575                           	psect	text84
 29576  008092                     __ptext84:
 29577                           	opt stack 0
 29578  008092                     _fatfs_filename_to_lfn:
 29579                           	opt stack 23
 29580                           
 29581                           ;fat_misc.c: 209: int i;
 29582                           ;fat_misc.c: 210: int nameIndexes[5] = {1,3,5,7,9};
 29583                           
 29584                           ;incstack = 0
 29585  008092  EE21  F0DE         	lfsr	2,fatfs_filename_to_lfn@F379
 29586  008096  EE10  F01A         	lfsr	1,fatfs_filename_to_lfn@nameIndexes
 29587  00809A  0E0A               	movlw	10
 29588  00809C                     u11401:
 29589  00809C  CFDE FFE6          	movff	postinc2,postinc1
 29590  0080A0  2EE8               	decfsz	wreg,f,c
 29591  0080A2  D7FC               	goto	u11401
 29592                           
 29593                           ;fat_misc.c: 213: int length = (int)strlen(filename);
 29594  0080A4  C00E  F002         	movff	fatfs_filename_to_lfn@filename+1,strlen@s+1
 29595  0080A8  C00D  F001         	movff	fatfs_filename_to_lfn@filename,strlen@s
 29596  0080AC  EC71  F022         	call	_strlen	;wreg free
 29597  0080B0  C001  F028         	movff	?_strlen,fatfs_filename_to_lfn@length
 29598  0080B4  C002  F029         	movff	?_strlen+1,fatfs_filename_to_lfn@length+1
 29599                           
 29600                           ;fat_misc.c: 214: int entriesRequired = fatfs_lfn_entries_required(filename);
 29601  0080B8  C00E  F00A         	movff	fatfs_filename_to_lfn@filename+1,fatfs_lfn_entries_required@filename+1
 29602  0080BC  C00D  F009         	movff	fatfs_filename_to_lfn@filename,fatfs_lfn_entries_required@filename
 29603  0080C0  EC43  F021         	call	_fatfs_lfn_entries_required	;wreg free
 29604  0080C4  C009  F024         	movff	?_fatfs_lfn_entries_required,fatfs_filename_to_lfn@entriesRequired
 29605  0080C8  C00A  F025         	movff	?_fatfs_lfn_entries_required+1,fatfs_filename_to_lfn@entriesRequired+1
 29606                           
 29607                           ;fat_misc.c: 217: int start = entry * 5;
 29608  0080CC  0E05               	movlw	5
 29609  0080CE  0211               	mulwf	fatfs_filename_to_lfn@entry,c
 29610  0080D0  CFF3 F014          	movff	prodl,??_fatfs_filename_to_lfn
 29611  0080D4  CFF4 F015          	movff	prodh,??_fatfs_filename_to_lfn+1
 29612  0080D8  0212               	mulwf	fatfs_filename_to_lfn@entry+1,c
 29613  0080DA  50F3               	movf	243,w,c
 29614  0080DC  2615               	addwf	(??_fatfs_filename_to_lfn+1)& (0+255),f,c
 29615  0080DE  C014  F02A         	movff	??_fatfs_filename_to_lfn,fatfs_filename_to_lfn@start
 29616  0080E2  C015  F02B         	movff	??_fatfs_filename_to_lfn+1,fatfs_filename_to_lfn@start+1
 29617                           
 29618                           ;fat_misc.c: 220: memset(buffer, 0x00, 32);
 29619  0080E6  C010  F002         	movff	fatfs_filename_to_lfn@buffer+1,memset@p1+1
 29620  0080EA  C00F  F001         	movff	fatfs_filename_to_lfn@buffer,memset@p1
 29621  0080EE  6A04               	clrf	memset@c+1,c
 29622  0080F0  6A03               	clrf	memset@c,c
 29623  0080F2  6A06               	clrf	memset@n+1,c
 29624  0080F4  0E20               	movlw	32
 29625  0080F6  6E05               	movwf	memset@n,c
 29626  0080F8  EC1A  F020         	call	_memset	;wreg free
 29627                           
 29628                           ;fat_misc.c: 223: buffer[0] = (uint8)(((entriesRequired-1)==entry)?(0x40|(entry+1)):(ent
      +                          ry+1));
 29629  0080FC  6814               	setf	??_fatfs_filename_to_lfn& (0+255),c
 29630  0080FE  6815               	setf	(??_fatfs_filename_to_lfn+1)& (0+255),c
 29631  008100  C024  F016         	movff	fatfs_filename_to_lfn@entriesRequired,??_fatfs_filename_to_lfn+2
 29632  008104  C025  F017         	movff	fatfs_filename_to_lfn@entriesRequired+1,??_fatfs_filename_to_lfn+3
 29633  008108  5014               	movf	??_fatfs_filename_to_lfn,w,c
 29634  00810A  2616               	addwf	??_fatfs_filename_to_lfn+2,f,c
 29635  00810C  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29636  00810E  2217               	addwfc	??_fatfs_filename_to_lfn+3,f,c
 29637  008110  5012               	movf	fatfs_filename_to_lfn@entry+1,w,c
 29638  008112  1817               	xorwf	??_fatfs_filename_to_lfn+3,w,c
 29639  008114  E102               	bnz	u11415
 29640  008116  5011               	movf	fatfs_filename_to_lfn@entry,w,c
 29641  008118  1816               	xorwf	??_fatfs_filename_to_lfn+2,w,c
 29642  00811A                     u11415:
 29643  00811A  E005               	bz	l10222
 29644  00811C  2811               	incf	fatfs_filename_to_lfn@entry,w,c
 29645  00811E  6E26               	movwf	_fatfs_filename_to_lfn$2422,c
 29646  008120  0E00               	movlw	0
 29647  008122  2012               	addwfc	fatfs_filename_to_lfn@entry+1,w,c
 29648  008124  D009               	goto	L99
 29649  008126                     l10222:
 29650  008126  2811               	incf	fatfs_filename_to_lfn@entry,w,c
 29651  008128  6E14               	movwf	??_fatfs_filename_to_lfn& (0+255),c
 29652  00812A  0E00               	movlw	0
 29653  00812C  2012               	addwfc	fatfs_filename_to_lfn@entry+1,w,c
 29654  00812E  6E15               	movwf	(??_fatfs_filename_to_lfn+1)& (0+255),c
 29655  008130  0E40               	movlw	64
 29656  008132  1014               	iorwf	??_fatfs_filename_to_lfn,w,c
 29657  008134  6E26               	movwf	_fatfs_filename_to_lfn$2422,c
 29658  008136  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29659  008138                     L99:
 29660  008138  6E27               	movwf	_fatfs_filename_to_lfn$2422+1,c
 29661  00813A  C00F  FFD9         	movff	fatfs_filename_to_lfn@buffer,fsr2l
 29662  00813E  C010  FFDA         	movff	fatfs_filename_to_lfn@buffer+1,fsr2h
 29663  008142  C026  FFDF         	movff	_fatfs_filename_to_lfn$2422,indf2
 29664                           
 29665                           ;fat_misc.c: 226: buffer[11] = 0x0F;
 29666  008146  EE20 F00B          	lfsr	2,11
 29667  00814A  500F               	movf	fatfs_filename_to_lfn@buffer,w,c
 29668  00814C  26D9               	addwf	fsr2l,f,c
 29669  00814E  5010               	movf	fatfs_filename_to_lfn@buffer+1,w,c
 29670  008150  22DA               	addwfc	fsr2h,f,c
 29671  008152  0E0F               	movlw	15
 29672  008154  6EDF               	movwf	indf2,c
 29673                           
 29674                           ;fat_misc.c: 229: buffer[13] = sfnChk;
 29675  008156  EE20 F00D          	lfsr	2,13
 29676  00815A  500F               	movf	fatfs_filename_to_lfn@buffer,w,c
 29677  00815C  26D9               	addwf	fsr2l,f,c
 29678  00815E  5010               	movf	fatfs_filename_to_lfn@buffer+1,w,c
 29679  008160  22DA               	addwfc	fsr2h,f,c
 29680  008162  C013  FFDF         	movff	fatfs_filename_to_lfn@sfnChk,indf2
 29681                           
 29682                           ;fat_misc.c: 232: for (i=0;i<5;i++)
 29683  008166  6A2D               	clrf	fatfs_filename_to_lfn@i+1,c
 29684  008168  6A2C               	clrf	fatfs_filename_to_lfn@i,c
 29685  00816A  502D               	movf	fatfs_filename_to_lfn@i+1,w,c
 29686  00816C  0A80               	xorlw	128
 29687  00816E  0F80               	addlw	-128
 29688  008170  0E05               	movlw	5
 29689  008172  B4D8               	btfsc	status,2,c
 29690  008174  5C2C               	subwf	fatfs_filename_to_lfn@i,w,c
 29691  008176  E301 D097          	bc	l1002
 29692                           
 29693                           ;fat_misc.c: 233: {
 29694                           ;fat_misc.c: 234: if ( (start+i) < length )
 29695  00817A  C02A  F014         	movff	fatfs_filename_to_lfn@start,??_fatfs_filename_to_lfn
 29696  00817E  C02B  F015         	movff	fatfs_filename_to_lfn@start+1,??_fatfs_filename_to_lfn+1
 29697  008182  502C               	movf	fatfs_filename_to_lfn@i,w,c
 29698  008184  2614               	addwf	??_fatfs_filename_to_lfn,f,c
 29699  008186  502D               	movf	fatfs_filename_to_lfn@i+1,w,c
 29700  008188  2215               	addwfc	??_fatfs_filename_to_lfn+1,f,c
 29701  00818A  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29702  00818C  0A80               	xorlw	128
 29703  00818E  6E16               	movwf	(??_fatfs_filename_to_lfn+2)& (0+255),c
 29704  008190  5028               	movf	fatfs_filename_to_lfn@length,w,c
 29705  008192  5C14               	subwf	??_fatfs_filename_to_lfn,w,c
 29706  008194  5029               	movf	fatfs_filename_to_lfn@length+1,w,c
 29707  008196  0A80               	xorlw	128
 29708  008198  5816               	subwfb	(??_fatfs_filename_to_lfn+2)& (0+255),w,c
 29709  00819A  E228               	bc	l10236
 29710                           
 29711                           ;fat_misc.c: 235: buffer[nameIndexes[i]] = filename[start+i];
 29712  00819C  C02A  F014         	movff	fatfs_filename_to_lfn@start,??_fatfs_filename_to_lfn
 29713  0081A0  C02B  F015         	movff	fatfs_filename_to_lfn@start+1,??_fatfs_filename_to_lfn+1
 29714  0081A4  502C               	movf	fatfs_filename_to_lfn@i,w,c
 29715  0081A6  2614               	addwf	??_fatfs_filename_to_lfn,f,c
 29716  0081A8  502D               	movf	fatfs_filename_to_lfn@i+1,w,c
 29717  0081AA  2215               	addwfc	??_fatfs_filename_to_lfn+1,f,c
 29718  0081AC  5014               	movf	??_fatfs_filename_to_lfn,w,c
 29719  0081AE  240D               	addwf	fatfs_filename_to_lfn@filename,w,c
 29720  0081B0  6ED9               	movwf	fsr2l,c
 29721  0081B2  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29722  0081B4  200E               	addwfc	fatfs_filename_to_lfn@filename+1,w,c
 29723  0081B6  6EDA               	movwf	fsr2h,c
 29724  0081B8  0E1A               	movlw	low fatfs_filename_to_lfn@nameIndexes
 29725  0081BA  6E16               	movwf	(??_fatfs_filename_to_lfn+2)& (0+255),c
 29726  0081BC  0E00               	movlw	high fatfs_filename_to_lfn@nameIndexes
 29727  0081BE  6E17               	movwf	(??_fatfs_filename_to_lfn+3)& (0+255),c
 29728  0081C0  90D8               	bcf	status,0,c
 29729  0081C2  342C               	rlcf	fatfs_filename_to_lfn@i,w,c
 29730  0081C4  6EE1               	movwf	fsr1l,c
 29731  0081C6  342D               	rlcf	fatfs_filename_to_lfn@i+1,w,c
 29732  0081C8  6EE2               	movwf	fsr1h,c
 29733  0081CA  5016               	movf	??_fatfs_filename_to_lfn+2,w,c
 29734  0081CC  26E1               	addwf	fsr1l,f,c
 29735  0081CE  5017               	movf	??_fatfs_filename_to_lfn+3,w,c
 29736  0081D0  22E2               	addwfc	fsr1h,f,c
 29737  0081D2  CFE6 F018          	movff	postinc1,??_fatfs_filename_to_lfn+4
 29738  0081D6  CFE5 F019          	movff	postdec1,??_fatfs_filename_to_lfn+5
 29739  0081DA  5018               	movf	??_fatfs_filename_to_lfn+4,w,c
 29740  0081DC  240F               	addwf	fatfs_filename_to_lfn@buffer,w,c
 29741  0081DE  6EE1               	movwf	fsr1l,c
 29742  0081E0  5019               	movf	??_fatfs_filename_to_lfn+5,w,c
 29743  0081E2  2010               	addwfc	fatfs_filename_to_lfn@buffer+1,w,c
 29744  0081E4  6EE2               	movwf	fsr1h,c
 29745  0081E6  CFDF FFE7          	movff	indf2,indf1
 29746  0081EA  D05B               	goto	l10242
 29747  0081EC                     l10236:
 29748                           
 29749                           ;fat_misc.c: 236: else if ( (start+i) == length )
 29750  0081EC  C02A  F014         	movff	fatfs_filename_to_lfn@start,??_fatfs_filename_to_lfn
 29751  0081F0  C02B  F015         	movff	fatfs_filename_to_lfn@start+1,??_fatfs_filename_to_lfn+1
 29752  0081F4  502C               	movf	fatfs_filename_to_lfn@i,w,c
 29753  0081F6  2614               	addwf	??_fatfs_filename_to_lfn,f,c
 29754  0081F8  502D               	movf	fatfs_filename_to_lfn@i+1,w,c
 29755  0081FA  2215               	addwfc	??_fatfs_filename_to_lfn+1,f,c
 29756  0081FC  5029               	movf	fatfs_filename_to_lfn@length+1,w,c
 29757  0081FE  1815               	xorwf	??_fatfs_filename_to_lfn+1,w,c
 29758  008200  E102               	bnz	u11445
 29759  008202  5028               	movf	fatfs_filename_to_lfn@length,w,c
 29760  008204  1814               	xorwf	??_fatfs_filename_to_lfn,w,c
 29761  008206                     u11445:
 29762  008206  E119               	bnz	l10240
 29763                           
 29764                           ;fat_misc.c: 237: buffer[nameIndexes[i]] = 0x00;
 29765  008208  0E1A               	movlw	low fatfs_filename_to_lfn@nameIndexes
 29766  00820A  6E14               	movwf	??_fatfs_filename_to_lfn& (0+255),c
 29767  00820C  0E00               	movlw	high fatfs_filename_to_lfn@nameIndexes
 29768  00820E  6E15               	movwf	(??_fatfs_filename_to_lfn+1)& (0+255),c
 29769  008210  90D8               	bcf	status,0,c
 29770  008212  342C               	rlcf	fatfs_filename_to_lfn@i,w,c
 29771  008214  6ED9               	movwf	fsr2l,c
 29772  008216  342D               	rlcf	fatfs_filename_to_lfn@i+1,w,c
 29773  008218  6EDA               	movwf	fsr2h,c
 29774  00821A  5014               	movf	??_fatfs_filename_to_lfn,w,c
 29775  00821C  26D9               	addwf	fsr2l,f,c
 29776  00821E  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29777  008220  22DA               	addwfc	fsr2h,f,c
 29778  008222  CFDE F016          	movff	postinc2,??_fatfs_filename_to_lfn+2
 29779  008226  CFDD F017          	movff	postdec2,??_fatfs_filename_to_lfn+3
 29780  00822A  5016               	movf	??_fatfs_filename_to_lfn+2,w,c
 29781  00822C  240F               	addwf	fatfs_filename_to_lfn@buffer,w,c
 29782  00822E  6ED9               	movwf	fsr2l,c
 29783  008230  5017               	movf	??_fatfs_filename_to_lfn+3,w,c
 29784  008232  2010               	addwfc	fatfs_filename_to_lfn@buffer+1,w,c
 29785  008234  6EDA               	movwf	fsr2h,c
 29786  008236  0E00               	movlw	0
 29787  008238  D033               	goto	L100
 29788  00823A                     l10240:
 29789                           
 29790                           ;fat_misc.c: 238: else
 29791                           ;fat_misc.c: 239: {
 29792                           ;fat_misc.c: 240: buffer[nameIndexes[i]] = 0xFF;
 29793  00823A  0E1A               	movlw	low fatfs_filename_to_lfn@nameIndexes
 29794  00823C  6E14               	movwf	??_fatfs_filename_to_lfn& (0+255),c
 29795  00823E  0E00               	movlw	high fatfs_filename_to_lfn@nameIndexes
 29796  008240  6E15               	movwf	(??_fatfs_filename_to_lfn+1)& (0+255),c
 29797  008242  90D8               	bcf	status,0,c
 29798  008244  342C               	rlcf	fatfs_filename_to_lfn@i,w,c
 29799  008246  6ED9               	movwf	fsr2l,c
 29800  008248  342D               	rlcf	fatfs_filename_to_lfn@i+1,w,c
 29801  00824A  6EDA               	movwf	fsr2h,c
 29802  00824C  5014               	movf	??_fatfs_filename_to_lfn,w,c
 29803  00824E  26D9               	addwf	fsr2l,f,c
 29804  008250  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29805  008252  22DA               	addwfc	fsr2h,f,c
 29806  008254  CFDE F016          	movff	postinc2,??_fatfs_filename_to_lfn+2
 29807  008258  CFDD F017          	movff	postdec2,??_fatfs_filename_to_lfn+3
 29808  00825C  5016               	movf	??_fatfs_filename_to_lfn+2,w,c
 29809  00825E  240F               	addwf	fatfs_filename_to_lfn@buffer,w,c
 29810  008260  6ED9               	movwf	fsr2l,c
 29811  008262  5017               	movf	??_fatfs_filename_to_lfn+3,w,c
 29812  008264  2010               	addwfc	fatfs_filename_to_lfn@buffer+1,w,c
 29813  008266  6EDA               	movwf	fsr2h,c
 29814  008268  68DF               	setf	indf2,c
 29815                           
 29816                           ;fat_misc.c: 241: buffer[nameIndexes[i]+1] = 0xFF;
 29817  00826A  0E1A               	movlw	low fatfs_filename_to_lfn@nameIndexes
 29818  00826C  6E14               	movwf	??_fatfs_filename_to_lfn& (0+255),c
 29819  00826E  0E00               	movlw	high fatfs_filename_to_lfn@nameIndexes
 29820  008270  6E15               	movwf	(??_fatfs_filename_to_lfn+1)& (0+255),c
 29821  008272  90D8               	bcf	status,0,c
 29822  008274  342C               	rlcf	fatfs_filename_to_lfn@i,w,c
 29823  008276  6ED9               	movwf	fsr2l,c
 29824  008278  342D               	rlcf	fatfs_filename_to_lfn@i+1,w,c
 29825  00827A  6EDA               	movwf	fsr2h,c
 29826  00827C  5014               	movf	??_fatfs_filename_to_lfn,w,c
 29827  00827E  26D9               	addwf	fsr2l,f,c
 29828  008280  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29829  008282  22DA               	addwfc	fsr2h,f,c
 29830  008284  CFDE F016          	movff	postinc2,??_fatfs_filename_to_lfn+2
 29831  008288  CFDD F017          	movff	postdec2,??_fatfs_filename_to_lfn+3
 29832  00828C  2A16               	incf	??_fatfs_filename_to_lfn+2,f,c
 29833  00828E  0E00               	movlw	0
 29834  008290  2217               	addwfc	??_fatfs_filename_to_lfn+3,f,c
 29835  008292  5016               	movf	??_fatfs_filename_to_lfn+2,w,c
 29836  008294  240F               	addwf	fatfs_filename_to_lfn@buffer,w,c
 29837  008296  6ED9               	movwf	fsr2l,c
 29838  008298  5017               	movf	??_fatfs_filename_to_lfn+3,w,c
 29839  00829A  2010               	addwfc	fatfs_filename_to_lfn@buffer+1,w,c
 29840  00829C  6EDA               	movwf	fsr2h,c
 29841  00829E  0EFF               	movlw	255
 29842  0082A0                     L100:
 29843  0082A0  6EDF               	movwf	indf2,c
 29844  0082A2                     l10242:
 29845  0082A2  4A2C               	infsnz	fatfs_filename_to_lfn@i,f,c
 29846  0082A4  2A2D               	incf	fatfs_filename_to_lfn@i+1,f,c
 29847  0082A6  D761               	goto	L101
 29848  0082A8                     l1002:
 29849  0082A8  0012               	return	
 29850  0082AA                     __end_of_fatfs_filename_to_lfn:
 29851                           	opt stack 0
 29852                           tosu	equ	0xFFF
 29853                           tosh	equ	0xFFE
 29854                           tosl	equ	0xFFD
 29855                           pclath	equ	0xFFA
 29856                           tblptru	equ	0xFF8
 29857                           tblptrh	equ	0xFF7
 29858                           tblptrl	equ	0xFF6
 29859                           tablat	equ	0xFF5
 29860                           prodh	equ	0xFF4
 29861                           prodl	equ	0xFF3
 29862                           indf0	equ	0xFEF
 29863                           postinc0	equ	0xFEE
 29864                           fsr0h	equ	0xFEA
 29865                           fsr0l	equ	0xFE9
 29866                           wreg	equ	0xFE8
 29867                           indf1	equ	0xFE7
 29868                           postinc1	equ	0xFE6
 29869                           postdec1	equ	0xFE5
 29870                           fsr1h	equ	0xFE2
 29871                           fsr1l	equ	0xFE1
 29872                           indf2	equ	0xFDF
 29873                           postinc2	equ	0xFDE
 29874                           postdec2	equ	0xFDD
 29875                           fsr2h	equ	0xFDA
 29876                           fsr2l	equ	0xFD9
 29877                           status	equ	0xFD8
 29878                           
 29879 ;; *************** function _fatfs_lfn_entries_required *****************
 29880 ;; Defined at:
 29881 ;;		line 193 in file "fat_misc.c"
 29882 ;; Parameters:    Size  Location     Type
 29883 ;;  filename        2    8[COMRAM] PTR unsigned char 
 29884 ;;		 -> RAM(3967), NULL(0), 
 29885 ;; Auto vars:     Size  Location     Type
 29886 ;;  length          2   10[COMRAM] int 
 29887 ;; Return value:  Size  Location     Type
 29888 ;;                  2    8[COMRAM] int 
 29889 ;; Registers used:
 29890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 29891 ;; Tracked objects:
 29892 ;;		On entry : 0/0
 29893 ;;		On exit  : 0/0
 29894 ;;		Unchanged: 0/0
 29895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29896 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29897 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29899 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29900 ;;Total ram usage:        4 bytes
 29901 ;; Hardware stack levels used:    1
 29902 ;; Hardware stack levels required when called:    1
 29903 ;; This function calls:
 29904 ;;		___awdiv
 29905 ;;		_strlen
 29906 ;; This function is called by:
 29907 ;;		_fatfs_filename_to_lfn
 29908 ;;		_fatfs_add_file_entry
 29909 ;; This function uses a non-reentrant model
 29910 ;;
 29911                           
 29912                           	psect	text85
 29913  004286                     __ptext85:
 29914                           	opt stack 0
 29915  004286                     _fatfs_lfn_entries_required:
 29916                           	opt stack 24
 29917                           
 29918                           ;fat_misc.c: 195: int length = (int)strlen(filename);
 29919                           
 29920                           ;incstack = 0
 29921  004286  C00A  F002         	movff	fatfs_lfn_entries_required@filename+1,strlen@s+1
 29922  00428A  C009  F001         	movff	fatfs_lfn_entries_required@filename,strlen@s
 29923  00428E  EC71  F022         	call	_strlen	;wreg free
 29924  004292  C001  F00B         	movff	?_strlen,fatfs_lfn_entries_required@length
 29925  004296  C002  F00C         	movff	?_strlen+1,fatfs_lfn_entries_required@length+1
 29926                           
 29927                           ;fat_misc.c: 197: if (length)
 29928  00429A  500C               	movf	fatfs_lfn_entries_required@length+1,w,c
 29929  00429C  100B               	iorwf	fatfs_lfn_entries_required@length,w,c
 29930  00429E  E010               	bz	l9484
 29931                           
 29932                           ;fat_misc.c: 198: return (length + 5 - 1) / 5;
 29933  0042A0  0E04               	movlw	4
 29934  0042A2  240B               	addwf	fatfs_lfn_entries_required@length,w,c
 29935  0042A4  6E01               	movwf	___awdiv@dividend,c
 29936  0042A6  0E00               	movlw	0
 29937  0042A8  200C               	addwfc	fatfs_lfn_entries_required@length+1,w,c
 29938  0042AA  6E02               	movwf	___awdiv@dividend+1,c
 29939  0042AC  6A04               	clrf	___awdiv@divisor+1,c
 29940  0042AE  0E05               	movlw	5
 29941  0042B0  6E03               	movwf	___awdiv@divisor,c
 29942  0042B2  EC10  F02A         	call	___awdiv	;wreg free
 29943  0042B6  C001  F009         	movff	?___awdiv,?_fatfs_lfn_entries_required
 29944  0042BA  C002  F00A         	movff	?___awdiv+1,?_fatfs_lfn_entries_required+1
 29945  0042BE  D003               	goto	l986
 29946  0042C0                     l9484:
 29947                           
 29948                           ;fat_misc.c: 199: else
 29949                           ;fat_misc.c: 200: return 0;
 29950  0042C0  0E00               	movlw	0
 29951  0042C2  6E0A               	movwf	?_fatfs_lfn_entries_required+1,c
 29952  0042C4  6E09               	movwf	?_fatfs_lfn_entries_required,c
 29953  0042C6                     l986:
 29954  0042C6  0012               	return	
 29955  0042C8                     __end_of_fatfs_lfn_entries_required:
 29956                           	opt stack 0
 29957                           tosu	equ	0xFFF
 29958                           tosh	equ	0xFFE
 29959                           tosl	equ	0xFFD
 29960                           pclath	equ	0xFFA
 29961                           tblptru	equ	0xFF8
 29962                           tblptrh	equ	0xFF7
 29963                           tblptrl	equ	0xFF6
 29964                           tablat	equ	0xFF5
 29965                           prodh	equ	0xFF4
 29966                           prodl	equ	0xFF3
 29967                           indf0	equ	0xFEF
 29968                           postinc0	equ	0xFEE
 29969                           fsr0h	equ	0xFEA
 29970                           fsr0l	equ	0xFE9
 29971                           wreg	equ	0xFE8
 29972                           indf1	equ	0xFE7
 29973                           postinc1	equ	0xFE6
 29974                           postdec1	equ	0xFE5
 29975                           fsr1h	equ	0xFE2
 29976                           fsr1l	equ	0xFE1
 29977                           indf2	equ	0xFDF
 29978                           postinc2	equ	0xFDE
 29979                           postdec2	equ	0xFDD
 29980                           fsr2h	equ	0xFDA
 29981                           fsr2l	equ	0xFD9
 29982                           status	equ	0xFD8
 29983                           
 29984 ;; *************** function ___awdiv *****************
 29985 ;; Defined at:
 29986 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 29987 ;; Parameters:    Size  Location     Type
 29988 ;;  dividend        2    0[COMRAM] int 
 29989 ;;  divisor         2    2[COMRAM] int 
 29990 ;; Auto vars:     Size  Location     Type
 29991 ;;  quotient        2    6[COMRAM] int 
 29992 ;;  sign            1    5[COMRAM] unsigned char 
 29993 ;;  counter         1    4[COMRAM] unsigned char 
 29994 ;; Return value:  Size  Location     Type
 29995 ;;                  2    0[COMRAM] int 
 29996 ;; Registers used:
 29997 ;;		wreg, status,2, status,0, prodl
 29998 ;; Tracked objects:
 29999 ;;		On entry : 0/0
 30000 ;;		On exit  : 0/0
 30001 ;;		Unchanged: 0/0
 30002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30003 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30004 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30006 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30007 ;;Total ram usage:        8 bytes
 30008 ;; Hardware stack levels used:    1
 30009 ;; This function calls:
 30010 ;;		Nothing
 30011 ;; This function is called by:
 30012 ;;		_fl_fread
 30013 ;;		_fatfs_lfn_entries_required
 30014 ;; This function uses a non-reentrant model
 30015 ;;
 30016                           
 30017                           	psect	text86
 30018  005420                     __ptext86:
 30019                           	opt stack 0
 30020  005420                     ___awdiv:
 30021                           	opt stack 24
 30022                           
 30023                           ;incstack = 0
 30024  005420  6A06               	clrf	___awdiv@sign,c
 30025  005422  5004               	movf	___awdiv@divisor+1,w,c
 30026  005424  0A80               	xorlw	128
 30027  005426  6EF3               	movwf	prodl,c
 30028  005428  0E80               	movlw	128
 30029  00542A  5CF3               	subwf	prodl,w,c
 30030  00542C  0E00               	movlw	0
 30031  00542E  B4D8               	btfsc	status,2,c
 30032  005430  5C03               	subwf	___awdiv@divisor,w,c
 30033  005432  E206               	bc	l9022
 30034  005434  6C03               	negf	___awdiv@divisor,c
 30035  005436  1E04               	comf	___awdiv@divisor+1,f,c
 30036  005438  B0D8               	btfsc	status,0,c
 30037  00543A  2A04               	incf	___awdiv@divisor+1,f,c
 30038  00543C  0E01               	movlw	1
 30039  00543E  6E06               	movwf	___awdiv@sign,c
 30040  005440                     l9022:
 30041  005440  5002               	movf	___awdiv@dividend+1,w,c
 30042  005442  0A80               	xorlw	128
 30043  005444  6EF3               	movwf	prodl,c
 30044  005446  0E80               	movlw	128
 30045  005448  5CF3               	subwf	prodl,w,c
 30046  00544A  0E00               	movlw	0
 30047  00544C  B4D8               	btfsc	status,2,c
 30048  00544E  5C01               	subwf	___awdiv@dividend,w,c
 30049  005450  E206               	bc	l9028
 30050  005452  6C01               	negf	___awdiv@dividend,c
 30051  005454  1E02               	comf	___awdiv@dividend+1,f,c
 30052  005456  B0D8               	btfsc	status,0,c
 30053  005458  2A02               	incf	___awdiv@dividend+1,f,c
 30054  00545A  0E01               	movlw	1
 30055  00545C  1A06               	xorwf	___awdiv@sign,f,c
 30056  00545E                     l9028:
 30057  00545E  6A08               	clrf	___awdiv@quotient+1,c
 30058  005460  6A07               	clrf	___awdiv@quotient,c
 30059  005462  5004               	movf	___awdiv@divisor+1,w,c
 30060  005464  1003               	iorwf	___awdiv@divisor,w,c
 30061  005466  E01B               	bz	l9050
 30062  005468  0E01               	movlw	1
 30063  00546A  6E05               	movwf	___awdiv@counter,c
 30064  00546C  D004               	goto	l9036
 30065  00546E                     l9034:
 30066  00546E  90D8               	bcf	status,0,c
 30067  005470  3603               	rlcf	___awdiv@divisor,f,c
 30068  005472  3604               	rlcf	___awdiv@divisor+1,f,c
 30069  005474  2A05               	incf	___awdiv@counter,f,c
 30070  005476                     l9036:
 30071  005476  AE04               	btfss	___awdiv@divisor+1,7,c
 30072  005478  D7FA               	goto	l9034
 30073  00547A                     l9038:
 30074  00547A  90D8               	bcf	status,0,c
 30075  00547C  3607               	rlcf	___awdiv@quotient,f,c
 30076  00547E  3608               	rlcf	___awdiv@quotient+1,f,c
 30077  005480  5003               	movf	___awdiv@divisor,w,c
 30078  005482  5C01               	subwf	___awdiv@dividend,w,c
 30079  005484  5004               	movf	___awdiv@divisor+1,w,c
 30080  005486  5802               	subwfb	___awdiv@dividend+1,w,c
 30081  005488  E305               	bnc	l9046
 30082  00548A  5003               	movf	___awdiv@divisor,w,c
 30083  00548C  5E01               	subwf	___awdiv@dividend,f,c
 30084  00548E  5004               	movf	___awdiv@divisor+1,w,c
 30085  005490  5A02               	subwfb	___awdiv@dividend+1,f,c
 30086  005492  8007               	bsf	___awdiv@quotient,0,c
 30087  005494                     l9046:
 30088  005494  90D8               	bcf	status,0,c
 30089  005496  3204               	rrcf	___awdiv@divisor+1,f,c
 30090  005498  3203               	rrcf	___awdiv@divisor,f,c
 30091  00549A  2E05               	decfsz	___awdiv@counter,f,c
 30092  00549C  D7EE               	goto	l9038
 30093  00549E                     l9050:
 30094  00549E  5006               	movf	___awdiv@sign,w,c
 30095  0054A0  E004               	bz	l9054
 30096  0054A2  6C07               	negf	___awdiv@quotient,c
 30097  0054A4  1E08               	comf	___awdiv@quotient+1,f,c
 30098  0054A6  B0D8               	btfsc	status,0,c
 30099  0054A8  2A08               	incf	___awdiv@quotient+1,f,c
 30100  0054AA                     l9054:
 30101  0054AA  C007  F001         	movff	___awdiv@quotient,?___awdiv
 30102  0054AE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 30103  0054B2  0012               	return	
 30104  0054B4                     __end_of___awdiv:
 30105                           	opt stack 0
 30106                           tosu	equ	0xFFF
 30107                           tosh	equ	0xFFE
 30108                           tosl	equ	0xFFD
 30109                           pclath	equ	0xFFA
 30110                           tblptru	equ	0xFF8
 30111                           tblptrh	equ	0xFF7
 30112                           tblptrl	equ	0xFF6
 30113                           tablat	equ	0xFF5
 30114                           prodh	equ	0xFF4
 30115                           prodl	equ	0xFF3
 30116                           indf0	equ	0xFEF
 30117                           postinc0	equ	0xFEE
 30118                           fsr0h	equ	0xFEA
 30119                           fsr0l	equ	0xFE9
 30120                           wreg	equ	0xFE8
 30121                           indf1	equ	0xFE7
 30122                           postinc1	equ	0xFE6
 30123                           postdec1	equ	0xFE5
 30124                           fsr1h	equ	0xFE2
 30125                           fsr1l	equ	0xFE1
 30126                           indf2	equ	0xFDF
 30127                           postinc2	equ	0xFDE
 30128                           postdec2	equ	0xFDD
 30129                           fsr2h	equ	0xFDA
 30130                           fsr2l	equ	0xFD9
 30131                           status	equ	0xFD8
 30132                           
 30133 ;; *************** function __open_directory *****************
 30134 ;; Defined at:
 30135 ;;		line 128 in file "fat_filelib.c"
 30136 ;; Parameters:    Size  Location     Type
 30137 ;;  path            2   56[BANK0 ] PTR unsigned char 
 30138 ;;		 -> STR_67(2), STR_64(2), m(30), RAM(3967), 
 30139 ;;		 -> NULL(0), 
 30140 ;;  pathCluster     2   58[BANK0 ] PTR unsigned long 
 30141 ;;		 -> fl_opendir@cluster(4), RAM(3967), NULL(0), 
 30142 ;; Auto vars:     Size  Location     Type
 30143 ;;  sfEntry        32   82[BANK0 ] struct fat_dir_entry
 30144 ;;  currentfolde   10   64[BANK0 ] unsigned char [10]
 30145 ;;  startcluster    4   76[BANK0 ] unsigned long 
 30146 ;;  sublevel        2   80[BANK0 ] int 
 30147 ;;  levels          2   74[BANK0 ] int 
 30148 ;; Return value:  Size  Location     Type
 30149 ;;                  2   56[BANK0 ] int 
 30150 ;; Registers used:
 30151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30152 ;; Tracked objects:
 30153 ;;		On entry : 0/0
 30154 ;;		On exit  : 0/0
 30155 ;;		Unchanged: 0/0
 30156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30157 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30158 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30159 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30160 ;;      Totals:         0      58       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30161 ;;Total ram usage:       58 bytes
 30162 ;; Hardware stack levels used:    1
 30163 ;; Hardware stack levels required when called:    8
 30164 ;; This function calls:
 30165 ;;		_fatfs_entry_is_dir
 30166 ;;		_fatfs_get_file_entry
 30167 ;;		_fatfs_get_root_cluster
 30168 ;;		_fatfs_get_substring
 30169 ;;		_fatfs_total_path_levels
 30170 ;; This function is called by:
 30171 ;;		__create_directory
 30172 ;;		__open_file
 30173 ;;		__create_file
 30174 ;;		_fl_opendir
 30175 ;; This function uses a non-reentrant model
 30176 ;;
 30177                           
 30178                           	psect	text87
 30179  006818                     __ptext87:
 30180                           	opt stack 0
 30181  006818                     __open_directory:
 30182                           	opt stack 20
 30183                           
 30184                           ;fat_filelib.c: 130: int levels;
 30185                           ;fat_filelib.c: 131: int sublevel;
 30186                           ;fat_filelib.c: 132: char currentfolder[10];
 30187                           ;fat_filelib.c: 133: struct fat_dir_entry sfEntry;
 30188                           ;fat_filelib.c: 134: uint32 startcluster;
 30189                           ;fat_filelib.c: 137: startcluster = fatfs_get_root_cluster(&_fs);
 30190                           
 30191                           ;incstack = 0
 30192  006818  0E09               	movlw	high __fs
 30193  00681A  6E02               	movwf	fatfs_get_root_cluster@fs+1,c
 30194  00681C  0E78               	movlw	low __fs
 30195  00681E  6E01               	movwf	fatfs_get_root_cluster@fs,c
 30196  006820  EC86  F01F         	call	_fatfs_get_root_cluster	;wreg free
 30197  006824  C001  F0CC         	movff	?_fatfs_get_root_cluster,__open_directory@startcluster
 30198  006828  C002  F0CD         	movff	?_fatfs_get_root_cluster+1,__open_directory@startcluster+1
 30199  00682C  C003  F0CE         	movff	?_fatfs_get_root_cluster+2,__open_directory@startcluster+2
 30200  006830  C004  F0CF         	movff	?_fatfs_get_root_cluster+3,__open_directory@startcluster+3
 30201                           
 30202                           ;fat_filelib.c: 140: levels = fatfs_total_path_levels(path);
 30203  006834  C0B9  F002         	movff	__open_directory@path+1,fatfs_total_path_levels@path+1
 30204  006838  0100               	movlb	0	; () banked
 30205  00683A  C0B8  F001         	movff	__open_directory@path,fatfs_total_path_levels@path
 30206  00683E  ECCD  F032         	call	_fatfs_total_path_levels	;wreg free
 30207  006842  C001  F0CA         	movff	?_fatfs_total_path_levels,__open_directory@levels
 30208  006846  C002  F0CB         	movff	?_fatfs_total_path_levels+1,__open_directory@levels+1
 30209                           
 30210                           ;fat_filelib.c: 143: for (sublevel=0;sublevel<(levels+1);sublevel++)
 30211  00684A  0100               	movlb	0	; () banked
 30212  00684C  6BD1               	clrf	(__open_directory@sublevel+1)& (0+255),b
 30213  00684E  6BD0               	clrf	__open_directory@sublevel& (0+255),b
 30214  006850  D065               	goto	l10588
 30215  006852                     l10566:
 30216                           
 30217                           ; BSR set to: 0
 30218                           ;fat_filelib.c: 144: {
 30219                           ;fat_filelib.c: 145: if (fatfs_get_substring(path, sublevel, currentfolder, sizeof(curre
      +                          ntfolder)) == -1)
 30220  006852  C0B9  F008         	movff	__open_directory@path+1,fatfs_get_substring@path+1
 30221  006856  C0B8  F007         	movff	__open_directory@path,fatfs_get_substring@path
 30222  00685A  C0D0  F009         	movff	__open_directory@sublevel,fatfs_get_substring@levelreq
 30223  00685E  C0D1  F00A         	movff	__open_directory@sublevel+1,fatfs_get_substring@levelreq+1
 30224  006862  0E00               	movlw	high __open_directory@currentfolder
 30225  006864  6E0C               	movwf	fatfs_get_substring@output+1,c
 30226  006866  0100               	movlb	0	; () banked
 30227  006868  0EC0               	movlw	low __open_directory@currentfolder
 30228  00686A  6E0B               	movwf	fatfs_get_substring@output,c
 30229  00686C  6A0E               	clrf	fatfs_get_substring@max_len+1,c
 30230  00686E  0E0A               	movlw	10
 30231  006870  6E0D               	movwf	fatfs_get_substring@max_len,c
 30232  006872  EC5E  F03D         	call	_fatfs_get_substring	;wreg free
 30233  006876  2807               	incf	?_fatfs_get_substring,w,c
 30234  006878  B4D8               	btfsc	status,2,c
 30235  00687A  2808               	incf	?_fatfs_get_substring+1,w,c
 30236  00687C  E048               	bz	l10582
 30237                           
 30238                           ;fat_filelib.c: 149: if (fatfs_get_file_entry(&_fs, startcluster, currentfolder,&sfEntry
      +                          ))
 30239                           
 30240                           ; BSR set to: 0
 30241                           
 30242                           ; BSR set to: 0
 30243                           
 30244                           ;fat_filelib.c: 146: return 0;
 30245  00687E  0E09               	movlw	high __fs
 30246  006880  0100               	movlb	0	; () banked
 30247  006882  6FAD               	movwf	(fatfs_get_file_entry@fs+1)& (0+255),b
 30248  006884  0E78               	movlw	low __fs
 30249  006886  6FAC               	movwf	fatfs_get_file_entry@fs& (0+255),b
 30250  006888  C0CC  F0AE         	movff	__open_directory@startcluster,fatfs_get_file_entry@Cluster
 30251  00688C  C0CD  F0AF         	movff	__open_directory@startcluster+1,fatfs_get_file_entry@Cluster+1
 30252  006890  C0CE  F0B0         	movff	__open_directory@startcluster+2,fatfs_get_file_entry@Cluster+2
 30253  006894  C0CF  F0B1         	movff	__open_directory@startcluster+3,fatfs_get_file_entry@Cluster+3
 30254  006898  0E00               	movlw	high __open_directory@currentfolder
 30255  00689A  6FB3               	movwf	(fatfs_get_file_entry@name_to_find+1)& (0+255),b
 30256  00689C  0EC0               	movlw	low __open_directory@currentfolder
 30257  00689E  6FB2               	movwf	fatfs_get_file_entry@name_to_find& (0+255),b
 30258  0068A0  0E00               	movlw	high __open_directory@sfEntry
 30259  0068A2  6FB5               	movwf	(fatfs_get_file_entry@sfEntry+1)& (0+255),b
 30260  0068A4  0ED2               	movlw	low __open_directory@sfEntry
 30261  0068A6  6FB4               	movwf	fatfs_get_file_entry@sfEntry& (0+255),b
 30262  0068A8  ECB5  F049         	call	_fatfs_get_file_entry	;wreg free
 30263  0068AC  C0AC  F0BC         	movff	?_fatfs_get_file_entry,??__open_directory
 30264  0068B0  C0AD  F0BD         	movff	?_fatfs_get_file_entry+1,??__open_directory+1
 30265  0068B4  C0AE  F0BE         	movff	?_fatfs_get_file_entry+2,??__open_directory+2
 30266  0068B8  C0AF  F0BF         	movff	?_fatfs_get_file_entry+3,??__open_directory+3
 30267  0068BC  0100               	movlb	0	; () banked
 30268  0068BE  51BF               	movf	(??__open_directory+3)& (0+255),w,b
 30269  0068C0  11BC               	iorwf	??__open_directory& (0+255),w,b
 30270  0068C2  11BD               	iorwf	(??__open_directory+1)& (0+255),w,b
 30271  0068C4  11BE               	iorwf	(??__open_directory+2)& (0+255),w,b
 30272  0068C6  E023               	bz	l10582
 30273                           
 30274                           ; BSR set to: 0
 30275                           ;fat_filelib.c: 150: {
 30276                           ;fat_filelib.c: 152: if (fatfs_entry_is_dir(&sfEntry))
 30277  0068C8  0E00               	movlw	high __open_directory@sfEntry
 30278  0068CA  6E02               	movwf	fatfs_entry_is_dir@entry+1,c
 30279  0068CC  0ED2               	movlw	low __open_directory@sfEntry
 30280  0068CE  6E01               	movwf	fatfs_entry_is_dir@entry,c
 30281  0068D0  ECA6  F01F         	call	_fatfs_entry_is_dir	;wreg free
 30282  0068D4  5002               	movf	?_fatfs_entry_is_dir+1,w,c
 30283  0068D6  1001               	iorwf	?_fatfs_entry_is_dir,w,c
 30284  0068D8  E01A               	bz	l10582
 30285                           
 30286                           ;fat_filelib.c: 153: startcluster = ((((uint32)sfEntry.FstClusHI))<<16) + (sfEntry.FstCl
      +                          usLO);
 30287  0068DA  0100               	movlb	0	; () banked
 30288  0068DC  51E6               	movf	(__open_directory@sfEntry+20)& (0+255),w,b
 30289  0068DE  6FBC               	movwf	??__open_directory& (0+255),b
 30290  0068E0  51E7               	movf	(__open_directory@sfEntry+21)& (0+255),w,b
 30291  0068E2  6FBD               	movwf	(??__open_directory+1)& (0+255),b
 30292  0068E4  6BBE               	clrf	(??__open_directory+2)& (0+255),b
 30293  0068E6  6BBF               	clrf	(??__open_directory+3)& (0+255),b
 30294  0068E8  C0BD  F0BF         	movff	??__open_directory+1,??__open_directory+3
 30295  0068EC  C0BC  F0BE         	movff	??__open_directory,??__open_directory+2
 30296  0068F0  6BBD               	clrf	(??__open_directory+1)& (0+255),b
 30297  0068F2  6BBC               	clrf	??__open_directory& (0+255),b
 30298  0068F4  51EC               	movf	(__open_directory@sfEntry+26)& (0+255),w,b
 30299  0068F6  25BC               	addwf	??__open_directory& (0+255),w,b
 30300  0068F8  6FCC               	movwf	__open_directory@startcluster& (0+255),b
 30301  0068FA  51ED               	movf	(__open_directory@sfEntry+27)& (0+255),w,b
 30302  0068FC  21BD               	addwfc	(??__open_directory+1)& (0+255),w,b
 30303  0068FE  6FCD               	movwf	(__open_directory@startcluster+1)& (0+255),b
 30304  006900  0E00               	movlw	0
 30305  006902  21BE               	addwfc	(??__open_directory+2)& (0+255),w,b
 30306  006904  6FCE               	movwf	(__open_directory@startcluster+2)& (0+255),b
 30307  006906  0E00               	movlw	0
 30308  006908  21BF               	addwfc	(??__open_directory+3)& (0+255),w,b
 30309  00690A  6FCF               	movwf	(__open_directory@startcluster+3)& (0+255),b
 30310  00690C  D004               	goto	l10586
 30311  00690E                     l10582:
 30312                           
 30313                           ; BSR set to: 0
 30314                           ;fat_filelib.c: 157: else
 30315                           ;fat_filelib.c: 158: return 0;
 30316  00690E  0E00               	movlw	0
 30317  006910  0100               	movlb	0	; () banked
 30318  006912  6FB9               	movwf	(?__open_directory+1)& (0+255),b
 30319  006914  D022               	goto	L102
 30320  006916                     l10586:
 30321                           
 30322                           ; BSR set to: 0
 30323  006916  0100               	movlb	0	; () banked
 30324  006918  4BD0               	infsnz	__open_directory@sublevel& (0+255),f,b
 30325  00691A  2BD1               	incf	(__open_directory@sublevel+1)& (0+255),f,b
 30326  00691C                     l10588:
 30327                           
 30328                           ; BSR set to: 0
 30329  00691C  0E01               	movlw	1
 30330  00691E  0100               	movlb	0	; () banked
 30331  006920  25CA               	addwf	__open_directory@levels& (0+255),w,b
 30332  006922  6FBC               	movwf	??__open_directory& (0+255),b
 30333  006924  0E00               	movlw	0
 30334  006926  21CB               	addwfc	(__open_directory@levels+1)& (0+255),w,b
 30335  006928  6FBD               	movwf	(??__open_directory+1)& (0+255),b
 30336  00692A  51D1               	movf	(__open_directory@sublevel+1)& (0+255),w,b
 30337  00692C  0A80               	xorlw	128
 30338  00692E  6FBE               	movwf	(??__open_directory+2)& (0+255),b
 30339  006930  51BC               	movf	??__open_directory& (0+255),w,b
 30340  006932  5DD0               	subwf	__open_directory@sublevel& (0+255),w,b
 30341  006934  51BD               	movf	(??__open_directory+1)& (0+255),w,b
 30342  006936  0A80               	xorlw	128
 30343  006938  59BE               	subwfb	(??__open_directory+2)& (0+255),w,b
 30344  00693A  E38B               	bnc	l10566
 30345                           
 30346                           ; BSR set to: 0
 30347                           ;fat_filelib.c: 159: }
 30348                           ;fat_filelib.c: 161: *pathCluster = startcluster;
 30349                           
 30350                           ; BSR set to: 0
 30351  00693C  C0BA  FFD9         	movff	__open_directory@pathCluster,fsr2l
 30352  006940  C0BB  FFDA         	movff	__open_directory@pathCluster+1,fsr2h
 30353  006944  C0CC  FFDE         	movff	__open_directory@startcluster,postinc2
 30354  006948  C0CD  FFDE         	movff	__open_directory@startcluster+1,postinc2
 30355  00694C  C0CE  FFDE         	movff	__open_directory@startcluster+2,postinc2
 30356  006950  C0CF  FFDE         	movff	__open_directory@startcluster+3,postinc2
 30357                           
 30358                           ; BSR set to: 0
 30359                           ;fat_filelib.c: 162: return 1;
 30360  006954  0E00               	movlw	0
 30361  006956  6FB9               	movwf	(?__open_directory+1)& (0+255),b
 30362  006958  0E01               	movlw	1
 30363  00695A                     L102:
 30364  00695A  0100               	movlb	0	; () banked
 30365  00695C  6FB8               	movwf	?__open_directory& (0+255),b
 30366                           
 30367                           ; BSR set to: 0
 30368                           
 30369                           ; BSR set to: 0
 30370  00695E  0012               	return	
 30371  006960                     __end_of__open_directory:
 30372                           	opt stack 0
 30373                           tosu	equ	0xFFF
 30374                           tosh	equ	0xFFE
 30375                           tosl	equ	0xFFD
 30376                           pclath	equ	0xFFA
 30377                           tblptru	equ	0xFF8
 30378                           tblptrh	equ	0xFF7
 30379                           tblptrl	equ	0xFF6
 30380                           tablat	equ	0xFF5
 30381                           prodh	equ	0xFF4
 30382                           prodl	equ	0xFF3
 30383                           indf0	equ	0xFEF
 30384                           postinc0	equ	0xFEE
 30385                           fsr0h	equ	0xFEA
 30386                           fsr0l	equ	0xFE9
 30387                           wreg	equ	0xFE8
 30388                           indf1	equ	0xFE7
 30389                           postinc1	equ	0xFE6
 30390                           postdec1	equ	0xFE5
 30391                           fsr1h	equ	0xFE2
 30392                           fsr1l	equ	0xFE1
 30393                           indf2	equ	0xFDF
 30394                           postinc2	equ	0xFDE
 30395                           postdec2	equ	0xFDD
 30396                           fsr2h	equ	0xFDA
 30397                           fsr2l	equ	0xFD9
 30398                           status	equ	0xFD8
 30399                           
 30400 ;; *************** function _fatfs_total_path_levels *****************
 30401 ;; Defined at:
 30402 ;;		line 44 in file "fat_string.c"
 30403 ;; Parameters:    Size  Location     Type
 30404 ;;  path            2    0[COMRAM] PTR unsigned char 
 30405 ;;		 -> STR_67(2), STR_64(2), s(17), m(30), 
 30406 ;;		 -> RAM(3967), NULL(0), 
 30407 ;; Auto vars:     Size  Location     Type
 30408 ;;  levels          2    4[COMRAM] int 
 30409 ;;  expectedchar    1    6[COMRAM] unsigned char 
 30410 ;; Return value:  Size  Location     Type
 30411 ;;                  2    0[COMRAM] int 
 30412 ;; Registers used:
 30413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 30414 ;; Tracked objects:
 30415 ;;		On entry : 0/0
 30416 ;;		On exit  : 0/0
 30417 ;;		Unchanged: 0/0
 30418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30420 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30421 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30422 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30423 ;;Total ram usage:        7 bytes
 30424 ;; Hardware stack levels used:    1
 30425 ;; This function calls:
 30426 ;;		Nothing
 30427 ;; This function is called by:
 30428 ;;		__open_directory
 30429 ;;		_fl_opendir
 30430 ;;		_fatfs_split_path
 30431 ;; This function uses a non-reentrant model
 30432 ;;
 30433                           
 30434                           	psect	text88
 30435  00659A                     __ptext88:
 30436                           	opt stack 0
 30437  00659A                     _fatfs_total_path_levels:
 30438                           	opt stack 28
 30439                           
 30440                           ;fat_string.c: 46: int levels = 0;
 30441                           
 30442                           ; BSR set to: 0
 30443                           ;incstack = 0
 30444  00659A  6A06               	clrf	fatfs_total_path_levels@levels+1,c
 30445  00659C  6A05               	clrf	fatfs_total_path_levels@levels,c
 30446                           
 30447                           ;fat_string.c: 47: char expectedchar;
 30448                           ;fat_string.c: 49: if (!path)
 30449  00659E  5002               	movf	fatfs_total_path_levels@path+1,w,c
 30450  0065A0  1001               	iorwf	fatfs_total_path_levels@path,w,c
 30451  0065A2  E050               	bz	l1058
 30452                           
 30453                           ;fat_string.c: 55: if (*path == '/')
 30454                           
 30455                           ;fat_string.c: 50: return -1;
 30456  0065A4  C001  FFF6         	movff	fatfs_total_path_levels@path,tblptrl
 30457  0065A8  C002  FFF7         	movff	fatfs_total_path_levels@path+1,tblptrh
 30458  0065AC  0E00               	movlw	low (__mediumconst shr (0+16))
 30459  0065AE  6EF8               	movwf	tblptru,c
 30460  0065B0  0E0F               	movlw	(high __ramtop+-1)
 30461  0065B2  64F7               	cpfsgt	tblptrh,c
 30462  0065B4  D003               	bra	u10797
 30463  0065B6  0008               	tblrd		*
 30464  0065B8  50F5               	movf	tablat,w,c
 30465  0065BA  D005               	bra	u10790
 30466  0065BC                     u10797:
 30467  0065BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 30468  0065C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 30469  0065C4  50EF               	movf	indf0,w,c
 30470  0065C6                     u10790:
 30471  0065C6  0A2F               	xorlw	47
 30472  0065C8  E105               	bnz	l9796
 30473                           
 30474                           ;fat_string.c: 56: {
 30475                           ;fat_string.c: 57: expectedchar = '/';
 30476  0065CA  0E2F               	movlw	47
 30477  0065CC  6E07               	movwf	fatfs_total_path_levels@expectedchar,c
 30478                           
 30479                           ;fat_string.c: 58: path++;
 30480  0065CE  4A01               	infsnz	fatfs_total_path_levels@path,f,c
 30481  0065D0  2A02               	incf	fatfs_total_path_levels@path+1,f,c
 30482                           
 30483                           ;fat_string.c: 59: }
 30484  0065D2  D068               	goto	l9814
 30485  0065D4                     l9796:
 30486                           
 30487                           ;fat_string.c: 60: else if (path[1] == ':' || path[2] == '\\')
 30488  0065D4  2801               	incf	fatfs_total_path_levels@path,w,c
 30489  0065D6  6E03               	movwf	??_fatfs_total_path_levels& (0+255),c
 30490  0065D8  0E00               	movlw	0
 30491  0065DA  2002               	addwfc	fatfs_total_path_levels@path+1,w,c
 30492  0065DC  6E04               	movwf	(??_fatfs_total_path_levels+1)& (0+255),c
 30493  0065DE  C003  FFF6         	movff	??_fatfs_total_path_levels,tblptrl
 30494  0065E2  C004  FFF7         	movff	??_fatfs_total_path_levels+1,tblptrh
 30495  0065E6  0E00               	movlw	low (__mediumconst shr (0+16))
 30496  0065E8  6EF8               	movwf	tblptru,c
 30497  0065EA  0E0F               	movlw	(high __ramtop+-1)
 30498  0065EC  64F7               	cpfsgt	tblptrh,c
 30499  0065EE  D003               	bra	u10817
 30500  0065F0  0008               	tblrd		*
 30501  0065F2  50F5               	movf	tablat,w,c
 30502  0065F4  D005               	bra	u10810
 30503  0065F6                     u10817:
 30504  0065F6  CFF6 FFE9          	movff	tblptrl,fsr0l
 30505  0065FA  CFF7 FFEA          	movff	tblptrh,fsr0h
 30506  0065FE  50EF               	movf	indf0,w,c
 30507  006600                     u10810:
 30508  006600  0A3A               	xorlw	58
 30509  006602  E019               	bz	l9800
 30510  006604  0E02               	movlw	2
 30511  006606  2401               	addwf	fatfs_total_path_levels@path,w,c
 30512  006608  6E03               	movwf	??_fatfs_total_path_levels& (0+255),c
 30513  00660A  0E00               	movlw	0
 30514  00660C  2002               	addwfc	fatfs_total_path_levels@path+1,w,c
 30515  00660E  6E04               	movwf	(??_fatfs_total_path_levels+1)& (0+255),c
 30516  006610  C003  FFF6         	movff	??_fatfs_total_path_levels,tblptrl
 30517  006614  C004  FFF7         	movff	??_fatfs_total_path_levels+1,tblptrh
 30518  006618  0E00               	movlw	low (__mediumconst shr (0+16))
 30519  00661A  6EF8               	movwf	tblptru,c
 30520  00661C  0E0F               	movlw	(high __ramtop+-1)
 30521  00661E  64F7               	cpfsgt	tblptrh,c
 30522  006620  D003               	bra	u10837
 30523  006622  0008               	tblrd		*
 30524  006624  50F5               	movf	tablat,w,c
 30525  006626  D005               	bra	u10830
 30526  006628                     u10837:
 30527  006628  CFF6 FFE9          	movff	tblptrl,fsr0l
 30528  00662C  CFF7 FFEA          	movff	tblptrh,fsr0h
 30529  006630  50EF               	movf	indf0,w,c
 30530  006632                     u10830:
 30531  006632  0A5C               	xorlw	92
 30532  006634  E107               	bnz	l1058
 30533  006636                     l9800:
 30534                           
 30535                           ;fat_string.c: 61: {
 30536                           ;fat_string.c: 62: expectedchar = '\\';
 30537  006636  0E5C               	movlw	92
 30538  006638  6E07               	movwf	fatfs_total_path_levels@expectedchar,c
 30539                           
 30540                           ;fat_string.c: 63: path += 3;
 30541  00663A  0E03               	movlw	3
 30542  00663C  2601               	addwf	fatfs_total_path_levels@path,f,c
 30543  00663E  0E00               	movlw	0
 30544  006640  2202               	addwfc	fatfs_total_path_levels@path+1,f,c
 30545                           
 30546                           ;fat_string.c: 64: }
 30547  006642  D030               	goto	l9814
 30548  006644                     l1058:
 30549                           
 30550                           ;fat_string.c: 65: else
 30551                           ;fat_string.c: 66: return -1;
 30552  006644  6801               	setf	?_fatfs_total_path_levels,c
 30553  006646  6802               	setf	?_fatfs_total_path_levels+1,c
 30554  006648  D046               	goto	l1055
 30555  00664A                     l9804:
 30556                           
 30557                           ;fat_string.c: 73: {
 30558                           ;fat_string.c: 75: if (*path == expectedchar) { path++; break; }
 30559  00664A  C001  FFF6         	movff	fatfs_total_path_levels@path,tblptrl
 30560  00664E  C002  FFF7         	movff	fatfs_total_path_levels@path+1,tblptrh
 30561  006652  0E00               	movlw	low (__mediumconst shr (0+16))
 30562  006654  6EF8               	movwf	tblptru,c
 30563  006656  0E0F               	movlw	(high __ramtop+-1)
 30564  006658  64F7               	cpfsgt	tblptrh,c
 30565  00665A  D003               	bra	u10857
 30566  00665C  0008               	tblrd		*
 30567  00665E  50F5               	movf	tablat,w,c
 30568  006660  D005               	bra	u10850
 30569  006662                     u10857:
 30570  006662  CFF6 FFE9          	movff	tblptrl,fsr0l
 30571  006666  CFF7 FFEA          	movff	tblptrh,fsr0h
 30572  00666A  50EF               	movf	indf0,w,c
 30573  00666C                     u10850:
 30574  00666C  1807               	xorwf	fatfs_total_path_levels@expectedchar,w,c
 30575  00666E  E103               	bnz	l9808
 30576  006670  4A01               	infsnz	fatfs_total_path_levels@path,f,c
 30577  006672  2A02               	incf	fatfs_total_path_levels@path+1,f,c
 30578  006674  D015               	goto	l9812
 30579  006676                     l9808:
 30580                           
 30581                           ;fat_string.c: 76: path++;
 30582  006676  4A01               	infsnz	fatfs_total_path_levels@path,f,c
 30583  006678  2A02               	incf	fatfs_total_path_levels@path+1,f,c
 30584  00667A                     l9810:
 30585  00667A  C001  FFF6         	movff	fatfs_total_path_levels@path,tblptrl
 30586  00667E  C002  FFF7         	movff	fatfs_total_path_levels@path+1,tblptrh
 30587  006682  0E00               	movlw	low (__mediumconst shr (0+16))
 30588  006684  6EF8               	movwf	tblptru,c
 30589  006686  0E0F               	movlw	(high __ramtop+-1)
 30590  006688  64F7               	cpfsgt	tblptrh,c
 30591  00668A  D003               	bra	u10877
 30592  00668C  0008               	tblrd		*
 30593  00668E  50F5               	movf	tablat,w,c
 30594  006690  D005               	bra	u10870
 30595  006692                     u10877:
 30596  006692  CFF6 FFE9          	movff	tblptrl,fsr0l
 30597  006696  CFF7 FFEA          	movff	tblptrh,fsr0h
 30598  00669A  50EF               	movf	indf0,w,c
 30599  00669C                     u10870:
 30600  00669C  0900               	iorlw	0
 30601  00669E  E1D5               	bnz	l9804
 30602  0066A0                     l9812:
 30603                           
 30604                           ;fat_string.c: 77: }
 30605                           ;fat_string.c: 80: levels++;
 30606  0066A0  4A05               	infsnz	fatfs_total_path_levels@levels,f,c
 30607  0066A2  2A06               	incf	fatfs_total_path_levels@levels+1,f,c
 30608  0066A4                     l9814:
 30609  0066A4  C001  FFF6         	movff	fatfs_total_path_levels@path,tblptrl
 30610  0066A8  C002  FFF7         	movff	fatfs_total_path_levels@path+1,tblptrh
 30611  0066AC  0E00               	movlw	low (__mediumconst shr (0+16))
 30612  0066AE  6EF8               	movwf	tblptru,c
 30613  0066B0  0E0F               	movlw	(high __ramtop+-1)
 30614  0066B2  64F7               	cpfsgt	tblptrh,c
 30615  0066B4  D003               	bra	u10897
 30616  0066B6  0008               	tblrd		*
 30617  0066B8  50F5               	movf	tablat,w,c
 30618  0066BA  D005               	bra	u10890
 30619  0066BC                     u10897:
 30620  0066BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 30621  0066C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 30622  0066C4  50EF               	movf	indf0,w,c
 30623  0066C6                     u10890:
 30624  0066C6  0900               	iorlw	0
 30625  0066C8  E1D8               	bnz	l9810
 30626                           
 30627                           ;fat_string.c: 81: }
 30628                           ;fat_string.c: 84: return levels-1;
 30629  0066CA  0EFF               	movlw	255
 30630  0066CC  2405               	addwf	fatfs_total_path_levels@levels,w,c
 30631  0066CE  6E01               	movwf	?_fatfs_total_path_levels,c
 30632  0066D0  0EFF               	movlw	255
 30633  0066D2  2006               	addwfc	fatfs_total_path_levels@levels+1,w,c
 30634  0066D4  6E02               	movwf	?_fatfs_total_path_levels+1,c
 30635  0066D6                     l1055:
 30636  0066D6  0012               	return	
 30637  0066D8                     __end_of_fatfs_total_path_levels:
 30638                           	opt stack 0
 30639                           tosu	equ	0xFFF
 30640                           tosh	equ	0xFFE
 30641                           tosl	equ	0xFFD
 30642                           pclath	equ	0xFFA
 30643                           tblptru	equ	0xFF8
 30644                           tblptrh	equ	0xFF7
 30645                           tblptrl	equ	0xFF6
 30646                           tablat	equ	0xFF5
 30647                           prodh	equ	0xFF4
 30648                           prodl	equ	0xFF3
 30649                           indf0	equ	0xFEF
 30650                           postinc0	equ	0xFEE
 30651                           fsr0h	equ	0xFEA
 30652                           fsr0l	equ	0xFE9
 30653                           wreg	equ	0xFE8
 30654                           indf1	equ	0xFE7
 30655                           postinc1	equ	0xFE6
 30656                           postdec1	equ	0xFE5
 30657                           fsr1h	equ	0xFE2
 30658                           fsr1l	equ	0xFE1
 30659                           indf2	equ	0xFDF
 30660                           postinc2	equ	0xFDE
 30661                           postdec2	equ	0xFDD
 30662                           fsr2h	equ	0xFDA
 30663                           fsr2l	equ	0xFD9
 30664                           status	equ	0xFD8
 30665                           
 30666 ;; *************** function _fatfs_get_substring *****************
 30667 ;; Defined at:
 30668 ;;		line 92 in file "fat_string.c"
 30669 ;; Parameters:    Size  Location     Type
 30670 ;;  path            2    6[COMRAM] PTR unsigned char 
 30671 ;;		 -> STR_67(2), STR_64(2), s(17), m(30), 
 30672 ;;		 -> RAM(3967), NULL(0), 
 30673 ;;  levelreq        2    8[COMRAM] int 
 30674 ;;  output          2   10[COMRAM] PTR unsigned char 
 30675 ;;		 -> _open_directory@currentfolder(10), RAM(3967), NULL(0), 
 30676 ;;  max_len         2   12[COMRAM] int 
 30677 ;; Auto vars:     Size  Location     Type
 30678 ;;  copypnt         2   26[COMRAM] int 
 30679 ;;  levels          2   23[COMRAM] int 
 30680 ;;  pathlen         2   21[COMRAM] int 
 30681 ;;  i               2   19[COMRAM] int 
 30682 ;;  expectedchar    1   25[COMRAM] unsigned char 
 30683 ;; Return value:  Size  Location     Type
 30684 ;;                  2    6[COMRAM] int 
 30685 ;; Registers used:
 30686 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 30687 ;; Tracked objects:
 30688 ;;		On entry : 0/0
 30689 ;;		On exit  : 0/0
 30690 ;;		Unchanged: 0/0
 30691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30692 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30693 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30694 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30695 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30696 ;;Total ram usage:       22 bytes
 30697 ;; Hardware stack levels used:    1
 30698 ;; Hardware stack levels required when called:    1
 30699 ;; This function calls:
 30700 ;;		_strlen
 30701 ;; This function is called by:
 30702 ;;		__open_directory
 30703 ;;		_fatfs_split_path
 30704 ;; This function uses a non-reentrant model
 30705 ;;
 30706                           
 30707                           	psect	text89
 30708  007ABC                     __ptext89:
 30709                           	opt stack 0
 30710  007ABC                     _fatfs_get_substring:
 30711                           	opt stack 26
 30712                           
 30713                           ;fat_string.c: 94: int i;
 30714                           ;fat_string.c: 95: int pathlen=0;
 30715                           
 30716                           ;incstack = 0
 30717  007ABC  6A17               	clrf	fatfs_get_substring@pathlen+1,c
 30718  007ABE  6A16               	clrf	fatfs_get_substring@pathlen,c
 30719                           
 30720                           ;fat_string.c: 96: int levels=0;
 30721  007AC0  6A19               	clrf	fatfs_get_substring@levels+1,c
 30722  007AC2  6A18               	clrf	fatfs_get_substring@levels,c
 30723                           
 30724                           ;fat_string.c: 97: int copypnt=0;
 30725  007AC4  6A1C               	clrf	fatfs_get_substring@copypnt+1,c
 30726  007AC6  6A1B               	clrf	fatfs_get_substring@copypnt,c
 30727                           
 30728                           ;fat_string.c: 98: char expectedchar;
 30729                           ;fat_string.c: 100: if (!path || max_len <= 0)
 30730  007AC8  5008               	movf	fatfs_get_substring@path+1,w,c
 30731  007ACA  1007               	iorwf	fatfs_get_substring@path,w,c
 30732  007ACC  E101 D0E1          	bz	l1086
 30733  007AD0  500E               	movf	fatfs_get_substring@max_len+1,w,c
 30734  007AD2  0A80               	xorlw	128
 30735  007AD4  6EF3               	movwf	prodl,c
 30736  007AD6  0E80               	movlw	128
 30737  007AD8  5CF3               	subwf	prodl,w,c
 30738  007ADA  0E01               	movlw	1
 30739  007ADC  B4D8               	btfsc	status,2,c
 30740  007ADE  5C0D               	subwf	fatfs_get_substring@max_len,w,c
 30741  007AE0  E201 D0D7          	bnc	l1086
 30742                           
 30743                           ;fat_string.c: 106: if (*path == '/')
 30744                           
 30745                           ;fat_string.c: 101: return -1;
 30746  007AE4  C007  FFF6         	movff	fatfs_get_substring@path,tblptrl
 30747  007AE8  C008  FFF7         	movff	fatfs_get_substring@path+1,tblptrh
 30748  007AEC  0E00               	movlw	low (__mediumconst shr (0+16))
 30749  007AEE  6EF8               	movwf	tblptru,c
 30750  007AF0  0E0F               	movlw	(high __ramtop+-1)
 30751  007AF2  64F7               	cpfsgt	tblptrh,c
 30752  007AF4  D003               	bra	u10937
 30753  007AF6  0008               	tblrd		*
 30754  007AF8  50F5               	movf	tablat,w,c
 30755  007AFA  D005               	bra	u10930
 30756  007AFC                     u10937:
 30757  007AFC  CFF6 FFE9          	movff	tblptrl,fsr0l
 30758  007B00  CFF7 FFEA          	movff	tblptrh,fsr0h
 30759  007B04  50EF               	movf	indf0,w,c
 30760  007B06                     u10930:
 30761  007B06  0A2F               	xorlw	47
 30762  007B08  E105               	bnz	l9832
 30763                           
 30764                           ;fat_string.c: 107: {
 30765                           ;fat_string.c: 108: expectedchar = '/';
 30766  007B0A  0E2F               	movlw	47
 30767  007B0C  6E1A               	movwf	fatfs_get_substring@expectedchar,c
 30768                           
 30769                           ;fat_string.c: 109: path++;
 30770  007B0E  4A07               	infsnz	fatfs_get_substring@path,f,c
 30771  007B10  2A08               	incf	fatfs_get_substring@path+1,f,c
 30772                           
 30773                           ;fat_string.c: 110: }
 30774  007B12  D038               	goto	l9840
 30775  007B14                     l9832:
 30776                           
 30777                           ;fat_string.c: 111: else if (path[1] == ':' || path[2] == '\\')
 30778  007B14  2807               	incf	fatfs_get_substring@path,w,c
 30779  007B16  6E0F               	movwf	??_fatfs_get_substring& (0+255),c
 30780  007B18  0E00               	movlw	0
 30781  007B1A  2008               	addwfc	fatfs_get_substring@path+1,w,c
 30782  007B1C  6E10               	movwf	(??_fatfs_get_substring+1)& (0+255),c
 30783  007B1E  C00F  FFF6         	movff	??_fatfs_get_substring,tblptrl
 30784  007B22  C010  FFF7         	movff	??_fatfs_get_substring+1,tblptrh
 30785  007B26  0E00               	movlw	low (__mediumconst shr (0+16))
 30786  007B28  6EF8               	movwf	tblptru,c
 30787  007B2A  0E0F               	movlw	(high __ramtop+-1)
 30788  007B2C  64F7               	cpfsgt	tblptrh,c
 30789  007B2E  D003               	bra	u10957
 30790  007B30  0008               	tblrd		*
 30791  007B32  50F5               	movf	tablat,w,c
 30792  007B34  D005               	bra	u10950
 30793  007B36                     u10957:
 30794  007B36  CFF6 FFE9          	movff	tblptrl,fsr0l
 30795  007B3A  CFF7 FFEA          	movff	tblptrh,fsr0h
 30796  007B3E  50EF               	movf	indf0,w,c
 30797  007B40                     u10950:
 30798  007B40  0A3A               	xorlw	58
 30799  007B42  E01A               	bz	l9836
 30800  007B44  0E02               	movlw	2
 30801  007B46  2407               	addwf	fatfs_get_substring@path,w,c
 30802  007B48  6E0F               	movwf	??_fatfs_get_substring& (0+255),c
 30803  007B4A  0E00               	movlw	0
 30804  007B4C  2008               	addwfc	fatfs_get_substring@path+1,w,c
 30805  007B4E  6E10               	movwf	(??_fatfs_get_substring+1)& (0+255),c
 30806  007B50  C00F  FFF6         	movff	??_fatfs_get_substring,tblptrl
 30807  007B54  C010  FFF7         	movff	??_fatfs_get_substring+1,tblptrh
 30808  007B58  0E00               	movlw	low (__mediumconst shr (0+16))
 30809  007B5A  6EF8               	movwf	tblptru,c
 30810  007B5C  0E0F               	movlw	(high __ramtop+-1)
 30811  007B5E  64F7               	cpfsgt	tblptrh,c
 30812  007B60  D003               	bra	u10977
 30813  007B62  0008               	tblrd		*
 30814  007B64  50F5               	movf	tablat,w,c
 30815  007B66  D005               	bra	u10970
 30816  007B68                     u10977:
 30817  007B68  CFF6 FFE9          	movff	tblptrl,fsr0l
 30818  007B6C  CFF7 FFEA          	movff	tblptrh,fsr0h
 30819  007B70  50EF               	movf	indf0,w,c
 30820  007B72                     u10970:
 30821  007B72  0A5C               	xorlw	92
 30822  007B74  E001 D08D          	bnz	l1086
 30823  007B78                     l9836:
 30824                           
 30825                           ;fat_string.c: 112: {
 30826                           ;fat_string.c: 113: expectedchar = '\\';
 30827  007B78  0E5C               	movlw	92
 30828  007B7A  6E1A               	movwf	fatfs_get_substring@expectedchar,c
 30829                           
 30830                           ;fat_string.c: 114: path += 3;
 30831  007B7C  0E03               	movlw	3
 30832  007B7E  2607               	addwf	fatfs_get_substring@path,f,c
 30833  007B80  0E00               	movlw	0
 30834  007B82  2208               	addwfc	fatfs_get_substring@path+1,f,c
 30835  007B84                     l9840:
 30836                           
 30837                           ;fat_string.c: 120: pathlen = (int)strlen (path);
 30838  007B84  C008  F002         	movff	fatfs_get_substring@path+1,strlen@s+1
 30839  007B88  C007  F001         	movff	fatfs_get_substring@path,strlen@s
 30840  007B8C  EC71  F022         	call	_strlen	;wreg free
 30841  007B90  C001  F016         	movff	?_strlen,fatfs_get_substring@pathlen
 30842  007B94  C002  F017         	movff	?_strlen+1,fatfs_get_substring@pathlen+1
 30843                           
 30844                           ;fat_string.c: 123: for (i = 0; i<pathlen; i++)
 30845  007B98  6A15               	clrf	fatfs_get_substring@i+1,c
 30846  007B9A  6A14               	clrf	fatfs_get_substring@i,c
 30847  007B9C  D05F               	goto	l9862
 30848  007B9E                     l9844:
 30849                           
 30850                           ;fat_string.c: 124: {
 30851                           ;fat_string.c: 126: if (*path == expectedchar) levels++;
 30852  007B9E  C007  FFF6         	movff	fatfs_get_substring@path,tblptrl
 30853  007BA2  C008  FFF7         	movff	fatfs_get_substring@path+1,tblptrh
 30854  007BA6  0E00               	movlw	low (__mediumconst shr (0+16))
 30855  007BA8  6EF8               	movwf	tblptru,c
 30856  007BAA  0E0F               	movlw	(high __ramtop+-1)
 30857  007BAC  64F7               	cpfsgt	tblptrh,c
 30858  007BAE  D003               	bra	u10997
 30859  007BB0  0008               	tblrd		*
 30860  007BB2  50F5               	movf	tablat,w,c
 30861  007BB4  D005               	bra	u10990
 30862  007BB6                     u10997:
 30863  007BB6  CFF6 FFE9          	movff	tblptrl,fsr0l
 30864  007BBA  CFF7 FFEA          	movff	tblptrh,fsr0h
 30865  007BBE  50EF               	movf	indf0,w,c
 30866  007BC0                     u10990:
 30867  007BC0  181A               	xorwf	fatfs_get_substring@expectedchar,w,c
 30868  007BC2  E102               	bnz	l9848
 30869  007BC4  4A18               	infsnz	fatfs_get_substring@levels,f,c
 30870  007BC6  2A19               	incf	fatfs_get_substring@levels+1,f,c
 30871  007BC8                     l9848:
 30872                           
 30873                           ;fat_string.c: 129: if ( (levels == levelreq) && (*path != expectedchar) && (copypnt < (
      +                          max_len-1)))
 30874  007BC8  500A               	movf	fatfs_get_substring@levelreq+1,w,c
 30875  007BCA  1819               	xorwf	fatfs_get_substring@levels+1,w,c
 30876  007BCC  E102               	bnz	u11015
 30877  007BCE  5009               	movf	fatfs_get_substring@levelreq,w,c
 30878  007BD0  1818               	xorwf	fatfs_get_substring@levels,w,c
 30879  007BD2                     u11015:
 30880  007BD2  E140               	bnz	l9858
 30881  007BD4  C007  FFF6         	movff	fatfs_get_substring@path,tblptrl
 30882  007BD8  C008  FFF7         	movff	fatfs_get_substring@path+1,tblptrh
 30883  007BDC  0E00               	movlw	low (__mediumconst shr (0+16))
 30884  007BDE  6EF8               	movwf	tblptru,c
 30885  007BE0  0E0F               	movlw	(high __ramtop+-1)
 30886  007BE2  64F7               	cpfsgt	tblptrh,c
 30887  007BE4  D003               	bra	u11027
 30888  007BE6  0008               	tblrd		*
 30889  007BE8  50F5               	movf	tablat,w,c
 30890  007BEA  D005               	bra	u11020
 30891  007BEC                     u11027:
 30892  007BEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 30893  007BF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 30894  007BF4  50EF               	movf	indf0,w,c
 30895  007BF6                     u11020:
 30896  007BF6  181A               	xorwf	fatfs_get_substring@expectedchar,w,c
 30897  007BF8  E02D               	bz	l9858
 30898  007BFA  680F               	setf	??_fatfs_get_substring& (0+255),c
 30899  007BFC  6810               	setf	(??_fatfs_get_substring+1)& (0+255),c
 30900  007BFE  C00D  F011         	movff	fatfs_get_substring@max_len,??_fatfs_get_substring+2
 30901  007C02  C00E  F012         	movff	fatfs_get_substring@max_len+1,??_fatfs_get_substring+3
 30902  007C06  500F               	movf	??_fatfs_get_substring,w,c
 30903  007C08  2611               	addwf	??_fatfs_get_substring+2,f,c
 30904  007C0A  5010               	movf	??_fatfs_get_substring+1,w,c
 30905  007C0C  2212               	addwfc	??_fatfs_get_substring+3,f,c
 30906  007C0E  501C               	movf	fatfs_get_substring@copypnt+1,w,c
 30907  007C10  0A80               	xorlw	128
 30908  007C12  6E13               	movwf	(??_fatfs_get_substring+4)& (0+255),c
 30909  007C14  5011               	movf	??_fatfs_get_substring+2,w,c
 30910  007C16  5C1B               	subwf	fatfs_get_substring@copypnt,w,c
 30911  007C18  5012               	movf	??_fatfs_get_substring+3,w,c
 30912  007C1A  0A80               	xorlw	128
 30913  007C1C  5813               	subwfb	(??_fatfs_get_substring+4)& (0+255),w,c
 30914  007C1E  E21A               	bc	l9858
 30915                           
 30916                           ;fat_string.c: 130: output[copypnt++] = *path;
 30917  007C20  C007  FFF6         	movff	fatfs_get_substring@path,tblptrl
 30918  007C24  C008  FFF7         	movff	fatfs_get_substring@path+1,tblptrh
 30919  007C28  0E00               	movlw	low (__mediumconst shr (0+16))
 30920  007C2A  6EF8               	movwf	tblptru,c
 30921  007C2C  501B               	movf	fatfs_get_substring@copypnt,w,c
 30922  007C2E  240B               	addwf	fatfs_get_substring@output,w,c
 30923  007C30  6ED9               	movwf	fsr2l,c
 30924  007C32  501C               	movf	fatfs_get_substring@copypnt+1,w,c
 30925  007C34  200C               	addwfc	fatfs_get_substring@output+1,w,c
 30926  007C36  6EDA               	movwf	fsr2h,c
 30927  007C38  0E0F               	movlw	(high __ramtop+-1)
 30928  007C3A  64F7               	cpfsgt	tblptrh,c
 30929  007C3C  D003               	bra	u11057
 30930  007C3E  0008               	tblrd		*
 30931  007C40  50F5               	movf	tablat,w,c
 30932  007C42  D005               	bra	u11050
 30933  007C44                     u11057:
 30934  007C44  CFF6 FFE9          	movff	tblptrl,fsr0l
 30935  007C48  CFF7 FFEA          	movff	tblptrh,fsr0h
 30936  007C4C  50EF               	movf	indf0,w,c
 30937  007C4E                     u11050:
 30938  007C4E  6EDF               	movwf	indf2,c
 30939  007C50  4A1B               	infsnz	fatfs_get_substring@copypnt,f,c
 30940  007C52  2A1C               	incf	fatfs_get_substring@copypnt+1,f,c
 30941  007C54                     l9858:
 30942                           
 30943                           ;fat_string.c: 133: path++;
 30944  007C54  4A07               	infsnz	fatfs_get_substring@path,f,c
 30945  007C56  2A08               	incf	fatfs_get_substring@path+1,f,c
 30946  007C58  4A14               	infsnz	fatfs_get_substring@i,f,c
 30947  007C5A  2A15               	incf	fatfs_get_substring@i+1,f,c
 30948  007C5C                     l9862:
 30949  007C5C  5015               	movf	fatfs_get_substring@i+1,w,c
 30950  007C5E  0A80               	xorlw	128
 30951  007C60  6E0F               	movwf	??_fatfs_get_substring& (0+255),c
 30952  007C62  5016               	movf	fatfs_get_substring@pathlen,w,c
 30953  007C64  5C14               	subwf	fatfs_get_substring@i,w,c
 30954  007C66  5017               	movf	fatfs_get_substring@pathlen+1,w,c
 30955  007C68  0A80               	xorlw	128
 30956  007C6A  580F               	subwfb	??_fatfs_get_substring& (0+255),w,c
 30957  007C6C  E398               	bnc	l9844
 30958                           
 30959                           ;fat_string.c: 134: }
 30960                           ;fat_string.c: 137: output[copypnt] = '\0';
 30961  007C6E  501B               	movf	fatfs_get_substring@copypnt,w,c
 30962  007C70  240B               	addwf	fatfs_get_substring@output,w,c
 30963  007C72  6ED9               	movwf	fsr2l,c
 30964  007C74  501C               	movf	fatfs_get_substring@copypnt+1,w,c
 30965  007C76  200C               	addwfc	fatfs_get_substring@output+1,w,c
 30966  007C78  6EDA               	movwf	fsr2h,c
 30967  007C7A  0E00               	movlw	0
 30968  007C7C  6EDF               	movwf	indf2,c
 30969                           
 30970                           ;fat_string.c: 140: if (output[0] != '\0')
 30971  007C7E  C00B  FFD9         	movff	fatfs_get_substring@output,fsr2l
 30972  007C82  C00C  FFDA         	movff	fatfs_get_substring@output+1,fsr2h
 30973  007C86  50DF               	movf	indf2,w,c
 30974  007C88  E004               	bz	l1086
 30975                           
 30976                           ;fat_string.c: 141: return 0;
 30977  007C8A  0E00               	movlw	0
 30978  007C8C  6E08               	movwf	?_fatfs_get_substring+1,c
 30979  007C8E  6E07               	movwf	?_fatfs_get_substring,c
 30980  007C90  D002               	goto	l1074
 30981  007C92                     l1086:
 30982                           
 30983                           ;fat_string.c: 142: else
 30984                           ;fat_string.c: 143: return -1;
 30985  007C92  6807               	setf	?_fatfs_get_substring,c
 30986  007C94  6808               	setf	?_fatfs_get_substring+1,c
 30987  007C96                     l1074:
 30988  007C96  0012               	return	
 30989  007C98                     __end_of_fatfs_get_substring:
 30990                           	opt stack 0
 30991                           tosu	equ	0xFFF
 30992                           tosh	equ	0xFFE
 30993                           tosl	equ	0xFFD
 30994                           pclath	equ	0xFFA
 30995                           tblptru	equ	0xFF8
 30996                           tblptrh	equ	0xFF7
 30997                           tblptrl	equ	0xFF6
 30998                           tablat	equ	0xFF5
 30999                           prodh	equ	0xFF4
 31000                           prodl	equ	0xFF3
 31001                           indf0	equ	0xFEF
 31002                           postinc0	equ	0xFEE
 31003                           fsr0h	equ	0xFEA
 31004                           fsr0l	equ	0xFE9
 31005                           wreg	equ	0xFE8
 31006                           indf1	equ	0xFE7
 31007                           postinc1	equ	0xFE6
 31008                           postdec1	equ	0xFE5
 31009                           fsr1h	equ	0xFE2
 31010                           fsr1l	equ	0xFE1
 31011                           indf2	equ	0xFDF
 31012                           postinc2	equ	0xFDE
 31013                           postdec2	equ	0xFDD
 31014                           fsr2h	equ	0xFDA
 31015                           fsr2l	equ	0xFD9
 31016                           status	equ	0xFD8
 31017                           
 31018 ;; *************** function _fatfs_get_root_cluster *****************
 31019 ;; Defined at:
 31020 ;;		line 398 in file "fat_access.c"
 31021 ;; Parameters:    Size  Location     Type
 31022 ;;  fs              2    0[COMRAM] PTR struct fatfs
 31023 ;;		 -> _fs(1095), 
 31024 ;; Auto vars:     Size  Location     Type
 31025 ;;		None
 31026 ;; Return value:  Size  Location     Type
 31027 ;;                  4    0[COMRAM] unsigned long 
 31028 ;; Registers used:
 31029 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31030 ;; Tracked objects:
 31031 ;;		On entry : 0/0
 31032 ;;		On exit  : 0/0
 31033 ;;		Unchanged: 0/0
 31034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31038 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31039 ;;Total ram usage:        4 bytes
 31040 ;; Hardware stack levels used:    1
 31041 ;; This function calls:
 31042 ;;		Nothing
 31043 ;; This function is called by:
 31044 ;;		__open_directory
 31045 ;;		__create_directory
 31046 ;;		__open_file
 31047 ;;		__create_file
 31048 ;;		_fl_opendir
 31049 ;; This function uses a non-reentrant model
 31050 ;;
 31051                           
 31052                           	psect	text90
 31053  003F0C                     __ptext90:
 31054                           	opt stack 0
 31055  003F0C                     _fatfs_get_root_cluster:
 31056                           	opt stack 28
 31057                           
 31058                           ;fat_access.c: 401: return fs->rootdir_first_cluster;
 31059                           
 31060                           ;incstack = 0
 31061  003F0C  EE20 F005          	lfsr	2,5
 31062  003F10  5001               	movf	fatfs_get_root_cluster@fs,w,c
 31063  003F12  26D9               	addwf	fsr2l,f,c
 31064  003F14  5002               	movf	fatfs_get_root_cluster@fs+1,w,c
 31065  003F16  22DA               	addwfc	fsr2h,f,c
 31066  003F18  CFDE F001          	movff	postinc2,?_fatfs_get_root_cluster
 31067  003F1C  CFDE F002          	movff	postinc2,?_fatfs_get_root_cluster+1
 31068  003F20  CFDE F003          	movff	postinc2,?_fatfs_get_root_cluster+2
 31069  003F24  CFDE F004          	movff	postinc2,?_fatfs_get_root_cluster+3
 31070  003F28  0012               	return	
 31071  003F2A                     __end_of_fatfs_get_root_cluster:
 31072                           	opt stack 0
 31073                           tosu	equ	0xFFF
 31074                           tosh	equ	0xFFE
 31075                           tosl	equ	0xFFD
 31076                           pclath	equ	0xFFA
 31077                           tblptru	equ	0xFF8
 31078                           tblptrh	equ	0xFF7
 31079                           tblptrl	equ	0xFF6
 31080                           tablat	equ	0xFF5
 31081                           prodh	equ	0xFF4
 31082                           prodl	equ	0xFF3
 31083                           indf0	equ	0xFEF
 31084                           postinc0	equ	0xFEE
 31085                           fsr0h	equ	0xFEA
 31086                           fsr0l	equ	0xFE9
 31087                           wreg	equ	0xFE8
 31088                           indf1	equ	0xFE7
 31089                           postinc1	equ	0xFE6
 31090                           postdec1	equ	0xFE5
 31091                           fsr1h	equ	0xFE2
 31092                           fsr1l	equ	0xFE1
 31093                           indf2	equ	0xFDF
 31094                           postinc2	equ	0xFDE
 31095                           postdec2	equ	0xFDD
 31096                           fsr2h	equ	0xFDA
 31097                           fsr2l	equ	0xFD9
 31098                           status	equ	0xFD8
 31099                           
 31100 ;; *************** function _fatfs_get_file_entry *****************
 31101 ;; Defined at:
 31102 ;;		line 406 in file "fat_access.c"
 31103 ;; Parameters:    Size  Location     Type
 31104 ;;  fs              2   44[BANK0 ] PTR struct fatfs
 31105 ;;		 -> _fs(1095), 
 31106 ;;  Cluster         4   46[BANK0 ] unsigned long 
 31107 ;;  name_to_find    2   50[BANK0 ] PTR unsigned char 
 31108 ;;		 -> _open_directory@currentfolder(10), RAM(3967), NULL(0), 
 31109 ;;  sfEntry         2   52[BANK0 ] PTR struct fat_dir_entry
 31110 ;;		 -> _create_file@sfEntry(32), _open_file@sfEntry(32), _create_directory@sfEntry(32), _open_directory@sfEntry(32), 
 31111 ;; Auto vars:     Size  Location     Type
 31112 ;;  lfn            52   25[BANK1 ] struct lfn_cache
 31113 ;;  short_filena   13    0[BANK1 ] unsigned char [13]
 31114 ;;  directoryEnt    2   22[BANK1 ] PTR struct fat_dir_entry
 31115 ;;		 -> _fs.currentsector.sector(512), 
 31116 ;;  recordoffset    2   19[BANK1 ] unsigned short 
 31117 ;;  dotRequired     2   17[BANK1 ] int 
 31118 ;;  long_filenam    2   15[BANK1 ] PTR unsigned char 
 31119 ;;		 -> lfn.String(50), lfn.String(50), fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
 31120 ;;		 -> NULL(0), 
 31121 ;;  x               2   13[BANK1 ] int 
 31122 ;;  i               1   24[BANK1 ] unsigned char 
 31123 ;;  item            1   21[BANK1 ] unsigned char 
 31124 ;; Return value:  Size  Location     Type
 31125 ;;                  4   44[BANK0 ] unsigned long 
 31126 ;; Registers used:
 31127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31128 ;; Tracked objects:
 31129 ;;		On entry : 0/0
 31130 ;;		On exit  : 0/0
 31131 ;;		Unchanged: 0/0
 31132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31133 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31134 ;;      Locals:         0       0      77       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31135 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31136 ;;      Totals:         0      12      77       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31137 ;;Total ram usage:       89 bytes
 31138 ;; Hardware stack levels used:    1
 31139 ;; Hardware stack levels required when called:    7
 31140 ;; This function calls:
 31141 ;;		_fatfs_compare_names
 31142 ;;		_fatfs_entry_lfn_exists
 31143 ;;		_fatfs_entry_lfn_invalid
 31144 ;;		_fatfs_entry_lfn_text
 31145 ;;		_fatfs_entry_sfn_only
 31146 ;;		_fatfs_lfn_cache_entry
 31147 ;;		_fatfs_lfn_cache_get
 31148 ;;		_fatfs_lfn_cache_init
 31149 ;;		_fatfs_sector_reader
 31150 ;;		_memcpy
 31151 ;;		_memset
 31152 ;; This function is called by:
 31153 ;;		__open_directory
 31154 ;;		__create_directory
 31155 ;;		__open_file
 31156 ;;		__create_file
 31157 ;; This function uses a non-reentrant model
 31158 ;;
 31159                           
 31160                           	psect	text91
 31161  00936A                     __ptext91:
 31162                           	opt stack 0
 31163  00936A                     _fatfs_get_file_entry:
 31164                           	opt stack 20
 31165                           
 31166                           ;fat_access.c: 408: uint8 item=0;
 31167                           
 31168                           ;incstack = 0
 31169  00936A  0101               	movlb	1	; () banked
 31170  00936C  6B15               	clrf	fatfs_get_file_entry@item& (0+255),b
 31171                           
 31172                           ;fat_access.c: 409: uint16 recordoffset = 0;
 31173  00936E  6B14               	clrf	(fatfs_get_file_entry@recordoffset+1)& (0+255),b
 31174  009370  6B13               	clrf	fatfs_get_file_entry@recordoffset& (0+255),b
 31175                           
 31176                           ;fat_access.c: 410: uint8 i=0;
 31177  009372  6B18               	clrf	fatfs_get_file_entry@i& (0+255),b
 31178                           
 31179                           ;fat_access.c: 411: int x=0;
 31180  009374  6B0E               	clrf	(fatfs_get_file_entry@x+1)& (0+255),b
 31181  009376  6B0D               	clrf	fatfs_get_file_entry@x& (0+255),b
 31182                           
 31183                           ; BSR set to: 1
 31184                           ;fat_access.c: 412: char *long_filename = (0);
 31185  009378  6B10               	clrf	(fatfs_get_file_entry@long_filename+1)& (0+255),b
 31186  00937A  6B0F               	clrf	fatfs_get_file_entry@long_filename& (0+255),b
 31187                           
 31188                           ; BSR set to: 1
 31189                           ;fat_access.c: 413: char short_filename[13];
 31190                           ;fat_access.c: 414: struct lfn_cache lfn;
 31191                           ;fat_access.c: 415: int dotRequired = 0;
 31192  00937C  6B12               	clrf	(fatfs_get_file_entry@dotRequired+1)& (0+255),b
 31193  00937E  6B11               	clrf	fatfs_get_file_entry@dotRequired& (0+255),b
 31194                           
 31195                           ; BSR set to: 1
 31196                           ;fat_access.c: 416: struct fat_dir_entry *directoryEntry;
 31197                           ;fat_access.c: 418: fatfs_lfn_cache_init(&lfn, 1);
 31198  009380  0E01               	movlw	high fatfs_get_file_entry@lfn
 31199  009382  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
 31200  009384  0E19               	movlw	low fatfs_get_file_entry@lfn
 31201  009386  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
 31202  009388  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
 31203  00938A  0E01               	movlw	1
 31204  00938C  6E0B               	movwf	fatfs_lfn_cache_init@wipeTable,c
 31205  00938E  EC75  F023         	call	_fatfs_lfn_cache_init	;wreg free
 31206  009392                     l9636:
 31207                           
 31208                           ;fat_access.c: 422: {
 31209                           ;fat_access.c: 424: if (fatfs_sector_reader(fs, Cluster, x++, 0))
 31210  009392  C0AD  F081         	movff	fatfs_get_file_entry@fs+1,fatfs_sector_reader@fs+1
 31211  009396  C0AC  F080         	movff	fatfs_get_file_entry@fs,fatfs_sector_reader@fs
 31212  00939A  C0AE  F082         	movff	fatfs_get_file_entry@Cluster,fatfs_sector_reader@start_cluster
 31213  00939E  C0AF  F083         	movff	fatfs_get_file_entry@Cluster+1,fatfs_sector_reader@start_cluster+1
 31214  0093A2  C0B0  F084         	movff	fatfs_get_file_entry@Cluster+2,fatfs_sector_reader@start_cluster+2
 31215  0093A6  C0B1  F085         	movff	fatfs_get_file_entry@Cluster+3,fatfs_sector_reader@start_cluster+3
 31216  0093AA  0101               	movlb	1	; () banked
 31217  0093AC  510D               	movf	fatfs_get_file_entry@x& (0+255),w,b
 31218  0093AE  0100               	movlb	0	; () banked
 31219  0093B0  6FB6               	movwf	??_fatfs_get_file_entry& (0+255),b
 31220  0093B2  0101               	movlb	1	; () banked
 31221  0093B4  510E               	movf	(fatfs_get_file_entry@x+1)& (0+255),w,b
 31222  0093B6  0100               	movlb	0	; () banked
 31223  0093B8  6FB7               	movwf	(??_fatfs_get_file_entry+1)& (0+255),b
 31224  0093BA  0101               	movlb	1	; () banked
 31225  0093BC  4B0D               	infsnz	fatfs_get_file_entry@x& (0+255),f,b
 31226  0093BE  2B0E               	incf	(fatfs_get_file_entry@x+1)& (0+255),f,b
 31227  0093C0  C0B6  F086         	movff	??_fatfs_get_file_entry,fatfs_sector_reader@offset
 31228  0093C4  C0B7  F087         	movff	??_fatfs_get_file_entry+1,fatfs_sector_reader@offset+1
 31229  0093C8  0E00               	movlw	0
 31230  0093CA  0100               	movlb	0	; () banked
 31231  0093CC  BF87               	btfsc	(fatfs_sector_reader@offset+1)& (0+255),7,b
 31232  0093CE  0EFF               	movlw	-1
 31233  0093D0  6F88               	movwf	(fatfs_sector_reader@offset+2)& (0+255),b
 31234  0093D2  6F89               	movwf	(fatfs_sector_reader@offset+3)& (0+255),b
 31235  0093D4  0E00               	movlw	0
 31236  0093D6  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
 31237  0093D8  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
 31238  0093DA  ECD5  F052         	call	_fatfs_sector_reader	;wreg free
 31239  0093DE  0100               	movlb	0	; () banked
 31240  0093E0  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
 31241  0093E2  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
 31242  0093E4  E101 D138          	bz	l9726
 31243                           
 31244                           ; BSR set to: 0
 31245                           ;fat_access.c: 425: {
 31246                           ;fat_access.c: 427: for (item = 0; item < (512 / 32); item++)
 31247  0093E8  0101               	movlb	1	; () banked
 31248  0093EA  6B15               	clrf	fatfs_get_file_entry@item& (0+255),b
 31249                           
 31250                           ; BSR set to: 1
 31251  0093EC  0E0F               	movlw	15
 31252  0093EE  6515               	cpfsgt	fatfs_get_file_entry@item& (0+255),b
 31253  0093F0  D001               	goto	l9644
 31254  0093F2  D7CF               	goto	l9636
 31255  0093F4                     l9644:
 31256                           
 31257                           ; BSR set to: 1
 31258                           ;fat_access.c: 428: {
 31259                           ;fat_access.c: 430: recordoffset = 32 * item;
 31260  0093F4  0101               	movlb	1	; () banked
 31261  0093F6  5115               	movf	fatfs_get_file_entry@item& (0+255),w,b
 31262  0093F8  0D20               	mullw	32
 31263  0093FA  CFF3 F113          	movff	prodl,fatfs_get_file_entry@recordoffset
 31264  0093FE  CFF4 F114          	movff	prodh,fatfs_get_file_entry@recordoffset+1
 31265                           
 31266                           ; BSR set to: 1
 31267                           ;fat_access.c: 433: directoryEntry = (struct fat_dir_entry*)(fs->currentsector.sector+re
      +                          cordoffset);
 31268  009402  C0AC  F0B6         	movff	fatfs_get_file_entry@fs,??_fatfs_get_file_entry
 31269  009406  C0AD  F0B7         	movff	fatfs_get_file_entry@fs+1,??_fatfs_get_file_entry+1
 31270  00940A  5113               	movf	fatfs_get_file_entry@recordoffset& (0+255),w,b
 31271  00940C  0100               	movlb	0	; () banked
 31272  00940E  27B6               	addwf	??_fatfs_get_file_entry& (0+255),f,b
 31273  009410  0101               	movlb	1	; () banked
 31274  009412  5114               	movf	(fatfs_get_file_entry@recordoffset+1)& (0+255),w,b
 31275  009414  0100               	movlb	0	; () banked
 31276  009416  23B7               	addwfc	(??_fatfs_get_file_entry+1)& (0+255),f,b
 31277  009418  0E31               	movlw	49
 31278  00941A  25B6               	addwf	??_fatfs_get_file_entry& (0+255),w,b
 31279  00941C  0101               	movlb	1	; () banked
 31280  00941E  6F16               	movwf	fatfs_get_file_entry@directoryEntry& (0+255),b
 31281  009420  0E00               	movlw	0
 31282  009422  0100               	movlb	0	; () banked
 31283  009424  21B7               	addwfc	(??_fatfs_get_file_entry+1)& (0+255),w,b
 31284  009426  0101               	movlb	1	; () banked
 31285  009428  6F17               	movwf	(fatfs_get_file_entry@directoryEntry+1)& (0+255),b
 31286                           
 31287                           ; BSR set to: 1
 31288                           ;fat_access.c: 437: if (fatfs_entry_lfn_text(directoryEntry) )
 31289  00942A  C117  F002         	movff	fatfs_get_file_entry@directoryEntry+1,fatfs_entry_lfn_text@entry+1
 31290  00942E  C116  F001         	movff	fatfs_get_file_entry@directoryEntry,fatfs_entry_lfn_text@entry
 31291  009432  ECF0  F01F         	call	_fatfs_entry_lfn_text	;wreg free
 31292  009436  5002               	movf	?_fatfs_entry_lfn_text+1,w,c
 31293  009438  1001               	iorwf	?_fatfs_entry_lfn_text,w,c
 31294  00943A  E019               	bz	l9652
 31295                           
 31296                           ;fat_access.c: 438: fatfs_lfn_cache_entry(&lfn, fs->currentsector.sector+recordoffset);
 31297  00943C  0E01               	movlw	high fatfs_get_file_entry@lfn
 31298  00943E  6E02               	movwf	fatfs_lfn_cache_entry@lfn+1,c
 31299  009440  0E19               	movlw	low fatfs_get_file_entry@lfn
 31300  009442  6E01               	movwf	fatfs_lfn_cache_entry@lfn,c
 31301  009444  C0AC  F0B6         	movff	fatfs_get_file_entry@fs,??_fatfs_get_file_entry
 31302  009448  C0AD  F0B7         	movff	fatfs_get_file_entry@fs+1,??_fatfs_get_file_entry+1
 31303  00944C  0101               	movlb	1	; () banked
 31304  00944E  5113               	movf	fatfs_get_file_entry@recordoffset& (0+255),w,b
 31305  009450  0100               	movlb	0	; () banked
 31306  009452  27B6               	addwf	??_fatfs_get_file_entry& (0+255),f,b
 31307  009454  0101               	movlb	1	; () banked
 31308  009456  5114               	movf	(fatfs_get_file_entry@recordoffset+1)& (0+255),w,b
 31309  009458  0100               	movlb	0	; () banked
 31310  00945A  23B7               	addwfc	(??_fatfs_get_file_entry+1)& (0+255),f,b
 31311  00945C  0E31               	movlw	49
 31312  00945E  25B6               	addwf	??_fatfs_get_file_entry& (0+255),w,b
 31313  009460  6E03               	movwf	fatfs_lfn_cache_entry@entryBuffer,c
 31314  009462  0E00               	movlw	0
 31315  009464  21B7               	addwfc	(??_fatfs_get_file_entry+1)& (0+255),w,b
 31316  009466  6E04               	movwf	fatfs_lfn_cache_entry@entryBuffer+1,c
 31317  009468  EC9C  F067         	call	_fatfs_lfn_cache_entry	;wreg free
 31318  00946C  D0EF               	goto	l9722
 31319  00946E                     l9652:
 31320                           
 31321                           ;fat_access.c: 441: else if (fatfs_entry_lfn_invalid(directoryEntry) )
 31322  00946E  C117  F002         	movff	fatfs_get_file_entry@directoryEntry+1,fatfs_entry_lfn_invalid@entry+1
 31323  009472  0101               	movlb	1	; () banked
 31324  009474  C116  F001         	movff	fatfs_get_file_entry@directoryEntry,fatfs_entry_lfn_invalid@entry
 31325  009478  EC9A  F022         	call	_fatfs_entry_lfn_invalid	;wreg free
 31326  00947C  5002               	movf	?_fatfs_entry_lfn_invalid+1,w,c
 31327  00947E  1001               	iorwf	?_fatfs_entry_lfn_invalid,w,c
 31328  009480  E00B               	bz	l9656
 31329                           
 31330                           ;fat_access.c: 442: fatfs_lfn_cache_init(&lfn, 0);
 31331  009482  0E01               	movlw	high fatfs_get_file_entry@lfn
 31332  009484  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
 31333  009486  0101               	movlb	1	; () banked
 31334  009488  0E19               	movlw	low fatfs_get_file_entry@lfn
 31335  00948A  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
 31336  00948C  0E00               	movlw	0
 31337  00948E  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
 31338  009490  6A0B               	clrf	fatfs_lfn_cache_init@wipeTable,c
 31339  009492  EC75  F023         	call	_fatfs_lfn_cache_init	;wreg free
 31340  009496  D0DA               	goto	l9722
 31341  009498                     l9656:
 31342                           
 31343                           ;fat_access.c: 445: else if (fatfs_entry_lfn_exists(&lfn, directoryEntry) )
 31344  009498  0E01               	movlw	high fatfs_get_file_entry@lfn
 31345  00949A  6E02               	movwf	fatfs_entry_lfn_exists@lfn+1,c
 31346  00949C  0E19               	movlw	low fatfs_get_file_entry@lfn
 31347  00949E  6E01               	movwf	fatfs_entry_lfn_exists@lfn,c
 31348  0094A0  C117  F004         	movff	fatfs_get_file_entry@directoryEntry+1,fatfs_entry_lfn_exists@entry+1
 31349  0094A4  0101               	movlb	1	; () banked
 31350  0094A6  C116  F003         	movff	fatfs_get_file_entry@directoryEntry,fatfs_entry_lfn_exists@entry
 31351  0094AA  EC41  F026         	call	_fatfs_entry_lfn_exists	;wreg free
 31352  0094AE  5002               	movf	?_fatfs_entry_lfn_exists+1,w,c
 31353  0094B0  1001               	iorwf	?_fatfs_entry_lfn_exists,w,c
 31354  0094B2  E034               	bz	l9670
 31355                           
 31356                           ;fat_access.c: 446: {
 31357                           ;fat_access.c: 447: long_filename = fatfs_lfn_cache_get(&lfn);
 31358  0094B4  0E01               	movlw	high fatfs_get_file_entry@lfn
 31359  0094B6  6E02               	movwf	fatfs_lfn_cache_get@lfn+1,c
 31360  0094B8  0101               	movlb	1	; () banked
 31361  0094BA  0E19               	movlw	low fatfs_get_file_entry@lfn
 31362  0094BC  6E01               	movwf	fatfs_lfn_cache_get@lfn,c
 31363  0094BE  ECF8  F024         	call	_fatfs_lfn_cache_get	;wreg free
 31364  0094C2  C001  F10F         	movff	?_fatfs_lfn_cache_get,fatfs_get_file_entry@long_filename
 31365  0094C6  C002  F110         	movff	?_fatfs_lfn_cache_get+1,fatfs_get_file_entry@long_filename+1
 31366                           
 31367                           ;fat_access.c: 450: if (fatfs_compare_names(long_filename, name_to_find))
 31368  0094CA  C110  F014         	movff	fatfs_get_file_entry@long_filename+1,fatfs_compare_names@strA+1
 31369  0094CE  C10F  F013         	movff	fatfs_get_file_entry@long_filename,fatfs_compare_names@strA
 31370  0094D2  C0B3  F016         	movff	fatfs_get_file_entry@name_to_find+1,fatfs_compare_names@strB+1
 31371  0094D6  0100               	movlb	0	; () banked
 31372  0094D8  C0B2  F015         	movff	fatfs_get_file_entry@name_to_find,fatfs_compare_names@strB
 31373  0094DC  EC6C  F037         	call	_fatfs_compare_names	;wreg free
 31374  0094E0  5014               	movf	?_fatfs_compare_names+1,w,c
 31375  0094E2  1013               	iorwf	?_fatfs_compare_names,w,c
 31376  0094E4  E010               	bz	l9668
 31377                           
 31378                           ;fat_access.c: 451: {
 31379                           ;fat_access.c: 452: memcpy(sfEntry,directoryEntry,sizeof(struct fat_dir_entry));
 31380  0094E6  C0B5  F002         	movff	fatfs_get_file_entry@sfEntry+1,memcpy@d1+1
 31381  0094EA  C0B4  F001         	movff	fatfs_get_file_entry@sfEntry,memcpy@d1
 31382  0094EE  0E20               	movlw	32
 31383  0094F0  6E05               	movwf	memcpy@s1+2,c
 31384  0094F2  C117  F004         	movff	fatfs_get_file_entry@directoryEntry+1,memcpy@s1+1
 31385  0094F6  0101               	movlb	1	; () banked
 31386  0094F8  C116  F003         	movff	fatfs_get_file_entry@directoryEntry,memcpy@s1
 31387  0094FC  6A07               	clrf	memcpy@n+1,c
 31388  0094FE  6E06               	movwf	memcpy@n,c
 31389  009500  ECA4  F023         	call	_memcpy	;wreg free
 31390  009504  D097               	goto	L103
 31391  009506                     l9668:
 31392                           
 31393                           ;fat_access.c: 454: }
 31394                           ;fat_access.c: 456: fatfs_lfn_cache_init(&lfn, 0);
 31395  009506  0E01               	movlw	high fatfs_get_file_entry@lfn
 31396  009508  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
 31397  00950A  0101               	movlb	1	; () banked
 31398  00950C  0E19               	movlw	low fatfs_get_file_entry@lfn
 31399  00950E  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
 31400  009510  0E00               	movlw	0
 31401  009512  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
 31402  009514  6A0B               	clrf	fatfs_lfn_cache_init@wipeTable,c
 31403  009516  EC75  F023         	call	_fatfs_lfn_cache_init	;wreg free
 31404                           
 31405                           ;fat_access.c: 457: }
 31406  00951A  D098               	goto	l9722
 31407  00951C                     l9670:
 31408                           
 31409                           ;fat_access.c: 458: else
 31410                           ;fat_access.c: 461: if (fatfs_entry_sfn_only(directoryEntry) )
 31411  00951C  C117  F002         	movff	fatfs_get_file_entry@directoryEntry+1,fatfs_entry_sfn_only@entry+1
 31412  009520  0101               	movlb	1	; () banked
 31413  009522  C116  F001         	movff	fatfs_get_file_entry@directoryEntry,fatfs_entry_sfn_only@entry
 31414  009526  ECC6  F024         	call	_fatfs_entry_sfn_only	;wreg free
 31415  00952A  5002               	movf	?_fatfs_entry_sfn_only+1,w,c
 31416  00952C  1001               	iorwf	?_fatfs_entry_sfn_only,w,c
 31417  00952E  E101 D08D          	bz	l9722
 31418                           
 31419                           ;fat_access.c: 462: {
 31420                           ;fat_access.c: 463: memset(short_filename, 0, sizeof(short_filename));
 31421  009532  0E01               	movlw	high fatfs_get_file_entry@short_filename
 31422  009534  6E02               	movwf	memset@p1+1,c
 31423  009536  0101               	movlb	1	; () banked
 31424  009538  0E00               	movlw	low fatfs_get_file_entry@short_filename
 31425  00953A  6E01               	movwf	memset@p1,c
 31426  00953C  6A04               	clrf	memset@c+1,c
 31427  00953E  6A03               	clrf	memset@c,c
 31428  009540  6A06               	clrf	memset@n+1,c
 31429  009542  0E0D               	movlw	13
 31430  009544  6E05               	movwf	memset@n,c
 31431  009546  EC1A  F020         	call	_memset	;wreg free
 31432                           
 31433                           ;fat_access.c: 466: for (i=0; i<8; i++)
 31434  00954A  0101               	movlb	1	; () banked
 31435  00954C  6B18               	clrf	fatfs_get_file_entry@i& (0+255),b
 31436  00954E  D014               	goto	L107
 31437  009550                     l9680:
 31438                           
 31439                           ; BSR set to: 1
 31440                           ;fat_access.c: 467: short_filename[i] = directoryEntry->Name[i];
 31441  009550  0101               	movlb	1	; () banked
 31442  009552  5118               	movf	fatfs_get_file_entry@i& (0+255),w,b
 31443  009554  0D01               	mullw	1
 31444  009556  50F3               	movf	prodl,w,c
 31445  009558  2516               	addwf	fatfs_get_file_entry@directoryEntry& (0+255),w,b
 31446  00955A  6ED9               	movwf	fsr2l,c
 31447  00955C  50F4               	movf	prodh,w,c
 31448  00955E  2117               	addwfc	(fatfs_get_file_entry@directoryEntry+1)& (0+255),w,b
 31449  009560  6EDA               	movwf	fsr2h,c
 31450  009562  5118               	movf	fatfs_get_file_entry@i& (0+255),w,b
 31451  009564  0D01               	mullw	1
 31452  009566  0E00               	movlw	low fatfs_get_file_entry@short_filename
 31453  009568  24F3               	addwf	prodl,w,c
 31454  00956A  6EE1               	movwf	fsr1l,c
 31455  00956C  0E01               	movlw	high fatfs_get_file_entry@short_filename
 31456  00956E  20F4               	addwfc	prodh,w,c
 31457  009570  6EE2               	movwf	fsr1h,c
 31458  009572  CFDF FFE7          	movff	indf2,indf1
 31459                           
 31460                           ; BSR set to: 1
 31461  009576  2B18               	incf	fatfs_get_file_entry@i& (0+255),f,b
 31462  009578                     L107:
 31463                           
 31464                           ; BSR set to: 1
 31465  009578  0E07               	movlw	7
 31466  00957A  0101               	movlb	1	; () banked
 31467  00957C  6518               	cpfsgt	fatfs_get_file_entry@i& (0+255),b
 31468  00957E  D7E8               	goto	l9680
 31469                           
 31470                           ; BSR set to: 1
 31471                           ;fat_access.c: 470: dotRequired = 0;
 31472                           
 31473                           ; BSR set to: 1
 31474  009580  6B12               	clrf	(fatfs_get_file_entry@dotRequired+1)& (0+255),b
 31475  009582  6B11               	clrf	fatfs_get_file_entry@dotRequired& (0+255),b
 31476                           
 31477                           ;fat_access.c: 471: for (i=8; i<11; i++)
 31478  009584  0E08               	movlw	8
 31479  009586  6F18               	movwf	fatfs_get_file_entry@i& (0+255),b
 31480  009588  D029               	goto	L108
 31481  00958A                     l9692:
 31482                           
 31483                           ; BSR set to: 1
 31484                           ;fat_access.c: 472: {
 31485                           ;fat_access.c: 473: short_filename[i+1] = directoryEntry->Name[i];
 31486  00958A  0101               	movlb	1	; () banked
 31487  00958C  5118               	movf	fatfs_get_file_entry@i& (0+255),w,b
 31488  00958E  0D01               	mullw	1
 31489  009590  50F3               	movf	prodl,w,c
 31490  009592  2516               	addwf	fatfs_get_file_entry@directoryEntry& (0+255),w,b
 31491  009594  6ED9               	movwf	fsr2l,c
 31492  009596  50F4               	movf	prodh,w,c
 31493  009598  2117               	addwfc	(fatfs_get_file_entry@directoryEntry+1)& (0+255),w,b
 31494  00959A  6EDA               	movwf	fsr2h,c
 31495  00959C  5118               	movf	fatfs_get_file_entry@i& (0+255),w,b
 31496  00959E  0100               	movlb	0	; () banked
 31497  0095A0  6FB6               	movwf	??_fatfs_get_file_entry& (0+255),b
 31498  0095A2  6BB7               	clrf	(??_fatfs_get_file_entry+1)& (0+255),b
 31499  0095A4  2BB6               	incf	??_fatfs_get_file_entry& (0+255),f,b
 31500  0095A6  0E00               	movlw	0
 31501  0095A8  23B7               	addwfc	(??_fatfs_get_file_entry+1)& (0+255),f,b
 31502  0095AA  0E00               	movlw	low fatfs_get_file_entry@short_filename
 31503  0095AC  25B6               	addwf	??_fatfs_get_file_entry& (0+255),w,b
 31504  0095AE  6EE1               	movwf	fsr1l,c
 31505  0095B0  0E01               	movlw	high fatfs_get_file_entry@short_filename
 31506  0095B2  21B7               	addwfc	(??_fatfs_get_file_entry+1)& (0+255),w,b
 31507  0095B4  6EE2               	movwf	fsr1h,c
 31508  0095B6  CFDF FFE7          	movff	indf2,indf1
 31509                           
 31510                           ; BSR set to: 0
 31511                           ;fat_access.c: 474: if (directoryEntry->Name[i] != ' ')
 31512  0095BA  0101               	movlb	1	; () banked
 31513  0095BC  5118               	movf	fatfs_get_file_entry@i& (0+255),w,b
 31514  0095BE  0D01               	mullw	1
 31515  0095C0  50F3               	movf	prodl,w,c
 31516  0095C2  2516               	addwf	fatfs_get_file_entry@directoryEntry& (0+255),w,b
 31517  0095C4  6ED9               	movwf	fsr2l,c
 31518  0095C6  50F4               	movf	prodh,w,c
 31519  0095C8  2117               	addwfc	(fatfs_get_file_entry@directoryEntry+1)& (0+255),w,b
 31520  0095CA  6EDA               	movwf	fsr2h,c
 31521  0095CC  50DF               	movf	indf2,w,c
 31522  0095CE  0A20               	xorlw	32
 31523  0095D0  E003               	bz	l9698
 31524                           
 31525                           ; BSR set to: 1
 31526                           ;fat_access.c: 475: dotRequired = 1;
 31527  0095D2  6B12               	clrf	(fatfs_get_file_entry@dotRequired+1)& (0+255),b
 31528  0095D4  0E01               	movlw	1
 31529  0095D6  6F11               	movwf	fatfs_get_file_entry@dotRequired& (0+255),b
 31530  0095D8                     l9698:
 31531                           
 31532                           ; BSR set to: 1
 31533  0095D8  0101               	movlb	1	; () banked
 31534  0095DA  2B18               	incf	fatfs_get_file_entry@i& (0+255),f,b
 31535  0095DC                     L108:
 31536                           
 31537                           ; BSR set to: 1
 31538  0095DC  0E0A               	movlw	10
 31539  0095DE  0101               	movlb	1	; () banked
 31540  0095E0  6518               	cpfsgt	fatfs_get_file_entry@i& (0+255),b
 31541  0095E2  D7D3               	goto	l9692
 31542                           
 31543                           ; BSR set to: 1
 31544                           ;fat_access.c: 476: }
 31545                           ;fat_access.c: 479: if (dotRequired)
 31546                           
 31547                           ; BSR set to: 1
 31548  0095E4  5112               	movf	(fatfs_get_file_entry@dotRequired+1)& (0+255),w,b
 31549  0095E6  1111               	iorwf	fatfs_get_file_entry@dotRequired& (0+255),w,b
 31550  0095E8  E005               	bz	l9710
 31551                           
 31552                           ; BSR set to: 1
 31553                           ;fat_access.c: 480: {
 31554                           ;fat_access.c: 482: if (short_filename[0]!='.')
 31555  0095EA  5100               	movf	fatfs_get_file_entry@short_filename& (0+255),w,b
 31556  0095EC  0A2E               	xorlw	46
 31557  0095EE  E002               	bz	l9710
 31558                           
 31559                           ; BSR set to: 1
 31560                           ;fat_access.c: 483: short_filename[8] = '.';
 31561  0095F0  0E2E               	movlw	46
 31562  0095F2  D001               	goto	L106
 31563  0095F4                     l9710:
 31564                           
 31565                           ; BSR set to: 1
 31566                           ;fat_access.c: 487: else
 31567                           ;fat_access.c: 488: short_filename[8] = ' ';
 31568  0095F4  0E20               	movlw	32
 31569  0095F6                     L106:
 31570  0095F6  0101               	movlb	1	; () banked
 31571  0095F8  6F08               	movwf	(fatfs_get_file_entry@short_filename+8)& (0+255),b
 31572                           
 31573                           ; BSR set to: 1
 31574                           ;fat_access.c: 491: if (fatfs_compare_names(short_filename, name_to_find))
 31575                           
 31576                           ; BSR set to: 1
 31577  0095FA  0E01               	movlw	high fatfs_get_file_entry@short_filename
 31578  0095FC  6E14               	movwf	fatfs_compare_names@strA+1,c
 31579  0095FE  0E00               	movlw	low fatfs_get_file_entry@short_filename
 31580  009600  6E13               	movwf	fatfs_compare_names@strA,c
 31581  009602  C0B3  F016         	movff	fatfs_get_file_entry@name_to_find+1,fatfs_compare_names@strB+1
 31582  009606  0100               	movlb	0	; () banked
 31583  009608  C0B2  F015         	movff	fatfs_get_file_entry@name_to_find,fatfs_compare_names@strB
 31584  00960C  EC6C  F037         	call	_fatfs_compare_names	;wreg free
 31585  009610  5014               	movf	?_fatfs_compare_names+1,w,c
 31586  009612  1013               	iorwf	?_fatfs_compare_names,w,c
 31587  009614  E011               	bz	l9720
 31588                           
 31589                           ;fat_access.c: 492: {
 31590                           ;fat_access.c: 493: memcpy(sfEntry,directoryEntry,sizeof(struct fat_dir_entry));
 31591  009616  C0B5  F002         	movff	fatfs_get_file_entry@sfEntry+1,memcpy@d1+1
 31592  00961A  C0B4  F001         	movff	fatfs_get_file_entry@sfEntry,memcpy@d1
 31593  00961E  0E20               	movlw	32
 31594  009620  6E05               	movwf	memcpy@s1+2,c
 31595  009622  C117  F004         	movff	fatfs_get_file_entry@directoryEntry+1,memcpy@s1+1
 31596  009626  0101               	movlb	1	; () banked
 31597  009628  C116  F003         	movff	fatfs_get_file_entry@directoryEntry,memcpy@s1
 31598  00962C  6A07               	clrf	memcpy@n+1,c
 31599  00962E  6E06               	movwf	memcpy@n,c
 31600  009630  ECA4  F023         	call	_memcpy	;wreg free
 31601  009634                     L103:
 31602                           
 31603                           ;fat_access.c: 494: return 1;
 31604  009634  0E01               	movlw	1
 31605  009636  D011               	goto	L105
 31606  009638                     l9720:
 31607                           
 31608                           ;fat_access.c: 495: }
 31609                           ;fat_access.c: 497: fatfs_lfn_cache_init(&lfn, 0);
 31610  009638  0E01               	movlw	high fatfs_get_file_entry@lfn
 31611  00963A  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
 31612  00963C  0101               	movlb	1	; () banked
 31613  00963E  0E19               	movlw	low fatfs_get_file_entry@lfn
 31614  009640  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
 31615  009642  0E00               	movlw	0
 31616  009644  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
 31617  009646  6A0B               	clrf	fatfs_lfn_cache_init@wipeTable,c
 31618  009648  EC75  F023         	call	_fatfs_lfn_cache_init	;wreg free
 31619  00964C                     l9722:
 31620  00964C  0101               	movlb	1	; () banked
 31621  00964E  2B15               	incf	fatfs_get_file_entry@item& (0+255),f,b
 31622                           
 31623                           ; BSR set to: 1
 31624  009650  0E0F               	movlw	15
 31625  009652  6515               	cpfsgt	fatfs_get_file_entry@item& (0+255),b
 31626  009654  D6CF               	goto	l9644
 31627  009656  D69D               	goto	l9636
 31628  009658                     l9726:
 31629                           
 31630                           ;fat_access.c: 503: }
 31631                           ;fat_access.c: 505: return 0;
 31632  009658  0E00               	movlw	0
 31633  00965A                     L105:
 31634  00965A  0100               	movlb	0	; () banked
 31635  00965C  6FAC               	movwf	?_fatfs_get_file_entry& (0+255),b
 31636  00965E  0E00               	movlw	0
 31637  009660  6FAD               	movwf	(?_fatfs_get_file_entry+1)& (0+255),b
 31638  009662  6FAE               	movwf	(?_fatfs_get_file_entry+2)& (0+255),b
 31639  009664  6FAF               	movwf	(?_fatfs_get_file_entry+3)& (0+255),b
 31640                           
 31641                           ; BSR set to: 0
 31642                           
 31643                           ; BSR set to: 0
 31644  009666  0C00               	retlw	0
 31645  009668                     __end_of_fatfs_get_file_entry:
 31646                           	opt stack 0
 31647                           tosu	equ	0xFFF
 31648                           tosh	equ	0xFFE
 31649                           tosl	equ	0xFFD
 31650                           pclath	equ	0xFFA
 31651                           tblptru	equ	0xFF8
 31652                           tblptrh	equ	0xFF7
 31653                           tblptrl	equ	0xFF6
 31654                           tablat	equ	0xFF5
 31655                           prodh	equ	0xFF4
 31656                           prodl	equ	0xFF3
 31657                           indf0	equ	0xFEF
 31658                           postinc0	equ	0xFEE
 31659                           fsr0h	equ	0xFEA
 31660                           fsr0l	equ	0xFE9
 31661                           wreg	equ	0xFE8
 31662                           indf1	equ	0xFE7
 31663                           postinc1	equ	0xFE6
 31664                           postdec1	equ	0xFE5
 31665                           fsr1h	equ	0xFE2
 31666                           fsr1l	equ	0xFE1
 31667                           indf2	equ	0xFDF
 31668                           postinc2	equ	0xFDE
 31669                           postdec2	equ	0xFDD
 31670                           fsr2h	equ	0xFDA
 31671                           fsr2l	equ	0xFD9
 31672                           status	equ	0xFD8
 31673                           
 31674 ;; *************** function _memcpy *****************
 31675 ;; Defined at:
 31676 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
 31677 ;; Parameters:    Size  Location     Type
 31678 ;;  d1              2    0[COMRAM] PTR void 
 31679 ;;		 -> _fs.currentsector.sector(512), data(1), fl_fgetc@data(1), _create_file@sfEntry(32), 
 31680 ;;		 -> _open_file@sfEntry(32), _create_directory@sfEntry(32), _open_directory@sfEntry(32), RAM(3967), 
 31681 ;;		 -> NULL(0), 
 31682 ;;  s1              3    2[COMRAM] PTR const void 
 31683 ;;		 -> _fs.currentsector.sector(512), w(1), str_0(26), s(17), 
 31684 ;;		 -> data(1), m(30), fatfs_add_file_entry@shortEntry(32), fatfs_lfn_generate_tail@tail_str(12), 
 31685 ;;		 -> fl_fputc@data(1), ROM(65535), _create_file@shortFilename(11), sfEntry.Name(11), 
 31686 ;;		 -> _open_file@sfEntry(32), _create_directory@shortFilename(11), RAM(3967), NULL(0), 
 31687 ;;  n               2    5[COMRAM] unsigned int 
 31688 ;; Auto vars:     Size  Location     Type
 31689 ;;  s               3    7[COMRAM] PTR const unsigned char 
 31690 ;;		 -> _fs.currentsector.sector(512), w(1), str_0(26), s(17), 
 31691 ;;		 -> data(1), m(30), fatfs_add_file_entry@shortEntry(32), fatfs_lfn_generate_tail@tail_str(12), 
 31692 ;;		 -> fl_fputc@data(1), ROM(65535), _create_file@shortFilename(11), sfEntry.Name(11), 
 31693 ;;		 -> _open_file@sfEntry(32), _create_directory@shortFilename(11), RAM(3967), NULL(0), 
 31694 ;;  d               2   10[COMRAM] PTR unsigned char 
 31695 ;;		 -> _fs.currentsector.sector(512), data(1), fl_fgetc@data(1), _create_file@sfEntry(32), 
 31696 ;;		 -> _open_file@sfEntry(32), _create_directory@sfEntry(32), _open_directory@sfEntry(32), RAM(3967), 
 31697 ;;		 -> NULL(0), 
 31698 ;; Return value:  Size  Location     Type
 31699 ;;                  2    0[COMRAM] PTR void 
 31700 ;; Registers used:
 31701 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31702 ;; Tracked objects:
 31703 ;;		On entry : 0/0
 31704 ;;		On exit  : 0/0
 31705 ;;		Unchanged: 0/0
 31706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31707 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31708 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31710 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31711 ;;Total ram usage:       12 bytes
 31712 ;; Hardware stack levels used:    1
 31713 ;; This function calls:
 31714 ;;		Nothing
 31715 ;; This function is called by:
 31716 ;;		_fatfs_get_file_entry
 31717 ;;		_fatfs_update_file_length
 31718 ;;		_fatfs_mark_file_deleted
 31719 ;;		__create_directory
 31720 ;;		__open_file
 31721 ;;		__create_file
 31722 ;;		_fl_fread
 31723 ;;		_fl_fwrite
 31724 ;;		_fatfs_lfn_generate_tail
 31725 ;;		_fatfs_split_path
 31726 ;;		_fatfs_add_file_entry
 31727 ;; This function uses a non-reentrant model
 31728 ;;
 31729                           
 31730                           	psect	text92
 31731  004748                     __ptext92:
 31732                           	opt stack 0
 31733  004748                     _memcpy:
 31734                           	opt stack 26
 31735                           
 31736                           ; BSR set to: 0
 31737                           ;incstack = 0
 31738  004748  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 31739  00474C  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 31740  004750  C003  F008         	movff	memcpy@s1,memcpy@s
 31741  004754  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 31742  004758  C001  F00B         	movff	memcpy@d1,memcpy@d
 31743  00475C  D01B               	goto	l9388
 31744  00475E                     l9382:
 31745  00475E  C008  FFF6         	movff	memcpy@s,tblptrl
 31746  004762  C009  FFF7         	movff	memcpy@s+1,tblptrh
 31747  004766  C00A  FFF8         	movff	memcpy@s+2,tblptru
 31748  00476A  BAF8               	btfsc	tblptru,5,c
 31749  00476C  D003               	bra	u10177
 31750  00476E  0008               	tblrd		*
 31751  004770  50F5               	movf	tablat,w,c
 31752  004772  D005               	bra	u10170
 31753  004774                     u10177:
 31754  004774  CFF6 FFE9          	movff	tblptrl,fsr0l
 31755  004778  CFF7 FFEA          	movff	tblptrh,fsr0h
 31756  00477C  50EF               	movf	indf0,w,c
 31757  00477E                     u10170:
 31758  00477E  C00B  FFD9         	movff	memcpy@d,fsr2l
 31759  004782  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 31760  004786  6EDF               	movwf	indf2,c
 31761  004788  2A08               	incf	memcpy@s,f,c
 31762  00478A  0E00               	movlw	0
 31763  00478C  2209               	addwfc	memcpy@s+1,f,c
 31764  00478E  220A               	addwfc	memcpy@s+2,f,c
 31765  004790  4A0B               	infsnz	memcpy@d,f,c
 31766  004792  2A0C               	incf	memcpy@d+1,f,c
 31767  004794                     l9388:
 31768  004794  0606               	decf	memcpy@n,f,c
 31769  004796  A0D8               	btfss	status,0,c
 31770  004798  0607               	decf	memcpy@n+1,f,c
 31771  00479A  2806               	incf	memcpy@n& (0+255),w,c
 31772  00479C  B4D8               	btfsc	status,2,c
 31773  00479E  2807               	incf	(memcpy@n+1)& (0+255),w,c
 31774  0047A0  B4D8               	btfsc	status,2,c
 31775                           
 31776                           ;	Return value of _memcpy is never used
 31777  0047A2  0012               	return	
 31778  0047A4  D7DC               	goto	l9382
 31779  0047A6                     __end_of_memcpy:
 31780                           	opt stack 0
 31781                           tosu	equ	0xFFF
 31782                           tosh	equ	0xFFE
 31783                           tosl	equ	0xFFD
 31784                           pclath	equ	0xFFA
 31785                           tblptru	equ	0xFF8
 31786                           tblptrh	equ	0xFF7
 31787                           tblptrl	equ	0xFF6
 31788                           tablat	equ	0xFF5
 31789                           prodh	equ	0xFF4
 31790                           prodl	equ	0xFF3
 31791                           indf0	equ	0xFEF
 31792                           postinc0	equ	0xFEE
 31793                           fsr0h	equ	0xFEA
 31794                           fsr0l	equ	0xFE9
 31795                           wreg	equ	0xFE8
 31796                           indf1	equ	0xFE7
 31797                           postinc1	equ	0xFE6
 31798                           postdec1	equ	0xFE5
 31799                           fsr1h	equ	0xFE2
 31800                           fsr1l	equ	0xFE1
 31801                           indf2	equ	0xFDF
 31802                           postinc2	equ	0xFDE
 31803                           postdec2	equ	0xFDD
 31804                           fsr2h	equ	0xFDA
 31805                           fsr2l	equ	0xFD9
 31806                           status	equ	0xFD8
 31807                           
 31808 ;; *************** function _fatfs_sector_reader *****************
 31809 ;; Defined at:
 31810 ;;		line 219 in file "fat_access.c"
 31811 ;; Parameters:    Size  Location     Type
 31812 ;;  fs              2    0[BANK0 ] PTR struct fatfs
 31813 ;;		 -> _fs(1095), 
 31814 ;;  start_cluste    4    2[BANK0 ] unsigned long 
 31815 ;;  offset          4    6[BANK0 ] unsigned long 
 31816 ;;  target          2   10[BANK0 ] PTR unsigned char 
 31817 ;;		 -> NULL(0), 
 31818 ;; Auto vars:     Size  Location     Type
 31819 ;;  cluster_chai    4   40[BANK0 ] unsigned long 
 31820 ;;  lba             4   36[BANK0 ] unsigned long 
 31821 ;;  cluster_to_r    4   32[BANK0 ] unsigned long 
 31822 ;;  i               4   28[BANK0 ] unsigned long 
 31823 ;;  sector_to_re    4   24[BANK0 ] unsigned long 
 31824 ;; Return value:  Size  Location     Type
 31825 ;;                  2    0[BANK0 ] int 
 31826 ;; Registers used:
 31827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31828 ;; Tracked objects:
 31829 ;;		On entry : 0/0
 31830 ;;		On exit  : 0/0
 31831 ;;		Unchanged: 0/0
 31832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31833 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31834 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31835 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31836 ;;      Totals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31837 ;;Total ram usage:       44 bytes
 31838 ;; Hardware stack levels used:    1
 31839 ;; Hardware stack levels required when called:    6
 31840 ;; This function calls:
 31841 ;;		___lldiv
 31842 ;;		_fatfs_find_next_cluster
 31843 ;;		_fatfs_lba_of_cluster
 31844 ;;		_media_read
 31845 ;; This function is called by:
 31846 ;;		_fatfs_get_file_entry
 31847 ;;		_fatfs_sfn_exists
 31848 ;;		_fatfs_update_file_length
 31849 ;;		_fatfs_mark_file_deleted
 31850 ;;		_fatfs_list_directory_next
 31851 ;;		_fatfs_find_free_dir_offset
 31852 ;;		_fatfs_add_file_entry
 31853 ;; This function uses a non-reentrant model
 31854 ;;
 31855                           
 31856                           	psect	text93
 31857  00A5AA                     __ptext93:
 31858                           	opt stack 0
 31859  00A5AA                     _fatfs_sector_reader:
 31860                           	opt stack 21
 31861                           
 31862                           ;fat_access.c: 221: uint32 sector_to_read = 0;
 31863                           
 31864                           ;incstack = 0
 31865  00A5AA  0100               	movlb	0	; () banked
 31866  00A5AC  6B98               	clrf	fatfs_sector_reader@sector_to_read& (0+255),b
 31867  00A5AE  6B99               	clrf	(fatfs_sector_reader@sector_to_read+1)& (0+255),b
 31868  00A5B0  6B9A               	clrf	(fatfs_sector_reader@sector_to_read+2)& (0+255),b
 31869  00A5B2  6B9B               	clrf	(fatfs_sector_reader@sector_to_read+3)& (0+255),b
 31870                           
 31871                           ;fat_access.c: 222: uint32 cluster_to_read = 0;
 31872  00A5B4  6BA0               	clrf	fatfs_sector_reader@cluster_to_read& (0+255),b
 31873  00A5B6  6BA1               	clrf	(fatfs_sector_reader@cluster_to_read+1)& (0+255),b
 31874  00A5B8  6BA2               	clrf	(fatfs_sector_reader@cluster_to_read+2)& (0+255),b
 31875  00A5BA  6BA3               	clrf	(fatfs_sector_reader@cluster_to_read+3)& (0+255),b
 31876                           
 31877                           ;fat_access.c: 223: uint32 cluster_chain = 0;
 31878  00A5BC  6BA8               	clrf	fatfs_sector_reader@cluster_chain& (0+255),b
 31879  00A5BE  6BA9               	clrf	(fatfs_sector_reader@cluster_chain+1)& (0+255),b
 31880  00A5C0  6BAA               	clrf	(fatfs_sector_reader@cluster_chain+2)& (0+255),b
 31881  00A5C2  6BAB               	clrf	(fatfs_sector_reader@cluster_chain+3)& (0+255),b
 31882                           
 31883                           ; BSR set to: 0
 31884                           ;fat_access.c: 224: uint32 i;
 31885                           ;fat_access.c: 225: uint32 lba;
 31886                           ;fat_access.c: 228: if (fs->fat_type == FAT_TYPE_16 && start_cluster == 0)
 31887  00A5C4  EE20 F028          	lfsr	2,40
 31888  00A5C8  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 31889  00A5CA  26D9               	addwf	fsr2l,f,c
 31890  00A5CC  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 31891  00A5CE  22DA               	addwfc	fsr2h,f,c
 31892  00A5D0  50DF               	movf	indf2,w,c
 31893  00A5D2  E151               	bnz	l86
 31894                           
 31895                           ; BSR set to: 0
 31896  00A5D4  5185               	movf	(fatfs_sector_reader@start_cluster+3)& (0+255),w,b
 31897  00A5D6  1182               	iorwf	fatfs_sector_reader@start_cluster& (0+255),w,b
 31898  00A5D8  1183               	iorwf	(fatfs_sector_reader@start_cluster+1)& (0+255),w,b
 31899  00A5DA  1184               	iorwf	(fatfs_sector_reader@start_cluster+2)& (0+255),w,b
 31900  00A5DC  E14C               	bnz	l86
 31901                           
 31902                           ; BSR set to: 0
 31903                           ;fat_access.c: 229: {
 31904                           ;fat_access.c: 230: if (offset < fs->rootdir_sectors)
 31905  00A5DE  EE20 F00D          	lfsr	2,13
 31906  00A5E2  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 31907  00A5E4  26D9               	addwf	fsr2l,f,c
 31908  00A5E6  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 31909  00A5E8  22DA               	addwfc	fsr2h,f,c
 31910  00A5EA  CFDE F08C          	movff	postinc2,??_fatfs_sector_reader
 31911  00A5EE  CFDE F08D          	movff	postinc2,??_fatfs_sector_reader+1
 31912  00A5F2  CFDE F08E          	movff	postinc2,??_fatfs_sector_reader+2
 31913  00A5F6  CFDE F08F          	movff	postinc2,??_fatfs_sector_reader+3
 31914  00A5FA  518C               	movf	??_fatfs_sector_reader& (0+255),w,b
 31915  00A5FC  5D86               	subwf	fatfs_sector_reader@offset& (0+255),w,b
 31916  00A5FE  518D               	movf	(??_fatfs_sector_reader+1)& (0+255),w,b
 31917  00A600  5987               	subwfb	(fatfs_sector_reader@offset+1)& (0+255),w,b
 31918  00A602  518E               	movf	(??_fatfs_sector_reader+2)& (0+255),w,b
 31919  00A604  5988               	subwfb	(fatfs_sector_reader@offset+2)& (0+255),w,b
 31920  00A606  518F               	movf	(??_fatfs_sector_reader+3)& (0+255),w,b
 31921  00A608  5989               	subwfb	(fatfs_sector_reader@offset+3)& (0+255),w,b
 31922  00A60A  E301 D0E8          	bc	u9710
 31923                           
 31924                           ; BSR set to: 0
 31925                           ;fat_access.c: 231: lba = fs->lba_begin + fs->rootdir_first_sector + offset;
 31926  00A60E  EE20 F009          	lfsr	2,9
 31927  00A612  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 31928  00A614  26D9               	addwf	fsr2l,f,c
 31929  00A616  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 31930  00A618  22DA               	addwfc	fsr2h,f,c
 31931  00A61A  CFDE F08C          	movff	postinc2,??_fatfs_sector_reader
 31932  00A61E  CFDE F08D          	movff	postinc2,??_fatfs_sector_reader+1
 31933  00A622  CFDE F08E          	movff	postinc2,??_fatfs_sector_reader+2
 31934  00A626  CFDE F08F          	movff	postinc2,??_fatfs_sector_reader+3
 31935  00A62A  EE20 F017          	lfsr	2,23
 31936  00A62E  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 31937  00A630  26D9               	addwf	fsr2l,f,c
 31938  00A632  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 31939  00A634  22DA               	addwfc	fsr2h,f,c
 31940  00A636  CFDE F090          	movff	postinc2,??_fatfs_sector_reader+4
 31941  00A63A  CFDE F091          	movff	postinc2,??_fatfs_sector_reader+5
 31942  00A63E  CFDE F092          	movff	postinc2,??_fatfs_sector_reader+6
 31943  00A642  CFDE F093          	movff	postinc2,??_fatfs_sector_reader+7
 31944  00A646  518C               	movf	??_fatfs_sector_reader& (0+255),w,b
 31945  00A648  2590               	addwf	(??_fatfs_sector_reader+4)& (0+255),w,b
 31946  00A64A  6F94               	movwf	(??_fatfs_sector_reader+8)& (0+255),b
 31947  00A64C  518D               	movf	(??_fatfs_sector_reader+1)& (0+255),w,b
 31948  00A64E  2191               	addwfc	(??_fatfs_sector_reader+5)& (0+255),w,b
 31949  00A650  6F95               	movwf	(??_fatfs_sector_reader+9)& (0+255),b
 31950  00A652  518E               	movf	(??_fatfs_sector_reader+2)& (0+255),w,b
 31951  00A654  2192               	addwfc	(??_fatfs_sector_reader+6)& (0+255),w,b
 31952  00A656  6F96               	movwf	(??_fatfs_sector_reader+10)& (0+255),b
 31953  00A658  518F               	movf	(??_fatfs_sector_reader+3)& (0+255),w,b
 31954  00A65A  2193               	addwfc	(??_fatfs_sector_reader+7)& (0+255),w,b
 31955  00A65C  6F97               	movwf	(??_fatfs_sector_reader+11)& (0+255),b
 31956  00A65E  5186               	movf	fatfs_sector_reader@offset& (0+255),w,b
 31957  00A660  2594               	addwf	(??_fatfs_sector_reader+8)& (0+255),w,b
 31958  00A662  6FA4               	movwf	fatfs_sector_reader@lba& (0+255),b
 31959  00A664  5187               	movf	(fatfs_sector_reader@offset+1)& (0+255),w,b
 31960  00A666  2195               	addwfc	(??_fatfs_sector_reader+9)& (0+255),w,b
 31961  00A668  6FA5               	movwf	(fatfs_sector_reader@lba+1)& (0+255),b
 31962  00A66A  5188               	movf	(fatfs_sector_reader@offset+2)& (0+255),w,b
 31963  00A66C  2196               	addwfc	(??_fatfs_sector_reader+10)& (0+255),w,b
 31964  00A66E  6FA6               	movwf	(fatfs_sector_reader@lba+2)& (0+255),b
 31965  00A670  5189               	movf	(fatfs_sector_reader@offset+3)& (0+255),w,b
 31966  00A672  2197               	addwfc	(??_fatfs_sector_reader+11)& (0+255),w,b
 31967  00A674  D0DB               	goto	L109
 31968  00A676                     l86:
 31969                           
 31970                           ; BSR set to: 0
 31971                           ;fat_access.c: 236: else
 31972                           ;fat_access.c: 237: {
 31973                           ;fat_access.c: 239: cluster_chain = start_cluster;
 31974  00A676  C082  F0A8         	movff	fatfs_sector_reader@start_cluster,fatfs_sector_reader@cluster_chain
 31975  00A67A  C083  F0A9         	movff	fatfs_sector_reader@start_cluster+1,fatfs_sector_reader@cluster_chain+1
 31976  00A67E  C084  F0AA         	movff	fatfs_sector_reader@start_cluster+2,fatfs_sector_reader@cluster_chain+2
 31977  00A682  C085  F0AB         	movff	fatfs_sector_reader@start_cluster+3,fatfs_sector_reader@cluster_chain+3
 31978                           
 31979                           ; BSR set to: 0
 31980                           ;fat_access.c: 242: cluster_to_read = offset / fs->sectors_per_cluster;
 31981  00A686  C086  F001         	movff	fatfs_sector_reader@offset,___lldiv@dividend
 31982  00A68A  C087  F002         	movff	fatfs_sector_reader@offset+1,___lldiv@dividend+1
 31983  00A68E  C088  F003         	movff	fatfs_sector_reader@offset+2,___lldiv@dividend+2
 31984  00A692  C089  F004         	movff	fatfs_sector_reader@offset+3,___lldiv@dividend+3
 31985  00A696  C080  FFD9         	movff	fatfs_sector_reader@fs,fsr2l
 31986  00A69A  C081  FFDA         	movff	fatfs_sector_reader@fs+1,fsr2h
 31987  00A69E  50DF               	movf	indf2,w,c
 31988  00A6A0  0100               	movlb	0	; () banked
 31989  00A6A2  6F8C               	movwf	??_fatfs_sector_reader& (0+255),b
 31990  00A6A4  518C               	movf	??_fatfs_sector_reader& (0+255),w,b
 31991  00A6A6  6E05               	movwf	___lldiv@divisor,c
 31992  00A6A8  6A06               	clrf	___lldiv@divisor+1,c
 31993  00A6AA  6A07               	clrf	___lldiv@divisor+2,c
 31994  00A6AC  6A08               	clrf	___lldiv@divisor+3,c
 31995  00A6AE  EC7B  F026         	call	___lldiv	;wreg free
 31996  00A6B2  C001  F0A0         	movff	?___lldiv,fatfs_sector_reader@cluster_to_read
 31997  00A6B6  C002  F0A1         	movff	?___lldiv+1,fatfs_sector_reader@cluster_to_read+1
 31998  00A6BA  C003  F0A2         	movff	?___lldiv+2,fatfs_sector_reader@cluster_to_read+2
 31999  00A6BE  C004  F0A3         	movff	?___lldiv+3,fatfs_sector_reader@cluster_to_read+3
 32000                           
 32001                           ;fat_access.c: 243: sector_to_read = offset - (cluster_to_read*fs->sectors_per_cluster);
 32002  00A6C2  C080  FFD9         	movff	fatfs_sector_reader@fs,fsr2l
 32003  00A6C6  C081  FFDA         	movff	fatfs_sector_reader@fs+1,fsr2h
 32004  00A6CA  50DF               	movf	indf2,w,c
 32005  00A6CC  0100               	movlb	0	; () banked
 32006  00A6CE  6F8C               	movwf	??_fatfs_sector_reader& (0+255),b
 32007  00A6D0  C08C  F08D         	movff	??_fatfs_sector_reader,??_fatfs_sector_reader+1
 32008  00A6D4  6B8E               	clrf	(??_fatfs_sector_reader+2)& (0+255),b
 32009  00A6D6  6B8F               	clrf	(??_fatfs_sector_reader+3)& (0+255),b
 32010  00A6D8  6B90               	clrf	(??_fatfs_sector_reader+4)& (0+255),b
 32011  00A6DA  518D               	movf	(??_fatfs_sector_reader+1)& (0+255),w,b
 32012  00A6DC  03A0               	mulwf	fatfs_sector_reader@cluster_to_read& (0+255),b
 32013  00A6DE  CFF3 F091          	movff	prodl,??_fatfs_sector_reader+5
 32014  00A6E2  CFF4 F092          	movff	prodh,??_fatfs_sector_reader+6
 32015  00A6E6  6B93               	clrf	(??_fatfs_sector_reader+7)& (0+255),b
 32016  00A6E8  6B94               	clrf	(??_fatfs_sector_reader+8)& (0+255),b
 32017  00A6EA  03A1               	mulwf	(fatfs_sector_reader@cluster_to_read+1)& (0+255),b
 32018  00A6EC  50F3               	movf	243,w,c
 32019  00A6EE  2792               	addwf	(??_fatfs_sector_reader+6)& (0+255),f,b
 32020  00A6F0  50F4               	movf	244,w,c
 32021  00A6F2  2393               	addwfc	(??_fatfs_sector_reader+7)& (0+255),f,b
 32022  00A6F4  0E00               	movlw	0
 32023  00A6F6  2394               	addwfc	(??_fatfs_sector_reader+8)& (0+255),f,b
 32024  00A6F8  518E               	movf	(??_fatfs_sector_reader+2)& (0+255),w,b
 32025  00A6FA  03A0               	mulwf	fatfs_sector_reader@cluster_to_read& (0+255),b
 32026  00A6FC  50F3               	movf	243,w,c
 32027  00A6FE  2792               	addwf	(??_fatfs_sector_reader+6)& (0+255),f,b
 32028  00A700  50F4               	movf	244,w,c
 32029  00A702  2393               	addwfc	(??_fatfs_sector_reader+7)& (0+255),f,b
 32030  00A704  0E00               	movlw	0
 32031  00A706  2394               	addwfc	(??_fatfs_sector_reader+8)& (0+255),f,b
 32032  00A708  518D               	movf	(??_fatfs_sector_reader+1)& (0+255),w,b
 32033  00A70A  03A2               	mulwf	(fatfs_sector_reader@cluster_to_read+2)& (0+255),b
 32034  00A70C  50F3               	movf	243,w,c
 32035  00A70E  2793               	addwf	(??_fatfs_sector_reader+7)& (0+255),f,b
 32036  00A710  50F4               	movf	244,w,c
 32037  00A712  2394               	addwfc	(??_fatfs_sector_reader+8)& (0+255),f,b
 32038  00A714  518E               	movf	(??_fatfs_sector_reader+2)& (0+255),w,b
 32039  00A716  03A1               	mulwf	(fatfs_sector_reader@cluster_to_read+1)& (0+255),b
 32040  00A718  50F3               	movf	243,w,c
 32041  00A71A  2793               	addwf	(??_fatfs_sector_reader+7)& (0+255),f,b
 32042  00A71C  50F4               	movf	244,w,c
 32043  00A71E  2394               	addwfc	(??_fatfs_sector_reader+8)& (0+255),f,b
 32044  00A720  518F               	movf	(??_fatfs_sector_reader+3)& (0+255),w,b
 32045  00A722  03A0               	mulwf	fatfs_sector_reader@cluster_to_read& (0+255),b
 32046  00A724  50F3               	movf	243,w,c
 32047  00A726  2793               	addwf	(??_fatfs_sector_reader+7)& (0+255),f,b
 32048  00A728  50F4               	movf	244,w,c
 32049  00A72A  2394               	addwfc	(??_fatfs_sector_reader+8)& (0+255),f,b
 32050  00A72C  51A3               	movf	(fatfs_sector_reader@cluster_to_read+3)& (0+255),w,b
 32051  00A72E  038D               	mulwf	(??_fatfs_sector_reader+1)& (0+255),b
 32052  00A730  50F3               	movf	243,w,c
 32053  00A732  2794               	addwf	(??_fatfs_sector_reader+8)& (0+255),f,b
 32054  00A734  518E               	movf	(??_fatfs_sector_reader+2)& (0+255),w,b
 32055  00A736  03A2               	mulwf	(fatfs_sector_reader@cluster_to_read+2)& (0+255),b
 32056  00A738  50F3               	movf	243,w,c
 32057  00A73A  2794               	addwf	(??_fatfs_sector_reader+8)& (0+255),f,b
 32058  00A73C  518F               	movf	(??_fatfs_sector_reader+3)& (0+255),w,b
 32059  00A73E  03A1               	mulwf	(fatfs_sector_reader@cluster_to_read+1)& (0+255),b
 32060  00A740  50F3               	movf	243,w,c
 32061  00A742  2794               	addwf	(??_fatfs_sector_reader+8)& (0+255),f,b
 32062  00A744  5190               	movf	(??_fatfs_sector_reader+4)& (0+255),w,b
 32063  00A746  03A0               	mulwf	fatfs_sector_reader@cluster_to_read& (0+255),b
 32064  00A748  50F3               	movf	243,w,c
 32065  00A74A  2794               	addwf	(??_fatfs_sector_reader+8)& (0+255),f,b
 32066  00A74C  1F91               	comf	(??_fatfs_sector_reader+5)& (0+255),f,b
 32067  00A74E  1F92               	comf	(??_fatfs_sector_reader+6)& (0+255),f,b
 32068  00A750  1F93               	comf	(??_fatfs_sector_reader+7)& (0+255),f,b
 32069  00A752  1F94               	comf	(??_fatfs_sector_reader+8)& (0+255),f,b
 32070  00A754  2B91               	incf	(??_fatfs_sector_reader+5)& (0+255),f,b
 32071  00A756  0E00               	movlw	0
 32072  00A758  2392               	addwfc	(??_fatfs_sector_reader+6)& (0+255),f,b
 32073  00A75A  2393               	addwfc	(??_fatfs_sector_reader+7)& (0+255),f,b
 32074  00A75C  2394               	addwfc	(??_fatfs_sector_reader+8)& (0+255),f,b
 32075  00A75E  5186               	movf	fatfs_sector_reader@offset& (0+255),w,b
 32076  00A760  2591               	addwf	(??_fatfs_sector_reader+5)& (0+255),w,b
 32077  00A762  6F98               	movwf	fatfs_sector_reader@sector_to_read& (0+255),b
 32078  00A764  5187               	movf	(fatfs_sector_reader@offset+1)& (0+255),w,b
 32079  00A766  2192               	addwfc	(??_fatfs_sector_reader+6)& (0+255),w,b
 32080  00A768  6F99               	movwf	(fatfs_sector_reader@sector_to_read+1)& (0+255),b
 32081  00A76A  5188               	movf	(fatfs_sector_reader@offset+2)& (0+255),w,b
 32082  00A76C  2193               	addwfc	(??_fatfs_sector_reader+7)& (0+255),w,b
 32083  00A76E  6F9A               	movwf	(fatfs_sector_reader@sector_to_read+2)& (0+255),b
 32084  00A770  5189               	movf	(fatfs_sector_reader@offset+3)& (0+255),w,b
 32085  00A772  2194               	addwfc	(??_fatfs_sector_reader+8)& (0+255),w,b
 32086  00A774  6F9B               	movwf	(fatfs_sector_reader@sector_to_read+3)& (0+255),b
 32087                           
 32088                           ; BSR set to: 0
 32089                           ;fat_access.c: 246: for (i=0; i<cluster_to_read; i++)
 32090  00A776  6B9C               	clrf	fatfs_sector_reader@i& (0+255),b
 32091  00A778  6B9D               	clrf	(fatfs_sector_reader@i+1)& (0+255),b
 32092  00A77A  6B9E               	clrf	(fatfs_sector_reader@i+2)& (0+255),b
 32093  00A77C  6B9F               	clrf	(fatfs_sector_reader@i+3)& (0+255),b
 32094  00A77E  D01D               	goto	l9104
 32095  00A780                     l9100:
 32096                           
 32097                           ; BSR set to: 0
 32098                           ;fat_access.c: 247: cluster_chain = fatfs_find_next_cluster(fs, cluster_chain);
 32099  00A780  C081  F047         	movff	fatfs_sector_reader@fs+1,fatfs_find_next_cluster@fs+1
 32100  00A784  0100               	movlb	0	; () banked
 32101  00A786  C080  F046         	movff	fatfs_sector_reader@fs,fatfs_find_next_cluster@fs
 32102  00A78A  C0A8  F048         	movff	fatfs_sector_reader@cluster_chain,fatfs_find_next_cluster@current_cluster
 32103  00A78E  C0A9  F049         	movff	fatfs_sector_reader@cluster_chain+1,fatfs_find_next_cluster@current_cluster+1
 32104  00A792  C0AA  F04A         	movff	fatfs_sector_reader@cluster_chain+2,fatfs_find_next_cluster@current_cluster+2
 32105  00A796  C0AB  F04B         	movff	fatfs_sector_reader@cluster_chain+3,fatfs_find_next_cluster@current_cluster+3
 32106  00A79A  EC9E  F054         	call	_fatfs_find_next_cluster	;wreg free
 32107  00A79E  C046  F0A8         	movff	?_fatfs_find_next_cluster,fatfs_sector_reader@cluster_chain
 32108  00A7A2  C047  F0A9         	movff	?_fatfs_find_next_cluster+1,fatfs_sector_reader@cluster_chain+1
 32109  00A7A6  C048  F0AA         	movff	?_fatfs_find_next_cluster+2,fatfs_sector_reader@cluster_chain+2
 32110  00A7AA  C049  F0AB         	movff	?_fatfs_find_next_cluster+3,fatfs_sector_reader@cluster_chain+3
 32111  00A7AE  0100               	movlb	0	; () banked
 32112  00A7B0  2B9C               	incf	fatfs_sector_reader@i& (0+255),f,b
 32113  00A7B2  0E00               	movlw	0
 32114  00A7B4  239D               	addwfc	(fatfs_sector_reader@i+1)& (0+255),f,b
 32115  00A7B6  239E               	addwfc	(fatfs_sector_reader@i+2)& (0+255),f,b
 32116  00A7B8  239F               	addwfc	(fatfs_sector_reader@i+3)& (0+255),f,b
 32117  00A7BA                     l9104:
 32118                           
 32119                           ; BSR set to: 0
 32120  00A7BA  0100               	movlb	0	; () banked
 32121  00A7BC  51A0               	movf	fatfs_sector_reader@cluster_to_read& (0+255),w,b
 32122  00A7BE  5D9C               	subwf	fatfs_sector_reader@i& (0+255),w,b
 32123  00A7C0  51A1               	movf	(fatfs_sector_reader@cluster_to_read+1)& (0+255),w,b
 32124  00A7C2  599D               	subwfb	(fatfs_sector_reader@i+1)& (0+255),w,b
 32125  00A7C4  51A2               	movf	(fatfs_sector_reader@cluster_to_read+2)& (0+255),w,b
 32126  00A7C6  599E               	subwfb	(fatfs_sector_reader@i+2)& (0+255),w,b
 32127  00A7C8  51A3               	movf	(fatfs_sector_reader@cluster_to_read+3)& (0+255),w,b
 32128  00A7CA  599F               	subwfb	(fatfs_sector_reader@i+3)& (0+255),w,b
 32129  00A7CC  E3D9               	bnc	l9100
 32130                           
 32131                           ; BSR set to: 0
 32132                           ;fat_access.c: 250: if (cluster_chain == 0xFFFFFFFF)
 32133                           
 32134                           ; BSR set to: 0
 32135  00A7CE  29A8               	incf	fatfs_sector_reader@cluster_chain& (0+255),w,b
 32136  00A7D0  B4D8               	btfsc	status,2,c
 32137  00A7D2  29A9               	incf	(fatfs_sector_reader@cluster_chain+1)& (0+255),w,b
 32138  00A7D4  B4D8               	btfsc	status,2,c
 32139  00A7D6  29AA               	incf	(fatfs_sector_reader@cluster_chain+2)& (0+255),w,b
 32140  00A7D8  B4D8               	btfsc	status,2,c
 32141  00A7DA  29AB               	incf	(fatfs_sector_reader@cluster_chain+3)& (0+255),w,b
 32142  00A7DC  E104               	bnz	l9112
 32143  00A7DE                     u9710:
 32144                           
 32145                           ; BSR set to: 0
 32146                           ;fat_access.c: 251: return 0;
 32147  00A7DE  0E00               	movlw	0
 32148  00A7E0  0100               	movlb	0	; () banked
 32149  00A7E2  6F81               	movwf	(?_fatfs_sector_reader+1)& (0+255),b
 32150  00A7E4  D0A8               	goto	L110
 32151  00A7E6                     l9112:
 32152                           
 32153                           ; BSR set to: 0
 32154                           ;fat_access.c: 254: lba = fatfs_lba_of_cluster(fs, cluster_chain)+sector_to_read;
 32155  00A7E6  C081  F002         	movff	fatfs_sector_reader@fs+1,fatfs_lba_of_cluster@fs+1
 32156  00A7EA  0100               	movlb	0	; () banked
 32157  00A7EC  C080  F001         	movff	fatfs_sector_reader@fs,fatfs_lba_of_cluster@fs
 32158  00A7F0  C0A8  F003         	movff	fatfs_sector_reader@cluster_chain,fatfs_lba_of_cluster@Cluster_Number
 32159  00A7F4  C0A9  F004         	movff	fatfs_sector_reader@cluster_chain+1,fatfs_lba_of_cluster@Cluster_Number+1
 32160  00A7F8  C0AA  F005         	movff	fatfs_sector_reader@cluster_chain+2,fatfs_lba_of_cluster@Cluster_Number+2
 32161  00A7FC  C0AB  F006         	movff	fatfs_sector_reader@cluster_chain+3,fatfs_lba_of_cluster@Cluster_Number+3
 32162  00A800  EC4C  F03E         	call	_fatfs_lba_of_cluster	;wreg free
 32163  00A804  C001  F08C         	movff	?_fatfs_lba_of_cluster,??_fatfs_sector_reader
 32164  00A808  C002  F08D         	movff	?_fatfs_lba_of_cluster+1,??_fatfs_sector_reader+1
 32165  00A80C  C003  F08E         	movff	?_fatfs_lba_of_cluster+2,??_fatfs_sector_reader+2
 32166  00A810  C004  F08F         	movff	?_fatfs_lba_of_cluster+3,??_fatfs_sector_reader+3
 32167  00A814  0100               	movlb	0	; () banked
 32168  00A816  5198               	movf	fatfs_sector_reader@sector_to_read& (0+255),w,b
 32169  00A818  258C               	addwf	??_fatfs_sector_reader& (0+255),w,b
 32170  00A81A  6FA4               	movwf	fatfs_sector_reader@lba& (0+255),b
 32171  00A81C  5199               	movf	(fatfs_sector_reader@sector_to_read+1)& (0+255),w,b
 32172  00A81E  218D               	addwfc	(??_fatfs_sector_reader+1)& (0+255),w,b
 32173  00A820  6FA5               	movwf	(fatfs_sector_reader@lba+1)& (0+255),b
 32174  00A822  519A               	movf	(fatfs_sector_reader@sector_to_read+2)& (0+255),w,b
 32175  00A824  218E               	addwfc	(??_fatfs_sector_reader+2)& (0+255),w,b
 32176  00A826  6FA6               	movwf	(fatfs_sector_reader@lba+2)& (0+255),b
 32177  00A828  519B               	movf	(fatfs_sector_reader@sector_to_read+3)& (0+255),w,b
 32178  00A82A  218F               	addwfc	(??_fatfs_sector_reader+3)& (0+255),w,b
 32179  00A82C                     L109:
 32180  00A82C  0100               	movlb	0	; () banked
 32181  00A82E  6FA7               	movwf	(fatfs_sector_reader@lba+3)& (0+255),b
 32182                           
 32183                           ; BSR set to: 0
 32184                           ;fat_access.c: 255: }
 32185                           ;fat_access.c: 258: if (target)
 32186                           
 32187                           ; BSR set to: 0
 32188  00A830  518B               	movf	(fatfs_sector_reader@target+1)& (0+255),w,b
 32189  00A832  118A               	iorwf	fatfs_sector_reader@target& (0+255),w,b
 32190  00A834  E023               	bz	l9122
 32191                           
 32192                           ; BSR set to: 0
 32193                           ;fat_access.c: 259: return fs->disk_io.read_media(lba, target, 1);
 32194  00A836  C0A4  F009         	movff	fatfs_sector_reader@lba,media_read@sector
 32195  00A83A  C0A5  F00A         	movff	fatfs_sector_reader@lba+1,media_read@sector+1
 32196  00A83E  C0A6  F00B         	movff	fatfs_sector_reader@lba+2,media_read@sector+2
 32197  00A842  C0A7  F00C         	movff	fatfs_sector_reader@lba+3,media_read@sector+3
 32198  00A846  C08B  F00E         	movff	fatfs_sector_reader@target+1,media_read@buffer+1
 32199  00A84A  C08A  F00D         	movff	fatfs_sector_reader@target,media_read@buffer
 32200  00A84E  0E01               	movlw	1
 32201  00A850  6E0F               	movwf	media_read@sector_count,c
 32202  00A852  6A10               	clrf	media_read@sector_count+1,c
 32203  00A854  6A11               	clrf	media_read@sector_count+2,c
 32204  00A856  6A12               	clrf	media_read@sector_count+3,c
 32205  00A858  EE20 F029          	lfsr	2,41
 32206  00A85C  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 32207  00A85E  26D9               	addwf	fsr2l,f,c
 32208  00A860  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 32209  00A862  22DA               	addwfc	fsr2h,f,c
 32210  00A864  CFDE F08C          	movff	postinc2,??_fatfs_sector_reader
 32211  00A868  CFDD F08D          	movff	postdec2,??_fatfs_sector_reader+1
 32212  00A86C  D801               	call	u9738
 32213  00A86E  D001               	goto	u9739
 32214  00A870                     u9738:
 32215  00A870  D054               	goto	u9758
 32216  00A872                     u9739:
 32217  00A872  C009  F080         	movff	?_media_read,?_fatfs_sector_reader
 32218  00A876  C00A  F081         	movff	?_media_read+1,?_fatfs_sector_reader+1
 32219  00A87A  D05F               	goto	l89
 32220  00A87C                     l9122:
 32221                           
 32222                           ;fat_access.c: 261: else if (lba != fs->currentsector.address)
 32223  00A87C  EE22 F031          	lfsr	2,561
 32224  00A880  0100               	movlb	0	; () banked
 32225  00A882  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 32226  00A884  26D9               	addwf	fsr2l,f,c
 32227  00A886  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 32228  00A888  22DA               	addwfc	fsr2h,f,c
 32229  00A88A  CFDE F08C          	movff	postinc2,??_fatfs_sector_reader
 32230  00A88E  CFDE F08D          	movff	postinc2,??_fatfs_sector_reader+1
 32231  00A892  CFDE F08E          	movff	postinc2,??_fatfs_sector_reader+2
 32232  00A896  CFDE F08F          	movff	postinc2,??_fatfs_sector_reader+3
 32233  00A89A  51A7               	movf	(fatfs_sector_reader@lba+3)& (0+255),w,b
 32234  00A89C  198F               	xorwf	(??_fatfs_sector_reader+3)& (0+255),w,b
 32235  00A89E  E108               	bnz	u9745
 32236  00A8A0  51A6               	movf	(fatfs_sector_reader@lba+2)& (0+255),w,b
 32237  00A8A2  198E               	xorwf	(??_fatfs_sector_reader+2)& (0+255),w,b
 32238  00A8A4  E105               	bnz	u9745
 32239  00A8A6  51A5               	movf	(fatfs_sector_reader@lba+1)& (0+255),w,b
 32240  00A8A8  198D               	xorwf	(??_fatfs_sector_reader+1)& (0+255),w,b
 32241  00A8AA  E102               	bnz	u9745
 32242  00A8AC  51A4               	movf	fatfs_sector_reader@lba& (0+255),w,b
 32243  00A8AE  198C               	xorwf	??_fatfs_sector_reader& (0+255),w,b
 32244  00A8B0                     u9745:
 32245  00A8B0  E03E               	bz	l9132
 32246                           
 32247                           ; BSR set to: 0
 32248                           ;fat_access.c: 262: {
 32249                           ;fat_access.c: 263: fs->currentsector.address = lba;
 32250  00A8B2  EE22 F031          	lfsr	2,561
 32251  00A8B6  0100               	movlb	0	; () banked
 32252  00A8B8  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 32253  00A8BA  26D9               	addwf	fsr2l,f,c
 32254  00A8BC  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 32255  00A8BE  22DA               	addwfc	fsr2h,f,c
 32256  00A8C0  C0A4  FFDE         	movff	fatfs_sector_reader@lba,postinc2
 32257  00A8C4  C0A5  FFDE         	movff	fatfs_sector_reader@lba+1,postinc2
 32258  00A8C8  C0A6  FFDE         	movff	fatfs_sector_reader@lba+2,postinc2
 32259  00A8CC  C0A7  FFDE         	movff	fatfs_sector_reader@lba+3,postinc2
 32260                           
 32261                           ; BSR set to: 0
 32262                           ;fat_access.c: 264: return fs->disk_io.read_media(fs->currentsector.address, fs->current
      +                          sector.sector, 1);
 32263  00A8D0  EE22 F031          	lfsr	2,561
 32264  00A8D4  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 32265  00A8D6  26D9               	addwf	fsr2l,f,c
 32266  00A8D8  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 32267  00A8DA  22DA               	addwfc	fsr2h,f,c
 32268  00A8DC  CFDE F009          	movff	postinc2,media_read@sector
 32269  00A8E0  CFDE F00A          	movff	postinc2,media_read@sector+1
 32270  00A8E4  CFDE F00B          	movff	postinc2,media_read@sector+2
 32271  00A8E8  CFDE F00C          	movff	postinc2,media_read@sector+3
 32272  00A8EC  0E31               	movlw	49
 32273  00A8EE  2580               	addwf	fatfs_sector_reader@fs& (0+255),w,b
 32274  00A8F0  6E0D               	movwf	media_read@buffer,c
 32275  00A8F2  0E00               	movlw	0
 32276  00A8F4  2181               	addwfc	(fatfs_sector_reader@fs+1)& (0+255),w,b
 32277  00A8F6  6E0E               	movwf	media_read@buffer+1,c
 32278  00A8F8  0E01               	movlw	1
 32279  00A8FA  6E0F               	movwf	media_read@sector_count,c
 32280  00A8FC  6A10               	clrf	media_read@sector_count+1,c
 32281  00A8FE  6A11               	clrf	media_read@sector_count+2,c
 32282  00A900  6A12               	clrf	media_read@sector_count+3,c
 32283  00A902  EE20 F029          	lfsr	2,41
 32284  00A906  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 32285  00A908  26D9               	addwf	fsr2l,f,c
 32286  00A90A  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 32287  00A90C  22DA               	addwfc	fsr2h,f,c
 32288  00A90E  CFDE F08C          	movff	postinc2,??_fatfs_sector_reader
 32289  00A912  CFDD F08D          	movff	postdec2,??_fatfs_sector_reader+1
 32290  00A916  D801               	call	u9758
 32291  00A918  D7AC               	goto	u9739
 32292  00A91A                     u9758:
 32293  00A91A  0005               	push	
 32294  00A91C  6EFA               	movwf	pclath,c
 32295  00A91E  0100               	movlb	0	; () banked
 32296  00A920  518C               	movf	??_fatfs_sector_reader& (0+255),w,b
 32297  00A922  6EFD               	movwf	tosl,c
 32298  00A924  518D               	movf	(??_fatfs_sector_reader+1)& (0+255),w,b
 32299  00A926  6EFE               	movwf	tosh,c
 32300  00A928  6AFF               	clrf	tosu,c
 32301  00A92A  50FA               	movf	pclath,w,c
 32302  00A92C  0012               	return		;indir
 32303  00A92E                     l9132:
 32304                           
 32305                           ;fat_access.c: 266: else
 32306                           ;fat_access.c: 267: return 1;
 32307  00A92E  0E00               	movlw	0
 32308  00A930  0100               	movlb	0	; () banked
 32309  00A932  6F81               	movwf	(?_fatfs_sector_reader+1)& (0+255),b
 32310  00A934  0E01               	movlw	1
 32311  00A936                     L110:
 32312  00A936  0100               	movlb	0	; () banked
 32313  00A938  6F80               	movwf	?_fatfs_sector_reader& (0+255),b
 32314  00A93A                     l89:
 32315  00A93A  0012               	return	
 32316  00A93C                     __end_of_fatfs_sector_reader:
 32317                           	opt stack 0
 32318                           tosu	equ	0xFFF
 32319                           tosh	equ	0xFFE
 32320                           tosl	equ	0xFFD
 32321                           pclath	equ	0xFFA
 32322                           tblptru	equ	0xFF8
 32323                           tblptrh	equ	0xFF7
 32324                           tblptrl	equ	0xFF6
 32325                           tablat	equ	0xFF5
 32326                           prodh	equ	0xFF4
 32327                           prodl	equ	0xFF3
 32328                           indf0	equ	0xFEF
 32329                           postinc0	equ	0xFEE
 32330                           fsr0h	equ	0xFEA
 32331                           fsr0l	equ	0xFE9
 32332                           wreg	equ	0xFE8
 32333                           indf1	equ	0xFE7
 32334                           postinc1	equ	0xFE6
 32335                           postdec1	equ	0xFE5
 32336                           fsr1h	equ	0xFE2
 32337                           fsr1l	equ	0xFE1
 32338                           indf2	equ	0xFDF
 32339                           postinc2	equ	0xFDE
 32340                           postdec2	equ	0xFDD
 32341                           fsr2h	equ	0xFDA
 32342                           fsr2l	equ	0xFD9
 32343                           status	equ	0xFD8
 32344                           
 32345 ;; *************** function _fatfs_lba_of_cluster *****************
 32346 ;; Defined at:
 32347 ;;		line 194 in file "fat_access.c"
 32348 ;; Parameters:    Size  Location     Type
 32349 ;;  fs              2    0[COMRAM] PTR struct fatfs
 32350 ;;		 -> _fs(1095), 
 32351 ;;  Cluster_Numb    4    2[COMRAM] unsigned long 
 32352 ;; Auto vars:     Size  Location     Type
 32353 ;;		None
 32354 ;; Return value:  Size  Location     Type
 32355 ;;                  4    0[COMRAM] unsigned long 
 32356 ;; Registers used:
 32357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32358 ;; Tracked objects:
 32359 ;;		On entry : 0/0
 32360 ;;		On exit  : 0/0
 32361 ;;		Unchanged: 0/0
 32362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32363 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32365 ;;      Temps:         24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32366 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32367 ;;Total ram usage:       30 bytes
 32368 ;; Hardware stack levels used:    1
 32369 ;; This function calls:
 32370 ;;		Nothing
 32371 ;; This function is called by:
 32372 ;;		_fatfs_sector_reader
 32373 ;;		_fatfs_write_sector
 32374 ;;		__read_sectors
 32375 ;;		__write_sectors
 32376 ;;		_fatfs_format_fat32
 32377 ;;		_fatfs_read_sector
 32378 ;; This function uses a non-reentrant model
 32379 ;;
 32380                           
 32381                           	psect	text94
 32382  007C98                     __ptext94:
 32383                           	opt stack 0
 32384  007C98                     _fatfs_lba_of_cluster:
 32385                           	opt stack 26
 32386                           
 32387                           ;fat_access.c: 196: if (fs->fat_type == FAT_TYPE_16)
 32388                           
 32389                           ;incstack = 0
 32390  007C98  EE20 F028          	lfsr	2,40
 32391  007C9C  5001               	movf	fatfs_lba_of_cluster@fs,w,c
 32392  007C9E  26D9               	addwf	fsr2l,f,c
 32393  007CA0  5002               	movf	fatfs_lba_of_cluster@fs+1,w,c
 32394  007CA2  22DA               	addwfc	fsr2h,f,c
 32395  007CA4  50DF               	movf	indf2,w,c
 32396  007CA6  E001 D08A          	bnz	l8850
 32397                           
 32398                           ;fat_access.c: 197: return (fs->cluster_begin_lba + (fs->root_entry_count * 32 / 512) + 
      +                          ((Cluster_Number-2) * fs->sectors_per_cluster));
 32399  007CAA  EE20 F001          	lfsr	2,1
 32400  007CAE  5001               	movf	fatfs_lba_of_cluster@fs,w,c
 32401  007CB0  26D9               	addwf	fsr2l,f,c
 32402  007CB2  5002               	movf	fatfs_lba_of_cluster@fs+1,w,c
 32403  007CB4  22DA               	addwfc	fsr2h,f,c
 32404  007CB6  CFDE F007          	movff	postinc2,??_fatfs_lba_of_cluster
 32405  007CBA  CFDE F008          	movff	postinc2,??_fatfs_lba_of_cluster+1
 32406  007CBE  CFDE F009          	movff	postinc2,??_fatfs_lba_of_cluster+2
 32407  007CC2  CFDE F00A          	movff	postinc2,??_fatfs_lba_of_cluster+3
 32408  007CC6  C001  FFD9         	movff	fatfs_lba_of_cluster@fs,fsr2l
 32409  007CCA  C002  FFDA         	movff	fatfs_lba_of_cluster@fs+1,fsr2h
 32410  007CCE  50DF               	movf	indf2,w,c
 32411  007CD0  6E0B               	movwf	(??_fatfs_lba_of_cluster+4)& (0+255),c
 32412  007CD2  C00B  F00C         	movff	??_fatfs_lba_of_cluster+4,??_fatfs_lba_of_cluster+5
 32413  007CD6  6A0D               	clrf	(??_fatfs_lba_of_cluster+6)& (0+255),c
 32414  007CD8  6A0E               	clrf	(??_fatfs_lba_of_cluster+7)& (0+255),c
 32415  007CDA  6A0F               	clrf	(??_fatfs_lba_of_cluster+8)& (0+255),c
 32416  007CDC  0EFE               	movlw	254
 32417  007CDE  2403               	addwf	fatfs_lba_of_cluster@Cluster_Number,w,c
 32418  007CE0  6E10               	movwf	(??_fatfs_lba_of_cluster+9)& (0+255),c
 32419  007CE2  0EFF               	movlw	255
 32420  007CE4  2004               	addwfc	fatfs_lba_of_cluster@Cluster_Number+1,w,c
 32421  007CE6  6E11               	movwf	(??_fatfs_lba_of_cluster+10)& (0+255),c
 32422  007CE8  0EFF               	movlw	255
 32423  007CEA  2005               	addwfc	fatfs_lba_of_cluster@Cluster_Number+2,w,c
 32424  007CEC  6E12               	movwf	(??_fatfs_lba_of_cluster+11)& (0+255),c
 32425  007CEE  0EFF               	movlw	255
 32426  007CF0  2006               	addwfc	fatfs_lba_of_cluster@Cluster_Number+3,w,c
 32427  007CF2  6E13               	movwf	(??_fatfs_lba_of_cluster+12)& (0+255),c
 32428  007CF4  5010               	movf	??_fatfs_lba_of_cluster+9,w,c
 32429  007CF6  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32430  007CF8  CFF3 F014          	movff	prodl,??_fatfs_lba_of_cluster+13
 32431  007CFC  CFF4 F015          	movff	prodh,??_fatfs_lba_of_cluster+14
 32432  007D00  6A16               	clrf	(??_fatfs_lba_of_cluster+15)& (0+255),c
 32433  007D02  6A17               	clrf	(??_fatfs_lba_of_cluster+16)& (0+255),c
 32434  007D04  020D               	mulwf	??_fatfs_lba_of_cluster+6,c
 32435  007D06  50F3               	movf	243,w,c
 32436  007D08  2615               	addwf	(??_fatfs_lba_of_cluster+14)& (0+255),f,c
 32437  007D0A  50F4               	movf	244,w,c
 32438  007D0C  2216               	addwfc	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32439  007D0E  0E00               	movlw	0
 32440  007D10  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32441  007D12  5011               	movf	??_fatfs_lba_of_cluster+10,w,c
 32442  007D14  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32443  007D16  50F3               	movf	243,w,c
 32444  007D18  2615               	addwf	(??_fatfs_lba_of_cluster+14)& (0+255),f,c
 32445  007D1A  50F4               	movf	244,w,c
 32446  007D1C  2216               	addwfc	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32447  007D1E  0E00               	movlw	0
 32448  007D20  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32449  007D22  5010               	movf	??_fatfs_lba_of_cluster+9,w,c
 32450  007D24  020E               	mulwf	??_fatfs_lba_of_cluster+7,c
 32451  007D26  50F3               	movf	243,w,c
 32452  007D28  2616               	addwf	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32453  007D2A  50F4               	movf	244,w,c
 32454  007D2C  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32455  007D2E  5011               	movf	??_fatfs_lba_of_cluster+10,w,c
 32456  007D30  020D               	mulwf	??_fatfs_lba_of_cluster+6,c
 32457  007D32  50F3               	movf	243,w,c
 32458  007D34  2616               	addwf	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32459  007D36  50F4               	movf	244,w,c
 32460  007D38  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32461  007D3A  5012               	movf	??_fatfs_lba_of_cluster+11,w,c
 32462  007D3C  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32463  007D3E  50F3               	movf	243,w,c
 32464  007D40  2616               	addwf	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32465  007D42  50F4               	movf	244,w,c
 32466  007D44  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32467  007D46  500F               	movf	??_fatfs_lba_of_cluster+8,w,c
 32468  007D48  0210               	mulwf	??_fatfs_lba_of_cluster+9,c
 32469  007D4A  50F3               	movf	243,w,c
 32470  007D4C  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32471  007D4E  5011               	movf	??_fatfs_lba_of_cluster+10,w,c
 32472  007D50  020E               	mulwf	??_fatfs_lba_of_cluster+7,c
 32473  007D52  50F3               	movf	243,w,c
 32474  007D54  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32475  007D56  5012               	movf	??_fatfs_lba_of_cluster+11,w,c
 32476  007D58  020D               	mulwf	??_fatfs_lba_of_cluster+6,c
 32477  007D5A  50F3               	movf	243,w,c
 32478  007D5C  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32479  007D5E  5013               	movf	??_fatfs_lba_of_cluster+12,w,c
 32480  007D60  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32481  007D62  50F3               	movf	243,w,c
 32482  007D64  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32483  007D66  EE20 F023          	lfsr	2,35
 32484  007D6A  5001               	movf	fatfs_lba_of_cluster@fs,w,c
 32485  007D6C  26D9               	addwf	fsr2l,f,c
 32486  007D6E  5002               	movf	fatfs_lba_of_cluster@fs+1,w,c
 32487  007D70  22DA               	addwfc	fsr2h,f,c
 32488  007D72  CFDE F018          	movff	postinc2,??_fatfs_lba_of_cluster+17
 32489  007D76  CFDD F019          	movff	postdec2,??_fatfs_lba_of_cluster+18
 32490  007D7A  0E04               	movlw	4
 32491  007D7C  6E1A               	movwf	(??_fatfs_lba_of_cluster+19)& (0+255),c
 32492  007D7E                     u9245:
 32493  007D7E  90D8               	bcf	status,0,c
 32494  007D80  3219               	rrcf	??_fatfs_lba_of_cluster+18,f,c
 32495  007D82  3218               	rrcf	??_fatfs_lba_of_cluster+17,f,c
 32496  007D84  2E1A               	decfsz	(??_fatfs_lba_of_cluster+19)& (0+255),f,c
 32497  007D86  D7FB               	goto	u9245
 32498  007D88  0E7F               	movlw	127
 32499  007D8A  1618               	andwf	??_fatfs_lba_of_cluster+17,f,c
 32500  007D8C  6A19               	clrf	??_fatfs_lba_of_cluster+18,c
 32501  007D8E  5018               	movf	??_fatfs_lba_of_cluster+17,w,c
 32502  007D90  2414               	addwf	??_fatfs_lba_of_cluster+13,w,c
 32503  007D92  6E1B               	movwf	(??_fatfs_lba_of_cluster+20)& (0+255),c
 32504  007D94  5019               	movf	??_fatfs_lba_of_cluster+18,w,c
 32505  007D96  2015               	addwfc	??_fatfs_lba_of_cluster+14,w,c
 32506  007D98  6E1C               	movwf	(??_fatfs_lba_of_cluster+21)& (0+255),c
 32507  007D9A  0E00               	movlw	0
 32508  007D9C  2016               	addwfc	??_fatfs_lba_of_cluster+15,w,c
 32509  007D9E  6E1D               	movwf	(??_fatfs_lba_of_cluster+22)& (0+255),c
 32510  007DA0  0E00               	movlw	0
 32511  007DA2  2017               	addwfc	??_fatfs_lba_of_cluster+16,w,c
 32512  007DA4  6E1E               	movwf	(??_fatfs_lba_of_cluster+23)& (0+255),c
 32513  007DA6  5007               	movf	??_fatfs_lba_of_cluster,w,c
 32514  007DA8  241B               	addwf	??_fatfs_lba_of_cluster+20,w,c
 32515  007DAA  6E01               	movwf	?_fatfs_lba_of_cluster,c
 32516  007DAC  5008               	movf	??_fatfs_lba_of_cluster+1,w,c
 32517  007DAE  201C               	addwfc	??_fatfs_lba_of_cluster+21,w,c
 32518  007DB0  6E02               	movwf	?_fatfs_lba_of_cluster+1,c
 32519  007DB2  5009               	movf	??_fatfs_lba_of_cluster+2,w,c
 32520  007DB4  201D               	addwfc	??_fatfs_lba_of_cluster+22,w,c
 32521  007DB6  6E03               	movwf	?_fatfs_lba_of_cluster+2,c
 32522  007DB8  500A               	movf	??_fatfs_lba_of_cluster+3,w,c
 32523  007DBA  201E               	addwfc	??_fatfs_lba_of_cluster+23,w,c
 32524  007DBC  D069               	goto	L111
 32525  007DBE                     l8850:
 32526                           
 32527                           ;fat_access.c: 198: else
 32528                           ;fat_access.c: 199: return ((fs->cluster_begin_lba + ((Cluster_Number-2)*fs->sectors_per
      +                          _cluster)));
 32529  007DBE  EE20 F001          	lfsr	2,1
 32530  007DC2  5001               	movf	fatfs_lba_of_cluster@fs,w,c
 32531  007DC4  26D9               	addwf	fsr2l,f,c
 32532  007DC6  5002               	movf	fatfs_lba_of_cluster@fs+1,w,c
 32533  007DC8  22DA               	addwfc	fsr2h,f,c
 32534  007DCA  CFDE F007          	movff	postinc2,??_fatfs_lba_of_cluster
 32535  007DCE  CFDE F008          	movff	postinc2,??_fatfs_lba_of_cluster+1
 32536  007DD2  CFDE F009          	movff	postinc2,??_fatfs_lba_of_cluster+2
 32537  007DD6  CFDE F00A          	movff	postinc2,??_fatfs_lba_of_cluster+3
 32538  007DDA  C001  FFD9         	movff	fatfs_lba_of_cluster@fs,fsr2l
 32539  007DDE  C002  FFDA         	movff	fatfs_lba_of_cluster@fs+1,fsr2h
 32540  007DE2  50DF               	movf	indf2,w,c
 32541  007DE4  6E0B               	movwf	(??_fatfs_lba_of_cluster+4)& (0+255),c
 32542  007DE6  C00B  F00C         	movff	??_fatfs_lba_of_cluster+4,??_fatfs_lba_of_cluster+5
 32543  007DEA  6A0D               	clrf	(??_fatfs_lba_of_cluster+6)& (0+255),c
 32544  007DEC  6A0E               	clrf	(??_fatfs_lba_of_cluster+7)& (0+255),c
 32545  007DEE  6A0F               	clrf	(??_fatfs_lba_of_cluster+8)& (0+255),c
 32546  007DF0  0EFE               	movlw	254
 32547  007DF2  2403               	addwf	fatfs_lba_of_cluster@Cluster_Number,w,c
 32548  007DF4  6E10               	movwf	(??_fatfs_lba_of_cluster+9)& (0+255),c
 32549  007DF6  0EFF               	movlw	255
 32550  007DF8  2004               	addwfc	fatfs_lba_of_cluster@Cluster_Number+1,w,c
 32551  007DFA  6E11               	movwf	(??_fatfs_lba_of_cluster+10)& (0+255),c
 32552  007DFC  0EFF               	movlw	255
 32553  007DFE  2005               	addwfc	fatfs_lba_of_cluster@Cluster_Number+2,w,c
 32554  007E00  6E12               	movwf	(??_fatfs_lba_of_cluster+11)& (0+255),c
 32555  007E02  0EFF               	movlw	255
 32556  007E04  2006               	addwfc	fatfs_lba_of_cluster@Cluster_Number+3,w,c
 32557  007E06  6E13               	movwf	(??_fatfs_lba_of_cluster+12)& (0+255),c
 32558  007E08  5010               	movf	??_fatfs_lba_of_cluster+9,w,c
 32559  007E0A  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32560  007E0C  CFF3 F014          	movff	prodl,??_fatfs_lba_of_cluster+13
 32561  007E10  CFF4 F015          	movff	prodh,??_fatfs_lba_of_cluster+14
 32562  007E14  6A16               	clrf	(??_fatfs_lba_of_cluster+15)& (0+255),c
 32563  007E16  6A17               	clrf	(??_fatfs_lba_of_cluster+16)& (0+255),c
 32564  007E18  020D               	mulwf	??_fatfs_lba_of_cluster+6,c
 32565  007E1A  50F3               	movf	243,w,c
 32566  007E1C  2615               	addwf	(??_fatfs_lba_of_cluster+14)& (0+255),f,c
 32567  007E1E  50F4               	movf	244,w,c
 32568  007E20  2216               	addwfc	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32569  007E22  0E00               	movlw	0
 32570  007E24  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32571  007E26  5011               	movf	??_fatfs_lba_of_cluster+10,w,c
 32572  007E28  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32573  007E2A  50F3               	movf	243,w,c
 32574  007E2C  2615               	addwf	(??_fatfs_lba_of_cluster+14)& (0+255),f,c
 32575  007E2E  50F4               	movf	244,w,c
 32576  007E30  2216               	addwfc	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32577  007E32  0E00               	movlw	0
 32578  007E34  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32579  007E36  5010               	movf	??_fatfs_lba_of_cluster+9,w,c
 32580  007E38  020E               	mulwf	??_fatfs_lba_of_cluster+7,c
 32581  007E3A  50F3               	movf	243,w,c
 32582  007E3C  2616               	addwf	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32583  007E3E  50F4               	movf	244,w,c
 32584  007E40  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32585  007E42  5011               	movf	??_fatfs_lba_of_cluster+10,w,c
 32586  007E44  020D               	mulwf	??_fatfs_lba_of_cluster+6,c
 32587  007E46  50F3               	movf	243,w,c
 32588  007E48  2616               	addwf	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32589  007E4A  50F4               	movf	244,w,c
 32590  007E4C  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32591  007E4E  5012               	movf	??_fatfs_lba_of_cluster+11,w,c
 32592  007E50  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32593  007E52  50F3               	movf	243,w,c
 32594  007E54  2616               	addwf	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32595  007E56  50F4               	movf	244,w,c
 32596  007E58  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32597  007E5A  500F               	movf	??_fatfs_lba_of_cluster+8,w,c
 32598  007E5C  0210               	mulwf	??_fatfs_lba_of_cluster+9,c
 32599  007E5E  50F3               	movf	243,w,c
 32600  007E60  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32601  007E62  5011               	movf	??_fatfs_lba_of_cluster+10,w,c
 32602  007E64  020E               	mulwf	??_fatfs_lba_of_cluster+7,c
 32603  007E66  50F3               	movf	243,w,c
 32604  007E68  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32605  007E6A  5012               	movf	??_fatfs_lba_of_cluster+11,w,c
 32606  007E6C  020D               	mulwf	??_fatfs_lba_of_cluster+6,c
 32607  007E6E  50F3               	movf	243,w,c
 32608  007E70  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32609  007E72  5013               	movf	??_fatfs_lba_of_cluster+12,w,c
 32610  007E74  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32611  007E76  50F3               	movf	243,w,c
 32612  007E78  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32613  007E7A  5007               	movf	??_fatfs_lba_of_cluster,w,c
 32614  007E7C  2414               	addwf	??_fatfs_lba_of_cluster+13,w,c
 32615  007E7E  6E01               	movwf	?_fatfs_lba_of_cluster,c
 32616  007E80  5008               	movf	??_fatfs_lba_of_cluster+1,w,c
 32617  007E82  2015               	addwfc	??_fatfs_lba_of_cluster+14,w,c
 32618  007E84  6E02               	movwf	?_fatfs_lba_of_cluster+1,c
 32619  007E86  5009               	movf	??_fatfs_lba_of_cluster+2,w,c
 32620  007E88  2016               	addwfc	??_fatfs_lba_of_cluster+15,w,c
 32621  007E8A  6E03               	movwf	?_fatfs_lba_of_cluster+2,c
 32622  007E8C  500A               	movf	??_fatfs_lba_of_cluster+3,w,c
 32623  007E8E  2017               	addwfc	??_fatfs_lba_of_cluster+16,w,c
 32624  007E90                     L111:
 32625  007E90  6E04               	movwf	?_fatfs_lba_of_cluster+3,c
 32626  007E92  0012               	return	
 32627  007E94                     __end_of_fatfs_lba_of_cluster:
 32628                           	opt stack 0
 32629                           tosu	equ	0xFFF
 32630                           tosh	equ	0xFFE
 32631                           tosl	equ	0xFFD
 32632                           pclath	equ	0xFFA
 32633                           tblptru	equ	0xFF8
 32634                           tblptrh	equ	0xFF7
 32635                           tblptrl	equ	0xFF6
 32636                           tablat	equ	0xFF5
 32637                           prodh	equ	0xFF4
 32638                           prodl	equ	0xFF3
 32639                           indf0	equ	0xFEF
 32640                           postinc0	equ	0xFEE
 32641                           fsr0h	equ	0xFEA
 32642                           fsr0l	equ	0xFE9
 32643                           wreg	equ	0xFE8
 32644                           indf1	equ	0xFE7
 32645                           postinc1	equ	0xFE6
 32646                           postdec1	equ	0xFE5
 32647                           fsr1h	equ	0xFE2
 32648                           fsr1l	equ	0xFE1
 32649                           indf2	equ	0xFDF
 32650                           postinc2	equ	0xFDE
 32651                           postdec2	equ	0xFDD
 32652                           fsr2h	equ	0xFDA
 32653                           fsr2l	equ	0xFD9
 32654                           status	equ	0xFD8
 32655                           
 32656 ;; *************** function _fatfs_find_next_cluster *****************
 32657 ;; Defined at:
 32658 ;;		line 205 in file "fat_table.c"
 32659 ;; Parameters:    Size  Location     Type
 32660 ;;  fs              2   69[COMRAM] PTR struct fatfs
 32661 ;;		 -> _fs(1095), 
 32662 ;;  current_clus    4   71[COMRAM] unsigned long 
 32663 ;; Auto vars:     Size  Location     Type
 32664 ;;  nextcluster     4  121[COMRAM] unsigned long 
 32665 ;;  position        4  117[COMRAM] unsigned long 
 32666 ;;  fat_sector_o    4  113[COMRAM] unsigned long 
 32667 ;;  pbuf            2  125[COMRAM] PTR struct fat_buffer
 32668 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 32669 ;;		 -> NULL(0), 
 32670 ;; Return value:  Size  Location     Type
 32671 ;;                  4   69[COMRAM] unsigned long 
 32672 ;; Registers used:
 32673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 32674 ;; Tracked objects:
 32675 ;;		On entry : 0/0
 32676 ;;		On exit  : 0/0
 32677 ;;		Unchanged: 0/0
 32678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32679 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32680 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32681 ;;      Temps:         38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32682 ;;      Totals:        58       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32683 ;;Total ram usage:       58 bytes
 32684 ;; Hardware stack levels used:    1
 32685 ;; Hardware stack levels required when called:    5
 32686 ;; This function calls:
 32687 ;;		_fatfs_fat_read_sector
 32688 ;; This function is called by:
 32689 ;;		_fatfs_sector_reader
 32690 ;;		__read_sectors
 32691 ;;		__write_sectors
 32692 ;;		_fatfs_free_cluster_chain
 32693 ;;		_fatfs_fat_add_cluster_to_chain
 32694 ;; This function uses a non-reentrant model
 32695 ;;
 32696                           
 32697                           	psect	text95
 32698  00A93C                     __ptext95:
 32699                           	opt stack 0
 32700  00A93C                     _fatfs_find_next_cluster:
 32701                           	opt stack 21
 32702                           
 32703                           ;fat_table.c: 207: uint32 fat_sector_offset, position;
 32704                           ;fat_table.c: 208: uint32 nextcluster;
 32705                           ;fat_table.c: 209: struct fat_buffer *pbuf;
 32706                           ;fat_table.c: 212: if (current_cluster == 0)
 32707                           
 32708                           ;incstack = 0
 32709  00A93C  504B               	movf	fatfs_find_next_cluster@current_cluster+3,w,c
 32710  00A93E  1048               	iorwf	fatfs_find_next_cluster@current_cluster,w,c
 32711  00A940  1049               	iorwf	fatfs_find_next_cluster@current_cluster+1,w,c
 32712  00A942  104A               	iorwf	fatfs_find_next_cluster@current_cluster+2,w,c
 32713  00A944  E105               	bnz	l8858
 32714                           
 32715                           ;fat_table.c: 213: current_cluster = 2;
 32716  00A946  0E02               	movlw	2
 32717  00A948  6E48               	movwf	fatfs_find_next_cluster@current_cluster,c
 32718  00A94A  6A49               	clrf	fatfs_find_next_cluster@current_cluster+1,c
 32719  00A94C  6A4A               	clrf	fatfs_find_next_cluster@current_cluster+2,c
 32720  00A94E  6A4B               	clrf	fatfs_find_next_cluster@current_cluster+3,c
 32721  00A950                     l8858:
 32722                           
 32723                           ;fat_table.c: 216: if (fs->fat_type == FAT_TYPE_16)
 32724  00A950  EE20 F028          	lfsr	2,40
 32725  00A954  5046               	movf	fatfs_find_next_cluster@fs,w,c
 32726  00A956  26D9               	addwf	fsr2l,f,c
 32727  00A958  5047               	movf	fatfs_find_next_cluster@fs+1,w,c
 32728  00A95A  22DA               	addwfc	fsr2h,f,c
 32729  00A95C  50DF               	movf	indf2,w,c
 32730  00A95E  E110               	bnz	l8862
 32731                           
 32732                           ;fat_table.c: 217: fat_sector_offset = current_cluster / 256;
 32733  00A960  C048  F04C         	movff	fatfs_find_next_cluster@current_cluster,??_fatfs_find_next_cluster
 32734  00A964  C049  F04D         	movff	fatfs_find_next_cluster@current_cluster+1,??_fatfs_find_next_cluster+1
 32735  00A968  C04A  F04E         	movff	fatfs_find_next_cluster@current_cluster+2,??_fatfs_find_next_cluster+2
 32736  00A96C  C04B  F04F         	movff	fatfs_find_next_cluster@current_cluster+3,??_fatfs_find_next_cluster+3
 32737  00A970  C04D  F04C         	movff	??_fatfs_find_next_cluster+1,??_fatfs_find_next_cluster
 32738  00A974  C04E  F04D         	movff	??_fatfs_find_next_cluster+2,??_fatfs_find_next_cluster+1
 32739  00A978  C04F  F04E         	movff	??_fatfs_find_next_cluster+3,??_fatfs_find_next_cluster+2
 32740  00A97C  6A4F               	clrf	??_fatfs_find_next_cluster+3,c
 32741  00A97E  D011               	goto	L112
 32742  00A980                     l8862:
 32743                           
 32744                           ;fat_table.c: 218: else
 32745                           ;fat_table.c: 219: fat_sector_offset = current_cluster / 128;
 32746  00A980  C048  F04C         	movff	fatfs_find_next_cluster@current_cluster,??_fatfs_find_next_cluster
 32747  00A984  C049  F04D         	movff	fatfs_find_next_cluster@current_cluster+1,??_fatfs_find_next_cluster+1
 32748  00A988  C04A  F04E         	movff	fatfs_find_next_cluster@current_cluster+2,??_fatfs_find_next_cluster+2
 32749  00A98C  C04B  F04F         	movff	fatfs_find_next_cluster@current_cluster+3,??_fatfs_find_next_cluster+3
 32750  00A990  0E08               	movlw	8
 32751  00A992  D005               	goto	u9270
 32752  00A994                     u9275:
 32753  00A994  90D8               	bcf	status,0,c
 32754  00A996  324F               	rrcf	??_fatfs_find_next_cluster+3,f,c
 32755  00A998  324E               	rrcf	??_fatfs_find_next_cluster+2,f,c
 32756  00A99A  324D               	rrcf	??_fatfs_find_next_cluster+1,f,c
 32757  00A99C  324C               	rrcf	??_fatfs_find_next_cluster,f,c
 32758  00A99E                     u9270:
 32759  00A99E  2EE8               	decfsz	wreg,f,c
 32760  00A9A0  D7F9               	goto	u9275
 32761  00A9A2                     L112:
 32762  00A9A2  C04C  F072         	movff	??_fatfs_find_next_cluster,fatfs_find_next_cluster@fat_sector_offset
 32763  00A9A6  C04D  F073         	movff	??_fatfs_find_next_cluster+1,fatfs_find_next_cluster@fat_sector_offset+1
 32764  00A9AA  C04E  F074         	movff	??_fatfs_find_next_cluster+2,fatfs_find_next_cluster@fat_sector_offset+2
 32765  00A9AE  C04F  F075         	movff	??_fatfs_find_next_cluster+3,fatfs_find_next_cluster@fat_sector_offset+3
 32766                           
 32767                           ;fat_table.c: 222: pbuf = fatfs_fat_read_sector(fs, fs->fat_begin_lba+fat_sector_offset)
      +                          ;
 32768  00A9B2  C047  F035         	movff	fatfs_find_next_cluster@fs+1,fatfs_fat_read_sector@fs+1
 32769  00A9B6  C046  F034         	movff	fatfs_find_next_cluster@fs,fatfs_fat_read_sector@fs
 32770  00A9BA  EE20 F011          	lfsr	2,17
 32771  00A9BE  5046               	movf	fatfs_find_next_cluster@fs,w,c
 32772  00A9C0  26D9               	addwf	fsr2l,f,c
 32773  00A9C2  5047               	movf	fatfs_find_next_cluster@fs+1,w,c
 32774  00A9C4  22DA               	addwfc	fsr2h,f,c
 32775  00A9C6  CFDE F04C          	movff	postinc2,??_fatfs_find_next_cluster
 32776  00A9CA  CFDE F04D          	movff	postinc2,??_fatfs_find_next_cluster+1
 32777  00A9CE  CFDE F04E          	movff	postinc2,??_fatfs_find_next_cluster+2
 32778  00A9D2  CFDE F04F          	movff	postinc2,??_fatfs_find_next_cluster+3
 32779  00A9D6  5072               	movf	fatfs_find_next_cluster@fat_sector_offset,w,c
 32780  00A9D8  244C               	addwf	??_fatfs_find_next_cluster,w,c
 32781  00A9DA  6E36               	movwf	fatfs_fat_read_sector@sector,c
 32782  00A9DC  5073               	movf	fatfs_find_next_cluster@fat_sector_offset+1,w,c
 32783  00A9DE  204D               	addwfc	??_fatfs_find_next_cluster+1,w,c
 32784  00A9E0  6E37               	movwf	fatfs_fat_read_sector@sector+1,c
 32785  00A9E2  5074               	movf	fatfs_find_next_cluster@fat_sector_offset+2,w,c
 32786  00A9E4  204E               	addwfc	??_fatfs_find_next_cluster+2,w,c
 32787  00A9E6  6E38               	movwf	fatfs_fat_read_sector@sector+2,c
 32788  00A9E8  5075               	movf	fatfs_find_next_cluster@fat_sector_offset+3,w,c
 32789  00A9EA  204F               	addwfc	??_fatfs_find_next_cluster+3,w,c
 32790  00A9EC  6E39               	movwf	fatfs_fat_read_sector@sector+3,c
 32791  00A9EE  EC81  F043         	call	_fatfs_fat_read_sector	;wreg free
 32792  00A9F2  C034  F07E         	movff	?_fatfs_fat_read_sector,fatfs_find_next_cluster@pbuf
 32793  00A9F6  C035  F07F         	movff	?_fatfs_fat_read_sector+1,fatfs_find_next_cluster@pbuf+1
 32794                           
 32795                           ;fat_table.c: 223: if (!pbuf)
 32796  00A9FA  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 32797  00A9FC  107E               	iorwf	fatfs_find_next_cluster@pbuf,w,c
 32798  00A9FE  E101 D162          	bz	u9350
 32799                           
 32800                           ;fat_table.c: 226: if (fs->fat_type == FAT_TYPE_16)
 32801                           
 32802                           ;fat_table.c: 224: return (0xFFFFFFFF);
 32803  00AA02  EE20 F028          	lfsr	2,40
 32804  00AA06  5046               	movf	fatfs_find_next_cluster@fs,w,c
 32805  00AA08  26D9               	addwf	fsr2l,f,c
 32806  00AA0A  5047               	movf	fatfs_find_next_cluster@fs+1,w,c
 32807  00AA0C  22DA               	addwfc	fsr2h,f,c
 32808  00AA0E  50DF               	movf	indf2,w,c
 32809  00AA10  E16B               	bnz	l8882
 32810                           
 32811                           ;fat_table.c: 227: {
 32812                           ;fat_table.c: 229: position = (current_cluster - (fat_sector_offset * 256)) * 2;
 32813  00AA12  C072  F04D         	movff	fatfs_find_next_cluster@fat_sector_offset,??_fatfs_find_next_cluster+1
 32814  00AA16  C073  F04E         	movff	fatfs_find_next_cluster@fat_sector_offset+1,??_fatfs_find_next_cluster+2
 32815  00AA1A  C074  F04F         	movff	fatfs_find_next_cluster@fat_sector_offset+2,??_fatfs_find_next_cluster+3
 32816  00AA1E  6A4C               	clrf	??_fatfs_find_next_cluster& (0+255),c
 32817  00AA20  1E4C               	comf	??_fatfs_find_next_cluster,f,c
 32818  00AA22  1E4D               	comf	??_fatfs_find_next_cluster+1,f,c
 32819  00AA24  1E4E               	comf	??_fatfs_find_next_cluster+2,f,c
 32820  00AA26  1E4F               	comf	??_fatfs_find_next_cluster+3,f,c
 32821  00AA28  2A4C               	incf	??_fatfs_find_next_cluster,f,c
 32822  00AA2A  0E00               	movlw	0
 32823  00AA2C  224D               	addwfc	??_fatfs_find_next_cluster+1,f,c
 32824  00AA2E  224E               	addwfc	??_fatfs_find_next_cluster+2,f,c
 32825  00AA30  224F               	addwfc	??_fatfs_find_next_cluster+3,f,c
 32826  00AA32  5048               	movf	fatfs_find_next_cluster@current_cluster,w,c
 32827  00AA34  244C               	addwf	??_fatfs_find_next_cluster,w,c
 32828  00AA36  6E50               	movwf	(??_fatfs_find_next_cluster+4)& (0+255),c
 32829  00AA38  5049               	movf	fatfs_find_next_cluster@current_cluster+1,w,c
 32830  00AA3A  204D               	addwfc	??_fatfs_find_next_cluster+1,w,c
 32831  00AA3C  6E51               	movwf	(??_fatfs_find_next_cluster+5)& (0+255),c
 32832  00AA3E  504A               	movf	fatfs_find_next_cluster@current_cluster+2,w,c
 32833  00AA40  204E               	addwfc	??_fatfs_find_next_cluster+2,w,c
 32834  00AA42  6E52               	movwf	(??_fatfs_find_next_cluster+6)& (0+255),c
 32835  00AA44  504B               	movf	fatfs_find_next_cluster@current_cluster+3,w,c
 32836  00AA46  204F               	addwfc	??_fatfs_find_next_cluster+3,w,c
 32837  00AA48  6E53               	movwf	(??_fatfs_find_next_cluster+7)& (0+255),c
 32838  00AA4A  90D8               	bcf	status,0,c
 32839  00AA4C  3450               	rlcf	??_fatfs_find_next_cluster+4,w,c
 32840  00AA4E  6E76               	movwf	fatfs_find_next_cluster@position,c
 32841  00AA50  3451               	rlcf	??_fatfs_find_next_cluster+5,w,c
 32842  00AA52  6E77               	movwf	fatfs_find_next_cluster@position+1,c
 32843  00AA54  3452               	rlcf	??_fatfs_find_next_cluster+6,w,c
 32844  00AA56  6E78               	movwf	fatfs_find_next_cluster@position+2,c
 32845  00AA58  3453               	rlcf	??_fatfs_find_next_cluster+7,w,c
 32846  00AA5A  6E79               	movwf	fatfs_find_next_cluster@position+3,c
 32847                           
 32848                           ;fat_table.c: 232: nextcluster = ( ( ((uint16)pbuf->ptr[(uint16)position+1]<<8) + (uint1
      +                          6)pbuf->ptr[(uint16)position+0] ) );
 32849  00AA5C  2876               	incf	fatfs_find_next_cluster@position,w,c
 32850  00AA5E  6E4C               	movwf	??_fatfs_find_next_cluster& (0+255),c
 32851  00AA60  0E00               	movlw	0
 32852  00AA62  2077               	addwfc	fatfs_find_next_cluster@position+1,w,c
 32853  00AA64  6E4D               	movwf	(??_fatfs_find_next_cluster+1)& (0+255),c
 32854  00AA66  EE22 F006          	lfsr	2,518
 32855  00AA6A  507E               	movf	fatfs_find_next_cluster@pbuf,w,c
 32856  00AA6C  26D9               	addwf	fsr2l,f,c
 32857  00AA6E  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 32858  00AA70  22DA               	addwfc	fsr2h,f,c
 32859  00AA72  CFDE F04E          	movff	postinc2,??_fatfs_find_next_cluster+2
 32860  00AA76  CFDD F04F          	movff	postdec2,??_fatfs_find_next_cluster+3
 32861  00AA7A  504C               	movf	??_fatfs_find_next_cluster,w,c
 32862  00AA7C  244E               	addwf	??_fatfs_find_next_cluster+2,w,c
 32863  00AA7E  6ED9               	movwf	fsr2l,c
 32864  00AA80  504D               	movf	??_fatfs_find_next_cluster+1,w,c
 32865  00AA82  204F               	addwfc	??_fatfs_find_next_cluster+3,w,c
 32866  00AA84  6EDA               	movwf	fsr2h,c
 32867  00AA86  50DF               	movf	indf2,w,c
 32868  00AA88  6E50               	movwf	(??_fatfs_find_next_cluster+4)& (0+255),c
 32869  00AA8A  5050               	movf	??_fatfs_find_next_cluster+4,w,c
 32870  00AA8C  6E52               	movwf	(??_fatfs_find_next_cluster+6)& (0+255),c
 32871  00AA8E  6A51               	clrf	(??_fatfs_find_next_cluster+5)& (0+255),c
 32872  00AA90  EE22 F006          	lfsr	2,518
 32873  00AA94  507E               	movf	fatfs_find_next_cluster@pbuf,w,c
 32874  00AA96  26D9               	addwf	fsr2l,f,c
 32875  00AA98  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 32876  00AA9A  22DA               	addwfc	fsr2h,f,c
 32877  00AA9C  CFDE F053          	movff	postinc2,??_fatfs_find_next_cluster+7
 32878  00AAA0  CFDD F054          	movff	postdec2,??_fatfs_find_next_cluster+8
 32879  00AAA4  5076               	movf	fatfs_find_next_cluster@position,w,c
 32880  00AAA6  2453               	addwf	??_fatfs_find_next_cluster+7,w,c
 32881  00AAA8  6ED9               	movwf	fsr2l,c
 32882  00AAAA  5077               	movf	fatfs_find_next_cluster@position+1,w,c
 32883  00AAAC  2054               	addwfc	??_fatfs_find_next_cluster+8,w,c
 32884  00AAAE  6EDA               	movwf	fsr2h,c
 32885  00AAB0  50DF               	movf	indf2,w,c
 32886  00AAB2  6E55               	movwf	(??_fatfs_find_next_cluster+9)& (0+255),c
 32887  00AAB4  5055               	movf	??_fatfs_find_next_cluster+9,w,c
 32888  00AAB6  2651               	addwf	??_fatfs_find_next_cluster+5,f,c
 32889  00AAB8  0E00               	movlw	0
 32890  00AABA  2252               	addwfc	??_fatfs_find_next_cluster+6,f,c
 32891  00AABC  C051  F07A         	movff	??_fatfs_find_next_cluster+5,fatfs_find_next_cluster@nextcluster
 32892  00AAC0  C052  F07B         	movff	??_fatfs_find_next_cluster+6,fatfs_find_next_cluster@nextcluster+1
 32893  00AAC4  6A7C               	clrf	fatfs_find_next_cluster@nextcluster+2,c
 32894  00AAC6  6A7D               	clrf	fatfs_find_next_cluster@nextcluster+3,c
 32895                           
 32896                           ;fat_table.c: 235: if (nextcluster >= 0xFFF8 && nextcluster <= 0xFFFF)
 32897  00AAC8  0EF8               	movlw	248
 32898  00AACA  5C7A               	subwf	fatfs_find_next_cluster@nextcluster,w,c
 32899  00AACC  0EFF               	movlw	255
 32900  00AACE  587B               	subwfb	fatfs_find_next_cluster@nextcluster+1,w,c
 32901  00AAD0  0E00               	movlw	0
 32902  00AAD2  587C               	subwfb	fatfs_find_next_cluster@nextcluster+2,w,c
 32903  00AAD4  0E00               	movlw	0
 32904  00AAD6  587D               	subwfb	fatfs_find_next_cluster@nextcluster+3,w,c
 32905  00AAD8  E201 D0FA          	bnc	l1231
 32906  00AADC  6A4C               	clrf	??_fatfs_find_next_cluster& (0+255),c
 32907  00AADE  6A4D               	clrf	(??_fatfs_find_next_cluster+1)& (0+255),c
 32908  00AAE0  0E01               	movlw	1
 32909  00AAE2  6E4E               	movwf	(??_fatfs_find_next_cluster+2)& (0+255),c
 32910  00AAE4  0E00               	movlw	0
 32911  00AAE6  D0E5               	goto	L113
 32912  00AAE8                     l8882:
 32913                           
 32914                           ;fat_table.c: 238: else
 32915                           ;fat_table.c: 239: {
 32916                           ;fat_table.c: 241: position = (current_cluster - (fat_sector_offset * 128)) * 4;
 32917  00AAE8  C072  F04C         	movff	fatfs_find_next_cluster@fat_sector_offset,??_fatfs_find_next_cluster
 32918  00AAEC  C073  F04D         	movff	fatfs_find_next_cluster@fat_sector_offset+1,??_fatfs_find_next_cluster+1
 32919  00AAF0  C074  F04E         	movff	fatfs_find_next_cluster@fat_sector_offset+2,??_fatfs_find_next_cluster+2
 32920  00AAF4  C075  F04F         	movff	fatfs_find_next_cluster@fat_sector_offset+3,??_fatfs_find_next_cluster+3
 32921  00AAF8  0E07               	movlw	7
 32922  00AAFA                     u9325:
 32923  00AAFA  90D8               	bcf	status,0,c
 32924  00AAFC  364C               	rlcf	??_fatfs_find_next_cluster,f,c
 32925  00AAFE  364D               	rlcf	??_fatfs_find_next_cluster+1,f,c
 32926  00AB00  364E               	rlcf	??_fatfs_find_next_cluster+2,f,c
 32927  00AB02  364F               	rlcf	??_fatfs_find_next_cluster+3,f,c
 32928  00AB04  2EE8               	decfsz	wreg,f,c
 32929  00AB06  D7F9               	goto	u9325
 32930  00AB08  1E4C               	comf	??_fatfs_find_next_cluster,f,c
 32931  00AB0A  1E4D               	comf	??_fatfs_find_next_cluster+1,f,c
 32932  00AB0C  1E4E               	comf	??_fatfs_find_next_cluster+2,f,c
 32933  00AB0E  1E4F               	comf	??_fatfs_find_next_cluster+3,f,c
 32934  00AB10  2A4C               	incf	??_fatfs_find_next_cluster,f,c
 32935  00AB12  0E00               	movlw	0
 32936  00AB14  224D               	addwfc	??_fatfs_find_next_cluster+1,f,c
 32937  00AB16  224E               	addwfc	??_fatfs_find_next_cluster+2,f,c
 32938  00AB18  224F               	addwfc	??_fatfs_find_next_cluster+3,f,c
 32939  00AB1A  5048               	movf	fatfs_find_next_cluster@current_cluster,w,c
 32940  00AB1C  244C               	addwf	??_fatfs_find_next_cluster,w,c
 32941  00AB1E  6E50               	movwf	(??_fatfs_find_next_cluster+4)& (0+255),c
 32942  00AB20  5049               	movf	fatfs_find_next_cluster@current_cluster+1,w,c
 32943  00AB22  204D               	addwfc	??_fatfs_find_next_cluster+1,w,c
 32944  00AB24  6E51               	movwf	(??_fatfs_find_next_cluster+5)& (0+255),c
 32945  00AB26  504A               	movf	fatfs_find_next_cluster@current_cluster+2,w,c
 32946  00AB28  204E               	addwfc	??_fatfs_find_next_cluster+2,w,c
 32947  00AB2A  6E52               	movwf	(??_fatfs_find_next_cluster+6)& (0+255),c
 32948  00AB2C  504B               	movf	fatfs_find_next_cluster@current_cluster+3,w,c
 32949  00AB2E  204F               	addwfc	??_fatfs_find_next_cluster+3,w,c
 32950  00AB30  6E53               	movwf	(??_fatfs_find_next_cluster+7)& (0+255),c
 32951  00AB32  0E02               	movlw	2
 32952  00AB34                     u9335:
 32953  00AB34  90D8               	bcf	status,0,c
 32954  00AB36  3650               	rlcf	??_fatfs_find_next_cluster+4,f,c
 32955  00AB38  3651               	rlcf	??_fatfs_find_next_cluster+5,f,c
 32956  00AB3A  3652               	rlcf	??_fatfs_find_next_cluster+6,f,c
 32957  00AB3C  3653               	rlcf	??_fatfs_find_next_cluster+7,f,c
 32958  00AB3E  2EE8               	decfsz	wreg,f,c
 32959  00AB40  D7F9               	goto	u9335
 32960  00AB42  C050  F076         	movff	??_fatfs_find_next_cluster+4,fatfs_find_next_cluster@position
 32961  00AB46  C051  F077         	movff	??_fatfs_find_next_cluster+5,fatfs_find_next_cluster@position+1
 32962  00AB4A  C052  F078         	movff	??_fatfs_find_next_cluster+6,fatfs_find_next_cluster@position+2
 32963  00AB4E  C053  F079         	movff	??_fatfs_find_next_cluster+7,fatfs_find_next_cluster@position+3
 32964                           
 32965                           ;fat_table.c: 244: nextcluster = ( ( ((uint32)pbuf->ptr[(uint16)position+3]<<24) + ((uin
      +                          t32)pbuf->ptr[(uint16)position+2]<<16) + ((uint32)pbuf->ptr[(uint16)position+1]<<8) + (u
      +                          int32)pbuf->ptr[(uint16)position+0] ) );
 32966  00AB52  2876               	incf	fatfs_find_next_cluster@position,w,c
 32967  00AB54  6E4C               	movwf	??_fatfs_find_next_cluster& (0+255),c
 32968  00AB56  0E00               	movlw	0
 32969  00AB58  2077               	addwfc	fatfs_find_next_cluster@position+1,w,c
 32970  00AB5A  6E4D               	movwf	(??_fatfs_find_next_cluster+1)& (0+255),c
 32971  00AB5C  EE22 F006          	lfsr	2,518
 32972  00AB60  507E               	movf	fatfs_find_next_cluster@pbuf,w,c
 32973  00AB62  26D9               	addwf	fsr2l,f,c
 32974  00AB64  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 32975  00AB66  22DA               	addwfc	fsr2h,f,c
 32976  00AB68  CFDE F04E          	movff	postinc2,??_fatfs_find_next_cluster+2
 32977  00AB6C  CFDD F04F          	movff	postdec2,??_fatfs_find_next_cluster+3
 32978  00AB70  504C               	movf	??_fatfs_find_next_cluster,w,c
 32979  00AB72  244E               	addwf	??_fatfs_find_next_cluster+2,w,c
 32980  00AB74  6ED9               	movwf	fsr2l,c
 32981  00AB76  504D               	movf	??_fatfs_find_next_cluster+1,w,c
 32982  00AB78  204F               	addwfc	??_fatfs_find_next_cluster+3,w,c
 32983  00AB7A  6EDA               	movwf	fsr2h,c
 32984  00AB7C  50DF               	movf	indf2,w,c
 32985  00AB7E  6E50               	movwf	(??_fatfs_find_next_cluster+4)& (0+255),c
 32986  00AB80  C050  F051         	movff	??_fatfs_find_next_cluster+4,??_fatfs_find_next_cluster+5
 32987  00AB84  6A52               	clrf	(??_fatfs_find_next_cluster+6)& (0+255),c
 32988  00AB86  6A53               	clrf	(??_fatfs_find_next_cluster+7)& (0+255),c
 32989  00AB88  6A54               	clrf	(??_fatfs_find_next_cluster+8)& (0+255),c
 32990  00AB8A  C053  F054         	movff	??_fatfs_find_next_cluster+7,??_fatfs_find_next_cluster+8
 32991  00AB8E  C052  F053         	movff	??_fatfs_find_next_cluster+6,??_fatfs_find_next_cluster+7
 32992  00AB92  C051  F052         	movff	??_fatfs_find_next_cluster+5,??_fatfs_find_next_cluster+6
 32993  00AB96  6A51               	clrf	??_fatfs_find_next_cluster+5,c
 32994  00AB98  0E02               	movlw	2
 32995  00AB9A  2476               	addwf	fatfs_find_next_cluster@position,w,c
 32996  00AB9C  6E55               	movwf	(??_fatfs_find_next_cluster+9)& (0+255),c
 32997  00AB9E  0E00               	movlw	0
 32998  00ABA0  2077               	addwfc	fatfs_find_next_cluster@position+1,w,c
 32999  00ABA2  6E56               	movwf	(??_fatfs_find_next_cluster+10)& (0+255),c
 33000  00ABA4  EE22 F006          	lfsr	2,518
 33001  00ABA8  507E               	movf	fatfs_find_next_cluster@pbuf,w,c
 33002  00ABAA  26D9               	addwf	fsr2l,f,c
 33003  00ABAC  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 33004  00ABAE  22DA               	addwfc	fsr2h,f,c
 33005  00ABB0  CFDE F057          	movff	postinc2,??_fatfs_find_next_cluster+11
 33006  00ABB4  CFDD F058          	movff	postdec2,??_fatfs_find_next_cluster+12
 33007  00ABB8  5055               	movf	??_fatfs_find_next_cluster+9,w,c
 33008  00ABBA  2457               	addwf	??_fatfs_find_next_cluster+11,w,c
 33009  00ABBC  6ED9               	movwf	fsr2l,c
 33010  00ABBE  5056               	movf	??_fatfs_find_next_cluster+10,w,c
 33011  00ABC0  2058               	addwfc	??_fatfs_find_next_cluster+12,w,c
 33012  00ABC2  6EDA               	movwf	fsr2h,c
 33013  00ABC4  50DF               	movf	indf2,w,c
 33014  00ABC6  6E59               	movwf	(??_fatfs_find_next_cluster+13)& (0+255),c
 33015  00ABC8  C059  F05A         	movff	??_fatfs_find_next_cluster+13,??_fatfs_find_next_cluster+14
 33016  00ABCC  6A5B               	clrf	(??_fatfs_find_next_cluster+15)& (0+255),c
 33017  00ABCE  6A5C               	clrf	(??_fatfs_find_next_cluster+16)& (0+255),c
 33018  00ABD0  6A5D               	clrf	(??_fatfs_find_next_cluster+17)& (0+255),c
 33019  00ABD2  C05B  F05D         	movff	??_fatfs_find_next_cluster+15,??_fatfs_find_next_cluster+17
 33020  00ABD6  C05A  F05C         	movff	??_fatfs_find_next_cluster+14,??_fatfs_find_next_cluster+16
 33021  00ABDA  6A5B               	clrf	??_fatfs_find_next_cluster+15,c
 33022  00ABDC  6A5A               	clrf	??_fatfs_find_next_cluster+14,c
 33023  00ABDE  0E03               	movlw	3
 33024  00ABE0  2476               	addwf	fatfs_find_next_cluster@position,w,c
 33025  00ABE2  6E5E               	movwf	(??_fatfs_find_next_cluster+18)& (0+255),c
 33026  00ABE4  0E00               	movlw	0
 33027  00ABE6  2077               	addwfc	fatfs_find_next_cluster@position+1,w,c
 33028  00ABE8  6E5F               	movwf	(??_fatfs_find_next_cluster+19)& (0+255),c
 33029  00ABEA  EE22 F006          	lfsr	2,518
 33030  00ABEE  507E               	movf	fatfs_find_next_cluster@pbuf,w,c
 33031  00ABF0  26D9               	addwf	fsr2l,f,c
 33032  00ABF2  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 33033  00ABF4  22DA               	addwfc	fsr2h,f,c
 33034  00ABF6  CFDE F060          	movff	postinc2,??_fatfs_find_next_cluster+20
 33035  00ABFA  CFDD F061          	movff	postdec2,??_fatfs_find_next_cluster+21
 33036  00ABFE  505E               	movf	??_fatfs_find_next_cluster+18,w,c
 33037  00AC00  2460               	addwf	??_fatfs_find_next_cluster+20,w,c
 33038  00AC02  6ED9               	movwf	fsr2l,c
 33039  00AC04  505F               	movf	??_fatfs_find_next_cluster+19,w,c
 33040  00AC06  2061               	addwfc	??_fatfs_find_next_cluster+21,w,c
 33041  00AC08  6EDA               	movwf	fsr2h,c
 33042  00AC0A  50DF               	movf	indf2,w,c
 33043  00AC0C  6E62               	movwf	(??_fatfs_find_next_cluster+22)& (0+255),c
 33044  00AC0E  C062  F063         	movff	??_fatfs_find_next_cluster+22,??_fatfs_find_next_cluster+23
 33045  00AC12  6A64               	clrf	(??_fatfs_find_next_cluster+24)& (0+255),c
 33046  00AC14  6A65               	clrf	(??_fatfs_find_next_cluster+25)& (0+255),c
 33047  00AC16  6A66               	clrf	(??_fatfs_find_next_cluster+26)& (0+255),c
 33048  00AC18  C063  F066         	movff	??_fatfs_find_next_cluster+23,??_fatfs_find_next_cluster+26
 33049  00AC1C  6A65               	clrf	??_fatfs_find_next_cluster+25,c
 33050  00AC1E  6A64               	clrf	??_fatfs_find_next_cluster+24,c
 33051  00AC20  6A63               	clrf	??_fatfs_find_next_cluster+23,c
 33052  00AC22  505A               	movf	??_fatfs_find_next_cluster+14,w,c
 33053  00AC24  2463               	addwf	??_fatfs_find_next_cluster+23,w,c
 33054  00AC26  6E67               	movwf	(??_fatfs_find_next_cluster+27)& (0+255),c
 33055  00AC28  505B               	movf	??_fatfs_find_next_cluster+15,w,c
 33056  00AC2A  2064               	addwfc	??_fatfs_find_next_cluster+24,w,c
 33057  00AC2C  6E68               	movwf	(??_fatfs_find_next_cluster+28)& (0+255),c
 33058  00AC2E  505C               	movf	??_fatfs_find_next_cluster+16,w,c
 33059  00AC30  2065               	addwfc	??_fatfs_find_next_cluster+25,w,c
 33060  00AC32  6E69               	movwf	(??_fatfs_find_next_cluster+29)& (0+255),c
 33061  00AC34  505D               	movf	??_fatfs_find_next_cluster+17,w,c
 33062  00AC36  2066               	addwfc	??_fatfs_find_next_cluster+26,w,c
 33063  00AC38  6E6A               	movwf	(??_fatfs_find_next_cluster+30)& (0+255),c
 33064  00AC3A  5051               	movf	??_fatfs_find_next_cluster+5,w,c
 33065  00AC3C  2467               	addwf	??_fatfs_find_next_cluster+27,w,c
 33066  00AC3E  6E6B               	movwf	(??_fatfs_find_next_cluster+31)& (0+255),c
 33067  00AC40  5052               	movf	??_fatfs_find_next_cluster+6,w,c
 33068  00AC42  2068               	addwfc	??_fatfs_find_next_cluster+28,w,c
 33069  00AC44  6E6C               	movwf	(??_fatfs_find_next_cluster+32)& (0+255),c
 33070  00AC46  5053               	movf	??_fatfs_find_next_cluster+7,w,c
 33071  00AC48  2069               	addwfc	??_fatfs_find_next_cluster+29,w,c
 33072  00AC4A  6E6D               	movwf	(??_fatfs_find_next_cluster+33)& (0+255),c
 33073  00AC4C  5054               	movf	??_fatfs_find_next_cluster+8,w,c
 33074  00AC4E  206A               	addwfc	??_fatfs_find_next_cluster+30,w,c
 33075  00AC50  6E6E               	movwf	(??_fatfs_find_next_cluster+34)& (0+255),c
 33076  00AC52  EE22 F006          	lfsr	2,518
 33077  00AC56  507E               	movf	fatfs_find_next_cluster@pbuf,w,c
 33078  00AC58  26D9               	addwf	fsr2l,f,c
 33079  00AC5A  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 33080  00AC5C  22DA               	addwfc	fsr2h,f,c
 33081  00AC5E  CFDE F06F          	movff	postinc2,??_fatfs_find_next_cluster+35
 33082  00AC62  CFDD F070          	movff	postdec2,??_fatfs_find_next_cluster+36
 33083  00AC66  5076               	movf	fatfs_find_next_cluster@position,w,c
 33084  00AC68  246F               	addwf	??_fatfs_find_next_cluster+35,w,c
 33085  00AC6A  6ED9               	movwf	fsr2l,c
 33086  00AC6C  5077               	movf	fatfs_find_next_cluster@position+1,w,c
 33087  00AC6E  2070               	addwfc	??_fatfs_find_next_cluster+36,w,c
 33088  00AC70  6EDA               	movwf	fsr2h,c
 33089  00AC72  50DF               	movf	indf2,w,c
 33090  00AC74  6E71               	movwf	(??_fatfs_find_next_cluster+37)& (0+255),c
 33091  00AC76  5071               	movf	??_fatfs_find_next_cluster+37,w,c
 33092  00AC78  246B               	addwf	??_fatfs_find_next_cluster+31,w,c
 33093  00AC7A  6E7A               	movwf	fatfs_find_next_cluster@nextcluster,c
 33094  00AC7C  0E00               	movlw	0
 33095  00AC7E  206C               	addwfc	??_fatfs_find_next_cluster+32,w,c
 33096  00AC80  6E7B               	movwf	fatfs_find_next_cluster@nextcluster+1,c
 33097  00AC82  0E00               	movlw	0
 33098  00AC84  206D               	addwfc	??_fatfs_find_next_cluster+33,w,c
 33099  00AC86  6E7C               	movwf	fatfs_find_next_cluster@nextcluster+2,c
 33100  00AC88  0E00               	movlw	0
 33101  00AC8A  206E               	addwfc	??_fatfs_find_next_cluster+34,w,c
 33102  00AC8C  6E7D               	movwf	fatfs_find_next_cluster@nextcluster+3,c
 33103                           
 33104                           ;fat_table.c: 247: nextcluster = nextcluster & 0x0FFFFFFF;
 33105  00AC8E  507A               	movf	fatfs_find_next_cluster@nextcluster,w,c
 33106  00AC90  507B               	movf	fatfs_find_next_cluster@nextcluster+1,w,c
 33107  00AC92  507C               	movf	fatfs_find_next_cluster@nextcluster+2,w,c
 33108  00AC94  0E0F               	movlw	15
 33109  00AC96  167D               	andwf	fatfs_find_next_cluster@nextcluster+3,f,c
 33110                           
 33111                           ;fat_table.c: 250: if (nextcluster >= 0x0FFFFFF8 && nextcluster <= 0x0FFFFFFF)
 33112  00AC98  0EF8               	movlw	248
 33113  00AC9A  5C7A               	subwf	fatfs_find_next_cluster@nextcluster,w,c
 33114  00AC9C  0EFF               	movlw	255
 33115  00AC9E  587B               	subwfb	fatfs_find_next_cluster@nextcluster+1,w,c
 33116  00ACA0  0EFF               	movlw	255
 33117  00ACA2  587C               	subwfb	fatfs_find_next_cluster@nextcluster+2,w,c
 33118  00ACA4  0E0F               	movlw	15
 33119  00ACA6  587D               	subwfb	fatfs_find_next_cluster@nextcluster+3,w,c
 33120  00ACA8  E313               	bnc	l1231
 33121  00ACAA  6A4C               	clrf	??_fatfs_find_next_cluster& (0+255),c
 33122  00ACAC  6A4D               	clrf	(??_fatfs_find_next_cluster+1)& (0+255),c
 33123  00ACAE  6A4E               	clrf	(??_fatfs_find_next_cluster+2)& (0+255),c
 33124  00ACB0  0E10               	movlw	16
 33125  00ACB2                     L113:
 33126  00ACB2  6E4F               	movwf	(??_fatfs_find_next_cluster+3)& (0+255),c
 33127  00ACB4  504C               	movf	??_fatfs_find_next_cluster,w,c
 33128  00ACB6  5C7A               	subwf	fatfs_find_next_cluster@nextcluster,w,c
 33129  00ACB8  504D               	movf	??_fatfs_find_next_cluster+1,w,c
 33130  00ACBA  587B               	subwfb	fatfs_find_next_cluster@nextcluster+1,w,c
 33131  00ACBC  504E               	movf	??_fatfs_find_next_cluster+2,w,c
 33132  00ACBE  587C               	subwfb	fatfs_find_next_cluster@nextcluster+2,w,c
 33133  00ACC0  504F               	movf	??_fatfs_find_next_cluster+3,w,c
 33134  00ACC2  587D               	subwfb	fatfs_find_next_cluster@nextcluster+3,w,c
 33135  00ACC4  E205               	bc	l1231
 33136  00ACC6                     u9350:
 33137                           
 33138                           ;fat_table.c: 251: return (0xFFFFFFFF);
 33139  00ACC6  6846               	setf	?_fatfs_find_next_cluster,c
 33140  00ACC8  6847               	setf	?_fatfs_find_next_cluster+1,c
 33141  00ACCA  6848               	setf	?_fatfs_find_next_cluster+2,c
 33142  00ACCC  6849               	setf	?_fatfs_find_next_cluster+3,c
 33143  00ACCE  D008               	goto	l1228
 33144  00ACD0                     l1231:
 33145                           
 33146                           ;fat_table.c: 252: }
 33147                           ;fat_table.c: 255: return (nextcluster);
 33148  00ACD0  C07A  F046         	movff	fatfs_find_next_cluster@nextcluster,?_fatfs_find_next_cluster
 33149  00ACD4  C07B  F047         	movff	fatfs_find_next_cluster@nextcluster+1,?_fatfs_find_next_cluster+1
 33150  00ACD8  C07C  F048         	movff	fatfs_find_next_cluster@nextcluster+2,?_fatfs_find_next_cluster+2
 33151  00ACDC  C07D  F049         	movff	fatfs_find_next_cluster@nextcluster+3,?_fatfs_find_next_cluster+3
 33152  00ACE0                     l1228:
 33153  00ACE0  0012               	return	
 33154  00ACE2                     __end_of_fatfs_find_next_cluster:
 33155                           	opt stack 0
 33156                           tosu	equ	0xFFF
 33157                           tosh	equ	0xFFE
 33158                           tosl	equ	0xFFD
 33159                           pclath	equ	0xFFA
 33160                           tblptru	equ	0xFF8
 33161                           tblptrh	equ	0xFF7
 33162                           tblptrl	equ	0xFF6
 33163                           tablat	equ	0xFF5
 33164                           prodh	equ	0xFF4
 33165                           prodl	equ	0xFF3
 33166                           indf0	equ	0xFEF
 33167                           postinc0	equ	0xFEE
 33168                           fsr0h	equ	0xFEA
 33169                           fsr0l	equ	0xFE9
 33170                           wreg	equ	0xFE8
 33171                           indf1	equ	0xFE7
 33172                           postinc1	equ	0xFE6
 33173                           postdec1	equ	0xFE5
 33174                           fsr1h	equ	0xFE2
 33175                           fsr1l	equ	0xFE1
 33176                           indf2	equ	0xFDF
 33177                           postinc2	equ	0xFDE
 33178                           postdec2	equ	0xFDD
 33179                           fsr2h	equ	0xFDA
 33180                           fsr2l	equ	0xFD9
 33181                           status	equ	0xFD8
 33182                           
 33183 ;; *************** function _fatfs_fat_read_sector *****************
 33184 ;; Defined at:
 33185 ;;		line 116 in file "fat_table.c"
 33186 ;; Parameters:    Size  Location     Type
 33187 ;;  fs              2   51[COMRAM] PTR struct fatfs
 33188 ;;		 -> _fs(1095), 
 33189 ;;  sector          4   53[COMRAM] unsigned long 
 33190 ;; Auto vars:     Size  Location     Type
 33191 ;;  pcur            2   67[COMRAM] PTR struct fat_buffer
 33192 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 33193 ;;		 -> NULL(0), 
 33194 ;;  last            2   65[COMRAM] PTR struct fat_buffer
 33195 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 33196 ;;		 -> NULL(0), 
 33197 ;; Return value:  Size  Location     Type
 33198 ;;                  2   51[COMRAM] PTR struct fat_buffer
 33199 ;; Registers used:
 33200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 33201 ;; Tracked objects:
 33202 ;;		On entry : 0/0
 33203 ;;		On exit  : 0/0
 33204 ;;		Unchanged: 0/0
 33205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33206 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33207 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33208 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33209 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33210 ;;Total ram usage:       18 bytes
 33211 ;; Hardware stack levels used:    1
 33212 ;; Hardware stack levels required when called:    4
 33213 ;; This function calls:
 33214 ;;		_fatfs_fat_writeback
 33215 ;;		_media_read
 33216 ;; This function is called by:
 33217 ;;		_fatfs_find_next_cluster
 33218 ;;		_fatfs_set_fs_info_next_free_cluster
 33219 ;;		_fatfs_find_blank_cluster
 33220 ;;		_fatfs_fat_set_cluster
 33221 ;;		_fatfs_count_free_clusters
 33222 ;; This function uses a non-reentrant model
 33223 ;;
 33224                           
 33225                           	psect	text96
 33226  008702                     __ptext96:
 33227                           	opt stack 0
 33228  008702                     _fatfs_fat_read_sector:
 33229                           	opt stack 21
 33230                           
 33231                           ;fat_table.c: 118: struct fat_buffer *last = (0);
 33232                           
 33233                           ;incstack = 0
 33234  008702  6A43               	clrf	fatfs_fat_read_sector@last+1,c
 33235  008704  6A42               	clrf	fatfs_fat_read_sector@last,c
 33236                           
 33237                           ;fat_table.c: 119: struct fat_buffer *pcur = fs->fat_buffer_head;
 33238  008706  EE22 F03B          	lfsr	2,571
 33239  00870A  5034               	movf	fatfs_fat_read_sector@fs,w,c
 33240  00870C  26D9               	addwf	fsr2l,f,c
 33241  00870E  5035               	movf	fatfs_fat_read_sector@fs+1,w,c
 33242  008710  D05C               	goto	L114
 33243  008712                     l8786:
 33244                           
 33245                           ;fat_table.c: 123: {
 33246                           ;fat_table.c: 125: if ((sector >= pcur->address) && (sector < (pcur->address + 1)))
 33247  008712  EE22 F000          	lfsr	2,512
 33248  008716  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33249  008718  26D9               	addwf	fsr2l,f,c
 33250  00871A  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33251  00871C  22DA               	addwfc	fsr2h,f,c
 33252  00871E  CFDE F03A          	movff	postinc2,??_fatfs_fat_read_sector
 33253  008722  CFDE F03B          	movff	postinc2,??_fatfs_fat_read_sector+1
 33254  008726  CFDE F03C          	movff	postinc2,??_fatfs_fat_read_sector+2
 33255  00872A  CFDE F03D          	movff	postinc2,??_fatfs_fat_read_sector+3
 33256  00872E  503A               	movf	??_fatfs_fat_read_sector,w,c
 33257  008730  5C36               	subwf	fatfs_fat_read_sector@sector,w,c
 33258  008732  503B               	movf	??_fatfs_fat_read_sector+1,w,c
 33259  008734  5837               	subwfb	fatfs_fat_read_sector@sector+1,w,c
 33260  008736  503C               	movf	??_fatfs_fat_read_sector+2,w,c
 33261  008738  5838               	subwfb	fatfs_fat_read_sector@sector+2,w,c
 33262  00873A  503D               	movf	??_fatfs_fat_read_sector+3,w,c
 33263  00873C  5839               	subwfb	fatfs_fat_read_sector@sector+3,w,c
 33264  00873E  E322               	bnc	l8792
 33265  008740  EE22 F000          	lfsr	2,512
 33266  008744  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33267  008746  26D9               	addwf	fsr2l,f,c
 33268  008748  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33269  00874A  22DA               	addwfc	fsr2h,f,c
 33270  00874C  CFDE F03A          	movff	postinc2,??_fatfs_fat_read_sector
 33271  008750  CFDE F03B          	movff	postinc2,??_fatfs_fat_read_sector+1
 33272  008754  CFDE F03C          	movff	postinc2,??_fatfs_fat_read_sector+2
 33273  008758  CFDE F03D          	movff	postinc2,??_fatfs_fat_read_sector+3
 33274  00875C  283A               	incf	??_fatfs_fat_read_sector,w,c
 33275  00875E  6E3E               	movwf	(??_fatfs_fat_read_sector+4)& (0+255),c
 33276  008760  0E00               	movlw	0
 33277  008762  203B               	addwfc	??_fatfs_fat_read_sector+1,w,c
 33278  008764  6E3F               	movwf	(??_fatfs_fat_read_sector+5)& (0+255),c
 33279  008766  0E00               	movlw	0
 33280  008768  203C               	addwfc	??_fatfs_fat_read_sector+2,w,c
 33281  00876A  6E40               	movwf	(??_fatfs_fat_read_sector+6)& (0+255),c
 33282  00876C  0E00               	movlw	0
 33283  00876E  203D               	addwfc	??_fatfs_fat_read_sector+3,w,c
 33284  008770  6E41               	movwf	(??_fatfs_fat_read_sector+7)& (0+255),c
 33285  008772  503E               	movf	??_fatfs_fat_read_sector+4,w,c
 33286  008774  5C36               	subwf	fatfs_fat_read_sector@sector,w,c
 33287  008776  503F               	movf	??_fatfs_fat_read_sector+5,w,c
 33288  008778  5837               	subwfb	fatfs_fat_read_sector@sector+1,w,c
 33289  00877A  5040               	movf	??_fatfs_fat_read_sector+6,w,c
 33290  00877C  5838               	subwfb	fatfs_fat_read_sector@sector+2,w,c
 33291  00877E  5041               	movf	??_fatfs_fat_read_sector+7,w,c
 33292  008780  5839               	subwfb	fatfs_fat_read_sector@sector+3,w,c
 33293  008782  E32B               	bnc	l8804
 33294  008784                     l8792:
 33295                           
 33296                           ;fat_table.c: 129: if (pcur->next == (0))
 33297  008784  EE22 F008          	lfsr	2,520
 33298  008788  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33299  00878A  26D9               	addwf	fsr2l,f,c
 33300  00878C  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33301  00878E  22DA               	addwfc	fsr2h,f,c
 33302  008790  50DE               	movf	postinc2,w,c
 33303  008792  10DD               	iorwf	postdec2,w,c
 33304  008794  E111               	bnz	l8800
 33305                           
 33306                           ;fat_table.c: 130: {
 33307                           ;fat_table.c: 132: if (last)
 33308  008796  5043               	movf	fatfs_fat_read_sector@last+1,w,c
 33309  008798  1042               	iorwf	fatfs_fat_read_sector@last,w,c
 33310  00879A  E006               	bz	l8798
 33311                           
 33312                           ;fat_table.c: 133: last->next = (0);
 33313  00879C  EE22 F008          	lfsr	2,520
 33314  0087A0  5042               	movf	fatfs_fat_read_sector@last,w,c
 33315  0087A2  26D9               	addwf	fsr2l,f,c
 33316  0087A4  5043               	movf	fatfs_fat_read_sector@last+1,w,c
 33317  0087A6  D005               	goto	L115
 33318  0087A8                     l8798:
 33319                           
 33320                           ;fat_table.c: 135: else
 33321                           ;fat_table.c: 136: fs->fat_buffer_head = (0);
 33322  0087A8  EE22 F03B          	lfsr	2,571
 33323  0087AC  5034               	movf	fatfs_fat_read_sector@fs,w,c
 33324  0087AE  26D9               	addwf	fsr2l,f,c
 33325  0087B0  5035               	movf	fatfs_fat_read_sector@fs+1,w,c
 33326  0087B2                     L115:
 33327  0087B2  22DA               	addwfc	fsr2h,f,c
 33328  0087B4  6ADE               	clrf	postinc2,c
 33329  0087B6  6ADD               	clrf	postdec2,c
 33330  0087B8                     l8800:
 33331                           
 33332                           ;fat_table.c: 137: }
 33333                           ;fat_table.c: 139: last = pcur;
 33334  0087B8  C045  F043         	movff	fatfs_fat_read_sector@pcur+1,fatfs_fat_read_sector@last+1
 33335  0087BC  C044  F042         	movff	fatfs_fat_read_sector@pcur,fatfs_fat_read_sector@last
 33336                           
 33337                           ;fat_table.c: 140: pcur = pcur->next;
 33338  0087C0  EE22 F008          	lfsr	2,520
 33339  0087C4  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33340  0087C6  26D9               	addwf	fsr2l,f,c
 33341  0087C8  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33342  0087CA                     L114:
 33343  0087CA  22DA               	addwfc	fsr2h,f,c
 33344  0087CC  CFDE F044          	movff	postinc2,fatfs_fat_read_sector@pcur
 33345  0087D0  CFDD F045          	movff	postdec2,fatfs_fat_read_sector@pcur+1
 33346  0087D4  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33347  0087D6  1044               	iorwf	fatfs_fat_read_sector@pcur,w,c
 33348  0087D8  E19C               	bnz	l8786
 33349  0087DA                     l8804:
 33350                           
 33351                           ;fat_table.c: 141: }
 33352                           ;fat_table.c: 144: if (pcur)
 33353  0087DA  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33354  0087DC  1044               	iorwf	fatfs_fat_read_sector@pcur,w,c
 33355  0087DE  E02B               	bz	l8812
 33356                           
 33357                           ;fat_table.c: 145: {
 33358                           ;fat_table.c: 146: pcur->ptr = (uint8 *)(pcur->sector + ((sector - pcur->address) * 512)
      +                          );
 33359  0087E0  EE22 F000          	lfsr	2,512
 33360  0087E4  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33361  0087E6  26D9               	addwf	fsr2l,f,c
 33362  0087E8  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33363  0087EA  22DA               	addwfc	fsr2h,f,c
 33364  0087EC  CFDE F03A          	movff	postinc2,??_fatfs_fat_read_sector
 33365  0087F0  CFDD F03B          	movff	postdec2,??_fatfs_fat_read_sector+1
 33366  0087F4  1E3A               	comf	??_fatfs_fat_read_sector,f,c
 33367  0087F6  1E3B               	comf	??_fatfs_fat_read_sector+1,f,c
 33368  0087F8  4A3A               	infsnz	??_fatfs_fat_read_sector,f,c
 33369  0087FA  2A3B               	incf	??_fatfs_fat_read_sector+1,f,c
 33370  0087FC  5036               	movf	fatfs_fat_read_sector@sector,w,c
 33371  0087FE  263A               	addwf	??_fatfs_fat_read_sector,f,c
 33372  008800  5037               	movf	fatfs_fat_read_sector@sector+1,w,c
 33373  008802  223B               	addwfc	??_fatfs_fat_read_sector+1,f,c
 33374  008804  0E09               	movlw	9
 33375  008806                     u9185:
 33376  008806  90D8               	bcf	status,0,c
 33377  008808  363A               	rlcf	??_fatfs_fat_read_sector,f,c
 33378  00880A  363B               	rlcf	??_fatfs_fat_read_sector+1,f,c
 33379  00880C  2EE8               	decfsz	wreg,f,c
 33380  00880E  D7FB               	goto	u9185
 33381  008810  C044  F03C         	movff	fatfs_fat_read_sector@pcur,??_fatfs_fat_read_sector+2
 33382  008814  C045  F03D         	movff	fatfs_fat_read_sector@pcur+1,??_fatfs_fat_read_sector+3
 33383  008818  503A               	movf	??_fatfs_fat_read_sector,w,c
 33384  00881A  263C               	addwf	??_fatfs_fat_read_sector+2,f,c
 33385  00881C  503B               	movf	??_fatfs_fat_read_sector+1,w,c
 33386  00881E  223D               	addwfc	??_fatfs_fat_read_sector+3,f,c
 33387  008820  EE22 F006          	lfsr	2,518
 33388  008824  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33389  008826  26D9               	addwf	fsr2l,f,c
 33390  008828  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33391  00882A  22DA               	addwfc	fsr2h,f,c
 33392  00882C  C03C  FFDE         	movff	??_fatfs_fat_read_sector+2,postinc2
 33393  008830  C03D  FFDD         	movff	??_fatfs_fat_read_sector+3,postdec2
 33394  008834  D08B               	goto	L116
 33395  008836                     l8812:
 33396                           
 33397                           ;fat_table.c: 148: }
 33398                           ;fat_table.c: 151: pcur = last;
 33399  008836  C043  F045         	movff	fatfs_fat_read_sector@last+1,fatfs_fat_read_sector@pcur+1
 33400  00883A  C042  F044         	movff	fatfs_fat_read_sector@last,fatfs_fat_read_sector@pcur
 33401                           
 33402                           ;fat_table.c: 154: pcur->next = fs->fat_buffer_head;
 33403  00883E  EE22 F03B          	lfsr	2,571
 33404  008842  5034               	movf	fatfs_fat_read_sector@fs,w,c
 33405  008844  26D9               	addwf	fsr2l,f,c
 33406  008846  5035               	movf	fatfs_fat_read_sector@fs+1,w,c
 33407  008848  22DA               	addwfc	fsr2h,f,c
 33408  00884A  EE12 F008          	lfsr	1,520
 33409  00884E  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33410  008850  26E1               	addwf	fsr1l,f,c
 33411  008852  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33412  008854  22E2               	addwfc	fsr1h,f,c
 33413  008856  CFDE FFE6          	movff	postinc2,postinc1
 33414  00885A  CFDD FFE5          	movff	postdec2,postdec1
 33415                           
 33416                           ;fat_table.c: 155: fs->fat_buffer_head = pcur;
 33417  00885E  EE22 F03B          	lfsr	2,571
 33418  008862  5034               	movf	fatfs_fat_read_sector@fs,w,c
 33419  008864  26D9               	addwf	fsr2l,f,c
 33420  008866  5035               	movf	fatfs_fat_read_sector@fs+1,w,c
 33421  008868  22DA               	addwfc	fsr2h,f,c
 33422  00886A  C044  FFDE         	movff	fatfs_fat_read_sector@pcur,postinc2
 33423  00886E  C045  FFDD         	movff	fatfs_fat_read_sector@pcur+1,postdec2
 33424                           
 33425                           ;fat_table.c: 158: if (pcur->dirty)
 33426  008872  EE22 F004          	lfsr	2,516
 33427  008876  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33428  008878  26D9               	addwf	fsr2l,f,c
 33429  00887A  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33430  00887C  22DA               	addwfc	fsr2h,f,c
 33431  00887E  50DE               	movf	postinc2,w,c
 33432  008880  10DD               	iorwf	postdec2,w,c
 33433  008882  E00D               	bz	l8826
 33434                           
 33435                           ;fat_table.c: 159: if (!fatfs_fat_writeback(fs, pcur))
 33436  008884  C035  F021         	movff	fatfs_fat_read_sector@fs+1,fatfs_fat_writeback@fs+1
 33437  008888  C034  F020         	movff	fatfs_fat_read_sector@fs,fatfs_fat_writeback@fs
 33438  00888C  C045  F023         	movff	fatfs_fat_read_sector@pcur+1,fatfs_fat_writeback@pcur+1
 33439  008890  C044  F022         	movff	fatfs_fat_read_sector@pcur,fatfs_fat_writeback@pcur
 33440  008894  EC78  F03C         	call	_fatfs_fat_writeback	;wreg free
 33441  008898  5021               	movf	?_fatfs_fat_writeback+1,w,c
 33442  00889A  1020               	iorwf	?_fatfs_fat_writeback,w,c
 33443  00889C  E049               	bz	L117
 33444  00889E                     l8826:
 33445                           
 33446                           ;fat_table.c: 163: pcur->address = sector;
 33447  00889E  EE22 F000          	lfsr	2,512
 33448  0088A2  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33449  0088A4  26D9               	addwf	fsr2l,f,c
 33450  0088A6  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33451  0088A8  22DA               	addwfc	fsr2h,f,c
 33452  0088AA  C036  FFDE         	movff	fatfs_fat_read_sector@sector,postinc2
 33453  0088AE  C037  FFDE         	movff	fatfs_fat_read_sector@sector+1,postinc2
 33454  0088B2  C038  FFDE         	movff	fatfs_fat_read_sector@sector+2,postinc2
 33455  0088B6  C039  FFDE         	movff	fatfs_fat_read_sector@sector+3,postinc2
 33456                           
 33457                           ;fat_table.c: 166: if (!fs->disk_io.read_media(pcur->address, pcur->sector, 1))
 33458  0088BA  EE22 F000          	lfsr	2,512
 33459  0088BE  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33460  0088C0  26D9               	addwf	fsr2l,f,c
 33461  0088C2  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33462  0088C4  22DA               	addwfc	fsr2h,f,c
 33463  0088C6  CFDE F009          	movff	postinc2,media_read@sector
 33464  0088CA  CFDE F00A          	movff	postinc2,media_read@sector+1
 33465  0088CE  CFDE F00B          	movff	postinc2,media_read@sector+2
 33466  0088D2  CFDE F00C          	movff	postinc2,media_read@sector+3
 33467  0088D6  C045  F00E         	movff	fatfs_fat_read_sector@pcur+1,media_read@buffer+1
 33468  0088DA  C044  F00D         	movff	fatfs_fat_read_sector@pcur,media_read@buffer
 33469  0088DE  0E01               	movlw	1
 33470  0088E0  6E0F               	movwf	media_read@sector_count,c
 33471  0088E2  6A10               	clrf	media_read@sector_count+1,c
 33472  0088E4  6A11               	clrf	media_read@sector_count+2,c
 33473  0088E6  6A12               	clrf	media_read@sector_count+3,c
 33474  0088E8  EE20 F029          	lfsr	2,41
 33475  0088EC  5034               	movf	fatfs_fat_read_sector@fs,w,c
 33476  0088EE  26D9               	addwf	fsr2l,f,c
 33477  0088F0  5035               	movf	fatfs_fat_read_sector@fs+1,w,c
 33478  0088F2  22DA               	addwfc	fsr2h,f,c
 33479  0088F4  CFDE F03A          	movff	postinc2,??_fatfs_fat_read_sector
 33480  0088F8  CFDD F03B          	movff	postdec2,??_fatfs_fat_read_sector+1
 33481  0088FC  D801               	call	u9218
 33482  0088FE  D009               	goto	u9219
 33483  008900                     u9218:
 33484  008900  0005               	push	
 33485  008902  6EFA               	movwf	pclath,c
 33486  008904  503A               	movf	??_fatfs_fat_read_sector,w,c
 33487  008906  6EFD               	movwf	tosl,c
 33488  008908  503B               	movf	??_fatfs_fat_read_sector+1,w,c
 33489  00890A  6EFE               	movwf	tosh,c
 33490  00890C  6AFF               	clrf	tosu,c
 33491  00890E  50FA               	movf	pclath,w,c
 33492  008910  0012               	return		;indir
 33493  008912                     u9219:
 33494  008912  500A               	movf	?_media_read+1,w,c
 33495  008914  1009               	iorwf	?_media_read,w,c
 33496  008916  E110               	bnz	l8836
 33497                           
 33498                           ;fat_table.c: 167: {
 33499                           ;fat_table.c: 169: pcur->address = 0xFFFFFFFF;
 33500  008918  EE22 F000          	lfsr	2,512
 33501  00891C  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33502  00891E  26D9               	addwf	fsr2l,f,c
 33503  008920  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33504  008922  22DA               	addwfc	fsr2h,f,c
 33505  008924  68DE               	setf	postinc2,c
 33506  008926  68DE               	setf	postinc2,c
 33507  008928  68DE               	setf	postinc2,c
 33508  00892A  68DD               	setf	postdec2,c
 33509  00892C  52DD               	movf	postdec2,f,c
 33510  00892E  52DD               	movf	postdec2,f,c
 33511  008930                     L117:
 33512                           
 33513                           ;fat_table.c: 170: return (0);
 33514  008930  0E00               	movlw	0
 33515  008932  6E35               	movwf	?_fatfs_fat_read_sector+1,c
 33516  008934  6E34               	movwf	?_fatfs_fat_read_sector,c
 33517  008936  D00E               	goto	l1210
 33518  008938                     l8836:
 33519                           
 33520                           ;fat_table.c: 171: }
 33521                           ;fat_table.c: 173: pcur->ptr = pcur->sector;
 33522  008938  EE22 F006          	lfsr	2,518
 33523  00893C  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33524  00893E  26D9               	addwf	fsr2l,f,c
 33525  008940  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33526  008942  22DA               	addwfc	fsr2h,f,c
 33527  008944  C044  FFDE         	movff	fatfs_fat_read_sector@pcur,postinc2
 33528  008948  C045  FFDD         	movff	fatfs_fat_read_sector@pcur+1,postdec2
 33529  00894C                     L116:
 33530                           
 33531                           ;fat_table.c: 174: return pcur;
 33532  00894C  C045  F035         	movff	fatfs_fat_read_sector@pcur+1,?_fatfs_fat_read_sector+1
 33533  008950  C044  F034         	movff	fatfs_fat_read_sector@pcur,?_fatfs_fat_read_sector
 33534  008954                     l1210:
 33535  008954  0012               	return	
 33536  008956                     __end_of_fatfs_fat_read_sector:
 33537                           	opt stack 0
 33538                           tosu	equ	0xFFF
 33539                           tosh	equ	0xFFE
 33540                           tosl	equ	0xFFD
 33541                           pclath	equ	0xFFA
 33542                           tblptru	equ	0xFF8
 33543                           tblptrh	equ	0xFF7
 33544                           tblptrl	equ	0xFF6
 33545                           tablat	equ	0xFF5
 33546                           prodh	equ	0xFF4
 33547                           prodl	equ	0xFF3
 33548                           indf0	equ	0xFEF
 33549                           postinc0	equ	0xFEE
 33550                           fsr0h	equ	0xFEA
 33551                           fsr0l	equ	0xFE9
 33552                           wreg	equ	0xFE8
 33553                           indf1	equ	0xFE7
 33554                           postinc1	equ	0xFE6
 33555                           postdec1	equ	0xFE5
 33556                           fsr1h	equ	0xFE2
 33557                           fsr1l	equ	0xFE1
 33558                           indf2	equ	0xFDF
 33559                           postinc2	equ	0xFDE
 33560                           postdec2	equ	0xFDD
 33561                           fsr2h	equ	0xFDA
 33562                           fsr2l	equ	0xFD9
 33563                           status	equ	0xFD8
 33564                           
 33565 ;; *************** function _media_read *****************
 33566 ;; Defined at:
 33567 ;;		line 162 in file "main.c"
 33568 ;; Parameters:    Size  Location     Type
 33569 ;;  sector          4    8[COMRAM] unsigned long 
 33570 ;;  buffer          2   12[COMRAM] PTR unsigned char 
 33571 ;;		 -> _fs.currentsector(524), data(1), fatfs_add_file_entry@shortEntry(32), fl_fgetc@data(1), 
 33572 ;;		 -> _open_file@sfEntry(32), _fs(1095), RAM(3967), NULL(0), 
 33573 ;;  sector_count    4   14[COMRAM] unsigned long 
 33574 ;; Auto vars:     Size  Location     Type
 33575 ;;  i               4   26[COMRAM] unsigned long 
 33576 ;;  Start_Addr      4   22[COMRAM] unsigned long 
 33577 ;; Return value:  Size  Location     Type
 33578 ;;                  2    8[COMRAM] int 
 33579 ;; Registers used:
 33580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33581 ;; Tracked objects:
 33582 ;;		On entry : 0/0
 33583 ;;		On exit  : 0/0
 33584 ;;		Unchanged: 0/0
 33585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33586 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33587 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33588 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33589 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33590 ;;Total ram usage:       22 bytes
 33591 ;; Hardware stack levels used:    1
 33592 ;; Hardware stack levels required when called:    2
 33593 ;; This function calls:
 33594 ;;		_WriteSPI_
 33595 ;;		_command
 33596 ;;		_spi_read
 33597 ;; This function is called by:
 33598 ;;		_main
 33599 ;;		_fatfs_fat_read_sector
 33600 ;;		_fatfs_sector_reader
 33601 ;;		_fatfs_sector_read
 33602 ;;		_fatfs_init
 33603 ;; This function uses a non-reentrant model
 33604 ;;
 33605                           
 33606                           	psect	text97
 33607  006126                     __ptext97:
 33608                           	opt stack 0
 33609  006126                     _media_read:
 33610                           	opt stack 24
 33611                           
 33612                           ;main.c: 164: unsigned long i, Start_Addr;
 33613                           ;main.c: 166: Start_Addr = sector * 512;
 33614                           
 33615                           ;incstack = 0
 33616  006126  C009  F013         	movff	media_read@sector,??_media_read
 33617  00612A  C00A  F014         	movff	media_read@sector+1,??_media_read+1
 33618  00612E  C00B  F015         	movff	media_read@sector+2,??_media_read+2
 33619  006132  C00C  F016         	movff	media_read@sector+3,??_media_read+3
 33620  006136  0E09               	movlw	9
 33621  006138                     u9045:
 33622  006138  90D8               	bcf	status,0,c
 33623  00613A  3613               	rlcf	??_media_read,f,c
 33624  00613C  3614               	rlcf	??_media_read+1,f,c
 33625  00613E  3615               	rlcf	??_media_read+2,f,c
 33626  006140  3616               	rlcf	??_media_read+3,f,c
 33627  006142  2EE8               	decfsz	wreg,f,c
 33628  006144  D7F9               	goto	u9045
 33629  006146  C013  F017         	movff	??_media_read,media_read@Start_Addr
 33630  00614A  C014  F018         	movff	??_media_read+1,media_read@Start_Addr+1
 33631  00614E  C015  F019         	movff	??_media_read+2,media_read@Start_Addr+2
 33632  006152  C016  F01A         	movff	??_media_read+3,media_read@Start_Addr+3
 33633                           
 33634                           ;main.c: 167: command(18, Start_Addr, 0xff);
 33635  006156  C017  F003         	movff	media_read@Start_Addr,command@fourbyte_arg
 33636  00615A  C018  F004         	movff	media_read@Start_Addr+1,command@fourbyte_arg+1
 33637  00615E  C019  F005         	movff	media_read@Start_Addr+2,command@fourbyte_arg+2
 33638  006162  C01A  F006         	movff	media_read@Start_Addr+3,command@fourbyte_arg+3
 33639  006166  6807               	setf	command@CRCbits,c
 33640  006168  0E12               	movlw	18
 33641  00616A  EC86  F021         	call	_command
 33642                           
 33643                           ;main.c: 168: while (readdata != 0)
 33644  00616E  D002               	goto	l8738
 33645  006170                     l8736:
 33646                           
 33647                           ;main.c: 169: {
 33648                           ;main.c: 170: spi_read();
 33649  006170  EC2F  F01F         	call	_spi_read	;wreg free
 33650  006174                     l8738:
 33651  006174  0101               	movlb	1	; () banked
 33652  006176  67AB               	tstfsz	_readdata& (0+255),b
 33653  006178  D7FB               	goto	l8736
 33654  00617A  D002               	goto	L118
 33655  00617C                     l8740:
 33656                           
 33657                           ; BSR set to: 1
 33658                           ;main.c: 173: {
 33659                           ;main.c: 174: spi_read();
 33660  00617C  EC2F  F01F         	call	_spi_read	;wreg free
 33661  006180                     L118:
 33662  006180  0101               	movlb	1	; () banked
 33663  006182  51AB               	movf	_readdata& (0+255),w,b
 33664  006184  0AFE               	xorlw	254
 33665  006186  E1FA               	bnz	l8740
 33666                           
 33667                           ; BSR set to: 1
 33668                           ;main.c: 175: }
 33669                           ;main.c: 176: for (i=0;i<sector_count;i++)
 33670                           
 33671                           ; BSR set to: 1
 33672  006188  6A1B               	clrf	media_read@i,c
 33673  00618A  6A1C               	clrf	media_read@i+1,c
 33674  00618C  6A1D               	clrf	media_read@i+2,c
 33675  00618E  6A1E               	clrf	media_read@i+3,c
 33676  006190  D022               	goto	l1596
 33677  006192                     l8746:
 33678                           
 33679                           ; BSR set to: 1
 33680                           ;main.c: 177: {
 33681                           ;main.c: 178: for (n = 0; n < 512; n++)
 33682  006192  0101               	movlb	1	; () banked
 33683  006194  6BA0               	clrf	(_n+1)& (0+255),b
 33684  006196  6B9F               	clrf	_n& (0+255),b
 33685  006198                     
 33686                           ; BSR set to: 1
 33687  006198  0101               	movlb	1	; () banked
 33688  00619A  51A0               	movf	(_n+1)& (0+255),w,b
 33689  00619C  0A80               	xorlw	128
 33690  00619E  0F7E               	addlw	-130
 33691  0061A0  0E00               	movlw	0
 33692  0061A2  B4D8               	btfsc	status,2,c
 33693  0061A4  5D9F               	subwf	_n& (0+255),w,b
 33694  0061A6  E20E               	bc	l8762
 33695                           
 33696                           ; BSR set to: 1
 33697                           ;main.c: 179: {
 33698                           ;main.c: 180: spi_read();
 33699                           
 33700                           ; BSR set to: 1
 33701                           
 33702                           ; BSR set to: 1
 33703  0061A8  EC2F  F01F         	call	_spi_read	;wreg free
 33704                           
 33705                           ;main.c: 181: *buffer = readdata;
 33706  0061AC  C00D  FFD9         	movff	media_read@buffer,fsr2l
 33707  0061B0  C00E  FFDA         	movff	media_read@buffer+1,fsr2h
 33708  0061B4  C1AB  FFDF         	movff	_readdata,indf2
 33709                           
 33710                           ; BSR set to: 1
 33711                           ;main.c: 182: buffer++;
 33712  0061B8  4A0D               	infsnz	media_read@buffer,f,c
 33713  0061BA  2A0E               	incf	media_read@buffer+1,f,c
 33714                           
 33715                           ; BSR set to: 1
 33716  0061BC  0101               	movlb	1	; () banked
 33717  0061BE  4B9F               	infsnz	_n& (0+255),f,b
 33718  0061C0  2BA0               	incf	(_n+1)& (0+255),f,b
 33719  0061C2  D7EA               	goto	L119
 33720  0061C4                     l8762:
 33721                           
 33722                           ; BSR set to: 1
 33723                           ;main.c: 183: }
 33724                           ;main.c: 184: sector ++;
 33725  0061C4  2A09               	incf	media_read@sector,f,c
 33726  0061C6  0E00               	movlw	0
 33727  0061C8  220A               	addwfc	media_read@sector+1,f,c
 33728  0061CA  220B               	addwfc	media_read@sector+2,f,c
 33729  0061CC  220C               	addwfc	media_read@sector+3,f,c
 33730  0061CE  2A1B               	incf	media_read@i,f,c
 33731  0061D0  221C               	addwfc	media_read@i+1,f,c
 33732  0061D2  221D               	addwfc	media_read@i+2,f,c
 33733  0061D4  221E               	addwfc	media_read@i+3,f,c
 33734  0061D6                     l1596:
 33735                           
 33736                           ; BSR set to: 1
 33737  0061D6  500F               	movf	media_read@sector_count,w,c
 33738  0061D8  5C1B               	subwf	media_read@i,w,c
 33739  0061DA  5010               	movf	media_read@sector_count+1,w,c
 33740  0061DC  581C               	subwfb	media_read@i+1,w,c
 33741  0061DE  5011               	movf	media_read@sector_count+2,w,c
 33742  0061E0  581D               	subwfb	media_read@i+2,w,c
 33743  0061E2  5012               	movf	media_read@sector_count+3,w,c
 33744  0061E4  581E               	subwfb	media_read@i+3,w,c
 33745  0061E6  E3D5               	bnc	l8746
 33746                           
 33747                           ; BSR set to: 1
 33748                           ;main.c: 185: }
 33749                           ;main.c: 186: WriteSPI_(0xff);
 33750                           
 33751                           ; BSR set to: 1
 33752  0061E8  0EFF               	movlw	255
 33753  0061EA  EC77  F01F         	call	_WriteSPI_
 33754                           
 33755                           ;main.c: 187: WriteSPI_(0xff);
 33756  0061EE  0EFF               	movlw	255
 33757  0061F0  EC77  F01F         	call	_WriteSPI_
 33758                           
 33759                           ;main.c: 189: command(12, 0, 0xff);
 33760  0061F4  6A03               	clrf	command@fourbyte_arg,c
 33761  0061F6  6A04               	clrf	command@fourbyte_arg+1,c
 33762  0061F8  6A05               	clrf	command@fourbyte_arg+2,c
 33763  0061FA  6A06               	clrf	command@fourbyte_arg+3,c
 33764  0061FC  6807               	setf	command@CRCbits,c
 33765  0061FE  0E0C               	movlw	12
 33766  006200  EC86  F021         	call	_command
 33767                           
 33768                           ;main.c: 190: spi_read();
 33769  006204  EC2F  F01F         	call	_spi_read	;wreg free
 33770                           
 33771                           ;main.c: 191: while (readdata != 0)
 33772  006208  D002               	goto	l8772
 33773  00620A                     l8770:
 33774                           
 33775                           ;main.c: 192: {
 33776                           ;main.c: 193: spi_read();
 33777  00620A  EC2F  F01F         	call	_spi_read	;wreg free
 33778  00620E                     l8772:
 33779  00620E  0101               	movlb	1	; () banked
 33780  006210  67AB               	tstfsz	_readdata& (0+255),b
 33781  006212  D7FB               	goto	l8770
 33782  006214  D002               	goto	L120
 33783  006216                     l8774:
 33784                           
 33785                           ; BSR set to: 1
 33786                           ;main.c: 196: {
 33787                           ;main.c: 197: spi_read();
 33788  006216  EC2F  F01F         	call	_spi_read	;wreg free
 33789  00621A                     L120:
 33790  00621A  0101               	movlb	1	; () banked
 33791  00621C  29AB               	incf	_readdata& (0+255),w,b
 33792  00621E  E1FB               	bnz	l8774
 33793                           
 33794                           ; BSR set to: 1
 33795                           ;main.c: 198: }
 33796                           ;main.c: 199: return 1;
 33797                           
 33798                           ; BSR set to: 1
 33799  006220  0E00               	movlw	0
 33800  006222  6E0A               	movwf	?_media_read+1,c
 33801  006224  0E01               	movlw	1
 33802  006226  6E09               	movwf	?_media_read,c
 33803                           
 33804                           ; BSR set to: 1
 33805                           
 33806                           ; BSR set to: 1
 33807  006228  0C01               	retlw	1
 33808  00622A                     __end_of_media_read:
 33809                           	opt stack 0
 33810                           tosu	equ	0xFFF
 33811                           tosh	equ	0xFFE
 33812                           tosl	equ	0xFFD
 33813                           pclath	equ	0xFFA
 33814                           tblptru	equ	0xFF8
 33815                           tblptrh	equ	0xFF7
 33816                           tblptrl	equ	0xFF6
 33817                           tablat	equ	0xFF5
 33818                           prodh	equ	0xFF4
 33819                           prodl	equ	0xFF3
 33820                           indf0	equ	0xFEF
 33821                           postinc0	equ	0xFEE
 33822                           fsr0h	equ	0xFEA
 33823                           fsr0l	equ	0xFE9
 33824                           wreg	equ	0xFE8
 33825                           indf1	equ	0xFE7
 33826                           postinc1	equ	0xFE6
 33827                           postdec1	equ	0xFE5
 33828                           fsr1h	equ	0xFE2
 33829                           fsr1l	equ	0xFE1
 33830                           indf2	equ	0xFDF
 33831                           postinc2	equ	0xFDE
 33832                           postdec2	equ	0xFDD
 33833                           fsr2h	equ	0xFDA
 33834                           fsr2l	equ	0xFD9
 33835                           status	equ	0xFD8
 33836                           
 33837 ;; *************** function _fatfs_fat_writeback *****************
 33838 ;; Defined at:
 33839 ;;		line 83 in file "fat_table.c"
 33840 ;; Parameters:    Size  Location     Type
 33841 ;;  fs              2   31[COMRAM] PTR struct fatfs
 33842 ;;		 -> _fs(1095), 
 33843 ;;  pcur            2   33[COMRAM] PTR struct fat_buffer
 33844 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 33845 ;;		 -> NULL(0), 
 33846 ;; Auto vars:     Size  Location     Type
 33847 ;;  offset          4   47[COMRAM] unsigned long 
 33848 ;;  sectors         4   43[COMRAM] unsigned long 
 33849 ;; Return value:  Size  Location     Type
 33850 ;;                  2   31[COMRAM] int 
 33851 ;; Registers used:
 33852 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 33853 ;; Tracked objects:
 33854 ;;		On entry : 0/0
 33855 ;;		On exit  : 0/0
 33856 ;;		Unchanged: 0/0
 33857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33859 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33860 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33861 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33862 ;;Total ram usage:       20 bytes
 33863 ;; Hardware stack levels used:    1
 33864 ;; Hardware stack levels required when called:    3
 33865 ;; This function calls:
 33866 ;;		_media_write
 33867 ;; This function is called by:
 33868 ;;		_fatfs_fat_read_sector
 33869 ;;		_fatfs_fat_purge
 33870 ;; This function uses a non-reentrant model
 33871 ;;
 33872                           
 33873                           	psect	text98
 33874  0078F0                     __ptext98:
 33875                           	opt stack 0
 33876  0078F0                     _fatfs_fat_writeback:
 33877                           	opt stack 25
 33878                           
 33879                           ;fat_table.c: 85: if (pcur)
 33880                           
 33881                           ; BSR set to: 1
 33882                           ;incstack = 0
 33883  0078F0  5023               	movf	fatfs_fat_writeback@pcur+1,w,c
 33884  0078F2  1022               	iorwf	fatfs_fat_writeback@pcur,w,c
 33885  0078F4  E101 D0DE          	bz	l8728
 33886                           
 33887                           ;fat_table.c: 86: {
 33888                           ;fat_table.c: 88: if (pcur->dirty)
 33889  0078F8  EE22 F004          	lfsr	2,516
 33890  0078FC  5022               	movf	fatfs_fat_writeback@pcur,w,c
 33891  0078FE  26D9               	addwf	fsr2l,f,c
 33892  007900  5023               	movf	fatfs_fat_writeback@pcur+1,w,c
 33893  007902  22DA               	addwfc	fsr2h,f,c
 33894  007904  50DE               	movf	postinc2,w,c
 33895  007906  10DD               	iorwf	postdec2,w,c
 33896  007908  E101 D0D0          	bz	l8722
 33897                           
 33898                           ;fat_table.c: 89: {
 33899                           ;fat_table.c: 90: if (fs->disk_io.write_media)
 33900  00790C  EE20 F02B          	lfsr	2,43
 33901  007910  5020               	movf	fatfs_fat_writeback@fs,w,c
 33902  007912  26D9               	addwf	fsr2l,f,c
 33903  007914  5021               	movf	fatfs_fat_writeback@fs+1,w,c
 33904  007916  22DA               	addwfc	fsr2h,f,c
 33905  007918  50DE               	movf	postinc2,w,c
 33906  00791A  10DD               	iorwf	postdec2,w,c
 33907  00791C  E101 D0BD          	bz	l8720
 33908                           
 33909                           ;fat_table.c: 91: {
 33910                           ;fat_table.c: 92: uint32 sectors = 1;
 33911  007920  0E01               	movlw	1
 33912  007922  6E2C               	movwf	fatfs_fat_writeback@sectors,c
 33913  007924  6A2D               	clrf	fatfs_fat_writeback@sectors+1,c
 33914  007926  6A2E               	clrf	fatfs_fat_writeback@sectors+2,c
 33915  007928  6A2F               	clrf	fatfs_fat_writeback@sectors+3,c
 33916                           
 33917                           ;fat_table.c: 93: uint32 offset = pcur->address - fs->fat_begin_lba;
 33918  00792A  EE22 F000          	lfsr	2,512
 33919  00792E  5022               	movf	fatfs_fat_writeback@pcur,w,c
 33920  007930  26D9               	addwf	fsr2l,f,c
 33921  007932  5023               	movf	fatfs_fat_writeback@pcur+1,w,c
 33922  007934  22DA               	addwfc	fsr2h,f,c
 33923  007936  CFDE F024          	movff	postinc2,??_fatfs_fat_writeback
 33924  00793A  CFDE F025          	movff	postinc2,??_fatfs_fat_writeback+1
 33925  00793E  CFDE F026          	movff	postinc2,??_fatfs_fat_writeback+2
 33926  007942  CFDE F027          	movff	postinc2,??_fatfs_fat_writeback+3
 33927  007946  EE20 F011          	lfsr	2,17
 33928  00794A  5020               	movf	fatfs_fat_writeback@fs,w,c
 33929  00794C  26D9               	addwf	fsr2l,f,c
 33930  00794E  5021               	movf	fatfs_fat_writeback@fs+1,w,c
 33931  007950  22DA               	addwfc	fsr2h,f,c
 33932  007952  CFDE F028          	movff	postinc2,??_fatfs_fat_writeback+4
 33933  007956  CFDE F029          	movff	postinc2,??_fatfs_fat_writeback+5
 33934  00795A  CFDE F02A          	movff	postinc2,??_fatfs_fat_writeback+6
 33935  00795E  CFDE F02B          	movff	postinc2,??_fatfs_fat_writeback+7
 33936  007962  1E28               	comf	??_fatfs_fat_writeback+4,f,c
 33937  007964  1E29               	comf	??_fatfs_fat_writeback+5,f,c
 33938  007966  1E2A               	comf	??_fatfs_fat_writeback+6,f,c
 33939  007968  1E2B               	comf	??_fatfs_fat_writeback+7,f,c
 33940  00796A  2A28               	incf	??_fatfs_fat_writeback+4,f,c
 33941  00796C  0E00               	movlw	0
 33942  00796E  2229               	addwfc	??_fatfs_fat_writeback+5,f,c
 33943  007970  222A               	addwfc	??_fatfs_fat_writeback+6,f,c
 33944  007972  222B               	addwfc	??_fatfs_fat_writeback+7,f,c
 33945  007974  5024               	movf	??_fatfs_fat_writeback,w,c
 33946  007976  2428               	addwf	??_fatfs_fat_writeback+4,w,c
 33947  007978  6E30               	movwf	fatfs_fat_writeback@offset,c
 33948  00797A  5025               	movf	??_fatfs_fat_writeback+1,w,c
 33949  00797C  2029               	addwfc	??_fatfs_fat_writeback+5,w,c
 33950  00797E  6E31               	movwf	fatfs_fat_writeback@offset+1,c
 33951  007980  5026               	movf	??_fatfs_fat_writeback+2,w,c
 33952  007982  202A               	addwfc	??_fatfs_fat_writeback+6,w,c
 33953  007984  6E32               	movwf	fatfs_fat_writeback@offset+2,c
 33954  007986  5027               	movf	??_fatfs_fat_writeback+3,w,c
 33955  007988  202B               	addwfc	??_fatfs_fat_writeback+7,w,c
 33956  00798A  6E33               	movwf	fatfs_fat_writeback@offset+3,c
 33957                           
 33958                           ;fat_table.c: 96: if ((offset + 1) <= fs->fat_sectors)
 33959  00798C  2830               	incf	fatfs_fat_writeback@offset,w,c
 33960  00798E  6E24               	movwf	??_fatfs_fat_writeback& (0+255),c
 33961  007990  0E00               	movlw	0
 33962  007992  2031               	addwfc	fatfs_fat_writeback@offset+1,w,c
 33963  007994  6E25               	movwf	(??_fatfs_fat_writeback+1)& (0+255),c
 33964  007996  0E00               	movlw	0
 33965  007998  2032               	addwfc	fatfs_fat_writeback@offset+2,w,c
 33966  00799A  6E26               	movwf	(??_fatfs_fat_writeback+2)& (0+255),c
 33967  00799C  0E00               	movlw	0
 33968  00799E  2033               	addwfc	fatfs_fat_writeback@offset+3,w,c
 33969  0079A0  6E27               	movwf	(??_fatfs_fat_writeback+3)& (0+255),c
 33970  0079A2  EE20 F01B          	lfsr	2,27
 33971  0079A6  5020               	movf	fatfs_fat_writeback@fs,w,c
 33972  0079A8  26D9               	addwf	fsr2l,f,c
 33973  0079AA  5021               	movf	fatfs_fat_writeback@fs+1,w,c
 33974  0079AC  22DA               	addwfc	fsr2h,f,c
 33975  0079AE  CFDE F028          	movff	postinc2,??_fatfs_fat_writeback+4
 33976  0079B2  CFDE F029          	movff	postinc2,??_fatfs_fat_writeback+5
 33977  0079B6  CFDE F02A          	movff	postinc2,??_fatfs_fat_writeback+6
 33978  0079BA  CFDE F02B          	movff	postinc2,??_fatfs_fat_writeback+7
 33979  0079BE  5024               	movf	??_fatfs_fat_writeback,w,c
 33980  0079C0  5C28               	subwf	??_fatfs_fat_writeback+4,w,c
 33981  0079C2  5025               	movf	??_fatfs_fat_writeback+1,w,c
 33982  0079C4  5829               	subwfb	??_fatfs_fat_writeback+5,w,c
 33983  0079C6  5026               	movf	??_fatfs_fat_writeback+2,w,c
 33984  0079C8  582A               	subwfb	??_fatfs_fat_writeback+6,w,c
 33985  0079CA  5027               	movf	??_fatfs_fat_writeback+3,w,c
 33986  0079CC  582B               	subwfb	??_fatfs_fat_writeback+7,w,c
 33987  0079CE  E306               	bnc	l8712
 33988                           
 33989                           ;fat_table.c: 97: sectors = 1;
 33990  0079D0  0E01               	movlw	1
 33991  0079D2  6E2C               	movwf	fatfs_fat_writeback@sectors,c
 33992  0079D4  0E00               	movlw	0
 33993  0079D6  6A2D               	clrf	fatfs_fat_writeback@sectors+1,c
 33994  0079D8  6A2E               	clrf	fatfs_fat_writeback@sectors+2,c
 33995  0079DA  D02A               	goto	L121
 33996  0079DC                     l8712:
 33997                           
 33998                           ;fat_table.c: 98: else
 33999                           ;fat_table.c: 99: sectors = fs->fat_sectors - offset;
 34000  0079DC  EE20 F01B          	lfsr	2,27
 34001  0079E0  5020               	movf	fatfs_fat_writeback@fs,w,c
 34002  0079E2  26D9               	addwf	fsr2l,f,c
 34003  0079E4  5021               	movf	fatfs_fat_writeback@fs+1,w,c
 34004  0079E6  22DA               	addwfc	fsr2h,f,c
 34005  0079E8  CFDE F024          	movff	postinc2,??_fatfs_fat_writeback
 34006  0079EC  CFDE F025          	movff	postinc2,??_fatfs_fat_writeback+1
 34007  0079F0  CFDE F026          	movff	postinc2,??_fatfs_fat_writeback+2
 34008  0079F4  CFDE F027          	movff	postinc2,??_fatfs_fat_writeback+3
 34009  0079F8  C030  F028         	movff	fatfs_fat_writeback@offset,??_fatfs_fat_writeback+4
 34010  0079FC  C031  F029         	movff	fatfs_fat_writeback@offset+1,??_fatfs_fat_writeback+5
 34011  007A00  C032  F02A         	movff	fatfs_fat_writeback@offset+2,??_fatfs_fat_writeback+6
 34012  007A04  C033  F02B         	movff	fatfs_fat_writeback@offset+3,??_fatfs_fat_writeback+7
 34013  007A08  1E28               	comf	??_fatfs_fat_writeback+4,f,c
 34014  007A0A  1E29               	comf	??_fatfs_fat_writeback+5,f,c
 34015  007A0C  1E2A               	comf	??_fatfs_fat_writeback+6,f,c
 34016  007A0E  1E2B               	comf	??_fatfs_fat_writeback+7,f,c
 34017  007A10  2A28               	incf	??_fatfs_fat_writeback+4,f,c
 34018  007A12  0E00               	movlw	0
 34019  007A14  2229               	addwfc	??_fatfs_fat_writeback+5,f,c
 34020  007A16  222A               	addwfc	??_fatfs_fat_writeback+6,f,c
 34021  007A18  222B               	addwfc	??_fatfs_fat_writeback+7,f,c
 34022  007A1A  5024               	movf	??_fatfs_fat_writeback,w,c
 34023  007A1C  2428               	addwf	??_fatfs_fat_writeback+4,w,c
 34024  007A1E  6E2C               	movwf	fatfs_fat_writeback@sectors,c
 34025  007A20  5025               	movf	??_fatfs_fat_writeback+1,w,c
 34026  007A22  2029               	addwfc	??_fatfs_fat_writeback+5,w,c
 34027  007A24  6E2D               	movwf	fatfs_fat_writeback@sectors+1,c
 34028  007A26  5026               	movf	??_fatfs_fat_writeback+2,w,c
 34029  007A28  202A               	addwfc	??_fatfs_fat_writeback+6,w,c
 34030  007A2A  6E2E               	movwf	fatfs_fat_writeback@sectors+2,c
 34031  007A2C  5027               	movf	??_fatfs_fat_writeback+3,w,c
 34032  007A2E  202B               	addwfc	??_fatfs_fat_writeback+7,w,c
 34033  007A30                     L121:
 34034  007A30  6E2F               	movwf	fatfs_fat_writeback@sectors+3,c
 34035                           
 34036                           ;fat_table.c: 101: if (!fs->disk_io.write_media(pcur->address, pcur->sector, sectors))
 34037  007A32  EE22 F000          	lfsr	2,512
 34038  007A36  5022               	movf	fatfs_fat_writeback@pcur,w,c
 34039  007A38  26D9               	addwf	fsr2l,f,c
 34040  007A3A  5023               	movf	fatfs_fat_writeback@pcur+1,w,c
 34041  007A3C  22DA               	addwfc	fsr2h,f,c
 34042  007A3E  CFDE F009          	movff	postinc2,media_write@sector
 34043  007A42  CFDE F00A          	movff	postinc2,media_write@sector+1
 34044  007A46  CFDE F00B          	movff	postinc2,media_write@sector+2
 34045  007A4A  CFDE F00C          	movff	postinc2,media_write@sector+3
 34046  007A4E  0E20               	movlw	32
 34047  007A50  6E0F               	movwf	media_write@buffer+2,c
 34048  007A52  C023  F00E         	movff	fatfs_fat_writeback@pcur+1,media_write@buffer+1
 34049  007A56  C022  F00D         	movff	fatfs_fat_writeback@pcur,media_write@buffer
 34050  007A5A  C02C  F010         	movff	fatfs_fat_writeback@sectors,media_write@sector_count
 34051  007A5E  C02D  F011         	movff	fatfs_fat_writeback@sectors+1,media_write@sector_count+1
 34052  007A62  C02E  F012         	movff	fatfs_fat_writeback@sectors+2,media_write@sector_count+2
 34053  007A66  C02F  F013         	movff	fatfs_fat_writeback@sectors+3,media_write@sector_count+3
 34054  007A6A  EE20 F02B          	lfsr	2,43
 34055  007A6E  5020               	movf	fatfs_fat_writeback@fs,w,c
 34056  007A70  26D9               	addwf	fsr2l,f,c
 34057  007A72  5021               	movf	fatfs_fat_writeback@fs+1,w,c
 34058  007A74  22DA               	addwfc	fsr2h,f,c
 34059  007A76  CFDE F024          	movff	postinc2,??_fatfs_fat_writeback
 34060  007A7A  CFDD F025          	movff	postdec2,??_fatfs_fat_writeback+1
 34061  007A7E  D801               	call	u9028
 34062  007A80  D009               	goto	u9029
 34063  007A82                     u9028:
 34064  007A82  0005               	push	
 34065  007A84  6EFA               	movwf	pclath,c
 34066  007A86  5024               	movf	??_fatfs_fat_writeback,w,c
 34067  007A88  6EFD               	movwf	tosl,c
 34068  007A8A  5025               	movf	??_fatfs_fat_writeback+1,w,c
 34069  007A8C  6EFE               	movwf	tosh,c
 34070  007A8E  6AFF               	clrf	tosu,c
 34071  007A90  50FA               	movf	pclath,w,c
 34072  007A92  0012               	return		;indir
 34073  007A94                     u9029:
 34074  007A94  500A               	movf	?_media_write+1,w,c
 34075  007A96  1009               	iorwf	?_media_write,w,c
 34076  007A98  E00D               	bz	l8728
 34077  007A9A                     l8720:
 34078                           
 34079                           ;fat_table.c: 103: }
 34080                           ;fat_table.c: 105: pcur->dirty = 0;
 34081  007A9A  EE22 F004          	lfsr	2,516
 34082  007A9E  5022               	movf	fatfs_fat_writeback@pcur,w,c
 34083  007AA0  26D9               	addwf	fsr2l,f,c
 34084  007AA2  5023               	movf	fatfs_fat_writeback@pcur+1,w,c
 34085  007AA4  22DA               	addwfc	fsr2h,f,c
 34086  007AA6  0E00               	movlw	0
 34087  007AA8  6EDE               	movwf	postinc2,c
 34088  007AAA  6EDD               	movwf	postdec2,c
 34089  007AAC                     l8722:
 34090                           
 34091                           ;fat_table.c: 106: }
 34092                           ;fat_table.c: 108: return 1;
 34093  007AAC  0E00               	movlw	0
 34094  007AAE  6E21               	movwf	?_fatfs_fat_writeback+1,c
 34095  007AB0  0E01               	movlw	1
 34096  007AB2  D002               	goto	L123
 34097  007AB4                     l8728:
 34098                           
 34099                           ;fat_table.c: 110: else
 34100                           ;fat_table.c: 111: return 0;
 34101  007AB4  0E00               	movlw	0
 34102  007AB6  6E21               	movwf	?_fatfs_fat_writeback+1,c
 34103  007AB8                     L123:
 34104  007AB8  6E20               	movwf	?_fatfs_fat_writeback,c
 34105  007ABA  0012               	return	
 34106  007ABC                     __end_of_fatfs_fat_writeback:
 34107                           	opt stack 0
 34108                           tosu	equ	0xFFF
 34109                           tosh	equ	0xFFE
 34110                           tosl	equ	0xFFD
 34111                           pclath	equ	0xFFA
 34112                           tblptru	equ	0xFF8
 34113                           tblptrh	equ	0xFF7
 34114                           tblptrl	equ	0xFF6
 34115                           tablat	equ	0xFF5
 34116                           prodh	equ	0xFF4
 34117                           prodl	equ	0xFF3
 34118                           indf0	equ	0xFEF
 34119                           postinc0	equ	0xFEE
 34120                           fsr0h	equ	0xFEA
 34121                           fsr0l	equ	0xFE9
 34122                           wreg	equ	0xFE8
 34123                           indf1	equ	0xFE7
 34124                           postinc1	equ	0xFE6
 34125                           postdec1	equ	0xFE5
 34126                           fsr1h	equ	0xFE2
 34127                           fsr1l	equ	0xFE1
 34128                           indf2	equ	0xFDF
 34129                           postinc2	equ	0xFDE
 34130                           postdec2	equ	0xFDD
 34131                           fsr2h	equ	0xFDA
 34132                           fsr2l	equ	0xFD9
 34133                           status	equ	0xFD8
 34134                           
 34135 ;; *************** function _media_write *****************
 34136 ;; Defined at:
 34137 ;;		line 218 in file "main.c"
 34138 ;; Parameters:    Size  Location     Type
 34139 ;;  sector          4    8[COMRAM] unsigned long 
 34140 ;;  buffer          3   12[COMRAM] PTR unsigned char 
 34141 ;;		 -> _fs.currentsector(524), w(1), str_0(26), data(1), 
 34142 ;;		 -> fatfs_add_file_entry@shortEntry(32), fl_fputc@data(1), ROM(65535), _open_file@sfEntry(32), 
 34143 ;;		 -> _fs(1095), RAM(3967), NULL(0), 
 34144 ;;  sector_count    4   15[COMRAM] unsigned long 
 34145 ;; Auto vars:     Size  Location     Type
 34146 ;;  i               4   27[COMRAM] unsigned long 
 34147 ;;  Start_Addr      4   23[COMRAM] unsigned long 
 34148 ;;  End_Addr        4    0        unsigned long 
 34149 ;; Return value:  Size  Location     Type
 34150 ;;                  2    8[COMRAM] int 
 34151 ;; Registers used:
 34152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34153 ;; Tracked objects:
 34154 ;;		On entry : 0/0
 34155 ;;		On exit  : 0/0
 34156 ;;		Unchanged: 0/0
 34157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34158 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34159 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34160 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34161 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34162 ;;Total ram usage:       23 bytes
 34163 ;; Hardware stack levels used:    1
 34164 ;; Hardware stack levels required when called:    2
 34165 ;; This function calls:
 34166 ;;		_WriteSPI_
 34167 ;;		_command
 34168 ;;		_spi_read
 34169 ;; This function is called by:
 34170 ;;		_main
 34171 ;;		_fatfs_fat_writeback
 34172 ;;		_fatfs_write_sector
 34173 ;;		_fatfs_set_fs_info_next_free_cluster
 34174 ;;		_fatfs_sector_write
 34175 ;;		_fatfs_erase_sectors
 34176 ;;		_fatfs_create_boot_sector
 34177 ;;		_fatfs_create_fsinfo_sector
 34178 ;;		_fatfs_erase_fat
 34179 ;;		_fatfs_add_file_entry
 34180 ;;		_fatfs_update_file_length
 34181 ;;		_fatfs_mark_file_deleted
 34182 ;; This function uses a non-reentrant model
 34183 ;;
 34184                           
 34185                           	psect	text99
 34186  00645C                     __ptext99:
 34187                           	opt stack 0
 34188  00645C                     _media_write:
 34189                           	opt stack 25
 34190                           
 34191                           ;main.c: 220: unsigned long i, Start_Addr, End_Addr;
 34192                           ;main.c: 221: Start_Addr = sector * 512;
 34193                           
 34194                           ;incstack = 0
 34195  00645C  C009  F014         	movff	media_write@sector,??_media_write
 34196  006460  C00A  F015         	movff	media_write@sector+1,??_media_write+1
 34197  006464  C00B  F016         	movff	media_write@sector+2,??_media_write+2
 34198  006468  C00C  F017         	movff	media_write@sector+3,??_media_write+3
 34199  00646C  0E09               	movlw	9
 34200  00646E                     u8895:
 34201  00646E  90D8               	bcf	status,0,c
 34202  006470  3614               	rlcf	??_media_write,f,c
 34203  006472  3615               	rlcf	??_media_write+1,f,c
 34204  006474  3616               	rlcf	??_media_write+2,f,c
 34205  006476  3617               	rlcf	??_media_write+3,f,c
 34206  006478  2EE8               	decfsz	wreg,f,c
 34207  00647A  D7F9               	goto	u8895
 34208  00647C  C014  F018         	movff	??_media_write,media_write@Start_Addr
 34209  006480  C015  F019         	movff	??_media_write+1,media_write@Start_Addr+1
 34210  006484  C016  F01A         	movff	??_media_write+2,media_write@Start_Addr+2
 34211  006488  C017  F01B         	movff	??_media_write+3,media_write@Start_Addr+3
 34212                           
 34213                           ;main.c: 222: command(25, Start_Addr, 0xff);
 34214  00648C  C018  F003         	movff	media_write@Start_Addr,command@fourbyte_arg
 34215  006490  C019  F004         	movff	media_write@Start_Addr+1,command@fourbyte_arg+1
 34216  006494  C01A  F005         	movff	media_write@Start_Addr+2,command@fourbyte_arg+2
 34217  006498  C01B  F006         	movff	media_write@Start_Addr+3,command@fourbyte_arg+3
 34218  00649C  6807               	setf	command@CRCbits,c
 34219  00649E  0E19               	movlw	25
 34220  0064A0  EC86  F021         	call	_command
 34221                           
 34222                           ;main.c: 223: while (readdata != 0)
 34223  0064A4  D002               	goto	l8650
 34224  0064A6                     l8648:
 34225                           
 34226                           ;main.c: 224: {
 34227                           ;main.c: 225: spi_read();
 34228  0064A6  EC2F  F01F         	call	_spi_read	;wreg free
 34229  0064AA                     l8650:
 34230  0064AA  0101               	movlb	1	; () banked
 34231  0064AC  67AB               	tstfsz	_readdata& (0+255),b
 34232  0064AE  D7FB               	goto	l8648
 34233                           
 34234                           ; BSR set to: 1
 34235                           ;main.c: 226: }
 34236                           ;main.c: 227: WriteSPI_(0xff);
 34237                           
 34238                           ; BSR set to: 1
 34239  0064B0  0EFF               	movlw	255
 34240  0064B2  EC77  F01F         	call	_WriteSPI_
 34241                           
 34242                           ;main.c: 228: WriteSPI_(0xff);
 34243  0064B6  0EFF               	movlw	255
 34244  0064B8  EC77  F01F         	call	_WriteSPI_
 34245                           
 34246                           ;main.c: 229: WriteSPI_(0b11111100);
 34247  0064BC  0EFC               	movlw	252
 34248  0064BE  EC77  F01F         	call	_WriteSPI_
 34249                           
 34250                           ;main.c: 230: for (i=0;i<sector_count;i++)
 34251  0064C2  6A1C               	clrf	media_write@i,c
 34252  0064C4  6A1D               	clrf	media_write@i+1,c
 34253  0064C6  6A1E               	clrf	media_write@i+2,c
 34254  0064C8  6A1F               	clrf	media_write@i+3,c
 34255  0064CA  D02E               	goto	l1613
 34256  0064CC                     l8656:
 34257                           
 34258                           ;main.c: 231: {
 34259                           ;main.c: 232: for ( n = 0; n <512; n++)
 34260  0064CC  0101               	movlb	1	; () banked
 34261  0064CE  6BA0               	clrf	(_n+1)& (0+255),b
 34262  0064D0  6B9F               	clrf	_n& (0+255),b
 34263  0064D2                     
 34264                           ; BSR set to: 1
 34265  0064D2  0101               	movlb	1	; () banked
 34266  0064D4  51A0               	movf	(_n+1)& (0+255),w,b
 34267  0064D6  0A80               	xorlw	128
 34268  0064D8  0F7E               	addlw	-130
 34269  0064DA  0E00               	movlw	0
 34270  0064DC  B4D8               	btfsc	status,2,c
 34271  0064DE  5D9F               	subwf	_n& (0+255),w,b
 34272  0064E0  E21A               	bc	l8670
 34273                           
 34274                           ; BSR set to: 1
 34275                           ;main.c: 233: {
 34276                           ;main.c: 234: WriteSPI_(*buffer);
 34277                           
 34278                           ; BSR set to: 1
 34279                           
 34280                           ; BSR set to: 1
 34281  0064E2  C00D  FFF6         	movff	media_write@buffer,tblptrl
 34282  0064E6  C00E  FFF7         	movff	media_write@buffer+1,tblptrh
 34283  0064EA  C00F  FFF8         	movff	media_write@buffer+2,tblptru
 34284  0064EE  BAF8               	btfsc	tblptru,5,c
 34285  0064F0  D003               	bra	u8927
 34286  0064F2  0008               	tblrd		*
 34287  0064F4  50F5               	movf	tablat,w,c
 34288  0064F6  D005               	bra	u8920
 34289  0064F8                     u8927:
 34290  0064F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 34291  0064FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 34292  006500  50EF               	movf	indf0,w,c
 34293  006502                     u8920:
 34294  006502  EC77  F01F         	call	_WriteSPI_
 34295                           
 34296                           ;main.c: 235: buffer++;
 34297  006506  2A0D               	incf	media_write@buffer,f,c
 34298  006508  0E00               	movlw	0
 34299  00650A  220E               	addwfc	media_write@buffer+1,f,c
 34300  00650C  220F               	addwfc	media_write@buffer+2,f,c
 34301  00650E  0101               	movlb	1	; () banked
 34302  006510  4B9F               	infsnz	_n& (0+255),f,b
 34303  006512  2BA0               	incf	(_n+1)& (0+255),f,b
 34304  006514  D7DE               	goto	L124
 34305  006516                     l8670:
 34306                           
 34307                           ; BSR set to: 1
 34308                           ;main.c: 236: }
 34309                           ;main.c: 237: sector ++;
 34310  006516  2A09               	incf	media_write@sector,f,c
 34311  006518  0E00               	movlw	0
 34312  00651A  220A               	addwfc	media_write@sector+1,f,c
 34313  00651C  220B               	addwfc	media_write@sector+2,f,c
 34314  00651E  220C               	addwfc	media_write@sector+3,f,c
 34315  006520  2A1C               	incf	media_write@i,f,c
 34316  006522  221D               	addwfc	media_write@i+1,f,c
 34317  006524  221E               	addwfc	media_write@i+2,f,c
 34318  006526  221F               	addwfc	media_write@i+3,f,c
 34319  006528                     l1613:
 34320  006528  5010               	movf	media_write@sector_count,w,c
 34321  00652A  5C1C               	subwf	media_write@i,w,c
 34322  00652C  5011               	movf	media_write@sector_count+1,w,c
 34323  00652E  581D               	subwfb	media_write@i+1,w,c
 34324  006530  5012               	movf	media_write@sector_count+2,w,c
 34325  006532  581E               	subwfb	media_write@i+2,w,c
 34326  006534  5013               	movf	media_write@sector_count+3,w,c
 34327  006536  581F               	subwfb	media_write@i+3,w,c
 34328  006538  E3C9               	bnc	l8656
 34329                           
 34330                           ;main.c: 238: }
 34331                           ;main.c: 240: WriteSPI_(0xff);
 34332  00653A  0EFF               	movlw	255
 34333  00653C  EC77  F01F         	call	_WriteSPI_
 34334                           
 34335                           ;main.c: 241: WriteSPI_(0xff);
 34336  006540  0EFF               	movlw	255
 34337  006542  EC77  F01F         	call	_WriteSPI_
 34338                           
 34339                           ;main.c: 242: spi_read();
 34340  006546  EC2F  F01F         	call	_spi_read	;wreg free
 34341                           
 34342                           ;main.c: 243: while ((readdata & 0b00011111) != 0x05)
 34343  00654A  D002               	goto	l8678
 34344  00654C                     l8676:
 34345                           
 34346                           ;main.c: 244: {
 34347                           ;main.c: 245: spi_read();
 34348  00654C  EC2F  F01F         	call	_spi_read	;wreg free
 34349  006550                     l8678:
 34350  006550  C1AB  F014         	movff	_readdata,??_media_write
 34351  006554  0E1F               	movlw	31
 34352  006556  1614               	andwf	??_media_write,f,c
 34353  006558  5014               	movf	??_media_write,w,c
 34354  00655A  0A05               	xorlw	5
 34355  00655C  E003               	bz	l8682
 34356  00655E  D7F6               	goto	l8676
 34357  006560                     l8680:
 34358                           
 34359                           ;main.c: 248: {
 34360                           ;main.c: 249: spi_read();
 34361  006560  EC2F  F01F         	call	_spi_read	;wreg free
 34362  006564                     l8682:
 34363  006564  0101               	movlb	1	; () banked
 34364  006566  29AB               	incf	_readdata& (0+255),w,b
 34365  006568  E1FB               	bnz	l8680
 34366                           
 34367                           ; BSR set to: 1
 34368                           ;main.c: 250: }
 34369                           ;main.c: 251: WriteSPI_(0xff);
 34370                           
 34371                           ; BSR set to: 1
 34372  00656A  0EFF               	movlw	255
 34373  00656C  EC77  F01F         	call	_WriteSPI_
 34374                           
 34375                           ;main.c: 252: WriteSPI_(0xff);
 34376  006570  0EFF               	movlw	255
 34377  006572  EC77  F01F         	call	_WriteSPI_
 34378                           
 34379                           ;main.c: 253: WriteSPI_(0b11111101);
 34380  006576  0EFD               	movlw	253
 34381  006578  EC77  F01F         	call	_WriteSPI_
 34382                           
 34383                           ;main.c: 254: spi_read();
 34384  00657C  EC2F  F01F         	call	_spi_read	;wreg free
 34385                           
 34386                           ;main.c: 255: spi_read();
 34387  006580  EC2F  F01F         	call	_spi_read	;wreg free
 34388                           
 34389                           ;main.c: 256: while (readdata != 0xff)
 34390  006584  D002               	goto	l8692
 34391  006586                     l8690:
 34392                           
 34393                           ;main.c: 257: {
 34394                           ;main.c: 258: spi_read();
 34395  006586  EC2F  F01F         	call	_spi_read	;wreg free
 34396  00658A                     l8692:
 34397  00658A  0101               	movlb	1	; () banked
 34398  00658C  29AB               	incf	_readdata& (0+255),w,b
 34399  00658E  E1FB               	bnz	l8690
 34400                           
 34401                           ; BSR set to: 1
 34402                           ;main.c: 259: }
 34403                           ;main.c: 260: return 1;
 34404                           
 34405                           ; BSR set to: 1
 34406  006590  0E00               	movlw	0
 34407  006592  6E0A               	movwf	?_media_write+1,c
 34408  006594  0E01               	movlw	1
 34409  006596  6E09               	movwf	?_media_write,c
 34410                           
 34411                           ; BSR set to: 1
 34412                           
 34413                           ; BSR set to: 1
 34414  006598  0C01               	retlw	1
 34415  00659A                     __end_of_media_write:
 34416                           	opt stack 0
 34417                           tosu	equ	0xFFF
 34418                           tosh	equ	0xFFE
 34419                           tosl	equ	0xFFD
 34420                           pclath	equ	0xFFA
 34421                           tblptru	equ	0xFF8
 34422                           tblptrh	equ	0xFF7
 34423                           tblptrl	equ	0xFF6
 34424                           tablat	equ	0xFF5
 34425                           prodh	equ	0xFF4
 34426                           prodl	equ	0xFF3
 34427                           indf0	equ	0xFEF
 34428                           postinc0	equ	0xFEE
 34429                           fsr0h	equ	0xFEA
 34430                           fsr0l	equ	0xFE9
 34431                           wreg	equ	0xFE8
 34432                           indf1	equ	0xFE7
 34433                           postinc1	equ	0xFE6
 34434                           postdec1	equ	0xFE5
 34435                           fsr1h	equ	0xFE2
 34436                           fsr1l	equ	0xFE1
 34437                           indf2	equ	0xFDF
 34438                           postinc2	equ	0xFDE
 34439                           postdec2	equ	0xFDD
 34440                           fsr2h	equ	0xFDA
 34441                           fsr2l	equ	0xFD9
 34442                           status	equ	0xFD8
 34443                           
 34444 ;; *************** function _command *****************
 34445 ;; Defined at:
 34446 ;;		line 91 in file "main.c"
 34447 ;; Parameters:    Size  Location     Type
 34448 ;;  command         1    wreg     unsigned char 
 34449 ;;  fourbyte_arg    4    2[COMRAM] unsigned long 
 34450 ;;  CRCbits         1    6[COMRAM] unsigned char 
 34451 ;; Auto vars:     Size  Location     Type
 34452 ;;  command         1    7[COMRAM] unsigned char 
 34453 ;; Return value:  Size  Location     Type
 34454 ;;		None               void
 34455 ;; Registers used:
 34456 ;;		wreg, status,2, status,0, cstack
 34457 ;; Tracked objects:
 34458 ;;		On entry : 0/0
 34459 ;;		On exit  : 0/0
 34460 ;;		Unchanged: 0/0
 34461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34462 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34465 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34466 ;;Total ram usage:        6 bytes
 34467 ;; Hardware stack levels used:    1
 34468 ;; Hardware stack levels required when called:    1
 34469 ;; This function calls:
 34470 ;;		_ReadBUF
 34471 ;;		_WriteSPI_
 34472 ;;		_spi_read
 34473 ;; This function is called by:
 34474 ;;		_mmc_init
 34475 ;;		_media_read
 34476 ;;		_media_write
 34477 ;; This function uses a non-reentrant model
 34478 ;;
 34479                           
 34480                           	psect	text100
 34481  00430C                     __ptext100:
 34482                           	opt stack 0
 34483  00430C                     _command:
 34484                           	opt stack 28
 34485                           
 34486                           ; BSR set to: 1
 34487                           ;incstack = 0
 34488                           ;command@command stored from wreg
 34489  00430C  6E08               	movwf	command@command,c
 34490                           
 34491                           ;main.c: 93: WriteSPI_(0xff);
 34492  00430E  0EFF               	movlw	255
 34493  004310  EC77  F01F         	call	_WriteSPI_
 34494                           
 34495                           ;main.c: 94: ReadBUF();
 34496  004314  EC2A  F01F         	call	_ReadBUF	;wreg free
 34497                           
 34498                           ;main.c: 95: WriteSPI_(0b01000000 | command);
 34499  004318  5008               	movf	command@command,w,c
 34500  00431A  0940               	iorlw	64
 34501  00431C  EC77  F01F         	call	_WriteSPI_
 34502                           
 34503                           ;main.c: 96: ReadBUF();
 34504  004320  EC2A  F01F         	call	_ReadBUF	;wreg free
 34505                           
 34506                           ;main.c: 97: WriteSPI_((unsigned char) (fourbyte_arg >> 24));
 34507  004324  5006               	movf	command@fourbyte_arg+3,w,c
 34508  004326  EC77  F01F         	call	_WriteSPI_
 34509                           
 34510                           ;main.c: 98: ReadBUF();
 34511  00432A  EC2A  F01F         	call	_ReadBUF	;wreg free
 34512                           
 34513                           ;main.c: 99: WriteSPI_((unsigned char) (fourbyte_arg >> 16));
 34514  00432E  5005               	movf	command@fourbyte_arg+2,w,c
 34515  004330  EC77  F01F         	call	_WriteSPI_
 34516                           
 34517                           ;main.c: 100: ReadBUF();
 34518  004334  EC2A  F01F         	call	_ReadBUF	;wreg free
 34519                           
 34520                           ;main.c: 101: WriteSPI_((unsigned char) (fourbyte_arg >> 8));
 34521  004338  5004               	movf	command@fourbyte_arg+1,w,c
 34522  00433A  EC77  F01F         	call	_WriteSPI_
 34523                           
 34524                           ;main.c: 102: ReadBUF();
 34525  00433E  EC2A  F01F         	call	_ReadBUF	;wreg free
 34526                           
 34527                           ;main.c: 103: WriteSPI_((unsigned char) fourbyte_arg);
 34528  004342  5003               	movf	command@fourbyte_arg,w,c
 34529  004344  EC77  F01F         	call	_WriteSPI_
 34530                           
 34531                           ;main.c: 104: ReadBUF();
 34532  004348  EC2A  F01F         	call	_ReadBUF	;wreg free
 34533                           
 34534                           ;main.c: 105: WriteSPI_(CRCbits);
 34535  00434C  5007               	movf	command@CRCbits,w,c
 34536  00434E  EC77  F01F         	call	_WriteSPI_
 34537                           
 34538                           ;main.c: 106: spi_read();
 34539  004352  EF2F  F01F         	goto	_spi_read	;wreg free
 34540  004356                     __end_of_command:
 34541                           	opt stack 0
 34542                           tosu	equ	0xFFF
 34543                           tosh	equ	0xFFE
 34544                           tosl	equ	0xFFD
 34545                           pclath	equ	0xFFA
 34546                           tblptru	equ	0xFF8
 34547                           tblptrh	equ	0xFF7
 34548                           tblptrl	equ	0xFF6
 34549                           tablat	equ	0xFF5
 34550                           prodh	equ	0xFF4
 34551                           prodl	equ	0xFF3
 34552                           indf0	equ	0xFEF
 34553                           postinc0	equ	0xFEE
 34554                           fsr0h	equ	0xFEA
 34555                           fsr0l	equ	0xFE9
 34556                           wreg	equ	0xFE8
 34557                           indf1	equ	0xFE7
 34558                           postinc1	equ	0xFE6
 34559                           postdec1	equ	0xFE5
 34560                           fsr1h	equ	0xFE2
 34561                           fsr1l	equ	0xFE1
 34562                           indf2	equ	0xFDF
 34563                           postinc2	equ	0xFDE
 34564                           postdec2	equ	0xFDD
 34565                           fsr2h	equ	0xFDA
 34566                           fsr2l	equ	0xFD9
 34567                           status	equ	0xFD8
 34568                           
 34569 ;; *************** function _spi_read *****************
 34570 ;; Defined at:
 34571 ;;		line 23 in file "spi_1.c"
 34572 ;; Parameters:    Size  Location     Type
 34573 ;;		None
 34574 ;; Auto vars:     Size  Location     Type
 34575 ;;		None
 34576 ;; Return value:  Size  Location     Type
 34577 ;;		None               void
 34578 ;; Registers used:
 34579 ;;		None
 34580 ;; Tracked objects:
 34581 ;;		On entry : 0/0
 34582 ;;		On exit  : 0/0
 34583 ;;		Unchanged: 0/0
 34584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34589 ;;Total ram usage:        0 bytes
 34590 ;; Hardware stack levels used:    1
 34591 ;; This function calls:
 34592 ;;		Nothing
 34593 ;; This function is called by:
 34594 ;;		_command
 34595 ;;		_mmc_init
 34596 ;;		_media_read
 34597 ;;		_media_write
 34598 ;; This function uses a non-reentrant model
 34599 ;;
 34600                           
 34601                           	psect	text101
 34602  003E5E                     __ptext101:
 34603                           	opt stack 0
 34604  003E5E                     _spi_read:
 34605                           	opt stack 29
 34606                           
 34607                           ;spi_1.c: 25: SSPBUF = 0xff;
 34608                           
 34609                           ;incstack = 0
 34610  003E5E  68C9               	setf	4041,c	;volatile
 34611  003E60                     l2101:
 34612  003E60  A0C7               	btfss	4039,0,c	;volatile
 34613  003E62  D7FE               	goto	l2101
 34614                           
 34615                           ;spi_1.c: 27: readdata = SSPBUF;
 34616  003E64  CFC9 F1AB          	movff	4041,_readdata	;volatile
 34617  003E68  0012               	return	
 34618  003E6A                     __end_of_spi_read:
 34619                           	opt stack 0
 34620                           tosu	equ	0xFFF
 34621                           tosh	equ	0xFFE
 34622                           tosl	equ	0xFFD
 34623                           pclath	equ	0xFFA
 34624                           tblptru	equ	0xFF8
 34625                           tblptrh	equ	0xFF7
 34626                           tblptrl	equ	0xFF6
 34627                           tablat	equ	0xFF5
 34628                           prodh	equ	0xFF4
 34629                           prodl	equ	0xFF3
 34630                           indf0	equ	0xFEF
 34631                           postinc0	equ	0xFEE
 34632                           fsr0h	equ	0xFEA
 34633                           fsr0l	equ	0xFE9
 34634                           wreg	equ	0xFE8
 34635                           indf1	equ	0xFE7
 34636                           postinc1	equ	0xFE6
 34637                           postdec1	equ	0xFE5
 34638                           fsr1h	equ	0xFE2
 34639                           fsr1l	equ	0xFE1
 34640                           indf2	equ	0xFDF
 34641                           postinc2	equ	0xFDE
 34642                           postdec2	equ	0xFDD
 34643                           fsr2h	equ	0xFDA
 34644                           fsr2l	equ	0xFD9
 34645                           status	equ	0xFD8
 34646                           
 34647 ;; *************** function _WriteSPI_ *****************
 34648 ;; Defined at:
 34649 ;;		line 64 in file "spi_1.c"
 34650 ;; Parameters:    Size  Location     Type
 34651 ;;  data_out        1    wreg     unsigned char 
 34652 ;; Auto vars:     Size  Location     Type
 34653 ;;  data_out        1    1[COMRAM] unsigned char 
 34654 ;;  TempVar         1    0[COMRAM] unsigned char 
 34655 ;; Return value:  Size  Location     Type
 34656 ;;                  1    wreg      char 
 34657 ;; Registers used:
 34658 ;;		wreg
 34659 ;; Tracked objects:
 34660 ;;		On entry : 0/0
 34661 ;;		On exit  : 0/0
 34662 ;;		Unchanged: 0/0
 34663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34668 ;;Total ram usage:        2 bytes
 34669 ;; Hardware stack levels used:    1
 34670 ;; This function calls:
 34671 ;;		Nothing
 34672 ;; This function is called by:
 34673 ;;		_command
 34674 ;;		_mmc_init
 34675 ;;		_media_read
 34676 ;;		_media_write
 34677 ;;		_wait_ready
 34678 ;;		_deselect
 34679 ;;		_select
 34680 ;;		_rcvr_datablock
 34681 ;;		_xmit_datablock
 34682 ;;		_send_cmd
 34683 ;;		_disk_initialize
 34684 ;;		_disk_ioctl
 34685 ;; This function uses a non-reentrant model
 34686 ;;
 34687                           
 34688                           	psect	text102
 34689  003EEE                     __ptext102:
 34690                           	opt stack 0
 34691  003EEE                     _WriteSPI_:
 34692                           	opt stack 28
 34693                           
 34694                           ;incstack = 0
 34695                           ;WriteSPI_@data_out stored from wreg
 34696  003EEE  6E02               	movwf	WriteSPI_@data_out,c
 34697                           
 34698                           ;spi_1.c: 66: unsigned char TempVar;
 34699                           ;spi_1.c: 67: TempVar = SSPBUF;
 34700  003EF0  CFC9 F001          	movff	4041,WriteSPI_@TempVar	;volatile
 34701                           
 34702                           ;spi_1.c: 68: PIR1bits.SSPIF = 0;
 34703  003EF4  969E               	bcf	3998,3,c	;volatile
 34704                           
 34705                           ;spi_1.c: 69: SSPCON1bits.WCOL = 0;
 34706  003EF6  9EC6               	bcf	4038,7,c	;volatile
 34707                           
 34708                           ;spi_1.c: 70: SSPBUF = data_out;
 34709  003EF8  C002  FFC9         	movff	WriteSPI_@data_out,4041	;volatile
 34710                           
 34711                           ;spi_1.c: 71: if ( SSPCON1 & 0x80 )
 34712  003EFC  AEC6               	btfss	4038,7,c	;volatile
 34713  003EFE  D002               	goto	l2116
 34714                           
 34715                           ;spi_1.c: 72: return ( -1 );
 34716  003F00  0EFF               	movlw	255
 34717  003F02  D003               	goto	l2114
 34718  003F04                     l2116:
 34719  003F04  A69E               	btfss	3998,3,c	;volatile
 34720  003F06  D7FE               	goto	l2116
 34721                           
 34722                           ;spi_1.c: 75: return ( 0 );
 34723  003F08  0E00               	movlw	0
 34724  003F0A                     l2114:
 34725  003F0A  0012               	return	
 34726  003F0C                     __end_of_WriteSPI_:
 34727                           	opt stack 0
 34728                           tosu	equ	0xFFF
 34729                           tosh	equ	0xFFE
 34730                           tosl	equ	0xFFD
 34731                           pclath	equ	0xFFA
 34732                           tblptru	equ	0xFF8
 34733                           tblptrh	equ	0xFF7
 34734                           tblptrl	equ	0xFF6
 34735                           tablat	equ	0xFF5
 34736                           prodh	equ	0xFF4
 34737                           prodl	equ	0xFF3
 34738                           indf0	equ	0xFEF
 34739                           postinc0	equ	0xFEE
 34740                           fsr0h	equ	0xFEA
 34741                           fsr0l	equ	0xFE9
 34742                           wreg	equ	0xFE8
 34743                           indf1	equ	0xFE7
 34744                           postinc1	equ	0xFE6
 34745                           postdec1	equ	0xFE5
 34746                           fsr1h	equ	0xFE2
 34747                           fsr1l	equ	0xFE1
 34748                           indf2	equ	0xFDF
 34749                           postinc2	equ	0xFDE
 34750                           postdec2	equ	0xFDD
 34751                           fsr2h	equ	0xFDA
 34752                           fsr2l	equ	0xFD9
 34753                           status	equ	0xFD8
 34754                           
 34755 ;; *************** function _ReadBUF *****************
 34756 ;; Defined at:
 34757 ;;		line 16 in file "spi_1.c"
 34758 ;; Parameters:    Size  Location     Type
 34759 ;;		None
 34760 ;; Auto vars:     Size  Location     Type
 34761 ;;  u               1    0[COMRAM] unsigned char 
 34762 ;; Return value:  Size  Location     Type
 34763 ;;		None               void
 34764 ;; Registers used:
 34765 ;;		None
 34766 ;; Tracked objects:
 34767 ;;		On entry : 0/0
 34768 ;;		On exit  : 0/0
 34769 ;;		Unchanged: 0/0
 34770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34774 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34775 ;;Total ram usage:        1 bytes
 34776 ;; Hardware stack levels used:    1
 34777 ;; This function calls:
 34778 ;;		Nothing
 34779 ;; This function is called by:
 34780 ;;		_command
 34781 ;; This function uses a non-reentrant model
 34782 ;;
 34783                           
 34784                           	psect	text103
 34785  003E54                     __ptext103:
 34786                           	opt stack 0
 34787  003E54                     _ReadBUF:
 34788                           	opt stack 28
 34789                           
 34790                           ;spi_1.c: 18: unsigned char u;
 34791                           ;spi_1.c: 19: u = SSPBUF;
 34792                           
 34793                           ;incstack = 0
 34794  003E54  CFC9 F001          	movff	4041,ReadBUF@u	;volatile
 34795                           
 34796                           ;spi_1.c: 20: u = SSPBUF;
 34797  003E58  CFC9 F001          	movff	4041,ReadBUF@u	;volatile
 34798  003E5C  0012               	return	
 34799  003E5E                     __end_of_ReadBUF:
 34800                           	opt stack 0
 34801                           tosu	equ	0xFFF
 34802                           tosh	equ	0xFFE
 34803                           tosl	equ	0xFFD
 34804                           pclath	equ	0xFFA
 34805                           tblptru	equ	0xFF8
 34806                           tblptrh	equ	0xFF7
 34807                           tblptrl	equ	0xFF6
 34808                           tablat	equ	0xFF5
 34809                           prodh	equ	0xFF4
 34810                           prodl	equ	0xFF3
 34811                           indf0	equ	0xFEF
 34812                           postinc0	equ	0xFEE
 34813                           fsr0h	equ	0xFEA
 34814                           fsr0l	equ	0xFE9
 34815                           wreg	equ	0xFE8
 34816                           indf1	equ	0xFE7
 34817                           postinc1	equ	0xFE6
 34818                           postdec1	equ	0xFE5
 34819                           fsr1h	equ	0xFE2
 34820                           fsr1l	equ	0xFE1
 34821                           indf2	equ	0xFDF
 34822                           postinc2	equ	0xFDE
 34823                           postdec2	equ	0xFDD
 34824                           fsr2h	equ	0xFDA
 34825                           fsr2l	equ	0xFD9
 34826                           status	equ	0xFD8
 34827                           
 34828 ;; *************** function ___lldiv *****************
 34829 ;; Defined at:
 34830 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lldiv.c"
 34831 ;; Parameters:    Size  Location     Type
 34832 ;;  dividend        4    0[COMRAM] unsigned long 
 34833 ;;  divisor         4    4[COMRAM] unsigned long 
 34834 ;; Auto vars:     Size  Location     Type
 34835 ;;  quotient        4    8[COMRAM] unsigned long 
 34836 ;;  counter         1   12[COMRAM] unsigned char 
 34837 ;; Return value:  Size  Location     Type
 34838 ;;                  4    0[COMRAM] unsigned long 
 34839 ;; Registers used:
 34840 ;;		wreg, status,2, status,0
 34841 ;; Tracked objects:
 34842 ;;		On entry : 0/0
 34843 ;;		On exit  : 0/0
 34844 ;;		Unchanged: 0/0
 34845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34846 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34847 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34849 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34850 ;;Total ram usage:       13 bytes
 34851 ;; Hardware stack levels used:    1
 34852 ;; This function calls:
 34853 ;;		Nothing
 34854 ;; This function is called by:
 34855 ;;		_fatfs_init
 34856 ;;		_fatfs_sector_reader
 34857 ;;		__read_sectors
 34858 ;;		__write_sectors
 34859 ;;		_fatfs_create_boot_sector
 34860 ;;		_fatfs_itoa
 34861 ;;		_fatfs_allocate_free_space
 34862 ;; This function uses a non-reentrant model
 34863 ;;
 34864                           
 34865                           	psect	text104
 34866  004CF6                     __ptext104:
 34867                           	opt stack 0
 34868  004CF6                     ___lldiv:
 34869                           	opt stack 26
 34870                           
 34871                           ;incstack = 0
 34872  004CF6  6A09               	clrf	___lldiv@quotient,c
 34873  004CF8  6A0A               	clrf	___lldiv@quotient+1,c
 34874  004CFA  6A0B               	clrf	___lldiv@quotient+2,c
 34875  004CFC  6A0C               	clrf	___lldiv@quotient+3,c
 34876  004CFE  5008               	movf	___lldiv@divisor+3,w,c
 34877  004D00  1005               	iorwf	___lldiv@divisor,w,c
 34878  004D02  1006               	iorwf	___lldiv@divisor+1,w,c
 34879  004D04  1007               	iorwf	___lldiv@divisor+2,w,c
 34880  004D06  E029               	bz	l2779
 34881  004D08  0E01               	movlw	1
 34882  004D0A  6E0D               	movwf	___lldiv@counter,c
 34883  004D0C  D006               	goto	l9066
 34884  004D0E                     l9064:
 34885  004D0E  90D8               	bcf	status,0,c
 34886  004D10  3605               	rlcf	___lldiv@divisor,f,c
 34887  004D12  3606               	rlcf	___lldiv@divisor+1,f,c
 34888  004D14  3607               	rlcf	___lldiv@divisor+2,f,c
 34889  004D16  3608               	rlcf	___lldiv@divisor+3,f,c
 34890  004D18  2A0D               	incf	___lldiv@counter,f,c
 34891  004D1A                     l9066:
 34892  004D1A  AE08               	btfss	___lldiv@divisor+3,7,c
 34893  004D1C  D7F8               	goto	l9064
 34894  004D1E                     l9068:
 34895  004D1E  90D8               	bcf	status,0,c
 34896  004D20  3609               	rlcf	___lldiv@quotient,f,c
 34897  004D22  360A               	rlcf	___lldiv@quotient+1,f,c
 34898  004D24  360B               	rlcf	___lldiv@quotient+2,f,c
 34899  004D26  360C               	rlcf	___lldiv@quotient+3,f,c
 34900  004D28  5005               	movf	___lldiv@divisor,w,c
 34901  004D2A  5C01               	subwf	___lldiv@dividend,w,c
 34902  004D2C  5006               	movf	___lldiv@divisor+1,w,c
 34903  004D2E  5802               	subwfb	___lldiv@dividend+1,w,c
 34904  004D30  5007               	movf	___lldiv@divisor+2,w,c
 34905  004D32  5803               	subwfb	___lldiv@dividend+2,w,c
 34906  004D34  5008               	movf	___lldiv@divisor+3,w,c
 34907  004D36  5804               	subwfb	___lldiv@dividend+3,w,c
 34908  004D38  E309               	bnc	l9076
 34909  004D3A  5005               	movf	___lldiv@divisor,w,c
 34910  004D3C  5E01               	subwf	___lldiv@dividend,f,c
 34911  004D3E  5006               	movf	___lldiv@divisor+1,w,c
 34912  004D40  5A02               	subwfb	___lldiv@dividend+1,f,c
 34913  004D42  5007               	movf	___lldiv@divisor+2,w,c
 34914  004D44  5A03               	subwfb	___lldiv@dividend+2,f,c
 34915  004D46  5008               	movf	___lldiv@divisor+3,w,c
 34916  004D48  5A04               	subwfb	___lldiv@dividend+3,f,c
 34917  004D4A  8009               	bsf	___lldiv@quotient,0,c
 34918  004D4C                     l9076:
 34919  004D4C  90D8               	bcf	status,0,c
 34920  004D4E  3208               	rrcf	___lldiv@divisor+3,f,c
 34921  004D50  3207               	rrcf	___lldiv@divisor+2,f,c
 34922  004D52  3206               	rrcf	___lldiv@divisor+1,f,c
 34923  004D54  3205               	rrcf	___lldiv@divisor,f,c
 34924  004D56  2E0D               	decfsz	___lldiv@counter,f,c
 34925  004D58  D7E2               	goto	l9068
 34926  004D5A                     l2779:
 34927  004D5A  C009  F001         	movff	___lldiv@quotient,?___lldiv
 34928  004D5E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 34929  004D62  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 34930  004D66  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 34931  004D6A  0012               	return	
 34932  004D6C                     __end_of___lldiv:
 34933                           	opt stack 0
 34934                           tosu	equ	0xFFF
 34935                           tosh	equ	0xFFE
 34936                           tosl	equ	0xFFD
 34937                           pclath	equ	0xFFA
 34938                           tblptru	equ	0xFF8
 34939                           tblptrh	equ	0xFF7
 34940                           tblptrl	equ	0xFF6
 34941                           tablat	equ	0xFF5
 34942                           prodh	equ	0xFF4
 34943                           prodl	equ	0xFF3
 34944                           indf0	equ	0xFEF
 34945                           postinc0	equ	0xFEE
 34946                           fsr0h	equ	0xFEA
 34947                           fsr0l	equ	0xFE9
 34948                           wreg	equ	0xFE8
 34949                           indf1	equ	0xFE7
 34950                           postinc1	equ	0xFE6
 34951                           postdec1	equ	0xFE5
 34952                           fsr1h	equ	0xFE2
 34953                           fsr1l	equ	0xFE1
 34954                           indf2	equ	0xFDF
 34955                           postinc2	equ	0xFDE
 34956                           postdec2	equ	0xFDD
 34957                           fsr2h	equ	0xFDA
 34958                           fsr2l	equ	0xFD9
 34959                           status	equ	0xFD8
 34960                           
 34961 ;; *************** function _fatfs_lfn_cache_init *****************
 34962 ;; Defined at:
 34963 ;;		line 39 in file "fat_misc.c"
 34964 ;; Parameters:    Size  Location     Type
 34965 ;;  lfn             2    8[COMRAM] PTR struct lfn_cache
 34966 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
 34967 ;;  wipeTable       2   10[COMRAM] int 
 34968 ;; Auto vars:     Size  Location     Type
 34969 ;;  i               2   14[COMRAM] int 
 34970 ;; Return value:  Size  Location     Type
 34971 ;;		None               void
 34972 ;; Registers used:
 34973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34974 ;; Tracked objects:
 34975 ;;		On entry : 0/0
 34976 ;;		On exit  : 0/0
 34977 ;;		Unchanged: 0/0
 34978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34979 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34980 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34981 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34982 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34983 ;;Total ram usage:        8 bytes
 34984 ;; Hardware stack levels used:    1
 34985 ;; Hardware stack levels required when called:    1
 34986 ;; This function calls:
 34987 ;;		_memset
 34988 ;; This function is called by:
 34989 ;;		_fatfs_get_file_entry
 34990 ;;		_fatfs_list_directory_next
 34991 ;; This function uses a non-reentrant model
 34992 ;;
 34993                           
 34994                           	psect	text105
 34995  0046EA                     __ptext105:
 34996                           	opt stack 0
 34997  0046EA                     _fatfs_lfn_cache_init:
 34998                           	opt stack 26
 34999                           
 35000                           ;fat_misc.c: 41: int i = 0;
 35001                           
 35002                           ;incstack = 0
 35003  0046EA  6A10               	clrf	fatfs_lfn_cache_init@i+1,c
 35004  0046EC  6A0F               	clrf	fatfs_lfn_cache_init@i,c
 35005                           
 35006                           ;fat_misc.c: 43: lfn->no_of_strings = 0;
 35007  0046EE  EE20 F033          	lfsr	2,51
 35008  0046F2  5009               	movf	fatfs_lfn_cache_init@lfn,w,c
 35009  0046F4  26D9               	addwf	fsr2l,f,c
 35010  0046F6  500A               	movf	fatfs_lfn_cache_init@lfn+1,w,c
 35011  0046F8  22DA               	addwfc	fsr2h,f,c
 35012  0046FA  6ADF               	clrf	indf2,c
 35013                           
 35014                           ;fat_misc.c: 48: if (wipeTable)
 35015  0046FC  500C               	movf	fatfs_lfn_cache_init@wipeTable+1,w,c
 35016  0046FE  100B               	iorwf	fatfs_lfn_cache_init@wipeTable,w,c
 35017  004700  E022               	bz	l934
 35018                           
 35019                           ;fat_misc.c: 49: for (i=0;i<10;i++)
 35020  004702  6A10               	clrf	fatfs_lfn_cache_init@i+1,c
 35021  004704  6A0F               	clrf	fatfs_lfn_cache_init@i,c
 35022  004706  5010               	movf	fatfs_lfn_cache_init@i+1,w,c
 35023  004708  0A80               	xorlw	128
 35024  00470A  0F80               	addlw	-128
 35025  00470C  0E0A               	movlw	10
 35026  00470E  B4D8               	btfsc	status,2,c
 35027  004710  5C0F               	subwf	fatfs_lfn_cache_init@i,w,c
 35028  004712  E219               	bc	l934
 35029                           
 35030                           ;fat_misc.c: 50: memset(lfn->String[i], 0x00, 5);
 35031  004714  0E05               	movlw	5
 35032  004716  020F               	mulwf	fatfs_lfn_cache_init@i,c
 35033  004718  CFF3 F00D          	movff	prodl,??_fatfs_lfn_cache_init
 35034  00471C  CFF4 F00E          	movff	prodh,??_fatfs_lfn_cache_init+1
 35035  004720  0210               	mulwf	fatfs_lfn_cache_init@i+1,c
 35036  004722  50F3               	movf	243,w,c
 35037  004724  260E               	addwf	(??_fatfs_lfn_cache_init+1)& (0+255),f,c
 35038  004726  500D               	movf	??_fatfs_lfn_cache_init,w,c
 35039  004728  2409               	addwf	fatfs_lfn_cache_init@lfn,w,c
 35040  00472A  6E01               	movwf	memset@p1,c
 35041  00472C  500E               	movf	??_fatfs_lfn_cache_init+1,w,c
 35042  00472E  200A               	addwfc	fatfs_lfn_cache_init@lfn+1,w,c
 35043  004730  6E02               	movwf	memset@p1+1,c
 35044  004732  6A04               	clrf	memset@c+1,c
 35045  004734  6A03               	clrf	memset@c,c
 35046  004736  6A06               	clrf	memset@n+1,c
 35047  004738  0E05               	movlw	5
 35048  00473A  6E05               	movwf	memset@n,c
 35049  00473C  EC1A  F020         	call	_memset	;wreg free
 35050  004740  4A0F               	infsnz	fatfs_lfn_cache_init@i,f,c
 35051  004742  2A10               	incf	fatfs_lfn_cache_init@i+1,f,c
 35052  004744  D7E0               	goto	L125
 35053  004746                     l934:
 35054  004746  0012               	return	
 35055  004748                     __end_of_fatfs_lfn_cache_init:
 35056                           	opt stack 0
 35057                           tosu	equ	0xFFF
 35058                           tosh	equ	0xFFE
 35059                           tosl	equ	0xFFD
 35060                           pclath	equ	0xFFA
 35061                           tblptru	equ	0xFF8
 35062                           tblptrh	equ	0xFF7
 35063                           tblptrl	equ	0xFF6
 35064                           tablat	equ	0xFF5
 35065                           prodh	equ	0xFF4
 35066                           prodl	equ	0xFF3
 35067                           indf0	equ	0xFEF
 35068                           postinc0	equ	0xFEE
 35069                           fsr0h	equ	0xFEA
 35070                           fsr0l	equ	0xFE9
 35071                           wreg	equ	0xFE8
 35072                           indf1	equ	0xFE7
 35073                           postinc1	equ	0xFE6
 35074                           postdec1	equ	0xFE5
 35075                           fsr1h	equ	0xFE2
 35076                           fsr1l	equ	0xFE1
 35077                           indf2	equ	0xFDF
 35078                           postinc2	equ	0xFDE
 35079                           postdec2	equ	0xFDD
 35080                           fsr2h	equ	0xFDA
 35081                           fsr2l	equ	0xFD9
 35082                           status	equ	0xFD8
 35083                           
 35084 ;; *************** function _memset *****************
 35085 ;; Defined at:
 35086 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memset.c"
 35087 ;; Parameters:    Size  Location     Type
 35088 ;;  p1              2    0[COMRAM] PTR void 
 35089 ;;		 -> _fs.currentsector.sector(512), lfn.String(50), lfn.String(50), _fs.fat_buffers(522), 
 35090 ;;		 -> _fs.currentsector(524), fatfs_lfn_generate_tail@tail_str(12), fatfs_lfn_create_sfn@ext(3), _create_file@shortFil
      +ename(11), 
 35091 ;;		 -> _create_directory@shortFilename(11), _fs(1095), RAM(3967), fatfs_list_directory_next@short_filename(13), 
 35092 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0
      +), 
 35093 ;;  c               2    2[COMRAM] int 
 35094 ;;  n               2    4[COMRAM] unsigned int 
 35095 ;; Auto vars:     Size  Location     Type
 35096 ;;  p               2    6[COMRAM] PTR unsigned char 
 35097 ;;		 -> _fs.currentsector.sector(512), lfn.String(50), lfn.String(50), _fs.fat_buffers(522), 
 35098 ;;		 -> _fs.currentsector(524), fatfs_lfn_generate_tail@tail_str(12), fatfs_lfn_create_sfn@ext(3), _create_file@shortFil
      +ename(11), 
 35099 ;;		 -> _create_directory@shortFilename(11), _fs(1095), RAM(3967), fatfs_list_directory_next@short_filename(13), 
 35100 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0
      +), 
 35101 ;; Return value:  Size  Location     Type
 35102 ;;                  2    0[COMRAM] PTR void 
 35103 ;; Registers used:
 35104 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35105 ;; Tracked objects:
 35106 ;;		On entry : 0/0
 35107 ;;		On exit  : 0/0
 35108 ;;		Unchanged: 0/0
 35109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35110 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35113 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35114 ;;Total ram usage:        8 bytes
 35115 ;; Hardware stack levels used:    1
 35116 ;; This function calls:
 35117 ;;		Nothing
 35118 ;; This function is called by:
 35119 ;;		_fatfs_get_file_entry
 35120 ;;		_fatfs_list_directory_next
 35121 ;;		__create_directory
 35122 ;;		__open_file
 35123 ;;		__create_file
 35124 ;;		_fl_fwrite
 35125 ;;		_fatfs_erase_sectors
 35126 ;;		_fatfs_create_boot_sector
 35127 ;;		_fatfs_create_fsinfo_sector
 35128 ;;		_fatfs_erase_fat
 35129 ;;		_fatfs_lfn_cache_init
 35130 ;;		_fatfs_filename_to_lfn
 35131 ;;		_fatfs_lfn_create_sfn
 35132 ;;		_fatfs_lfn_generate_tail
 35133 ;;		_fatfs_fat_init
 35134 ;;		_fatfs_find_free_dir_offset
 35135 ;; This function uses a non-reentrant model
 35136 ;;
 35137                           
 35138                           	psect	text106
 35139  004034                     __ptext106:
 35140                           	opt stack 0
 35141  004034                     _memset:
 35142                           	opt stack 27
 35143                           
 35144                           ;incstack = 0
 35145  004034  C002  F008         	movff	memset@p1+1,memset@p+1
 35146  004038  C001  F007         	movff	memset@p1,memset@p
 35147  00403C  D008               	goto	l8900
 35148  00403E                     l8896:
 35149  00403E  C007  FFD9         	movff	memset@p,fsr2l
 35150  004042  C008  FFDA         	movff	memset@p+1,fsr2h
 35151  004046  C003  FFDF         	movff	memset@c,indf2
 35152  00404A  4A07               	infsnz	memset@p,f,c
 35153  00404C  2A08               	incf	memset@p+1,f,c
 35154  00404E                     l8900:
 35155  00404E  0605               	decf	memset@n,f,c
 35156  004050  A0D8               	btfss	status,0,c
 35157  004052  0606               	decf	memset@n+1,f,c
 35158  004054  2805               	incf	memset@n& (0+255),w,c
 35159  004056  B4D8               	btfsc	status,2,c
 35160  004058  2806               	incf	(memset@n+1)& (0+255),w,c
 35161  00405A  B4D8               	btfsc	status,2,c
 35162                           
 35163                           ;	Return value of _memset is never used
 35164  00405C  0012               	return	
 35165  00405E  D7EF               	goto	l8896
 35166  004060                     __end_of_memset:
 35167                           	opt stack 0
 35168                           tosu	equ	0xFFF
 35169                           tosh	equ	0xFFE
 35170                           tosl	equ	0xFFD
 35171                           pclath	equ	0xFFA
 35172                           tblptru	equ	0xFF8
 35173                           tblptrh	equ	0xFF7
 35174                           tblptrl	equ	0xFF6
 35175                           tablat	equ	0xFF5
 35176                           prodh	equ	0xFF4
 35177                           prodl	equ	0xFF3
 35178                           indf0	equ	0xFEF
 35179                           postinc0	equ	0xFEE
 35180                           fsr0h	equ	0xFEA
 35181                           fsr0l	equ	0xFE9
 35182                           wreg	equ	0xFE8
 35183                           indf1	equ	0xFE7
 35184                           postinc1	equ	0xFE6
 35185                           postdec1	equ	0xFE5
 35186                           fsr1h	equ	0xFE2
 35187                           fsr1l	equ	0xFE1
 35188                           indf2	equ	0xFDF
 35189                           postinc2	equ	0xFDE
 35190                           postdec2	equ	0xFDD
 35191                           fsr2h	equ	0xFDA
 35192                           fsr2l	equ	0xFD9
 35193                           status	equ	0xFD8
 35194                           
 35195 ;; *************** function _fatfs_lfn_cache_get *****************
 35196 ;; Defined at:
 35197 ;;		line 97 in file "fat_misc.c"
 35198 ;; Parameters:    Size  Location     Type
 35199 ;;  lfn             2    0[COMRAM] PTR struct lfn_cache
 35200 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
 35201 ;; Auto vars:     Size  Location     Type
 35202 ;;		None
 35203 ;; Return value:  Size  Location     Type
 35204 ;;                  2    0[COMRAM] PTR unsigned char 
 35205 ;; Registers used:
 35206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35207 ;; Tracked objects:
 35208 ;;		On entry : 0/0
 35209 ;;		On exit  : 0/0
 35210 ;;		Unchanged: 0/0
 35211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35214 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35215 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35216 ;;Total ram usage:        3 bytes
 35217 ;; Hardware stack levels used:    1
 35218 ;; This function calls:
 35219 ;;		Nothing
 35220 ;; This function is called by:
 35221 ;;		_fatfs_get_file_entry
 35222 ;;		_fatfs_list_directory_next
 35223 ;; This function uses a non-reentrant model
 35224 ;;
 35225                           
 35226                           	psect	text107
 35227  0049F0                     __ptext107:
 35228                           	opt stack 0
 35229  0049F0                     _fatfs_lfn_cache_get:
 35230                           	opt stack 27
 35231                           
 35232                           ;fat_misc.c: 100: if (lfn->no_of_strings == 10)
 35233                           
 35234                           ;incstack = 0
 35235  0049F0  EE20 F033          	lfsr	2,51
 35236  0049F4  5001               	movf	fatfs_lfn_cache_get@lfn,w,c
 35237  0049F6  26D9               	addwf	fsr2l,f,c
 35238  0049F8  5002               	movf	fatfs_lfn_cache_get@lfn+1,w,c
 35239  0049FA  22DA               	addwfc	fsr2h,f,c
 35240  0049FC  0E0A               	movlw	10
 35241  0049FE  62DF               	cpfseq	indf2,c
 35242  004A00  D007               	goto	l9310
 35243                           
 35244                           ;fat_misc.c: 101: lfn->Null = '\0';
 35245  004A02  EE20 F032          	lfsr	2,50
 35246  004A06  5001               	movf	fatfs_lfn_cache_get@lfn,w,c
 35247  004A08  26D9               	addwf	fsr2l,f,c
 35248  004A0A  5002               	movf	fatfs_lfn_cache_get@lfn+1,w,c
 35249  004A0C  22DA               	addwfc	fsr2h,f,c
 35250  004A0E  D01D               	goto	L127
 35251  004A10                     l9310:
 35252                           
 35253                           ;fat_misc.c: 102: else if (lfn->no_of_strings)
 35254  004A10  EE20 F033          	lfsr	2,51
 35255  004A14  5001               	movf	fatfs_lfn_cache_get@lfn,w,c
 35256  004A16  26D9               	addwf	fsr2l,f,c
 35257  004A18  5002               	movf	fatfs_lfn_cache_get@lfn+1,w,c
 35258  004A1A  22DA               	addwfc	fsr2h,f,c
 35259  004A1C  50DF               	movf	indf2,w,c
 35260  004A1E  E011               	bz	l9314
 35261                           
 35262                           ;fat_misc.c: 103: lfn->String[lfn->no_of_strings][0] = '\0';
 35263  004A20  EE20 F033          	lfsr	2,51
 35264  004A24  5001               	movf	fatfs_lfn_cache_get@lfn,w,c
 35265  004A26  26D9               	addwf	fsr2l,f,c
 35266  004A28  5002               	movf	fatfs_lfn_cache_get@lfn+1,w,c
 35267  004A2A  22DA               	addwfc	fsr2h,f,c
 35268  004A2C  50DF               	movf	indf2,w,c
 35269  004A2E  6E03               	movwf	??_fatfs_lfn_cache_get& (0+255),c
 35270  004A30  5003               	movf	??_fatfs_lfn_cache_get,w,c
 35271  004A32  0D05               	mullw	5
 35272  004A34  50F3               	movf	prodl,w,c
 35273  004A36  2401               	addwf	fatfs_lfn_cache_get@lfn,w,c
 35274  004A38  6ED9               	movwf	fsr2l,c
 35275  004A3A  50F4               	movf	prodh,w,c
 35276  004A3C  2002               	addwfc	fatfs_lfn_cache_get@lfn+1,w,c
 35277  004A3E  6EDA               	movwf	fsr2h,c
 35278  004A40  D004               	goto	L127
 35279  004A42                     l9314:
 35280                           
 35281                           ;fat_misc.c: 104: else
 35282                           ;fat_misc.c: 105: lfn->String[0][0] = '\0';
 35283  004A42  C001  FFD9         	movff	fatfs_lfn_cache_get@lfn,fsr2l
 35284  004A46  C002  FFDA         	movff	fatfs_lfn_cache_get@lfn+1,fsr2h
 35285  004A4A                     L127:
 35286  004A4A  0E00               	movlw	0
 35287  004A4C  6EDF               	movwf	indf2,c
 35288                           
 35289                           ;fat_misc.c: 107: return (char*)&lfn->String[0][0];
 35290  004A4E  C002  F002         	movff	fatfs_lfn_cache_get@lfn+1,?_fatfs_lfn_cache_get+1
 35291  004A52  C001  F001         	movff	fatfs_lfn_cache_get@lfn,?_fatfs_lfn_cache_get
 35292  004A56  0C00               	retlw	0
 35293  004A58                     __end_of_fatfs_lfn_cache_get:
 35294                           	opt stack 0
 35295                           tosu	equ	0xFFF
 35296                           tosh	equ	0xFFE
 35297                           tosl	equ	0xFFD
 35298                           pclath	equ	0xFFA
 35299                           tblptru	equ	0xFF8
 35300                           tblptrh	equ	0xFF7
 35301                           tblptrl	equ	0xFF6
 35302                           tablat	equ	0xFF5
 35303                           prodh	equ	0xFF4
 35304                           prodl	equ	0xFF3
 35305                           indf0	equ	0xFEF
 35306                           postinc0	equ	0xFEE
 35307                           fsr0h	equ	0xFEA
 35308                           fsr0l	equ	0xFE9
 35309                           wreg	equ	0xFE8
 35310                           indf1	equ	0xFE7
 35311                           postinc1	equ	0xFE6
 35312                           postdec1	equ	0xFE5
 35313                           fsr1h	equ	0xFE2
 35314                           fsr1l	equ	0xFE1
 35315                           indf2	equ	0xFDF
 35316                           postinc2	equ	0xFDE
 35317                           postdec2	equ	0xFDD
 35318                           fsr2h	equ	0xFDA
 35319                           fsr2l	equ	0xFD9
 35320                           status	equ	0xFD8
 35321                           
 35322 ;; *************** function _fatfs_lfn_cache_entry *****************
 35323 ;; Defined at:
 35324 ;;		line 58 in file "fat_misc.c"
 35325 ;; Parameters:    Size  Location     Type
 35326 ;;  lfn             2    0[COMRAM] PTR struct lfn_cache
 35327 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
 35328 ;;  entryBuffer     2    2[COMRAM] PTR unsigned char 
 35329 ;;		 -> _fs.currentsector.sector(512), 
 35330 ;; Auto vars:     Size  Location     Type
 35331 ;;  LFNIndex        1   15[COMRAM] unsigned char 
 35332 ;;  i               1   14[COMRAM] unsigned char 
 35333 ;; Return value:  Size  Location     Type
 35334 ;;		None               void
 35335 ;; Registers used:
 35336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35337 ;; Tracked objects:
 35338 ;;		On entry : 0/0
 35339 ;;		On exit  : 0/0
 35340 ;;		Unchanged: 0/0
 35341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35342 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35344 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35345 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35346 ;;Total ram usage:       16 bytes
 35347 ;; Hardware stack levels used:    1
 35348 ;; This function calls:
 35349 ;;		Nothing
 35350 ;; This function is called by:
 35351 ;;		_fatfs_get_file_entry
 35352 ;;		_fatfs_list_directory_next
 35353 ;; This function uses a non-reentrant model
 35354 ;;
 35355                           
 35356                           	psect	text108
 35357  00CF38                     __ptext108:
 35358                           	opt stack 0
 35359  00CF38                     _fatfs_lfn_cache_entry:
 35360                           	opt stack 27
 35361                           
 35362                           ;fat_misc.c: 60: uint8 LFNIndex, i;
 35363                           ;fat_misc.c: 61: LFNIndex = entryBuffer[0] & 0x1F;
 35364                           
 35365                           ;incstack = 0
 35366  00CF38  C003  FFD9         	movff	fatfs_lfn_cache_entry@entryBuffer,fsr2l
 35367  00CF3C  C004  FFDA         	movff	fatfs_lfn_cache_entry@entryBuffer+1,fsr2h
 35368  00CF40  50DF               	movf	indf2,w,c
 35369  00CF42  0B1F               	andlw	31
 35370  00CF44  6E10               	movwf	fatfs_lfn_cache_entry@LFNIndex,c
 35371                           
 35372                           ;fat_misc.c: 64: if (LFNIndex > 10)
 35373  00CF46  0E0A               	movlw	10
 35374  00CF48  6410               	cpfsgt	fatfs_lfn_cache_entry@LFNIndex,c
 35375  00CF4A  D001               	goto	l937
 35376  00CF4C  D29B               	goto	l938
 35377  00CF4E                     l937:
 35378                           
 35379                           ;fat_misc.c: 68: if (LFNIndex == 0)
 35380  00CF4E  6610               	tstfsz	fatfs_lfn_cache_entry@LFNIndex,c
 35381  00CF50  D001               	goto	l9222
 35382  00CF52  D298               	goto	l938
 35383  00CF54                     l9222:
 35384                           
 35385                           ;fat_misc.c: 71: if (lfn->no_of_strings == 0)
 35386  00CF54  EE20 F033          	lfsr	2,51
 35387  00CF58  5001               	movf	fatfs_lfn_cache_entry@lfn,w,c
 35388  00CF5A  26D9               	addwf	fsr2l,f,c
 35389  00CF5C  5002               	movf	fatfs_lfn_cache_entry@lfn+1,w,c
 35390  00CF5E  22DA               	addwfc	fsr2h,f,c
 35391  00CF60  50DF               	movf	indf2,w,c
 35392  00CF62  E108               	bnz	l9226
 35393                           
 35394                           ;fat_misc.c: 72: lfn->no_of_strings = LFNIndex;
 35395  00CF64  EE20 F033          	lfsr	2,51
 35396  00CF68  5001               	movf	fatfs_lfn_cache_entry@lfn,w,c
 35397  00CF6A  26D9               	addwf	fsr2l,f,c
 35398  00CF6C  5002               	movf	fatfs_lfn_cache_entry@lfn+1,w,c
 35399  00CF6E  22DA               	addwfc	fsr2h,f,c
 35400  00CF70  C010  FFDF         	movff	fatfs_lfn_cache_entry@LFNIndex,indf2
 35401  00CF74                     l9226:
 35402                           
 35403                           ;fat_misc.c: 74: lfn->String[LFNIndex-1][0] = entryBuffer[1];
 35404  00CF74  EE20 F001          	lfsr	2,1
 35405  00CF78  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35406  00CF7A  26D9               	addwf	fsr2l,f,c
 35407  00CF7C  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35408  00CF7E  22DA               	addwfc	fsr2h,f,c
 35409  00CF80  0E05               	movlw	5
 35410  00CF82  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35411  00CF84  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35412  00CF86  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35413  00CF88  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35414  00CF8A  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35415  00CF8C  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35416  00CF8E  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35417  00CF90  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35418  00CF92  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35419  00CF94  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35420  00CF96  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35421  00CF98  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35422  00CF9A  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35423  00CF9C  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35424  00CFA0  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35425  00CFA4  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35426  00CFA6  50F3               	movf	243,w,c
 35427  00CFA8  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35428  00CFAA  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35429  00CFAC  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35430  00CFAE  50F3               	movf	243,w,c
 35431  00CFB0  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35432  00CFB2  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35433  00CFB4  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35434  00CFB6  6EE1               	movwf	fsr1l,c
 35435  00CFB8  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35436  00CFBA  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35437  00CFBC  6EE2               	movwf	fsr1h,c
 35438  00CFBE  CFDF FFE7          	movff	indf2,indf1
 35439                           
 35440                           ;fat_misc.c: 75: lfn->String[LFNIndex-1][1] = entryBuffer[3];
 35441  00CFC2  EE20 F003          	lfsr	2,3
 35442  00CFC6  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35443  00CFC8  26D9               	addwf	fsr2l,f,c
 35444  00CFCA  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35445  00CFCC  22DA               	addwfc	fsr2h,f,c
 35446  00CFCE  0E05               	movlw	5
 35447  00CFD0  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35448  00CFD2  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35449  00CFD4  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35450  00CFD6  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35451  00CFD8  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35452  00CFDA  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35453  00CFDC  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35454  00CFDE  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35455  00CFE0  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35456  00CFE2  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35457  00CFE4  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35458  00CFE6  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35459  00CFE8  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35460  00CFEA  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35461  00CFEE  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35462  00CFF2  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35463  00CFF4  50F3               	movf	243,w,c
 35464  00CFF6  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35465  00CFF8  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35466  00CFFA  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35467  00CFFC  50F3               	movf	243,w,c
 35468  00CFFE  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35469  00D000  2A0B               	incf	??_fatfs_lfn_cache_entry+6,f,c
 35470  00D002  0E00               	movlw	0
 35471  00D004  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35472  00D006  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35473  00D008  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35474  00D00A  6EE1               	movwf	fsr1l,c
 35475  00D00C  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35476  00D00E  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35477  00D010  6EE2               	movwf	fsr1h,c
 35478  00D012  CFDF FFE7          	movff	indf2,indf1
 35479                           
 35480                           ;fat_misc.c: 76: lfn->String[LFNIndex-1][2] = entryBuffer[5];
 35481  00D016  EE20 F005          	lfsr	2,5
 35482  00D01A  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35483  00D01C  26D9               	addwf	fsr2l,f,c
 35484  00D01E  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35485  00D020  22DA               	addwfc	fsr2h,f,c
 35486  00D022  0E05               	movlw	5
 35487  00D024  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35488  00D026  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35489  00D028  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35490  00D02A  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35491  00D02C  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35492  00D02E  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35493  00D030  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35494  00D032  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35495  00D034  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35496  00D036  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35497  00D038  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35498  00D03A  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35499  00D03C  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35500  00D03E  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35501  00D042  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35502  00D046  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35503  00D048  50F3               	movf	243,w,c
 35504  00D04A  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35505  00D04C  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35506  00D04E  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35507  00D050  50F3               	movf	243,w,c
 35508  00D052  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35509  00D054  0E02               	movlw	2
 35510  00D056  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35511  00D058  0E00               	movlw	0
 35512  00D05A  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35513  00D05C  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35514  00D05E  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35515  00D060  6EE1               	movwf	fsr1l,c
 35516  00D062  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35517  00D064  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35518  00D066  6EE2               	movwf	fsr1h,c
 35519  00D068  CFDF FFE7          	movff	indf2,indf1
 35520                           
 35521                           ;fat_misc.c: 77: lfn->String[LFNIndex-1][3] = entryBuffer[7];
 35522  00D06C  EE20 F007          	lfsr	2,7
 35523  00D070  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35524  00D072  26D9               	addwf	fsr2l,f,c
 35525  00D074  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35526  00D076  22DA               	addwfc	fsr2h,f,c
 35527  00D078  0E05               	movlw	5
 35528  00D07A  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35529  00D07C  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35530  00D07E  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35531  00D080  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35532  00D082  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35533  00D084  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35534  00D086  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35535  00D088  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35536  00D08A  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35537  00D08C  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35538  00D08E  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35539  00D090  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35540  00D092  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35541  00D094  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35542  00D098  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35543  00D09C  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35544  00D09E  50F3               	movf	243,w,c
 35545  00D0A0  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35546  00D0A2  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35547  00D0A4  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35548  00D0A6  50F3               	movf	243,w,c
 35549  00D0A8  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35550  00D0AA  0E03               	movlw	3
 35551  00D0AC  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35552  00D0AE  0E00               	movlw	0
 35553  00D0B0  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35554  00D0B2  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35555  00D0B4  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35556  00D0B6  6EE1               	movwf	fsr1l,c
 35557  00D0B8  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35558  00D0BA  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35559  00D0BC  6EE2               	movwf	fsr1h,c
 35560  00D0BE  CFDF FFE7          	movff	indf2,indf1
 35561                           
 35562                           ;fat_misc.c: 78: lfn->String[LFNIndex-1][4] = entryBuffer[9];
 35563  00D0C2  EE20 F009          	lfsr	2,9
 35564  00D0C6  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35565  00D0C8  26D9               	addwf	fsr2l,f,c
 35566  00D0CA  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35567  00D0CC  22DA               	addwfc	fsr2h,f,c
 35568  00D0CE  0E05               	movlw	5
 35569  00D0D0  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35570  00D0D2  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35571  00D0D4  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35572  00D0D6  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35573  00D0D8  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35574  00D0DA  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35575  00D0DC  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35576  00D0DE  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35577  00D0E0  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35578  00D0E2  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35579  00D0E4  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35580  00D0E6  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35581  00D0E8  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35582  00D0EA  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35583  00D0EE  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35584  00D0F2  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35585  00D0F4  50F3               	movf	243,w,c
 35586  00D0F6  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35587  00D0F8  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35588  00D0FA  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35589  00D0FC  50F3               	movf	243,w,c
 35590  00D0FE  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35591  00D100  0E04               	movlw	4
 35592  00D102  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35593  00D104  0E00               	movlw	0
 35594  00D106  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35595  00D108  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35596  00D10A  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35597  00D10C  6EE1               	movwf	fsr1l,c
 35598  00D10E  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35599  00D110  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35600  00D112  6EE2               	movwf	fsr1h,c
 35601  00D114  CFDF FFE7          	movff	indf2,indf1
 35602                           
 35603                           ;fat_misc.c: 79: lfn->String[LFNIndex-1][5] = entryBuffer[0x0E];
 35604  00D118  EE20 F00E          	lfsr	2,14
 35605  00D11C  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35606  00D11E  26D9               	addwf	fsr2l,f,c
 35607  00D120  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35608  00D122  22DA               	addwfc	fsr2h,f,c
 35609  00D124  0E05               	movlw	5
 35610  00D126  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35611  00D128  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35612  00D12A  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35613  00D12C  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35614  00D12E  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35615  00D130  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35616  00D132  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35617  00D134  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35618  00D136  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35619  00D138  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35620  00D13A  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35621  00D13C  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35622  00D13E  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35623  00D140  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35624  00D144  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35625  00D148  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35626  00D14A  50F3               	movf	243,w,c
 35627  00D14C  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35628  00D14E  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35629  00D150  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35630  00D152  50F3               	movf	243,w,c
 35631  00D154  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35632  00D156  0E05               	movlw	5
 35633  00D158  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35634  00D15A  0E00               	movlw	0
 35635  00D15C  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35636  00D15E  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35637  00D160  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35638  00D162  6EE1               	movwf	fsr1l,c
 35639  00D164  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35640  00D166  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35641  00D168  6EE2               	movwf	fsr1h,c
 35642  00D16A  CFDF FFE7          	movff	indf2,indf1
 35643                           
 35644                           ;fat_misc.c: 80: lfn->String[LFNIndex-1][6] = entryBuffer[0x10];
 35645  00D16E  EE20 F010          	lfsr	2,16
 35646  00D172  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35647  00D174  26D9               	addwf	fsr2l,f,c
 35648  00D176  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35649  00D178  22DA               	addwfc	fsr2h,f,c
 35650  00D17A  0E05               	movlw	5
 35651  00D17C  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35652  00D17E  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35653  00D180  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35654  00D182  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35655  00D184  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35656  00D186  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35657  00D188  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35658  00D18A  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35659  00D18C  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35660  00D18E  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35661  00D190  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35662  00D192  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35663  00D194  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35664  00D196  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35665  00D19A  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35666  00D19E  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35667  00D1A0  50F3               	movf	243,w,c
 35668  00D1A2  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35669  00D1A4  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35670  00D1A6  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35671  00D1A8  50F3               	movf	243,w,c
 35672  00D1AA  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35673  00D1AC  0E06               	movlw	6
 35674  00D1AE  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35675  00D1B0  0E00               	movlw	0
 35676  00D1B2  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35677  00D1B4  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35678  00D1B6  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35679  00D1B8  6EE1               	movwf	fsr1l,c
 35680  00D1BA  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35681  00D1BC  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35682  00D1BE  6EE2               	movwf	fsr1h,c
 35683  00D1C0  CFDF FFE7          	movff	indf2,indf1
 35684                           
 35685                           ;fat_misc.c: 81: lfn->String[LFNIndex-1][7] = entryBuffer[0x12];
 35686  00D1C4  EE20 F012          	lfsr	2,18
 35687  00D1C8  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35688  00D1CA  26D9               	addwf	fsr2l,f,c
 35689  00D1CC  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35690  00D1CE  22DA               	addwfc	fsr2h,f,c
 35691  00D1D0  0E05               	movlw	5
 35692  00D1D2  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35693  00D1D4  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35694  00D1D6  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35695  00D1D8  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35696  00D1DA  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35697  00D1DC  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35698  00D1DE  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35699  00D1E0  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35700  00D1E2  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35701  00D1E4  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35702  00D1E6  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35703  00D1E8  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35704  00D1EA  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35705  00D1EC  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35706  00D1F0  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35707  00D1F4  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35708  00D1F6  50F3               	movf	243,w,c
 35709  00D1F8  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35710  00D1FA  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35711  00D1FC  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35712  00D1FE  50F3               	movf	243,w,c
 35713  00D200  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35714  00D202  0E07               	movlw	7
 35715  00D204  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35716  00D206  0E00               	movlw	0
 35717  00D208  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35718  00D20A  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35719  00D20C  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35720  00D20E  6EE1               	movwf	fsr1l,c
 35721  00D210  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35722  00D212  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35723  00D214  6EE2               	movwf	fsr1h,c
 35724  00D216  CFDF FFE7          	movff	indf2,indf1
 35725                           
 35726                           ;fat_misc.c: 82: lfn->String[LFNIndex-1][8] = entryBuffer[0x14];
 35727  00D21A  EE20 F014          	lfsr	2,20
 35728  00D21E  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35729  00D220  26D9               	addwf	fsr2l,f,c
 35730  00D222  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35731  00D224  22DA               	addwfc	fsr2h,f,c
 35732  00D226  0E05               	movlw	5
 35733  00D228  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35734  00D22A  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35735  00D22C  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35736  00D22E  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35737  00D230  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35738  00D232  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35739  00D234  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35740  00D236  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35741  00D238  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35742  00D23A  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35743  00D23C  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35744  00D23E  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35745  00D240  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35746  00D242  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35747  00D246  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35748  00D24A  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35749  00D24C  50F3               	movf	243,w,c
 35750  00D24E  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35751  00D250  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35752  00D252  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35753  00D254  50F3               	movf	243,w,c
 35754  00D256  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35755  00D258  0E08               	movlw	8
 35756  00D25A  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35757  00D25C  0E00               	movlw	0
 35758  00D25E  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35759  00D260  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35760  00D262  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35761  00D264  6EE1               	movwf	fsr1l,c
 35762  00D266  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35763  00D268  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35764  00D26A  6EE2               	movwf	fsr1h,c
 35765  00D26C  CFDF FFE7          	movff	indf2,indf1
 35766                           
 35767                           ;fat_misc.c: 83: lfn->String[LFNIndex-1][9] = entryBuffer[0x16];
 35768  00D270  EE20 F016          	lfsr	2,22
 35769  00D274  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35770  00D276  26D9               	addwf	fsr2l,f,c
 35771  00D278  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35772  00D27A  22DA               	addwfc	fsr2h,f,c
 35773  00D27C  0E05               	movlw	5
 35774  00D27E  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35775  00D280  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35776  00D282  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35777  00D284  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35778  00D286  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35779  00D288  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35780  00D28A  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35781  00D28C  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35782  00D28E  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35783  00D290  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35784  00D292  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35785  00D294  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35786  00D296  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35787  00D298  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35788  00D29C  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35789  00D2A0  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35790  00D2A2  50F3               	movf	243,w,c
 35791  00D2A4  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35792  00D2A6  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35793  00D2A8  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35794  00D2AA  50F3               	movf	243,w,c
 35795  00D2AC  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35796  00D2AE  0E09               	movlw	9
 35797  00D2B0  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35798  00D2B2  0E00               	movlw	0
 35799  00D2B4  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35800  00D2B6  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35801  00D2B8  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35802  00D2BA  6EE1               	movwf	fsr1l,c
 35803  00D2BC  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35804  00D2BE  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35805  00D2C0  6EE2               	movwf	fsr1h,c
 35806  00D2C2  CFDF FFE7          	movff	indf2,indf1
 35807                           
 35808                           ;fat_misc.c: 84: lfn->String[LFNIndex-1][10] = entryBuffer[0x18];
 35809  00D2C6  EE20 F018          	lfsr	2,24
 35810  00D2CA  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35811  00D2CC  26D9               	addwf	fsr2l,f,c
 35812  00D2CE  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35813  00D2D0  22DA               	addwfc	fsr2h,f,c
 35814  00D2D2  0E05               	movlw	5
 35815  00D2D4  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35816  00D2D6  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35817  00D2D8  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35818  00D2DA  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35819  00D2DC  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35820  00D2DE  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35821  00D2E0  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35822  00D2E2  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35823  00D2E4  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35824  00D2E6  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35825  00D2E8  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35826  00D2EA  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35827  00D2EC  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35828  00D2EE  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35829  00D2F2  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35830  00D2F6  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35831  00D2F8  50F3               	movf	243,w,c
 35832  00D2FA  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35833  00D2FC  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35834  00D2FE  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35835  00D300  50F3               	movf	243,w,c
 35836  00D302  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35837  00D304  0E0A               	movlw	10
 35838  00D306  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35839  00D308  0E00               	movlw	0
 35840  00D30A  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35841  00D30C  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35842  00D30E  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35843  00D310  6EE1               	movwf	fsr1l,c
 35844  00D312  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35845  00D314  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35846  00D316  6EE2               	movwf	fsr1h,c
 35847  00D318  CFDF FFE7          	movff	indf2,indf1
 35848                           
 35849                           ;fat_misc.c: 85: lfn->String[LFNIndex-1][11] = entryBuffer[0x1C];
 35850  00D31C  EE20 F01C          	lfsr	2,28
 35851  00D320  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35852  00D322  26D9               	addwf	fsr2l,f,c
 35853  00D324  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35854  00D326  22DA               	addwfc	fsr2h,f,c
 35855  00D328  0E05               	movlw	5
 35856  00D32A  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35857  00D32C  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35858  00D32E  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35859  00D330  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35860  00D332  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35861  00D334  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35862  00D336  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35863  00D338  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35864  00D33A  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35865  00D33C  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35866  00D33E  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35867  00D340  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35868  00D342  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35869  00D344  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35870  00D348  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35871  00D34C  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35872  00D34E  50F3               	movf	243,w,c
 35873  00D350  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35874  00D352  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35875  00D354  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35876  00D356  50F3               	movf	243,w,c
 35877  00D358  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35878  00D35A  0E0B               	movlw	11
 35879  00D35C  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35880  00D35E  0E00               	movlw	0
 35881  00D360  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35882  00D362  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35883  00D364  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35884  00D366  6EE1               	movwf	fsr1l,c
 35885  00D368  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35886  00D36A  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35887  00D36C  6EE2               	movwf	fsr1h,c
 35888  00D36E  CFDF FFE7          	movff	indf2,indf1
 35889                           
 35890                           ;fat_misc.c: 86: lfn->String[LFNIndex-1][12] = entryBuffer[0x1E];
 35891  00D372  EE20 F01E          	lfsr	2,30
 35892  00D376  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35893  00D378  26D9               	addwf	fsr2l,f,c
 35894  00D37A  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35895  00D37C  22DA               	addwfc	fsr2h,f,c
 35896  00D37E  0E05               	movlw	5
 35897  00D380  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35898  00D382  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35899  00D384  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35900  00D386  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35901  00D388  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35902  00D38A  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35903  00D38C  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35904  00D38E  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35905  00D390  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35906  00D392  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35907  00D394  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35908  00D396  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35909  00D398  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35910  00D39A  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35911  00D39E  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35912  00D3A2  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35913  00D3A4  50F3               	movf	243,w,c
 35914  00D3A6  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35915  00D3A8  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35916  00D3AA  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35917  00D3AC  50F3               	movf	243,w,c
 35918  00D3AE  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35919  00D3B0  0E0C               	movlw	12
 35920  00D3B2  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35921  00D3B4  0E00               	movlw	0
 35922  00D3B6  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35923  00D3B8  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35924  00D3BA  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35925  00D3BC  6EE1               	movwf	fsr1l,c
 35926  00D3BE  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35927  00D3C0  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35928  00D3C2  6EE2               	movwf	fsr1h,c
 35929  00D3C4  CFDF FFE7          	movff	indf2,indf1
 35930                           
 35931                           ;fat_misc.c: 88: for (i=0; i<5; i++)
 35932  00D3C8  0E00               	movlw	0
 35933  00D3CA  6E0F               	movwf	fatfs_lfn_cache_entry@i,c
 35934  00D3CC  D058               	goto	L128
 35935  00D3CE                     l9258:
 35936                           
 35937                           ;fat_misc.c: 89: if (lfn->String[LFNIndex-1][i]==0xFF)
 35938  00D3CE  0E05               	movlw	5
 35939  00D3D0  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35940  00D3D2  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35941  00D3D4  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35942  00D3D6  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35943  00D3D8  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35944  00D3DA  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35945  00D3DC  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35946  00D3DE  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35947  00D3E0  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35948  00D3E2  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35949  00D3E4  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35950  00D3E6  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35951  00D3E8  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35952  00D3EA  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35953  00D3EE  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35954  00D3F2  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35955  00D3F4  50F3               	movf	243,w,c
 35956  00D3F6  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35957  00D3F8  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35958  00D3FA  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35959  00D3FC  50F3               	movf	243,w,c
 35960  00D3FE  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35961  00D400  C001  F00D         	movff	fatfs_lfn_cache_entry@lfn,??_fatfs_lfn_cache_entry+8
 35962  00D404  C002  F00E         	movff	fatfs_lfn_cache_entry@lfn+1,??_fatfs_lfn_cache_entry+9
 35963  00D408  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35964  00D40A  260D               	addwf	??_fatfs_lfn_cache_entry+8,f,c
 35965  00D40C  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35966  00D40E  220E               	addwfc	??_fatfs_lfn_cache_entry+9,f,c
 35967  00D410  500F               	movf	fatfs_lfn_cache_entry@i,w,c
 35968  00D412  0D01               	mullw	1
 35969  00D414  50F3               	movf	prodl,w,c
 35970  00D416  240D               	addwf	??_fatfs_lfn_cache_entry+8,w,c
 35971  00D418  6ED9               	movwf	fsr2l,c
 35972  00D41A  50F4               	movf	prodh,w,c
 35973  00D41C  200E               	addwfc	??_fatfs_lfn_cache_entry+9,w,c
 35974  00D41E  6EDA               	movwf	fsr2h,c
 35975  00D420  0EFF               	movlw	255
 35976  00D422  62DF               	cpfseq	indf2,c
 35977  00D424  D02B               	goto	l9262
 35978                           
 35979                           ;fat_misc.c: 90: lfn->String[LFNIndex-1][i] = 0x20;
 35980  00D426  0E05               	movlw	5
 35981  00D428  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35982  00D42A  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35983  00D42C  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35984  00D42E  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35985  00D430  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35986  00D432  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35987  00D434  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35988  00D436  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35989  00D438  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35990  00D43A  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35991  00D43C  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35992  00D43E  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35993  00D440  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35994  00D442  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35995  00D446  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35996  00D44A  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35997  00D44C  50F3               	movf	243,w,c
 35998  00D44E  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35999  00D450  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 36000  00D452  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 36001  00D454  50F3               	movf	243,w,c
 36002  00D456  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 36003  00D458  C001  F00D         	movff	fatfs_lfn_cache_entry@lfn,??_fatfs_lfn_cache_entry+8
 36004  00D45C  C002  F00E         	movff	fatfs_lfn_cache_entry@lfn+1,??_fatfs_lfn_cache_entry+9
 36005  00D460  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 36006  00D462  260D               	addwf	??_fatfs_lfn_cache_entry+8,f,c
 36007  00D464  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 36008  00D466  220E               	addwfc	??_fatfs_lfn_cache_entry+9,f,c
 36009  00D468  500F               	movf	fatfs_lfn_cache_entry@i,w,c
 36010  00D46A  0D01               	mullw	1
 36011  00D46C  50F3               	movf	prodl,w,c
 36012  00D46E  240D               	addwf	??_fatfs_lfn_cache_entry+8,w,c
 36013  00D470  6ED9               	movwf	fsr2l,c
 36014  00D472  50F4               	movf	prodh,w,c
 36015  00D474  200E               	addwfc	??_fatfs_lfn_cache_entry+9,w,c
 36016  00D476  6EDA               	movwf	fsr2h,c
 36017  00D478  0E20               	movlw	32
 36018  00D47A  6EDF               	movwf	indf2,c
 36019  00D47C                     l9262:
 36020  00D47C  2A0F               	incf	fatfs_lfn_cache_entry@i,f,c
 36021  00D47E                     L128:
 36022  00D47E  0E04               	movlw	4
 36023  00D480  640F               	cpfsgt	fatfs_lfn_cache_entry@i,c
 36024  00D482  D7A5               	goto	l9258
 36025  00D484                     l938:
 36026  00D484  0012               	return	
 36027  00D486                     __end_of_fatfs_lfn_cache_entry:
 36028                           	opt stack 0
 36029                           tosu	equ	0xFFF
 36030                           tosh	equ	0xFFE
 36031                           tosl	equ	0xFFD
 36032                           pclath	equ	0xFFA
 36033                           tblptru	equ	0xFF8
 36034                           tblptrh	equ	0xFF7
 36035                           tblptrl	equ	0xFF6
 36036                           tablat	equ	0xFF5
 36037                           prodh	equ	0xFF4
 36038                           prodl	equ	0xFF3
 36039                           indf0	equ	0xFEF
 36040                           postinc0	equ	0xFEE
 36041                           fsr0h	equ	0xFEA
 36042                           fsr0l	equ	0xFE9
 36043                           wreg	equ	0xFE8
 36044                           indf1	equ	0xFE7
 36045                           postinc1	equ	0xFE6
 36046                           postdec1	equ	0xFE5
 36047                           fsr1h	equ	0xFE2
 36048                           fsr1l	equ	0xFE1
 36049                           indf2	equ	0xFDF
 36050                           postinc2	equ	0xFDE
 36051                           postdec2	equ	0xFDD
 36052                           fsr2h	equ	0xFDA
 36053                           fsr2l	equ	0xFD9
 36054                           status	equ	0xFD8
 36055                           
 36056 ;; *************** function _fatfs_entry_sfn_only *****************
 36057 ;; Defined at:
 36058 ;;		line 157 in file "fat_misc.c"
 36059 ;; Parameters:    Size  Location     Type
 36060 ;;  entry           2    0[COMRAM] PTR struct fat_dir_entry
 36061 ;;		 -> _fs.currentsector.sector.currentsector.sector(512), _fs.currentsector.sector(512), 
 36062 ;; Auto vars:     Size  Location     Type
 36063 ;;		None
 36064 ;; Return value:  Size  Location     Type
 36065 ;;                  2    0[COMRAM] int 
 36066 ;; Registers used:
 36067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36068 ;; Tracked objects:
 36069 ;;		On entry : 0/0
 36070 ;;		On exit  : 0/0
 36071 ;;		Unchanged: 0/0
 36072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36076 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36077 ;;Total ram usage:        3 bytes
 36078 ;; Hardware stack levels used:    1
 36079 ;; This function calls:
 36080 ;;		Nothing
 36081 ;; This function is called by:
 36082 ;;		_fatfs_get_file_entry
 36083 ;;		_fatfs_sfn_exists
 36084 ;;		_fatfs_update_file_length
 36085 ;;		_fatfs_mark_file_deleted
 36086 ;;		_fatfs_list_directory_next
 36087 ;; This function uses a non-reentrant model
 36088 ;;
 36089                           
 36090                           	psect	text109
 36091  00498C                     __ptext109:
 36092                           	opt stack 0
 36093  00498C                     _fatfs_entry_sfn_only:
 36094                           	opt stack 27
 36095                           
 36096                           ;fat_misc.c: 159: if ( (entry->Attr!=0x0F) &&
 36097                           ;fat_misc.c: 160: (entry->Name[0]!=0x00) &&
 36098                           ;fat_misc.c: 161: (entry->Name[0]!=0xE5) &&
 36099                           ;fat_misc.c: 162: (entry->Attr!=0x08) &&
 36100                           ;fat_misc.c: 163: (!(entry->Attr&0x06)) )
 36101                           
 36102                           ;incstack = 0
 36103  00498C  EE20 F00B          	lfsr	2,11
 36104  004990  5001               	movf	fatfs_entry_sfn_only@entry,w,c
 36105  004992  26D9               	addwf	fsr2l,f,c
 36106  004994  5002               	movf	fatfs_entry_sfn_only@entry+1,w,c
 36107  004996  22DA               	addwfc	fsr2h,f,c
 36108  004998  50DF               	movf	indf2,w,c
 36109  00499A  0A0F               	xorlw	15
 36110  00499C  E025               	bz	l9406
 36111  00499E  C001  FFD9         	movff	fatfs_entry_sfn_only@entry,fsr2l
 36112  0049A2  C002  FFDA         	movff	fatfs_entry_sfn_only@entry+1,fsr2h
 36113  0049A6  50DF               	movf	indf2,w,c
 36114  0049A8  E01F               	bz	l9406
 36115  0049AA  C001  FFD9         	movff	fatfs_entry_sfn_only@entry,fsr2l
 36116  0049AE  C002  FFDA         	movff	fatfs_entry_sfn_only@entry+1,fsr2h
 36117  0049B2  50DF               	movf	indf2,w,c
 36118  0049B4  0AE5               	xorlw	229
 36119  0049B6  E018               	bz	l9406
 36120  0049B8  EE20 F00B          	lfsr	2,11
 36121  0049BC  5001               	movf	fatfs_entry_sfn_only@entry,w,c
 36122  0049BE  26D9               	addwf	fsr2l,f,c
 36123  0049C0  5002               	movf	fatfs_entry_sfn_only@entry+1,w,c
 36124  0049C2  22DA               	addwfc	fsr2h,f,c
 36125  0049C4  50DF               	movf	indf2,w,c
 36126  0049C6  0A08               	xorlw	8
 36127  0049C8  E00F               	bz	l9406
 36128  0049CA  EE20 F00B          	lfsr	2,11
 36129  0049CE  5001               	movf	fatfs_entry_sfn_only@entry,w,c
 36130  0049D0  26D9               	addwf	fsr2l,f,c
 36131  0049D2  5002               	movf	fatfs_entry_sfn_only@entry+1,w,c
 36132  0049D4  22DA               	addwfc	fsr2h,f,c
 36133  0049D6  50DF               	movf	indf2,w,c
 36134  0049D8  6E03               	movwf	??_fatfs_entry_sfn_only& (0+255),c
 36135  0049DA  0E06               	movlw	6
 36136  0049DC  1603               	andwf	??_fatfs_entry_sfn_only,f,c
 36137  0049DE  E104               	bnz	l9406
 36138                           
 36139                           ;fat_misc.c: 164: return 1;
 36140  0049E0  0E00               	movlw	0
 36141  0049E2  6E02               	movwf	?_fatfs_entry_sfn_only+1,c
 36142  0049E4  0E01               	movlw	1
 36143  0049E6  D002               	goto	L129
 36144  0049E8                     l9406:
 36145                           
 36146                           ;fat_misc.c: 165: else
 36147                           ;fat_misc.c: 166: return 0;
 36148  0049E8  0E00               	movlw	0
 36149  0049EA  6E02               	movwf	?_fatfs_entry_sfn_only+1,c
 36150  0049EC                     L129:
 36151  0049EC  6E01               	movwf	?_fatfs_entry_sfn_only,c
 36152  0049EE  0012               	return	
 36153  0049F0                     __end_of_fatfs_entry_sfn_only:
 36154                           	opt stack 0
 36155                           tosu	equ	0xFFF
 36156                           tosh	equ	0xFFE
 36157                           tosl	equ	0xFFD
 36158                           pclath	equ	0xFFA
 36159                           tblptru	equ	0xFF8
 36160                           tblptrh	equ	0xFF7
 36161                           tblptrl	equ	0xFF6
 36162                           tablat	equ	0xFF5
 36163                           prodh	equ	0xFF4
 36164                           prodl	equ	0xFF3
 36165                           indf0	equ	0xFEF
 36166                           postinc0	equ	0xFEE
 36167                           fsr0h	equ	0xFEA
 36168                           fsr0l	equ	0xFE9
 36169                           wreg	equ	0xFE8
 36170                           indf1	equ	0xFE7
 36171                           postinc1	equ	0xFE6
 36172                           postdec1	equ	0xFE5
 36173                           fsr1h	equ	0xFE2
 36174                           fsr1l	equ	0xFE1
 36175                           indf2	equ	0xFDF
 36176                           postinc2	equ	0xFDE
 36177                           postdec2	equ	0xFDD
 36178                           fsr2h	equ	0xFDA
 36179                           fsr2l	equ	0xFD9
 36180                           status	equ	0xFD8
 36181                           
 36182 ;; *************** function _fatfs_entry_lfn_text *****************
 36183 ;; Defined at:
 36184 ;;		line 114 in file "fat_misc.c"
 36185 ;; Parameters:    Size  Location     Type
 36186 ;;  entry           2    0[COMRAM] PTR struct fat_dir_entry
 36187 ;;		 -> _fs.currentsector.sector.currentsector.sector(512), _fs.currentsector.sector(512), 
 36188 ;; Auto vars:     Size  Location     Type
 36189 ;;		None
 36190 ;; Return value:  Size  Location     Type
 36191 ;;                  2    0[COMRAM] int 
 36192 ;; Registers used:
 36193 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36194 ;; Tracked objects:
 36195 ;;		On entry : 0/0
 36196 ;;		On exit  : 0/0
 36197 ;;		Unchanged: 0/0
 36198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36202 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36203 ;;Total ram usage:        3 bytes
 36204 ;; Hardware stack levels used:    1
 36205 ;; This function calls:
 36206 ;;		Nothing
 36207 ;; This function is called by:
 36208 ;;		_fatfs_get_file_entry
 36209 ;;		_fatfs_sfn_exists
 36210 ;;		_fatfs_update_file_length
 36211 ;;		_fatfs_mark_file_deleted
 36212 ;;		_fatfs_list_directory_next
 36213 ;;		_fatfs_find_free_dir_offset
 36214 ;; This function uses a non-reentrant model
 36215 ;;
 36216                           
 36217                           	psect	text110
 36218  003FE0                     __ptext110:
 36219                           	opt stack 0
 36220  003FE0                     _fatfs_entry_lfn_text:
 36221                           	opt stack 27
 36222                           
 36223                           ;fat_misc.c: 116: if ((entry->Attr & 0x0F) == 0x0F)
 36224                           
 36225                           ;incstack = 0
 36226  003FE0  EE20 F00B          	lfsr	2,11
 36227  003FE4  5001               	movf	fatfs_entry_lfn_text@entry,w,c
 36228  003FE6  26D9               	addwf	fsr2l,f,c
 36229  003FE8  5002               	movf	fatfs_entry_lfn_text@entry+1,w,c
 36230  003FEA  22DA               	addwfc	fsr2h,f,c
 36231  003FEC  50DF               	movf	indf2,w,c
 36232  003FEE  6E03               	movwf	??_fatfs_entry_lfn_text& (0+255),c
 36233  003FF0  0E0F               	movlw	15
 36234  003FF2  1603               	andwf	??_fatfs_entry_lfn_text,f,c
 36235  003FF4  5003               	movf	??_fatfs_entry_lfn_text,w,c
 36236  003FF6  0A0F               	xorlw	15
 36237  003FF8  E104               	bnz	l9210
 36238                           
 36239                           ;fat_misc.c: 117: return 1;
 36240  003FFA  0E00               	movlw	0
 36241  003FFC  6E02               	movwf	?_fatfs_entry_lfn_text+1,c
 36242  003FFE  0E01               	movlw	1
 36243  004000  D002               	goto	L130
 36244  004002                     l9210:
 36245                           
 36246                           ;fat_misc.c: 118: else
 36247                           ;fat_misc.c: 119: return 0;
 36248  004002  0E00               	movlw	0
 36249  004004  6E02               	movwf	?_fatfs_entry_lfn_text+1,c
 36250  004006                     L130:
 36251  004006  6E01               	movwf	?_fatfs_entry_lfn_text,c
 36252  004008  0012               	return	
 36253  00400A                     __end_of_fatfs_entry_lfn_text:
 36254                           	opt stack 0
 36255                           tosu	equ	0xFFF
 36256                           tosh	equ	0xFFE
 36257                           tosl	equ	0xFFD
 36258                           pclath	equ	0xFFA
 36259                           tblptru	equ	0xFF8
 36260                           tblptrh	equ	0xFF7
 36261                           tblptrl	equ	0xFF6
 36262                           tablat	equ	0xFF5
 36263                           prodh	equ	0xFF4
 36264                           prodl	equ	0xFF3
 36265                           indf0	equ	0xFEF
 36266                           postinc0	equ	0xFEE
 36267                           fsr0h	equ	0xFEA
 36268                           fsr0l	equ	0xFE9
 36269                           wreg	equ	0xFE8
 36270                           indf1	equ	0xFE7
 36271                           postinc1	equ	0xFE6
 36272                           postdec1	equ	0xFE5
 36273                           fsr1h	equ	0xFE2
 36274                           fsr1l	equ	0xFE1
 36275                           indf2	equ	0xFDF
 36276                           postinc2	equ	0xFDE
 36277                           postdec2	equ	0xFDD
 36278                           fsr2h	equ	0xFDA
 36279                           fsr2l	equ	0xFD9
 36280                           status	equ	0xFD8
 36281                           
 36282 ;; *************** function _fatfs_entry_lfn_invalid *****************
 36283 ;; Defined at:
 36284 ;;		line 126 in file "fat_misc.c"
 36285 ;; Parameters:    Size  Location     Type
 36286 ;;  entry           2    0[COMRAM] PTR struct fat_dir_entry
 36287 ;;		 -> _fs.currentsector.sector.currentsector.sector(512), _fs.currentsector.sector(512), 
 36288 ;; Auto vars:     Size  Location     Type
 36289 ;;		None
 36290 ;; Return value:  Size  Location     Type
 36291 ;;                  2    0[COMRAM] int 
 36292 ;; Registers used:
 36293 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36294 ;; Tracked objects:
 36295 ;;		On entry : 0/0
 36296 ;;		On exit  : 0/0
 36297 ;;		Unchanged: 0/0
 36298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36302 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36303 ;;Total ram usage:        3 bytes
 36304 ;; Hardware stack levels used:    1
 36305 ;; This function calls:
 36306 ;;		Nothing
 36307 ;; This function is called by:
 36308 ;;		_fatfs_get_file_entry
 36309 ;;		_fatfs_sfn_exists
 36310 ;;		_fatfs_update_file_length
 36311 ;;		_fatfs_mark_file_deleted
 36312 ;;		_fatfs_list_directory_next
 36313 ;; This function uses a non-reentrant model
 36314 ;;
 36315                           
 36316                           	psect	text111
 36317  004534                     __ptext111:
 36318                           	opt stack 0
 36319  004534                     _fatfs_entry_lfn_invalid:
 36320                           	opt stack 27
 36321                           
 36322                           ;fat_misc.c: 128: if ( (entry->Name[0]==0x00) ||
 36323                           ;fat_misc.c: 129: (entry->Name[0]==0xE5)||
 36324                           ;fat_misc.c: 130: (entry->Attr==0x08) ||
 36325                           ;fat_misc.c: 131: (entry->Attr & 0x06) )
 36326                           
 36327                           ;incstack = 0
 36328  004534  C001  FFD9         	movff	fatfs_entry_lfn_invalid@entry,fsr2l
 36329  004538  C002  FFDA         	movff	fatfs_entry_lfn_invalid@entry+1,fsr2h
 36330  00453C  50DF               	movf	indf2,w,c
 36331  00453E  E01B               	bz	l9274
 36332  004540  C001  FFD9         	movff	fatfs_entry_lfn_invalid@entry,fsr2l
 36333  004544  C002  FFDA         	movff	fatfs_entry_lfn_invalid@entry+1,fsr2h
 36334  004548  50DF               	movf	indf2,w,c
 36335  00454A  0AE5               	xorlw	229
 36336  00454C  E014               	bz	l9274
 36337  00454E  EE20 F00B          	lfsr	2,11
 36338  004552  5001               	movf	fatfs_entry_lfn_invalid@entry,w,c
 36339  004554  26D9               	addwf	fsr2l,f,c
 36340  004556  5002               	movf	fatfs_entry_lfn_invalid@entry+1,w,c
 36341  004558  22DA               	addwfc	fsr2h,f,c
 36342  00455A  50DF               	movf	indf2,w,c
 36343  00455C  0A08               	xorlw	8
 36344  00455E  E00B               	bz	l9274
 36345  004560  EE20 F00B          	lfsr	2,11
 36346  004564  5001               	movf	fatfs_entry_lfn_invalid@entry,w,c
 36347  004566  26D9               	addwf	fsr2l,f,c
 36348  004568  5002               	movf	fatfs_entry_lfn_invalid@entry+1,w,c
 36349  00456A  22DA               	addwfc	fsr2h,f,c
 36350  00456C  50DF               	movf	indf2,w,c
 36351  00456E  6E03               	movwf	??_fatfs_entry_lfn_invalid& (0+255),c
 36352  004570  0E06               	movlw	6
 36353  004572  1603               	andwf	??_fatfs_entry_lfn_invalid,f,c
 36354  004574  E004               	bz	l9280
 36355  004576                     l9274:
 36356                           
 36357                           ;fat_misc.c: 132: return 1;
 36358  004576  0E00               	movlw	0
 36359  004578  6E02               	movwf	?_fatfs_entry_lfn_invalid+1,c
 36360  00457A  0E01               	movlw	1
 36361  00457C  D002               	goto	L131
 36362  00457E                     l9280:
 36363                           
 36364                           ;fat_misc.c: 133: else
 36365                           ;fat_misc.c: 134: return 0;
 36366  00457E  0E00               	movlw	0
 36367  004580  6E02               	movwf	?_fatfs_entry_lfn_invalid+1,c
 36368  004582                     L131:
 36369  004582  6E01               	movwf	?_fatfs_entry_lfn_invalid,c
 36370  004584  0012               	return	
 36371  004586                     __end_of_fatfs_entry_lfn_invalid:
 36372                           	opt stack 0
 36373                           tosu	equ	0xFFF
 36374                           tosh	equ	0xFFE
 36375                           tosl	equ	0xFFD
 36376                           pclath	equ	0xFFA
 36377                           tblptru	equ	0xFF8
 36378                           tblptrh	equ	0xFF7
 36379                           tblptrl	equ	0xFF6
 36380                           tablat	equ	0xFF5
 36381                           prodh	equ	0xFF4
 36382                           prodl	equ	0xFF3
 36383                           indf0	equ	0xFEF
 36384                           postinc0	equ	0xFEE
 36385                           fsr0h	equ	0xFEA
 36386                           fsr0l	equ	0xFE9
 36387                           wreg	equ	0xFE8
 36388                           indf1	equ	0xFE7
 36389                           postinc1	equ	0xFE6
 36390                           postdec1	equ	0xFE5
 36391                           fsr1h	equ	0xFE2
 36392                           fsr1l	equ	0xFE1
 36393                           indf2	equ	0xFDF
 36394                           postinc2	equ	0xFDE
 36395                           postdec2	equ	0xFDD
 36396                           fsr2h	equ	0xFDA
 36397                           fsr2l	equ	0xFD9
 36398                           status	equ	0xFD8
 36399                           
 36400 ;; *************** function _fatfs_entry_lfn_exists *****************
 36401 ;; Defined at:
 36402 ;;		line 141 in file "fat_misc.c"
 36403 ;; Parameters:    Size  Location     Type
 36404 ;;  lfn             2    0[COMRAM] PTR struct lfn_cache
 36405 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
 36406 ;;  entry           2    2[COMRAM] PTR struct fat_dir_entry
 36407 ;;		 -> _fs.currentsector.sector(512), 
 36408 ;; Auto vars:     Size  Location     Type
 36409 ;;		None
 36410 ;; Return value:  Size  Location     Type
 36411 ;;                  2    0[COMRAM] int 
 36412 ;; Registers used:
 36413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36414 ;; Tracked objects:
 36415 ;;		On entry : 0/0
 36416 ;;		On exit  : 0/0
 36417 ;;		Unchanged: 0/0
 36418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36422 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36423 ;;Total ram usage:        5 bytes
 36424 ;; Hardware stack levels used:    1
 36425 ;; This function calls:
 36426 ;;		Nothing
 36427 ;; This function is called by:
 36428 ;;		_fatfs_get_file_entry
 36429 ;;		_fatfs_list_directory_next
 36430 ;; This function uses a non-reentrant model
 36431 ;;
 36432                           
 36433                           	psect	text112
 36434  004C82                     __ptext112:
 36435                           	opt stack 0
 36436  004C82                     _fatfs_entry_lfn_exists:
 36437                           	opt stack 27
 36438                           
 36439                           ;fat_misc.c: 143: if ( (entry->Attr!=0x0F) &&
 36440                           ;fat_misc.c: 144: (entry->Name[0]!=0x00) &&
 36441                           ;fat_misc.c: 145: (entry->Name[0]!=0xE5) &&
 36442                           ;fat_misc.c: 146: (entry->Attr!=0x08) &&
 36443                           ;fat_misc.c: 147: (!(entry->Attr&0x06)) &&
 36444                           ;fat_misc.c: 148: (lfn->no_of_strings) )
 36445                           
 36446                           ;incstack = 0
 36447  004C82  EE20 F00B          	lfsr	2,11
 36448  004C86  5003               	movf	fatfs_entry_lfn_exists@entry,w,c
 36449  004C88  26D9               	addwf	fsr2l,f,c
 36450  004C8A  5004               	movf	fatfs_entry_lfn_exists@entry+1,w,c
 36451  004C8C  22DA               	addwfc	fsr2h,f,c
 36452  004C8E  50DF               	movf	indf2,w,c
 36453  004C90  0A0F               	xorlw	15
 36454  004C92  E02D               	bz	l9302
 36455  004C94  C003  FFD9         	movff	fatfs_entry_lfn_exists@entry,fsr2l
 36456  004C98  C004  FFDA         	movff	fatfs_entry_lfn_exists@entry+1,fsr2h
 36457  004C9C  50DF               	movf	indf2,w,c
 36458  004C9E  E027               	bz	l9302
 36459  004CA0  C003  FFD9         	movff	fatfs_entry_lfn_exists@entry,fsr2l
 36460  004CA4  C004  FFDA         	movff	fatfs_entry_lfn_exists@entry+1,fsr2h
 36461  004CA8  50DF               	movf	indf2,w,c
 36462  004CAA  0AE5               	xorlw	229
 36463  004CAC  E020               	bz	l9302
 36464  004CAE  EE20 F00B          	lfsr	2,11
 36465  004CB2  5003               	movf	fatfs_entry_lfn_exists@entry,w,c
 36466  004CB4  26D9               	addwf	fsr2l,f,c
 36467  004CB6  5004               	movf	fatfs_entry_lfn_exists@entry+1,w,c
 36468  004CB8  22DA               	addwfc	fsr2h,f,c
 36469  004CBA  50DF               	movf	indf2,w,c
 36470  004CBC  0A08               	xorlw	8
 36471  004CBE  E017               	bz	l9302
 36472  004CC0  EE20 F00B          	lfsr	2,11
 36473  004CC4  5003               	movf	fatfs_entry_lfn_exists@entry,w,c
 36474  004CC6  26D9               	addwf	fsr2l,f,c
 36475  004CC8  5004               	movf	fatfs_entry_lfn_exists@entry+1,w,c
 36476  004CCA  22DA               	addwfc	fsr2h,f,c
 36477  004CCC  50DF               	movf	indf2,w,c
 36478  004CCE  6E05               	movwf	??_fatfs_entry_lfn_exists& (0+255),c
 36479  004CD0  0E06               	movlw	6
 36480  004CD2  1605               	andwf	??_fatfs_entry_lfn_exists,f,c
 36481  004CD4  E10C               	bnz	l9302
 36482  004CD6  EE20 F033          	lfsr	2,51
 36483  004CDA  5001               	movf	fatfs_entry_lfn_exists@lfn,w,c
 36484  004CDC  26D9               	addwf	fsr2l,f,c
 36485  004CDE  5002               	movf	fatfs_entry_lfn_exists@lfn+1,w,c
 36486  004CE0  22DA               	addwfc	fsr2h,f,c
 36487  004CE2  50DF               	movf	indf2,w,c
 36488  004CE4  E004               	bz	l9302
 36489                           
 36490                           ;fat_misc.c: 149: return 1;
 36491  004CE6  0E00               	movlw	0
 36492  004CE8  6E02               	movwf	?_fatfs_entry_lfn_exists+1,c
 36493  004CEA  0E01               	movlw	1
 36494  004CEC  D002               	goto	L132
 36495  004CEE                     l9302:
 36496                           
 36497                           ;fat_misc.c: 150: else
 36498                           ;fat_misc.c: 151: return 0;
 36499  004CEE  0E00               	movlw	0
 36500  004CF0  6E02               	movwf	?_fatfs_entry_lfn_exists+1,c
 36501  004CF2                     L132:
 36502  004CF2  6E01               	movwf	?_fatfs_entry_lfn_exists,c
 36503  004CF4  0012               	return	
 36504  004CF6                     __end_of_fatfs_entry_lfn_exists:
 36505                           	opt stack 0
 36506                           tosu	equ	0xFFF
 36507                           tosh	equ	0xFFE
 36508                           tosl	equ	0xFFD
 36509                           pclath	equ	0xFFA
 36510                           tblptru	equ	0xFF8
 36511                           tblptrh	equ	0xFF7
 36512                           tblptrl	equ	0xFF6
 36513                           tablat	equ	0xFF5
 36514                           prodh	equ	0xFF4
 36515                           prodl	equ	0xFF3
 36516                           indf0	equ	0xFEF
 36517                           postinc0	equ	0xFEE
 36518                           fsr0h	equ	0xFEA
 36519                           fsr0l	equ	0xFE9
 36520                           wreg	equ	0xFE8
 36521                           indf1	equ	0xFE7
 36522                           postinc1	equ	0xFE6
 36523                           postdec1	equ	0xFE5
 36524                           fsr1h	equ	0xFE2
 36525                           fsr1l	equ	0xFE1
 36526                           indf2	equ	0xFDF
 36527                           postinc2	equ	0xFDE
 36528                           postdec2	equ	0xFDD
 36529                           fsr2h	equ	0xFDA
 36530                           fsr2l	equ	0xFD9
 36531                           status	equ	0xFD8
 36532                           
 36533 ;; *************** function _fatfs_entry_is_dir *****************
 36534 ;; Defined at:
 36535 ;;		line 172 in file "fat_misc.c"
 36536 ;; Parameters:    Size  Location     Type
 36537 ;;  entry           2    0[COMRAM] PTR struct fat_dir_entry
 36538 ;;		 -> _fs.currentsector.sector(512), _open_directory@sfEntry(32), 
 36539 ;; Auto vars:     Size  Location     Type
 36540 ;;		None
 36541 ;; Return value:  Size  Location     Type
 36542 ;;                  2    0[COMRAM] int 
 36543 ;; Registers used:
 36544 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36545 ;; Tracked objects:
 36546 ;;		On entry : 0/0
 36547 ;;		On exit  : 0/0
 36548 ;;		Unchanged: 0/0
 36549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36553 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36554 ;;Total ram usage:        3 bytes
 36555 ;; Hardware stack levels used:    1
 36556 ;; This function calls:
 36557 ;;		Nothing
 36558 ;; This function is called by:
 36559 ;;		_fatfs_list_directory_next
 36560 ;;		__open_directory
 36561 ;; This function uses a non-reentrant model
 36562 ;;
 36563                           
 36564                           	psect	text113
 36565  003F4C                     __ptext113:
 36566                           	opt stack 0
 36567  003F4C                     _fatfs_entry_is_dir:
 36568                           	opt stack 27
 36569                           
 36570                           ;fat_misc.c: 174: if (entry->Attr & 0x10)
 36571                           
 36572                           ;incstack = 0
 36573  003F4C  EE20 F00B          	lfsr	2,11
 36574  003F50  5001               	movf	fatfs_entry_is_dir@entry,w,c
 36575  003F52  26D9               	addwf	fsr2l,f,c
 36576  003F54  5002               	movf	fatfs_entry_is_dir@entry+1,w,c
 36577  003F56  22DA               	addwfc	fsr2h,f,c
 36578  003F58  50DF               	movf	indf2,w,c
 36579  003F5A  6E03               	movwf	??_fatfs_entry_is_dir& (0+255),c
 36580  003F5C  A803               	btfss	??_fatfs_entry_is_dir,4,c
 36581  003F5E  D004               	goto	l9756
 36582                           
 36583                           ;fat_misc.c: 175: return 1;
 36584  003F60  0E00               	movlw	0
 36585  003F62  6E02               	movwf	?_fatfs_entry_is_dir+1,c
 36586  003F64  0E01               	movlw	1
 36587  003F66  D002               	goto	L133
 36588  003F68                     l9756:
 36589                           
 36590                           ;fat_misc.c: 176: else
 36591                           ;fat_misc.c: 177: return 0;
 36592  003F68  0E00               	movlw	0
 36593  003F6A  6E02               	movwf	?_fatfs_entry_is_dir+1,c
 36594  003F6C                     L133:
 36595  003F6C  6E01               	movwf	?_fatfs_entry_is_dir,c
 36596  003F6E  0012               	return	
 36597  003F70                     __end_of_fatfs_entry_is_dir:
 36598                           	opt stack 0
 36599                           tosu	equ	0xFFF
 36600                           tosh	equ	0xFFE
 36601                           tosl	equ	0xFFD
 36602                           pclath	equ	0xFFA
 36603                           tblptru	equ	0xFF8
 36604                           tblptrh	equ	0xFF7
 36605                           tblptrl	equ	0xFF6
 36606                           tablat	equ	0xFF5
 36607                           prodh	equ	0xFF4
 36608                           prodl	equ	0xFF3
 36609                           indf0	equ	0xFEF
 36610                           postinc0	equ	0xFEE
 36611                           fsr0h	equ	0xFEA
 36612                           fsr0l	equ	0xFE9
 36613                           wreg	equ	0xFE8
 36614                           indf1	equ	0xFE7
 36615                           postinc1	equ	0xFE6
 36616                           postdec1	equ	0xFE5
 36617                           fsr1h	equ	0xFE2
 36618                           fsr1l	equ	0xFE1
 36619                           indf2	equ	0xFDF
 36620                           postinc2	equ	0xFDE
 36621                           postdec2	equ	0xFDD
 36622                           fsr2h	equ	0xFDA
 36623                           fsr2l	equ	0xFD9
 36624                           status	equ	0xFD8
 36625                           
 36626 ;; *************** function __free_file *****************
 36627 ;; Defined at:
 36628 ;;		line 111 in file "fat_filelib.c"
 36629 ;; Parameters:    Size  Location     Type
 36630 ;;  file            2   14[COMRAM] PTR struct sFL_FILE
 36631 ;;		 -> RAM(3967), NULL(0), 
 36632 ;; Auto vars:     Size  Location     Type
 36633 ;;		None
 36634 ;; Return value:  Size  Location     Type
 36635 ;;		None               void
 36636 ;; Registers used:
 36637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36638 ;; Tracked objects:
 36639 ;;		On entry : 0/0
 36640 ;;		On exit  : 0/0
 36641 ;;		Unchanged: 0/0
 36642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36646 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36647 ;;Total ram usage:        2 bytes
 36648 ;; Hardware stack levels used:    1
 36649 ;; Hardware stack levels required when called:    3
 36650 ;; This function calls:
 36651 ;;		fat_list@fat_list_insert_last
 36652 ;;		fat_list@fat_list_remove
 36653 ;; This function is called by:
 36654 ;;		__create_directory
 36655 ;;		__open_file
 36656 ;;		__create_file
 36657 ;;		_fl_fclose
 36658 ;; This function uses a non-reentrant model
 36659 ;;
 36660                           
 36661                           	psect	text114
 36662  00411E                     __ptext114:
 36663                           	opt stack 0
 36664  00411E                     __free_file:
 36665                           	opt stack 23
 36666                           
 36667                           ;fat_filelib.c: 114: fat_list_remove(&_open_file_list, &file->list_node);
 36668                           
 36669                           ;incstack = 0
 36670  00411E  0E01               	movlw	high __open_file_list
 36671  004120  6E02               	movwf	fat_list@fat_list_remove@list+1,c
 36672  004122  0101               	movlb	1	; () banked
 36673  004124  0EDA               	movlw	low __open_file_list
 36674  004126  6E01               	movwf	fat_list@fat_list_remove@list,c
 36675  004128  0E40               	movlw	64
 36676  00412A  240F               	addwf	__free_file@file,w,c
 36677  00412C  6E03               	movwf	fat_list@fat_list_remove@node,c
 36678  00412E  0E02               	movlw	2
 36679  004130  2010               	addwfc	__free_file@file+1,w,c
 36680  004132  6E04               	movwf	fat_list@fat_list_remove@node+1,c
 36681  004134  EC46  F02B         	call	fat_list@fat_list_remove	;wreg free
 36682                           
 36683                           ;fat_filelib.c: 117: fat_list_insert_last(&_free_file_list, &file->list_node);
 36684  004138  0E01               	movlw	high __free_file_list
 36685  00413A  6E0C               	movwf	fat_list@fat_list_insert_last@list+1,c
 36686  00413C  0101               	movlb	1	; () banked
 36687  00413E  0ED6               	movlw	low __free_file_list
 36688  004140  6E0B               	movwf	fat_list@fat_list_insert_last@list,c
 36689  004142  0E40               	movlw	64
 36690  004144  240F               	addwf	__free_file@file,w,c
 36691  004146  6E0D               	movwf	fat_list@fat_list_insert_last@node,c
 36692  004148  0E02               	movlw	2
 36693  00414A  2010               	addwfc	__free_file@file+1,w,c
 36694  00414C  6E0E               	movwf	fat_list@fat_list_insert_last@node+1,c
 36695  00414E  EF1F  F022         	goto	fat_list@fat_list_insert_last	;wreg free
 36696  004152                     __end_of__free_file:
 36697                           	opt stack 0
 36698                           tosu	equ	0xFFF
 36699                           tosh	equ	0xFFE
 36700                           tosl	equ	0xFFD
 36701                           pclath	equ	0xFFA
 36702                           tblptru	equ	0xFF8
 36703                           tblptrh	equ	0xFF7
 36704                           tblptrl	equ	0xFF6
 36705                           tablat	equ	0xFF5
 36706                           prodh	equ	0xFF4
 36707                           prodl	equ	0xFF3
 36708                           indf0	equ	0xFEF
 36709                           postinc0	equ	0xFEE
 36710                           fsr0h	equ	0xFEA
 36711                           fsr0l	equ	0xFE9
 36712                           wreg	equ	0xFE8
 36713                           indf1	equ	0xFE7
 36714                           postinc1	equ	0xFE6
 36715                           postdec1	equ	0xFE5
 36716                           fsr1h	equ	0xFE2
 36717                           fsr1l	equ	0xFE1
 36718                           indf2	equ	0xFDF
 36719                           postinc2	equ	0xFDE
 36720                           postdec2	equ	0xFDD
 36721                           fsr2h	equ	0xFDA
 36722                           fsr2l	equ	0xFD9
 36723                           status	equ	0xFD8
 36724                           
 36725 ;; *************** function __check_file_open *****************
 36726 ;; Defined at:
 36727 ;;		line 88 in file "fat_filelib.c"
 36728 ;; Parameters:    Size  Location     Type
 36729 ;;  file            2   36[COMRAM] PTR struct sFL_FILE
 36730 ;;		 -> RAM(3967), NULL(0), 
 36731 ;; Auto vars:     Size  Location     Type
 36732 ;;  openFile        2   38[COMRAM] PTR struct sFL_FILE
 36733 ;;		 -> RAM(3967), NULL(0), 
 36734 ;;  node            2   40[COMRAM] PTR struct fat_node
 36735 ;;		 -> fatfs_add_file_entry@shortEntry(32), _files(1160), _open_file@sfEntry(32), _fs(1095), 
 36736 ;;		 -> RAM(3967), NULL(0), 
 36737 ;; Return value:  Size  Location     Type
 36738 ;;                  2   36[COMRAM] int 
 36739 ;; Registers used:
 36740 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36741 ;; Tracked objects:
 36742 ;;		On entry : 0/0
 36743 ;;		On exit  : 0/0
 36744 ;;		Unchanged: 0/0
 36745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36747 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36749 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36750 ;;Total ram usage:        6 bytes
 36751 ;; Hardware stack levels used:    1
 36752 ;; Hardware stack levels required when called:    2
 36753 ;; This function calls:
 36754 ;;		_fatfs_compare_names
 36755 ;; This function is called by:
 36756 ;;		__create_directory
 36757 ;;		__open_file
 36758 ;;		__create_file
 36759 ;; This function uses a non-reentrant model
 36760 ;;
 36761                           
 36762                           	psect	text115
 36763  00554E                     __ptext115:
 36764                           	opt stack 0
 36765  00554E                     __check_file_open:
 36766                           	opt stack 24
 36767                           
 36768                           ;fat_filelib.c: 90: struct fat_node *node;
 36769                           ;fat_filelib.c: 93: for ((node) = (&_open_file_list)->head; (node); (node) = (node)->nex
      +                          t)
 36770                           
 36771                           ;incstack = 0
 36772  00554E  C1DB  F02A         	movff	__open_file_list+1,__check_file_open@node+1
 36773  005552  0101               	movlb	1	; () banked
 36774  005554  C1DA  F029         	movff	__open_file_list,__check_file_open@node
 36775  005558  D042               	goto	l10550
 36776  00555A                     l10534:
 36777                           
 36778                           ;fat_filelib.c: 94: {
 36779                           ;fat_filelib.c: 95: FL_FILE* openFile = node ? ((FL_FILE *)((char *)(node)-(char*)(&((FL
      +                          _FILE *)0)->list_node))) : 0;
 36780  00555A  502A               	movf	__check_file_open@node+1,w,c
 36781  00555C  1029               	iorwf	__check_file_open@node,w,c
 36782  00555E  E103               	bnz	l10538
 36783  005560  6A28               	clrf	__check_file_open@openFile+1,c
 36784  005562  6A27               	clrf	__check_file_open@openFile,c
 36785  005564  D006               	goto	l431
 36786  005566                     l10538:
 36787  005566  0EC0               	movlw	192
 36788  005568  2429               	addwf	__check_file_open@node,w,c
 36789  00556A  6E27               	movwf	__check_file_open@openFile,c
 36790  00556C  0EFD               	movlw	253
 36791  00556E  202A               	addwfc	__check_file_open@node+1,w,c
 36792  005570  6E28               	movwf	__check_file_open@openFile+1,c
 36793  005572                     l431:
 36794                           
 36795                           ;fat_filelib.c: 98: if (openFile != file)
 36796  005572  5026               	movf	__check_file_open@file+1,w,c
 36797  005574  1828               	xorwf	__check_file_open@openFile+1,w,c
 36798  005576  E102               	bnz	u11905
 36799  005578  5025               	movf	__check_file_open@file,w,c
 36800  00557A  1827               	xorwf	__check_file_open@openFile,w,c
 36801  00557C                     u11905:
 36802  00557C  E026               	bz	l10548
 36803                           
 36804                           ;fat_filelib.c: 99: {
 36805                           ;fat_filelib.c: 101: if ( (fatfs_compare_names(openFile->path,file->path)) && (fatfs_com
      +                          pare_names(openFile->filename,file->filename)) )
 36806  00557E  0E12               	movlw	18
 36807  005580  2427               	addwf	__check_file_open@openFile,w,c
 36808  005582  6E13               	movwf	fatfs_compare_names@strA,c
 36809  005584  0E00               	movlw	0
 36810  005586  2028               	addwfc	__check_file_open@openFile+1,w,c
 36811  005588  6E14               	movwf	fatfs_compare_names@strA+1,c
 36812  00558A  0E12               	movlw	18
 36813  00558C  2425               	addwf	__check_file_open@file,w,c
 36814  00558E  6E15               	movwf	fatfs_compare_names@strB,c
 36815  005590  0E00               	movlw	0
 36816  005592  2026               	addwfc	__check_file_open@file+1,w,c
 36817  005594  6E16               	movwf	fatfs_compare_names@strB+1,c
 36818  005596  EC6C  F037         	call	_fatfs_compare_names	;wreg free
 36819  00559A  5014               	movf	?_fatfs_compare_names+1,w,c
 36820  00559C  1013               	iorwf	?_fatfs_compare_names,w,c
 36821  00559E  E015               	bz	l10548
 36822  0055A0  0E1C               	movlw	28
 36823  0055A2  2427               	addwf	__check_file_open@openFile,w,c
 36824  0055A4  6E13               	movwf	fatfs_compare_names@strA,c
 36825  0055A6  0E00               	movlw	0
 36826  0055A8  2028               	addwfc	__check_file_open@openFile+1,w,c
 36827  0055AA  6E14               	movwf	fatfs_compare_names@strA+1,c
 36828  0055AC  0E1C               	movlw	28
 36829  0055AE  2425               	addwf	__check_file_open@file,w,c
 36830  0055B0  6E15               	movwf	fatfs_compare_names@strB,c
 36831  0055B2  0E00               	movlw	0
 36832  0055B4  2026               	addwfc	__check_file_open@file+1,w,c
 36833  0055B6  6E16               	movwf	fatfs_compare_names@strB+1,c
 36834  0055B8  EC6C  F037         	call	_fatfs_compare_names	;wreg free
 36835  0055BC  5014               	movf	?_fatfs_compare_names+1,w,c
 36836  0055BE  1013               	iorwf	?_fatfs_compare_names,w,c
 36837  0055C0  E004               	bz	l10548
 36838                           
 36839                           ;fat_filelib.c: 102: return 1;
 36840  0055C2  0E00               	movlw	0
 36841  0055C4  6E26               	movwf	?__check_file_open+1,c
 36842  0055C6  0E01               	movlw	1
 36843  0055C8  D00F               	goto	L134
 36844  0055CA                     l10548:
 36845  0055CA  EE20 F002          	lfsr	2,2
 36846  0055CE  5029               	movf	__check_file_open@node,w,c
 36847  0055D0  26D9               	addwf	fsr2l,f,c
 36848  0055D2  502A               	movf	__check_file_open@node+1,w,c
 36849  0055D4  22DA               	addwfc	fsr2h,f,c
 36850  0055D6  CFDE F029          	movff	postinc2,__check_file_open@node
 36851  0055DA  CFDD F02A          	movff	postdec2,__check_file_open@node+1
 36852  0055DE                     l10550:
 36853  0055DE  502A               	movf	__check_file_open@node+1,w,c
 36854  0055E0  1029               	iorwf	__check_file_open@node,w,c
 36855  0055E2  E1BB               	bnz	l10534
 36856                           
 36857                           ;fat_filelib.c: 103: }
 36858                           ;fat_filelib.c: 104: }
 36859                           ;fat_filelib.c: 106: return 0;
 36860  0055E4  0E00               	movlw	0
 36861  0055E6  6E26               	movwf	?__check_file_open+1,c
 36862  0055E8                     L134:
 36863  0055E8  6E25               	movwf	?__check_file_open,c
 36864  0055EA  0012               	return	
 36865  0055EC                     __end_of__check_file_open:
 36866                           	opt stack 0
 36867                           tosu	equ	0xFFF
 36868                           tosh	equ	0xFFE
 36869                           tosl	equ	0xFFD
 36870                           pclath	equ	0xFFA
 36871                           tblptru	equ	0xFF8
 36872                           tblptrh	equ	0xFF7
 36873                           tblptrl	equ	0xFF6
 36874                           tablat	equ	0xFF5
 36875                           prodh	equ	0xFF4
 36876                           prodl	equ	0xFF3
 36877                           indf0	equ	0xFEF
 36878                           postinc0	equ	0xFEE
 36879                           fsr0h	equ	0xFEA
 36880                           fsr0l	equ	0xFE9
 36881                           wreg	equ	0xFE8
 36882                           indf1	equ	0xFE7
 36883                           postinc1	equ	0xFE6
 36884                           postdec1	equ	0xFE5
 36885                           fsr1h	equ	0xFE2
 36886                           fsr1l	equ	0xFE1
 36887                           indf2	equ	0xFDF
 36888                           postinc2	equ	0xFDE
 36889                           postdec2	equ	0xFDD
 36890                           fsr2h	equ	0xFDA
 36891                           fsr2l	equ	0xFD9
 36892                           status	equ	0xFD8
 36893                           
 36894 ;; *************** function _fatfs_compare_names *****************
 36895 ;; Defined at:
 36896 ;;		line 260 in file "fat_string.c"
 36897 ;; Parameters:    Size  Location     Type
 36898 ;;  strA            2   18[COMRAM] PTR unsigned char 
 36899 ;;		 -> lfn.String(50), lfn.String(50), RAM(3967), fatfs_list_directory_next@lfn(52), 
 36900 ;;		 -> fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0), 
 36901 ;;  strB            2   20[COMRAM] PTR unsigned char 
 36902 ;;		 -> _open_directory@currentfolder(10), RAM(3967), NULL(0), 
 36903 ;; Auto vars:     Size  Location     Type
 36904 ;;  ext1Pos         2   34[COMRAM] int 
 36905 ;;  ext2Pos         2   32[COMRAM] int 
 36906 ;;  file1Len        2   30[COMRAM] int 
 36907 ;;  ext1            2   28[COMRAM] PTR unsigned char 
 36908 ;;		 -> lfn.String(50), lfn.String(50), RAM(3967), fatfs_list_directory_next@lfn(52), 
 36909 ;;		 -> fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0), 
 36910 ;;  file2Len        2   26[COMRAM] int 
 36911 ;;  ext2            2   24[COMRAM] PTR unsigned char 
 36912 ;;		 -> _open_directory@currentfolder(10), RAM(3967), NULL(0), 
 36913 ;; Return value:  Size  Location     Type
 36914 ;;                  2   18[COMRAM] int 
 36915 ;; Registers used:
 36916 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36917 ;; Tracked objects:
 36918 ;;		On entry : 0/0
 36919 ;;		On exit  : 0/0
 36920 ;;		Unchanged: 0/0
 36921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36923 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36925 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36926 ;;Total ram usage:       18 bytes
 36927 ;; Hardware stack levels used:    1
 36928 ;; Hardware stack levels required when called:    1
 36929 ;; This function calls:
 36930 ;;		_FileString_GetExtension
 36931 ;;		_FileString_StrCmpNoCase
 36932 ;;		_FileString_TrimLength
 36933 ;;		_strlen
 36934 ;; This function is called by:
 36935 ;;		_fatfs_get_file_entry
 36936 ;;		__check_file_open
 36937 ;; This function uses a non-reentrant model
 36938 ;;
 36939                           
 36940                           	psect	text116
 36941  006ED8                     __ptext116:
 36942                           	opt stack 0
 36943  006ED8                     _fatfs_compare_names:
 36944                           	opt stack 25
 36945                           
 36946                           ;fat_string.c: 262: char *ext1 = (0);
 36947                           
 36948                           ;incstack = 0
 36949  006ED8  0E00               	movlw	0
 36950  006EDA  6A1E               	clrf	fatfs_compare_names@ext1+1,c
 36951  006EDC  6A1D               	clrf	fatfs_compare_names@ext1,c
 36952                           
 36953                           ;fat_string.c: 263: char *ext2 = (0);
 36954  006EDE  6A1A               	clrf	fatfs_compare_names@ext2+1,c
 36955  006EE0  6A19               	clrf	fatfs_compare_names@ext2,c
 36956                           
 36957                           ;fat_string.c: 264: int ext1Pos, ext2Pos;
 36958                           ;fat_string.c: 265: int file1Len, file2Len;
 36959                           ;fat_string.c: 268: ext1Pos = FileString_GetExtension(strA);
 36960  006EE2  C014  F002         	movff	fatfs_compare_names@strA+1,FileString_GetExtension@str+1
 36961  006EE6  C013  F001         	movff	fatfs_compare_names@strA,FileString_GetExtension@str
 36962  006EEA  EC48  F022         	call	_FileString_GetExtension	;wreg free
 36963  006EEE  C001  F023         	movff	?_FileString_GetExtension,fatfs_compare_names@ext1Pos
 36964  006EF2  C002  F024         	movff	?_FileString_GetExtension+1,fatfs_compare_names@ext1Pos+1
 36965                           
 36966                           ;fat_string.c: 269: ext2Pos = FileString_GetExtension(strB);
 36967  006EF6  C016  F002         	movff	fatfs_compare_names@strB+1,FileString_GetExtension@str+1
 36968  006EFA  C015  F001         	movff	fatfs_compare_names@strB,FileString_GetExtension@str
 36969  006EFE  EC48  F022         	call	_FileString_GetExtension	;wreg free
 36970  006F02  C001  F021         	movff	?_FileString_GetExtension,fatfs_compare_names@ext2Pos
 36971  006F06  C002  F022         	movff	?_FileString_GetExtension+1,fatfs_compare_names@ext2Pos+1
 36972                           
 36973                           ;fat_string.c: 274: if ((ext1Pos==-1) && (ext2Pos!=-1))
 36974  006F0A  2823               	incf	fatfs_compare_names@ext1Pos,w,c
 36975  006F0C  B4D8               	btfsc	status,2,c
 36976  006F0E  2824               	incf	fatfs_compare_names@ext1Pos+1,w,c
 36977  006F10  E105               	bnz	l9332
 36978  006F12  2821               	incf	fatfs_compare_names@ext2Pos,w,c
 36979  006F14  B4D8               	btfsc	status,2,c
 36980  006F16  2822               	incf	fatfs_compare_names@ext2Pos+1,w,c
 36981  006F18  E001 D0A4          	bnz	u10160
 36982  006F1C                     l9332:
 36983                           
 36984                           ;fat_string.c: 276: if ((ext2Pos==-1) && (ext1Pos!=-1))
 36985  006F1C  2821               	incf	fatfs_compare_names@ext2Pos,w,c
 36986  006F1E  B4D8               	btfsc	status,2,c
 36987  006F20  2822               	incf	fatfs_compare_names@ext2Pos+1,w,c
 36988  006F22  E105               	bnz	l9340
 36989  006F24  2823               	incf	fatfs_compare_names@ext1Pos,w,c
 36990  006F26  B4D8               	btfsc	status,2,c
 36991  006F28  2824               	incf	fatfs_compare_names@ext1Pos+1,w,c
 36992  006F2A  E001 D09B          	bnz	u10160
 36993  006F2E                     l9340:
 36994                           
 36995                           ;fat_string.c: 280: if (ext1Pos!=-1)
 36996  006F2E  2823               	incf	fatfs_compare_names@ext1Pos,w,c
 36997  006F30  B4D8               	btfsc	status,2,c
 36998  006F32  2824               	incf	fatfs_compare_names@ext1Pos+1,w,c
 36999  006F34  E050               	bz	l9356
 37000                           
 37001                           ;fat_string.c: 281: {
 37002                           ;fat_string.c: 283: ext1 = strA+ext1Pos+1;
 37003  006F36  C013  F017         	movff	fatfs_compare_names@strA,??_fatfs_compare_names
 37004  006F3A  C014  F018         	movff	fatfs_compare_names@strA+1,??_fatfs_compare_names+1
 37005  006F3E  5023               	movf	fatfs_compare_names@ext1Pos,w,c
 37006  006F40  2617               	addwf	??_fatfs_compare_names,f,c
 37007  006F42  5024               	movf	fatfs_compare_names@ext1Pos+1,w,c
 37008  006F44  2218               	addwfc	??_fatfs_compare_names+1,f,c
 37009  006F46  2817               	incf	??_fatfs_compare_names,w,c
 37010  006F48  6E1D               	movwf	fatfs_compare_names@ext1,c
 37011  006F4A  0E00               	movlw	0
 37012  006F4C  2018               	addwfc	??_fatfs_compare_names+1,w,c
 37013  006F4E  6E1E               	movwf	fatfs_compare_names@ext1+1,c
 37014                           
 37015                           ;fat_string.c: 284: ext2 = strB+ext2Pos+1;
 37016  006F50  C015  F017         	movff	fatfs_compare_names@strB,??_fatfs_compare_names
 37017  006F54  C016  F018         	movff	fatfs_compare_names@strB+1,??_fatfs_compare_names+1
 37018  006F58  5021               	movf	fatfs_compare_names@ext2Pos,w,c
 37019  006F5A  2617               	addwf	??_fatfs_compare_names,f,c
 37020  006F5C  5022               	movf	fatfs_compare_names@ext2Pos+1,w,c
 37021  006F5E  2218               	addwfc	??_fatfs_compare_names+1,f,c
 37022  006F60  2817               	incf	??_fatfs_compare_names,w,c
 37023  006F62  6E19               	movwf	fatfs_compare_names@ext2,c
 37024  006F64  0E00               	movlw	0
 37025  006F66  2018               	addwfc	??_fatfs_compare_names+1,w,c
 37026  006F68  6E1A               	movwf	fatfs_compare_names@ext2+1,c
 37027                           
 37028                           ;fat_string.c: 287: if (strlen(ext1) != strlen(ext2))
 37029  006F6A  C01E  F002         	movff	fatfs_compare_names@ext1+1,strlen@s+1
 37030  006F6E  C01D  F001         	movff	fatfs_compare_names@ext1,strlen@s
 37031  006F72  EC71  F022         	call	_strlen	;wreg free
 37032  006F76  C001  F017         	movff	?_strlen,??_fatfs_compare_names
 37033  006F7A  C002  F018         	movff	?_strlen+1,??_fatfs_compare_names+1
 37034  006F7E  C01A  F002         	movff	fatfs_compare_names@ext2+1,strlen@s+1
 37035  006F82  C019  F001         	movff	fatfs_compare_names@ext2,strlen@s
 37036  006F86  EC71  F022         	call	_strlen	;wreg free
 37037  006F8A  5002               	movf	?_strlen+1,w,c
 37038  006F8C  1818               	xorwf	??_fatfs_compare_names+1,w,c
 37039  006F8E  E102               	bnz	u10135
 37040  006F90  5001               	movf	?_strlen,w,c
 37041  006F92  1817               	xorwf	??_fatfs_compare_names,w,c
 37042  006F94                     u10135:
 37043  006F94  E167               	bnz	u10160
 37044                           
 37045                           ;fat_string.c: 291: if (FileString_StrCmpNoCase(ext1, ext2, (int)strlen(ext1))!=0)
 37046                           
 37047                           ;fat_string.c: 288: return 0;
 37048  006F96  C01E  F008         	movff	fatfs_compare_names@ext1+1,FileString_StrCmpNoCase@s1+1
 37049  006F9A  C01D  F007         	movff	fatfs_compare_names@ext1,FileString_StrCmpNoCase@s1
 37050  006F9E  C01A  F00A         	movff	fatfs_compare_names@ext2+1,FileString_StrCmpNoCase@s2+1
 37051  006FA2  C019  F009         	movff	fatfs_compare_names@ext2,FileString_StrCmpNoCase@s2
 37052  006FA6  C01E  F002         	movff	fatfs_compare_names@ext1+1,strlen@s+1
 37053  006FAA  C01D  F001         	movff	fatfs_compare_names@ext1,strlen@s
 37054  006FAE  EC71  F022         	call	_strlen	;wreg free
 37055  006FB2  C001  F00B         	movff	?_strlen,FileString_StrCmpNoCase@n
 37056  006FB6  C002  F00C         	movff	?_strlen+1,FileString_StrCmpNoCase@n+1
 37057  006FBA  EC5A  F02A         	call	_FileString_StrCmpNoCase	;wreg free
 37058  006FBE  5008               	movf	?_FileString_StrCmpNoCase+1,w,c
 37059  006FC0  1007               	iorwf	?_FileString_StrCmpNoCase,w,c
 37060  006FC2  E150               	bnz	u10160
 37061                           
 37062                           ;fat_string.c: 295: file1Len = ext1Pos;
 37063                           
 37064                           ;fat_string.c: 292: return 0;
 37065  006FC4  C023  F01F         	movff	fatfs_compare_names@ext1Pos,fatfs_compare_names@file1Len
 37066  006FC8  C024  F020         	movff	fatfs_compare_names@ext1Pos+1,fatfs_compare_names@file1Len+1
 37067                           
 37068                           ;fat_string.c: 296: file2Len = ext2Pos;
 37069  006FCC  C021  F01B         	movff	fatfs_compare_names@ext2Pos,fatfs_compare_names@file2Len
 37070  006FD0  C022  F01C         	movff	fatfs_compare_names@ext2Pos+1,fatfs_compare_names@file2Len+1
 37071                           
 37072                           ;fat_string.c: 297: }
 37073  006FD4  D014               	goto	l9358
 37074  006FD6                     l9356:
 37075                           
 37076                           ;fat_string.c: 299: else
 37077                           ;fat_string.c: 300: {
 37078                           ;fat_string.c: 302: file1Len = (int)strlen(strA);
 37079  006FD6  C014  F002         	movff	fatfs_compare_names@strA+1,strlen@s+1
 37080  006FDA  C013  F001         	movff	fatfs_compare_names@strA,strlen@s
 37081  006FDE  EC71  F022         	call	_strlen	;wreg free
 37082  006FE2  C001  F01F         	movff	?_strlen,fatfs_compare_names@file1Len
 37083  006FE6  C002  F020         	movff	?_strlen+1,fatfs_compare_names@file1Len+1
 37084                           
 37085                           ;fat_string.c: 303: file2Len = (int)strlen(strB);
 37086  006FEA  C016  F002         	movff	fatfs_compare_names@strB+1,strlen@s+1
 37087  006FEE  C015  F001         	movff	fatfs_compare_names@strB,strlen@s
 37088  006FF2  EC71  F022         	call	_strlen	;wreg free
 37089  006FF6  C001  F01B         	movff	?_strlen,fatfs_compare_names@file2Len
 37090  006FFA  C002  F01C         	movff	?_strlen+1,fatfs_compare_names@file2Len+1
 37091  006FFE                     l9358:
 37092                           
 37093                           ;fat_string.c: 304: }
 37094                           ;fat_string.c: 307: file1Len = FileString_TrimLength(strA, file1Len);
 37095  006FFE  C014  F002         	movff	fatfs_compare_names@strA+1,FileString_TrimLength@str+1
 37096  007002  C013  F001         	movff	fatfs_compare_names@strA,FileString_TrimLength@str
 37097  007006  C01F  F003         	movff	fatfs_compare_names@file1Len,FileString_TrimLength@strLen
 37098  00700A  C020  F004         	movff	fatfs_compare_names@file1Len+1,FileString_TrimLength@strLen+1
 37099  00700E  EC61  F025         	call	_FileString_TrimLength	;wreg free
 37100  007012  C001  F01F         	movff	?_FileString_TrimLength,fatfs_compare_names@file1Len
 37101  007016  C002  F020         	movff	?_FileString_TrimLength+1,fatfs_compare_names@file1Len+1
 37102                           
 37103                           ;fat_string.c: 308: file2Len = FileString_TrimLength(strB, file2Len);
 37104  00701A  C016  F002         	movff	fatfs_compare_names@strB+1,FileString_TrimLength@str+1
 37105  00701E  C015  F001         	movff	fatfs_compare_names@strB,FileString_TrimLength@str
 37106  007022  C01B  F003         	movff	fatfs_compare_names@file2Len,FileString_TrimLength@strLen
 37107  007026  C01C  F004         	movff	fatfs_compare_names@file2Len+1,FileString_TrimLength@strLen+1
 37108  00702A  EC61  F025         	call	_FileString_TrimLength	;wreg free
 37109  00702E  C001  F01B         	movff	?_FileString_TrimLength,fatfs_compare_names@file2Len
 37110  007032  C002  F01C         	movff	?_FileString_TrimLength+1,fatfs_compare_names@file2Len+1
 37111                           
 37112                           ;fat_string.c: 311: if (file1Len!=file2Len)
 37113  007036  501C               	movf	fatfs_compare_names@file2Len+1,w,c
 37114  007038  1820               	xorwf	fatfs_compare_names@file1Len+1,w,c
 37115  00703A  E102               	bnz	u10155
 37116  00703C  501B               	movf	fatfs_compare_names@file2Len,w,c
 37117  00703E  181F               	xorwf	fatfs_compare_names@file1Len,w,c
 37118  007040                     u10155:
 37119  007040  E111               	bnz	u10160
 37120                           
 37121                           ;fat_string.c: 315: if (FileString_StrCmpNoCase(strA, strB, file1Len)!=0)
 37122                           
 37123                           ;fat_string.c: 312: return 0;
 37124  007042  C014  F008         	movff	fatfs_compare_names@strA+1,FileString_StrCmpNoCase@s1+1
 37125  007046  C013  F007         	movff	fatfs_compare_names@strA,FileString_StrCmpNoCase@s1
 37126  00704A  C016  F00A         	movff	fatfs_compare_names@strB+1,FileString_StrCmpNoCase@s2+1
 37127  00704E  C015  F009         	movff	fatfs_compare_names@strB,FileString_StrCmpNoCase@s2
 37128  007052  C01F  F00B         	movff	fatfs_compare_names@file1Len,FileString_StrCmpNoCase@n
 37129  007056  C020  F00C         	movff	fatfs_compare_names@file1Len+1,FileString_StrCmpNoCase@n+1
 37130  00705A  EC5A  F02A         	call	_FileString_StrCmpNoCase	;wreg free
 37131  00705E  5008               	movf	?_FileString_StrCmpNoCase+1,w,c
 37132  007060  1007               	iorwf	?_FileString_StrCmpNoCase,w,c
 37133  007062  E003               	bz	l9376
 37134  007064                     u10160:
 37135                           
 37136                           ;fat_string.c: 316: return 0;
 37137  007064  0E00               	movlw	0
 37138  007066  6E14               	movwf	?_fatfs_compare_names+1,c
 37139  007068  D003               	goto	L135
 37140  00706A                     l9376:
 37141                           
 37142                           ;fat_string.c: 317: else
 37143                           ;fat_string.c: 318: return 1;
 37144  00706A  0E00               	movlw	0
 37145  00706C  6E14               	movwf	?_fatfs_compare_names+1,c
 37146  00706E  0E01               	movlw	1
 37147  007070                     L135:
 37148  007070  6E13               	movwf	?_fatfs_compare_names,c
 37149  007072  0012               	return	
 37150  007074                     __end_of_fatfs_compare_names:
 37151                           	opt stack 0
 37152                           tosu	equ	0xFFF
 37153                           tosh	equ	0xFFE
 37154                           tosl	equ	0xFFD
 37155                           pclath	equ	0xFFA
 37156                           tblptru	equ	0xFF8
 37157                           tblptrh	equ	0xFF7
 37158                           tblptrl	equ	0xFF6
 37159                           tablat	equ	0xFF5
 37160                           prodh	equ	0xFF4
 37161                           prodl	equ	0xFF3
 37162                           indf0	equ	0xFEF
 37163                           postinc0	equ	0xFEE
 37164                           fsr0h	equ	0xFEA
 37165                           fsr0l	equ	0xFE9
 37166                           wreg	equ	0xFE8
 37167                           indf1	equ	0xFE7
 37168                           postinc1	equ	0xFE6
 37169                           postdec1	equ	0xFE5
 37170                           fsr1h	equ	0xFE2
 37171                           fsr1l	equ	0xFE1
 37172                           indf2	equ	0xFDF
 37173                           postinc2	equ	0xFDE
 37174                           postdec2	equ	0xFDD
 37175                           fsr2h	equ	0xFDA
 37176                           fsr2l	equ	0xFD9
 37177                           status	equ	0xFD8
 37178                           
 37179 ;; *************** function _strlen *****************
 37180 ;; Defined at:
 37181 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strlen.c"
 37182 ;; Parameters:    Size  Location     Type
 37183 ;;  s               2    0[COMRAM] PTR const unsigned char 
 37184 ;;		 -> lfn.String(50), lfn.String(50), STR_67(2), STR_64(2), 
 37185 ;;		 -> STR_60(6), STR_43(2), STR_36(2), STR_29(2), 
 37186 ;;		 -> s(17), STR_23(2), STR_21(2), STR_18(2), 
 37187 ;;		 -> m(30), fatfs_lfn_generate_tail@tail_str(12), STR_10(2), _open_directory@currentfolder(10), 
 37188 ;;		 -> RAM(3967), fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(
      +52), 
 37189 ;;		 -> NULL(0), 
 37190 ;; Auto vars:     Size  Location     Type
 37191 ;;  cp              2    4[COMRAM] PTR const unsigned char 
 37192 ;;		 -> lfn.String(50), lfn.String(50), STR_67(2), STR_64(2), 
 37193 ;;		 -> STR_60(6), STR_43(2), STR_36(2), STR_29(2), 
 37194 ;;		 -> s(17), STR_23(2), STR_21(2), STR_18(2), 
 37195 ;;		 -> m(30), fatfs_lfn_generate_tail@tail_str(12), STR_10(2), _open_directory@currentfolder(10), 
 37196 ;;		 -> RAM(3967), fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(
      +52), 
 37197 ;;		 -> NULL(0), 
 37198 ;; Return value:  Size  Location     Type
 37199 ;;                  2    0[COMRAM] unsigned int 
 37200 ;; Registers used:
 37201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 37202 ;; Tracked objects:
 37203 ;;		On entry : 0/0
 37204 ;;		On exit  : 0/0
 37205 ;;		Unchanged: 0/0
 37206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37208 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37209 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37210 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37211 ;;Total ram usage:        6 bytes
 37212 ;; Hardware stack levels used:    1
 37213 ;; This function calls:
 37214 ;;		Nothing
 37215 ;; This function is called by:
 37216 ;;		_fl_fopen
 37217 ;;		_fatfs_create_boot_sector
 37218 ;;		_fatfs_lfn_entries_required
 37219 ;;		_fatfs_filename_to_lfn
 37220 ;;		_fatfs_lfn_create_sfn
 37221 ;;		_fatfs_lfn_generate_tail
 37222 ;;		_fatfs_get_substring
 37223 ;;		_fatfs_split_path
 37224 ;;		_fatfs_compare_names
 37225 ;;		_fl_fputs
 37226 ;; This function uses a non-reentrant model
 37227 ;;
 37228                           
 37229                           	psect	text117
 37230  0044E2                     __ptext117:
 37231                           	opt stack 0
 37232  0044E2                     _strlen:
 37233                           	opt stack 26
 37234                           
 37235                           ;incstack = 0
 37236  0044E2  C002  F006         	movff	strlen@s+1,strlen@cp+1
 37237  0044E6  C001  F005         	movff	strlen@s,strlen@cp
 37238  0044EA  D002               	goto	l8918
 37239  0044EC                     l8916:
 37240  0044EC  4A05               	infsnz	strlen@cp,f,c
 37241  0044EE  2A06               	incf	strlen@cp+1,f,c
 37242  0044F0                     l8918:
 37243  0044F0  C005  FFF6         	movff	strlen@cp,tblptrl
 37244  0044F4  C006  FFF7         	movff	strlen@cp+1,tblptrh
 37245  0044F8  0E00               	movlw	low (__mediumconst shr (0+16))
 37246  0044FA  6EF8               	movwf	tblptru,c
 37247  0044FC  0E0F               	movlw	(high __ramtop+-1)
 37248  0044FE  64F7               	cpfsgt	tblptrh,c
 37249  004500  D003               	bra	u9387
 37250  004502  0008               	tblrd		*
 37251  004504  50F5               	movf	tablat,w,c
 37252  004506  D005               	bra	u9380
 37253  004508                     u9387:
 37254  004508  CFF6 FFE9          	movff	tblptrl,fsr0l
 37255  00450C  CFF7 FFEA          	movff	tblptrh,fsr0h
 37256  004510  50EF               	movf	indf0,w,c
 37257  004512                     u9380:
 37258  004512  0900               	iorlw	0
 37259  004514  E1EB               	bnz	l8916
 37260  004516  C001  F003         	movff	strlen@s,??_strlen
 37261  00451A  C002  F004         	movff	strlen@s+1,??_strlen+1
 37262  00451E  1E03               	comf	??_strlen,f,c
 37263  004520  1E04               	comf	??_strlen+1,f,c
 37264  004522  4A03               	infsnz	??_strlen,f,c
 37265  004524  2A04               	incf	??_strlen+1,f,c
 37266  004526  5005               	movf	strlen@cp,w,c
 37267  004528  2403               	addwf	??_strlen,w,c
 37268  00452A  6E01               	movwf	?_strlen,c
 37269  00452C  5006               	movf	strlen@cp+1,w,c
 37270  00452E  2004               	addwfc	??_strlen+1,w,c
 37271  004530  6E02               	movwf	?_strlen+1,c
 37272  004532  0012               	return	
 37273  004534                     __end_of_strlen:
 37274                           	opt stack 0
 37275                           tosu	equ	0xFFF
 37276                           tosh	equ	0xFFE
 37277                           tosl	equ	0xFFD
 37278                           pclath	equ	0xFFA
 37279                           tblptru	equ	0xFF8
 37280                           tblptrh	equ	0xFF7
 37281                           tblptrl	equ	0xFF6
 37282                           tablat	equ	0xFF5
 37283                           prodh	equ	0xFF4
 37284                           prodl	equ	0xFF3
 37285                           indf0	equ	0xFEF
 37286                           postinc0	equ	0xFEE
 37287                           fsr0h	equ	0xFEA
 37288                           fsr0l	equ	0xFE9
 37289                           wreg	equ	0xFE8
 37290                           indf1	equ	0xFE7
 37291                           postinc1	equ	0xFE6
 37292                           postdec1	equ	0xFE5
 37293                           fsr1h	equ	0xFE2
 37294                           fsr1l	equ	0xFE1
 37295                           indf2	equ	0xFDF
 37296                           postinc2	equ	0xFDE
 37297                           postdec2	equ	0xFDD
 37298                           fsr2h	equ	0xFDA
 37299                           fsr2l	equ	0xFD9
 37300                           status	equ	0xFD8
 37301                           
 37302 ;; *************** function _FileString_TrimLength *****************
 37303 ;; Defined at:
 37304 ;;		line 237 in file "fat_string.c"
 37305 ;; Parameters:    Size  Location     Type
 37306 ;;  str             2    0[COMRAM] PTR unsigned char 
 37307 ;;		 -> lfn.String(50), lfn.String(50), _open_directory@currentfolder(10), RAM(3967), 
 37308 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0
      +), 
 37309 ;;  strLen          2    2[COMRAM] int 
 37310 ;; Auto vars:     Size  Location     Type
 37311 ;;  strSrc          2    8[COMRAM] PTR unsigned char 
 37312 ;;		 -> lfn.String(50), lfn.String(50), _open_directory@currentfolder(10), RAM(3967), 
 37313 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0
      +), 
 37314 ;;  length          2    6[COMRAM] int 
 37315 ;; Return value:  Size  Location     Type
 37316 ;;                  2    0[COMRAM] int 
 37317 ;; Registers used:
 37318 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37319 ;; Tracked objects:
 37320 ;;		On entry : 0/0
 37321 ;;		On exit  : 0/0
 37322 ;;		Unchanged: 0/0
 37323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37324 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37325 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37327 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37328 ;;Total ram usage:       10 bytes
 37329 ;; Hardware stack levels used:    1
 37330 ;; This function calls:
 37331 ;;		Nothing
 37332 ;; This function is called by:
 37333 ;;		_fatfs_compare_names
 37334 ;; This function uses a non-reentrant model
 37335 ;;
 37336                           
 37337                           	psect	text118
 37338  004AC2                     __ptext118:
 37339                           	opt stack 0
 37340  004AC2                     _FileString_TrimLength:
 37341                           	opt stack 25
 37342                           
 37343                           ;fat_string.c: 239: int length = strLen;
 37344                           
 37345                           ;incstack = 0
 37346  004AC2  C003  F007         	movff	FileString_TrimLength@strLen,FileString_TrimLength@length
 37347  004AC6  C004  F008         	movff	FileString_TrimLength@strLen+1,FileString_TrimLength@length+1
 37348                           
 37349                           ;fat_string.c: 240: char *strSrc = str+strLen-1;
 37350  004ACA  C001  F005         	movff	FileString_TrimLength@str,??_FileString_TrimLength
 37351  004ACE  C002  F006         	movff	FileString_TrimLength@str+1,??_FileString_TrimLength+1
 37352  004AD2  5003               	movf	FileString_TrimLength@strLen,w,c
 37353  004AD4  2605               	addwf	??_FileString_TrimLength,f,c
 37354  004AD6  5004               	movf	FileString_TrimLength@strLen+1,w,c
 37355  004AD8  2206               	addwfc	??_FileString_TrimLength+1,f,c
 37356  004ADA  0EFF               	movlw	255
 37357  004ADC  2405               	addwf	??_FileString_TrimLength,w,c
 37358  004ADE  6E09               	movwf	FileString_TrimLength@strSrc,c
 37359  004AE0  0EFF               	movlw	255
 37360  004AE2  2006               	addwfc	??_FileString_TrimLength+1,w,c
 37361  004AE4  6E0A               	movwf	FileString_TrimLength@strSrc+1,c
 37362                           
 37363                           ;fat_string.c: 243: while (strLen != 0)
 37364  004AE6  D01B               	goto	l8976
 37365  004AE8                     l8970:
 37366                           
 37367                           ;fat_string.c: 244: {
 37368                           ;fat_string.c: 245: if (*strSrc == ' ')
 37369  004AE8  0E20               	movlw	32
 37370  004AEA  C009  FFD9         	movff	FileString_TrimLength@strSrc,fsr2l
 37371  004AEE  C00A  FFDA         	movff	FileString_TrimLength@strSrc+1,fsr2h
 37372  004AF2  62DF               	cpfseq	indf2,c
 37373  004AF4  D017               	goto	l1121
 37374                           
 37375                           ;fat_string.c: 246: length = (int)(strSrc - str);
 37376  004AF6  C001  F005         	movff	FileString_TrimLength@str,??_FileString_TrimLength
 37377  004AFA  C002  F006         	movff	FileString_TrimLength@str+1,??_FileString_TrimLength+1
 37378  004AFE  1E05               	comf	??_FileString_TrimLength,f,c
 37379  004B00  1E06               	comf	??_FileString_TrimLength+1,f,c
 37380  004B02  4A05               	infsnz	??_FileString_TrimLength,f,c
 37381  004B04  2A06               	incf	??_FileString_TrimLength+1,f,c
 37382  004B06  5009               	movf	FileString_TrimLength@strSrc,w,c
 37383  004B08  2405               	addwf	??_FileString_TrimLength,w,c
 37384  004B0A  6E07               	movwf	FileString_TrimLength@length,c
 37385  004B0C  500A               	movf	FileString_TrimLength@strSrc+1,w,c
 37386  004B0E  2006               	addwfc	??_FileString_TrimLength+1,w,c
 37387  004B10  6E08               	movwf	FileString_TrimLength@length+1,c
 37388                           
 37389                           ;fat_string.c: 250: strSrc--;
 37390                           
 37391                           ;fat_string.c: 247: else
 37392                           ;fat_string.c: 248: break;
 37393  004B12  0609               	decf	FileString_TrimLength@strSrc,f,c
 37394  004B14  A0D8               	btfss	status,0,c
 37395  004B16  060A               	decf	FileString_TrimLength@strSrc+1,f,c
 37396                           
 37397                           ;fat_string.c: 251: strLen--;
 37398  004B18  0603               	decf	FileString_TrimLength@strLen,f,c
 37399  004B1A  A0D8               	btfss	status,0,c
 37400  004B1C  0604               	decf	FileString_TrimLength@strLen+1,f,c
 37401  004B1E                     l8976:
 37402  004B1E  5004               	movf	FileString_TrimLength@strLen+1,w,c
 37403  004B20  1003               	iorwf	FileString_TrimLength@strLen,w,c
 37404  004B22  E1E2               	bnz	l8970
 37405  004B24                     l1121:
 37406                           
 37407                           ;fat_string.c: 252: }
 37408                           ;fat_string.c: 254: return length;
 37409  004B24  C007  F001         	movff	FileString_TrimLength@length,?_FileString_TrimLength
 37410  004B28  C008  F002         	movff	FileString_TrimLength@length+1,?_FileString_TrimLength+1
 37411  004B2C  0012               	return	
 37412  004B2E                     __end_of_FileString_TrimLength:
 37413                           	opt stack 0
 37414                           tosu	equ	0xFFF
 37415                           tosh	equ	0xFFE
 37416                           tosl	equ	0xFFD
 37417                           pclath	equ	0xFFA
 37418                           tblptru	equ	0xFF8
 37419                           tblptrh	equ	0xFF7
 37420                           tblptrl	equ	0xFF6
 37421                           tablat	equ	0xFF5
 37422                           prodh	equ	0xFF4
 37423                           prodl	equ	0xFF3
 37424                           indf0	equ	0xFEF
 37425                           postinc0	equ	0xFEE
 37426                           fsr0h	equ	0xFEA
 37427                           fsr0l	equ	0xFE9
 37428                           wreg	equ	0xFE8
 37429                           indf1	equ	0xFE7
 37430                           postinc1	equ	0xFE6
 37431                           postdec1	equ	0xFE5
 37432                           fsr1h	equ	0xFE2
 37433                           fsr1l	equ	0xFE1
 37434                           indf2	equ	0xFDF
 37435                           postinc2	equ	0xFDE
 37436                           postdec2	equ	0xFDD
 37437                           fsr2h	equ	0xFDA
 37438                           fsr2l	equ	0xFD9
 37439                           status	equ	0xFD8
 37440                           
 37441 ;; *************** function _FileString_StrCmpNoCase *****************
 37442 ;; Defined at:
 37443 ;;		line 182 in file "fat_string.c"
 37444 ;; Parameters:    Size  Location     Type
 37445 ;;  s1              2    6[COMRAM] PTR unsigned char 
 37446 ;;		 -> lfn.String(50), lfn.String(50), RAM(3967), fatfs_list_directory_next@lfn(52), 
 37447 ;;		 -> fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0), 
 37448 ;;  s2              2    8[COMRAM] PTR unsigned char 
 37449 ;;		 -> _open_directory@currentfolder(10), RAM(3967), NULL(0), 
 37450 ;;  n               2   10[COMRAM] int 
 37451 ;; Auto vars:     Size  Location     Type
 37452 ;;  diff            2   14[COMRAM] int 
 37453 ;;  b               1   17[COMRAM] unsigned char 
 37454 ;;  a               1   16[COMRAM] unsigned char 
 37455 ;; Return value:  Size  Location     Type
 37456 ;;                  2    6[COMRAM] int 
 37457 ;; Registers used:
 37458 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37459 ;; Tracked objects:
 37460 ;;		On entry : 0/0
 37461 ;;		On exit  : 0/0
 37462 ;;		Unchanged: 0/0
 37463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37464 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37465 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37467 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37468 ;;Total ram usage:       12 bytes
 37469 ;; Hardware stack levels used:    1
 37470 ;; This function calls:
 37471 ;;		Nothing
 37472 ;; This function is called by:
 37473 ;;		_fatfs_compare_names
 37474 ;; This function uses a non-reentrant model
 37475 ;;
 37476                           
 37477                           	psect	text119
 37478  0054B4                     __ptext119:
 37479                           	opt stack 0
 37480  0054B4                     _FileString_StrCmpNoCase:
 37481                           	opt stack 25
 37482                           
 37483                           ;fat_string.c: 184: int diff;
 37484                           ;fat_string.c: 185: char a,b;
 37485                           ;fat_string.c: 187: while (n--)
 37486                           
 37487                           ;incstack = 0
 37488  0054B4  D041               	goto	l8948
 37489  0054B6                     l8926:
 37490                           
 37491                           ;fat_string.c: 188: {
 37492                           ;fat_string.c: 189: a = *s1;
 37493  0054B6  C007  FFD9         	movff	FileString_StrCmpNoCase@s1,fsr2l
 37494  0054BA  C008  FFDA         	movff	FileString_StrCmpNoCase@s1+1,fsr2h
 37495  0054BE  50DF               	movf	indf2,w,c
 37496  0054C0  6E11               	movwf	FileString_StrCmpNoCase@a,c
 37497                           
 37498                           ;fat_string.c: 190: b = *s2;
 37499  0054C2  C009  FFD9         	movff	FileString_StrCmpNoCase@s2,fsr2l
 37500  0054C6  C00A  FFDA         	movff	FileString_StrCmpNoCase@s2+1,fsr2h
 37501  0054CA  50DF               	movf	indf2,w,c
 37502  0054CC  6E12               	movwf	FileString_StrCmpNoCase@b,c
 37503                           
 37504                           ;fat_string.c: 193: if ((a>='A') && (a<='Z'))
 37505  0054CE  0E40               	movlw	64
 37506  0054D0  6411               	cpfsgt	FileString_StrCmpNoCase@a,c
 37507  0054D2  D005               	goto	l8934
 37508  0054D4  0E5B               	movlw	91
 37509  0054D6  5C11               	subwf	FileString_StrCmpNoCase@a,w,c
 37510  0054D8  E202               	bc	l8934
 37511                           
 37512                           ;fat_string.c: 194: a+= 32;
 37513  0054DA  0E20               	movlw	32
 37514  0054DC  2611               	addwf	FileString_StrCmpNoCase@a,f,c
 37515  0054DE                     l8934:
 37516                           
 37517                           ;fat_string.c: 195: if ((b>='A') && (b<='Z'))
 37518  0054DE  0E40               	movlw	64
 37519  0054E0  6412               	cpfsgt	FileString_StrCmpNoCase@b,c
 37520  0054E2  D005               	goto	l1101
 37521  0054E4  0E5B               	movlw	91
 37522  0054E6  5C12               	subwf	FileString_StrCmpNoCase@b,w,c
 37523  0054E8  E202               	bc	l1101
 37524                           
 37525                           ;fat_string.c: 196: b+= 32;
 37526  0054EA  0E20               	movlw	32
 37527  0054EC  2612               	addwf	FileString_StrCmpNoCase@b,f,c
 37528  0054EE                     l1101:
 37529                           
 37530                           ;fat_string.c: 198: diff = a - b;
 37531  0054EE  5012               	movf	FileString_StrCmpNoCase@b,w,c
 37532  0054F0  6E0D               	movwf	??_FileString_StrCmpNoCase& (0+255),c
 37533  0054F2  6A0E               	clrf	(??_FileString_StrCmpNoCase+1)& (0+255),c
 37534  0054F4  1E0D               	comf	??_FileString_StrCmpNoCase,f,c
 37535  0054F6  1E0E               	comf	??_FileString_StrCmpNoCase+1,f,c
 37536  0054F8  4A0D               	infsnz	??_FileString_StrCmpNoCase,f,c
 37537  0054FA  2A0E               	incf	??_FileString_StrCmpNoCase+1,f,c
 37538  0054FC  5011               	movf	FileString_StrCmpNoCase@a,w,c
 37539  0054FE  240D               	addwf	??_FileString_StrCmpNoCase,w,c
 37540  005500  6E0F               	movwf	FileString_StrCmpNoCase@diff,c
 37541  005502  0E00               	movlw	0
 37542  005504  200E               	addwfc	??_FileString_StrCmpNoCase+1,w,c
 37543  005506  6E10               	movwf	FileString_StrCmpNoCase@diff+1,c
 37544                           
 37545                           ;fat_string.c: 201: if (diff)
 37546  005508  5010               	movf	FileString_StrCmpNoCase@diff+1,w,c
 37547  00550A  100F               	iorwf	FileString_StrCmpNoCase@diff,w,c
 37548  00550C  E005               	bz	l8942
 37549                           
 37550                           ;fat_string.c: 202: return diff;
 37551  00550E  C00F  F007         	movff	FileString_StrCmpNoCase@diff,?_FileString_StrCmpNoCase
 37552  005512  C010  F008         	movff	FileString_StrCmpNoCase@diff+1,?_FileString_StrCmpNoCase+1
 37553  005516  D01A               	goto	l1103
 37554  005518                     l8942:
 37555                           
 37556                           ;fat_string.c: 205: if ( (*s1 == 0) || (*s2 == 0) )
 37557  005518  C007  FFD9         	movff	FileString_StrCmpNoCase@s1,fsr2l
 37558  00551C  C008  FFDA         	movff	FileString_StrCmpNoCase@s1+1,fsr2h
 37559  005520  50DF               	movf	indf2,w,c
 37560  005522  E011               	bz	l8950
 37561  005524  C009  FFD9         	movff	FileString_StrCmpNoCase@s2,fsr2l
 37562  005528  C00A  FFDA         	movff	FileString_StrCmpNoCase@s2+1,fsr2h
 37563  00552C  50DF               	movf	indf2,w,c
 37564  00552E  E00B               	bz	l8950
 37565                           
 37566                           ;fat_string.c: 208: s1++;
 37567                           
 37568                           ;fat_string.c: 206: break;
 37569  005530  4A07               	infsnz	FileString_StrCmpNoCase@s1,f,c
 37570  005532  2A08               	incf	FileString_StrCmpNoCase@s1+1,f,c
 37571                           
 37572                           ;fat_string.c: 209: s2++;
 37573  005534  4A09               	infsnz	FileString_StrCmpNoCase@s2,f,c
 37574  005536  2A0A               	incf	FileString_StrCmpNoCase@s2+1,f,c
 37575  005538                     l8948:
 37576  005538  060B               	decf	FileString_StrCmpNoCase@n,f,c
 37577  00553A  A0D8               	btfss	status,0,c
 37578  00553C  060C               	decf	FileString_StrCmpNoCase@n+1,f,c
 37579  00553E  280B               	incf	FileString_StrCmpNoCase@n& (0+255),w,c
 37580  005540  B4D8               	btfsc	status,2,c
 37581  005542  280C               	incf	(FileString_StrCmpNoCase@n+1)& (0+255),w,c
 37582  005544  E1B8               	bnz	l8926
 37583  005546                     l8950:
 37584                           
 37585                           ;fat_string.c: 210: }
 37586                           ;fat_string.c: 211: return 0;
 37587  005546  0E00               	movlw	0
 37588  005548  6E08               	movwf	?_FileString_StrCmpNoCase+1,c
 37589  00554A  6E07               	movwf	?_FileString_StrCmpNoCase,c
 37590  00554C                     l1103:
 37591  00554C  0012               	return	
 37592  00554E                     __end_of_FileString_StrCmpNoCase:
 37593                           	opt stack 0
 37594                           tosu	equ	0xFFF
 37595                           tosh	equ	0xFFE
 37596                           tosl	equ	0xFFD
 37597                           pclath	equ	0xFFA
 37598                           tblptru	equ	0xFF8
 37599                           tblptrh	equ	0xFF7
 37600                           tblptrl	equ	0xFF6
 37601                           tablat	equ	0xFF5
 37602                           prodh	equ	0xFF4
 37603                           prodl	equ	0xFF3
 37604                           indf0	equ	0xFEF
 37605                           postinc0	equ	0xFEE
 37606                           fsr0h	equ	0xFEA
 37607                           fsr0l	equ	0xFE9
 37608                           wreg	equ	0xFE8
 37609                           indf1	equ	0xFE7
 37610                           postinc1	equ	0xFE6
 37611                           postdec1	equ	0xFE5
 37612                           fsr1h	equ	0xFE2
 37613                           fsr1l	equ	0xFE1
 37614                           indf2	equ	0xFDF
 37615                           postinc2	equ	0xFDE
 37616                           postdec2	equ	0xFDD
 37617                           fsr2h	equ	0xFDA
 37618                           fsr2l	equ	0xFD9
 37619                           status	equ	0xFD8
 37620                           
 37621 ;; *************** function _FileString_GetExtension *****************
 37622 ;; Defined at:
 37623 ;;		line 217 in file "fat_string.c"
 37624 ;; Parameters:    Size  Location     Type
 37625 ;;  str             2    0[COMRAM] PTR unsigned char 
 37626 ;;		 -> lfn.String(50), lfn.String(50), _open_directory@currentfolder(10), RAM(3967), 
 37627 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0
      +), 
 37628 ;; Auto vars:     Size  Location     Type
 37629 ;;  strSrc          2    6[COMRAM] PTR unsigned char 
 37630 ;;		 -> lfn.String(50), lfn.String(50), _open_directory@currentfolder(10), RAM(3967), 
 37631 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0
      +), 
 37632 ;;  dotPos          2    4[COMRAM] int 
 37633 ;; Return value:  Size  Location     Type
 37634 ;;                  2    0[COMRAM] int 
 37635 ;; Registers used:
 37636 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37637 ;; Tracked objects:
 37638 ;;		On entry : 0/0
 37639 ;;		On exit  : 0/0
 37640 ;;		Unchanged: 0/0
 37641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37643 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37645 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37646 ;;Total ram usage:        8 bytes
 37647 ;; Hardware stack levels used:    1
 37648 ;; This function calls:
 37649 ;;		Nothing
 37650 ;; This function is called by:
 37651 ;;		_fatfs_compare_names
 37652 ;;		_fatfs_get_extension
 37653 ;; This function uses a non-reentrant model
 37654 ;;
 37655                           
 37656                           	psect	text120
 37657  004490                     __ptext120:
 37658                           	opt stack 0
 37659  004490                     _FileString_GetExtension:
 37660                           	opt stack 25
 37661                           
 37662                           ;fat_string.c: 219: int dotPos = -1;
 37663                           
 37664                           ;incstack = 0
 37665  004490  6805               	setf	FileString_GetExtension@dotPos,c
 37666  004492  6806               	setf	FileString_GetExtension@dotPos+1,c
 37667                           
 37668                           ;fat_string.c: 220: char *strSrc = str;
 37669  004494  C002  F008         	movff	FileString_GetExtension@str+1,FileString_GetExtension@strSrc+1
 37670  004498  C001  F007         	movff	FileString_GetExtension@str,FileString_GetExtension@strSrc
 37671                           
 37672                           ;fat_string.c: 223: while (*strSrc)
 37673  00449C  D017               	goto	l8964
 37674  00449E                     l8958:
 37675                           
 37676                           ;fat_string.c: 224: {
 37677                           ;fat_string.c: 225: if (*strSrc=='.')
 37678  00449E  0E2E               	movlw	46
 37679  0044A0  C007  FFD9         	movff	FileString_GetExtension@strSrc,fsr2l
 37680  0044A4  C008  FFDA         	movff	FileString_GetExtension@strSrc+1,fsr2h
 37681  0044A8  62DF               	cpfseq	indf2,c
 37682  0044AA  D00E               	goto	l8962
 37683                           
 37684                           ;fat_string.c: 226: dotPos = (int)(strSrc-str);
 37685  0044AC  C001  F003         	movff	FileString_GetExtension@str,??_FileString_GetExtension
 37686  0044B0  C002  F004         	movff	FileString_GetExtension@str+1,??_FileString_GetExtension+1
 37687  0044B4  1E03               	comf	??_FileString_GetExtension,f,c
 37688  0044B6  1E04               	comf	??_FileString_GetExtension+1,f,c
 37689  0044B8  4A03               	infsnz	??_FileString_GetExtension,f,c
 37690  0044BA  2A04               	incf	??_FileString_GetExtension+1,f,c
 37691  0044BC  5007               	movf	FileString_GetExtension@strSrc,w,c
 37692  0044BE  2403               	addwf	??_FileString_GetExtension,w,c
 37693  0044C0  6E05               	movwf	FileString_GetExtension@dotPos,c
 37694  0044C2  5008               	movf	FileString_GetExtension@strSrc+1,w,c
 37695  0044C4  2004               	addwfc	??_FileString_GetExtension+1,w,c
 37696  0044C6  6E06               	movwf	FileString_GetExtension@dotPos+1,c
 37697  0044C8                     l8962:
 37698                           
 37699                           ;fat_string.c: 228: strSrc++;
 37700  0044C8  4A07               	infsnz	FileString_GetExtension@strSrc,f,c
 37701  0044CA  2A08               	incf	FileString_GetExtension@strSrc+1,f,c
 37702  0044CC                     l8964:
 37703  0044CC  C007  FFD9         	movff	FileString_GetExtension@strSrc,fsr2l
 37704  0044D0  C008  FFDA         	movff	FileString_GetExtension@strSrc+1,fsr2h
 37705  0044D4  50DF               	movf	indf2,w,c
 37706  0044D6  E1E3               	bnz	l8958
 37707                           
 37708                           ;fat_string.c: 229: }
 37709                           ;fat_string.c: 231: return dotPos;
 37710  0044D8  C005  F001         	movff	FileString_GetExtension@dotPos,?_FileString_GetExtension
 37711  0044DC  C006  F002         	movff	FileString_GetExtension@dotPos+1,?_FileString_GetExtension+1
 37712  0044E0  0012               	return	
 37713  0044E2                     __end_of_FileString_GetExtension:
 37714                           	opt stack 0
 37715                           tosu	equ	0xFFF
 37716                           tosh	equ	0xFFE
 37717                           tosl	equ	0xFFD
 37718                           pclath	equ	0xFFA
 37719                           tblptru	equ	0xFF8
 37720                           tblptrh	equ	0xFF7
 37721                           tblptrl	equ	0xFF6
 37722                           tablat	equ	0xFF5
 37723                           prodh	equ	0xFF4
 37724                           prodl	equ	0xFF3
 37725                           indf0	equ	0xFEF
 37726                           postinc0	equ	0xFEE
 37727                           fsr0h	equ	0xFEA
 37728                           fsr0l	equ	0xFE9
 37729                           wreg	equ	0xFE8
 37730                           indf1	equ	0xFE7
 37731                           postinc1	equ	0xFE6
 37732                           postdec1	equ	0xFE5
 37733                           fsr1h	equ	0xFE2
 37734                           fsr1l	equ	0xFE1
 37735                           indf2	equ	0xFDF
 37736                           postinc2	equ	0xFDE
 37737                           postdec2	equ	0xFDD
 37738                           fsr2h	equ	0xFDA
 37739                           fsr2l	equ	0xFD9
 37740                           status	equ	0xFD8
 37741                           
 37742 ;; *************** function __allocate_file *****************
 37743 ;; Defined at:
 37744 ;;		line 74 in file "fat_filelib.c"
 37745 ;; Parameters:    Size  Location     Type
 37746 ;;		None
 37747 ;; Auto vars:     Size  Location     Type
 37748 ;;  node            2   16[COMRAM] PTR struct fat_node
 37749 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 37750 ;; Return value:  Size  Location     Type
 37751 ;;                  2   14[COMRAM] PTR struct sFL_FILE
 37752 ;; Registers used:
 37753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37754 ;; Tracked objects:
 37755 ;;		On entry : 0/0
 37756 ;;		On exit  : 0/0
 37757 ;;		Unchanged: 0/0
 37758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37760 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37762 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37763 ;;Total ram usage:        4 bytes
 37764 ;; Hardware stack levels used:    1
 37765 ;; Hardware stack levels required when called:    3
 37766 ;; This function calls:
 37767 ;;		fat_list@fat_list_insert_last
 37768 ;;		fat_list@fat_list_pop_head
 37769 ;; This function is called by:
 37770 ;;		__create_directory
 37771 ;;		__open_file
 37772 ;;		__create_file
 37773 ;; This function uses a non-reentrant model
 37774 ;;
 37775                           
 37776                           	psect	text121
 37777  0043A0                     __ptext121:
 37778                           	opt stack 0
 37779  0043A0                     __allocate_file:
 37780                           	opt stack 23
 37781                           
 37782                           ;fat_filelib.c: 77: struct fat_node *node = fat_list_pop_head(&_free_file_list);
 37783                           
 37784                           ;incstack = 0
 37785  0043A0  0E01               	movlw	high __free_file_list
 37786  0043A2  6E08               	movwf	fat_list@fat_list_pop_head@list+1,c
 37787  0043A4  0101               	movlb	1	; () banked
 37788  0043A6  0ED6               	movlw	low __free_file_list
 37789  0043A8  6E07               	movwf	fat_list@fat_list_pop_head@list,c
 37790  0043AA  EC75  F020         	call	fat_list@fat_list_pop_head	;wreg free
 37791  0043AE  C007  F011         	movff	?fat_list@fat_list_pop_head,__allocate_file@node
 37792  0043B2  C008  F012         	movff	?fat_list@fat_list_pop_head+1,__allocate_file@node+1
 37793                           
 37794                           ;fat_filelib.c: 80: if (node)
 37795  0043B6  5012               	movf	__allocate_file@node+1,w,c
 37796  0043B8  1011               	iorwf	__allocate_file@node,w,c
 37797  0043BA  E00B               	bz	l10524
 37798                           
 37799                           ;fat_filelib.c: 81: fat_list_insert_last(&_open_file_list, node);
 37800  0043BC  0E01               	movlw	high __open_file_list
 37801  0043BE  6E0C               	movwf	fat_list@fat_list_insert_last@list+1,c
 37802  0043C0  0101               	movlb	1	; () banked
 37803  0043C2  0EDA               	movlw	low __open_file_list
 37804  0043C4  6E0B               	movwf	fat_list@fat_list_insert_last@list,c
 37805  0043C6  C012  F00E         	movff	__allocate_file@node+1,fat_list@fat_list_insert_last@node+1
 37806  0043CA  C011  F00D         	movff	__allocate_file@node,fat_list@fat_list_insert_last@node
 37807  0043CE  EC1F  F022         	call	fat_list@fat_list_insert_last	;wreg free
 37808  0043D2                     l10524:
 37809                           
 37810                           ;fat_filelib.c: 83: return node ? ((FL_FILE *)((char *)(node)-(char*)(&((FL_FILE *)0)->l
      +                          ist_node))) : 0;
 37811  0043D2  5012               	movf	__allocate_file@node+1,w,c
 37812  0043D4  1011               	iorwf	__allocate_file@node,w,c
 37813  0043D6  E104               	bnz	l10528
 37814  0043D8  0E00               	movlw	0
 37815  0043DA  6E10               	movwf	?__allocate_file+1,c
 37816  0043DC  6E0F               	movwf	?__allocate_file,c
 37817  0043DE  D006               	goto	l423
 37818  0043E0                     l10528:
 37819  0043E0  0EC0               	movlw	192
 37820  0043E2  2411               	addwf	__allocate_file@node,w,c
 37821  0043E4  6E0F               	movwf	?__allocate_file,c
 37822  0043E6  0EFD               	movlw	253
 37823  0043E8  2012               	addwfc	__allocate_file@node+1,w,c
 37824  0043EA  6E10               	movwf	?__allocate_file+1,c
 37825  0043EC                     l423:
 37826  0043EC  0012               	return	
 37827  0043EE                     __end_of__allocate_file:
 37828                           	opt stack 0
 37829                           tosu	equ	0xFFF
 37830                           tosh	equ	0xFFE
 37831                           tosl	equ	0xFFD
 37832                           pclath	equ	0xFFA
 37833                           tblptru	equ	0xFF8
 37834                           tblptrh	equ	0xFF7
 37835                           tblptrl	equ	0xFF6
 37836                           tablat	equ	0xFF5
 37837                           prodh	equ	0xFF4
 37838                           prodl	equ	0xFF3
 37839                           indf0	equ	0xFEF
 37840                           postinc0	equ	0xFEE
 37841                           fsr0h	equ	0xFEA
 37842                           fsr0l	equ	0xFE9
 37843                           wreg	equ	0xFE8
 37844                           indf1	equ	0xFE7
 37845                           postinc1	equ	0xFE6
 37846                           postdec1	equ	0xFE5
 37847                           fsr1h	equ	0xFE2
 37848                           fsr1l	equ	0xFE1
 37849                           indf2	equ	0xFDF
 37850                           postinc2	equ	0xFDE
 37851                           postdec2	equ	0xFDD
 37852                           fsr2h	equ	0xFDA
 37853                           fsr2l	equ	0xFD9
 37854                           status	equ	0xFD8
 37855                           
 37856 ;; *************** function fat_list@fat_list_pop_head *****************
 37857 ;; Defined at:
 37858 ;;		line 147 in file "fat_list.h"
 37859 ;; Parameters:    Size  Location     Type
 37860 ;;  list            2    6[COMRAM] PTR struct fat_list
 37861 ;;		 -> _free_file_list(4), 
 37862 ;; Auto vars:     Size  Location     Type
 37863 ;;  node            2    8[COMRAM] PTR struct fat_node
 37864 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 37865 ;; Return value:  Size  Location     Type
 37866 ;;                  2    6[COMRAM] PTR struct fat_node
 37867 ;; Registers used:
 37868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37869 ;; Tracked objects:
 37870 ;;		On entry : 0/0
 37871 ;;		On exit  : 0/0
 37872 ;;		Unchanged: 0/0
 37873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37874 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37875 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37877 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37878 ;;Total ram usage:        4 bytes
 37879 ;; Hardware stack levels used:    1
 37880 ;; Hardware stack levels required when called:    1
 37881 ;; This function calls:
 37882 ;;		fat_list@fat_list_remove
 37883 ;; This function is called by:
 37884 ;;		__allocate_file
 37885 ;; This function uses a non-reentrant model
 37886 ;;
 37887                           
 37888                           	psect	text122
 37889  0040EA                     __ptext122:
 37890                           	opt stack 0
 37891  0040EA                     fat_list@fat_list_pop_head:
 37892                           	opt stack 24
 37893                           
 37894                           ;fat_list.h: 149: struct fat_node * node;
 37895                           ;fat_list.h: 151: ;
 37896                           ;fat_list.h: 153: node = (list)->head;
 37897                           
 37898                           ;incstack = 0
 37899  0040EA  C007  FFD9         	movff	fat_list@fat_list_pop_head@list,fsr2l
 37900  0040EE  C008  FFDA         	movff	fat_list@fat_list_pop_head@list+1,fsr2h
 37901  0040F2  CFDE F009          	movff	postinc2,fat_list@fat_list_pop_head@node
 37902  0040F6  CFDD F00A          	movff	postdec2,fat_list@fat_list_pop_head@node+1
 37903                           
 37904                           ;fat_list.h: 154: if (node)
 37905  0040FA  500A               	movf	fat_list@fat_list_pop_head@node+1,w,c
 37906  0040FC  1009               	iorwf	fat_list@fat_list_pop_head@node,w,c
 37907  0040FE  E00A               	bz	l9780
 37908                           
 37909                           ;fat_list.h: 155: fat_list_remove(list, node);
 37910  004100  C008  F002         	movff	fat_list@fat_list_pop_head@list+1,fat_list@fat_list_remove@list+1
 37911  004104  C007  F001         	movff	fat_list@fat_list_pop_head@list,fat_list@fat_list_remove@list
 37912  004108  C00A  F004         	movff	fat_list@fat_list_pop_head@node+1,fat_list@fat_list_remove@node+1
 37913  00410C  C009  F003         	movff	fat_list@fat_list_pop_head@node,fat_list@fat_list_remove@node
 37914  004110  EC46  F02B         	call	fat_list@fat_list_remove	;wreg free
 37915  004114                     l9780:
 37916                           
 37917                           ;fat_list.h: 157: return node;
 37918  004114  C00A  F008         	movff	fat_list@fat_list_pop_head@node+1,?fat_list@fat_list_pop_head+1
 37919  004118  C009  F007         	movff	fat_list@fat_list_pop_head@node,?fat_list@fat_list_pop_head
 37920  00411C  0012               	return	
 37921  00411E                     __end_offat_list@fat_list_pop_head:
 37922                           	opt stack 0
 37923                           tosu	equ	0xFFF
 37924                           tosh	equ	0xFFE
 37925                           tosl	equ	0xFFD
 37926                           pclath	equ	0xFFA
 37927                           tblptru	equ	0xFF8
 37928                           tblptrh	equ	0xFF7
 37929                           tblptrl	equ	0xFF6
 37930                           tablat	equ	0xFF5
 37931                           prodh	equ	0xFF4
 37932                           prodl	equ	0xFF3
 37933                           indf0	equ	0xFEF
 37934                           postinc0	equ	0xFEE
 37935                           fsr0h	equ	0xFEA
 37936                           fsr0l	equ	0xFE9
 37937                           wreg	equ	0xFE8
 37938                           indf1	equ	0xFE7
 37939                           postinc1	equ	0xFE6
 37940                           postdec1	equ	0xFE5
 37941                           fsr1h	equ	0xFE2
 37942                           fsr1l	equ	0xFE1
 37943                           indf2	equ	0xFDF
 37944                           postinc2	equ	0xFDE
 37945                           postdec2	equ	0xFDD
 37946                           fsr2h	equ	0xFDA
 37947                           fsr2l	equ	0xFD9
 37948                           status	equ	0xFD8
 37949                           
 37950 ;; *************** function fat_list@fat_list_remove *****************
 37951 ;; Defined at:
 37952 ;;		line 55 in file "fat_list.h"
 37953 ;; Parameters:    Size  Location     Type
 37954 ;;  list            2    0[COMRAM] PTR struct fat_list
 37955 ;;		 -> _open_file_list(4), _free_file_list(4), 
 37956 ;;  node            2    2[COMRAM] PTR struct fat_node
 37957 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 37958 ;; Auto vars:     Size  Location     Type
 37959 ;;		None
 37960 ;; Return value:  Size  Location     Type
 37961 ;;		None               void
 37962 ;; Registers used:
 37963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 37964 ;; Tracked objects:
 37965 ;;		On entry : 0/0
 37966 ;;		On exit  : 0/0
 37967 ;;		Unchanged: 0/0
 37968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37969 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37971 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37972 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37973 ;;Total ram usage:        6 bytes
 37974 ;; Hardware stack levels used:    1
 37975 ;; This function calls:
 37976 ;;		Nothing
 37977 ;; This function is called by:
 37978 ;;		fat_list@fat_list_pop_head
 37979 ;;		__free_file
 37980 ;; This function uses a non-reentrant model
 37981 ;;
 37982                           
 37983                           	psect	text123
 37984  00568C                     __ptext123:
 37985                           	opt stack 0
 37986  00568C                     fat_list@fat_list_remove:
 37987                           	opt stack 25
 37988                           
 37989                           ;fat_list.h: 57: ;
 37990                           ;fat_list.h: 58: ;
 37991                           ;fat_list.h: 60: if(!node->previous)
 37992                           
 37993                           ;incstack = 0
 37994  00568C  C003  FFD9         	movff	fat_list@fat_list_remove@node,fsr2l
 37995  005690  C004  FFDA         	movff	fat_list@fat_list_remove@node+1,fsr2h
 37996  005694  50DE               	movf	postinc2,w,c
 37997  005696  10DD               	iorwf	postdec2,w,c
 37998  005698  E10F               	bnz	l9414
 37999                           
 38000                           ;fat_list.h: 61: list->head = node->next;
 38001  00569A  EE20 F002          	lfsr	2,2
 38002  00569E  5003               	movf	fat_list@fat_list_remove@node,w,c
 38003  0056A0  26D9               	addwf	fsr2l,f,c
 38004  0056A2  5004               	movf	fat_list@fat_list_remove@node+1,w,c
 38005  0056A4  22DA               	addwfc	fsr2h,f,c
 38006  0056A6  C001  FFE1         	movff	fat_list@fat_list_remove@list,fsr1l
 38007  0056AA  C002  FFE2         	movff	fat_list@fat_list_remove@list+1,fsr1h
 38008  0056AE  CFDE FFE6          	movff	postinc2,postinc1
 38009  0056B2  CFDD FFE5          	movff	postdec2,postdec1
 38010  0056B6  D014               	goto	l9416
 38011  0056B8                     l9414:
 38012                           
 38013                           ;fat_list.h: 62: else
 38014                           ;fat_list.h: 63: node->previous->next = node->next;
 38015  0056B8  EE20 F002          	lfsr	2,2
 38016  0056BC  5003               	movf	fat_list@fat_list_remove@node,w,c
 38017  0056BE  26D9               	addwf	fsr2l,f,c
 38018  0056C0  5004               	movf	fat_list@fat_list_remove@node+1,w,c
 38019  0056C2  22DA               	addwfc	fsr2h,f,c
 38020  0056C4  C003  FFE1         	movff	fat_list@fat_list_remove@node,fsr1l
 38021  0056C8  C004  FFE2         	movff	fat_list@fat_list_remove@node+1,fsr1h
 38022  0056CC  EE00 F002          	lfsr	0,2
 38023  0056D0  50E6               	movf	postinc1,w,c
 38024  0056D2  26E9               	addwf	fsr0l,f,c
 38025  0056D4  50E5               	movf	postdec1,w,c
 38026  0056D6  22EA               	addwfc	fsr0h,f,c
 38027  0056D8  CFDE FFEE          	movff	postinc2,postinc0
 38028  0056DC  CFDD FFED          	movff	postdec2,postdec0
 38029  0056E0                     l9416:
 38030                           
 38031                           ;fat_list.h: 65: if(!node->next)
 38032  0056E0  EE20 F002          	lfsr	2,2
 38033  0056E4  5003               	movf	fat_list@fat_list_remove@node,w,c
 38034  0056E6  26D9               	addwf	fsr2l,f,c
 38035  0056E8  5004               	movf	fat_list@fat_list_remove@node+1,w,c
 38036  0056EA  22DA               	addwfc	fsr2h,f,c
 38037  0056EC  50DE               	movf	postinc2,w,c
 38038  0056EE  10DD               	iorwf	postdec2,w,c
 38039  0056F0  E10B               	bnz	l9420
 38040                           
 38041                           ;fat_list.h: 66: list->tail = node->previous;
 38042  0056F2  C003  FFD9         	movff	fat_list@fat_list_remove@node,fsr2l
 38043  0056F6  C004  FFDA         	movff	fat_list@fat_list_remove@node+1,fsr2h
 38044  0056FA  EE10 F002          	lfsr	1,2
 38045  0056FE  5001               	movf	fat_list@fat_list_remove@list,w,c
 38046  005700  26E1               	addwf	fsr1l,f,c
 38047  005702  5002               	movf	fat_list@fat_list_remove@list+1,w,c
 38048  005704  22E2               	addwfc	fsr1h,f,c
 38049  005706  D012               	goto	L136
 38050  005708                     l9420:
 38051                           
 38052                           ;fat_list.h: 67: else
 38053                           ;fat_list.h: 68: node->next->previous = node->previous;
 38054  005708  C003  FFD9         	movff	fat_list@fat_list_remove@node,fsr2l
 38055  00570C  C004  FFDA         	movff	fat_list@fat_list_remove@node+1,fsr2h
 38056  005710  EE10 F002          	lfsr	1,2
 38057  005714  5003               	movf	fat_list@fat_list_remove@node,w,c
 38058  005716  26E1               	addwf	fsr1l,f,c
 38059  005718  5004               	movf	fat_list@fat_list_remove@node+1,w,c
 38060  00571A  22E2               	addwfc	fsr1h,f,c
 38061  00571C  CFE6 F005          	movff	postinc1,??fat_list@fat_list_remove
 38062  005720  CFE5 F006          	movff	postdec1,??fat_list@fat_list_remove+1
 38063  005724  C005  FFE1         	movff	??fat_list@fat_list_remove,fsr1l
 38064  005728  C006  FFE2         	movff	??fat_list@fat_list_remove+1,fsr1h
 38065  00572C                     L136:
 38066  00572C  CFDE FFE6          	movff	postinc2,postinc1
 38067  005730  CFDD FFE5          	movff	postdec2,postdec1
 38068  005734  0012               	return	
 38069  005736                     __end_offat_list@fat_list_remove:
 38070                           	opt stack 0
 38071                           tosu	equ	0xFFF
 38072                           tosh	equ	0xFFE
 38073                           tosl	equ	0xFFD
 38074                           pclath	equ	0xFFA
 38075                           tblptru	equ	0xFF8
 38076                           tblptrh	equ	0xFF7
 38077                           tblptrl	equ	0xFF6
 38078                           tablat	equ	0xFF5
 38079                           prodh	equ	0xFF4
 38080                           prodl	equ	0xFF3
 38081                           indf0	equ	0xFEF
 38082                           postinc0	equ	0xFEE
 38083                           postdec0	equ	0xFED
 38084                           fsr0h	equ	0xFEA
 38085                           fsr0l	equ	0xFE9
 38086                           wreg	equ	0xFE8
 38087                           indf1	equ	0xFE7
 38088                           postinc1	equ	0xFE6
 38089                           postdec1	equ	0xFE5
 38090                           fsr1h	equ	0xFE2
 38091                           fsr1l	equ	0xFE1
 38092                           indf2	equ	0xFDF
 38093                           postinc2	equ	0xFDE
 38094                           postdec2	equ	0xFDD
 38095                           fsr2h	equ	0xFDA
 38096                           fsr2l	equ	0xFD9
 38097                           status	equ	0xFD8
 38098                           
 38099 ;; *************** function fat_list@fat_list_insert_last *****************
 38100 ;; Defined at:
 38101 ;;		line 125 in file "fat_list.h"
 38102 ;; Parameters:    Size  Location     Type
 38103 ;;  list            2   10[COMRAM] PTR struct fat_list
 38104 ;;		 -> _open_file_list(4), _free_file_list(4), 
 38105 ;;  node            2   12[COMRAM] PTR struct fat_node
 38106 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 38107 ;; Auto vars:     Size  Location     Type
 38108 ;;		None
 38109 ;; Return value:  Size  Location     Type
 38110 ;;		None               void
 38111 ;; Registers used:
 38112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38113 ;; Tracked objects:
 38114 ;;		On entry : 0/0
 38115 ;;		On exit  : 0/0
 38116 ;;		Unchanged: 0/0
 38117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38121 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38122 ;;Total ram usage:        4 bytes
 38123 ;; Hardware stack levels used:    1
 38124 ;; Hardware stack levels required when called:    2
 38125 ;; This function calls:
 38126 ;;		fat_list@fat_list_insert_after
 38127 ;;		fat_list@fat_list_insert_first
 38128 ;; This function is called by:
 38129 ;;		__allocate_file
 38130 ;;		__free_file
 38131 ;;		_fl_init
 38132 ;; This function uses a non-reentrant model
 38133 ;;
 38134                           
 38135                           	psect	text124
 38136  00443E                     __ptext124:
 38137                           	opt stack 0
 38138  00443E                     fat_list@fat_list_insert_last:
 38139                           	opt stack 26
 38140                           
 38141                           ;fat_list.h: 127: ;
 38142                           ;fat_list.h: 128: ;
 38143                           ;fat_list.h: 130: if (!list->tail)
 38144                           
 38145                           ;incstack = 0
 38146  00443E  EE20 F002          	lfsr	2,2
 38147  004442  500B               	movf	fat_list@fat_list_insert_last@list,w,c
 38148  004444  26D9               	addwf	fsr2l,f,c
 38149  004446  500C               	movf	fat_list@fat_list_insert_last@list+1,w,c
 38150  004448  22DA               	addwfc	fsr2h,f,c
 38151  00444A  50DE               	movf	postinc2,w,c
 38152  00444C  10DD               	iorwf	postdec2,w,c
 38153  00444E  E10B               	bnz	l9772
 38154                           
 38155                           ;fat_list.h: 131: fat_list_insert_first(list, node);
 38156  004450  C00C  F008         	movff	fat_list@fat_list_insert_last@list+1,fat_list@fat_list_insert_first@list+1
 38157  004454  C00B  F007         	movff	fat_list@fat_list_insert_last@list,fat_list@fat_list_insert_first@list
 38158  004458  C00E  F00A         	movff	fat_list@fat_list_insert_last@node+1,fat_list@fat_list_insert_first@node+1
 38159  00445C  C00D  F009         	movff	fat_list@fat_list_insert_last@node,fat_list@fat_list_insert_first@node
 38160  004460  ECB6  F026         	call	fat_list@fat_list_insert_first	;wreg free
 38161  004464  D014               	goto	l396
 38162  004466                     l9772:
 38163                           
 38164                           ;fat_list.h: 132: else
 38165                           ;fat_list.h: 133: fat_list_insert_after(list, list->tail, node);
 38166  004466  C00C  F002         	movff	fat_list@fat_list_insert_last@list+1,fat_list@fat_list_insert_after@list+1
 38167  00446A  C00B  F001         	movff	fat_list@fat_list_insert_last@list,fat_list@fat_list_insert_after@list
 38168  00446E  EE20 F002          	lfsr	2,2
 38169  004472  500B               	movf	fat_list@fat_list_insert_last@list,w,c
 38170  004474  26D9               	addwf	fsr2l,f,c
 38171  004476  500C               	movf	fat_list@fat_list_insert_last@list+1,w,c
 38172  004478  22DA               	addwfc	fsr2h,f,c
 38173  00447A  CFDE F003          	movff	postinc2,fat_list@fat_list_insert_after@node
 38174  00447E  CFDD F004          	movff	postdec2,fat_list@fat_list_insert_after@node+1
 38175  004482  C00E  F006         	movff	fat_list@fat_list_insert_last@node+1,fat_list@fat_list_insert_after@new_node+1
 38176  004486  C00D  F005         	movff	fat_list@fat_list_insert_last@node,fat_list@fat_list_insert_after@new_node
 38177  00448A  ECB0  F028         	call	fat_list@fat_list_insert_after	;wreg free
 38178  00448E                     l396:
 38179  00448E  0012               	return	
 38180  004490                     __end_offat_list@fat_list_insert_last:
 38181                           	opt stack 0
 38182                           tosu	equ	0xFFF
 38183                           tosh	equ	0xFFE
 38184                           tosl	equ	0xFFD
 38185                           pclath	equ	0xFFA
 38186                           tblptru	equ	0xFF8
 38187                           tblptrh	equ	0xFF7
 38188                           tblptrl	equ	0xFF6
 38189                           tablat	equ	0xFF5
 38190                           prodh	equ	0xFF4
 38191                           prodl	equ	0xFF3
 38192                           indf0	equ	0xFEF
 38193                           postinc0	equ	0xFEE
 38194                           postdec0	equ	0xFED
 38195                           fsr0h	equ	0xFEA
 38196                           fsr0l	equ	0xFE9
 38197                           wreg	equ	0xFE8
 38198                           indf1	equ	0xFE7
 38199                           postinc1	equ	0xFE6
 38200                           postdec1	equ	0xFE5
 38201                           fsr1h	equ	0xFE2
 38202                           fsr1l	equ	0xFE1
 38203                           indf2	equ	0xFDF
 38204                           postinc2	equ	0xFDE
 38205                           postdec2	equ	0xFDD
 38206                           fsr2h	equ	0xFDA
 38207                           fsr2l	equ	0xFD9
 38208                           status	equ	0xFD8
 38209                           
 38210 ;; *************** function fat_list@fat_list_insert_first *****************
 38211 ;; Defined at:
 38212 ;;		line 107 in file "fat_list.h"
 38213 ;; Parameters:    Size  Location     Type
 38214 ;;  list            2    6[COMRAM] PTR struct fat_list
 38215 ;;		 -> _open_file_list(4), _free_file_list(4), 
 38216 ;;  node            2    8[COMRAM] PTR struct fat_node
 38217 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 38218 ;; Auto vars:     Size  Location     Type
 38219 ;;		None
 38220 ;; Return value:  Size  Location     Type
 38221 ;;		None               void
 38222 ;; Registers used:
 38223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38224 ;; Tracked objects:
 38225 ;;		On entry : 0/0
 38226 ;;		On exit  : 0/0
 38227 ;;		Unchanged: 0/0
 38228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38232 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38233 ;;Total ram usage:        4 bytes
 38234 ;; Hardware stack levels used:    1
 38235 ;; Hardware stack levels required when called:    1
 38236 ;; This function calls:
 38237 ;;		fat_list@fat_list_insert_before
 38238 ;; This function is called by:
 38239 ;;		fat_list@fat_list_insert_last
 38240 ;; This function uses a non-reentrant model
 38241 ;;
 38242                           
 38243                           	psect	text125
 38244  004D6C                     __ptext125:
 38245                           	opt stack 0
 38246  004D6C                     fat_list@fat_list_insert_first:
 38247                           	opt stack 26
 38248                           
 38249                           ;fat_list.h: 109: ;
 38250                           ;fat_list.h: 110: ;
 38251                           ;fat_list.h: 112: if (!list->head)
 38252                           
 38253                           ;incstack = 0
 38254  004D6C  C007  FFD9         	movff	fat_list@fat_list_insert_first@list,fsr2l
 38255  004D70  C008  FFDA         	movff	fat_list@fat_list_insert_first@list+1,fsr2h
 38256  004D74  50DE               	movf	postinc2,w,c
 38257  004D76  10DD               	iorwf	postdec2,w,c
 38258  004D78  E122               	bnz	l9442
 38259                           
 38260                           ;fat_list.h: 113: {
 38261                           ;fat_list.h: 114: list->head = node;
 38262  004D7A  C007  FFD9         	movff	fat_list@fat_list_insert_first@list,fsr2l
 38263  004D7E  C008  FFDA         	movff	fat_list@fat_list_insert_first@list+1,fsr2h
 38264  004D82  C009  FFDE         	movff	fat_list@fat_list_insert_first@node,postinc2
 38265  004D86  C00A  FFDD         	movff	fat_list@fat_list_insert_first@node+1,postdec2
 38266                           
 38267                           ;fat_list.h: 115: list->tail = node;
 38268  004D8A  EE20 F002          	lfsr	2,2
 38269  004D8E  5007               	movf	fat_list@fat_list_insert_first@list,w,c
 38270  004D90  26D9               	addwf	fsr2l,f,c
 38271  004D92  5008               	movf	fat_list@fat_list_insert_first@list+1,w,c
 38272  004D94  22DA               	addwfc	fsr2h,f,c
 38273  004D96  C009  FFDE         	movff	fat_list@fat_list_insert_first@node,postinc2
 38274  004D9A  C00A  FFDD         	movff	fat_list@fat_list_insert_first@node+1,postdec2
 38275                           
 38276                           ;fat_list.h: 116: node->previous = 0;
 38277  004D9E  C009  FFD9         	movff	fat_list@fat_list_insert_first@node,fsr2l
 38278  004DA2  C00A  FFDA         	movff	fat_list@fat_list_insert_first@node+1,fsr2h
 38279  004DA6  6ADE               	clrf	postinc2,c
 38280  004DA8  6ADD               	clrf	postdec2,c
 38281                           
 38282                           ;fat_list.h: 117: node->next = 0;
 38283  004DAA  EE20 F002          	lfsr	2,2
 38284  004DAE  5009               	movf	fat_list@fat_list_insert_first@node,w,c
 38285  004DB0  26D9               	addwf	fsr2l,f,c
 38286  004DB2  500A               	movf	fat_list@fat_list_insert_first@node+1,w,c
 38287  004DB4  22DA               	addwfc	fsr2h,f,c
 38288  004DB6  0E00               	movlw	0
 38289  004DB8  6EDE               	movwf	postinc2,c
 38290  004DBA  6EDD               	movwf	postdec2,c
 38291                           
 38292                           ;fat_list.h: 118: }
 38293  004DBC  D012               	goto	l391
 38294  004DBE                     l9442:
 38295                           
 38296                           ;fat_list.h: 119: else
 38297                           ;fat_list.h: 120: fat_list_insert_before(list, list->head, node);
 38298  004DBE  C008  F002         	movff	fat_list@fat_list_insert_first@list+1,fat_list@fat_list_insert_before@list+1
 38299  004DC2  C007  F001         	movff	fat_list@fat_list_insert_first@list,fat_list@fat_list_insert_before@list
 38300  004DC6  C007  FFD9         	movff	fat_list@fat_list_insert_first@list,fsr2l
 38301  004DCA  C008  FFDA         	movff	fat_list@fat_list_insert_first@list+1,fsr2h
 38302  004DCE  CFDE F003          	movff	postinc2,fat_list@fat_list_insert_before@node
 38303  004DD2  CFDD F004          	movff	postdec2,fat_list@fat_list_insert_before@node+1
 38304  004DD6  C00A  F006         	movff	fat_list@fat_list_insert_first@node+1,fat_list@fat_list_insert_before@new_node+1
 38305  004DDA  C009  F005         	movff	fat_list@fat_list_insert_first@node,fat_list@fat_list_insert_before@new_node
 38306  004DDE  ECF2  F026         	call	fat_list@fat_list_insert_before	;wreg free
 38307  004DE2                     l391:
 38308  004DE2  0012               	return	
 38309  004DE4                     __end_offat_list@fat_list_insert_first:
 38310                           	opt stack 0
 38311                           tosu	equ	0xFFF
 38312                           tosh	equ	0xFFE
 38313                           tosl	equ	0xFFD
 38314                           pclath	equ	0xFFA
 38315                           tblptru	equ	0xFF8
 38316                           tblptrh	equ	0xFF7
 38317                           tblptrl	equ	0xFF6
 38318                           tablat	equ	0xFF5
 38319                           prodh	equ	0xFF4
 38320                           prodl	equ	0xFF3
 38321                           indf0	equ	0xFEF
 38322                           postinc0	equ	0xFEE
 38323                           postdec0	equ	0xFED
 38324                           fsr0h	equ	0xFEA
 38325                           fsr0l	equ	0xFE9
 38326                           wreg	equ	0xFE8
 38327                           indf1	equ	0xFE7
 38328                           postinc1	equ	0xFE6
 38329                           postdec1	equ	0xFE5
 38330                           fsr1h	equ	0xFE2
 38331                           fsr1l	equ	0xFE1
 38332                           indf2	equ	0xFDF
 38333                           postinc2	equ	0xFDE
 38334                           postdec2	equ	0xFDD
 38335                           fsr2h	equ	0xFDA
 38336                           fsr2l	equ	0xFD9
 38337                           status	equ	0xFD8
 38338                           
 38339 ;; *************** function fat_list@fat_list_insert_before *****************
 38340 ;; Defined at:
 38341 ;;		line 90 in file "fat_list.h"
 38342 ;; Parameters:    Size  Location     Type
 38343 ;;  list            2    0[COMRAM] PTR struct fat_list
 38344 ;;		 -> _open_file_list(4), _free_file_list(4), 
 38345 ;;  node            2    2[COMRAM] PTR struct fat_node
 38346 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 38347 ;;  new_node        2    4[COMRAM] PTR struct fat_node
 38348 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 38349 ;; Auto vars:     Size  Location     Type
 38350 ;;		None
 38351 ;; Return value:  Size  Location     Type
 38352 ;;		None               void
 38353 ;; Registers used:
 38354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 38355 ;; Tracked objects:
 38356 ;;		On entry : 0/0
 38357 ;;		On exit  : 0/0
 38358 ;;		Unchanged: 0/0
 38359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38360 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38363 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38364 ;;Total ram usage:        6 bytes
 38365 ;; Hardware stack levels used:    1
 38366 ;; This function calls:
 38367 ;;		Nothing
 38368 ;; This function is called by:
 38369 ;;		fat_list@fat_list_insert_first
 38370 ;; This function uses a non-reentrant model
 38371 ;;
 38372                           
 38373                           	psect	text126
 38374  004DE4                     __ptext126:
 38375                           	opt stack 0
 38376  004DE4                     fat_list@fat_list_insert_before:
 38377                           	opt stack 26
 38378                           
 38379                           ;fat_list.h: 92: ;
 38380                           ;fat_list.h: 93: ;
 38381                           ;fat_list.h: 94: ;
 38382                           ;fat_list.h: 96: new_node->previous = node->previous;
 38383                           
 38384                           ;incstack = 0
 38385  004DE4  C003  FFD9         	movff	fat_list@fat_list_insert_before@node,fsr2l
 38386  004DE8  C004  FFDA         	movff	fat_list@fat_list_insert_before@node+1,fsr2h
 38387  004DEC  C005  FFE1         	movff	fat_list@fat_list_insert_before@new_node,fsr1l
 38388  004DF0  C006  FFE2         	movff	fat_list@fat_list_insert_before@new_node+1,fsr1h
 38389  004DF4  CFDE FFE6          	movff	postinc2,postinc1
 38390  004DF8  CFDD FFE5          	movff	postdec2,postdec1
 38391                           
 38392                           ;fat_list.h: 97: new_node->next = node;
 38393  004DFC  EE20 F002          	lfsr	2,2
 38394  004E00  5005               	movf	fat_list@fat_list_insert_before@new_node,w,c
 38395  004E02  26D9               	addwf	fsr2l,f,c
 38396  004E04  5006               	movf	fat_list@fat_list_insert_before@new_node+1,w,c
 38397  004E06  22DA               	addwfc	fsr2h,f,c
 38398  004E08  C003  FFDE         	movff	fat_list@fat_list_insert_before@node,postinc2
 38399  004E0C  C004  FFDD         	movff	fat_list@fat_list_insert_before@node+1,postdec2
 38400                           
 38401                           ;fat_list.h: 98: if (!node->previous)
 38402  004E10  C003  FFD9         	movff	fat_list@fat_list_insert_before@node,fsr2l
 38403  004E14  C004  FFDA         	movff	fat_list@fat_list_insert_before@node+1,fsr2h
 38404  004E18  50DE               	movf	postinc2,w,c
 38405  004E1A  10DD               	iorwf	postdec2,w,c
 38406  004E1C  E109               	bnz	l8910
 38407                           
 38408                           ;fat_list.h: 99: list->head = new_node;
 38409  004E1E  C001  FFD9         	movff	fat_list@fat_list_insert_before@list,fsr2l
 38410  004E22  C002  FFDA         	movff	fat_list@fat_list_insert_before@list+1,fsr2h
 38411  004E26  C005  FFDE         	movff	fat_list@fat_list_insert_before@new_node,postinc2
 38412  004E2A  C006  FFDD         	movff	fat_list@fat_list_insert_before@new_node+1,postdec2
 38413  004E2E  D00E               	goto	l8912
 38414  004E30                     l8910:
 38415                           
 38416                           ;fat_list.h: 100: else
 38417                           ;fat_list.h: 101: node->previous->next = new_node;
 38418  004E30  C003  FFD9         	movff	fat_list@fat_list_insert_before@node,fsr2l
 38419  004E34  C004  FFDA         	movff	fat_list@fat_list_insert_before@node+1,fsr2h
 38420  004E38  EE10 F002          	lfsr	1,2
 38421  004E3C  50DE               	movf	postinc2,w,c
 38422  004E3E  26E1               	addwf	fsr1l,f,c
 38423  004E40  50DD               	movf	postdec2,w,c
 38424  004E42  22E2               	addwfc	fsr1h,f,c
 38425  004E44  C005  FFE6         	movff	fat_list@fat_list_insert_before@new_node,postinc1
 38426  004E48  C006  FFE5         	movff	fat_list@fat_list_insert_before@new_node+1,postdec1
 38427  004E4C                     l8912:
 38428                           
 38429                           ;fat_list.h: 102: node->previous = new_node;
 38430  004E4C  C003  FFD9         	movff	fat_list@fat_list_insert_before@node,fsr2l
 38431  004E50  C004  FFDA         	movff	fat_list@fat_list_insert_before@node+1,fsr2h
 38432  004E54  C005  FFDE         	movff	fat_list@fat_list_insert_before@new_node,postinc2
 38433  004E58  C006  FFDD         	movff	fat_list@fat_list_insert_before@new_node+1,postdec2
 38434  004E5C  0012               	return	
 38435  004E5E                     __end_offat_list@fat_list_insert_before:
 38436                           	opt stack 0
 38437                           tosu	equ	0xFFF
 38438                           tosh	equ	0xFFE
 38439                           tosl	equ	0xFFD
 38440                           pclath	equ	0xFFA
 38441                           tblptru	equ	0xFF8
 38442                           tblptrh	equ	0xFF7
 38443                           tblptrl	equ	0xFF6
 38444                           tablat	equ	0xFF5
 38445                           prodh	equ	0xFF4
 38446                           prodl	equ	0xFF3
 38447                           indf0	equ	0xFEF
 38448                           postinc0	equ	0xFEE
 38449                           postdec0	equ	0xFED
 38450                           fsr0h	equ	0xFEA
 38451                           fsr0l	equ	0xFE9
 38452                           wreg	equ	0xFE8
 38453                           indf1	equ	0xFE7
 38454                           postinc1	equ	0xFE6
 38455                           postdec1	equ	0xFE5
 38456                           fsr1h	equ	0xFE2
 38457                           fsr1l	equ	0xFE1
 38458                           indf2	equ	0xFDF
 38459                           postinc2	equ	0xFDE
 38460                           postdec2	equ	0xFDD
 38461                           fsr2h	equ	0xFDA
 38462                           fsr2l	equ	0xFD9
 38463                           status	equ	0xFD8
 38464                           
 38465 ;; *************** function fat_list@fat_list_insert_after *****************
 38466 ;; Defined at:
 38467 ;;		line 73 in file "fat_list.h"
 38468 ;; Parameters:    Size  Location     Type
 38469 ;;  list            2    0[COMRAM] PTR struct fat_list
 38470 ;;		 -> _open_file_list(4), _free_file_list(4), 
 38471 ;;  node            2    2[COMRAM] PTR struct fat_node
 38472 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 38473 ;;  new_node        2    4[COMRAM] PTR struct fat_node
 38474 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 38475 ;; Auto vars:     Size  Location     Type
 38476 ;;		None
 38477 ;; Return value:  Size  Location     Type
 38478 ;;		None               void
 38479 ;; Registers used:
 38480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 38481 ;; Tracked objects:
 38482 ;;		On entry : 0/0
 38483 ;;		On exit  : 0/0
 38484 ;;		Unchanged: 0/0
 38485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38486 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38488 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38489 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38490 ;;Total ram usage:        8 bytes
 38491 ;; Hardware stack levels used:    1
 38492 ;; This function calls:
 38493 ;;		Nothing
 38494 ;; This function is called by:
 38495 ;;		fat_list@fat_list_insert_last
 38496 ;; This function uses a non-reentrant model
 38497 ;;
 38498                           
 38499                           	psect	text127
 38500  005160                     __ptext127:
 38501                           	opt stack 0
 38502  005160                     fat_list@fat_list_insert_after:
 38503                           	opt stack 27
 38504                           
 38505                           ;fat_list.h: 75: ;
 38506                           ;fat_list.h: 76: ;
 38507                           ;fat_list.h: 77: ;
 38508                           ;fat_list.h: 79: new_node->previous = node;
 38509                           
 38510                           ;incstack = 0
 38511  005160  C005  FFD9         	movff	fat_list@fat_list_insert_after@new_node,fsr2l
 38512  005164  C006  FFDA         	movff	fat_list@fat_list_insert_after@new_node+1,fsr2h
 38513  005168  C003  FFDE         	movff	fat_list@fat_list_insert_after@node,postinc2
 38514  00516C  C004  FFDD         	movff	fat_list@fat_list_insert_after@node+1,postdec2
 38515                           
 38516                           ;fat_list.h: 80: new_node->next = node->next;
 38517  005170  EE20 F002          	lfsr	2,2
 38518  005174  5003               	movf	fat_list@fat_list_insert_after@node,w,c
 38519  005176  26D9               	addwf	fsr2l,f,c
 38520  005178  5004               	movf	fat_list@fat_list_insert_after@node+1,w,c
 38521  00517A  22DA               	addwfc	fsr2h,f,c
 38522  00517C  EE10 F002          	lfsr	1,2
 38523  005180  5005               	movf	fat_list@fat_list_insert_after@new_node,w,c
 38524  005182  26E1               	addwf	fsr1l,f,c
 38525  005184  5006               	movf	fat_list@fat_list_insert_after@new_node+1,w,c
 38526  005186  22E2               	addwfc	fsr1h,f,c
 38527  005188  CFDE FFE6          	movff	postinc2,postinc1
 38528  00518C  CFDD FFE5          	movff	postdec2,postdec1
 38529                           
 38530                           ;fat_list.h: 81: if (!node->next)
 38531  005190  EE20 F002          	lfsr	2,2
 38532  005194  5003               	movf	fat_list@fat_list_insert_after@node,w,c
 38533  005196  26D9               	addwf	fsr2l,f,c
 38534  005198  5004               	movf	fat_list@fat_list_insert_after@node+1,w,c
 38535  00519A  22DA               	addwfc	fsr2h,f,c
 38536  00519C  50DE               	movf	postinc2,w,c
 38537  00519E  10DD               	iorwf	postdec2,w,c
 38538  0051A0  E107               	bnz	l9430
 38539                           
 38540                           ;fat_list.h: 82: list->tail = new_node;
 38541  0051A2  EE20 F002          	lfsr	2,2
 38542  0051A6  5001               	movf	fat_list@fat_list_insert_after@list,w,c
 38543  0051A8  26D9               	addwf	fsr2l,f,c
 38544  0051AA  5002               	movf	fat_list@fat_list_insert_after@list+1,w,c
 38545  0051AC  22DA               	addwfc	fsr2h,f,c
 38546  0051AE  D00E               	goto	L137
 38547  0051B0                     l9430:
 38548                           
 38549                           ;fat_list.h: 83: else
 38550                           ;fat_list.h: 84: node->next->previous = new_node;
 38551  0051B0  EE20 F002          	lfsr	2,2
 38552  0051B4  5003               	movf	fat_list@fat_list_insert_after@node,w,c
 38553  0051B6  26D9               	addwf	fsr2l,f,c
 38554  0051B8  5004               	movf	fat_list@fat_list_insert_after@node+1,w,c
 38555  0051BA  22DA               	addwfc	fsr2h,f,c
 38556  0051BC  CFDE F007          	movff	postinc2,??fat_list@fat_list_insert_after
 38557  0051C0  CFDD F008          	movff	postdec2,??fat_list@fat_list_insert_after+1
 38558  0051C4  C007  FFD9         	movff	??fat_list@fat_list_insert_after,fsr2l
 38559  0051C8  C008  FFDA         	movff	??fat_list@fat_list_insert_after+1,fsr2h
 38560  0051CC                     L137:
 38561  0051CC  C005  FFDE         	movff	fat_list@fat_list_insert_after@new_node,postinc2
 38562  0051D0  C006  FFDD         	movff	fat_list@fat_list_insert_after@new_node+1,postdec2
 38563                           
 38564                           ;fat_list.h: 85: node->next = new_node;
 38565  0051D4  EE20 F002          	lfsr	2,2
 38566  0051D8  5003               	movf	fat_list@fat_list_insert_after@node,w,c
 38567  0051DA  26D9               	addwf	fsr2l,f,c
 38568  0051DC  5004               	movf	fat_list@fat_list_insert_after@node+1,w,c
 38569  0051DE  22DA               	addwfc	fsr2h,f,c
 38570  0051E0  C005  FFDE         	movff	fat_list@fat_list_insert_after@new_node,postinc2
 38571  0051E4  C006  FFDD         	movff	fat_list@fat_list_insert_after@new_node+1,postdec2
 38572  0051E8  0012               	return	
 38573  0051EA                     __end_offat_list@fat_list_insert_after:
 38574                           	opt stack 0
 38575                           tosu	equ	0xFFF
 38576                           tosh	equ	0xFFE
 38577                           tosl	equ	0xFFD
 38578                           pclath	equ	0xFFA
 38579                           tblptru	equ	0xFF8
 38580                           tblptrh	equ	0xFF7
 38581                           tblptrl	equ	0xFF6
 38582                           tablat	equ	0xFF5
 38583                           prodh	equ	0xFF4
 38584                           prodl	equ	0xFF3
 38585                           indf0	equ	0xFEF
 38586                           postinc0	equ	0xFEE
 38587                           postdec0	equ	0xFED
 38588                           fsr0h	equ	0xFEA
 38589                           fsr0l	equ	0xFE9
 38590                           wreg	equ	0xFE8
 38591                           indf1	equ	0xFE7
 38592                           postinc1	equ	0xFE6
 38593                           postdec1	equ	0xFE5
 38594                           fsr1h	equ	0xFE2
 38595                           fsr1l	equ	0xFE1
 38596                           indf2	equ	0xFDF
 38597                           postinc2	equ	0xFDE
 38598                           postdec2	equ	0xFDD
 38599                           fsr2h	equ	0xFDA
 38600                           fsr2l	equ	0xFD9
 38601                           status	equ	0xFD8
 38602                           
 38603 ;; *************** function _Switch *****************
 38604 ;; Defined at:
 38605 ;;		line 331 in file "main.c"
 38606 ;; Parameters:    Size  Location     Type
 38607 ;;  c               1    wreg     unsigned char 
 38608 ;; Auto vars:     Size  Location     Type
 38609 ;;  c               1   26[COMRAM] unsigned char 
 38610 ;;  exit            5   21[COMRAM] unsigned char [5]
 38611 ;; Return value:  Size  Location     Type
 38612 ;;                  1    wreg      unsigned char 
 38613 ;; Registers used:
 38614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38615 ;; Tracked objects:
 38616 ;;		On entry : 0/0
 38617 ;;		On exit  : 0/0
 38618 ;;		Unchanged: 0/0
 38619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38621 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38623 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38624 ;;Total ram usage:        6 bytes
 38625 ;; Hardware stack levels used:    1
 38626 ;; Hardware stack levels required when called:    4
 38627 ;; This function calls:
 38628 ;;		_Check_extension
 38629 ;;		_Format_string
 38630 ;;		_Write_str
 38631 ;;		_strcmp
 38632 ;; This function is called by:
 38633 ;;		_File_write
 38634 ;;		_File_append
 38635 ;;		_File_read
 38636 ;;		_File_delete
 38637 ;;		_Create_folder
 38638 ;;		_Open_dir
 38639 ;;		_File_read_
 38640 ;; This function uses a non-reentrant model
 38641 ;;
 38642                           
 38643                           	psect	text128
 38644  006026                     __ptext128:
 38645                           	opt stack 0
 38646  006026                     _Switch:
 38647                           	opt stack 25
 38648                           
 38649                           ;incstack = 0
 38650                           ;Switch@c stored from wreg
 38651  006026  6E1B               	movwf	Switch@c,c
 38652                           
 38653                           ;main.c: 333: unsigned char exit[5]="exit";
 38654  006028  EE21  F0E8         	lfsr	2,Switch@F4803
 38655  00602C  EE10  F016         	lfsr	1,Switch@exit
 38656  006030  0E05               	movlw	5
 38657  006032                     u15181:
 38658  006032  CFDE FFE6          	movff	postinc2,postinc1
 38659  006036  2EE8               	decfsz	wreg,f,c
 38660  006038  D7FC               	goto	u15181
 38661                           
 38662                           ;main.c: 334: i=0;
 38663  00603A  0101               	movlb	1	; () banked
 38664  00603C  6B9C               	clrf	(_i+1)& (0+255),b
 38665  00603E  6B9B               	clrf	_i& (0+255),b
 38666                           
 38667                           ; BSR set to: 1
 38668                           ;main.c: 335: if(!(strcmp(string, exit)))
 38669  006040  0E01               	movlw	high _string
 38670  006042  6E02               	movwf	strcmp@s1+1,c
 38671  006044  0EAF               	movlw	low _string
 38672  006046  6E01               	movwf	strcmp@s1,c
 38673  006048  0E00               	movlw	high Switch@exit
 38674  00604A  6E04               	movwf	strcmp@s2+1,c
 38675  00604C  0E16               	movlw	low Switch@exit
 38676  00604E  6E03               	movwf	strcmp@s2,c
 38677  006050  EC80  F029         	call	_strcmp	;wreg free
 38678  006054  5002               	movf	?_strcmp+1,w,c
 38679  006056  1001               	iorwf	?_strcmp,w,c
 38680  006058  E109               	bnz	l12644
 38681                           
 38682                           ;main.c: 336: {
 38683                           ;main.c: 337: Write_str(string);
 38684  00605A  0E01               	movlw	high _string
 38685  00605C  6E07               	movwf	Write_str@str+1,c
 38686  00605E  0101               	movlb	1	; () banked
 38687  006060  0EAF               	movlw	low _string
 38688  006062  6E06               	movwf	Write_str@str,c
 38689  006064  EC3C  F01F         	call	_Write_str	;wreg free
 38690                           
 38691                           ;main.c: 338: return(2);
 38692  006068  0E02               	movlw	2
 38693  00606A  D05C               	goto	l1678
 38694  00606C                     l12644:
 38695                           
 38696                           ;main.c: 340: else if(c=='w')
 38697  00606C  501B               	movf	Switch@c,w,c
 38698  00606E  0A77               	xorlw	119
 38699  006070  E004               	bz	l12650
 38700  006072  D04A               	goto	l12680
 38701  006074                     l12648:
 38702                           
 38703                           ;main.c: 343: i++;
 38704  006074  0101               	movlb	1	; () banked
 38705  006076  4B9B               	infsnz	_i& (0+255),f,b
 38706  006078  2B9C               	incf	(_i+1)& (0+255),f,b
 38707  00607A                     l12650:
 38708  00607A  0EAF               	movlw	low _string
 38709  00607C  0101               	movlb	1	; () banked
 38710  00607E  259B               	addwf	_i& (0+255),w,b
 38711  006080  6ED9               	movwf	fsr2l,c
 38712  006082  0E01               	movlw	high _string
 38713  006084  219C               	addwfc	(_i+1)& (0+255),w,b
 38714  006086  6EDA               	movwf	fsr2h,c
 38715  006088  50DF               	movf	indf2,w,c
 38716  00608A  0A2E               	xorlw	46
 38717  00608C  E008               	bz	l12654
 38718                           
 38719                           ; BSR set to: 1
 38720  00608E  0EAF               	movlw	low _string
 38721  006090  259B               	addwf	_i& (0+255),w,b
 38722  006092  6ED9               	movwf	fsr2l,c
 38723  006094  0E01               	movlw	high _string
 38724  006096  219C               	addwfc	(_i+1)& (0+255),w,b
 38725  006098  6EDA               	movwf	fsr2h,c
 38726  00609A  50DF               	movf	indf2,w,c
 38727  00609C  E1EB               	bnz	l12648
 38728  00609E                     l12654:
 38729                           
 38730                           ; BSR set to: 1
 38731                           ;main.c: 344: if(string[i] == '.')
 38732  00609E  0EAF               	movlw	low _string
 38733  0060A0  0101               	movlb	1	; () banked
 38734  0060A2  259B               	addwf	_i& (0+255),w,b
 38735  0060A4  6ED9               	movwf	fsr2l,c
 38736  0060A6  0E01               	movlw	high _string
 38737  0060A8  219C               	addwfc	(_i+1)& (0+255),w,b
 38738  0060AA  6EDA               	movwf	fsr2h,c
 38739  0060AC  0E2E               	movlw	46
 38740  0060AE  62DF               	cpfseq	indf2,c
 38741  0060B0  D023               	goto	l12674
 38742                           
 38743                           ; BSR set to: 1
 38744                           ;main.c: 345: {
 38745                           ;main.c: 346: i++;
 38746  0060B2  4B9B               	infsnz	_i& (0+255),f,b
 38747  0060B4  2B9C               	incf	(_i+1)& (0+255),f,b
 38748                           
 38749                           ; BSR set to: 1
 38750                           ;main.c: 347: if(Check_extension(string+i, string))
 38751  0060B6  0EAF               	movlw	low _string
 38752  0060B8  259B               	addwf	_i& (0+255),w,b
 38753  0060BA  6E0A               	movwf	Check_extension@xtn,c
 38754  0060BC  0E01               	movlw	high _string
 38755  0060BE  219C               	addwfc	(_i+1)& (0+255),w,b
 38756  0060C0  6E0B               	movwf	Check_extension@xtn+1,c
 38757  0060C2  0EAF               	movlw	low _string
 38758  0060C4  6E0C               	movwf	Check_extension@str_1,c
 38759  0060C6  ECC7  F029         	call	_Check_extension	;wreg free
 38760  0060CA  0900               	iorlw	0
 38761  0060CC  E00E               	bz	l12668
 38762                           
 38763                           ;main.c: 348: {
 38764                           ;main.c: 349: Format_string(m, string, 'w');
 38765  0060CE  0E02               	movlw	high _m
 38766  0060D0  6E02               	movwf	Format_string@buf_1+1,c
 38767  0060D2  0E89               	movlw	low _m
 38768  0060D4  6E01               	movwf	Format_string@buf_1,c
 38769  0060D6  0E01               	movlw	high _string
 38770  0060D8  6E04               	movwf	Format_string@buf_2+1,c
 38771  0060DA  0101               	movlb	1	; () banked
 38772  0060DC  0EAF               	movlw	low _string
 38773  0060DE  6E03               	movwf	Format_string@buf_2,c
 38774  0060E0  0E77               	movlw	119
 38775  0060E2  6E05               	movwf	Format_string@c,c
 38776  0060E4  EC2A  F028         	call	_Format_string	;wreg free
 38777  0060E8  D01C               	goto	L138
 38778  0060EA                     l12668:
 38779                           
 38780                           ;main.c: 352: else
 38781                           ;main.c: 353: {
 38782                           ;main.c: 354: Write_str("\n\rFile extension error!");
 38783  0060EA  0EFE               	movlw	high STR_15
 38784  0060EC  6E07               	movwf	Write_str@str+1,c
 38785  0060EE  0E68               	movlw	low STR_15
 38786  0060F0  6E06               	movwf	Write_str@str,c
 38787  0060F2  EC3C  F01F         	call	_Write_str	;wreg free
 38788  0060F6  D006               	goto	L139
 38789  0060F8                     l12674:
 38790                           
 38791                           ;main.c: 358: else
 38792                           ;main.c: 359: {
 38793                           ;main.c: 360: Write_str("\n\rFile extension error!");
 38794  0060F8  0EFE               	movlw	high STR_15
 38795  0060FA  6E07               	movwf	Write_str@str+1,c
 38796  0060FC  0E68               	movlw	low STR_15
 38797  0060FE  6E06               	movwf	Write_str@str,c
 38798  006100  EC3C  F01F         	call	_Write_str	;wreg free
 38799  006104                     L139:
 38800                           
 38801                           ;main.c: 361: return(0);
 38802  006104  0E00               	movlw	0
 38803  006106  D00E               	goto	l1678
 38804  006108                     l12680:
 38805                           
 38806                           ;main.c: 364: else
 38807                           ;main.c: 365: {
 38808                           ;main.c: 366: Format_string(m, string, 'r');
 38809  006108  0E02               	movlw	high _m
 38810  00610A  6E02               	movwf	Format_string@buf_1+1,c
 38811  00610C  0E89               	movlw	low _m
 38812  00610E  6E01               	movwf	Format_string@buf_1,c
 38813  006110  0E01               	movlw	high _string
 38814  006112  6E04               	movwf	Format_string@buf_2+1,c
 38815  006114  0101               	movlb	1	; () banked
 38816  006116  0EAF               	movlw	low _string
 38817  006118  6E03               	movwf	Format_string@buf_2,c
 38818  00611A  0E72               	movlw	114
 38819  00611C  6E05               	movwf	Format_string@c,c
 38820  00611E  EC2A  F028         	call	_Format_string	;wreg free
 38821  006122                     L138:
 38822                           
 38823                           ;main.c: 367: return (1);
 38824  006122  0E01               	movlw	1
 38825  006124                     l1678:
 38826  006124  0012               	return	
 38827  006126                     __end_of_Switch:
 38828                           	opt stack 0
 38829                           tosu	equ	0xFFF
 38830                           tosh	equ	0xFFE
 38831                           tosl	equ	0xFFD
 38832                           pclath	equ	0xFFA
 38833                           tblptru	equ	0xFF8
 38834                           tblptrh	equ	0xFF7
 38835                           tblptrl	equ	0xFF6
 38836                           tablat	equ	0xFF5
 38837                           prodh	equ	0xFF4
 38838                           prodl	equ	0xFF3
 38839                           indf0	equ	0xFEF
 38840                           postinc0	equ	0xFEE
 38841                           postdec0	equ	0xFED
 38842                           fsr0h	equ	0xFEA
 38843                           fsr0l	equ	0xFE9
 38844                           wreg	equ	0xFE8
 38845                           indf1	equ	0xFE7
 38846                           postinc1	equ	0xFE6
 38847                           postdec1	equ	0xFE5
 38848                           fsr1h	equ	0xFE2
 38849                           fsr1l	equ	0xFE1
 38850                           indf2	equ	0xFDF
 38851                           postinc2	equ	0xFDE
 38852                           postdec2	equ	0xFDD
 38853                           fsr2h	equ	0xFDA
 38854                           fsr2l	equ	0xFD9
 38855                           status	equ	0xFD8
 38856                           
 38857 ;; *************** function _strcmp *****************
 38858 ;; Defined at:
 38859 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strcmp.c"
 38860 ;; Parameters:    Size  Location     Type
 38861 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 38862 ;;		 -> string(30), 
 38863 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 38864 ;;		 -> Switch@exit(5), 
 38865 ;; Auto vars:     Size  Location     Type
 38866 ;;  t1              1    8[COMRAM] unsigned char 
 38867 ;;  t2              1    7[COMRAM] unsigned char 
 38868 ;;  t0              1    6[COMRAM] unsigned char 
 38869 ;; Return value:  Size  Location     Type
 38870 ;;                  2    0[COMRAM] int 
 38871 ;; Registers used:
 38872 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38873 ;; Tracked objects:
 38874 ;;		On entry : 0/0
 38875 ;;		On exit  : 0/0
 38876 ;;		Unchanged: 0/0
 38877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38879 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38880 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38881 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38882 ;;Total ram usage:        9 bytes
 38883 ;; Hardware stack levels used:    1
 38884 ;; This function calls:
 38885 ;;		Nothing
 38886 ;; This function is called by:
 38887 ;;		_Switch
 38888 ;; This function uses a non-reentrant model
 38889 ;;
 38890                           
 38891                           	psect	text129
 38892  005300                     __ptext129:
 38893                           	opt stack 0
 38894  005300                     _strcmp:
 38895                           	opt stack 28
 38896                           
 38897                           ;incstack = 0
 38898  005300  C001  FFD9         	movff	strcmp@s1,fsr2l
 38899  005304  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 38900  005308  50DF               	movf	indf2,w,c
 38901  00530A  6E07               	movwf	strcmp@t0,c
 38902  00530C  C003  FFD9         	movff	strcmp@s2,fsr2l
 38903  005310  C004  FFDA         	movff	strcmp@s2+1,fsr2h
 38904  005314  50DF               	movf	indf2,w,c
 38905  005316  6E09               	movwf	strcmp@t1,c
 38906  005318  6607               	tstfsz	strcmp@t0,c
 38907  00531A  D001               	goto	l12144
 38908  00531C  D02A               	goto	l12168
 38909  00531E                     l12144:
 38910  00531E  0E02               	movlw	2
 38911  005320  2601               	addwf	strcmp@s1,f,c
 38912  005322  0E00               	movlw	0
 38913  005324  2202               	addwfc	strcmp@s1+1,f,c
 38914  005326  5007               	movf	strcmp@t0,w,c
 38915  005328  1809               	xorwf	strcmp@t1,w,c
 38916  00532A  E123               	bnz	l12168
 38917  00532C  EE2F F0FF          	lfsr	2,-1
 38918  005330  5001               	movf	strcmp@s1,w,c
 38919  005332  26D9               	addwf	fsr2l,f,c
 38920  005334  5002               	movf	strcmp@s1+1,w,c
 38921  005336  22DA               	addwfc	fsr2h,f,c
 38922  005338  50DF               	movf	indf2,w,c
 38923  00533A  6E08               	movwf	strcmp@t2,c
 38924  00533C  EE20 F001          	lfsr	2,1
 38925  005340  5003               	movf	strcmp@s2,w,c
 38926  005342  26D9               	addwf	fsr2l,f,c
 38927  005344  5004               	movf	strcmp@s2+1,w,c
 38928  005346  22DA               	addwfc	fsr2h,f,c
 38929  005348  50DF               	movf	indf2,w,c
 38930  00534A  6E09               	movwf	strcmp@t1,c
 38931  00534C  6608               	tstfsz	strcmp@t2,c
 38932  00534E  D001               	goto	l12158
 38933  005350  D007               	goto	u14440
 38934  005352                     l12158:
 38935  005352  0E02               	movlw	2
 38936  005354  2603               	addwf	strcmp@s2,f,c
 38937  005356  0E00               	movlw	0
 38938  005358  2204               	addwfc	strcmp@s2+1,f,c
 38939  00535A  5009               	movf	strcmp@t1,w,c
 38940  00535C  1808               	xorwf	strcmp@t2,w,c
 38941  00535E  E0D0               	bz	_strcmp
 38942  005360                     u14440:
 38943  005360  5009               	movf	strcmp@t1,w,c
 38944  005362  6E05               	movwf	??_strcmp& (0+255),c
 38945  005364  6A06               	clrf	(??_strcmp+1)& (0+255),c
 38946  005366  1E05               	comf	??_strcmp,f,c
 38947  005368  1E06               	comf	??_strcmp+1,f,c
 38948  00536A  4A05               	infsnz	??_strcmp,f,c
 38949  00536C  2A06               	incf	??_strcmp+1,f,c
 38950  00536E  5008               	movf	strcmp@t2,w,c
 38951  005370  D008               	goto	L140
 38952  005372                     l12168:
 38953  005372  5009               	movf	strcmp@t1,w,c
 38954  005374  6E05               	movwf	??_strcmp& (0+255),c
 38955  005376  6A06               	clrf	(??_strcmp+1)& (0+255),c
 38956  005378  1E05               	comf	??_strcmp,f,c
 38957  00537A  1E06               	comf	??_strcmp+1,f,c
 38958  00537C  4A05               	infsnz	??_strcmp,f,c
 38959  00537E  2A06               	incf	??_strcmp+1,f,c
 38960  005380  5007               	movf	strcmp@t0,w,c
 38961  005382                     L140:
 38962  005382  2405               	addwf	??_strcmp,w,c
 38963  005384  6E01               	movwf	?_strcmp,c
 38964  005386  0E00               	movlw	0
 38965  005388  2006               	addwfc	??_strcmp+1,w,c
 38966  00538A  6E02               	movwf	?_strcmp+1,c
 38967  00538C  0012               	return	
 38968  00538E                     __end_of_strcmp:
 38969                           	opt stack 0
 38970                           tosu	equ	0xFFF
 38971                           tosh	equ	0xFFE
 38972                           tosl	equ	0xFFD
 38973                           pclath	equ	0xFFA
 38974                           tblptru	equ	0xFF8
 38975                           tblptrh	equ	0xFF7
 38976                           tblptrl	equ	0xFF6
 38977                           tablat	equ	0xFF5
 38978                           prodh	equ	0xFF4
 38979                           prodl	equ	0xFF3
 38980                           indf0	equ	0xFEF
 38981                           postinc0	equ	0xFEE
 38982                           postdec0	equ	0xFED
 38983                           fsr0h	equ	0xFEA
 38984                           fsr0l	equ	0xFE9
 38985                           wreg	equ	0xFE8
 38986                           indf1	equ	0xFE7
 38987                           postinc1	equ	0xFE6
 38988                           postdec1	equ	0xFE5
 38989                           fsr1h	equ	0xFE2
 38990                           fsr1l	equ	0xFE1
 38991                           indf2	equ	0xFDF
 38992                           postinc2	equ	0xFDE
 38993                           postdec2	equ	0xFDD
 38994                           fsr2h	equ	0xFDA
 38995                           fsr2l	equ	0xFD9
 38996                           status	equ	0xFD8
 38997                           
 38998 ;; *************** function _Format_string *****************
 38999 ;; Defined at:
 39000 ;;		line 310 in file "main.c"
 39001 ;; Parameters:    Size  Location     Type
 39002 ;;  buf_1           2    0[COMRAM] PTR unsigned char 
 39003 ;;		 -> m(30), 
 39004 ;;  buf_2           2    2[COMRAM] PTR unsigned char 
 39005 ;;		 -> string(30), 
 39006 ;;  c               1    4[COMRAM] unsigned char 
 39007 ;; Auto vars:     Size  Location     Type
 39008 ;;		None
 39009 ;; Return value:  Size  Location     Type
 39010 ;;		None               void
 39011 ;; Registers used:
 39012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 39013 ;; Tracked objects:
 39014 ;;		On entry : 0/0
 39015 ;;		On exit  : 0/0
 39016 ;;		Unchanged: 0/0
 39017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39018 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39021 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39022 ;;Total ram usage:        5 bytes
 39023 ;; Hardware stack levels used:    1
 39024 ;; This function calls:
 39025 ;;		Nothing
 39026 ;; This function is called by:
 39027 ;;		_Switch
 39028 ;; This function uses a non-reentrant model
 39029 ;;
 39030                           
 39031                           	psect	text130
 39032  005054                     __ptext130:
 39033                           	opt stack 0
 39034  005054                     _Format_string:
 39035                           	opt stack 28
 39036                           
 39037                           ;main.c: 312: *buf_1 = '/';
 39038                           
 39039                           ;incstack = 0
 39040  005054  C001  FFD9         	movff	Format_string@buf_1,fsr2l
 39041  005058  C002  FFDA         	movff	Format_string@buf_1+1,fsr2h
 39042  00505C  0E2F               	movlw	47
 39043  00505E  6EDF               	movwf	indf2,c
 39044                           
 39045                           ;main.c: 313: buf_1++;
 39046  005060  4A01               	infsnz	Format_string@buf_1,f,c
 39047  005062  2A02               	incf	Format_string@buf_1+1,f,c
 39048                           
 39049                           ;main.c: 314: for(i=0;*buf_2!='\0';i++)
 39050  005064  0E00               	movlw	0
 39051  005066  0101               	movlb	1	; () banked
 39052  005068  6F9C               	movwf	(_i+1)& (0+255),b
 39053  00506A  6F9B               	movwf	_i& (0+255),b
 39054  00506C  D028               	goto	l12134
 39055  00506E                     l12116:
 39056                           
 39057                           ; BSR set to: 1
 39058                           ;main.c: 315: {
 39059                           ;main.c: 316: if(*buf_2=='.')
 39060  00506E  0E2E               	movlw	46
 39061  005070  C003  FFD9         	movff	Format_string@buf_2,fsr2l
 39062  005074  C004  FFDA         	movff	Format_string@buf_2+1,fsr2h
 39063  005078  62DF               	cpfseq	indf2,c
 39064  00507A  D010               	goto	l12126
 39065                           
 39066                           ; BSR set to: 1
 39067                           ;main.c: 317: {
 39068                           ;main.c: 318: if((c == 'r') || (c == 'd') || (c=='n'))
 39069  00507C  5005               	movf	Format_string@c,w,c
 39070  00507E  0A72               	xorlw	114
 39071  005080  E006               	bz	l12124
 39072                           
 39073                           ; BSR set to: 1
 39074  005082  5005               	movf	Format_string@c,w,c
 39075  005084  0A64               	xorlw	100
 39076  005086  E003               	bz	l12124
 39077                           
 39078                           ; BSR set to: 1
 39079  005088  5005               	movf	Format_string@c,w,c
 39080  00508A  0A6E               	xorlw	110
 39081  00508C  E107               	bnz	l12126
 39082  00508E                     l12124:
 39083                           
 39084                           ; BSR set to: 1
 39085                           ;main.c: 319: {
 39086                           ;main.c: 320: *buf_1='\0';
 39087  00508E  C001  FFD9         	movff	Format_string@buf_1,fsr2l
 39088  005092  C002  FFDA         	movff	Format_string@buf_1+1,fsr2h
 39089  005096  0E00               	movlw	0
 39090  005098  6EDF               	movwf	indf2,c
 39091                           
 39092                           ;main.c: 321: break;
 39093  00509A  D017               	goto	l12136
 39094  00509C                     l12126:
 39095                           
 39096                           ; BSR set to: 1
 39097                           ;main.c: 322: }
 39098                           ;main.c: 323: }
 39099                           ;main.c: 324: *buf_1 = *buf_2;
 39100  00509C  C003  FFD9         	movff	Format_string@buf_2,fsr2l
 39101  0050A0  C004  FFDA         	movff	Format_string@buf_2+1,fsr2h
 39102  0050A4  C001  FFE1         	movff	Format_string@buf_1,fsr1l
 39103  0050A8  C002  FFE2         	movff	Format_string@buf_1+1,fsr1h
 39104  0050AC  CFDF FFE7          	movff	indf2,indf1
 39105                           
 39106                           ; BSR set to: 1
 39107                           ;main.c: 325: buf_1++;
 39108  0050B0  4A01               	infsnz	Format_string@buf_1,f,c
 39109  0050B2  2A02               	incf	Format_string@buf_1+1,f,c
 39110                           
 39111                           ; BSR set to: 1
 39112                           ;main.c: 326: buf_2++;
 39113  0050B4  4A03               	infsnz	Format_string@buf_2,f,c
 39114  0050B6  2A04               	incf	Format_string@buf_2+1,f,c
 39115                           
 39116                           ; BSR set to: 1
 39117  0050B8  0101               	movlb	1	; () banked
 39118  0050BA  4B9B               	infsnz	_i& (0+255),f,b
 39119  0050BC  2B9C               	incf	(_i+1)& (0+255),f,b
 39120  0050BE                     l12134:
 39121                           
 39122                           ; BSR set to: 1
 39123  0050BE  C003  FFD9         	movff	Format_string@buf_2,fsr2l
 39124  0050C2  C004  FFDA         	movff	Format_string@buf_2+1,fsr2h
 39125  0050C6  50DF               	movf	indf2,w,c
 39126  0050C8  E1D2               	bnz	l12116
 39127  0050CA                     l12136:
 39128                           
 39129                           ; BSR set to: 1
 39130                           ;main.c: 327: }
 39131                           ;main.c: 328: *buf_1 = '\0';
 39132  0050CA  C001  FFD9         	movff	Format_string@buf_1,fsr2l
 39133  0050CE  C002  FFDA         	movff	Format_string@buf_1+1,fsr2h
 39134  0050D2  0E00               	movlw	0
 39135  0050D4  6EDF               	movwf	indf2,c
 39136                           
 39137                           ; BSR set to: 1
 39138  0050D6  0C00               	retlw	0
 39139  0050D8                     __end_of_Format_string:
 39140                           	opt stack 0
 39141                           tosu	equ	0xFFF
 39142                           tosh	equ	0xFFE
 39143                           tosl	equ	0xFFD
 39144                           pclath	equ	0xFFA
 39145                           tblptru	equ	0xFF8
 39146                           tblptrh	equ	0xFF7
 39147                           tblptrl	equ	0xFF6
 39148                           tablat	equ	0xFF5
 39149                           prodh	equ	0xFF4
 39150                           prodl	equ	0xFF3
 39151                           indf0	equ	0xFEF
 39152                           postinc0	equ	0xFEE
 39153                           postdec0	equ	0xFED
 39154                           fsr0h	equ	0xFEA
 39155                           fsr0l	equ	0xFE9
 39156                           wreg	equ	0xFE8
 39157                           indf1	equ	0xFE7
 39158                           postinc1	equ	0xFE6
 39159                           postdec1	equ	0xFE5
 39160                           fsr1h	equ	0xFE2
 39161                           fsr1l	equ	0xFE1
 39162                           indf2	equ	0xFDF
 39163                           postinc2	equ	0xFDE
 39164                           postdec2	equ	0xFDD
 39165                           fsr2h	equ	0xFDA
 39166                           fsr2l	equ	0xFD9
 39167                           status	equ	0xFD8
 39168                           
 39169 ;; *************** function _Check_extension *****************
 39170 ;; Defined at:
 39171 ;;		line 295 in file "main.c"
 39172 ;; Parameters:    Size  Location     Type
 39173 ;;  xtn             2    9[COMRAM] PTR unsigned char 
 39174 ;;		 -> string(30), 
 39175 ;;  str_1           1   11[COMRAM] unsigned char 
 39176 ;; Auto vars:     Size  Location     Type
 39177 ;;  s_2             4   16[COMRAM] unsigned char [4]
 39178 ;;  s_1             4   12[COMRAM] unsigned char [4]
 39179 ;;  j               1   20[COMRAM] unsigned char 
 39180 ;; Return value:  Size  Location     Type
 39181 ;;                  1    wreg      unsigned char 
 39182 ;; Registers used:
 39183 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39184 ;; Tracked objects:
 39185 ;;		On entry : 0/0
 39186 ;;		On exit  : 0/0
 39187 ;;		Unchanged: 0/0
 39188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39189 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39190 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39192 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39193 ;;Total ram usage:       12 bytes
 39194 ;; Hardware stack levels used:    1
 39195 ;; Hardware stack levels required when called:    3
 39196 ;; This function calls:
 39197 ;;		_Write_str
 39198 ;;		_strncmp
 39199 ;; This function is called by:
 39200 ;;		_Switch
 39201 ;; This function uses a non-reentrant model
 39202 ;;
 39203                           
 39204                           	psect	text131
 39205  00538E                     __ptext131:
 39206                           	opt stack 0
 39207  00538E                     _Check_extension:
 39208                           	opt stack 25
 39209                           
 39210                           ;main.c: 297: unsigned char s_1[4]= "bin", s_2[4]="txt", j;
 39211                           
 39212                           ; BSR set to: 1
 39213                           ;incstack = 0
 39214  00538E  C1ED  F00D         	movff	Check_extension@F4792,Check_extension@s_1
 39215  005392  C1EE  F00E         	movff	Check_extension@F4792+1,Check_extension@s_1+1
 39216  005396  C1EF  F00F         	movff	Check_extension@F4792+2,Check_extension@s_1+2
 39217  00539A  C1F0  F010         	movff	Check_extension@F4792+3,Check_extension@s_1+3
 39218  00539E  C1F1  F011         	movff	Check_extension@F4794,Check_extension@s_2
 39219  0053A2  C1F2  F012         	movff	Check_extension@F4794+1,Check_extension@s_2+1
 39220  0053A6  C1F3  F013         	movff	Check_extension@F4794+2,Check_extension@s_2+2
 39221  0053AA  C1F4  F014         	movff	Check_extension@F4794+3,Check_extension@s_2+3
 39222                           
 39223                           ;main.c: 298: if(!(strncmp(xtn, s_1, 3)) || !(strncmp(xtn, s_2, 3)))
 39224  0053AE  C00B  F002         	movff	Check_extension@xtn+1,strncmp@s1+1
 39225  0053B2  C00A  F001         	movff	Check_extension@xtn,strncmp@s1
 39226  0053B6  0E00               	movlw	high Check_extension@s_1
 39227  0053B8  6E04               	movwf	strncmp@s2+1,c
 39228  0053BA  0E0D               	movlw	low Check_extension@s_1
 39229  0053BC  6E03               	movwf	strncmp@s2,c
 39230  0053BE  6A06               	clrf	strncmp@len+1,c
 39231  0053C0  0E03               	movlw	3
 39232  0053C2  6E05               	movwf	strncmp@len,c
 39233  0053C4  EC07  F026         	call	_strncmp	;wreg free
 39234  0053C8  5002               	movf	?_strncmp+1,w,c
 39235  0053CA  1001               	iorwf	?_strncmp,w,c
 39236  0053CC  E010               	bz	l12086
 39237  0053CE  C00B  F002         	movff	Check_extension@xtn+1,strncmp@s1+1
 39238  0053D2  C00A  F001         	movff	Check_extension@xtn,strncmp@s1
 39239  0053D6  0E00               	movlw	high Check_extension@s_2
 39240  0053D8  6E04               	movwf	strncmp@s2+1,c
 39241  0053DA  0E11               	movlw	low Check_extension@s_2
 39242  0053DC  6E03               	movwf	strncmp@s2,c
 39243  0053DE  6A06               	clrf	strncmp@len+1,c
 39244  0053E0  0E03               	movlw	3
 39245  0053E2  6E05               	movwf	strncmp@len,c
 39246  0053E4  EC07  F026         	call	_strncmp	;wreg free
 39247  0053E8  5002               	movf	?_strncmp+1,w,c
 39248  0053EA  1001               	iorwf	?_strncmp,w,c
 39249  0053EC  E111               	bnz	l12104
 39250  0053EE                     l12086:
 39251                           
 39252                           ;main.c: 299: {
 39253                           ;main.c: 300: for(j=0;j<3;j++)
 39254  0053EE  0E00               	movlw	0
 39255  0053F0  6E15               	movwf	Check_extension@j,c
 39256  0053F2  D003               	goto	L141
 39257  0053F4                     l12092:
 39258                           
 39259                           ;main.c: 301: xtn++;
 39260  0053F4  4A0A               	infsnz	Check_extension@xtn,f,c
 39261  0053F6  2A0B               	incf	Check_extension@xtn+1,f,c
 39262  0053F8  2A15               	incf	Check_extension@j,f,c
 39263  0053FA                     L141:
 39264  0053FA  0E02               	movlw	2
 39265  0053FC  6415               	cpfsgt	Check_extension@j,c
 39266  0053FE  D7FA               	goto	l12092
 39267                           
 39268                           ;main.c: 302: *xtn = '\0';
 39269  005400  C00A  FFD9         	movff	Check_extension@xtn,fsr2l
 39270  005404  C00B  FFDA         	movff	Check_extension@xtn+1,fsr2h
 39271  005408  0E00               	movlw	0
 39272  00540A  6EDF               	movwf	indf2,c
 39273                           
 39274                           ;main.c: 303: return(1);
 39275  00540C  0E01               	movlw	1
 39276  00540E  D007               	goto	l1661
 39277  005410                     l12104:
 39278                           
 39279                           ;main.c: 305: else
 39280                           ;main.c: 306: Write_str("\n\rExtension Failed");
 39281  005410  0EFF               	movlw	high STR_14
 39282  005412  6E07               	movwf	Write_str@str+1,c
 39283  005414  0E3D               	movlw	low STR_14
 39284  005416  6E06               	movwf	Write_str@str,c
 39285  005418  EC3C  F01F         	call	_Write_str	;wreg free
 39286                           
 39287                           ;main.c: 307: return(0);
 39288  00541C  0E00               	movlw	0
 39289  00541E                     l1661:
 39290  00541E  0012               	return	
 39291  005420                     __end_of_Check_extension:
 39292                           	opt stack 0
 39293                           tosu	equ	0xFFF
 39294                           tosh	equ	0xFFE
 39295                           tosl	equ	0xFFD
 39296                           pclath	equ	0xFFA
 39297                           tblptru	equ	0xFF8
 39298                           tblptrh	equ	0xFF7
 39299                           tblptrl	equ	0xFF6
 39300                           tablat	equ	0xFF5
 39301                           prodh	equ	0xFF4
 39302                           prodl	equ	0xFF3
 39303                           indf0	equ	0xFEF
 39304                           postinc0	equ	0xFEE
 39305                           postdec0	equ	0xFED
 39306                           fsr0h	equ	0xFEA
 39307                           fsr0l	equ	0xFE9
 39308                           wreg	equ	0xFE8
 39309                           indf1	equ	0xFE7
 39310                           postinc1	equ	0xFE6
 39311                           postdec1	equ	0xFE5
 39312                           fsr1h	equ	0xFE2
 39313                           fsr1l	equ	0xFE1
 39314                           indf2	equ	0xFDF
 39315                           postinc2	equ	0xFDE
 39316                           postdec2	equ	0xFDD
 39317                           fsr2h	equ	0xFDA
 39318                           fsr2l	equ	0xFD9
 39319                           status	equ	0xFD8
 39320                           
 39321 ;; *************** function _strncmp *****************
 39322 ;; Defined at:
 39323 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strncmp.c"
 39324 ;; Parameters:    Size  Location     Type
 39325 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 39326 ;;		 -> _fs.currentsector.sector.currentsector.sector.Name(11), _fs.currentsector.sector.Name(11), string(30), 
 39327 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 39328 ;;		 -> Check_extension@s_2(4), Check_extension@s_1(4), RAM(3967), NULL(0), 
 39329 ;;  len             2    4[COMRAM] unsigned int 
 39330 ;; Auto vars:     Size  Location     Type
 39331 ;;		None
 39332 ;; Return value:  Size  Location     Type
 39333 ;;                  2    0[COMRAM] int 
 39334 ;; Registers used:
 39335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39336 ;; Tracked objects:
 39337 ;;		On entry : 0/0
 39338 ;;		On exit  : 0/0
 39339 ;;		Unchanged: 0/0
 39340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39341 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39343 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39344 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39345 ;;Total ram usage:        9 bytes
 39346 ;; Hardware stack levels used:    1
 39347 ;; This function calls:
 39348 ;;		Nothing
 39349 ;; This function is called by:
 39350 ;;		_fatfs_sfn_exists
 39351 ;;		_fatfs_update_file_length
 39352 ;;		_fatfs_mark_file_deleted
 39353 ;;		_Check_extension
 39354 ;; This function uses a non-reentrant model
 39355 ;;
 39356                           
 39357                           	psect	text132
 39358  004C0E                     __ptext132:
 39359                           	opt stack 0
 39360  004C0E                     _strncmp:
 39361                           	opt stack 27
 39362                           
 39363                           ;incstack = 0
 39364  004C0E  D02E               	goto	l9742
 39365  004C10                     l9732:
 39366  004C10  C001  FFD9         	movff	strncmp@s1,fsr2l
 39367  004C14  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 39368  004C18  50DF               	movf	indf2,w,c
 39369  004C1A  E00C               	bz	l9736
 39370  004C1C  C003  FFD9         	movff	strncmp@s2,fsr2l
 39371  004C20  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 39372  004C24  50DF               	movf	indf2,w,c
 39373  004C26  6E07               	movwf	??_strncmp& (0+255),c
 39374  004C28  C001  FFD9         	movff	strncmp@s1,fsr2l
 39375  004C2C  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 39376  004C30  18DF               	xorwf	indf2,w,c
 39377  004C32  E018               	bz	l9740
 39378  004C34                     l9736:
 39379  004C34  C003  FFD9         	movff	strncmp@s2,fsr2l
 39380  004C38  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 39381  004C3C  50DF               	movf	indf2,w,c
 39382  004C3E  6E07               	movwf	??_strncmp& (0+255),c
 39383  004C40  6A08               	clrf	(??_strncmp+1)& (0+255),c
 39384  004C42  1E07               	comf	??_strncmp,f,c
 39385  004C44  1E08               	comf	??_strncmp+1,f,c
 39386  004C46  4A07               	infsnz	??_strncmp,f,c
 39387  004C48  2A08               	incf	??_strncmp+1,f,c
 39388  004C4A  C001  FFD9         	movff	strncmp@s1,fsr2l
 39389  004C4E  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 39390  004C52  50DF               	movf	indf2,w,c
 39391  004C54  6E09               	movwf	(??_strncmp+2)& (0+255),c
 39392  004C56  5009               	movf	??_strncmp+2,w,c
 39393  004C58  2407               	addwf	??_strncmp,w,c
 39394  004C5A  6E01               	movwf	?_strncmp,c
 39395  004C5C  0E00               	movlw	0
 39396  004C5E  2008               	addwfc	??_strncmp+1,w,c
 39397  004C60  6E02               	movwf	?_strncmp+1,c
 39398  004C62  D00E               	goto	l2905
 39399  004C64                     l9740:
 39400  004C64  4A01               	infsnz	strncmp@s1,f,c
 39401  004C66  2A02               	incf	strncmp@s1+1,f,c
 39402  004C68  4A03               	infsnz	strncmp@s2,f,c
 39403  004C6A  2A04               	incf	strncmp@s2+1,f,c
 39404  004C6C                     l9742:
 39405  004C6C  0605               	decf	strncmp@len,f,c
 39406  004C6E  A0D8               	btfss	status,0,c
 39407  004C70  0606               	decf	strncmp@len+1,f,c
 39408  004C72  2805               	incf	strncmp@len& (0+255),w,c
 39409  004C74  B4D8               	btfsc	status,2,c
 39410  004C76  2806               	incf	(strncmp@len+1)& (0+255),w,c
 39411  004C78  E1CB               	bnz	l9732
 39412  004C7A  0E00               	movlw	0
 39413  004C7C  6E02               	movwf	?_strncmp+1,c
 39414  004C7E  6E01               	movwf	?_strncmp,c
 39415  004C80                     l2905:
 39416  004C80  0012               	return	
 39417  004C82                     __end_of_strncmp:
 39418                           	opt stack 0
 39419                           tosu	equ	0xFFF
 39420                           tosh	equ	0xFFE
 39421                           tosl	equ	0xFFD
 39422                           pclath	equ	0xFFA
 39423                           tblptru	equ	0xFF8
 39424                           tblptrh	equ	0xFF7
 39425                           tblptrl	equ	0xFF6
 39426                           tablat	equ	0xFF5
 39427                           prodh	equ	0xFF4
 39428                           prodl	equ	0xFF3
 39429                           indf0	equ	0xFEF
 39430                           postinc0	equ	0xFEE
 39431                           postdec0	equ	0xFED
 39432                           fsr0h	equ	0xFEA
 39433                           fsr0l	equ	0xFE9
 39434                           wreg	equ	0xFE8
 39435                           indf1	equ	0xFE7
 39436                           postinc1	equ	0xFE6
 39437                           postdec1	equ	0xFE5
 39438                           fsr1h	equ	0xFE2
 39439                           fsr1l	equ	0xFE1
 39440                           indf2	equ	0xFDF
 39441                           postinc2	equ	0xFDE
 39442                           postdec2	equ	0xFDD
 39443                           fsr2h	equ	0xFDA
 39444                           fsr2l	equ	0xFD9
 39445                           status	equ	0xFD8
 39446                           
 39447 ;; *************** function _Write_str *****************
 39448 ;; Defined at:
 39449 ;;		line 29 in file "uart.c"
 39450 ;; Parameters:    Size  Location     Type
 39451 ;;  str             2    5[COMRAM] PTR unsigned char 
 39452 ;;		 -> STR_66(19), STR_65(145), STR_63(28), STR_62(32), 
 39453 ;;		 -> STR_61(24), STR_59(31), STR_58(48), STR_57(19), 
 39454 ;;		 -> STR_56(21), STR_54(36), STR_53(34), STR_52(24), 
 39455 ;;		 -> STR_51(3), STR_50(23), STR_49(33), STR_48(28), 
 39456 ;;		 -> STR_47(43), STR_46(20), STR_45(13), STR_44(25), 
 39457 ;;		 -> STR_42(38), STR_41(3), str_1(240), STR_40(20), 
 39458 ;;		 -> STR_39(33), STR_38(13), STR_37(25), STR_35(38), 
 39459 ;;		 -> STR_34(19), STR_33(26), STR_32(22), STR_31(33), 
 39460 ;;		 -> STR_30(48), STR_28(38), STR_27(39), STR_26(28), 
 39461 ;;		 -> STR_25(18), STR_24(37), STR_22(20), STR_20(21), 
 39462 ;;		 -> STR_19(54), STR_17(78), STR_16(24), STR_15(24), 
 39463 ;;		 -> m(30), string(30), STR_14(19), 
 39464 ;; Auto vars:     Size  Location     Type
 39465 ;;		None
 39466 ;; Return value:  Size  Location     Type
 39467 ;;		None               void
 39468 ;; Registers used:
 39469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39470 ;; Tracked objects:
 39471 ;;		On entry : 0/0
 39472 ;;		On exit  : 0/0
 39473 ;;		Unchanged: 0/0
 39474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39479 ;;Total ram usage:        2 bytes
 39480 ;; Hardware stack levels used:    1
 39481 ;; Hardware stack levels required when called:    2
 39482 ;; This function calls:
 39483 ;;		_putsUSART
 39484 ;; This function is called by:
 39485 ;;		_Check_extension
 39486 ;;		_Switch
 39487 ;;		_File_write
 39488 ;;		_File_append
 39489 ;;		_File_read
 39490 ;;		_File_delete
 39491 ;;		_Create_folder
 39492 ;;		_Open_dir
 39493 ;;		_File_format
 39494 ;;		_Format_drive
 39495 ;;		_main
 39496 ;;		_File_read_
 39497 ;; This function uses a non-reentrant model
 39498 ;;
 39499                           
 39500                           	psect	text133
 39501  003E78                     __ptext133:
 39502                           	opt stack 0
 39503  003E78                     _Write_str:
 39504                           	opt stack 28
 39505                           
 39506                           ;uart.c: 31: putsUSART((char *)str);
 39507                           
 39508                           ;incstack = 0
 39509  003E78  C007  F003         	movff	Write_str@str+1,putsUSART@data+1
 39510  003E7C  C006  F002         	movff	Write_str@str,putsUSART@data
 39511  003E80  ECD3  F023         	call	_putsUSART	;wreg free
 39512  003E84                     l2153:
 39513  003E84  B2AC               	btfsc	4012,1,c	;volatile
 39514  003E86  0012               	return	
 39515  003E88  D7FD               	goto	l2153
 39516  003E8A                     __end_of_Write_str:
 39517                           	opt stack 0
 39518                           tosu	equ	0xFFF
 39519                           tosh	equ	0xFFE
 39520                           tosl	equ	0xFFD
 39521                           pclath	equ	0xFFA
 39522                           tblptru	equ	0xFF8
 39523                           tblptrh	equ	0xFF7
 39524                           tblptrl	equ	0xFF6
 39525                           tablat	equ	0xFF5
 39526                           prodh	equ	0xFF4
 39527                           prodl	equ	0xFF3
 39528                           indf0	equ	0xFEF
 39529                           postinc0	equ	0xFEE
 39530                           postdec0	equ	0xFED
 39531                           fsr0h	equ	0xFEA
 39532                           fsr0l	equ	0xFE9
 39533                           wreg	equ	0xFE8
 39534                           indf1	equ	0xFE7
 39535                           postinc1	equ	0xFE6
 39536                           postdec1	equ	0xFE5
 39537                           fsr1h	equ	0xFE2
 39538                           fsr1l	equ	0xFE1
 39539                           indf2	equ	0xFDF
 39540                           postinc2	equ	0xFDE
 39541                           postdec2	equ	0xFDD
 39542                           fsr2h	equ	0xFDA
 39543                           fsr2l	equ	0xFD9
 39544                           status	equ	0xFD8
 39545                           
 39546 ;; *************** function _putsUSART *****************
 39547 ;; Defined at:
 39548 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uputs.c"
 39549 ;; Parameters:    Size  Location     Type
 39550 ;;  data            2    1[COMRAM] PTR unsigned char 
 39551 ;;		 -> STR_66(19), STR_65(145), STR_63(28), STR_62(32), 
 39552 ;;		 -> STR_61(24), STR_59(31), STR_58(48), STR_57(19), 
 39553 ;;		 -> STR_56(21), STR_54(36), STR_53(34), STR_52(24), 
 39554 ;;		 -> STR_51(3), STR_50(23), STR_49(33), STR_48(28), 
 39555 ;;		 -> STR_47(43), STR_46(20), STR_45(13), STR_44(25), 
 39556 ;;		 -> STR_42(38), STR_41(3), str_1(240), STR_40(20), 
 39557 ;;		 -> STR_39(33), STR_38(13), STR_37(25), STR_35(38), 
 39558 ;;		 -> STR_34(19), STR_33(26), STR_32(22), STR_31(33), 
 39559 ;;		 -> STR_30(48), STR_28(38), STR_27(39), STR_26(28), 
 39560 ;;		 -> STR_25(18), STR_24(37), STR_22(20), STR_20(21), 
 39561 ;;		 -> STR_19(54), STR_17(78), STR_16(24), STR_15(24), 
 39562 ;;		 -> m(30), string(30), STR_14(19), 
 39563 ;; Auto vars:     Size  Location     Type
 39564 ;;		None
 39565 ;; Return value:  Size  Location     Type
 39566 ;;		None               void
 39567 ;; Registers used:
 39568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39569 ;; Tracked objects:
 39570 ;;		On entry : 0/0
 39571 ;;		On exit  : 0/0
 39572 ;;		Unchanged: 0/0
 39573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39576 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39577 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39578 ;;Total ram usage:        4 bytes
 39579 ;; Hardware stack levels used:    1
 39580 ;; Hardware stack levels required when called:    1
 39581 ;; This function calls:
 39582 ;;		_WriteUSART
 39583 ;; This function is called by:
 39584 ;;		_Write_str
 39585 ;; This function uses a non-reentrant model
 39586 ;;
 39587                           
 39588                           	psect	text134
 39589  0047A6                     __ptext134:
 39590                           	opt stack 0
 39591  0047A6                     _putsUSART:
 39592                           	opt stack 28
 39593  0047A6                     l2289:
 39594  0047A6  A2AC               	btfss	4012,1,c	;volatile
 39595  0047A8  D7FE               	goto	l2289
 39596  0047AA  C002  FFF6         	movff	putsUSART@data,tblptrl
 39597  0047AE  C003  FFF7         	movff	putsUSART@data+1,tblptrh
 39598  0047B2  0E00               	movlw	low (__mediumconst shr (0+16))
 39599  0047B4  6EF8               	movwf	tblptru,c
 39600  0047B6  0E0F               	movlw	(high __ramtop+-1)
 39601  0047B8  64F7               	cpfsgt	tblptrh,c
 39602  0047BA  D003               	bra	u12807
 39603  0047BC  0008               	tblrd		*
 39604  0047BE  50F5               	movf	tablat,w,c
 39605  0047C0  D005               	bra	u12800
 39606  0047C2                     u12807:
 39607  0047C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 39608  0047C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 39609  0047CA  50EF               	movf	indf0,w,c
 39610  0047CC                     u12800:
 39611  0047CC  EC45  F01F         	call	_WriteUSART
 39612  0047D0  5002               	movf	putsUSART@data,w,c
 39613  0047D2  6E04               	movwf	??_putsUSART& (0+255),c
 39614  0047D4  5003               	movf	putsUSART@data+1,w,c
 39615  0047D6  6E05               	movwf	(??_putsUSART+1)& (0+255),c
 39616  0047D8  4A02               	infsnz	putsUSART@data,f,c
 39617  0047DA  2A03               	incf	putsUSART@data+1,f,c
 39618  0047DC  C004  FFF6         	movff	??_putsUSART,tblptrl
 39619  0047E0  C005  FFF7         	movff	??_putsUSART+1,tblptrh
 39620  0047E4  0E00               	movlw	low (__mediumconst shr (0+16))
 39621  0047E6  6EF8               	movwf	tblptru,c
 39622  0047E8  0E0F               	movlw	(high __ramtop+-1)
 39623  0047EA  64F7               	cpfsgt	tblptrh,c
 39624  0047EC  D003               	bra	u12817
 39625  0047EE  0008               	tblrd		*
 39626  0047F0  50F5               	movf	tablat,w,c
 39627  0047F2  D005               	bra	u12810
 39628  0047F4                     u12817:
 39629  0047F4  CFF6 FFE9          	movff	tblptrl,fsr0l
 39630  0047F8  CFF7 FFEA          	movff	tblptrh,fsr0h
 39631  0047FC  50EF               	movf	indf0,w,c
 39632  0047FE                     u12810:
 39633  0047FE  0900               	iorlw	0
 39634  004800  B4D8               	btfsc	status,2,c
 39635  004802  0012               	return	
 39636  004804  D7D0               	goto	l2289
 39637  004806                     __end_of_putsUSART:
 39638                           	opt stack 0
 39639                           tosu	equ	0xFFF
 39640                           tosh	equ	0xFFE
 39641                           tosl	equ	0xFFD
 39642                           pclath	equ	0xFFA
 39643                           tblptru	equ	0xFF8
 39644                           tblptrh	equ	0xFF7
 39645                           tblptrl	equ	0xFF6
 39646                           tablat	equ	0xFF5
 39647                           prodh	equ	0xFF4
 39648                           prodl	equ	0xFF3
 39649                           indf0	equ	0xFEF
 39650                           postinc0	equ	0xFEE
 39651                           postdec0	equ	0xFED
 39652                           fsr0h	equ	0xFEA
 39653                           fsr0l	equ	0xFE9
 39654                           wreg	equ	0xFE8
 39655                           indf1	equ	0xFE7
 39656                           postinc1	equ	0xFE6
 39657                           postdec1	equ	0xFE5
 39658                           fsr1h	equ	0xFE2
 39659                           fsr1l	equ	0xFE1
 39660                           indf2	equ	0xFDF
 39661                           postinc2	equ	0xFDE
 39662                           postdec2	equ	0xFDD
 39663                           fsr2h	equ	0xFDA
 39664                           fsr2l	equ	0xFD9
 39665                           status	equ	0xFD8
 39666                           
 39667 ;; *************** function _Read_str *****************
 39668 ;; Defined at:
 39669 ;;		line 67 in file "uart.c"
 39670 ;; Parameters:    Size  Location     Type
 39671 ;;  buffer          2    1[COMRAM] PTR unsigned char 
 39672 ;;		 -> string(30), 
 39673 ;; Auto vars:     Size  Location     Type
 39674 ;;  data            1    4[COMRAM] unsigned char 
 39675 ;;  i               1    3[COMRAM] unsigned char 
 39676 ;; Return value:  Size  Location     Type
 39677 ;;		None               void
 39678 ;; Registers used:
 39679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39680 ;; Tracked objects:
 39681 ;;		On entry : 0/0
 39682 ;;		On exit  : 0/0
 39683 ;;		Unchanged: 0/0
 39684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39686 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39689 ;;Total ram usage:        4 bytes
 39690 ;; Hardware stack levels used:    1
 39691 ;; Hardware stack levels required when called:    1
 39692 ;; This function calls:
 39693 ;;		_ReadUSART
 39694 ;;		_WriteUSART
 39695 ;; This function is called by:
 39696 ;;		_File_write
 39697 ;;		_File_append
 39698 ;;		_File_read
 39699 ;;		_File_delete
 39700 ;;		_Create_folder
 39701 ;;		_Open_dir
 39702 ;;		_Format_drive
 39703 ;;		_File_read_
 39704 ;; This function uses a non-reentrant model
 39705 ;;
 39706                           
 39707                           	psect	text135
 39708  004244                     __ptext135:
 39709                           	opt stack 0
 39710  004244                     _Read_str:
 39711                           	opt stack 28
 39712                           
 39713                           ;uart.c: 69: char i;
 39714                           ;uart.c: 70: unsigned char data;
 39715                           ;uart.c: 71: for(i=0;data!=0x0D;i++)
 39716                           
 39717                           ;incstack = 0
 39718  004244  6A04               	clrf	Read_str@i,c
 39719  004246  5005               	movf	Read_str@data,w,c
 39720  004248  0A0D               	xorlw	13
 39721  00424A  E017               	bz	l12704
 39722  00424C                     l2187:
 39723  00424C  AA9E               	btfss	3998,5,c	;volatile
 39724  00424E  D7FE               	goto	l2187
 39725                           
 39726                           ;uart.c: 74: data = ReadUSART();
 39727  004250  ECDC  F01F         	call	_ReadUSART	;wreg free
 39728  004254  6E05               	movwf	Read_str@data,c
 39729                           
 39730                           ;uart.c: 75: if(data!=0x0D)
 39731  004256  5005               	movf	Read_str@data,w,c
 39732  004258  0A0D               	xorlw	13
 39733  00425A  E006               	bz	l12698
 39734                           
 39735                           ;uart.c: 76: *buffer = data;
 39736  00425C  C002  FFD9         	movff	Read_str@buffer,fsr2l
 39737  004260  C003  FFDA         	movff	Read_str@buffer+1,fsr2h
 39738  004264  C005  FFDF         	movff	Read_str@data,indf2
 39739  004268                     l12698:
 39740                           
 39741                           ;uart.c: 77: WriteUSART(data);
 39742  004268  5005               	movf	Read_str@data,w,c
 39743  00426A  EC45  F01F         	call	_WriteUSART
 39744  00426E                     l2191:
 39745  00426E  A2AC               	btfss	4012,1,c	;volatile
 39746  004270  D7FE               	goto	l2191
 39747                           
 39748                           ;uart.c: 79: buffer++;
 39749  004272  4A02               	infsnz	Read_str@buffer,f,c
 39750  004274  2A03               	incf	Read_str@buffer+1,f,c
 39751  004276  2A04               	incf	Read_str@i,f,c
 39752  004278  D7E6               	goto	L142
 39753  00427A                     l12704:
 39754                           
 39755                           ;uart.c: 80: }
 39756                           ;uart.c: 81: WriteUSART(0x0D);
 39757  00427A  0E0D               	movlw	13
 39758  00427C  EC45  F01F         	call	_WriteUSART
 39759  004280                     l2194:
 39760  004280  B2AC               	btfsc	4012,1,c	;volatile
 39761  004282  0012               	return	
 39762  004284  D7FD               	goto	l2194
 39763  004286                     __end_of_Read_str:
 39764                           	opt stack 0
 39765                           tosu	equ	0xFFF
 39766                           tosh	equ	0xFFE
 39767                           tosl	equ	0xFFD
 39768                           pclath	equ	0xFFA
 39769                           tblptru	equ	0xFF8
 39770                           tblptrh	equ	0xFF7
 39771                           tblptrl	equ	0xFF6
 39772                           tablat	equ	0xFF5
 39773                           prodh	equ	0xFF4
 39774                           prodl	equ	0xFF3
 39775                           indf0	equ	0xFEF
 39776                           postinc0	equ	0xFEE
 39777                           postdec0	equ	0xFED
 39778                           fsr0h	equ	0xFEA
 39779                           fsr0l	equ	0xFE9
 39780                           wreg	equ	0xFE8
 39781                           indf1	equ	0xFE7
 39782                           postinc1	equ	0xFE6
 39783                           postdec1	equ	0xFE5
 39784                           fsr1h	equ	0xFE2
 39785                           fsr1l	equ	0xFE1
 39786                           indf2	equ	0xFDF
 39787                           postinc2	equ	0xFDE
 39788                           postdec2	equ	0xFDD
 39789                           fsr2h	equ	0xFDA
 39790                           fsr2l	equ	0xFD9
 39791                           status	equ	0xFD8
 39792                           
 39793 ;; *************** function _WriteUSART *****************
 39794 ;; Defined at:
 39795 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uwrite.c"
 39796 ;; Parameters:    Size  Location     Type
 39797 ;;  data            1    wreg     unsigned char 
 39798 ;; Auto vars:     Size  Location     Type
 39799 ;;  data            1    0[COMRAM] unsigned char 
 39800 ;; Return value:  Size  Location     Type
 39801 ;;		None               void
 39802 ;; Registers used:
 39803 ;;		wreg
 39804 ;; Tracked objects:
 39805 ;;		On entry : 0/0
 39806 ;;		On exit  : 0/0
 39807 ;;		Unchanged: 0/0
 39808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39813 ;;Total ram usage:        1 bytes
 39814 ;; Hardware stack levels used:    1
 39815 ;; This function calls:
 39816 ;;		Nothing
 39817 ;; This function is called by:
 39818 ;;		_Write
 39819 ;;		_Read_str
 39820 ;;		_putsUSART
 39821 ;;		_Read_string
 39822 ;; This function uses a non-reentrant model
 39823 ;;
 39824                           
 39825                           	psect	text136
 39826  003E8A                     __ptext136:
 39827                           	opt stack 0
 39828  003E8A                     _WriteUSART:
 39829                           	opt stack 26
 39830                           
 39831                           ;incstack = 0
 39832                           ;WriteUSART@data stored from wreg
 39833  003E8A  6E01               	movwf	WriteUSART@data,c
 39834  003E8C  ACAC               	btfss	4012,6,c	;volatile
 39835  003E8E  D004               	goto	l10424
 39836  003E90  90AC               	bcf	4012,0,c	;volatile
 39837  003E92  0101               	movlb	1	; () banked
 39838  003E94  B3A5               	btfsc	_USART_Status& (0+255),1,b
 39839                           
 39840                           ; BSR set to: 1
 39841  003E96  80AC               	bsf	4012,0,c	;volatile
 39842  003E98                     l10424:
 39843  003E98  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
 39844  003E9C  0012               	return	
 39845  003E9E                     __end_of_WriteUSART:
 39846                           	opt stack 0
 39847                           tosu	equ	0xFFF
 39848                           tosh	equ	0xFFE
 39849                           tosl	equ	0xFFD
 39850                           pclath	equ	0xFFA
 39851                           tblptru	equ	0xFF8
 39852                           tblptrh	equ	0xFF7
 39853                           tblptrl	equ	0xFF6
 39854                           tablat	equ	0xFF5
 39855                           prodh	equ	0xFF4
 39856                           prodl	equ	0xFF3
 39857                           indf0	equ	0xFEF
 39858                           postinc0	equ	0xFEE
 39859                           postdec0	equ	0xFED
 39860                           fsr0h	equ	0xFEA
 39861                           fsr0l	equ	0xFE9
 39862                           wreg	equ	0xFE8
 39863                           indf1	equ	0xFE7
 39864                           postinc1	equ	0xFE6
 39865                           postdec1	equ	0xFE5
 39866                           fsr1h	equ	0xFE2
 39867                           fsr1l	equ	0xFE1
 39868                           indf2	equ	0xFDF
 39869                           postinc2	equ	0xFDE
 39870                           postdec2	equ	0xFDD
 39871                           fsr2h	equ	0xFDA
 39872                           fsr2l	equ	0xFD9
 39873                           status	equ	0xFD8
 39874                           
 39875 ;; *************** function _ReadUSART *****************
 39876 ;; Defined at:
 39877 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
 39878 ;; Parameters:    Size  Location     Type
 39879 ;;		None
 39880 ;; Auto vars:     Size  Location     Type
 39881 ;;  data            1    0[COMRAM] unsigned char 
 39882 ;; Return value:  Size  Location     Type
 39883 ;;                  1    wreg      unsigned char 
 39884 ;; Registers used:
 39885 ;;		wreg, status,2, status,0
 39886 ;; Tracked objects:
 39887 ;;		On entry : 0/0
 39888 ;;		On exit  : 0/0
 39889 ;;		Unchanged: 0/0
 39890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39895 ;;Total ram usage:        1 bytes
 39896 ;; Hardware stack levels used:    1
 39897 ;; This function calls:
 39898 ;;		Nothing
 39899 ;; This function is called by:
 39900 ;;		_ReadUART
 39901 ;;		_Read_str
 39902 ;;		_Read_string
 39903 ;; This function uses a non-reentrant model
 39904 ;;
 39905                           
 39906                           	psect	text137
 39907  003FB8                     __ptext137:
 39908                           	opt stack 0
 39909  003FB8                     _ReadUSART:
 39910                           	opt stack 29
 39911                           
 39912                           ;incstack = 0
 39913  003FB8  0EF2               	movlw	242
 39914  003FBA  0101               	movlb	1	; () banked
 39915  003FBC  17A5               	andwf	_USART_Status& (0+255),f,b
 39916                           
 39917                           ; BSR set to: 1
 39918  003FBE  ACAB               	btfss	4011,6,c	;volatile
 39919  003FC0  D003               	goto	l2302
 39920                           
 39921                           ; BSR set to: 1
 39922  003FC2  91A5               	bcf	_USART_Status& (0+255),0,b
 39923  003FC4  B0AB               	btfsc	4011,0,c	;volatile
 39924                           
 39925                           ; BSR set to: 1
 39926  003FC6  81A5               	bsf	_USART_Status& (0+255),0,b
 39927  003FC8                     l2302:
 39928                           
 39929                           ; BSR set to: 1
 39930  003FC8  A4AB               	btfss	4011,2,c	;volatile
 39931  003FCA  D002               	goto	l2304
 39932                           
 39933                           ; BSR set to: 1
 39934  003FCC  0101               	movlb	1	; () banked
 39935  003FCE  85A5               	bsf	_USART_Status& (0+255),2,b
 39936  003FD0                     l2304:
 39937                           
 39938                           ; BSR set to: 1
 39939  003FD0  A2AB               	btfss	4011,1,c	;volatile
 39940  003FD2  D002               	goto	l2305
 39941                           
 39942                           ; BSR set to: 1
 39943  003FD4  0101               	movlb	1	; () banked
 39944  003FD6  87A5               	bsf	_USART_Status& (0+255),3,b
 39945  003FD8                     l2305:
 39946                           
 39947                           ; BSR set to: 1
 39948  003FD8  CFAE F001          	movff	4014,ReadUSART@data	;volatile
 39949                           
 39950                           ; BSR set to: 1
 39951  003FDC  5001               	movf	ReadUSART@data,w,c
 39952                           
 39953                           ; BSR set to: 1
 39954                           
 39955                           ; BSR set to: 1
 39956  003FDE  0012               	return	
 39957  003FE0                     __end_of_ReadUSART:
 39958                           	opt stack 0
 39959                           tosu	equ	0xFFF
 39960                           tosh	equ	0xFFE
 39961                           tosl	equ	0xFFD
 39962                           pclath	equ	0xFFA
 39963                           tblptru	equ	0xFF8
 39964                           tblptrh	equ	0xFF7
 39965                           tblptrl	equ	0xFF6
 39966                           tablat	equ	0xFF5
 39967                           prodh	equ	0xFF4
 39968                           prodl	equ	0xFF3
 39969                           indf0	equ	0xFEF
 39970                           postinc0	equ	0xFEE
 39971                           postdec0	equ	0xFED
 39972                           fsr0h	equ	0xFEA
 39973                           fsr0l	equ	0xFE9
 39974                           wreg	equ	0xFE8
 39975                           indf1	equ	0xFE7
 39976                           postinc1	equ	0xFE6
 39977                           postdec1	equ	0xFE5
 39978                           fsr1h	equ	0xFE2
 39979                           fsr1l	equ	0xFE1
 39980                           indf2	equ	0xFDF
 39981                           postinc2	equ	0xFDE
 39982                           postdec2	equ	0xFDD
 39983                           fsr2h	equ	0xFDA
 39984                           fsr2l	equ	0xFD9
 39985                           status	equ	0xFD8
 39986                           
 39987 ;; *************** function _Clr_str *****************
 39988 ;; Defined at:
 39989 ;;		line 265 in file "main.c"
 39990 ;; Parameters:    Size  Location     Type
 39991 ;;  buffer          2    0[COMRAM] PTR unsigned char 
 39992 ;;		 -> str_1(240), m(30), string(30), 
 39993 ;; Auto vars:     Size  Location     Type
 39994 ;;		None
 39995 ;; Return value:  Size  Location     Type
 39996 ;;		None               void
 39997 ;; Registers used:
 39998 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39999 ;; Tracked objects:
 40000 ;;		On entry : 0/0
 40001 ;;		On exit  : 0/0
 40002 ;;		Unchanged: 0/0
 40003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40008 ;;Total ram usage:        2 bytes
 40009 ;; Hardware stack levels used:    1
 40010 ;; This function calls:
 40011 ;;		Nothing
 40012 ;; This function is called by:
 40013 ;;		_File_write
 40014 ;;		_File_append
 40015 ;;		_File_read
 40016 ;;		_File_delete
 40017 ;;		_Create_folder
 40018 ;;		_Open_dir
 40019 ;;		_Format_drive
 40020 ;;		_File_read_
 40021 ;; This function uses a non-reentrant model
 40022 ;;
 40023                           
 40024                           	psect	text138
 40025  003F2A                     __ptext138:
 40026                           	opt stack 0
 40027  003F2A                     _Clr_str:
 40028                           	opt stack 29
 40029                           
 40030                           ;main.c: 267: while(*buffer)
 40031                           
 40032                           ; BSR set to: 1
 40033                           ;incstack = 0
 40034  003F2A  D008               	goto	l12604
 40035  003F2C                     l12600:
 40036                           
 40037                           ;main.c: 268: {
 40038                           ;main.c: 269: *buffer = ' ';
 40039  003F2C  C001  FFD9         	movff	Clr_str@buffer,fsr2l
 40040  003F30  C002  FFDA         	movff	Clr_str@buffer+1,fsr2h
 40041  003F34  0E20               	movlw	32
 40042  003F36  6EDF               	movwf	indf2,c
 40043                           
 40044                           ;main.c: 270: buffer++;
 40045  003F38  4A01               	infsnz	Clr_str@buffer,f,c
 40046  003F3A  2A02               	incf	Clr_str@buffer+1,f,c
 40047  003F3C                     l12604:
 40048  003F3C  C001  FFD9         	movff	Clr_str@buffer,fsr2l
 40049  003F40  C002  FFDA         	movff	Clr_str@buffer+1,fsr2h
 40050  003F44  50DF               	movf	indf2,w,c
 40051  003F46  B4D8               	btfsc	status,2,c
 40052  003F48  0012               	return	
 40053  003F4A  D7F0               	goto	l12600
 40054  003F4C                     __end_of_Clr_str:
 40055                           	opt stack 0
 40056                           tosu	equ	0xFFF
 40057                           tosh	equ	0xFFE
 40058                           tosl	equ	0xFFD
 40059                           pclath	equ	0xFFA
 40060                           tblptru	equ	0xFF8
 40061                           tblptrh	equ	0xFF7
 40062                           tblptrl	equ	0xFF6
 40063                           tablat	equ	0xFF5
 40064                           prodh	equ	0xFF4
 40065                           prodl	equ	0xFF3
 40066                           indf0	equ	0xFEF
 40067                           postinc0	equ	0xFEE
 40068                           postdec0	equ	0xFED
 40069                           fsr0h	equ	0xFEA
 40070                           fsr0l	equ	0xFE9
 40071                           wreg	equ	0xFE8
 40072                           indf1	equ	0xFE7
 40073                           postinc1	equ	0xFE6
 40074                           postdec1	equ	0xFE5
 40075                           fsr1h	equ	0xFE2
 40076                           fsr1l	equ	0xFE1
 40077                           indf2	equ	0xFDF
 40078                           postinc2	equ	0xFDE
 40079                           postdec2	equ	0xFDD
 40080                           fsr2h	equ	0xFDA
 40081                           fsr2l	equ	0xFD9
 40082                           status	equ	0xFD8
 40083                           
 40084 ;; *************** function _ConfigUSART *****************
 40085 ;; Defined at:
 40086 ;;		line 18 in file "uart.c"
 40087 ;; Parameters:    Size  Location     Type
 40088 ;;  config_1        1    wreg     unsigned char 
 40089 ;;  config_2        1    6[COMRAM] unsigned char 
 40090 ;; Auto vars:     Size  Location     Type
 40091 ;;  config_1        1    7[COMRAM] unsigned char 
 40092 ;; Return value:  Size  Location     Type
 40093 ;;		None               void
 40094 ;; Registers used:
 40095 ;;		wreg, status,2, cstack
 40096 ;; Tracked objects:
 40097 ;;		On entry : 0/0
 40098 ;;		On exit  : 0/0
 40099 ;;		Unchanged: 0/0
 40100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40101 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40105 ;;Total ram usage:        2 bytes
 40106 ;; Hardware stack levels used:    1
 40107 ;; Hardware stack levels required when called:    1
 40108 ;; This function calls:
 40109 ;;		_OpenUSART
 40110 ;; This function is called by:
 40111 ;;		_main
 40112 ;; This function uses a non-reentrant model
 40113 ;;
 40114                           
 40115                           	psect	text139
 40116  003E6A                     __ptext139:
 40117                           	opt stack 0
 40118  003E6A                     _ConfigUSART:
 40119                           	opt stack 29
 40120                           
 40121                           ;incstack = 0
 40122                           ;ConfigUSART@config_1 stored from wreg
 40123  003E6A  6E08               	movwf	ConfigUSART@config_1,c
 40124                           
 40125                           ;uart.c: 20: OpenUSART(config_1, config_2);
 40126  003E6C  C007  F001         	movff	ConfigUSART@config_2,OpenUSART@spbrg
 40127  003E70  6A02               	clrf	OpenUSART@spbrg+1,c
 40128  003E72  5008               	movf	ConfigUSART@config_1,w,c
 40129  003E74  EF94  F024         	goto	_OpenUSART
 40130  003E78                     __end_of_ConfigUSART:
 40131                           	opt stack 0
 40132                           tosu	equ	0xFFF
 40133                           tosh	equ	0xFFE
 40134                           tosl	equ	0xFFD
 40135                           pclath	equ	0xFFA
 40136                           tblptru	equ	0xFF8
 40137                           tblptrh	equ	0xFF7
 40138                           tblptrl	equ	0xFF6
 40139                           tablat	equ	0xFF5
 40140                           prodh	equ	0xFF4
 40141                           prodl	equ	0xFF3
 40142                           indf0	equ	0xFEF
 40143                           postinc0	equ	0xFEE
 40144                           postdec0	equ	0xFED
 40145                           fsr0h	equ	0xFEA
 40146                           fsr0l	equ	0xFE9
 40147                           wreg	equ	0xFE8
 40148                           indf1	equ	0xFE7
 40149                           postinc1	equ	0xFE6
 40150                           postdec1	equ	0xFE5
 40151                           fsr1h	equ	0xFE2
 40152                           fsr1l	equ	0xFE1
 40153                           indf2	equ	0xFDF
 40154                           postinc2	equ	0xFDE
 40155                           postdec2	equ	0xFDD
 40156                           fsr2h	equ	0xFDA
 40157                           fsr2l	equ	0xFD9
 40158                           status	equ	0xFD8
 40159                           
 40160 ;; *************** function _OpenUSART *****************
 40161 ;; Defined at:
 40162 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
 40163 ;; Parameters:    Size  Location     Type
 40164 ;;  config          1    wreg     unsigned char 
 40165 ;;  spbrg           2    0[COMRAM] unsigned int 
 40166 ;; Auto vars:     Size  Location     Type
 40167 ;;  config          1    5[COMRAM] unsigned char 
 40168 ;; Return value:  Size  Location     Type
 40169 ;;		None               void
 40170 ;; Registers used:
 40171 ;;		wreg, status,2
 40172 ;; Tracked objects:
 40173 ;;		On entry : 0/0
 40174 ;;		On exit  : 0/0
 40175 ;;		Unchanged: 0/0
 40176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40178 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40179 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40180 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40181 ;;Total ram usage:        6 bytes
 40182 ;; Hardware stack levels used:    1
 40183 ;; This function calls:
 40184 ;;		Nothing
 40185 ;; This function is called by:
 40186 ;;		_ConfigUSART
 40187 ;; This function uses a non-reentrant model
 40188 ;;
 40189                           
 40190                           	psect	text140
 40191  004928                     __ptext140:
 40192                           	opt stack 0
 40193  004928                     _OpenUSART:
 40194                           	opt stack 29
 40195                           
 40196                           ;incstack = 0
 40197                           ;OpenUSART@config stored from wreg
 40198  004928  6E06               	movwf	OpenUSART@config,c
 40199  00492A  6AAC               	clrf	4012,c	;volatile
 40200  00492C  6AAB               	clrf	4011,c	;volatile
 40201  00492E  B006               	btfsc	OpenUSART@config,0,c
 40202  004930  88AC               	bsf	4012,4,c	;volatile
 40203  004932  A206               	btfss	OpenUSART@config,1,c
 40204  004934  D002               	goto	l12744
 40205  004936  8CAC               	bsf	4012,6,c	;volatile
 40206  004938  8CAB               	bsf	4011,6,c	;volatile
 40207  00493A                     l12744:
 40208  00493A  B406               	btfsc	OpenUSART@config,2,c
 40209  00493C  8EAC               	bsf	4012,7,c	;volatile
 40210  00493E  A606               	btfss	OpenUSART@config,3,c
 40211  004940  D002               	goto	l2272
 40212  004942  88AB               	bsf	4011,4,c	;volatile
 40213  004944  D001               	goto	l12752
 40214  004946                     l2272:
 40215  004946  8AAB               	bsf	4011,5,c	;volatile
 40216  004948                     l12752:
 40217  004948  B806               	btfsc	OpenUSART@config,4,c
 40218  00494A  84AC               	bsf	4012,2,c	;volatile
 40219  00494C  989E               	bcf	3998,4,c	;volatile
 40220  00494E  BA06               	btfsc	OpenUSART@config,5,c
 40221  004950  86AB               	bsf	4011,3,c	;volatile
 40222  004952  AC06               	btfss	OpenUSART@config,6,c
 40223  004954  D002               	goto	l2276
 40224  004956  8A9D               	bsf	3997,5,c	;volatile
 40225  004958  D001               	goto	l2277
 40226  00495A                     l2276:
 40227  00495A  9A9D               	bcf	3997,5,c	;volatile
 40228  00495C                     l2277:
 40229  00495C  9A9E               	bcf	3998,5,c	;volatile
 40230  00495E  AE06               	btfss	OpenUSART@config,7,c
 40231  004960  D002               	goto	l2278
 40232  004962  889D               	bsf	3997,4,c	;volatile
 40233  004964  D001               	goto	l2279
 40234  004966                     l2278:
 40235  004966  989D               	bcf	3997,4,c	;volatile
 40236  004968                     l2279:
 40237  004968  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 40238  00496C  C002  F003         	movff	OpenUSART@spbrg+1,??_OpenUSART
 40239  004970  C003  F004         	movff	??_OpenUSART,??_OpenUSART+1
 40240  004974  6A05               	clrf	(??_OpenUSART+2)& (0+255),c
 40241  004976  5004               	movf	??_OpenUSART+1,w,c
 40242  004978  6EB0               	movwf	4016,c	;volatile
 40243  00497A  8AAC               	bsf	4012,5,c	;volatile
 40244  00497C  8EAB               	bsf	4011,7,c	;volatile
 40245  00497E  9C94               	bcf	3988,6,c	;volatile
 40246  004980  8E94               	bsf	3988,7,c	;volatile
 40247  004982  B8AC               	btfsc	4012,4,c	;volatile
 40248  004984  BEAC               	btfsc	4012,7,c	;volatile
 40249  004986  D001               	goto	l2281
 40250  004988  8C94               	bsf	3988,6,c	;volatile
 40251  00498A                     l2281:
 40252  00498A  0012               	return	
 40253  00498C                     __end_of_OpenUSART:
 40254                           	opt stack 0
 40255                           tosu	equ	0xFFF
 40256                           tosh	equ	0xFFE
 40257                           tosl	equ	0xFFD
 40258                           pclath	equ	0xFFA
 40259                           tblptru	equ	0xFF8
 40260                           tblptrh	equ	0xFF7
 40261                           tblptrl	equ	0xFF6
 40262                           tablat	equ	0xFF5
 40263                           prodh	equ	0xFF4
 40264                           prodl	equ	0xFF3
 40265                           indf0	equ	0xFEF
 40266                           postinc0	equ	0xFEE
 40267                           postdec0	equ	0xFED
 40268                           fsr0h	equ	0xFEA
 40269                           fsr0l	equ	0xFE9
 40270                           wreg	equ	0xFE8
 40271                           indf1	equ	0xFE7
 40272                           postinc1	equ	0xFE6
 40273                           postdec1	equ	0xFE5
 40274                           fsr1h	equ	0xFE2
 40275                           fsr1l	equ	0xFE1
 40276                           indf2	equ	0xFDF
 40277                           postinc2	equ	0xFDE
 40278                           postdec2	equ	0xFDD
 40279                           fsr2h	equ	0xFDA
 40280                           fsr2l	equ	0xFD9
 40281                           status	equ	0xFD8
 40282                           tosu	equ	0xFFF
 40283                           tosh	equ	0xFFE
 40284                           tosl	equ	0xFFD
 40285                           pclath	equ	0xFFA
 40286                           tblptru	equ	0xFF8
 40287                           tblptrh	equ	0xFF7
 40288                           tblptrl	equ	0xFF6
 40289                           tablat	equ	0xFF5
 40290                           prodh	equ	0xFF4
 40291                           prodl	equ	0xFF3
 40292                           indf0	equ	0xFEF
 40293                           postinc0	equ	0xFEE
 40294                           postdec0	equ	0xFED
 40295                           fsr0h	equ	0xFEA
 40296                           fsr0l	equ	0xFE9
 40297                           wreg	equ	0xFE8
 40298                           indf1	equ	0xFE7
 40299                           postinc1	equ	0xFE6
 40300                           postdec1	equ	0xFE5
 40301                           fsr1h	equ	0xFE2
 40302                           fsr1l	equ	0xFE1
 40303                           indf2	equ	0xFDF
 40304                           postinc2	equ	0xFDE
 40305                           postdec2	equ	0xFDD
 40306                           fsr2h	equ	0xFDA
 40307                           fsr2l	equ	0xFD9
 40308                           status	equ	0xFD8
 40309                           
 40310                           	psect	text141
 40311  000000                     __ptext141:
 40312                           	opt stack 0
 40313                           tosu	equ	0xFFF
 40314                           tosh	equ	0xFFE
 40315                           tosl	equ	0xFFD
 40316                           pclath	equ	0xFFA
 40317                           tblptru	equ	0xFF8
 40318                           tblptrh	equ	0xFF7
 40319                           tblptrl	equ	0xFF6
 40320                           tablat	equ	0xFF5
 40321                           prodh	equ	0xFF4
 40322                           prodl	equ	0xFF3
 40323                           indf0	equ	0xFEF
 40324                           postinc0	equ	0xFEE
 40325                           postdec0	equ	0xFED
 40326                           fsr0h	equ	0xFEA
 40327                           fsr0l	equ	0xFE9
 40328                           wreg	equ	0xFE8
 40329                           indf1	equ	0xFE7
 40330                           postinc1	equ	0xFE6
 40331                           postdec1	equ	0xFE5
 40332                           fsr1h	equ	0xFE2
 40333                           fsr1l	equ	0xFE1
 40334                           indf2	equ	0xFDF
 40335                           postinc2	equ	0xFDE
 40336                           postdec2	equ	0xFDD
 40337                           fsr2h	equ	0xFDA
 40338                           fsr2l	equ	0xFD9
 40339                           status	equ	0xFD8
 40340                           
 40341                           	psect	rparam
 40342  0000                     tosu	equ	0xFFF
 40343                           tosh	equ	0xFFE
 40344                           tosl	equ	0xFFD
 40345                           pclath	equ	0xFFA
 40346                           tblptru	equ	0xFF8
 40347                           tblptrh	equ	0xFF7
 40348                           tblptrl	equ	0xFF6
 40349                           tablat	equ	0xFF5
 40350                           prodh	equ	0xFF4
 40351                           prodl	equ	0xFF3
 40352                           indf0	equ	0xFEF
 40353                           postinc0	equ	0xFEE
 40354                           postdec0	equ	0xFED
 40355                           fsr0h	equ	0xFEA
 40356                           fsr0l	equ	0xFE9
 40357                           wreg	equ	0xFE8
 40358                           indf1	equ	0xFE7
 40359                           postinc1	equ	0xFE6
 40360                           postdec1	equ	0xFE5
 40361                           fsr1h	equ	0xFE2
 40362                           fsr1l	equ	0xFE1
 40363                           indf2	equ	0xFDF
 40364                           postinc2	equ	0xFDE
 40365                           postdec2	equ	0xFDD
 40366                           fsr2h	equ	0xFDA
 40367                           fsr2l	equ	0xFD9
 40368                           status	equ	0xFD8


Data Sizes:
    Strings     1428
    Constant    35
    Data        123
    BSS         2906
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128    128     128
    BANK1           256    139     249
    BANK2           256      0     184
    BANK3           256      0     240
    BANK4           256      0     240
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    _files.next	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _files.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.fat_buffer_head.next	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.fat_buffer_head.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _open_file@sfEntry.next	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _open_file@sfEntry.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.next	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.next	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.fat_buffers.next	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.fat_buffers.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _files.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _files.currentsector.next	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _files.currentsector.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _files.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    _files.fl_lock	PTR FTN()void  size(2) Largest target is 0

    _files.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 0
		 -> media_write(), 

    _files.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 0
		 -> media_read(), 

    _open_file_list.head.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file_list.head.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.head.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.head.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.previous.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.previous.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@sfEntry.previous.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@sfEntry.previous.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.previous.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.previous.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file_list.tail.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file_list.tail.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.tail.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.tail.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.currentsector.sector.currentsector.tail	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.currentsector.sector.currentsector.head	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.next.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.next.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.next.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.next.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@sfEntry.next.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@sfEntry.next.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.next.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.next.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.currentsector.sector.next.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.currentsector.sector.next.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.previous.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.previous.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.tail.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.tail.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.tail	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.head	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.currentsector.sector.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.currentsector.sector.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@sfEntry.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@sfEntry.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.currentsector.sector.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.currentsector.sector.currentsector.next	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.currentsector.sector.currentsector.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.currentsector.sector.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    _fs.currentsector.sector.fl_lock	PTR FTN()void  size(2) Largest target is 0

    _fs.currentsector.sector.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 0
		 -> media_write(), 

    _fs.currentsector.sector.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 0
		 -> media_read(), 

    rd$1	PTR unsigned char  size(2) Largest target is 3967
		 -> data(BANK1[1]), fl_fgetc@data(BANK0[1]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    wr$1	PTR unsigned char  size(3) Largest target is 65535
		 -> w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), fl_fputc@data(COMRAM[1]), 
		 -> ROM(CODE[65535]), _fs(BIGRAM[1095]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?udefs@fat_list@fat_list_pop_head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?udefs@fat_list@fat_list_pop_head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?udefs@fat_list@fat_list_is_empty.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?udefs@fat_list@fat_list_is_empty.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?_fatfs_fat_read_sector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    ?_fatfs_fat_read_sector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_list_directory_start@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fl_closedir@dir	PTR struct fs_dir_list_status size(2) Largest target is 9
		 -> dptr(BANK1[9]), fl_is_dir@dir(COMRAM[9]), fl_listdirectory@dirstat(BANK1[9]), 

    ?_fl_fopen.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?_fl_fopen.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_cache_set_next_cluster@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_cache_set_next_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_cache_get_next_cluster@pNextCluster	PTR unsigned long  size(2) Largest target is 4
		 -> _write_sectors@nextCluster(BANK0[4]), _read_sectors@nextCluster(BANK0[4]), 

    fatfs_cache_get_next_cluster@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_cache_get_next_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    ?__create_file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?__create_file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?__open_file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?__open_file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_cache_init@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_cache_init@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    ?fat_list@fat_list_pop_head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?fat_list@fat_list_pop_head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?fat_list@fat_list_is_empty.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?fat_list@fat_list_is_empty.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?_fat_list_pop_head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?_fat_list_pop_head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?_fat_list_is_empty.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?_fat_list_is_empty.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    S26$1$1	PTR unsigned char  size(3) Largest target is 65535
		 -> w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), fl_fputc@data(COMRAM[1]), 
		 -> ROM(CODE[65535]), _fs(BIGRAM[1095]), RAM(DATA[3967]), NULL(NULL[0]), 

    S26$0$1	PTR unsigned char  size(2) Largest target is 3967
		 -> data(BANK1[1]), fl_fgetc@data(BANK0[1]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 52
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 
		 -> NULL(NULL[0]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 19
		 -> fl_listdirectory@dirent(BANK1[19]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 19
		 -> fl_listdirectory@dirent(BANK1[19]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 3967
		 -> Check_extension@s_2(COMRAM[4]), Check_extension@s_1(COMRAM[4]), RAM(DATA[3967]), NULL(NULL[0]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 30
		 -> _fs.currentsector.sector.currentsector.sector.Name(BIGRAM[11]), _fs.currentsector.sector.Name(BIGRAM[11]), string(BANK1[30]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), STR_67(CODE[2]), STR_64(CODE[2]), 
		 -> STR_60(CODE[6]), STR_43(CODE[2]), STR_36(CODE[2]), STR_29(CODE[2]), 
		 -> s(BANK2[17]), STR_23(CODE[2]), STR_21(CODE[2]), STR_18(CODE[2]), 
		 -> m(BANK2[30]), fatfs_lfn_generate_tail@tail_str(COMRAM[12]), STR_10(CODE[2]), _open_directory@currentfolder(BANK0[10]), 
		 -> RAM(DATA[3967]), fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), 
		 -> NULL(NULL[0]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), STR_67(CODE[2]), STR_64(CODE[2]), 
		 -> STR_60(CODE[6]), STR_43(CODE[2]), STR_36(CODE[2]), STR_29(CODE[2]), 
		 -> s(BANK2[17]), STR_23(CODE[2]), STR_21(CODE[2]), STR_18(CODE[2]), 
		 -> m(BANK2[30]), fatfs_lfn_generate_tail@tail_str(COMRAM[12]), STR_10(CODE[2]), _open_directory@currentfolder(BANK0[10]), 
		 -> RAM(DATA[3967]), fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), 
		 -> NULL(NULL[0]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> Switch@exit(COMRAM[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    memset@p1	PTR void  size(2) Largest target is 3967
		 -> _fs.currentsector.sector(BIGRAM[512]), lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), _fs.fat_buffers(BIGRAM[522]), 
		 -> _fs.currentsector(BIGRAM[524]), fatfs_lfn_generate_tail@tail_str(COMRAM[12]), fatfs_lfn_create_sfn@ext(COMRAM[3]), _create_file@shortFilename(BANK1[11]), 
		 -> _create_directory@shortFilename(BANK1[11]), _fs(BIGRAM[1095]), RAM(DATA[3967]), fatfs_list_directory_next@short_filename(BANK1[13]), 
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 3967
		 -> _fs.currentsector.sector(BIGRAM[512]), lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), _fs.fat_buffers(BIGRAM[522]), 
		 -> _fs.currentsector(BIGRAM[524]), fatfs_lfn_generate_tail@tail_str(COMRAM[12]), fatfs_lfn_create_sfn@ext(COMRAM[3]), _create_file@shortFilename(BANK1[11]), 
		 -> _create_directory@shortFilename(BANK1[11]), _fs(BIGRAM[1095]), RAM(DATA[3967]), fatfs_list_directory_next@short_filename(BANK1[13]), 
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 3967
		 -> _fs.currentsector.sector(BIGRAM[512]), data(BANK1[1]), fl_fgetc@data(BANK0[1]), _create_file@sfEntry(BANK1[32]), 
		 -> _open_file@sfEntry(BANK1[32]), _create_directory@sfEntry(BANK1[32]), _open_directory@sfEntry(BANK0[32]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3967
		 -> _fs.currentsector.sector(BIGRAM[512]), data(BANK1[1]), fl_fgetc@data(BANK0[1]), _create_file@sfEntry(BANK1[32]), 
		 -> _open_file@sfEntry(BANK1[32]), _create_directory@sfEntry(BANK1[32]), _open_directory@sfEntry(BANK0[32]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(3) Largest target is 65535
		 -> _fs.currentsector.sector(BIGRAM[512]), w(BANK1[1]), str_0(BANK2[26]), s(BANK2[17]), 
		 -> data(BANK1[1]), m(BANK2[30]), fatfs_add_file_entry@shortEntry(BANK1[32]), fatfs_lfn_generate_tail@tail_str(COMRAM[12]), 
		 -> fl_fputc@data(COMRAM[1]), ROM(CODE[65535]), _create_file@shortFilename(BANK1[11]), sfEntry.Name(COMRAM[11]), 
		 -> _open_file@sfEntry(BANK1[32]), _create_directory@shortFilename(BANK1[11]), RAM(DATA[3967]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 65535
		 -> _fs.currentsector.sector(BIGRAM[512]), w(BANK1[1]), str_0(BANK2[26]), s(BANK2[17]), 
		 -> data(BANK1[1]), m(BANK2[30]), fatfs_add_file_entry@shortEntry(BANK1[32]), fatfs_lfn_generate_tail@tail_str(COMRAM[12]), 
		 -> fl_fputc@data(COMRAM[1]), ROM(CODE[65535]), _create_file@shortFilename(BANK1[11]), sfEntry.Name(COMRAM[11]), 
		 -> _open_file@sfEntry(BANK1[32]), _create_directory@shortFilename(BANK1[11]), RAM(DATA[3967]), NULL(NULL[0]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 240
		 -> STR_66(CODE[19]), STR_65(CODE[145]), STR_63(CODE[28]), STR_62(CODE[32]), 
		 -> STR_61(CODE[24]), STR_59(CODE[31]), STR_58(CODE[48]), STR_57(CODE[19]), 
		 -> STR_56(CODE[21]), STR_54(CODE[36]), STR_53(CODE[34]), STR_52(CODE[24]), 
		 -> STR_51(CODE[3]), STR_50(CODE[23]), STR_49(CODE[33]), STR_48(CODE[28]), 
		 -> STR_47(CODE[43]), STR_46(CODE[20]), STR_45(CODE[13]), STR_44(CODE[25]), 
		 -> STR_42(CODE[38]), STR_41(CODE[3]), str_1(BANK3[240]), STR_40(CODE[20]), 
		 -> STR_39(CODE[33]), STR_38(CODE[13]), STR_37(CODE[25]), STR_35(CODE[38]), 
		 -> STR_34(CODE[19]), STR_33(CODE[26]), STR_32(CODE[22]), STR_31(CODE[33]), 
		 -> STR_30(CODE[48]), STR_28(CODE[38]), STR_27(CODE[39]), STR_26(CODE[28]), 
		 -> STR_25(CODE[18]), STR_24(CODE[37]), STR_22(CODE[20]), STR_20(CODE[21]), 
		 -> STR_19(CODE[54]), STR_17(CODE[78]), STR_16(CODE[24]), STR_15(CODE[24]), 
		 -> m(BANK2[30]), string(BANK1[30]), STR_14(CODE[19]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_55(CODE[5]), STR_13(CODE[16]), STR_12(CODE[11]), STR_11(CODE[17]), 
		 -> STR_9(CODE[49]), STR_8(CODE[28]), STR_7(CODE[28]), STR_6(CODE[24]), 
		 -> STR_5(CODE[31]), STR_2(CODE[10]), STR_1(CODE[15]), 

    printf@_val._cp	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_68(CODE[7]), STR_67(CODE[2]), STR_64(CODE[2]), m(BANK2[30]), 
		 -> dirent.filename(COMRAM[10]), fl_listdirectory@dirent(BANK1[19]), STR_4(CODE[6]), STR_3(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S4500$_cp	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_68(CODE[7]), STR_67(CODE[2]), STR_64(CODE[2]), m(BANK2[30]), 
		 -> fl_listdirectory@dirent(BANK1[19]), STR_4(CODE[6]), STR_3(CODE[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_68(CODE[7]), STR_67(CODE[2]), STR_64(CODE[2]), m(BANK2[30]), 
		 -> fl_listdirectory@dirent(BANK1[19]), STR_4(CODE[6]), STR_3(CODE[6]), 

    Read_str@buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    Write_str@str	PTR unsigned char  size(2) Largest target is 240
		 -> STR_66(CODE[19]), STR_65(CODE[145]), STR_63(CODE[28]), STR_62(CODE[32]), 
		 -> STR_61(CODE[24]), STR_59(CODE[31]), STR_58(CODE[48]), STR_57(CODE[19]), 
		 -> STR_56(CODE[21]), STR_54(CODE[36]), STR_53(CODE[34]), STR_52(CODE[24]), 
		 -> STR_51(CODE[3]), STR_50(CODE[23]), STR_49(CODE[33]), STR_48(CODE[28]), 
		 -> STR_47(CODE[43]), STR_46(CODE[20]), STR_45(CODE[13]), STR_44(CODE[25]), 
		 -> STR_42(CODE[38]), STR_41(CODE[3]), str_1(BANK3[240]), STR_40(CODE[20]), 
		 -> STR_39(CODE[33]), STR_38(CODE[13]), STR_37(CODE[25]), STR_35(CODE[38]), 
		 -> STR_34(CODE[19]), STR_33(CODE[26]), STR_32(CODE[22]), STR_31(CODE[33]), 
		 -> STR_30(CODE[48]), STR_28(CODE[38]), STR_27(CODE[39]), STR_26(CODE[28]), 
		 -> STR_25(CODE[18]), STR_24(CODE[37]), STR_22(CODE[20]), STR_20(CODE[21]), 
		 -> STR_19(CODE[54]), STR_17(CODE[78]), STR_16(CODE[24]), STR_15(CODE[24]), 
		 -> m(BANK2[30]), string(BANK1[30]), STR_14(CODE[19]), 

    File_format@name	PTR unsigned char  size(2) Largest target is 6
		 -> STR_60(CODE[6]), 

    fptr.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fptr.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fptr	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    Format_string@buf_2	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    Format_string@buf_1	PTR unsigned char  size(2) Largest target is 30
		 -> m(BANK2[30]), 

    Check_extension@xtn	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    Clr_str@buffer	PTR unsigned char  size(2) Largest target is 240
		 -> str_1(BANK3[240]), m(BANK2[30]), string(BANK1[30]), 

    media_write@buffer	PTR unsigned char  size(3) Largest target is 65535
		 -> _fs.currentsector(BIGRAM[524]), w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), 
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), fl_fputc@data(COMRAM[1]), ROM(CODE[65535]), _open_file@sfEntry(BANK1[32]), 
		 -> _fs(BIGRAM[1095]), RAM(DATA[3967]), NULL(NULL[0]), 

    media_read@buffer	PTR unsigned char  size(2) Largest target is 3967
		 -> _fs.currentsector(BIGRAM[524]), data(BANK1[1]), fatfs_add_file_entry@shortEntry(BANK1[32]), fl_fgetc@data(BANK0[1]), 
		 -> _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp_fat_list@fat_list_pop_head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp_fat_list@fat_list_pop_head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp_fat_list@fat_list_pop_head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@node_3569.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@node_3569.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@list_3568.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@list_3568.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_is_empty@list_3564.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_is_empty@list_3564.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_last@list_3557.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_last@list_3557.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@node_3546.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@node_3546.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list_3545.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list_3545.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list_3545.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list_3545.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list_3545.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list_3545.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node_3526.previous.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node_3526.previous.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node_3526.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node_3526.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list_3525.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list_3525.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list_3525.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list_3525.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node_3527.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node_3527.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node_3527.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node_3527.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node_3526.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node_3526.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node_3527.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node_3527.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node_3506.next.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node_3506.next.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node_3506.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node_3506.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list_3505.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list_3505.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list_3505.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list_3505.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node_3507.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node_3507.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node_3506.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node_3506.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node_3507.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node_3507.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node_3507.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node_3507.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.next.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.next.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list_3486.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list_3486.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.previous.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.previous.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list_3486.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list_3486.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list_3486.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list_3486.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list_3480.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list_3480.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list_3480.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list_3480.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortfilename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@pSname	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@filename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_file_entry@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_file_entry@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_file_entry@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_add_file_entry@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_add_file_entry@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_add_file_entry@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_add_file_entry@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_find_free_dir_offset@pOffset	PTR unsigned char  size(2) Largest target is 1
		 -> fatfs_add_file_entry@dirOffset(BANK1[1]), 

    fatfs_find_free_dir_offset@pSector	PTR unsigned long  size(2) Largest target is 4
		 -> fatfs_add_file_entry@dirSector(BANK1[4]), 

    fatfs_find_free_dir_offset@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_free_dir_offset@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_free_dir_offset@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_free_dir_offset@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_find_free_dir_offset@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_find_free_dir_offset@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_find_free_dir_offset@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_find_free_dir_offset@directoryEntry	PTR struct fat_dir_entry size(2) Largest target is 0

    fatfs_find_free_dir_offset@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_allocate_free_space@startCluster	PTR unsigned long  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_allocate_free_space@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_allocate_free_space@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_allocate_free_space@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_allocate_free_space@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_allocate_free_space@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_allocate_free_space@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_allocate_free_space@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_allocate_free_space@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_add_free_space@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_free_space@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_free_space@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_free_space@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_add_free_space@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_add_free_space@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_add_free_space@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_add_free_space@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_add_free_space@startCluster	PTR unsigned long  size(2) Largest target is 4
		 -> fatfs_allocate_free_space@nextcluster(BANK0[4]), _write_sectors@LastCluster(BANK0[4]), 

    fatfs_count_free_clusters@pbuf.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_count_free_clusters@pbuf.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_count_free_clusters@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_count_free_clusters@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_count_free_clusters@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_count_free_clusters@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_count_free_clusters@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_count_free_clusters@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_count_free_clusters@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_fat_add_cluster_to_chain@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_free_cluster_chain@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_fat_set_cluster@pbuf.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_set_cluster@pbuf.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_set_cluster@pbuf	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_fat_set_cluster@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_set_cluster@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_set_cluster@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_set_cluster@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_set_cluster@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_set_cluster@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_fat_set_cluster@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_fat_set_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_find_blank_cluster@free_cluster	PTR unsigned long  size(2) Largest target is 4
		 -> fatfs_find_free_dir_offset@newCluster(BANK0[4]), fatfs_allocate_free_space@nextcluster(BANK0[4]), fatfs_add_free_space@nextcluster(BANK0[4]), 

    fatfs_find_blank_cluster@pbuf.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_blank_cluster@pbuf.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_blank_cluster@pbuf	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_find_blank_cluster@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_blank_cluster@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_blank_cluster@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_blank_cluster@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_find_blank_cluster@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_find_blank_cluster@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_find_blank_cluster@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_find_blank_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_set_fs_info_next_free_cluster@pbuf.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_set_fs_info_next_free_cluster@pbuf.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_set_fs_info_next_free_cluster@pbuf	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_set_fs_info_next_free_cluster@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_set_fs_info_next_free_cluster@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_set_fs_info_next_free_cluster@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_set_fs_info_next_free_cluster@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_set_fs_info_next_free_cluster@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_set_fs_info_next_free_cluster@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_set_fs_info_next_free_cluster@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_set_fs_info_next_free_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_find_next_cluster@pbuf.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_next_cluster@pbuf.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_next_cluster@pbuf	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_find_next_cluster@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_next_cluster@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_next_cluster@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_next_cluster@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_find_next_cluster@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_find_next_cluster@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_find_next_cluster@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_find_next_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_fat_purge@pcur.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_purge@pcur.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_purge@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_purge@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_purge@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_purge@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_purge@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_purge@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_fat_purge@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_fat_purge@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_fat_purge@pcur	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_fat_read_sector@fs.fat_buffer_head.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@fs.fat_buffer_head.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@pcur.next.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@pcur.next.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    sp__fatfs_fat_read_sector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    sp__fatfs_fat_read_sector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    sp__fatfs_fat_read_sector	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_fat_read_sector@last.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@last.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@pcur.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@pcur.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_read_sector@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_read_sector@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_fat_read_sector@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_fat_read_sector@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_fat_read_sector@pcur	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_fat_read_sector@last	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_fat_writeback@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_writeback@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_writeback@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_writeback@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_writeback@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_writeback@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_fat_writeback@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_fat_writeback@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_fat_writeback@pcur.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_writeback@pcur.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_writeback@pcur	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_fat_init@fs.fat_buffers.next.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.fat_buffers.next.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.fat_buffers.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.fat_buffers.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_init@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_init@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_fat_init@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_fat_init@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_get_sfn_display_name@out	PTR unsigned char  size(2) Largest target is 19
		 -> fl_listdirectory@dirent(BANK1[19]), 

    fatfs_get_sfn_display_name@in	PTR unsigned char  size(2) Largest target is 13
		 -> fatfs_list_directory_next@short_filename(BANK1[13]), 

    fatfs_compare_names@strB	PTR unsigned char  size(2) Largest target is 3967
		 -> _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_compare_names@strA	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), RAM(DATA[3967]), fatfs_list_directory_next@lfn(BANK1[52]), 
		 -> fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    fatfs_compare_names@ext2	PTR unsigned char  size(2) Largest target is 3967
		 -> _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_compare_names@ext1	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), RAM(DATA[3967]), fatfs_list_directory_next@lfn(BANK1[52]), 
		 -> fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    FileString_TrimLength@str	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), 
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    FileString_TrimLength@strSrc	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), 
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    FileString_GetExtension@str	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), 
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    FileString_GetExtension@strSrc	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), 
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    FileString_StrCmpNoCase@s2	PTR unsigned char  size(2) Largest target is 3967
		 -> _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), NULL(NULL[0]), 

    FileString_StrCmpNoCase@s1	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), RAM(DATA[3967]), fatfs_list_directory_next@lfn(BANK1[52]), 
		 -> fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    fatfs_split_path@path	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_split_path@filename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_split_path@full_path	PTR unsigned char  size(2) Largest target is 30
		 -> s(BANK2[17]), m(BANK2[30]), 

    fatfs_get_substring@output	PTR unsigned char  size(2) Largest target is 3967
		 -> _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_get_substring@path	PTR unsigned char  size(2) Largest target is 3967
		 -> STR_67(CODE[2]), STR_64(CODE[2]), s(BANK2[17]), m(BANK2[30]), 
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_total_path_levels@path	PTR unsigned char  size(2) Largest target is 3967
		 -> STR_67(CODE[2]), STR_64(CODE[2]), s(BANK2[17]), m(BANK2[30]), 
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_lfn_generate_tail@sfn_input	PTR unsigned char  size(2) Largest target is 11
		 -> _create_file@shortFilename(BANK1[11]), _create_directory@shortFilename(BANK1[11]), 

    fatfs_lfn_generate_tail@sfn_output	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_itoa@s	PTR unsigned char  size(2) Largest target is 12
		 -> fatfs_lfn_generate_tail@tail_str(COMRAM[12]), 

    fatfs_itoa@cp	PTR unsigned char  size(2) Largest target is 12
		 -> fatfs_itoa@outbuf(COMRAM[12]), 

    fatfs_lfn_create_sfn@sfn_output	PTR unsigned char  size(2) Largest target is 11
		 -> _create_file@shortFilename(BANK1[11]), _create_directory@shortFilename(BANK1[11]), 

    fatfs_lfn_create_sfn@filename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_sfn_create_entry@shortfilename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_sfn_create_entry@entry	PTR struct fat_dir_entry size(2) Largest target is 32
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), 

    fatfs_filename_to_lfn@buffer	PTR unsigned char  size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_filename_to_lfn@filename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_lfn_entries_required@filename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_entry_is_file@entry	PTR struct fat_dir_entry size(2) Largest target is 32
		 -> _open_file@sfEntry(BANK1[32]), 

    fatfs_entry_is_dir@entry	PTR struct fat_dir_entry size(2) Largest target is 32
		 -> _fs.currentsector.sector(BIGRAM[512]), _open_directory@sfEntry(BANK0[32]), 

    fatfs_entry_sfn_only@entry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector.currentsector.sector(BIGRAM[512]), _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_entry_lfn_exists@lfn	PTR struct lfn_cache size(2) Largest target is 52
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 

    fatfs_entry_lfn_exists@entry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_entry_lfn_invalid@entry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector.currentsector.sector(BIGRAM[512]), _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_entry_lfn_text@entry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector.currentsector.sector(BIGRAM[512]), _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_lfn_cache_get@lfn	PTR struct lfn_cache size(2) Largest target is 52
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 

    fatfs_lfn_cache_entry@lfn	PTR struct lfn_cache size(2) Largest target is 52
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 

    fatfs_lfn_cache_entry@entryBuffer	PTR unsigned char  size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_lfn_cache_init@lfn	PTR struct lfn_cache size(2) Largest target is 52
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 

    fatfs_format@name	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_60(CODE[6]), 

    fatfs_format@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_format_fat32@name	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_60(CODE[6]), 

    fatfs_format_fat32@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_format_fat32@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_format_fat32@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_format_fat32@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_format_fat32@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_format_fat32@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_format_fat32@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_format_fat32@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_format_fat16@name	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_60(CODE[6]), 

    fatfs_format_fat16@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_format_fat16@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_format_fat16@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_format_fat16@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_format_fat16@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_format_fat16@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_format_fat16@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_format_fat16@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_erase_fat@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_erase_fat@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_erase_fat@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_erase_fat@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_erase_fat@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_erase_fat@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_erase_fat@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_erase_fat@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_create_fsinfo_sector@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_create_fsinfo_sector@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_create_fsinfo_sector@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_create_fsinfo_sector@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_create_fsinfo_sector@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_create_fsinfo_sector@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_create_fsinfo_sector@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_create_fsinfo_sector@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_create_boot_sector@name	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_60(CODE[6]), 

    fatfs_create_boot_sector@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_create_boot_sector@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_create_boot_sector@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_create_boot_sector@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_create_boot_sector@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_create_boot_sector@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_create_boot_sector@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_create_boot_sector@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_erase_sectors@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_erase_sectors@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_erase_sectors@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_erase_sectors@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_erase_sectors@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_erase_sectors@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_erase_sectors@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_erase_sectors@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fl_format@name	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_60(CODE[6]), 

    fl_readdir@entry	PTR struct fs_dir_ent size(2) Largest target is 19
		 -> fl_listdirectory@dirent(BANK1[19]), 

    fl_readdir@dirls	PTR struct fs_dir_list_status size(2) Largest target is 9
		 -> fl_listdirectory@dirstat(BANK1[9]), 

    fl_opendir@dir	PTR struct fs_dir_list_status size(2) Largest target is 9
		 -> dptr(BANK1[9]), fl_is_dir@dir(COMRAM[9]), fl_listdirectory@dirstat(BANK1[9]), 

    fl_opendir@path	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_67(CODE[2]), STR_64(CODE[2]), m(BANK2[30]), 

    sp__fl_opendir	PTR struct fs_dir_list_status size(2) Largest target is 3967
		 -> dptr(BANK1[9]), fatfs_add_file_entry@shortEntry(BANK1[32]), fl_is_dir@dir(COMRAM[9]), fl_listdirectory@dirstat(BANK1[9]), 
		 -> _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_listdirectory@path	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_67(CODE[2]), STR_64(CODE[2]), m(BANK2[30]), 

    fl_createdirectory@path	PTR const unsigned char  size(2) Largest target is 30
		 -> m(BANK2[30]), 

    fl_remove@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_remove@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_remove@filename	PTR const unsigned char  size(2) Largest target is 30
		 -> m(BANK2[30]), 

    fl_remove@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fwrite@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fwrite@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fwrite@data	PTR const void  size(3) Largest target is 65535
		 -> w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), fl_fputc@data(COMRAM[1]), 
		 -> ROM(CODE[65535]), 

    fl_fwrite@buffer	PTR unsigned char  size(3) Largest target is 65535
		 -> w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), fl_fputc@data(COMRAM[1]), 
		 -> ROM(CODE[65535]), 

    fl_fwrite@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fwrite@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_feof@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_feof@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_feof@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_feof@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_ftell@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fgetpos@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fgetpos@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fgetpos@position	PTR unsigned long  size(2) Largest target is 4
		 -> fl_ftell@pos(COMRAM[4]), 

    fl_fgetpos@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fgetpos@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fseek@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fseek@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fseek@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fseek@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fread@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fread@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fread@buffer	PTR void  size(2) Largest target is 1
		 -> data(BANK1[1]), fl_fgetc@data(BANK0[1]), 

    fl_fread@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fread@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    sp__fl_fgets	PTR unsigned char  size(2) Largest target is 3967
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fl_fgetc@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fclose@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fclose@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fclose@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fclose@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fflush@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fflush@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fflush@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fflush@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _write_sectors@buf	PTR unsigned char  size(3) Largest target is 65535
		 -> w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), fl_fputc@data(COMRAM[1]), 
		 -> ROM(CODE[65535]), RAM(DATA[3967]), NULL(NULL[0]), 

    _write_sectors@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _write_sectors@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _write_sectors@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    sp__fl_fopen.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp__fl_fopen.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fopen@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fopen@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fopen@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fopen@mode	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_43(CODE[2]), STR_36(CODE[2]), STR_29(CODE[2]), STR_23(CODE[2]), 
		 -> STR_21(CODE[2]), STR_18(CODE[2]), STR_10(CODE[2]), 

    fl_fopen@path	PTR const unsigned char  size(2) Largest target is 30
		 -> s(BANK2[17]), m(BANK2[30]), 

    sp__fl_fopen	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_attach_media@wr	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fl_attach_media@rd	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    _files.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _read_sectors@buffer	PTR unsigned char  size(2) Largest target is 3967
		 -> data(BANK1[1]), fl_fgetc@data(BANK0[1]), RAM(DATA[3967]), NULL(NULL[0]), 

    _read_sectors@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _read_sectors@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _read_sectors@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    sp___create_file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp___create_file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _create_file@filename	PTR const unsigned char  size(2) Largest target is 30
		 -> s(BANK2[17]), m(BANK2[30]), 

    _create_file@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _create_file@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _create_file@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    sp___create_file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    sp___open_file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp___open_file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@path	PTR const unsigned char  size(2) Largest target is 30
		 -> s(BANK2[17]), m(BANK2[30]), 

    sp___open_file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _create_directory@path	PTR unsigned char  size(2) Largest target is 30
		 -> m(BANK2[30]), 

    _create_directory@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _create_directory@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _create_directory@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _open_directory@pathCluster	PTR unsigned long  size(2) Largest target is 3967
		 -> fl_opendir@cluster(BANK0[4]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_directory@path	PTR unsigned char  size(2) Largest target is 3967
		 -> STR_67(CODE[2]), STR_64(CODE[2]), m(BANK2[30]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    _free_file@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@openFile.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@openFile.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@openFile	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@node	PTR struct fat_node size(2) Largest target is 3967
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _files(BIGRAM[1160]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), 
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    sp___allocate_file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _allocate_file@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _allocate_file@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _allocate_file@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file_list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file_list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    _fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    _fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    _fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    sp_fat_list@fat_list_pop_head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp_fat_list@fat_list_pop_head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp_fat_list@fat_list_pop_head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@list	PTR struct fat_list size(2) Largest target is 6
		 -> _free_file_list(BANK1[4]), 

    fat_list@fat_list_pop_head@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_is_empty@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_is_empty@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_last@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_last@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_last@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_last@list	PTR struct fat_list size(2) Largest target is 6
		 -> _open_file_list(BANK1[4]), _free_file_list(BANK1[4]), 

    fat_list@fat_list_insert_first@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list	PTR struct fat_list size(2) Largest target is 6
		 -> _open_file_list(BANK1[4]), _free_file_list(BANK1[4]), 

    fat_list@fat_list_insert_before@node.previous.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node.previous.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list	PTR struct fat_list size(2) Largest target is 6
		 -> _open_file_list(BANK1[4]), _free_file_list(BANK1[4]), 

    fat_list@fat_list_insert_before@new_node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node.next.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node.next.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list	PTR struct fat_list size(2) Largest target is 6
		 -> _open_file_list(BANK1[4]), _free_file_list(BANK1[4]), 

    fat_list@fat_list_insert_after@new_node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.next.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.next.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.previous.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.previous.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list	PTR struct fat_list size(2) Largest target is 6
		 -> _open_file_list(BANK1[4]), _free_file_list(BANK1[4]), 

    fat_list@fat_list_remove@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list	PTR struct fat_list size(2) Largest target is 6
		 -> _open_file_list(BANK1[4]), _free_file_list(BANK1[4]), 

    sp__fat_list_pop_head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp__fat_list_pop_head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp__fat_list_pop_head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_pop_head@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_pop_head@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_pop_head@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_pop_head@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_is_empty@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_is_empty@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_last@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_last@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@list.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@list.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@node.previous.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@node.previous.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@new_node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@new_node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@new_node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@new_node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@new_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@new_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@node.next.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@node.next.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@list.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@list.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@new_node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@new_node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@new_node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@new_node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@new_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@new_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.next.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.next.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@list.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@list.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.previous.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.previous.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    S777fat_node$next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_init@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    S777fat_node$previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_init@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    S780fat_list$tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_init@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    S780fat_list$head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_init@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 19
		 -> fl_listdirectory@dirent(BANK1[19]), 

    fatfs_list_directory_next@entry	PTR struct fs_dir_ent size(2) Largest target is 19
		 -> fl_listdirectory@dirent(BANK1[19]), 

    fatfs_list_directory_next@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_list_directory_next@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_list_directory_next@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_list_directory_next@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_list_directory_next@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_list_directory_next@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_list_directory_next@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_list_directory_next@directoryEntry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_list_directory_next@dirls	PTR struct fs_dir_list_status size(2) Largest target is 9
		 -> fl_listdirectory@dirstat(BANK1[9]), 

    fatfs_list_directory_next@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_list_directory_next@long_filename	PTR unsigned char  size(2) Largest target is 52
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 
		 -> NULL(NULL[0]), 

    fatfs_list_directory_start@dirls	PTR struct fs_dir_list_status size(2) Largest target is 9
		 -> dptr(BANK1[9]), fl_is_dir@dir(COMRAM[9]), fl_listdirectory@dirstat(BANK1[9]), 

    fatfs_mark_file_deleted@shortname	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_mark_file_deleted@directoryEntry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_mark_file_deleted@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_mark_file_deleted@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_mark_file_deleted@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_mark_file_deleted@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_mark_file_deleted@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_mark_file_deleted@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_mark_file_deleted@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_mark_file_deleted@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_update_file_length@shortname	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_update_file_length@directoryEntry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_update_file_length@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_update_file_length@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_update_file_length@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_update_file_length@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_update_file_length@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_update_file_length@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_update_file_length@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_update_file_length@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_sfn_exists@shortname	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_sfn_exists@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sfn_exists@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sfn_exists@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sfn_exists@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sfn_exists@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sfn_exists@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_sfn_exists@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_sfn_exists@directoryEntry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector.currentsector.sector(BIGRAM[512]), 

    fatfs_sfn_exists@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    sp__memset	PTR void  size(2) Largest target is 3967
		 -> _fs.currentsector.sector(BIGRAM[512]), lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), _fs.fat_buffers(BIGRAM[522]), 
		 -> _fs.currentsector(BIGRAM[524]), fatfs_lfn_generate_tail@tail_str(COMRAM[12]), fatfs_lfn_create_sfn@ext(COMRAM[3]), _create_file@shortFilename(BANK1[11]), 
		 -> _create_directory@shortFilename(BANK1[11]), _fs(BIGRAM[1095]), RAM(DATA[3967]), fatfs_list_directory_next@short_filename(BANK1[13]), 
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 3967
		 -> _fs.currentsector.sector(BIGRAM[512]), data(BANK1[1]), fl_fgetc@data(BANK0[1]), _create_file@sfEntry(BANK1[32]), 
		 -> _open_file@sfEntry(BANK1[32]), _create_directory@sfEntry(BANK1[32]), _open_directory@sfEntry(BANK0[32]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_get_file_entry@sfEntry	PTR struct fat_dir_entry size(2) Largest target is 32
		 -> _create_file@sfEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _create_directory@sfEntry(BANK1[32]), _open_directory@sfEntry(BANK0[32]), 

    fatfs_get_file_entry@name_to_find	PTR unsigned char  size(2) Largest target is 3967
		 -> _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp__fatfs_lfn_cache_get	PTR unsigned char  size(2) Largest target is 52
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 

    fatfs_get_file_entry@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_get_file_entry@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_get_file_entry@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_get_file_entry@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_get_file_entry@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_get_file_entry@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_get_file_entry@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_get_file_entry@directoryEntry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_get_file_entry@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_get_file_entry@long_filename	PTR unsigned char  size(2) Largest target is 52
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 
		 -> NULL(NULL[0]), 

    fatfs_get_root_cluster@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_get_root_cluster@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_get_root_cluster@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_get_root_cluster@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_get_root_cluster@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_get_root_cluster@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_get_root_cluster@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_get_root_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_show_details@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_show_details@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_show_details@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_show_details@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_show_details@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_show_details@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_show_details@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_write_sector@target	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_write_sector@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_write_sector@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_write_sector@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_write_sector@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_write_sector@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_write_sector@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_write_sector@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_write_sector@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_read_sector@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_read_sector@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_read_sector@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_read_sector@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_read_sector@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_read_sector@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_read_sector@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_sector_reader@target	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fatfs_sector_reader@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_reader@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_reader@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_reader@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sector_reader@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sector_reader@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_sector_reader@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_sector_reader@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_sector_write@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_write@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_write@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_write@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sector_write@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sector_write@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_sector_write@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_sector_write@target	PTR unsigned char  size(3) Largest target is 65535
		 -> w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), fl_fputc@data(COMRAM[1]), 
		 -> ROM(CODE[65535]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_sector_write@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_sector_read@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_read@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_read@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_read@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sector_read@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sector_read@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_sector_read@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_sector_read@target	PTR unsigned char  size(2) Largest target is 3967
		 -> data(BANK1[1]), fl_fgetc@data(BANK0[1]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_sector_read@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_lba_of_cluster@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_lba_of_cluster@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_lba_of_cluster@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_lba_of_cluster@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_lba_of_cluster@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_lba_of_cluster@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_lba_of_cluster@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_lba_of_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    S49fatfs$fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_init@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    S43fat_buffer$next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_init@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    S43fat_buffer$ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_init@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    S49fatfs$fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_init@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    S49fatfs$fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_init@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    S26disk_if$write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_init@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    S26disk_if$read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_init@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_init@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 


Critical Paths under _main in COMRAM

    _mmc_init->_command
    _fl_shutdown->_fatfs_fat_purge
    _fl_attach_media->_fatfs_init
    _fatfs_init->_media_read
    _printf->___lwmod
    _putch->_Write
    ___lwmod->___lwdiv
    _Format_drive->_File_format
    _File_format->_fl_format
    _fl_format->_fatfs_format
    _fatfs_format->_fatfs_format_fat16
    _fatfs_format->_fatfs_format_fat32
    _fatfs_format_fat32->_fatfs_create_boot_sector
    _fatfs_create_fsinfo_sector->_media_write
    _fatfs_format_fat16->_fatfs_create_boot_sector
    _fatfs_fat_init->_memset
    _fatfs_erase_sectors->_media_write
    _fatfs_erase_fat->_media_write
    _fatfs_create_boot_sector->_media_write
    _Draw_Line->_Write
    _fl_ftell->_fl_fgetpos
    _fl_fseek->_fl_init
    __read_sectors->_fatfs_find_next_cluster
    _fatfs_sector_read->_media_read
    __write_sectors->_fatfs_add_free_space
    __write_sectors->_fatfs_find_next_cluster
    _fatfs_sector_write->_media_write
    _Write->_WriteUSART
    _ReadUART->_ReadUSART
    _fl_init->fat_list@fat_list_insert_last
    _fatfs_split_path->_fatfs_get_substring
    _fatfs_lfn_generate_tail->_fatfs_itoa
    _fatfs_itoa->___lldiv
    _fatfs_lfn_create_sfn->_memset
    _fatfs_free_cluster_chain->_fatfs_find_next_cluster
    _fatfs_fat_purge->_fatfs_fat_writeback
    _fatfs_allocate_free_space->_fatfs_add_free_space
    _fatfs_add_free_space->_fatfs_find_blank_cluster
    _fatfs_set_fs_info_next_free_cluster->_fatfs_fat_read_sector
    _fatfs_write_sector->_media_write
    _fatfs_find_blank_cluster->_fatfs_fat_read_sector
    _fatfs_fat_add_cluster_to_chain->_fatfs_find_next_cluster
    _fatfs_fat_set_cluster->_fatfs_fat_read_sector
    _fatfs_filename_to_lfn->_fatfs_lfn_entries_required
    _fatfs_lfn_entries_required->___awdiv
    _fatfs_get_substring->_strlen
    _fatfs_sector_reader->_fatfs_find_next_cluster
    _fatfs_find_next_cluster->_fatfs_fat_read_sector
    _fatfs_fat_read_sector->_fatfs_fat_writeback
    _media_read->_command
    _fatfs_fat_writeback->_media_write
    _media_write->_command
    _command->_WriteSPI_
    _fatfs_lfn_cache_init->_memset
    __free_file->fat_list@fat_list_insert_last
    __check_file_open->_fatfs_compare_names
    _fatfs_compare_names->_FileString_StrCmpNoCase
    _FileString_StrCmpNoCase->_strlen
    __allocate_file->fat_list@fat_list_insert_last
    fat_list@fat_list_pop_head->fat_list@fat_list_remove
    fat_list@fat_list_insert_last->fat_list@fat_list_insert_first
    fat_list@fat_list_insert_first->fat_list@fat_list_insert_before
    _Switch->_Check_extension
    _Check_extension->_strncmp
    _Write_str->_putsUSART
    _putsUSART->_WriteUSART
    _Read_str->_ReadUSART
    _Read_str->_WriteUSART
    _ConfigUSART->_OpenUSART

Critical Paths under _main in BANK0

    _Open_dir->_fl_opendir
    _fl_listdirectory->_fl_opendir
    _fl_readdir->_fatfs_list_directory_next
    _fatfs_list_directory_next->_fatfs_sector_reader
    _fl_opendir->__open_directory
    _File_write->_fl_fopen
    _File_read->_fl_fopen
    _fl_fgetc->_fl_fread
    _fl_remove->_fl_fopen
    _fatfs_mark_file_deleted->_fatfs_sector_reader
    _File_append->_fl_fopen
    _fl_fwrite->_fl_fflush
    _fl_fread->_fl_fflush
    _fl_fopen->__open_file
    __open_file->__open_directory
    __create_file->__open_directory
    _fl_fclose->_fl_fflush
    _fl_fflush->__write_sectors
    __write_sectors->_fatfs_add_free_space
    _fatfs_update_file_length->_fatfs_sector_reader
    _Create_folder->_fl_createdirectory
    _fl_createdirectory->__create_directory
    __create_directory->__open_directory
    _fatfs_sfn_exists->_fatfs_sector_reader
    _fatfs_allocate_free_space->_fatfs_add_free_space
    _fatfs_add_free_space->_fatfs_find_blank_cluster
    _fatfs_add_file_entry->_fatfs_find_free_dir_offset
    _fatfs_find_free_dir_offset->_fatfs_sector_reader
    __open_directory->_fatfs_get_file_entry
    _fatfs_get_file_entry->_fatfs_sector_reader

Critical Paths under _main in BANK1

    _main->_File_write
    _Open_dir->_fl_listdirectory
    _fl_readdir->_fatfs_list_directory_next
    _File_write->_fl_remove
    _File_read->_fl_fopen
    _fl_fgetc->_fl_fread
    _File_delete->_fl_remove
    _fl_remove->_fl_fopen
    _File_append->_fl_fopen
    _fl_fopen->__create_file
    __open_file->_fatfs_get_file_entry
    __create_file->_fatfs_get_file_entry
    _fl_createdirectory->__create_directory
    __create_directory->_fatfs_get_file_entry
    __open_directory->_fatfs_get_file_entry

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 3794042
                                            138 BANK1      1     1      0
                        _ConfigUSART
                      _Create_folder
                        _File_append
                        _File_delete
                          _File_read
                         _File_write
                       _Format_drive
                           _Open_dir
                           _ReadUART
                          _Write_str
                    _fl_attach_media
                            _fl_init
                   _fl_listdirectory
                        _fl_shutdown
                           _mmc_init
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mmc_init                                             3     3      0    1123
                                              8 COMRAM     3     3      0
                          _WriteSPI_
                            _command
                           _spi_read
 ---------------------------------------------------------------------------------
 (1) _fl_shutdown                                          0     0      0    6249
                    _fatfs_fat_purge
                            _fl_init
 ---------------------------------------------------------------------------------
 (1) _fl_attach_media                                      6     2      4   15323
                                             84 COMRAM     6     2      4
                         _fatfs_init
                            _fl_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _fatfs_init                                          54    52      2   10858
                                             30 COMRAM    54    52      2
                            ___lldiv
                            ___lwdiv
                     _fatfs_fat_init
                         _media_read *
 ---------------------------------------------------------------------------------
 (1) _Open_dir                                             0     0      0  144254
                            _Clr_str
                           _Read_str
                             _Switch
                          _Write_str
                        _fl_closedir
                   _fl_listdirectory
                         _fl_opendir
                             _printf
 ---------------------------------------------------------------------------------
 (1) _fl_listdirectory                                    30    28      2   83164
                                             77 BANK1     30    28      2
                        _fl_closedir
                            _fl_init
                         _fl_opendir
                         _fl_readdir
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              20    12      8    2276
                                             12 COMRAM    20    12      8
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      88
                                              2 COMRAM     1     1      0
                              _Write
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     470
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _fl_readdir                                           6     2      4   33627
                                             58 BANK0      6     2      4
          _fatfs_list_directory_next
                            _fl_init
 ---------------------------------------------------------------------------------
 (3) _fatfs_list_directory_next                           91    85      6   31459
                                             44 BANK0     14     8      6
                                              0 BANK1     77    77      0
                 _fatfs_entry_is_dir
             _fatfs_entry_lfn_exists
            _fatfs_entry_lfn_invalid
               _fatfs_entry_lfn_text
               _fatfs_entry_sfn_only
         _fatfs_get_sfn_display_name
              _fatfs_lfn_cache_entry
                _fatfs_lfn_cache_get
               _fatfs_lfn_cache_init
                _fatfs_sector_reader
                             _memset
                            _strncpy
 ---------------------------------------------------------------------------------
 (4) _strncpy                                              8     2      6     525
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _fatfs_get_sfn_display_name                           7     3      4     332
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _fl_opendir                                          12     8      4   44640
                                            114 BANK0     12     8      4
                    __open_directory
             _fatfs_get_root_cluster
         _fatfs_list_directory_start
            _fatfs_total_path_levels
                            _fl_init
 ---------------------------------------------------------------------------------
 (3) _fatfs_list_directory_start                           8     0      8     280
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (2) _fl_closedir                                          2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Format_drive                                         0     0      0   91708
                            _Clr_str
                        _File_format
                           _ReadUART
                           _Read_str
                          _Write_str
 ---------------------------------------------------------------------------------
 (2) _File_format                                          6     0      6   86955
                                            106 COMRAM     6     0      6
                          _Write_str
                          _fl_format
 ---------------------------------------------------------------------------------
 (3) _fl_format                                            6     0      6   83431
                                            100 COMRAM     6     0      6
                       _fatfs_format
 ---------------------------------------------------------------------------------
 (4) _fatfs_format                                        12     4      8   83259
                                             88 COMRAM    12     4      8
                 _fatfs_format_fat16
                 _fatfs_format_fat32
 ---------------------------------------------------------------------------------
 (5) _fatfs_format_fat32                                  29    21      8   46106
                                             59 COMRAM    29    21      8
           _fatfs_create_boot_sector
         _fatfs_create_fsinfo_sector
                    _fatfs_erase_fat
                _fatfs_erase_sectors
                     _fatfs_fat_init
               _fatfs_lba_of_cluster
 ---------------------------------------------------------------------------------
 (6) _fatfs_create_fsinfo_sector                          10     4      6    8187
                                             31 COMRAM    10     4      6
                        _media_write *
                             _memset
 ---------------------------------------------------------------------------------
 (5) _fatfs_format_fat16                                  29    21      8   36807
                                             59 COMRAM    29    21      8
           _fatfs_create_boot_sector
                    _fatfs_erase_fat
                _fatfs_erase_sectors
                     _fatfs_fat_init
 ---------------------------------------------------------------------------------
 (3) _fatfs_fat_init                                      12    10      2    4888
                                              8 COMRAM    12    10      2
                             _memset
 ---------------------------------------------------------------------------------
 (6) _fatfs_erase_sectors                                 18    10      8    8115
                                             31 COMRAM    18    10      8
               _fatfs_lba_of_cluster (ARG)
                        _media_write *
                             _memset
 ---------------------------------------------------------------------------------
 (6) _fatfs_erase_fat                                     21    17      4    8471
                                             31 COMRAM    21    17      4
                        _media_write *
                             _memset
 ---------------------------------------------------------------------------------
 (6) _fatfs_create_boot_sector                            28    14     14   14437
                                             31 COMRAM    28    14     14
                            ___lldiv
            _fatfs_calc_cluster_size
                        _media_write *
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _fatfs_calc_cluster_size                             14     8      6     330
                                              0 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (1) _File_write                                           1     1      0 1208522
                                            137 BANK1      1     1      0
                            _Clr_str
                           _ReadUART
                           _Read_str
                             _Switch
                          _Write_str
                          _fl_fclose
                           _fl_fopen
                          _fl_fwrite
                          _fl_remove
 ---------------------------------------------------------------------------------
 (1) _File_read                                            0     0      0  601548
                            _Clr_str
                          _Draw_Line
                           _Read_str
                             _Switch
                              _Write
                          _Write_str
                          _fl_fclose
                            _fl_feof
                           _fl_fgetc
                           _fl_fopen
 ---------------------------------------------------------------------------------
 (2) _fl_fgetc                                             5     3      2   73839
                                            118 BANK0      5     3      2
                           _fl_fread
 ---------------------------------------------------------------------------------
 (2) _fl_feof                                             14    12      2     433
                                              0 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (2) _Draw_Line                                            5     4      1     516
                                              2 COMRAM     5     4      1
                              _Write
 ---------------------------------------------------------------------------------
 (1) _File_delete                                          0     0      0  570298
                            _Clr_str
                           _Read_str
                             _Switch
                          _Write_str
                          _fl_remove
 ---------------------------------------------------------------------------------
 (2) _fl_remove                                            6     4      2  556316
                                            131 BANK1      6     4      2
           _fatfs_free_cluster_chain
            _fatfs_mark_file_deleted
                          _fl_fclose
                           _fl_fopen
 ---------------------------------------------------------------------------------
 (3) _fatfs_mark_file_deleted                             19    11      8   24494
                                             44 BANK0     19    11      8
            _fatfs_entry_lfn_invalid
               _fatfs_entry_lfn_text
               _fatfs_entry_sfn_only
                _fatfs_sector_reader
                        _media_write *
                             _memcpy
                            _strncmp
 ---------------------------------------------------------------------------------
 (1) _File_append                                          4     4      0  730014
                                            131 BANK1      4     4      0
                            _Clr_str
                           _ReadUART
                           _Read_str
                             _Switch
                              _Write
                          _Write_str
                          _fl_fclose
                           _fl_fopen
                           _fl_fread
                           _fl_fseek
                           _fl_ftell
                          _fl_fwrite
 ---------------------------------------------------------------------------------
 (2) _fl_fwrite                                           46    37      9  125489
                                             94 BANK0     17     8      9
                                              0 BANK1     29    29      0
                      __read_sectors
                     __write_sectors
                          _fl_fflush
                            _fl_init
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (2) _fl_ftell                                             8     4      4     414
                                              6 COMRAM     8     4      4
                         _fl_fgetpos
 ---------------------------------------------------------------------------------
 (3) _fl_fgetpos                                           6     2      4     217
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _fl_fseek                                            20    12      8    3797
                                             22 COMRAM    20    12      8
                           _fl_ftell (ARG)
                            _fl_init
 ---------------------------------------------------------------------------------
 (3) _fl_fread                                            44    36      8   73531
                                             94 BANK0     24    16      8
                                              0 BANK1     20    20      0
                            ___awdiv
                      __read_sectors
                          _fl_fflush
                            _fl_init
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __read_sectors                                       45    33     12   16082
                                              0 BANK0     45    33     12
                            ___awdiv (ARG)
                            ___lldiv
       _fatfs_cache_get_next_cluster
       _fatfs_cache_set_next_cluster
            _fatfs_find_next_cluster
               _fatfs_lba_of_cluster
                  _fatfs_sector_read
 ---------------------------------------------------------------------------------
 (4) _fatfs_sector_read                                   14     2     12    2513
                                             30 COMRAM    14     2     12
                         _media_read *
 ---------------------------------------------------------------------------------
 (3) _fl_fopen                                            11     7      4  427964
                                            124 BANK0      4     0      4
                                            124 BANK1      7     7      0
                       __create_file
                         __open_file
                            _fl_init
                             _strlen
 ---------------------------------------------------------------------------------
 (4) __open_file                                          44    42      2  108922
                                            114 BANK0     10     8      2
                                             77 BANK1     34    34      0
                     __allocate_file
                   __check_file_open
                         __free_file
                    __open_directory
                   _fatfs_cache_init
                _fatfs_entry_is_file
                    _fatfs_fat_purge
               _fatfs_get_file_entry
             _fatfs_get_root_cluster
                   _fatfs_split_path
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _fatfs_entry_is_file                                  3     1      2      86
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) __create_file                                        53    51      2  314530
                                            114 BANK0      6     4      2
                                             77 BANK1     47    47      0
                     __allocate_file
                   __check_file_open
                         __free_file
                    __open_directory
               _fatfs_add_file_entry
          _fatfs_allocate_free_space
                   _fatfs_cache_init
                    _fatfs_fat_purge
           _fatfs_free_cluster_chain
               _fatfs_get_file_entry
             _fatfs_get_root_cluster
               _fatfs_lfn_create_sfn
            _fatfs_lfn_generate_tail
                   _fatfs_sfn_exists
                   _fatfs_split_path
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _fatfs_cache_init                                     4     0      4     256
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _fl_fclose                                            4     2      2   84748
                                             94 BANK0      4     2      2
                         __free_file
                    _fatfs_fat_purge
           _fatfs_update_file_length
                          _fl_fflush
                            _fl_init
 ---------------------------------------------------------------------------------
 (4) _fl_fflush                                           10     8      2   49544
                                             84 BANK0     10     8      2
                     __write_sectors
                            _fl_init
 ---------------------------------------------------------------------------------
 (5) __write_sectors                                      54    41     13   47161
                                             30 BANK0     54    41     13
                            ___lldiv
               _fatfs_add_free_space
       _fatfs_cache_get_next_cluster
       _fatfs_cache_set_next_cluster
            _fatfs_find_next_cluster
               _fatfs_lba_of_cluster
                 _fatfs_sector_write
 ---------------------------------------------------------------------------------
 (6) _fatfs_sector_write                                  15     2     13    3599
                                             31 COMRAM    15     2     13
                        _media_write *
 ---------------------------------------------------------------------------------
 (6) _fatfs_cache_set_next_cluster                        12     0     12     512
                                              0 COMRAM    12     0     12
 ---------------------------------------------------------------------------------
 (6) _fatfs_cache_get_next_cluster                        10     0     10     512
                                              0 COMRAM    10     0     10
 ---------------------------------------------------------------------------------
 (4) _fatfs_update_file_length                            23    11     12   24580
                                             44 BANK0     23    11     12
            _fatfs_entry_lfn_invalid
               _fatfs_entry_lfn_text
               _fatfs_entry_sfn_only
                _fatfs_sector_reader
                        _media_write *
                             _memcpy
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _Write                                                1     1      0      66
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (1) _ReadUART                                             0     0      0      23
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (1) _Create_folder                                        0     0      0  336100
                            _Clr_str
                           _Read_str
                             _Switch
                          _Write_str
                 _fl_createdirectory
 ---------------------------------------------------------------------------------
 (2) _fl_createdirectory                                   4     2      2  322118
                                            120 BANK0      4     2      2
                  __create_directory
                            _fl_init
 ---------------------------------------------------------------------------------
 (2) _fl_init                                              8     8      0    1972
                                             14 COMRAM     8     8      0
              fat_list@fat_list_init
       fat_list@fat_list_insert_last
 ---------------------------------------------------------------------------------
 (3) fat_list@fat_list_init                                2     0      2     172
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __create_directory                                   55    53      2  320037
                                            114 BANK0      6     4      2
                                             77 BANK1     49    49      0
                     __allocate_file
                   __check_file_open
                         __free_file
                    __open_directory
               _fatfs_add_file_entry
          _fatfs_allocate_free_space
                    _fatfs_fat_purge
           _fatfs_free_cluster_chain
               _fatfs_get_file_entry
             _fatfs_get_root_cluster
               _fatfs_lfn_create_sfn
            _fatfs_lfn_generate_tail
                   _fatfs_sfn_exists
                   _fatfs_split_path
                 _fatfs_write_sector
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _fatfs_split_path                                    18     8     10    7610
                                             28 COMRAM    18     8     10
                _fatfs_get_substring
            _fatfs_total_path_levels
                             _memcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _fatfs_sfn_exists                                    17     9      8   18639
                                             44 BANK0     17     9      8
            _fatfs_entry_lfn_invalid
               _fatfs_entry_lfn_text
               _fatfs_entry_sfn_only
                _fatfs_sector_reader
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _fatfs_lfn_generate_tail                             24    16      8   10366
                                             54 COMRAM    24    16      8
                         _fatfs_itoa
                             _memcpy
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fatfs_itoa                                          41    35      6    1680
                                             13 COMRAM    41    35      6
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     287
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) _fatfs_lfn_create_sfn                                20    16      4    6901
                                              8 COMRAM    20    16      4
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _fatfs_free_cluster_chain                            14     8      6   18825
                                              0 BANK0     14     8      6
              _fatfs_fat_set_cluster
            _fatfs_find_next_cluster
 ---------------------------------------------------------------------------------
 (2) _fatfs_fat_purge                                      4     2      2    4277
                                             51 COMRAM     4     2      2
                _fatfs_fat_writeback
 ---------------------------------------------------------------------------------
 (5) _fatfs_allocate_free_space                           30    20     10   61515
                                             30 BANK0     30    20     10
                            ___lldiv
               _fatfs_add_free_space
              _fatfs_fat_set_cluster
           _fatfs_find_blank_cluster
_fatfs_set_fs_info_next_free_cluster
 ---------------------------------------------------------------------------------
 (6) _fatfs_add_free_space                                24    16      8   30132
                                            115 COMRAM    12     4      8
                                             18 BANK0     12    12      0
                            ___lldiv (ARG)
              _fatfs_fat_set_cluster
           _fatfs_find_blank_cluster
_fatfs_set_fs_info_next_free_cluster
 ---------------------------------------------------------------------------------
 (6) _fatfs_set_fs_info_next_free_cluster                 14     8      6   11403
                                             69 COMRAM    14     8      6
              _fatfs_fat_read_sector
                        _media_write *
 ---------------------------------------------------------------------------------
 (5) _fatfs_add_file_entry                                80    60     20   89280
                                             76 BANK0     24     4     20
                                              0 BANK1     56    56      0
              _fatfs_filename_to_lfn
         _fatfs_find_free_dir_offset
         _fatfs_lfn_entries_required
                _fatfs_sector_reader
             _fatfs_sfn_create_entry
                        _media_write *
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _fatfs_sfn_create_entry                              16     2     14     916
                                              0 COMRAM    16     2     14
 ---------------------------------------------------------------------------------
 (6) _fatfs_find_free_dir_offset                          32    20     12   54585
                                             44 BANK0     32    20     12
               _fatfs_entry_lfn_text
     _fatfs_fat_add_cluster_to_chain
           _fatfs_find_blank_cluster
                _fatfs_sector_reader
                 _fatfs_write_sector
                             _memset
 ---------------------------------------------------------------------------------
 (7) _fatfs_write_sector                                  32    20     12    5651
                                             31 COMRAM    32    20     12
               _fatfs_lba_of_cluster
                        _media_write *
 ---------------------------------------------------------------------------------
 (6) _fatfs_find_blank_cluster                            64    56      8    8697
                                             69 COMRAM    46    38      8
                                              0 BANK0     18    18      0
              _fatfs_fat_read_sector
 ---------------------------------------------------------------------------------
 (7) _fatfs_fat_add_cluster_to_chain                      18     8     10   18466
                                              0 BANK0     18     8     10
              _fatfs_fat_set_cluster
            _fatfs_find_next_cluster
 ---------------------------------------------------------------------------------
 (6) _fatfs_fat_set_cluster                               28    18     10    9268
                                             69 COMRAM    28    18     10
              _fatfs_fat_read_sector
 ---------------------------------------------------------------------------------
 (6) _fatfs_filename_to_lfn                               33    26      7    8239
                                             12 COMRAM    33    26      7
         _fatfs_lfn_entries_required
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fatfs_lfn_entries_required                           4     2      2    1865
                                              8 COMRAM     4     2      2
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     556
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __open_directory                                     58    54      4   41059
                                             56 BANK0     58    54      4
                 _fatfs_entry_is_dir
               _fatfs_get_file_entry
             _fatfs_get_root_cluster
                _fatfs_get_substring
            _fatfs_total_path_levels
 ---------------------------------------------------------------------------------
 (3) _fatfs_total_path_levels                              7     5      2     398
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _fatfs_get_substring                                 22    14      8    2123
                                              6 COMRAM    22    14      8
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _fatfs_get_root_cluster                               4     0      4     342
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _fatfs_get_file_entry                                89    79     10   37141
                                             44 BANK0     12     2     10
                                              0 BANK1     77    77      0
                _fatfs_compare_names
             _fatfs_entry_lfn_exists
            _fatfs_entry_lfn_invalid
               _fatfs_entry_lfn_text
               _fatfs_entry_sfn_only
              _fatfs_lfn_cache_entry
                _fatfs_lfn_cache_get
               _fatfs_lfn_cache_init
                _fatfs_sector_reader
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              12     5      7    2616
                                              0 COMRAM    12     5      7
 ---------------------------------------------------------------------------------
 (4) _fatfs_sector_reader                                 44    32     12   15624
                                              0 BANK0     44    32     12
                            ___lldiv
            _fatfs_find_next_cluster
               _fatfs_lba_of_cluster
                         _media_read *
 ---------------------------------------------------------------------------------
 (5) _fatfs_lba_of_cluster                                30    24      6    1200
                                              0 COMRAM    30    24      6
 ---------------------------------------------------------------------------------
 (5) _fatfs_find_next_cluster                             58    52      6    8738
                                             69 COMRAM    58    52      6
              _fatfs_fat_read_sector
 ---------------------------------------------------------------------------------
 (6) _fatfs_fat_read_sector                               18    12      6    7407
                                             51 COMRAM    18    12      6
                _fatfs_fat_writeback
                         _media_read *
 ---------------------------------------------------------------------------------
 (5) _media_read                                          22    12     10    2169
                                              8 COMRAM    22    12     10
                          _WriteSPI_
                            _command
                           _spi_read
 ---------------------------------------------------------------------------------
 (3) _fatfs_fat_writeback                                 20    16      4    3823
                                             31 COMRAM    20    16      4
                        _media_write *
 ---------------------------------------------------------------------------------
 (4) _media_write                                         27    16     11    3255
                                              8 COMRAM    23    12     11
                          _WriteSPI_
                            _command
                           _spi_read
 ---------------------------------------------------------------------------------
 (2) _command                                              6     1      5    1053
                                              2 COMRAM     6     1      5
                            _ReadBUF
                          _WriteSPI_
                           _spi_read
 ---------------------------------------------------------------------------------
 (2) _spi_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WriteSPI_                                            2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadBUF                                              1     1      0       2
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1010
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _fatfs_lfn_cache_init                                 8     4      4    5351
                                              8 COMRAM     8     4      4
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    4320
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _fatfs_lfn_cache_get                                  3     1      2     282
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _fatfs_lfn_cache_entry                               16    12      4    1425
                                              0 COMRAM    16    12      4
 ---------------------------------------------------------------------------------
 (4) _fatfs_entry_sfn_only                                 3     1      2     430
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _fatfs_entry_lfn_text                                 3     1      2     406
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _fatfs_entry_lfn_invalid                              3     1      2     408
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _fatfs_entry_lfn_exists                               5     1      4     388
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _fatfs_entry_is_dir                                   3     1      2     214
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) __free_file                                           2     0      2    3596
                                             14 COMRAM     2     0      2
       fat_list@fat_list_insert_last
            fat_list@fat_list_remove
 ---------------------------------------------------------------------------------
 (5) __check_file_open                                     6     4      2    4134
                                             36 COMRAM     6     4      2
                _fatfs_compare_names
 ---------------------------------------------------------------------------------
 (5) _fatfs_compare_names                                 18    14      4    3718
                                             18 COMRAM    18    14      4
            _FileString_GetExtension
            _FileString_StrCmpNoCase
              _FileString_TrimLength
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2    1114
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _FileString_TrimLength                               10     6      4     437
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _FileString_StrCmpNoCase                             12     6      6     677
                                              6 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _FileString_GetExtension                              8     6      2     328
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) __allocate_file                                       4     2      2    2472
                                             14 COMRAM     4     2      2
       fat_list@fat_list_insert_last
          fat_list@fat_list_pop_head
 ---------------------------------------------------------------------------------
 (6) fat_list@fat_list_pop_head                            4     2      2     651
                                              6 COMRAM     4     2      2
            fat_list@fat_list_remove
 ---------------------------------------------------------------------------------
 (6) fat_list@fat_list_remove                              6     2      4     476
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) fat_list@fat_list_insert_last                         4     0      4    1732
                                             10 COMRAM     4     0      4
      fat_list@fat_list_insert_after
      fat_list@fat_list_insert_first
 ---------------------------------------------------------------------------------
 (4) fat_list@fat_list_insert_first                        4     0      4     782
                                              6 COMRAM     4     0      4
     fat_list@fat_list_insert_before
 ---------------------------------------------------------------------------------
 (5) fat_list@fat_list_insert_before                       6     0      6     434
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (4) fat_list@fat_list_insert_after                        8     2      6     434
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _Switch                                               6     6      0    9252
                                             21 COMRAM     6     6      0
                    _Check_extension
                      _Format_string
                          _Write_str
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               9     5      4     509
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (3) _Format_string                                        5     0      5     607
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (3) _Check_extension                                     12     9      3    4737
                                              9 COMRAM    12     9      3
                          _Write_str
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6    1094
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _Write_str                                            2     0      2    3352
                                              5 COMRAM     2     0      2
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            4     2      2     130
                                              1 COMRAM     4     2      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _Read_str                                             4     2      2     693
                                              1 COMRAM     4     2      2
                          _ReadUSART
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (5) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Clr_str                                              2     0      2     685
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ConfigUSART                                          2     1      1     392
                                              6 COMRAM     2     1      1
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     284
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigUSART
     _OpenUSART
   _Create_folder
     _Clr_str
     _Read_str
       _ReadUSART
       _WriteUSART
     _Switch
       _Check_extension
         _Write_str
           _putsUSART
             _WriteUSART
         _strncmp
       _Format_string
       _Write_str
         _putsUSART
           _WriteUSART
       _strcmp
     _Write_str
       _putsUSART
         _WriteUSART
     _fl_createdirectory
       __create_directory
         __allocate_file
           fat_list@fat_list_insert_last
             fat_list@fat_list_insert_after
             fat_list@fat_list_insert_first
               fat_list@fat_list_insert_before
           fat_list@fat_list_pop_head
             fat_list@fat_list_remove
         __check_file_open
           _fatfs_compare_names
             _FileString_GetExtension
             _FileString_StrCmpNoCase
               _strlen (ARG)
             _FileString_TrimLength
             _strlen
         __free_file
           fat_list@fat_list_insert_last
             fat_list@fat_list_insert_after
             fat_list@fat_list_insert_first
               fat_list@fat_list_insert_before
           fat_list@fat_list_remove
         __open_directory
           _fatfs_entry_is_dir
           _fatfs_get_file_entry
             _fatfs_compare_names
               _FileString_GetExtension
               _FileString_StrCmpNoCase
                 _strlen (ARG)
               _FileString_TrimLength
               _strlen
             _fatfs_entry_lfn_exists
             _fatfs_entry_lfn_invalid
             _fatfs_entry_lfn_text
             _fatfs_entry_sfn_only
             _fatfs_lfn_cache_entry
             _fatfs_lfn_cache_get
             _fatfs_lfn_cache_init
               _memset
             _fatfs_sector_reader
               ___lldiv
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _WriteSPI_
                       _command
                         _ReadBUF
                         _WriteSPI_
                         _spi_read
                       _spi_read
                   _media_read *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
               _fatfs_lba_of_cluster
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
             _memcpy
             _memset
           _fatfs_get_root_cluster
           _fatfs_get_substring
             _strlen
           _fatfs_total_path_levels
         _fatfs_add_file_entry
           _fatfs_filename_to_lfn
             _fatfs_lfn_entries_required
               ___awdiv
               _strlen
             _memset
             _strlen
           _fatfs_find_free_dir_offset
             _fatfs_entry_lfn_text
             _fatfs_fat_add_cluster_to_chain
               _fatfs_fat_set_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _WriteSPI_
                       _command
                         _ReadBUF
                         _WriteSPI_
                         _spi_read
                       _spi_read
                   _media_read *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _WriteSPI_
                       _command
                         _ReadBUF
                         _WriteSPI_
                         _spi_read
                       _spi_read
                   _media_read *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
             _fatfs_find_blank_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_sector_reader
               ___lldiv
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _WriteSPI_
                       _command
                         _ReadBUF
                         _WriteSPI_
                         _spi_read
                       _spi_read
                   _media_read *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
               _fatfs_lba_of_cluster
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
             _fatfs_write_sector
               _fatfs_lba_of_cluster
               _media_write *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
             _memset
           _fatfs_lfn_entries_required
             ___awdiv
             _strlen
           _fatfs_sector_reader
             ___lldiv
             _fatfs_find_next_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_lba_of_cluster
             _media_read *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
           _fatfs_sfn_create_entry
           _media_write *
             _WriteSPI_
             _command
               _ReadBUF
               _WriteSPI_
               _spi_read
             _spi_read
           _memcpy *
         _fatfs_allocate_free_space
           ___lldiv
           _fatfs_add_free_space
             ___lldiv (ARG)
             _fatfs_fat_set_cluster (ARG)
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_find_blank_cluster (ARG)
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_set_fs_info_next_free_cluster (ARG)
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_write *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
           _fatfs_fat_set_cluster
             _fatfs_fat_read_sector
               _fatfs_fat_writeback
                 _media_write *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
           _fatfs_find_blank_cluster
             _fatfs_fat_read_sector
               _fatfs_fat_writeback
                 _media_write *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
           _fatfs_set_fs_info_next_free_cluster
             _fatfs_fat_read_sector
               _fatfs_fat_writeback
                 _media_write *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
             _media_write *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
         _fatfs_fat_purge
           _fatfs_fat_writeback
             _media_write *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
         _fatfs_free_cluster_chain
           _fatfs_fat_set_cluster
             _fatfs_fat_read_sector
               _fatfs_fat_writeback
                 _media_write *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
           _fatfs_find_next_cluster
             _fatfs_fat_read_sector
               _fatfs_fat_writeback
                 _media_write *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
         _fatfs_get_file_entry
           _fatfs_compare_names
             _FileString_GetExtension
             _FileString_StrCmpNoCase
               _strlen (ARG)
             _FileString_TrimLength
             _strlen
           _fatfs_entry_lfn_exists
           _fatfs_entry_lfn_invalid
           _fatfs_entry_lfn_text
           _fatfs_entry_sfn_only
           _fatfs_lfn_cache_entry
           _fatfs_lfn_cache_get
           _fatfs_lfn_cache_init
             _memset
           _fatfs_sector_reader
             ___lldiv
             _fatfs_find_next_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_lba_of_cluster
             _media_read *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
           _memcpy
           _memset
         _fatfs_get_root_cluster
         _fatfs_lfn_create_sfn
           _memset
           _strlen
         _fatfs_lfn_generate_tail
           _fatfs_itoa
             ___lldiv
             ___llmod
           _memcpy
           _memset
           _strlen
         _fatfs_sfn_exists
           _fatfs_entry_lfn_invalid
           _fatfs_entry_lfn_text
           _fatfs_entry_sfn_only
           _fatfs_sector_reader
             ___lldiv
             _fatfs_find_next_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_lba_of_cluster
             _media_read *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
           _strncmp
         _fatfs_split_path
           _fatfs_get_substring
             _strlen
           _fatfs_total_path_levels
           _memcpy
           _strlen
         _fatfs_write_sector
           _fatfs_lba_of_cluster
           _media_write *
             _WriteSPI_
             _command
               _ReadBUF
               _WriteSPI_
               _spi_read
             _spi_read
         _memcpy
         _memset
       _fl_init
         fat_list@fat_list_init
         fat_list@fat_list_insert_last
           fat_list@fat_list_insert_after
           fat_list@fat_list_insert_first
             fat_list@fat_list_insert_before
   _File_append
     _Clr_str
     _ReadUART
       _ReadUSART
     _Read_str
       _ReadUSART
       _WriteUSART
     _Switch
       _Check_extension
         _Write_str
           _putsUSART
             _WriteUSART
         _strncmp
       _Format_string
       _Write_str
         _putsUSART
           _WriteUSART
       _strcmp
     _Write
       _WriteUSART
     _Write_str
       _putsUSART
         _WriteUSART
     _fl_fclose
       __free_file
         fat_list@fat_list_insert_last
           fat_list@fat_list_insert_after
           fat_list@fat_list_insert_first
             fat_list@fat_list_insert_before
         fat_list@fat_list_remove
       _fatfs_fat_purge
         _fatfs_fat_writeback
           _media_write *
             _WriteSPI_
             _command
               _ReadBUF
               _WriteSPI_
               _spi_read
             _spi_read
       _fatfs_update_file_length
         _fatfs_entry_lfn_invalid
         _fatfs_entry_lfn_text
         _fatfs_entry_sfn_only
         _fatfs_sector_reader
           ___lldiv
           _fatfs_find_next_cluster
             _fatfs_fat_read_sector
               _fatfs_fat_writeback
                 _media_write *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
           _fatfs_lba_of_cluster
           _media_read *
             _WriteSPI_
             _command
               _ReadBUF
               _WriteSPI_
               _spi_read
             _spi_read
         _media_write *
           _WriteSPI_
           _command
             _ReadBUF
             _WriteSPI_
             _spi_read
           _spi_read
         _memcpy *
         _strncmp *
       _fl_fflush
         __write_sectors
           ___lldiv
           _fatfs_add_free_space
             ___lldiv (ARG)
             _fatfs_fat_set_cluster (ARG)
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_find_blank_cluster (ARG)
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_set_fs_info_next_free_cluster (ARG)
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_write *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
           _fatfs_cache_get_next_cluster
           _fatfs_cache_set_next_cluster
           _fatfs_find_next_cluster
             _fatfs_fat_read_sector
               _fatfs_fat_writeback
                 _media_write *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
           _fatfs_lba_of_cluster
           _fatfs_sector_write
             _media_write *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
         _fl_init
           fat_list@fat_list_init
           fat_list@fat_list_insert_last
             fat_list@fat_list_insert_after
             fat_list@fat_list_insert_first
               fat_list@fat_list_insert_before
       _fl_init
         fat_list@fat_list_init
         fat_list@fat_list_insert_last
           fat_list@fat_list_insert_after
           fat_list@fat_list_insert_first
             fat_list@fat_list_insert_before
     _fl_fopen
       __create_file
         __allocate_file
           fat_list@fat_list_insert_last
             fat_list@fat_list_insert_after
             fat_list@fat_list_insert_first
               fat_list@fat_list_insert_before
           fat_list@fat_list_pop_head
             fat_list@fat_list_remove
         __check_file_open
           _fatfs_compare_names
             _FileString_GetExtension
             _FileString_StrCmpNoCase
               _strlen (ARG)
             _FileString_TrimLength
             _strlen
         __free_file
           fat_list@fat_list_insert_last
             fat_list@fat_list_insert_after
             fat_list@fat_list_insert_first
               fat_list@fat_list_insert_before
           fat_list@fat_list_remove
         __open_directory
           _fatfs_entry_is_dir
           _fatfs_get_file_entry
             _fatfs_compare_names
               _FileString_GetExtension
               _FileString_StrCmpNoCase
                 _strlen (ARG)
               _FileString_TrimLength
               _strlen
             _fatfs_entry_lfn_exists
             _fatfs_entry_lfn_invalid
             _fatfs_entry_lfn_text
             _fatfs_entry_sfn_only
             _fatfs_lfn_cache_entry
             _fatfs_lfn_cache_get
             _fatfs_lfn_cache_init
               _memset
             _fatfs_sector_reader
               ___lldiv
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _WriteSPI_
                       _command
                         _ReadBUF
                         _WriteSPI_
                         _spi_read
                       _spi_read
                   _media_read *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
               _fatfs_lba_of_cluster
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
             _memcpy
             _memset
           _fatfs_get_root_cluster
           _fatfs_get_substring
             _strlen
           _fatfs_total_path_levels
         _fatfs_add_file_entry
           _fatfs_filename_to_lfn
             _fatfs_lfn_entries_required
               ___awdiv
               _strlen
             _memset
             _strlen
           _fatfs_find_free_dir_offset
             _fatfs_entry_lfn_text
             _fatfs_fat_add_cluster_to_chain
               _fatfs_fat_set_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _WriteSPI_
                       _command
                         _ReadBUF
                         _WriteSPI_
                         _spi_read
                       _spi_read
                   _media_read *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _WriteSPI_
                       _command
                         _ReadBUF
                         _WriteSPI_
                         _spi_read
                       _spi_read
                   _media_read *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
             _fatfs_find_blank_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_sector_reader
               ___lldiv
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _WriteSPI_
                       _command
                         _ReadBUF
                         _WriteSPI_
                         _spi_read
                       _spi_read
                   _media_read *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
               _fatfs_lba_of_cluster
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
             _fatfs_write_sector
               _fatfs_lba_of_cluster
               _media_write *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
             _memset
           _fatfs_lfn_entries_required
             ___awdiv
             _strlen
           _fatfs_sector_reader
             ___lldiv
             _fatfs_find_next_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_lba_of_cluster
             _media_read *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
           _fatfs_sfn_create_entry
           _media_write *
             _WriteSPI_
             _command
               _ReadBUF
               _WriteSPI_
               _spi_read
             _spi_read
           _memcpy *
         _fatfs_allocate_free_space
           ___lldiv
           _fatfs_add_free_space
             ___lldiv (ARG)
             _fatfs_fat_set_cluster (ARG)
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_find_blank_cluster (ARG)
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_set_fs_info_next_free_cluster (ARG)
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_write *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
           _fatfs_fat_set_cluster
             _fatfs_fat_read_sector
               _fatfs_fat_writeback
                 _media_write *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
           _fatfs_find_blank_cluster
             _fatfs_fat_read_sector
               _fatfs_fat_writeback
                 _media_write *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
           _fatfs_set_fs_info_next_free_cluster
             _fatfs_fat_read_sector
               _fatfs_fat_writeback
                 _media_write *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
             _media_write *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
         _fatfs_cache_init
         _fatfs_fat_purge
           _fatfs_fat_writeback
             _media_write *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
         _fatfs_free_cluster_chain
           _fatfs_fat_set_cluster
             _fatfs_fat_read_sector
               _fatfs_fat_writeback
                 _media_write *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
           _fatfs_find_next_cluster
             _fatfs_fat_read_sector
               _fatfs_fat_writeback
                 _media_write *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
         _fatfs_get_file_entry
           _fatfs_compare_names
             _FileString_GetExtension
             _FileString_StrCmpNoCase
               _strlen (ARG)
             _FileString_TrimLength
             _strlen
           _fatfs_entry_lfn_exists
           _fatfs_entry_lfn_invalid
           _fatfs_entry_lfn_text
           _fatfs_entry_sfn_only
           _fatfs_lfn_cache_entry
           _fatfs_lfn_cache_get
           _fatfs_lfn_cache_init
             _memset
           _fatfs_sector_reader
             ___lldiv
             _fatfs_find_next_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_lba_of_cluster
             _media_read *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
           _memcpy
           _memset
         _fatfs_get_root_cluster
         _fatfs_lfn_create_sfn
           _memset
           _strlen
         _fatfs_lfn_generate_tail
           _fatfs_itoa
             ___lldiv
             ___llmod
           _memcpy
           _memset
           _strlen
         _fatfs_sfn_exists
           _fatfs_entry_lfn_invalid
           _fatfs_entry_lfn_text
           _fatfs_entry_sfn_only
           _fatfs_sector_reader
             ___lldiv
             _fatfs_find_next_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_lba_of_cluster
             _media_read *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
           _strncmp
         _fatfs_split_path
           _fatfs_get_substring
             _strlen
           _fatfs_total_path_levels
           _memcpy
           _strlen
         _memcpy
         _memset
       __open_file
         __allocate_file
           fat_list@fat_list_insert_last
             fat_list@fat_list_insert_after
             fat_list@fat_list_insert_first
               fat_list@fat_list_insert_before
           fat_list@fat_list_pop_head
             fat_list@fat_list_remove
         __check_file_open
           _fatfs_compare_names
             _FileString_GetExtension
             _FileString_StrCmpNoCase
               _strlen (ARG)
             _FileString_TrimLength
             _strlen
         __free_file
           fat_list@fat_list_insert_last
             fat_list@fat_list_insert_after
             fat_list@fat_list_insert_first
               fat_list@fat_list_insert_before
           fat_list@fat_list_remove
         __open_directory
           _fatfs_entry_is_dir
           _fatfs_get_file_entry
             _fatfs_compare_names
               _FileString_GetExtension
               _FileString_StrCmpNoCase
                 _strlen (ARG)
               _FileString_TrimLength
               _strlen
             _fatfs_entry_lfn_exists
             _fatfs_entry_lfn_invalid
             _fatfs_entry_lfn_text
             _fatfs_entry_sfn_only
             _fatfs_lfn_cache_entry
             _fatfs_lfn_cache_get
             _fatfs_lfn_cache_init
               _memset
             _fatfs_sector_reader
               ___lldiv
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _WriteSPI_
                       _command
                         _ReadBUF
                         _WriteSPI_
                         _spi_read
                       _spi_read
                   _media_read *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
               _fatfs_lba_of_cluster
               _media_read *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
             _memcpy
             _memset
           _fatfs_get_root_cluster
           _fatfs_get_substring
             _strlen
           _fatfs_total_path_levels
         _fatfs_cache_init
         _fatfs_entry_is_file
         _fatfs_fat_purge
           _fatfs_fat_writeback
             _media_write *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
         _fatfs_get_file_entry
           _fatfs_compare_names
             _FileString_GetExtension
             _FileString_StrCmpNoCase
               _strlen (ARG)
             _FileString_TrimLength
             _strlen
           _fatfs_entry_lfn_exists
           _fatfs_entry_lfn_invalid
           _fatfs_entry_lfn_text
           _fatfs_entry_sfn_only
           _fatfs_lfn_cache_entry
           _fatfs_lfn_cache_get
           _fatfs_lfn_cache_init
             _memset
           _fatfs_sector_reader
             ___lldiv
             _fatfs_find_next_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_lba_of_cluster
             _media_read *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
           _memcpy
           _memset
         _fatfs_get_root_cluster
         _fatfs_split_path
           _fatfs_get_substring
             _strlen
           _fatfs_total_path_levels
           _memcpy
           _strlen
         _memcpy
         _memset
       _fl_init
         fat_list@fat_list_init
         fat_list@fat_list_insert_last
           fat_list@fat_list_insert_after
           fat_list@fat_list_insert_first
             fat_list@fat_list_insert_before
       _strlen
     _fl_fread
       ___awdiv
       __read_sectors
         ___awdiv (ARG)
         ___lldiv (ARG)
         _fatfs_cache_get_next_cluster (ARG)
         _fatfs_cache_set_next_cluster (ARG)
         _fatfs_find_next_cluster (ARG)
           _fatfs_fat_read_sector
             _fatfs_fat_writeback
               _media_write *
                 _WriteSPI_
                 _command
                   _ReadBUF
                   _WriteSPI_
                   _spi_read
                 _spi_read
             _media_read *
               _WriteSPI_
               _command
                 _ReadBUF
                 _WriteSPI_
                 _spi_read
               _spi_read
         _fatfs_lba_of_cluster (ARG)
         _fatfs_sector_read (ARG)
           _media_read *
             _WriteSPI_
             _command
               _ReadBUF
               _WriteSPI_
               _spi_read
             _spi_read
       _fl_fflush
         __write_sectors
           ___lldiv
           _fatfs_add_free_space
             ___lldiv (ARG)
             _fatfs_fat_set_cluster (ARG)
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_find_blank_cluster (ARG)
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _WriteSPI_
                     _command
                       _ReadBUF
                       _WriteSPI_
                       _spi_read
                     _spi_read
                 _media_read *
                   _WriteSPI_
                   _command
                     _ReadBUF
                     _WriteSPI_
                     _spi_read
                   _spi_read
             _fatfs_set_fs_info_next_free_cluster (ARG)


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Sep 23 15:02:12 2014

                              fl_fwrite@count 00E3                                 fl_fwrite@size 00E1  
                      ??_fatfs_entry_lfn_text 0003                               fl_fwrite@buffer 0100  
        fatfs_filename_to_lfn@entriesRequired 0024                               fl_fwrite@length 010F  
                          _fatfs_write_sector 9F74                                             _c 01A6  
                                           _d 01A7                                             _f 01A8  
                                           _i 019B                                             _j 019D  
                                           _m 0289                                             _n 019F  
                                           _s 02A7                                             _t 01AC  
                                           _v 01A3                                             _w 01F8  
                                           _x 01AD                                             _z 01AE  
                          fl_fgetpos@position 0003                               fl_fwrite@offset 0107  
                  __size_of_fatfs_sector_read 005C                      ??_fatfs_entry_lfn_exists 0005  
               FileString_GetExtension@dotPos 0005                               fl_fwrite@sector 010B  
                 __end_of_fatfs_compare_names 7074                   ?_fatfs_get_sfn_display_name 0001  
                                 _SSPSTATbits 000FC7                   __end_of_fatfs_get_substring 7C98  
                                          _BF 007E38                   fatfs_mark_file_deleted@item 00BC  
                                          l38 FA44                                            l64 F736  
                                          l86 A676                                            l89 A93A  
                   fatfs_create_boot_sector@i 003A                __end_of_fatfs_get_root_cluster 3F2A  
                                ___awdiv@sign 0006                fatfs_add_file_entry@dirCluster 00CE  
                                 __CFG_BORV$3 000000                   fatfs_get_file_entry@Cluster 00AE  
                  __size_of__create_directory 0554                   fatfs_find_next_cluster@pbuf 007E  
                     fatfs_sector_read@target 0025                    fat_list@fat_list_init@list 0001  
                    __size_of_Check_extension 0092                        ??_fatfs_entry_sfn_only 0003  
               FileString_GetExtension@strSrc 0007                              ?__open_directory 00B8  
              __size_of_fatfs_fat_read_sector 0254                                   __CFG_OSC$HS 000000  
                       __create_file@filename 00F2                   __size_of_fatfs_sector_write 0060  
               __end_of_fatfs_fat_read_sector 8956                                           l113 A286  
                                         l241 B440                                           l226 B448  
                                         l423 43EC                                           l431 5572  
                                         l610 57DE                                           l530 4B9A  
                                         l179 7726                                           l515 BC30  
                                         l196 78EE                                           l622 645A  
                                         l391 4DE2                                           l560 6DA6  
                                         l712 4ECE                                           l704 4ED6  
                                         l545 6ED6                                           l625 4302  
                                         l562 6DB0                                           l722 E0BA  
                                         l626 430A                                           l475 9F72  
                                         l571 6E48                                           l396 448E  
                                         l652 CBA6                                           l661 CD74  
                                         l821 443C                                           l486 C544  
                                         l734 DBEA                                           l559 6D9C  
                                         l903 BC9A                                           l807 5C56  
                                         l648 CF36                                           l904 C090  
                                         l912 A2F0                                           l729 DA4E  
                                         l913 A5A8                                           l921 4F50  
                                         l658 CF2E                                           l850 6AA8  
                                         l595 CA18                                           l683 73B2  
                                         l691 4188                                           l763 5A00  
                                         l588 C896                                           l668 73B6  
                         ?_fatfs_write_sector 0020                                           l934 4746  
                                         l790 5890                                           _CKE 007E3E  
                                         l937 CF4E                                           l938 D484  
            fatfs_fat_add_cluster_to_chain@fs 0080                                           l986 42C6  
                                         _CKP 007E34            __size_of_fatfs_list_directory_next 03BA  
                                fl_remove@res 0185                                           _SMP 007E3F  
               __size_of_fatfs_lfn_cache_init 005E                          _fatfs_get_file_entry 936A  
                                         __fs 0978                                           _res 01A1  
                                         fsr2 000FD9                                           _str 0400  
                                         prod 000FF3                                           tosl 000FFD  
                                         wreg 000FE8                            fl_fwrite@copyCount 0117  
                __size_of_fatfs_sector_reader 0392                     __size_of_fatfs_cache_init 0002  
                      __open_directory@levels 00CA                                  __CFG_LVP$OFF 000000  
       fatfs_set_fs_info_next_free_cluster@fs 0046                                  ?_media_write 0009  
                                __CFG_WDT$OFF 000000                                          l1002 82A8  
                                        l1101 54EE                                          l1013 9368  
                                        l1103 554C                                          l1121 4B24  
                                        l1210 8954                                          l1220 45D8  
                                        l2101 3E60                                          l1231 ACD0  
                                        l1055 66D6                                          l1047 5948  
                               fl_opendir@dir 00F4                                          l2114 3F0A  
                                        l1074 7C96                                          l1058 6644  
                                        l1091 5F2C                                          l2116 3F04  
                                        l1228 ACE0                                          l1317 6D36  
                                        l2302 3FC8                                          l1086 7C92  
                                        l1238 7560                                          l2304 3FD0  
                                        l1264 55FE                                          l2160 4018  
                                        l2305 3FD8                                          l2153 3E84  
                                        l1329 8ACE                                          l1258 90C8  
                                        l1274 5C82                                          l1370 AD92  
                                        l2170 4032                                          l2218 8C7A  
                                        l2147 3E3C                                          l2164 4024  
                                        l1613 6528                                          l1189 8700  
                                        l2191 426E                                          l1367 B08E  
                                        l2167 402E                                          l2272 4946  
                                        l1720 8090                                          l2248 8E2C  
                                        l2281 498A                                          l2194 4280  
                                        l2187 424C                                          l2276 495A  
                                        l2277 495C                                          l1661 541E  
                                        l2278 4966                                          l2279 4968  
                                        l1584 5ABC                                          l2289 47A6  
                                        l1596 61D6                                          l1678 6124  
                                        l1783 515E                                          l1792 41C6  
                                        l2905 4C80                                          l1778 5052  
                                        l2842 4396                                          l1787 4FD0  
                                        l2852 423A                                          l1799 46E8  
                                        l2779 4D5A                                          l2789 4916  
                                        l9000 8F98                                 fl_opendir@res 00F8  
                                        l9100 A780                                          l9022 5440  
                                        l9112 A7E6                                          l9104 A7BA  
                                        l9210 4002                                          l9122 A87C  
                                        l9034 546E                                          l9050 549E  
                                        l9132 A92E                                          l9036 5476  
                                        l9028 545E                                          l9302 4CEE  
                                        l9222 CF54                                          l9310 4A10  
                                        l9054 54AA                                          l9046 5494  
                                        l9038 547A                                          l9150 A03C  
                                        l9064 4D0E                                          l9226 CF74  
                                        l9314 4A42                                          l9066 4D1A  
                                        l9162 A094                                          l9154 A044  
                                        l9420 5708                                          l9340 6F2E  
                                        l9332 6F1C                                          l9076 4D4C  
                                        l9068 4D1E                                          l9430 51B0  
                                        l9414 56B8                                          l9406 49E8  
                                        l9262 D47C                                          l9416 56E0  
                                        l9280 457E                                          l8712 79DC  
                                        l8720 7A9A                                          l8800 87B8  
                                        l9168 A118                                          l9442 4DBE  
                                        l9274 4576                                          l9258 D3CE  
                                        l8650 64AA                                          l8722 7AAC  
                                        l9514 B45A                                          l9178 A1B2  
                                        l9356 6FD6                                          l8900 404E  
                                        l8740 617C                                          l8812 8836  
                                        l8804 87DA                                          l9508 753A  
                                        l9460 6A0A                                          l8910 4E30  
                                        l9358 6FFE                                          l8670 6516  
                                        l9382 475E                                          l9710 95F4  
                                        l9550 B7DC                                          l9542 B7BE  
                                        l9518 B48A                                          l9470 6AA6  
                                        l9454 69D2                                          l8912 4E4C  
                                        l9376 706A                                          l8680 6560  
                                        l8656 64CC                                          l8648 64A6  
                                        l8728 7AB4                                          l8736 6170  
                                        l9720 9638                                          l9800 6636  
                                        l9536 B608                                          l9448 696C  
                                        l9456 69D6                                          l8690 6586  
                                        l8682 6564                                          l8770 620A  
                                        l8762 61C4                                          l8746 6192  
                                        l8738 6174                                          l8826 889E  
                                        l8850 7DBE                                          l9722 964C  
                                        l9810 667A                                          l9546 B7D6  
                                        l9466 6A76                                          l9458 6A04  
                                        l9740 4C64                                          l9732 4C10  
                                        l8916 44EC                                          l8692 658A  
                                        l8676 654C                                          l8772 620E  
                                        l8836 8938                                          l9388 4794  
                                        l9652 946E                                          l9644 93F4  
                                        l9636 9392                                          l9812 66A0  
                                        l9804 664A                                          l9484 42C0  
                                        l9468 6A7A                                          l9742 4C6C  
                                        l8950 5546                                          l8942 5518  
                                        l8934 54DE                                          l8926 54B6  
                                        l8918 44F0                                          l8678 6550  
                                        l8774 6216                                          l8862 A980  
                                        l9670 951C                                          l9726 9658  
                                        l9814 66A4                                          l9574 5CD4  
                                        l9590 48E6                                          l9736 4C34  
                                        l8792 8784                                          l9680 9550  
                                        l9656 9498                                          l9840 7B84  
                                        l9832 7B14                                          l9808 6676  
                                        l9912 5B6E                                          l8962 44C8  
                                        l8970 4AE8                                          l8786 8712  
                                        l8882 AAE8                                          l8858 A950  
                                        l9594 4908                                          l9586 48D6  
                                        l9906 5AEC                                          l9914 5B72  
                                        l9772 4466                                          l9780 4114  
                                        l8964 44CC                                          l8948 5538  
                                        l9756 3F68                                          l9692 958A  
                                        l9668 9506                                          l9844 7B9E  
                                        l9836 7B78                                          l9588 48E2  
                                        l8958 449E                                          l8798 87A8  
                                        l9862 7C5C                                          l8982 8E5E  
                                        STR_1 FFA7                                          l8976 4B1E  
                                        l8896 403E                                          l9848 7BC8  
                                        l9880 6C58                                          STR_2 FFCE  
                                        STR_3 FFE5                                          l9698 95D8  
                                        l9858 7C54                                          l9882 6C64  
                                        l9962 E20A                                          STR_4 FFEB  
                                        STR_5 FD74                                          l9796 65D4  
                                        l9892 6D24                                          STR_6 FE80  
                                        STR_7 FE03                                          STR_8 FDE7  
                                        STR_9 FB7F                                          l9896 6D2A  
                 fatfs_entry_lfn_exists@entry 0003                                          l9978 E2EC  
                                        _LATA 000F89                                          _LATE 000F8D  
                               fl_remove@file 0187                                          u9028 7A82  
                                        u9029 7A94                                          u9045 6138  
                                        u9218 8900                                          u9219 8912  
                                        u9325 AAFA                                          u9245 7D7E  
                     _fatfs_mark_file_deleted 7728                                          u9350 ACC6  
                                        u9270 A99E                                          u9335 AB34  
                                        u9185 8806                                          u9530 8E7C  
                                        u9275 A994                                          u9380 4512  
                                        u9710 A7DE                                          u9535 8E72  
                                        u8920 6502                                          u9387 4508  
                                        u9565 8FAA                                          u8927 64F8  
                                        u9575 8FE4                                          u9745 A8B0  
                                        u9738 A870                                          u9818 A088  
                                        u9739 A872                                          u9828 A106  
                                        u9758 A91A                                          u8895 646E  
                                        u9848 A1A0                                          u9858 A26C  
                                        u9859 A27E                           fatfs_fat_purge@pcur 0036  
         __size_of_fatfs_list_directory_start 003E                             WriteSPI_@data_out 0002  
                fatfs_entry_lfn_invalid@entry 0001                   fatfs_get_file_entry@sfEntry 00B4  
                                        _Stat 01F5                           __end_of_File_delete 5054  
                  ??_fatfs_update_file_length 00B8                                          _data 01F7  
                                        _flag 01A9                                          _file 0197  
                         __end_of_File_append 84D6           fatfs_sfn_create_entry@shortfilename 0001  
                                        _main 66D8                                          _dptr 01CD  
                                        _fptr 0199                          ??_fatfs_write_sector 002C  
                                        fsr0h 000FEA                                          fsr1h 000FE2  
                                        indf0 000FEF                                          fsr0l 000FE9  
                                        fsr2h 000FDA                                          indf1 000FE7  
                                        fsr1l 000FE1                                          indf2 000FDF  
                          __open_file@sfEntry 014F                                          fsr2l 000FD9  
                         __end_of_File_format 41C8                                 __CFG_BOREN$ON 000000  
                        fatfs_cache_init@file 0003                  fatfs_add_file_entry@checksum 010F  
                                        prodh 000FF4                                          prodl 000FF3  
                                        start 0000                           __allocate_file@node 0011  
                       _fatfs_filename_to_lfn 8092                     fatfs_update_file_length@x 00BC  
                               __CFG_IESO$OFF 000000                           __end_of_ConfigUSART 3E78  
          fatfs_lba_of_cluster@Cluster_Number 0003     fatfs_find_free_dir_offset@possible_spaces 00C9  
                 __end_of_fatfs_erase_sectors 5B8E                      fatfs_entry_is_file@entry 0001  
                               __CFG_MCLRE$ON 000000                               __end_of_Clr_str 3F4C  
         __size_of_fatfs_create_fsinfo_sector 019E                        _fatfs_sfn_create_entry 6AAA  
                fatfs_add_file_entry@filename 00D2                               __end_of_ReadBUF 3E5E  
            fatfs_mark_file_deleted@shortname 00B2                       __open_directory@sfEntry 00D2  
                       __end_of__read_sectors BC32                                 ?_Format_drive 0001  
           fatfs_sector_reader@sector_to_read 0098          fatfs_allocate_free_space@nextcluster 00B8  
                   fatfs_add_free_space@start 0092                  fatfs_add_file_entry@foundEnd 010C  
                    ?_fatfs_lfn_generate_tail 0037                       ??_FileString_TrimLength 0005  
                 fatfs_find_free_dir_offset@i 00C0                   fatfs_find_free_dir_offset@x 00C7  
                                       l10112 EB4A                                         l10040 E60E  
                                       l10200 9896                                         l10122 EC54  
                                       l10106 EB18                                         l10202 98A0  
                                       l10108 EB44                                         l10044 E614  
                                       l11020 C088                                         l10222 8126  
                                       l10310 998A                                         l10038 E5E2  
                                       l10046 E68A                                         l10240 823A  
                                       l10400 9C02                                         l12000 CE82  
                                       l11032 A2F6                                         l10242 82A2  
                                       l10410 9C5C                                         l12010 CF12  
                                       l11210 B300                                         l10236 81EC  
                                       l10332 9A68                                         l11116 771A  
                                       l10172 720A                                         l11204 B2B2  
                                       l10334 9A70                                         l10318 99E0  
                                       l11070 401E                                         l10182 96C6  
                                       l11062 A5A0                                         l10502 4A86  
                                       l11230 B34C                                         l11222 B31C  
                                       l11150 B190                                         l11142 B116  
                                       l11134 B0B0                                         l10424 3E98  
                                       l12104 5410                                         l10352 9A96  
                                       l10440 628A                                         l10432 6236  
                                       l12040 5C06                                         l10512 4AB4  
                                       l10362 9B04                                         l10370 9B1E  
                                       l10258 6ADE                                         l10282 5D6C  
                                       l10610 5E96                                         l13010 8082  
                                       l10194 980A                                         l12050 5C4C  
                                       l11154 B1BA                                         l12124 508E  
                                       l12116 506E                                         l10524 43D2  
                                       l10372 9B28                                         l10276 6B98  
                                       l10700 91B8                                         l10292 5E04  
                                       l10460 631A                                         l11092 75D8  
                                       l11084 7582                                         l13004 8042  
                                       l10508 4A9A                                         l11180 B230  
                                       l11244 B410                                         l12300 F66C  
                                       l12126 509C                                         l12134 50BE  
                                       l10534 555A                                         l10550 55DE  
                                       l10702 91DE                                         l10606 5E86  
                                       l11406 C380                                         l11350 C13A  
                                       l11318 9F5C                                         l13006 8068  
                                       l12046 5C32                                         l12038 5BE8  
                                       l10470 45E4                                         l12070 4434  
                                       l12230 ED32                                         l12136 50CA  
                                       l12144 531E                                         l10528 43E0  
                                       l10392 9BC8                                         l10376 9B34  
                                       l10720 9274                                         l10704 91E8  
                                       l10464 6326                                         l10616 5EE4  
                                       l11416 C3CC                                         l11280 9D70  
                                       l12400 7354                                         l13008 8076  
                                       l11192 B278                                         l11600 8CB6  
                                       l12304 F7A6                                         l10538 5566  
                                       l10810 AD9E                                         l10634 89A6  
                                       l10298 5E22                                         l11426 C494  
                                       l11370 C1E2                                         l11362 C1AA  
                                       l11450 B9D0                                         l13202 46DC  
                                       l10482 4620                                         l11530 4366  
                                       l12330 FA28                                         l12306 F870  
                                       l12242 ED74                                         l12250 ED94  
                                       l12226 ED2A                                         l12092 53F4  
                                       l10548 55CA                                         l10820 ADE2  
                                       l10660 8B78                                         l10740 9330  
                                       l10716 9254                                         l10900 3FB0  
                                       l11276 9D24                                         l11268 9D00  
                                       l11460 BA72                                         l12404 7376  
                                       l13060 83BE                                         l13028 8314  
                                       l13124 5FCA                                         l13132 600E  
                                       l11516 4F24                                         l10476 460A  
                                       l11532 436E                                         l11604 8CD0  
                                       l12244 ED78                                         l12252 EDBE  
                                       l12086 53EE                                         l12158 5352  
                                       l10582 690E                                         l10566 6852  
                                       l10742 9362                                         l10726 9280  
                                       l11390 C2B8                                         l11358 C15E  
                                       l11470 BB24                                         l11446 B97A  
                                       l12502 DE94                                         l13070 8466  
                                       l13046 836A                                         l13038 8338  
                                       l11702 78E6                                         l12430 4EC8  
                                       l13134 601A                                         l10486 4A60  
                                       l10478 4612                                         l11542 438C  
                                       l11534 4372                                         l11550 4212  
                                       l12262 EF2C                                         l12600 3F2C  
                                       l12168 5372                                         l10648 8B14  
                                       l10728 9292                                         l11288 9DA8  
                                       l11456 BA48                                         l12512 DF44  
                                       l13048 8372                                         l13152 5046  
                                       l11552 421A                                         l11640 8D5E  
                                       l12336 FA3E                                         l12280 F080  
                                       l12256 EEAE                                         l10586 6916  
                                       l10666 8BA4                                         l10658 8B60  
                                       l10682 9128                                         l11378 C250  
                                       l11490 BC24                                         l11466 BB08  
                                       l13082 848A                                         l12610 4BA8  
                                       l12426 4E72                                         l11554 421E  
                                       l11642 8D64                                         l11650 8DFE  
                                       l11618 8D0A                                         l11634 8D44  
                                       l11570 8BCE                                         l12258 EEC2  
                                       l12604 3F3C                                         l10588 691C  
                                       l10852 AFAE                                         l10828 AE40  
                                       l10772 5680                                         l13172 5152  
                                       l11396 C306                                         l11388 C2B2  
                                       l11476 BB80                                         l12508 DF16  
                                       l12524 DFF6                                         l12460 DA9C  
                                       l13084 84B0                                         l11644 8DAC  
                                       l11652 8E08                                         l11636 8D4E  
                                       l11580 8BFA                                         l11572 8BD2  
                                       l11564 8BBC                                         l12268 EF6A  
                                       l10838 AEB0                                         l10694 916C  
                                       l10686 9142                                         l10678 90F2  
                                       l11734 D548                                         l11726 D524  
                                       l10918 52F4                                         l10934 C6CC  
                                       l11398 C32A                                         l11902 6ECC  
                                       l12534 E096                                         l12526 E00C  
                                       l13086 84BE                                         l12622 4BE4  
                                       l12614 4BB4                                         l11558 4230  
                                       l11654 8E0E                                         l12704 427A  
                                       l10872 B086                                         l10768 5664  
                                       l10688 9146                                         l11808 D866  
                                       l10944 C79A                                         l12376 7246  
                                       l12464 DB04                                         l12456 DA56  
                                       l13088 84CA                                         l12616 4BD0  
                                       l12608 4BA0                                         l13192 469C  
                                       l11584 8C24                                         l11568 8BCA  
                                       l11656 8E14                                         l12650 607A  
                                       l10858 AFF8                                         l10882 4592  
                                       l10698 91B4                                         l11818 D92C  
                                       l11754 D63A                                         l11746 D5CC  
                                       l11738 D594                                         l10954 C85A  
                                       l10938 C722                                         l11922 63CE  
                                       l11850 6D8C                                         l12394 7300  
                                       l12386 728E                                         l12474 DBC4  
                                       l11674 779E                                         l11666 7748  
                                       l12618 4BD8                                         l12626 4C00  
                                       l12644 606C                                         l11764 D69C  
                                       l10972 C93C                                         l10964 C8AA  
                                       l10948 C7C4                                         l11852 6D92  
                                       l11844 6D78                                         l12492 DD2C  
                                       l12628 4C08                                         l12716 41BA  
                                       l11588 8C4E                                         l12654 609E  
                                       l11790 D7C4                                         l11782 D752  
                                       l10982 CA0C                                         l10974 C976  
                                       l11862 6DC4                                         l11870 6E14  
                                       l12582 583E                                         l12902 5A9E  
                                       l13702 6720                                         l12752 4948  
                                       l12744 493A                                         l12648 6074  
                                       l12680 6108                                         l10888 45BE  
                                       l11776 D720                                         l11768 D6C2  
                                       l11848 6D82                                         l12496 DE2E  
                                       l12584 5864                                         l12904 5AAE  
                                       l13712 675A                                         l13704 672C  
                                       l12674 60F8                                         l11778 D726  
                                       l11882 6E64                                         l11866 6DCA  
                                       l11698 78DA                                         l12930 7ECE  
                                       l10994 BCA0                                         l12578 5822  
                                       l12818 4B8A                                         l13730 6796  
                                       l13714 6768                                         l12668 60EA  
                                       l11788 D7A0                                         l11868 6E0E  
                                       l11972 CC10                                         l11964 CA8E  
                                       l13724 6788                                         l11798 D81A  
                                       l12934 7EE4                                         l12918 7E98  
                                       l13742 67B2                                         l11888 6E86  
                                       l11984 CD0E                                         l11968 CAE4  
                                       l12952 7F46                                         l12936 7EEA  
                                       l12864 5A12                                         l13760 67DC  
                                       l13736 67A4                                         l12698 4268  
                                       l11898 6EB4                                         l11994 CDFC  
                                       l12962 7F9A                                         l12890 5A78  
                                       l12874 5A38                                         l13754 67CE  
                                       l12972 7FB4                                         l12956 7F66  
                                       l12948 7F38                                         l12892 5A7A  
                                       l12884 5A66                                         l13748 67C0  
                                       l13772 6808                                         l12990 8018  
                                       l12974 7FC0                                         l12966 7FA8  
                                       l12894 5A8A                                         l12978 7FCE  
                                       ?_main 0001                                fl_opendir@path 00F2  
                             __end_of___awdiv 54B4                                         STR_10 FFFC  
                                       STR_11 FF86                                         STR_12 FFC3  
                                       STR_20 FEC5                                         STR_21 FFFC  
                                       STR_13 FF97                                         STR_14 FF3D  
                                       STR_22 FF03                                         STR_30 FBB0  
                                       STR_23 FFFA                                         STR_15 FE68  
                                       STR_31 FD14                                         STR_16 FE68  
                                       STR_40 FEEF                                         STR_32 FEAF  
                                       STR_24 FC88                                         STR_33 FDB1  
                                       STR_25 FF63                                         STR_17 FAFB  
                                       STR_42 FC62                                         STR_18 FFFC  
                                       STR_34 FF50                                         STR_50 FE98  
                                       STR_26 FDAF                                         STR_51 FED7  
                                       STR_43 FFFC                                         STR_27 FC3B  
                                       STR_19 FB49                                         STR_44 FE1F  
                                       STR_60 FFDF                                         STR_52 FE50  
                                       STR_28 FC62                                         STR_45 FFB6  
                                       STR_29 FFF8                                         STR_61 FE38  
                                       STR_37 FE1F                                         STR_53 FCD1  
                                       STR_46 FEEF                                         STR_38 FFB6  
                                       STR_62 FD35                                         STR_54 FCAD  
                                       STR_55 FFF1                                         STR_63 FD93  
                                       STR_47 FC10                                         STR_64 FFF6  
                                       STR_56 FEDA                                         STR_48 FDCB  
                                       STR_57 FF17                                         STR_49 FCF3  
                                       STR_65 FA6A                                         STR_66 FF2A  
                                       STR_58 FBE0                                         STR_67 FFF6  
                                       STR_59 FD55                                         STR_68 FFD8  
                                       STR_69 FF75                                         _CMCON 000FB4  
                             __end_of___lldiv 4D6C                            __write_sectors@lba 00B4  
                                       u11020 7BF6                            __write_sectors@buf 00A4  
                                       u10135 6F94                                         u11015 7BD2  
                                       u10160 7064                                         u10170 477E  
                                       u11050 7C4E                                         u10155 7040  
                                       u11027 7BEC                                         u11220 E7C6  
                                       u11230 E88C                                         u11240 E8CA  
                                       u11128 5B50                                         u10177 4774  
                                       u11057 7C44                                         u11401 809C  
                                       u11225 E7BC                                         u11129 5B62  
                                       u11250 E996                                         u10435 B61A  
                                       u11235 E882                                         u12060 8B0C  
                                       u11308 EC34                                         u11260 E9D4  
                             ___awdiv@divisor 0003                                         u10445 B656  
                                       u11309 EC46                                         u11245 E8C0  
                                       u10390 B4A8                                         u11415 811A  
                                       u11255 E98C                                         u11328 71EA  
                             __end_of___llmod 4928                                         u11265 E9CA  
                                       u11329 71FC                                         u10810 6600  
                                       u10378 7528                                         u10395 B49E  
                                       u11380 9890                                         u11445 8206  
                                       u10830 6632                                         u10558 484A  
                                       u11358 97CA                                         u10559 485C  
                                       u11359 97DC                                         u10817 65F6  
                                       u10930 7B06                                         u10850 666C  
                                       u12418 AF90                                         u11490 5D5A  
                                       u14130 CADC                                         u11378 9878  
                                       u12419 AFA4                                         u13315 BA22  
                                       u11379 988A                                         u10837 6628  
                                       u14205 CD50                                         u15005 DE70  
                                       u10950 7B40                                         u10870 669C  
                                       u10790 65C6                                         u11718 4672  
                                       u14150 CBD4                                         u13510 8C1C  
                                       u12375 AEA0                                         u12535 C700  
                                       u11719 4684                                         u12800 47CC  
                                       u12448 B064                                         u13520 8C46  
                                       _LATB4 007C54                                         u11905 557C  
                                       u10937 7AFC                                         u10857 6662  
                                       u12449 B078                                         u12810 47FE  
                                       u10970 7B72                                         u10890 66C6  
                                       u12555 C774                                         u14155 CBC8  
                                       u12740 A59A                                         u10957 7B36  
                                       u10877 6692                                         u10797 65BC  
                                       u13517 8C12                                         u10990 7BC0  
                                       u12807 47C2                                         u13295 B9AE  
                                       u12655 BE44                                         u13527 8C3C  
                                       u14440 5360                                         u12680 C082  
                                       u14600 EF24                                         u12817 47F4  
                                       u10977 7B68                                         u10897 66BC  
                                       u12665 BE5A                                         u14195 CCE8  
                                       u12908 7706                                         u15181 6032  
                                       u10997 7BB6                                         u11990 5E80  
                                       u13728 78BC                                         u14528 ECEC  
                                       u13729 78D0                                         u14529 ECFE  
                                       u14635 F382                         ?_fatfs_get_file_entry 00AC  
                                       u14645 F398                                         u14910 DACA  
                                       u14665 F57C                                         u14915 DABE  
                                       u14598 EF0C                                         u14599 EF1E  
                                       u14960 DC7A                                         u14865 4EC0  
                                       u14965 DC6E                                         u17517 6700  
                                       u14975 DCB4                                         u17527 5A4C  
                             __end_of___lwdiv 43A0         fatfs_free_cluster_chain@start_cluster 0082  
              fatfs_add_file_entry@entryCount 0110                               __end_of___lwmod 4244  
                             ___awdiv@counter 0005                                    _File_write 7E94  
                                       _RCREG 000FAE                                         _RCSTA 000FAB  
                               _Format_string 5054                                         _SPBRG 000FAF  
                                       _PORTB 000F81                        ??_fatfs_lba_of_cluster 0007  
                                       _TRISA 000F92                                         _TRISE 000F96  
                                       _SSPEN 007E35                                         _TXREG 000FAD  
                                       _TXSTA 000FAC                                 __CFG_PWRT$OFF 000000  
       fatfs_mark_file_deleted@directoryEntry 00BD              fatfs_add_file_entry@recordoffset 010A  
           __end_of_fatfs_list_directory_next B44A                   ??_fatfs_allocate_free_space 00A8  
                             __end_of_fl_feof 4ED8                                __CFG_FCMEN$OFF 000000  
                             __end_of_fl_init 5300                               __end_of_command 4356  
                       __size_of__create_file 04B4                                         _Write 400A  
               __size_of_fatfs_lfn_create_sfn 02A0                    fatfs_filename_to_lfn@entry 0011  
                             __end_of_dpowers FA62                                         _array 0260  
                                       _count 0195                    fatfs_filename_to_lfn@start 002A  
                                 media_read@i 001B                         fatfs_lfn_cache_init@i 000F  
                                       _str_0 0246                                         _str_1 0300  
                      fatfs_add_file_entry@fs 00CC                                         _putch 3E4C  
                   fatfs_split_path@full_path 001D                __size_of_fatfs_fat_set_cluster 029C  
                      ?_fatfs_lfn_cache_entry 0001                 __end_of_fatfs_fat_set_cluster 90CA  
                                       pclath 000FFA                                         tablat 000FF5  
               fatfs_allocate_free_space@size 00A4                    fatfs_list_directory_next@i 0116  
                                       status 000FD8               fatfs_add_file_entry@dirtySector 0104  
                             __end_of_strncmp 4C82                               __end_of_strncpy 4632  
                    FileString_StrCmpNoCase@a 0011                      FileString_StrCmpNoCase@b 0012  
                    FileString_StrCmpNoCase@n 000B    fatfs_fat_add_cluster_to_chain@next_cluster 008E  
       fatfs_find_blank_cluster@start_cluster 0048          __end_offat_list@fat_list_insert_last 4490  
       __size_offat_list@fat_list_insert_last 0052                  fat_list@fat_list_insert_last 443E  
                              WriteUSART@data 0001                                __write_sectors C546  
                  fatfs_lfn_create_sfn@dotPos 0019                     __read_sectors@nextCluster 0099  
                  __end_of_fatfs_format_fat16 C092                    __end_of_fatfs_format_fat32 A5AA  
                             __initialization 51EA                   ??fat_list@fat_list_pop_head 0009  
                              ??_Format_drive 0071                 __size_of_fatfs_add_file_entry 03AE  
                                __end_of_main 6818                       _fatfs_find_next_cluster A93C  
          __end_of_fatfs_lfn_entries_required 42C8                    _fatfs_lfn_entries_required 4286  
                            __end_of_ReadUART 3E44          fatfs_update_file_length@recordoffset 00BE  
             __size_of_fatfs_entry_lfn_exists 0074                              __end_of_Read_str 4286  
                             _fatfs_fat_purge 4586                       _fatfs_total_path_levels 659A  
                    ?_fatfs_calc_cluster_size 0001                                  __create_file C092  
                                      ??_main 018A             __size_of_fatfs_create_boot_sector 0BA0  
                             Draw_Line@length 0003                                ?_Format_string 0001  
                   ?_fatfs_create_boot_sector 0020                     fatfs_get_substring@levels 0018  
                               __activetblptr 000003                              __end_of_Open_dir 4FD2  
      __end_of_fatfs_fat_add_cluster_to_chain 5D48       __size_of_fatfs_fat_add_cluster_to_chain 00F0  
              _fatfs_fat_add_cluster_to_chain 5C58                       fat_list@fat_list_remove 568C  
                  __end_of_fatfs_entry_is_dir 3F70                   __end_of_fatfs_lfn_cache_get 4A58  
                     _FileString_GetExtension 4490                 __size_of_fatfs_add_free_space 0158  
                        __end_of_fatfs_format 4F52                            __size_of_File_read 00F8  
                   fatfs_get_substring@output 000B                  fatfs_find_free_dir_offset@fs 00AC  
                             _fatfs_erase_fat 9668                            __size_of_Draw_Line 0072  
                           ??_Check_extension 000D                                   _File_delete 4FD2  
                                      ?_Write 0001                     ??_fatfs_mark_file_deleted 00B4  
                        fatfs_erase_sectors@i 0030                fatfs_add_file_entry@shortEntry 0118  
                                 _File_append 82AA                      __open_directory@sublevel 00D0  
                             __read_sectors@i 00A1                  __size_of_fatfs_fat_writeback 01CC  
                                      _ADCON1 000FC1                                   _File_format 418A  
                            ___llmod@dividend 0001                          __size_of_fl_closedir 0002  
                            ___awdiv@dividend 0001                                        ?_putch 0001  
                         __write_sectors@file 009E             fatfs_find_free_dir_offset@pOffset 00B6  
                                 _ConfigUSART 3E6A             fatfs_find_free_dir_offset@pSector 00B4  
                          __size_of_ReadUSART 0028                                        _SPBRGH 000FB0  
                                   ??_Clr_str 0003                    ??_fatfs_free_cluster_chain 0080  
                                      _SSPBUF 000FC9                        ?_fatfs_filename_to_lfn 000D  
                      __end_of__write_sectors CA1A                                     ??_ReadBUF 0001  
                fat_list@fat_list_remove@node 0003                  fat_list@fat_list_remove@list 0001  
                    __end_of__check_file_open 55EC                      __end_of_fl_listdirectory 5892  
                   _fatfs_allocate_free_space 8956                __size_offat_list@fat_list_init 0024  
          __end_of_fatfs_list_directory_start 4206                    _fatfs_list_directory_start 41C8  
               __end_offat_list@fat_list_init 3F94                              __end_of_fl_fgetc 430C  
                              __CFG_XINST$OFF 000000                              __end_of_fl_fread CF38  
                            __end_of_fl_fseek 73B8                              __end_of_fl_fopen 6ED8  
                            __end_of_fl_ftell 40BC                                        _Timer1 018D  
                                      _Timer2 018F              fatfs_lfn_generate_tail@sfn_input 0039  
                      fl_createdirectory@path 00F8                  fatfs_split_path@max_filename 0025  
                          __size_of_OpenUSART 0064                                        _Switch 6026  
               ?fat_list@fat_list_insert_last 000B                       fatfs_fat_set_cluster@fs 0046  
                 fatfs_filename_to_lfn@buffer 000F                                        __files 04F0  
    fatfs_cache_get_next_cluster@pNextCluster 0009                                command@CRCbits 0007  
                                   ??___awdiv 0005                     fatfs_mark_file_deleted@fs 00AC  
                 fatfs_filename_to_lfn@length 0028                                     ??___lldiv 0009  
                        __size_of_fl_shutdown 0018                                        _flag_1 01AA  
                                   ??___llmod 0009                               _fl_attach_media 4B2E  
                 fatfs_filename_to_lfn@sfnChk 0013                                     ??___lwdiv 0005  
                                   ??___lwmod 000C                        fatfs_lfn_cache_get@lfn 0001  
                   __size_of_fatfs_sfn_exists 0108                                        _memcpy 4748  
                                      _memset 4034                              __end_of_mmc_init 5ACA  
                     media_write@sector_count 0010                                        clear_0 51F2  
                                      clear_1 5204            __end_of_fatfs_create_fsinfo_sector 7212  
                                      clear_2 5210                    _fatfs_create_fsinfo_sector 7074  
                                      clear_3 521C                                        clear_4 5228  
                            ___awdiv@quotient 0007                            _fl_createdirectory 4060  
                      ??_fatfs_get_file_entry 00B6                                     ??_fl_feof 0003  
                     fatfs_add_file_entry@dir 00DE                                        _printf 8BB2  
                      fatfs_lfn_cache_entry@i 000F                                     ??_fl_init 000F  
                 __write_sectors@SectorNumber 00C4                                        _strcmp 5300  
                                   ??_command 0008                                        _string 01AF  
                                      _strlen 44E2                            Check_extension@s_1 000D  
                          Check_extension@s_2 0011                                   ?_File_write 0001  
                          Check_extension@xtn 000A                                  __mediumconst FA46  
                   fat_list@fat_list_pop_head 40EA                           ?_fl_createdirectory 00F8  
                                      tblptrh 000FF7                                        tblptrl 000FF6  
                                      tblptru 000FF8                              __end_of_spi_init 3EEE  
                            __end_of_spi_read 3E6A                                  media_write@i 001C  
                            _fatfs_cache_init 3E38                   FileString_TrimLength@length 0007  
                       fatfs_write_sector@lba 003C                   fatfs_list_directory_next@fs 00AC  
                       __end_of_Create_folder 5160                   FileString_TrimLength@strLen 0003  
                       fatfs_get_file_entry@i 0118                       __size_of__allocate_file 004E  
                                   ??_strncmp 0007                        _fatfs_entry_lfn_exists 4C82  
                       fatfs_get_file_entry@x 010D                                     ??_strncpy 0007  
                 FileString_TrimLength@strSrc 0009                          fl_listdirectory@path 014D  
                    fatfs_split_path@filename 0023              __end_of_fatfs_update_file_length 7728  
                        __size_of_media_write 013E                                    __accesstop 0080  
            fatfs_get_file_entry@name_to_find 00B2                       __end_of__initialization 526E  
                             __CFG_PBADEN$OFF 000000                            __size_of_WriteSPI_ 001E  
             fatfs_update_file_length@Cluster 00AE              fatfs_find_blank_cluster@position 008C  
                             ?__write_sectors 009E                    FileString_GetExtension@str 0001  
                    fatfs_split_path@max_path 0021                            __size_of_Write_str 0012  
                         fl_fread@sectorsRead 0100                      ?_FileString_StrCmpNoCase 0007  
                       fatfs_sector_reader@fs 0080                     __size_of_fatfs_split_path 00F4  
                   ??_fatfs_find_next_cluster 004C                             __end_of_File_read 6026  
                        ??_fl_createdirectory 0080                           _fatfs_sector_reader A5AA  
                     __end_of_fatfs_fat_purge 45DA                                command@command 0008  
             __end_of_fatfs_mark_file_deleted 78F0                             __end_of_Draw_Line 4C0E  
                                  _WriteUSART 3E8A                                __pcstackCOMRAM 0001  
                                __pidataBANK1 3EB7                                  __pidataBANK2 4866  
                               __end_of_Write 4034                     ??_fatfs_total_path_levels 0003  
            fatfs_filename_to_lfn@nameIndexes 001A               fatfs_get_file_entry@dotRequired 0111  
                               __end_of_putch 3E54        fatfs_fat_add_cluster_to_chain@newEntry 0086  
                             ??_Format_string 0006                       __end_of_fatfs_erase_fat 9966  
                   ??fat_list@fat_list_remove 0005                             __end_of_ReadUSART 3FE0  
                   ??_FileString_GetExtension 0003                      FileString_TrimLength@str 0001  
      __end_offat_list@fat_list_insert_before 4E5E       __size_offat_list@fat_list_insert_before 007A  
              fat_list@fat_list_insert_before 4DE4              __size_of_fatfs_entry_lfn_invalid 0052  
                    fatfs_split_path@strindex 002D       fatfs_cache_set_next_cluster@nextCluster 0009  
                     fatfs_sector_write@count 0029                            __size_of_fl_fclose 012A  
                         __create_directory@i 0178                      _fatfs_find_blank_cluster B44A  
                          __size_of_fl_fflush 00AA                            __size_of_fl_format 002E  
                        ?_fatfs_sector_reader 0080                                    __free_file 411E  
                          __size_of_fl_fwrite 06E2                            __size_of_fl_remove 00C0  
      fatfs_cache_set_next_cluster@clusterIdx 0005                                       ??_Write 0002  
                               ReadUSART@data 0001                             __end_of_OpenUSART 498C  
                        __end_of_Format_drive 46EA                                    Switch@exit 0016  
                    fatfs_mark_file_deleted@x 00B8                                       ??_putch 0003  
                      fatfs_add_free_space@fs 0074                 fatfs_get_sfn_display_name@len 0005  
                                  __pbssBANK1 018B                                    __pbssBANK2 0260  
                                  __pbssBANK3 0300                                    __pbssBANK4 0400  
         fatfs_mark_file_deleted@recordoffset 00BA                 fatfs_get_sfn_display_name@out 0001  
        __end_of_fatfs_cache_set_next_cluster 3E38         __size_of_fatfs_cache_set_next_cluster 0002  
                _fatfs_cache_set_next_cluster 3E36                                 __filelib_init 0191  
                                   ?_ReadUART 0001                        fatfs_split_path@levels 002B  
        fatfs_free_cluster_chain@last_cluster 0086                   __end_of_fatfs_entry_is_file 3FB8  
                                   ?_Read_str 0002                  __end_of_fatfs_lfn_cache_init 4748  
                       fatfs_sector_write@lba 0022                       ?_fatfs_sfn_create_entry 0001  
                     __end_of_fl_attach_media 4B9C                           __size_of_File_write 01FE  
                        fatfs_split_path@path 001F                                     ?_Open_dir 0001  
                              Read_str@buffer 0002                                  Read_str@data 0005  
             fatfs_list_directory_next@result 0111               fatfs_add_free_space@nextcluster 009A  
              __write_sectors@TotalWriteCount 00B8                                    __open_file 9C6A  
                                     ?_Switch 0001                         fatfs_erase_sectors@fs 0020  
                      media_read@sector_count 000F                   fatfs_total_path_levels@path 0001  
 fatfs_set_fs_info_next_free_cluster@newValue 0048       fatfs_set_fs_info_next_free_cluster@pbuf 0052  
                  __end_of_fatfs_sector_write 4866                        __create_directory@file 017C  
                            fl_opendir@levels 00F6                 __size_of_fatfs_entry_lfn_text 002A  
                      __create_directory@path 00F2               __create_directory@shortFilename 014D  
                               putsUSART@data 0002                     __create_directory@sfEntry 0158  
                                     ?_memcpy 0001                                       ?_memset 0001  
                       __size_of_fatfs_format 007A                                    _fl_fgetpos 4152  
                                  _fatfs_init EC5C                                    _fatfs_itoa 5D48  
                   __create_directory@tailNum 017A                                       ?_printf 000D  
              ??fat_list@fat_list_insert_last 000F              fatfs_add_file_entry@startCluster 00D6  
              __size_of_FileString_TrimLength 006C                                       ?_strcmp 0001  
                                     ?_strlen 0001                             __end_of_WriteSPI_ 3F0C  
                ??_fatfs_lfn_entries_required 000B                 __end_of_FileString_TrimLength 4B2E  
                        __write_sectors@count 00A7                    __create_file@shortFilename 014D  
                                  _fl_readdir 43EE                 __size_of_fatfs_entry_sfn_only 0064  
                           __end_of_Write_str 3E8A                                    _fl_opendir 5B8E  
                       ??_fatfs_sector_reader 008C               __end_of_fatfs_find_next_cluster ACE2  
                       _fatfs_fat_read_sector 8702                  __size_of_fatfs_compare_names 019C  
                __size_of_fatfs_get_substring 01DC                          media_read@Start_Addr 0017  
                   fatfs_write_sector@lba_440 0038            fat_list@fat_list_insert_after@node 0003  
          fat_list@fat_list_insert_after@list 0001                       ??_fatfs_lfn_cache_entry 0005  
                                   ?_fl_fgetc 00F6                            __read_sectors@file 0080  
                                   ?_fl_fread 00DE                                     ?_fl_fseek 0017  
                             fatfs_fat_init@i 0013                      __size_of__open_directory 0148  
             __end_of_fatfs_total_path_levels 66D8                                     ?_fl_fopen 00FC  
                          __size_of_putsUSART 0060                                     ?_fl_ftell 0007  
                                     _SSPCON1 000FC6                                  Write_str@str 0006  
            __size_of_fatfs_lfn_generate_tail 00B8                                       _SSPSTAT 000FC7  
                     __size_of_fatfs_fat_init 022C                     fatfs_write_sector@cluster 0022  
                       fatfs_fat_writeback@fs 0020                   fatfs_allocate_free_space@fs 009E  
             __end_of_FileString_StrCmpNoCase 554E                                    ??_ReadUART 0002  
             __end_offat_list@fat_list_remove 5736              __end_of_fatfs_free_cluster_chain 568C  
              __end_of_fatfs_sfn_create_entry 6BFC                                    _media_read 6126  
                                     _Clr_str 3F2A                 ?_fatfs_cache_set_next_cluster 0001  
                                   ?_mmc_init 0001                                    ??_Read_str 0004  
                      __write_sectors@Cluster 00D0                   __size_of_fatfs_write_sector 0314  
                                     _ReadBUF 3E54      fatfs_find_next_cluster@fat_sector_offset 0072  
                           __end_of_fl_fclose 645C            fatfs_update_file_length@fileLength 00B4  
                           __end_of_fl_fflush 57E0                                    ??_Open_dir 0080  
                                     __Hparam 0000                                  _fatfs_format 4ED8  
                           __end_of_fl_format 40EA                  __end_of_fatfs_lfn_create_sfn 936A  
                                     __Lparam 0000                             __end_of_fl_fwrite E0BC  
                            ?_fatfs_fat_purge 0034                             __end_of_fl_remove 5A0A  
                                 ?_WriteUSART 0001                           _fatfs_fat_writeback 78F0  
                                   ?_spi_init 0001                                     ?_spi_read 0001  
                             __size_of_Switch 0100                         fl_fwrite@bytesWritten 0113  
                                     ___awdiv 5420                                       ___lldiv 4CF6  
                 ?_fatfs_lfn_entries_required 0009                                       ___llmod 48C6  
                                     ___lwdiv 4356                     fatfs_fat_set_cluster@pbuf 0060  
                                     ___lwmod 4206                 fatfs_filename_to_lfn@filename 000D  
                ??_fatfs_list_directory_start 0009                               _Check_extension 538E  
      fatfs_create_boot_sector@total_clusters 0036                              _fatfs_sfn_exists 622A  
                             fatfs_init@FATSz 0045                                       Switch@c 001B  
                             __CFG_STVREN$OFF 000000              fatfs_lfn_entries_required@length 000B  
                                     __pcinit 51EA                               __size_of_memcpy 005E  
           __size_of_fatfs_update_file_length 01C6                               __size_of_memset 002C  
          __size_of_fatfs_allocate_free_space 025C              fatfs_format_fat32@volume_sectors 003E  
            fatfs_format_fat16@volume_sectors 003E                  __size_of_fatfs_erase_sectors 00C4  
                            ?_fatfs_erase_fat 0020                                       __ramtop 1000  
                   ?_fatfs_update_file_length 00AC                         fatfs_lfn_create_sfn@i 001B  
                   fatfs_sfn_exists@shortname 00B2                                       _fl_feof 4E5E  
                                     __ptext0 66D8                                       __ptext1 3ED2  
                                     __ptext2 5A0A                                       __ptext3 3E9E  
                                     __ptext4 4B2E                                       __ptext5 EC5C  
                                     __ptext6 4F52                                       __ptext7 57E0  
                                     __ptext8 8BB2                                       __ptext9 3E4C  
                                     _fl_init 5274                               __size_of_printf 027C  
                                     _command 430C                fatfs_sfn_exists@directoryEntry 00BB  
                             __size_of_strcmp 008E                               __size_of_strlen 0052  
                           __end_of_hexpowers FA6A                     fatfs_fat_read_sector@last 0042  
                   fatfs_fat_read_sector@pcur 0044                                       _dpowers FA58  
            fatfs_lfn_cache_entry@entryBuffer 0003                            _fatfs_format_fat32 A288  
                          _fatfs_format_fat16 BC32                fatfs_find_free_dir_offset@item 00CB  
                ??_fatfs_create_fsinfo_sector 0026                   fatfs_get_sfn_display_name@a 0007  
                                 ?__free_file 000F                  __end_of_fatfs_add_file_entry B090  
          fat_list@fat_list_insert_first@node 0009            fat_list@fat_list_insert_first@list 0007  
               __size_of_fatfs_lba_of_cluster 01FC                                  ?_File_delete 0001  
           fatfs_get_file_entry@long_filename 010F                    ?_fatfs_list_directory_next 00AC  
                                ?_File_append 0001                                    ??_fl_fgetc 0080  
                     fatfs_lfn_cache_init@lfn 0009                          ?_fatfs_fat_writeback 0020  
                                  ??_fl_fread 00E6              fatfs_get_file_entry@recordoffset 0113  
                    fatfs_add_file_entry@item 0113                                    ??_fl_fseek 001F  
                                  ??_fl_fopen 017C                                    ??_fl_ftell 000B  
                    fatfs_add_file_entry@size 00DA                                  ?_File_format 006B  
                              __allocate_file 43A0               fatfs_get_substring@expectedchar 001A  
                                     _strncmp 4C0E                           ?_fatfs_format_fat32 003C  
                         ?_fatfs_format_fat16 003C                                       _strncpy 45DA  
                     ??_fatfs_filename_to_lfn 0014                          end_of_initialization 526E  
              ??_fatfs_cache_get_next_cluster 000B                        __size_of__read_sectors 0426  
            __size_of_fatfs_calc_cluster_size 014A                                  ?_ConfigUSART 0007  
                  fatfs_sfn_create_entry@size 0003                                       memcpy@d 000B  
                    __read_sectors@ClusterIdx 00A9                                       memcpy@n 0006  
                                     memcpy@s 0008      fatfs_find_free_dir_offset@start_recorded 00BE  
                                     memset@c 0003                                       memset@n 0005  
                                     memset@p 0007                            _fatfs_entry_is_dir 3F4C  
          __size_offat_list@fat_list_pop_head 0034                                    ??_mmc_init 0009  
                         ConfigUSART@config_1 0008                           ConfigUSART@config_2 0007  
                       _fatfs_fat_set_cluster 8E2E                  fatfs_create_boot_sector@name 002A  
                __end_of_fatfs_add_free_space 6D54                       fatfs_fat_read_sector@fs 0034  
                            ?_fl_attach_media 0055                               ___lldiv@divisor 0005  
                            _fatfs_split_path 5E3A                             ?__check_file_open 0025  
                           ?_fl_listdirectory 014D                      ??_fatfs_get_root_cluster 0005  
                             ___lldiv@counter 000D              fatfs_add_free_space@startCluster 0076  
                 ?_fatfs_list_directory_start 0001        fatfs_list_directory_next@long_filename 010D  
                    __end_of_fatfs_cache_init 3E3A                              media_read@buffer 000D  
                         ?_fatfs_entry_is_dir 0001               fatfs_list_directory_start@dirls 0003  
                                 ?__open_file 00F2                                     _RCSTAbits 000FAB  
                                     printf@c 0020                            ??__check_file_open 0027  
                                     printf@f 000D                          __read_sectors@Sector 009D  
                          ??_fl_listdirectory 0080                                       postdec0 000FED  
                                     postdec1 000FE5                                       postdec2 000FDD  
                                  ??_spi_init 0001                                    ??_spi_read 0001  
                                     postinc0 000FEE                                       postinc1 000FE6  
                                     postinc2 000FDE                  fatfs_find_blank_cluster@pbuf 0090  
                fatfs_list_directory_next@lfn 0117                             __end_of_putsUSART 4806  
                                  fl_feof@res 000B                              media_read@sector 0009  
                        ??_fatfs_format_fat32 0044                          ??_fatfs_format_fat16 0044  
       fatfs_allocate_free_space@clusterCount 00B4                                    fl_fclose@f 00DE  
                                     strlen@s 0001                          __read_sectors@buffer 0086  
                                 ?_fl_fgetpos 0001                                    fl_fflush@f 00D4  
                                 ?_fatfs_init 001F                                   ?_fatfs_itoa 000E  
 __end_of_fatfs_set_fs_info_next_free_cluster 7562  __size_of_fatfs_set_fs_info_next_free_cluster 01AA  
       ??_fatfs_set_fs_info_next_free_cluster 004C          ?_fatfs_set_fs_info_next_free_cluster 0046  
         _fatfs_set_fs_info_next_free_cluster 73B8                   ?_fatfs_create_fsinfo_sector 0020  
                     _fatfs_entry_lfn_invalid 4534                        fatfs_get_file_entry@fs 00AC  
                        __read_sectors@offset 0082                                   ?_fl_readdir 00BA  
                                ??_File_write 0189             __end_of_fatfs_allocate_free_space 8BB2  
                      ?_fatfs_fat_read_sector 0034                        fatfs_lba_of_cluster@fs 0001  
                fatfs_list_directory_start@fs 0001                         __size_of_Format_drive 005C  
                        _fatfs_lfn_cache_init 46EA              fatfs_cache_get_next_cluster@file 0003  
                                 ?_fl_opendir 00F2                                 ??_fl_closedir 0003  
                fatfs_sfn_exists@recordoffset 00B8          fatfs_free_cluster_chain@next_cluster 008A  
                           media_write@buffer 000D                       ?_fatfs_entry_lfn_exists 0001  
                      __end_of__allocate_file 43EE                                     _TRISBbits 000F93  
                                   _TRISCbits 000F94              fatfs_cache_set_next_cluster@file 0003  
                                  fl_fwrite@f 00E5                       fl_format@volume_sectors 0065  
                        ??_fatfs_entry_is_dir 0003                         ??_fatfs_fat_writeback 0024  
                           media_write@sector 0009                            Format_string@buf_1 0001  
                          Format_string@buf_2 0003               fatfs_calc_cluster_size@is_fat32 0005  
                      fatfs_sector_read@count 0027                           __size_of_WriteUSART 0014  
                           File_format@volume 006B           __size_of_fatfs_find_free_dir_offset 0304  
                 fatfs_init@count_of_clusters 004D                              WriteSPI_@TempVar 0001  
                            ??__write_sectors 00AB                          __open_directory@path 00B8  
                           fatfs_fat_purge@fs 0034                  __size_of_fatfs_lfn_cache_get 0068  
                     fatfs_fat_writeback@pcur 0022                          __create_file@sfEntry 0158  
                          fatfs_cache_init@fs 0001                    fatfs_add_file_entry@pSname 0100  
                                 ?_media_read 0009                          __create_file@tailNum 0178  
                             __free_file@file 000F                        fatfs_filename_to_lfn@i 002C  
                      fatfs_sector_reader@lba 00A4                       fatfs_entry_is_dir@entry 0001  
                            __write_sectors@i 00C8                             ??__open_directory 00BC  
                                   _TXSTAbits 000FAC                  fatfs_lfn_create_sfn@filename 000B  
           __end_offat_list@fat_list_pop_head 411E                   fatfs_compare_names@file1Len 001F  
                 fatfs_compare_names@file2Len 001B                    fatfs_init@reserved_sectors 0051  
                     __end_of_Check_extension 5420                               __free_file_list 01D6  
                               ??_fl_shutdown 0038             fatfs_fat_set_cluster@next_cluster 004C  
                          __end_of_File_write 8092          fatfs_find_blank_cluster@free_cluster 004C  
                         __size_of__free_file 0034                 fatfs_list_directory_next@item 0115  
                       fat_list@fat_list_init 3F70                    ??_fatfs_find_blank_cluster 004E  
                                _Format_drive 468E                                     Read_str@i 0004  
                    _fatfs_create_boot_sector E0BC                                 __read_sectors B80C  
                                   _File_read 5F2E                                __end_of_Switch 6126  
                                   _Draw_Line 4B9C             __size_of_fatfs_free_cluster_chain 00A0  
                   ?_fatfs_free_cluster_chain 0080                                __end_of_memcpy 47A6  
                              __end_of_memset 4060                         fatfs_add_file_entry@i 010E  
                       fatfs_add_file_entry@x 0106              __size_of_FileString_StrCmpNoCase 009A  
                       ?_fatfs_lfn_cache_init 0009                      ?_fatfs_mark_file_deleted 00AC  
              __end_of_fatfs_entry_lfn_exists 4CF6                                __end_of_printf 8E2E  
               __size_of_fatfs_get_file_entry 02FE                                __end_of_strcmp 538E  
          fatfs_sector_reader@cluster_to_read 00A0                                __end_of_strlen 4534  
                         start_initialization 51EA                                     _ReadUSART 3FB8  
                             ?__allocate_file 000F                          _fatfs_lfn_create_sfn 90CA  
                     _fatfs_lfn_generate_tail 5892                                 ??_media_write 0014  
                              _fatfs_fat_init 84D6                           __size_of__open_file 030A  
                       fl_fwrite@sectorsWrote 0103            fatfs_sfn_create_entry@startCluster 0007  
                         __end_of_fl_closedir 3E3C                        fatfs_init@data_sectors 0041  
                      ?_fatfs_fat_set_cluster 0046                                     _OpenUSART 4928  
                         __size_of_fl_fgetpos 0038                      fatfs_sector_write@target 0026  
                         __size_of_fatfs_init 0DEA                           __size_of_fatfs_itoa 00F2  
                             ___llmod@divisor 0005                               ___llmod@counter 0009  
                                 Switch@F4803 01E8                             __size_of_ReadUART 0008  
                         __size_of_fl_readdir 0050           __size_of_fatfs_get_sfn_display_name 006A  
                         _fatfs_compare_names 6ED8                           _fatfs_get_substring 7ABC  
                           __size_of_Read_str 0042            fatfs_get_file_entry@directoryEntry 0116  
                         __size_of_fl_opendir 00CA               __size_of_fatfs_get_root_cluster 001E  
           fatfs_add_file_entry@shortfilename 00D4                   __size_of_fl_createdirectory 002E  
                       fl_createdirectory@res 00FA                         fatfs_init@num_of_fats 0054  
                        _fatfs_add_file_entry ACE2                                      ??_Switch 0016  
                           __size_of_Open_dir 0080                                ?__read_sectors 0080  
                   ??_fatfs_entry_lfn_invalid 0003          fatfs_find_free_dir_offset@dirCluster 00AE  
                      __size_of_Create_folder 0088        fatfs_find_next_cluster@current_cluster 0048  
                                  ?_File_read 0001                                   __pdataBANK1 01DE  
                                 __pdataBANK2 0200                              __CFG_LPT1OSC$OFF 000000  
              fat_list@fat_list_pop_head@node 0009                fat_list@fat_list_pop_head@list 0007  
                                    ??_memcpy 0008                                      ??_memset 0007  
                  fatfs_create_boot_sector@fs 0020                                    ?_Draw_Line 0003  
                         __end_of_fl_shutdown 3EB6                    __write_sectors@nextCluster 00C0  
                  fatfs_find_blank_cluster@fs 0046                                      ??_printf 0015  
                        fatfs_write_sector@fs 0020                                      ??_strcmp 0005  
                                    ??_strlen 0003                         __end_of_Format_string 50D8  
                         __size_of_media_read 0104                               File_format@name 006F  
                     fatfs_compare_names@ext1 001D                       fatfs_compare_names@ext2 0019  
                                 __pbssBIGRAM 04F0                          fatfs_sector_read@lba 0021  
                     fatfs_compare_names@strA 0013                       fatfs_compare_names@strB 0015  
                        ?_fatfs_compare_names 0013                          ?_fatfs_get_substring 0007  
                        _fatfs_add_free_space 6BFC                                    ?_ReadUSART 0001  
                              __filelib_valid 0193                          fatfs_sector_reader@i 009C  
                      __end_of_fatfs_fat_init 8702                                 __pcstackBANK0 0080  
                               __pcstackBANK1 0100                         ?_fatfs_lfn_create_sfn 0009  
                                   _WriteSPI_ 3EEE                           __end_of__stringdata FFFE  
                fatfs_fat_set_cluster@cluster 0048                            _fatfs_sector_write 4806  
                           fatfs_erase_fat@fs 0020                       _fatfs_calc_cluster_size 6960  
                                   _Write_str 3E78        fatfs_fat_set_cluster@fat_sector_offset 0058  
                __end_of_fatfs_entry_lfn_text 400A                  fatfs_create_fsinfo_sector@fs 0020  
                       __check_file_open@file 0025                __size_of_fatfs_lfn_cache_entry 054E  
                   fatfs_fat_writeback@offset 0030                       fatfs_get_substring@path 0007  
                       __check_file_open@node 0029                 __end_of_fatfs_lfn_cache_entry D486  
                        __size_of_File_delete 0082                          __size_of_File_append 022C  
                    __end_of_fatfs_sfn_exists 6332                             __size_of_fl_fgetc 0044  
                           __size_of_fl_fread 051E                             __size_of_fl_fseek 01A6  
                           __size_of_fl_fopen 0184                             __size_of_fl_ftell 002E  
                        __size_of_File_format 003E                           _fatfs_erase_sectors 5ACA  
                                  ?_OpenUSART 0001                      ?_fatfs_find_next_cluster 0046  
                         ?_fatfs_sector_write 0020                                      ?_Clr_str 0001  
                __end_of_fatfs_entry_sfn_only 49F0            __end_of_fatfs_find_free_dir_offset 9C6A  
                  _fatfs_find_free_dir_offset 9966                         fatfs_add_free_space@i 0096  
                        __size_of_ConfigUSART 000E       fatfs_list_directory_next@directoryEntry 014B  
                                    ?_ReadBUF 0001                           __end_of_media_write 659A  
                                   Write@data 0002                      ?_fatfs_total_path_levels 0001  
                        fatfs_sector_write@fs 0020                fatfs_list_directory_next@dirls 00AE  
                           __size_of_mmc_init 00C0                              ?_Check_extension 000A  
              fatfs_list_directory_next@entry 00B0                              ___lwdiv@dividend 0001  
                  _fatfs_filename_to_lfn$2422 0026                             __CFG_CCP2MX$PORTC 000000  
                      ?fat_list@fat_list_init 0001                                  ??_WriteUSART 0001  
                       ?_fatfs_add_file_entry 00CC                       fatfs_lfn_create_sfn@len 0015  
                     fatfs_lfn_create_sfn@ext 0012                      ?fat_list@fat_list_remove 0001  
                     fatfs_lfn_create_sfn@pos 0017                                 __pmediumconst FA46  
                __size_of_fatfs_entry_is_file 0024                      ?_FileString_GetExtension 0001  
                                    ?___awdiv 0001                                     __ptext100 430C  
                                   __ptext101 3E5E                                     __ptext110 3FE0  
                                   __ptext102 3EEE                                     __ptext111 4534  
                                   __ptext103 3E54                                     _fl_fclose 6332  
                                   __ptext120 4490                                     __ptext112 4C82  
                                   __ptext104 4CF6                                     __ptext121 43A0  
                                   __ptext113 3F4C                                     __ptext105 46EA  
                                   __ptext130 5054                                     __ptext122 40EA  
                                   __ptext114 411E                                     __ptext106 4034  
                                   __ptext131 538E                                     __ptext123 568C  
                                   __ptext115 554E                                     __ptext107 49F0  
                                   __ptext140 4928                                     __ptext132 4C0E  
                                   __ptext124 443E                                     __ptext116 6ED8  
                                   __ptext108 CF38                                     __ptext141 0000  
                                   __ptext133 3E78                                     __ptext125 4D6C  
                                   __ptext117 44E2                                     __ptext109 498C  
                                   __ptext134 47A6                                     __ptext126 4DE4  
                                   __ptext118 4AC2                                     __ptext135 4244  
                                   __ptext127 5160                                     __ptext119 54B4  
                                   __ptext136 3E8A                                     __ptext128 6026  
                                   __ptext137 3FB8                                     __ptext129 5300  
                                   __ptext138 3F2A                                     __ptext139 3E6A  
                                   _fl_fflush 5736                                      ?___lldiv 0001  
                                    ?___llmod 0001                                      ?___lwdiv 0001  
                                    ?___lwmod 0008                                     _fl_format 40BC  
                      fatfs_erase_sectors@lba 0022                                     _fl_fwrite D9DA  
                 __end_of_fatfs_sector_reader A93C                                     _fl_remove 594A  
                    fatfs_calc_cluster_size@i 000D                          ?_fatfs_erase_sectors 0020  
                           __size_of_spi_init 001C                                 ?__create_file 00F2  
                           __size_of_spi_read 000C                 fatfs_lfn_cache_entry@LFNIndex 0010  
                      ??_fatfs_lfn_cache_init 000D                          ??_fatfs_sector_write 002D  
                           fl_opendir@cluster 00FA                                      ?_fl_feof 0001  
        fatfs_find_free_dir_offset@entryCount 00B2              fatfs_sector_reader@start_cluster 0082  
                           __read_sectors@lba 0095                                fl_fgetpos@file 0005  
                                    ?_fl_init 0001          fatfs_find_free_dir_offset@newCluster 00C1  
                                    ?_command 0003                         ??_fatfs_compare_names 0017  
            fatfs_sector_reader@cluster_chain 00A8                     __write_sectors@ClusterIdx 00CC  
                       ??_fatfs_get_substring 000F                         ?_fatfs_add_free_space 0074  
                   ??_fatfs_lfn_generate_tail 003F                     fatfs_entry_sfn_only@entry 0001  
                    fatfs_get_root_cluster@fs 0001                      __end_of_fatfs_split_path 5F2E  
                                ??__free_file 0011                        _fatfs_get_root_cluster 3F0C  
                       _FileString_TrimLength 4AC2                                   _fl_closedir 3E3A  
                             ?_fatfs_fat_init 0009                                    ?_WriteSPI_ 0001  
             ??fat_list@fat_list_insert_after 0007                                     _hexpowers FA62  
             ??fat_list@fat_list_insert_first 000B                                __size_of_Write 002A  
                 ??_fatfs_list_directory_next 00B2                              ___lwdiv@quotient 0005  
             __end_of_fatfs_entry_lfn_invalid 4586            fatfs_get_file_entry@short_filename 0100  
                                  ?_Write_str 0006                                 _Create_folder 50D8  
                                    ?_strncmp 0001                                      ?_strncpy 0001  
                          __end_of_WriteUSART 3E9E                    fatfs_update_file_length@fs 00AC  
                              __size_of_putch 0008                                fatfs_itoa@F407 FA47  
         fat_list@fat_list_insert_before@node 0003           fat_list@fat_list_insert_before@list 0001  
                       __write_sectors@offset 00A0                    __end_of_fatfs_write_sector A288  
               fatfs_add_file_entry@dirOffset 0112                      fatfs_erase_sectors@count 0026  
               fatfs_add_file_entry@dirSector 0114                     fatfs_entry_lfn_exists@lfn 0001  
              __size_of_fatfs_filename_to_lfn 0218                                fatfs_format@fs 0059  
                              fl_closedir@dir 0001                 __end_of_fatfs_filename_to_lfn 82AA  
                                    _LATBbits 000F8A                                      _LATCbits 000F8B  
                              fl_fread@buffer 00DE                             fl_remove@filename 0183  
                 __open_directory@pathCluster 00BA                                fl_fread@length 00E2  
                                 strncpy@from 0003                                fl_fread@offset 0104  
                                    _PIE1bits 000F9D                                   strncpy@size 0005  
                              fl_fread@sector 0108                  __end_of_fatfs_lba_of_cluster 7E94  
                             ??__read_sectors 008C                                      _PIR1bits 000F9E  
                                 _fl_shutdown 3E9E                                  ??__open_file 00F4  
            __end_of_fatfs_find_blank_cluster B80C                                 Clr_str@buffer 0001  
                            __CFG_WDTPS$32768 000000                                     fl_fgetc@f 00F6  
                           ?_fatfs_cache_init 0001                            __end_of__free_file 4152  
                                  ?_fl_fclose 00DE                                     fl_fread@f 00E4  
                                  ?_fl_fflush 00D4                           __read_sectors@count 0088  
          __end_of_fatfs_get_sfn_display_name 4AC2                    _fatfs_get_sfn_display_name 4A58  
                                   fl_fseek@f 0017                                   ??_File_read 0080  
                            fatfs_fat_init@fs 0009                          fatfs_sfn_exists@item 00BA  
                                  ?_fl_format 0065                                     fl_fopen@i 017E  
                                   fl_ftell@f 0007                       fatfs_init@total_sectors 0049  
                              ??__create_file 00F4                       ??_fatfs_fat_read_sector 003A  
                                  ?_fl_fwrite 00DE                     fatfs_filename_to_lfn@F379 01DE  
                         _fatfs_lfn_cache_get 49F0                         ??_fatfs_erase_sectors 0028  
                          ??_fatfs_cache_init 0005                                   ??_Draw_Line 0004  
                                  ?_fl_remove 0183                                  ??_fl_fgetpos 0005  
       fatfs_list_directory_next@recordoffset 0113                                  ??_fatfs_init 0021  
                                ??_fatfs_itoa 0014                       _FileString_StrCmpNoCase 54B4  
                                   _putsUSART 47A6                                   __stringdata FA6A  
                    __size_of_fatfs_fat_purge 0054                                  ??_fl_readdir 0080  
                                    ReadBUF@u 0001                 fatfs_lfn_cache_init@wipeTable 000B  
                             __open_file@file 014D                               __open_file@path 00F2  
         fatfs_total_path_levels@expectedchar 0007                       fatfs_erase_fat@is_fat32 0022  
                                  printf@_val 001C                     __size_of__check_file_open 009E  
                                  printf@flag 001B   fatfs_fat_add_cluster_to_chain@start_cluster 0082  
                                    _CardType 018B                     __size_of_fl_listdirectory 00B2  
                                ??_fl_opendir 0080                                    printf@prec 0018  
                      ??_fatfs_lfn_create_sfn 000D                fatfs_calc_cluster_size@sectors 0001  
                   ??_fatfs_calc_cluster_size 0007                                   ??_ReadUSART 0001  
     fatfs_list_directory_next@short_filename 0100                           command@fourbyte_arg 0003  
                             __open_file_list 01DA                               __open_directory 6818  
        fatfs_create_fsinfo_sector@sector_lba 0022                    fatfs_compare_names@ext1Pos 0023  
                  fatfs_compare_names@ext2Pos 0021                      __size_of_fatfs_erase_fat 02FE  
                   fatfs_sector_reader@offset 0086                        __end_offatfs_itoa@F407 FA58  
                              ?_Create_folder 0001                     fatfs_entry_lfn_text@entry 0001  
                   fatfs_sector_reader@target 008A                                fl_fseek@offset 0019  
                           fl_fread@copyCount 010C                                   _media_write 645C  
                                   copy_data0 5242                                     copy_data1 5262  
                  fatfs_format@volume_sectors 005B                                fl_fseek@origin 001D  
     fatfs_create_boot_sector@boot_sector_lba 0022                            __end_of__open_file 9F74  
                        ?_fatfs_lfn_cache_get 0001                                      _ReadUART 3E3C  
                                 ??_OpenUSART 0003                                  ??_media_read 0013  
                                    _Read_str 4244                               OpenUSART@config 0006  
                               Draw_Line@line 0007                    ??_fatfs_create_boot_sector 002E  
                          __end_of_fl_fgetpos 418A        fatfs_list_directory_start@StartCluster 0005  
                          __end_of_fatfs_init FA46                            __end_of_fatfs_itoa 5E3A  
             __end_of_fatfs_lfn_generate_tail 594A                              __size_of_Clr_str 0022  
                           fl_fread@bytesRead 0110               __end_of_FileString_GetExtension 44E2  
                  fatfs_free_cluster_chain@fs 0080                              __size_of_ReadBUF 000A  
                      ??_fatfs_add_file_entry 00E0                                      __Hrparam 0000  
                                    _Open_dir 4F52                            __end_of_fl_readdir 443E  
                                    __Lrparam 0000                     _fatfs_list_directory_next B090  
             fatfs_lfn_generate_tail@tail_str 0041                            __end_of_fl_opendir 5C58  
                   fatfs_init@valid_partition 0053                      _fatfs_update_file_length 7562  
                 fatfs_get_substring@levelreq 0009                                     mmc_init@i 000A  
                            Check_extension@j 0015                                     mmc_init@u 000B  
             fatfs_find_next_cluster@position 0076                   __size_of_fatfs_format_fat16 0460  
                 __size_of_fatfs_format_fat32 0322                              __size_of___awdiv 0094  
                        _fatfs_entry_lfn_text 3FE0          __end_of_fatfs_cache_get_next_cluster 3E4C  
       __size_of_fatfs_cache_get_next_cluster 0008                  _fatfs_cache_get_next_cluster 3E44  
                            __size_of___lldiv 0076                           fatfs_sector_read@fs 001F  
                            __size_of___llmod 0062                             __create_file@file 017A  
                    __size_of_fl_attach_media 006E                              __size_of___lwdiv 004A  
                            __size_of___lwmod 003E                             _fatfs_sector_read 4632  
                            ??__allocate_file 0011                                 fl_fclose@file 00E0  
                            fatfs_erase_fat@i 0031                                    ?_putsUSART 0002  
                 __end_of_fatfs_fat_writeback 7ABC                        ??_fatfs_add_free_space 007C  
                            __size_of_fl_feof 007A                fatfs_mark_file_deleted@Cluster 00AE  
                           __create_directory D486                              __size_of_fl_init 008C  
                          ?_fatfs_sector_read 001F        fatfs_update_file_length@directoryEntry 00C1  
                      ?_FileString_TrimLength 0001                              __size_of_command 004A  
                        _fatfs_entry_sfn_only 498C                            __end_of_media_read 622A  
          fatfs_lfn_entries_required@filename 0009                    ?_fatfs_allocate_free_space 009E  
                          ?__create_directory 00F2                         media_write@Start_Addr 0018  
                             ___lwdiv@divisor 0003                                   ??_WriteSPI_ 0001  
                     fatfs_sfn_create_entry@i 000F                      ??_fatfs_sfn_create_entry 000F  
                   FileString_StrCmpNoCase@s1 0007                     FileString_StrCmpNoCase@s2 0009  
                             ___lwdiv@counter 0007                   __size_of_fatfs_entry_is_dir 0024  
                                    _fl_fgetc 42C8                                      __ptext10 4206  
                                    __ptext11 4356                                      __ptext20 418A  
                                    __ptext12 43EE                                      __ptext21 40BC  
                                    __ptext13 B090                                      __ptext30 6960  
                                    __ptext22 4ED8                                      __ptext14 45DA  
                                    __ptext31 7E94                                      __ptext23 A288  
                                    __ptext15 4A58                                      __ptext40 D9DA  
                                    __ptext32 5F2E                                      __ptext24 7074  
                                    __ptext16 5B8E                                      __ptext41 408E  
                                    __ptext33 42C8                                      __ptext25 BC32  
                                    __ptext17 41C8                                      __ptext50 C092  
                                    __ptext42 4152                                      __ptext34 4E5E  
                                    __ptext26 84D6                                      __ptext18 3E3A  
                                    __ptext51 3E38                                      __ptext43 7212  
                                    __ptext35 4B9C                                      __ptext27 5ACA  
                                    __ptext19 468E                                      __ptext60 3E3C  
                                    __ptext52 6332                                      __ptext44 CA1A  
                                    __ptext36 4FD2                                      __ptext28 9668  
                                    __ptext61 50D8                                      __ptext53 5736  
                                    __ptext45 B80C                                      __ptext37 594A  
                                    __ptext29 E0BC                                      __ptext70 48C6  
                                    __ptext62 4060                                      __ptext54 C546  
                                    __ptext46 4632                                      __ptext38 7728  
                                    __ptext71 90CA                                      __ptext63 5274  
                                    __ptext55 4806                                      __ptext47 6D54  
                                    __ptext39 82AA                                      __ptext80 9F74  
                                    __ptext72 55EC                                      __ptext64 3F70  
                                    __ptext56 3E36                                      __ptext48 9C6A  
                                    __ptext81 B44A                                      __ptext73 4586  
                                    __ptext65 D486                                      __ptext57 3E44  
                                    __ptext49 3F94                                      __ptext90 3F0C  
                                    __ptext82 5C58                                      __ptext74 8956  
                                    __ptext66 5E3A                                      __ptext58 7562  
                                    __ptext91 936A                                      __ptext83 8E2E  
                                    __ptext75 6BFC                                      __ptext67 622A  
                                    __ptext59 400A                                      __ptext92 4748  
                                    __ptext84 8092                                      __ptext76 73B8  
                                    __ptext68 5892                                      __ptext93 A5AA  
                                    __ptext85 4286                                      __ptext77 ACE2  
                                    __ptext69 5D48                                      __ptext94 7C98  
                                    __ptext86 5420                                      __ptext78 6AAA  
                                    __ptext95 A93C                                      __ptext87 6818  
                                    __ptext79 9966                                      __ptext96 8702  
                                    __ptext88 659A                                      __ptext97 6126  
                                    __ptext89 7ABC                                      __ptext98 78F0  
                                    _fl_fread CA1A                                      __ptext99 645C  
                                    _fl_fseek 7212                                      _fl_fopen 6D54  
                                    _fl_ftell 408E                       ??_fatfs_fat_set_cluster 0050  
                                 ??_Write_str 0008                           ??_fatfs_sector_read 002B  
                                    _config_1 01F6                         ??_fatfs_lfn_cache_get 0003  
                __open_directory@startcluster 00CC                  fatfs_update_file_length@item 00C0  
                            __size_of_strncmp 0074                              __size_of_strncpy 0058  
                         ??__create_directory 00F4         __end_offat_list@fat_list_insert_after 51EA  
      __size_offat_list@fat_list_insert_after 008A                 fat_list@fat_list_insert_after 5160  
                             fl_readdir@dirls 00BA                               fl_readdir@entry 00BC  
       __end_offat_list@fat_list_insert_first 4DE4        __size_offat_list@fat_list_insert_first 0078  
               fat_list@fat_list_insert_first 4D6C              __size_of_fatfs_mark_file_deleted 01C8  
                               __size_of_main 0140                                      _mmc_init 5A0A  
            fatfs_allocate_free_space@newFile 00A0                  __end_of_fatfs_get_file_entry 9668  
                                    _readdata 01AB                    fatfs_init@root_dir_sectors 003D  
                               fl_fflush@file 00DC                                    strncmp@len 0005  
             __end_of_fatfs_calc_cluster_size 6AAA                  fatfs_get_sfn_display_name@in 0003  
                               fl_fread@count 010E              ??_fatfs_fat_add_cluster_to_chain 0080  
             ?_fatfs_fat_add_cluster_to_chain 0080                                 fatfs_itoa@num 000E  
                   __check_file_open@openFile 0027                    ?fat_list@fat_list_pop_head 0007  
                            fatfs_format@name 005F                                      fl_feof@f 0001  
                        Check_extension@F4792 01ED                          Check_extension@F4794 01F1  
                ??_fatfs_find_free_dir_offset 00B8        fat_list@fat_list_insert_after@new_node 0005  
                                    fl_init@i 0015                                      _spi_init 3ED2  
                                    _spi_read 3E5E                     ??_FileString_StrCmpNoCase 000D  
                                 ??_fl_fclose 0080                                   ??_fl_fflush 00D6  
                   __end_of_fatfs_sector_read 468E                         ?_fatfs_entry_lfn_text 0001  
                                 ??_fl_format 006B                    fatfs_fat_writeback@sectors 002C  
                    fatfs_lfn_cache_entry@lfn 0001                                   ??_fl_fwrite 00E7  
                                   printf@idx 0017                   fatfs_fat_read_sector@sector 0036  
                                 ??_fl_remove 0080                 __open_directory@currentfolder 00C0  
                   _fatfs_add_file_entry$3211 0102                     __end_of__create_directory D9DA  
                     __end_of__open_directory 6960        fatfs_find_free_dir_offset@recordoffset 00C5  
               ?_fatfs_cache_get_next_cluster 0001                 fatfs_fat_set_cluster@position 005C  
                       ?_fatfs_entry_sfn_only 0001                              fatfs_itoa@digits 0018  
                                   putch@byte 0003                         __cluster_size_table32 0228  
                       __cluster_size_table16 0200                          Check_extension@str_1 000C  
                 fatfs_sfn_create_entry@entry 000B                               ??_Create_folder 0080  
                    fatfs_write_sector@sector 0026                      fatfs_write_sector@target 002A  
                              OpenUSART@spbrg 0001                                      memcpy@d1 0001  
                                    memcpy@s1 0003                    fatfs_get_substring@copypnt 001B  
              fatfs_lfn_generate_tail@tailNum 003B                              fatfs_itoa@outbuf 0029  
                               fl_fopen@flags 0182                    fatfs_get_substring@max_len 000D  
                        _fatfs_lba_of_cluster 7C98                                  fl_fgetc@data 00FA  
                                    memset@p1 0001             __size_of_fatfs_find_blank_cluster 03C2  
                  fatfs_get_substring@pathlen 0016                             ??_fatfs_fat_purge 0036  
                         _fatfs_entry_is_file 3F94                     ?_fatfs_find_blank_cluster 0046  
                              Format_string@c 0005                       fatfs_sfn_exists@Cluster 00AE  
      fatfs_cache_get_next_cluster@clusterIdx 0005            fatfs_find_next_cluster@nextcluster 007A  
                        __end_of__create_file C546           fatfs_find_blank_cluster@nextcluster 0080  
                           ?_fatfs_sfn_exists 00AC                              ___lwmod@dividend 0008  
                            ___lldiv@dividend 0001                             ??_fatfs_erase_fat 0024  
                     ??fat_list@fat_list_init 0003                   ?_fatfs_find_free_dir_offset 00AC  
                  __end_of_fl_createdirectory 408E             fat_list@fat_list_insert_last@node 000D  
           fat_list@fat_list_insert_last@list 000B                            ??_fatfs_sfn_exists 00B4  
                      fatfs_format_fat32@name 0042                        fatfs_format_fat16@name 0042  
                                   strncmp@s1 0001                                     strncmp@s2 0003  
                   fatfs_sfn_create_entry@dir 000D                                  fatfs_init@fs 001F  
                               ?_fatfs_format 0059                                 fl_format@name 0069  
                                fl_fread@file 0112                                  fatfs_itoa@cp 0035  
                                   strncpy@cp 0007                                     strncpy@to 0001  
                       __read_sectors@Cluster 00A5          fatfs_list_directory_next@dotRequired 010F  
   fatfs_find_blank_cluster@fat_sector_offset 0084                                  fl_fread@size 00E0  
         fatfs_create_boot_sector@vol_sectors 0026                       __size_of__write_sectors 04D4  
                 FileString_StrCmpNoCase@diff 000F                            fatfs_sfn_exists@fs 00AC  
                        ?_fatfs_entry_is_file 0001                      fatfs_get_file_entry@item 0115  
                                    printf@ap 0019                      _fatfs_free_cluster_chain 55EC  
                     fl_listdirectory@dirstat 014F                                  fl_fseek@file 0029  
        fatfs_allocate_free_space@clusterSize 00B0                ??_fatfs_cache_set_next_cluster 000D  
            __size_of_fatfs_find_next_cluster 03A6                                   fl_feof@file 000D  
  fatfs_fat_add_cluster_to_chain@last_cluster 008A       fatfs_find_blank_cluster@current_cluster 0088  
                                fl_fopen@file 0180                              ??_fatfs_fat_init 000B  
                                fl_fopen@mode 00FE                                  fl_fopen@path 00FC  
                                 ??_putsUSART 0004                       ?_fatfs_get_root_cluster 0001  
                                 fl_fgetc@res 00F8         fatfs_allocate_free_space@startCluster 00A2  
               fatfs_total_path_levels@levels 0005                          fatfs_get_substring@i 0014  
            __size_of_fatfs_total_path_levels 013E                  ??_fatfs_get_sfn_display_name 0005  
                fatfs_add_free_space@clusters 0078                              __check_file_open 554E  
                   fatfs_find_next_cluster@fs 0046                              _fl_listdirectory 57E0  
                                    strcmp@s1 0001                                      strcmp@t0 0007  
                                    strcmp@s2 0003                                      strcmp@t1 0009  
                                    strcmp@t2 0008                              ___lldiv@quotient 0009  
                             ___lwmod@divisor 000A                                   fl_fgetpos@f 0001  
                                    strlen@cp 0005                               ___lwmod@counter 000C  
                               fl_readdir@res 00BE                                  ?_fl_closedir 0001  
                           ??_fl_attach_media 0059              __size_offat_list@fat_list_remove 00AA  
            fatfs_create_boot_sector@is_fat32 002C                         ?_fatfs_lba_of_cluster 0001  
                           ?_fatfs_split_path 001D                                   fatfs_itoa@s 0012  
                               ??_File_delete 0080              __size_of_FileString_GetExtension 0052  
                               ??_File_append 0183                             fatfs_sfn_exists@x 00B6  
              fatfs_lfn_create_sfn@sfn_output 0009                                   _SSPCON1bits 000FC6  
                     fatfs_get_file_entry@lfn 0119                        fl_listdirectory@dirent 0158  
                               ??_File_format 0071               __size_of_fatfs_sfn_create_entry 0152  
                                 fl_fseek@res 0027             fatfs_lfn_generate_tail@tail_chars 004D  
                          ??_fatfs_split_path 0027                fatfs_cache_get_next_cluster@fs 0001  
           fatfs_update_file_length@shortname 00B2                fatfs_cache_set_next_cluster@fs 0001  
                               ??_ConfigUSART 0008                            fl_attach_media@res 0059  
                                 fl_ftell@pos 000B                          fatfs_format_fat32@fs 003C  
                        fatfs_format_fat16@fs 003C      fatfs_find_free_dir_offset@directoryEntry 00BC  
                       _fatfs_lfn_cache_entry CF38              __end_of_fatfs_create_boot_sector EC5C  
                  __write_sectors@LastCluster 00BC       fat_list@fat_list_insert_before@new_node 0005  
                           fl_attach_media@rd 0055                             fl_attach_media@wr 0057  
            ??fat_list@fat_list_insert_before 0007               ?fat_list@fat_list_insert_before 0001  
                              ??_fatfs_format 0061           __size_of_fatfs_lfn_entries_required 0042  
                                _USART_Status 01A5                        __size_of_Format_string 0084  
                    ?_fatfs_entry_lfn_invalid 0001                ?fat_list@fat_list_insert_after 0001  
              ?fat_list@fat_list_insert_first 0007             fatfs_lfn_generate_tail@sfn_output 0037  
                                ?_fl_shutdown 0001                                 fl_fwrite@data 00DE  
                               fl_fwrite@file 011B                         ??_fatfs_entry_is_file 0003  
