Version 3.2 HI-TECH Software Intermediate Code
"40 pff.h
[s S1 `uc 1 `uc 1 `uc 1 `uc 1 `us 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 `ul 1 ]
[n S1 . fs_type flag csize pad1 n_rootdir n_fatent fatbase dirbase database fptr fsize org_clust curr_clust dsect ]
"368 pff.c
[c E73 0 1 2 3 .. ]
[n E73 . RES_OK RES_ERROR RES_NOTRDY RES_PARERR  ]
"31 diskio.h
[v _disk_readp `(E73 ~T0 @X0 0 ef4`*uc`ul`ui`ui ]
"61 pff.h
[s S2 `us 1 `*uc 1 `ul 1 `ul 1 `ul 1 ]
[n S2 . index fn sclust clust sect ]
"440 pff.c
[c E43 0 1 2 3 4 5 6 .. ]
[n E43 . FR_OK FR_DISK_ERR FR_NOT_READY FR_NO_FILE FR_NOT_OPENED FR_NOT_ENABLED FR_NO_FILESYSTEM  ]
"73 pff.h
[s S3 `ul 1 `us 1 `us 1 `uc 1 `uc -> 13 `i ]
[n S3 . fsize fdate ftime fattrib fname ]
"30 diskio.h
[v _disk_initialize `(uc ~T0 @X0 0 ef ]
"32
[v _disk_writep `(E73 ~T0 @X0 0 ef2`*Cuc`ul ]
[; ;integer.h: 16: typedef int INT;
[; ;integer.h: 17: typedef unsigned int UINT;
[; ;integer.h: 20: typedef char CHAR;
[; ;integer.h: 21: typedef unsigned char UCHAR;
[; ;integer.h: 22: typedef unsigned char BYTE;
[; ;integer.h: 25: typedef short SHORT;
[; ;integer.h: 26: typedef unsigned short USHORT;
[; ;integer.h: 27: typedef unsigned short WORD;
[; ;integer.h: 28: typedef unsigned short WCHAR;
[; ;integer.h: 31: typedef long LONG;
[; ;integer.h: 32: typedef unsigned long ULONG;
[; ;integer.h: 33: typedef unsigned long DWORD;
[; ;pff.h: 40: typedef struct {
[; ;pff.h: 41: BYTE fs_type;
[; ;pff.h: 42: BYTE flag;
[; ;pff.h: 43: BYTE csize;
[; ;pff.h: 44: BYTE pad1;
[; ;pff.h: 45: WORD n_rootdir;
[; ;pff.h: 46: DWORD n_fatent;
[; ;pff.h: 47: DWORD fatbase;
[; ;pff.h: 48: DWORD dirbase;
[; ;pff.h: 49: DWORD database;
[; ;pff.h: 50: DWORD fptr;
[; ;pff.h: 51: DWORD fsize;
[; ;pff.h: 52: DWORD org_clust;
[; ;pff.h: 53: DWORD curr_clust;
[; ;pff.h: 54: DWORD dsect;
[; ;pff.h: 55: } FATFS;
[; ;pff.h: 61: typedef struct {
[; ;pff.h: 62: WORD index;
[; ;pff.h: 63: BYTE* fn;
[; ;pff.h: 64: DWORD sclust;
[; ;pff.h: 65: DWORD clust;
[; ;pff.h: 66: DWORD sect;
[; ;pff.h: 67: } DIR;
[; ;pff.h: 73: typedef struct {
[; ;pff.h: 74: DWORD fsize;
[; ;pff.h: 75: WORD fdate;
[; ;pff.h: 76: WORD ftime;
[; ;pff.h: 77: BYTE fattrib;
[; ;pff.h: 78: char fname[13];
[; ;pff.h: 79: } FILINFO;
[; ;pff.h: 85: typedef enum {
[; ;pff.h: 86: FR_OK = 0,
[; ;pff.h: 87: FR_DISK_ERR,
[; ;pff.h: 88: FR_NOT_READY,
[; ;pff.h: 89: FR_NO_FILE,
[; ;pff.h: 90: FR_NOT_OPENED,
[; ;pff.h: 91: FR_NOT_ENABLED,
[; ;pff.h: 92: FR_NO_FILESYSTEM
[; ;pff.h: 93: } FRESULT;
[; ;pff.h: 100: FRESULT pf_mount (FATFS* fs);
[; ;pff.h: 101: FRESULT pf_open (const char* path);
[; ;pff.h: 102: FRESULT pf_read (void* buff, UINT btr, UINT* br);
[; ;pff.h: 103: FRESULT pf_write (const void* buff, UINT btw, UINT* bw);
[; ;pff.h: 104: FRESULT pf_lseek (DWORD ofs);
[; ;pff.h: 105: FRESULT pf_opendir (DIR* dj, const char* path);
[; ;pff.h: 106: FRESULT pf_readdir (DIR* dj, FILINFO* fno);
[; ;diskio.h: 16: typedef BYTE DSTATUS;
[; ;diskio.h: 19: typedef enum {
[; ;diskio.h: 20: RES_OK = 0,
[; ;diskio.h: 21: RES_ERROR,
[; ;diskio.h: 22: RES_NOTRDY,
[; ;diskio.h: 23: RES_PARERR
[; ;diskio.h: 24: } DRESULT;
[; ;diskio.h: 30: DSTATUS disk_initialize (void);
[; ;diskio.h: 31: DRESULT disk_readp (BYTE* buff, DWORD sector, UINT offset, UINT count);
[; ;diskio.h: 32: DRESULT disk_writep (const BYTE* buff, DWORD sc);
[; ;pff.c: 321: extern void proceed();
"324 pff.c
[v _FatFs `*S1 ~T0 @X0 1 s ]
[; ;pff.c: 323: static
[; ;pff.c: 324: FATFS *FatFs;
"329
[v _mem_set `(v ~T0 @X0 1 sf3`*v`i`i ]
{
[; ;pff.c: 328: static
[; ;pff.c: 329: void mem_set (void* dst, int val, int cnt) {
[e :U _mem_set ]
[v _dst `*v ~T0 @X0 1 r1 ]
[v _val `i ~T0 @X0 1 r2 ]
[v _cnt `i ~T0 @X0 1 r3 ]
[f ]
"330
[v _d `*uc ~T0 @X0 1 a ]
[; ;pff.c: 330: char *d = (char*)dst;
[e = _d -> _dst `*uc ]
[; ;pff.c: 331: while (cnt--) *d++ = (char)val;
"331
[e $U 5  ]
[e :U 6 ]
[e = *U ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x -> _val `uc ]
[e :U 5 ]
[e $ != -- _cnt -> 1 `i -> 0 `i 6  ]
[e :U 7 ]
[; ;pff.c: 332: }
"332
[e :UE 4 ]
}
"336
[v _mem_cmp `(i ~T0 @X0 1 sf3`*Cv`*Cv`i ]
{
[; ;pff.c: 335: static
[; ;pff.c: 336: int mem_cmp (const void* dst, const void* src, int cnt) {
[e :U _mem_cmp ]
[v _dst `*Cv ~T0 @X0 1 r1 ]
[v _src `*Cv ~T0 @X0 1 r2 ]
[v _cnt `i ~T0 @X0 1 r3 ]
[f ]
"337
[v _d `*Cuc ~T0 @X0 1 a ]
[; ;pff.c: 337: const char *d = (const char *)dst, *s = (const char *)src;
[e = _d -> _dst `*Cuc ]
[v _s `*Cuc ~T0 @X0 1 a ]
[e = _s -> _src `*Cuc ]
"338
[v _r `i ~T0 @X0 1 a ]
[; ;pff.c: 338: int r = 0;
[e = _r -> 0 `i ]
[; ;pff.c: 339: while (cnt-- && (r = *d++ - *s++) == 0) ;
"339
[e $U 9  ]
[e :U 10 ]
[e :U 9 ]
[e $ && != -- _cnt -> 1 `i -> 0 `i == = _r - -> *U ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x `i -> *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x `i -> 0 `i 10  ]
[e :U 11 ]
[; ;pff.c: 340: return r;
"340
[e ) _r ]
[e $UE 8  ]
[; ;pff.c: 341: }
"341
[e :UE 8 ]
}
"350
[v _get_fat `(ul ~T0 @X0 1 sf1`ul ]
"353
{
[; ;pff.c: 349: static
[; ;pff.c: 350: DWORD get_fat (
[; ;pff.c: 351: DWORD clst
[; ;pff.c: 352: )
[; ;pff.c: 353: {
[e :U _get_fat ]
"351
[v _clst `ul ~T0 @X0 1 r1 ]
"353
[f ]
"354
[v _buf `uc ~T0 @X0 -> 4 `i a ]
"355
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 354: BYTE buf[4];
[; ;pff.c: 355: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 357: if (clst < 2 || clst >= fs->n_fatent)
"357
[e $ ! || < _clst -> -> -> 2 `i `l `ul >= _clst . *U _fs 5 13  ]
[; ;pff.c: 358: return 1;
"358
[e ) -> -> -> 1 `i `l `ul ]
[e $UE 12  ]
[e :U 13 ]
[; ;pff.c: 360: switch (fs->fs_type) {
"360
[e $U 15  ]
{
[; ;pff.c: 362: case 1 : {
"362
[e :U 16 ]
{
"363
[v _wc `ui ~T0 @X0 1 a ]
[v _bc `ui ~T0 @X0 1 a ]
[v _ofs `ui ~T0 @X0 1 a ]
[; ;pff.c: 363: UINT wc, bc, ofs;
[; ;pff.c: 365: bc = (UINT)clst; bc += bc / 2;
"365
[e = _bc -> _clst `ui ]
[e =+ _bc / _bc -> -> 2 `i `ui ]
[; ;pff.c: 366: ofs = bc % 512; bc /= 512;
"366
[e = _ofs % _bc -> -> 512 `i `ui ]
[e =/ _bc -> -> 512 `us `ui ]
[; ;pff.c: 367: if (ofs != 511) {
"367
[e $ ! != _ofs -> -> 511 `i `ui 17  ]
{
[; ;pff.c: 368: if (disk_readp(buf, fs->fatbase + bc, ofs, 2)) break;
"368
[e $ ! != -> ( _disk_readp (4 , , , &U _buf + . *U _fs 6 -> _bc `ul _ofs -> -> 2 `i `ui `i -> -> -> 0 `i `E73 `i 18  ]
[e $U 14  ]
[e :U 18 ]
"369
}
[; ;pff.c: 369: } else {
[e $U 19  ]
[e :U 17 ]
{
[; ;pff.c: 370: if (disk_readp(buf, fs->fatbase + bc, 511, 1)) break;
"370
[e $ ! != -> ( _disk_readp (4 , , , &U _buf + . *U _fs 6 -> _bc `ul -> -> 511 `i `ui -> -> 1 `i `ui `i -> -> -> 0 `i `E73 `i 20  ]
[e $U 14  ]
[e :U 20 ]
[; ;pff.c: 371: if (disk_readp(buf+1, fs->fatbase + bc + 1, 0, 1)) break;
"371
[e $ ! != -> ( _disk_readp (4 , , , + &U _buf * -> -> 1 `i `x -> -> # *U &U _buf `i `x + + . *U _fs 6 -> _bc `ul -> -> -> 1 `i `l `ul -> -> 0 `i `ui -> -> 1 `i `ui `i -> -> -> 0 `i `E73 `i 21  ]
[e $U 14  ]
[e :U 21 ]
"372
}
[e :U 19 ]
[; ;pff.c: 372: }
[; ;pff.c: 373: wc = (WORD)(((WORD)*((BYTE*)(buf)+1)<<8)|(WORD)*(BYTE*)(buf));
"373
[e = _wc -> -> | << -> -> *U + &U _buf * -> -> 1 `i `x -> -> # *U &U _buf `i `x `us `ui -> 8 `i -> -> *U &U _buf `us `ui `us `ui ]
[; ;pff.c: 374: return (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
"374
[e ) -> ? != & _clst -> -> -> 1 `i `l `ul -> -> 0 `i `ul : >> _wc -> 4 `i & _wc -> -> 4095 `i `ui `ul ]
[e $UE 12  ]
"375
}
[; ;pff.c: 375: }
[; ;pff.c: 378: case 2 :
"378
[e :U 22 ]
[; ;pff.c: 379: if (disk_readp(buf, fs->fatbase + clst / 256, ((UINT)clst % 256) * 2, 2)) break;
"379
[e $ ! != -> ( _disk_readp (4 , , , &U _buf + . *U _fs 6 / _clst -> -> -> 256 `i `l `ul * % -> _clst `ui -> -> 256 `i `ui -> -> 2 `i `ui -> -> 2 `i `ui `i -> -> -> 0 `i `E73 `i 23  ]
[e $U 14  ]
[e :U 23 ]
[; ;pff.c: 380: return (WORD)(((WORD)*((BYTE*)(buf)+1)<<8)|(WORD)*(BYTE*)(buf));
"380
[e ) -> -> | << -> -> *U + &U _buf * -> -> 1 `i `x -> -> # *U &U _buf `i `x `us `ui -> 8 `i -> -> *U &U _buf `us `ui `us `ul ]
[e $UE 12  ]
[; ;pff.c: 383: case 3 :
"383
[e :U 24 ]
[; ;pff.c: 384: if (disk_readp(buf, fs->fatbase + clst / 128, ((UINT)clst % 128) * 4, 4)) break;
"384
[e $ ! != -> ( _disk_readp (4 , , , &U _buf + . *U _fs 6 / _clst -> -> -> 128 `i `l `ul * % -> _clst `ui -> -> 128 `i `ui -> -> 4 `i `ui -> -> 4 `i `ui `i -> -> -> 0 `i `E73 `i 25  ]
[e $U 14  ]
[e :U 25 ]
[; ;pff.c: 385: return (DWORD)(((DWORD)*((BYTE*)(buf)+3)<<24)|((DWORD)*((BYTE*)(buf)+2)<<16)|((WORD)*((BYTE*)(buf)+1)<<8)|*(BYTE*)(buf)) & 0x0FFFFFFF;
"385
[e ) & | | | << -> *U + &U _buf * -> -> 3 `i `x -> -> # *U &U _buf `i `x `ul -> 24 `i << -> *U + &U _buf * -> -> 2 `i `x -> -> # *U &U _buf `i `x `ul -> 16 `i -> << -> -> *U + &U _buf * -> -> 1 `i `x -> -> # *U &U _buf `i `x `us `ui -> 8 `i `ul -> *U &U _buf `ul -> -> 268435455 `l `ul ]
[e $UE 12  ]
"387
}
[; ;pff.c: 387: }
[e $U 14  ]
"360
[e :U 15 ]
[e [\ . *U _fs 0 , $ -> -> 1 `i `uc 16
 , $ -> -> 2 `i `uc 22
 , $ -> -> 3 `i `uc 24
 14 ]
"387
[e :U 14 ]
[; ;pff.c: 389: return 1;
"389
[e ) -> -> -> 1 `i `l `ul ]
[e $UE 12  ]
[; ;pff.c: 390: }
"390
[e :UE 12 ]
}
"400
[v _clust2sect `(ul ~T0 @X0 1 sf1`ul ]
"403
{
[; ;pff.c: 399: static
[; ;pff.c: 400: DWORD clust2sect (
[; ;pff.c: 401: DWORD clst
[; ;pff.c: 402: )
[; ;pff.c: 403: {
[e :U _clust2sect ]
"401
[v _clst `ul ~T0 @X0 1 r1 ]
"403
[f ]
"404
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 404: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 407: clst -= 2;
"407
[e =- _clst -> -> -> 2 `i `l `ul ]
[; ;pff.c: 408: if (clst >= (fs->n_fatent - 2)) return 0;
"408
[e $ ! >= _clst - . *U _fs 5 -> -> -> 2 `i `l `ul 27  ]
[e ) -> -> -> 0 `i `l `ul ]
[e $UE 26  ]
[e :U 27 ]
[; ;pff.c: 409: return (DWORD)clst * fs->csize + fs->database;
"409
[e ) + * _clst -> . *U _fs 2 `ul . *U _fs 8 ]
[e $UE 26  ]
[; ;pff.c: 410: }
"410
[e :UE 26 ]
}
"414
[v _get_clust `(ul ~T0 @X0 1 sf1`*uc ]
"417
{
[; ;pff.c: 413: static
[; ;pff.c: 414: DWORD get_clust (
[; ;pff.c: 415: BYTE* dir
[; ;pff.c: 416: )
[; ;pff.c: 417: {
[e :U _get_clust ]
"415
[v _dir `*uc ~T0 @X0 1 r1 ]
"417
[f ]
"418
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 418: FATFS *fs = FatFs;
[e = _fs _FatFs ]
"419
[v _clst `ul ~T0 @X0 1 a ]
[; ;pff.c: 419: DWORD clst = 0;
[e = _clst -> -> -> 0 `i `l `ul ]
[; ;pff.c: 422: if (0 || (1 && fs->fs_type == 3)) {
"422
[e $ ! || != -> 0 `i -> 0 `i && != -> 1 `i -> 0 `i == -> . *U _fs 0 `i -> 3 `i 29  ]
{
[; ;pff.c: 423: clst = (WORD)(((WORD)*((BYTE*)(dir+20)+1)<<8)|(WORD)*(BYTE*)(dir+20));
"423
[e = _clst -> -> | << -> -> *U + + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `i `x `us `ui -> 8 `i -> -> *U + _dir * -> -> 20 `i `x -> -> # *U _dir `i `x `us `ui `us `ul ]
[; ;pff.c: 424: clst <<= 16;
"424
[e =<< _clst -> 16 `i ]
"425
}
[e :U 29 ]
[; ;pff.c: 425: }
[; ;pff.c: 426: clst |= (WORD)(((WORD)*((BYTE*)(dir+26)+1)<<8)|(WORD)*(BYTE*)(dir+26));
"426
[e =| _clst -> -> | << -> -> *U + + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `i `x `us `ui -> 8 `i -> -> *U + _dir * -> -> 26 `i `x -> -> # *U _dir `i `x `us `ui `us `ul ]
[; ;pff.c: 428: return clst;
"428
[e ) _clst ]
[e $UE 28  ]
[; ;pff.c: 429: }
"429
[e :UE 28 ]
}
"437
[v _dir_rewind `(E43 ~T0 @X0 1 sf1`*S2 ]
"440
{
[; ;pff.c: 436: static
[; ;pff.c: 437: FRESULT dir_rewind (
[; ;pff.c: 438: DIR *dj
[; ;pff.c: 439: )
[; ;pff.c: 440: {
[e :U _dir_rewind ]
"438
[v _dj `*S2 ~T0 @X0 1 r1 ]
"440
[f ]
"441
[v _clst `ul ~T0 @X0 1 a ]
"442
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 441: DWORD clst;
[; ;pff.c: 442: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 445: dj->index = 0;
"445
[e = . *U _dj 0 -> -> 0 `i `us ]
[; ;pff.c: 446: clst = dj->sclust;
"446
[e = _clst . *U _dj 2 ]
[; ;pff.c: 447: if (clst == 1 || clst >= fs->n_fatent)
"447
[e $ ! || == _clst -> -> -> 1 `i `l `ul >= _clst . *U _fs 5 31  ]
[; ;pff.c: 448: return FR_DISK_ERR;
"448
[e ) -> . `E43 1 `E43 ]
[e $UE 30  ]
[e :U 31 ]
[; ;pff.c: 449: if (1 && !clst && (0 || fs->fs_type == 3))
"449
[e $ ! && && != -> 1 `i -> 0 `i ! != _clst -> -> 0 `i `ul || != -> 0 `i -> 0 `i == -> . *U _fs 0 `i -> 3 `i 32  ]
[; ;pff.c: 450: clst = (DWORD)fs->dirbase;
"450
[e = _clst . *U _fs 7 ]
[e :U 32 ]
[; ;pff.c: 451: dj->clust = clst;
"451
[e = . *U _dj 3 _clst ]
[; ;pff.c: 452: dj->sect = (0 || clst) ? clust2sect(clst) : fs->dirbase;
"452
[e = . *U _dj 4 ? || != -> 0 `i -> 0 `i != _clst -> -> 0 `i `ul : ( _clust2sect (1 _clst . *U _fs 7 ]
[; ;pff.c: 454: return FR_OK;
"454
[e ) -> . `E43 0 `E43 ]
[e $UE 30  ]
[; ;pff.c: 455: }
"455
[e :UE 30 ]
}
"465
[v _dir_next `(E43 ~T0 @X0 1 sf1`*S2 ]
"468
{
[; ;pff.c: 464: static
[; ;pff.c: 465: FRESULT dir_next (
[; ;pff.c: 466: DIR *dj
[; ;pff.c: 467: )
[; ;pff.c: 468: {
[e :U _dir_next ]
"466
[v _dj `*S2 ~T0 @X0 1 r1 ]
"468
[f ]
"469
[v _clst `ul ~T0 @X0 1 a ]
"470
[v _i `us ~T0 @X0 1 a ]
"471
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 469: DWORD clst;
[; ;pff.c: 470: WORD i;
[; ;pff.c: 471: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 474: i = dj->index + 1;
"474
[e = _i -> + -> . *U _dj 0 `ui -> -> 1 `i `ui `us ]
[; ;pff.c: 475: if (!i || !dj->sect)
"475
[e $ ! || ! != -> _i `ui -> -> -> 0 `i `us `ui ! != . *U _dj 4 -> -> 0 `i `ul 34  ]
[; ;pff.c: 476: return FR_NO_FILE;
"476
[e ) -> . `E43 3 `E43 ]
[e $UE 33  ]
[e :U 34 ]
[; ;pff.c: 478: if (!(i % 16)) {
"478
[e $ ! ! != % -> _i `ui -> -> 16 `i `ui -> -> 0 `i `ui 35  ]
{
[; ;pff.c: 479: dj->sect++;
"479
[e ++ . *U _dj 4 -> -> -> 1 `i `l `ul ]
[; ;pff.c: 481: if (dj->clust == 0) {
"481
[e $ ! == . *U _dj 3 -> -> -> 0 `i `l `ul 36  ]
{
[; ;pff.c: 482: if (i >= fs->n_rootdir)
"482
[e $ ! >= -> _i `ui -> . *U _fs 4 `ui 37  ]
[; ;pff.c: 483: return FR_NO_FILE;
"483
[e ) -> . `E43 3 `E43 ]
[e $UE 33  ]
[e :U 37 ]
"484
}
[; ;pff.c: 484: }
[e $U 38  ]
"485
[e :U 36 ]
[; ;pff.c: 485: else {
{
[; ;pff.c: 486: if (((i / 16) & (fs->csize - 1)) == 0) {
"486
[e $ ! == & / -> _i `ui -> -> 16 `i `ui -> - -> . *U _fs 2 `i -> 1 `i `ui -> -> 0 `i `ui 39  ]
{
[; ;pff.c: 487: clst = get_fat(dj->clust);
"487
[e = _clst ( _get_fat (1 . *U _dj 3 ]
[; ;pff.c: 488: if (clst <= 1) return FR_DISK_ERR;
"488
[e $ ! <= _clst -> -> -> 1 `i `l `ul 40  ]
[e ) -> . `E43 1 `E43 ]
[e $UE 33  ]
[e :U 40 ]
[; ;pff.c: 489: if (clst >= fs->n_fatent)
"489
[e $ ! >= _clst . *U _fs 5 41  ]
[; ;pff.c: 490: return FR_NO_FILE;
"490
[e ) -> . `E43 3 `E43 ]
[e $UE 33  ]
[e :U 41 ]
[; ;pff.c: 491: dj->clust = clst;
"491
[e = . *U _dj 3 _clst ]
[; ;pff.c: 492: dj->sect = clust2sect(clst);
"492
[e = . *U _dj 4 ( _clust2sect (1 _clst ]
"493
}
[e :U 39 ]
"494
}
[e :U 38 ]
"495
}
[e :U 35 ]
[; ;pff.c: 493: }
[; ;pff.c: 494: }
[; ;pff.c: 495: }
[; ;pff.c: 497: dj->index = i;
"497
[e = . *U _dj 0 _i ]
[; ;pff.c: 499: return FR_OK;
"499
[e ) -> . `E43 0 `E43 ]
[e $UE 33  ]
[; ;pff.c: 500: }
"500
[e :UE 33 ]
}
"510
[v _dir_find `(E43 ~T0 @X0 1 sf2`*S2`*uc ]
"514
{
[; ;pff.c: 509: static
[; ;pff.c: 510: FRESULT dir_find (
[; ;pff.c: 511: DIR *dj,
[; ;pff.c: 512: BYTE *dir
[; ;pff.c: 513: )
[; ;pff.c: 514: {
[e :U _dir_find ]
"511
[v _dj `*S2 ~T0 @X0 1 r1 ]
"512
[v _dir `*uc ~T0 @X0 1 r2 ]
"514
[f ]
"515
[v _res `E43 ~T0 @X0 1 a ]
"516
[v _c `uc ~T0 @X0 1 a ]
[; ;pff.c: 515: FRESULT res;
[; ;pff.c: 516: BYTE c;
[; ;pff.c: 519: res = dir_rewind(dj);
"519
[e = _res ( _dir_rewind (1 _dj ]
[; ;pff.c: 520: if (res != FR_OK) return res;
"520
[e $ ! != -> _res `i -> . `E43 0 `i 43  ]
[e ) _res ]
[e $UE 42  ]
[e :U 43 ]
[; ;pff.c: 522: do {
"522
[e :U 46 ]
{
[; ;pff.c: 523: res = disk_readp(dir, dj->sect, (dj->index % 16) * 32, 32)
[; ;pff.c: 524: ? FR_DISK_ERR : FR_OK;
"524
[e = _res -> ? != -> ( _disk_readp (4 , , , _dir . *U _dj 4 * % -> . *U _dj 0 `ui -> -> 16 `i `ui -> -> 32 `i `ui -> -> 32 `i `ui `i -> -> -> 0 `i `E73 `i : -> . `E43 1 `i -> . `E43 0 `i `E43 ]
[; ;pff.c: 525: if (res != FR_OK) break;
"525
[e $ ! != -> _res `i -> . `E43 0 `i 47  ]
[e $U 45  ]
[e :U 47 ]
[; ;pff.c: 526: c = dir[0];
"526
[e = _c *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x ]
[; ;pff.c: 527: if (c == 0) { res = FR_NO_FILE; break; }
"527
[e $ ! == -> _c `i -> 0 `i 48  ]
{
[e = _res -> . `E43 3 `E43 ]
[e $U 45  ]
}
[e :U 48 ]
[; ;pff.c: 528: if (!(dir[11] & 0x08) && !mem_cmp(dir, dj->fn, 11))
"528
[e $ ! && ! != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 8 `i -> 0 `i ! != ( _mem_cmp (3 , , -> _dir `*Cv -> . *U _dj 1 `*Cv -> 11 `i -> 0 `i 49  ]
[; ;pff.c: 529: break;
"529
[e $U 45  ]
[e :U 49 ]
[; ;pff.c: 530: res = dir_next(dj);
"530
[e = _res ( _dir_next (1 _dj ]
"531
}
[; ;pff.c: 531: } while (res == FR_OK);
[e $ == -> _res `i -> . `E43 0 `i 46  ]
[e :U 45 ]
[; ;pff.c: 533: return res;
"533
[e ) _res ]
[e $UE 42  ]
[; ;pff.c: 534: }
"534
[e :UE 42 ]
}
"544
[v _dir_read `(E43 ~T0 @X0 1 sf2`*S2`*uc ]
"548
{
[; ;pff.c: 543: static
[; ;pff.c: 544: FRESULT dir_read (
[; ;pff.c: 545: DIR *dj,
[; ;pff.c: 546: BYTE *dir
[; ;pff.c: 547: )
[; ;pff.c: 548: {
[e :U _dir_read ]
"545
[v _dj `*S2 ~T0 @X0 1 r1 ]
"546
[v _dir `*uc ~T0 @X0 1 r2 ]
"548
[f ]
"549
[v _res `E43 ~T0 @X0 1 a ]
"550
[v _a `uc ~T0 @X0 1 a ]
[v _c `uc ~T0 @X0 1 a ]
[; ;pff.c: 549: FRESULT res;
[; ;pff.c: 550: BYTE a, c;
[; ;pff.c: 553: res = FR_NO_FILE;
"553
[e = _res -> . `E43 3 `E43 ]
[; ;pff.c: 554: while (dj->sect) {
"554
[e $U 51  ]
[e :U 52 ]
{
[; ;pff.c: 555: res = disk_readp(dir, dj->sect, (dj->index % 16) * 32, 32)
[; ;pff.c: 556: ? FR_DISK_ERR : FR_OK;
"556
[e = _res -> ? != -> ( _disk_readp (4 , , , _dir . *U _dj 4 * % -> . *U _dj 0 `ui -> -> 16 `i `ui -> -> 32 `i `ui -> -> 32 `i `ui `i -> -> -> 0 `i `E73 `i : -> . `E43 1 `i -> . `E43 0 `i `E43 ]
[; ;pff.c: 557: if (res != FR_OK) break;
"557
[e $ ! != -> _res `i -> . `E43 0 `i 54  ]
[e $U 53  ]
[e :U 54 ]
[; ;pff.c: 558: c = dir[0];
"558
[e = _c *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x ]
[; ;pff.c: 559: if (c == 0) { res = FR_NO_FILE; break; }
"559
[e $ ! == -> _c `i -> 0 `i 55  ]
{
[e = _res -> . `E43 3 `E43 ]
[e $U 53  ]
}
[e :U 55 ]
[; ;pff.c: 560: a = dir[11] & 0x3F;
"560
[e = _a -> & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 63 `i `uc ]
[; ;pff.c: 561: if (c != 0xE5 && c != '.' && !(a & 0x08))
"561
[e $ ! && && != -> _c `i -> 229 `i != -> _c `ui -> 46 `ui ! != & -> _a `i -> 8 `i -> 0 `i 56  ]
[; ;pff.c: 562: break;
"562
[e $U 53  ]
[e :U 56 ]
[; ;pff.c: 563: res = dir_next(dj);
"563
[e = _res ( _dir_next (1 _dj ]
[; ;pff.c: 564: if (res != FR_OK) break;
"564
[e $ ! != -> _res `i -> . `E43 0 `i 57  ]
[e $U 53  ]
[e :U 57 ]
"565
}
[e :U 51 ]
"554
[e $ != . *U _dj 4 -> -> 0 `i `ul 52  ]
[e :U 53 ]
[; ;pff.c: 565: }
[; ;pff.c: 567: if (res != FR_OK) dj->sect = 0;
"567
[e $ ! != -> _res `i -> . `E43 0 `i 58  ]
[e = . *U _dj 4 -> -> -> 0 `i `l `ul ]
[e :U 58 ]
[; ;pff.c: 569: return res;
"569
[e ) _res ]
[e $UE 50  ]
[; ;pff.c: 570: }
"570
[e :UE 50 ]
}
"581
[v _create_name `(E43 ~T0 @X0 1 sf2`*S2`**Cuc ]
"585
{
[; ;pff.c: 580: static
[; ;pff.c: 581: FRESULT create_name (
[; ;pff.c: 582: DIR *dj,
[; ;pff.c: 583: const char **path
[; ;pff.c: 584: )
[; ;pff.c: 585: {
[e :U _create_name ]
"582
[v _dj `*S2 ~T0 @X0 1 r1 ]
"583
[v _path `**Cuc ~T0 @X0 1 r2 ]
"585
[f ]
"586
[v _c `uc ~T0 @X0 1 a ]
[v _ni `uc ~T0 @X0 1 a ]
[v _si `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
[v _sfn `*uc ~T0 @X0 1 a ]
"587
[v _p `*Cuc ~T0 @X0 1 a ]
"590
[v F183 `Cuc ~T0 @X0 -> 0 `x s cvt ]
[i F183
:U ..
-> -> 128 `i `uc
-> -> 154 `i `uc
-> -> 144 `i `uc
-> -> 65 `i `uc
-> -> 142 `i `uc
-> -> 65 `i `uc
-> -> 143 `i `uc
-> -> 128 `i `uc
-> -> 69 `i `uc
-> -> 69 `i `uc
-> -> 69 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 73 `i `uc
-> -> 142 `i `uc
-> -> 143 `i `uc
-> -> 144 `i `uc
-> -> 146 `i `uc
-> -> 146 `i `uc
-> -> 79 `i `uc
-> -> 153 `i `uc
-> -> 79 `i `uc
-> -> 85 `i `uc
-> -> 85 `i `uc
-> -> 89 `i `uc
-> -> 153 `i `uc
-> -> 154 `i `uc
-> -> 155 `i `uc
-> -> 156 `i `uc
-> -> 157 `i `uc
-> -> 158 `i `uc
-> -> 159 `i `uc
-> -> 65 `i `uc
-> -> 73 `i `uc
-> -> 79 `i `uc
-> -> 85 `i `uc
-> -> 165 `i `uc
-> -> 165 `i `uc
-> -> 166 `i `uc
-> -> 167 `i `uc
-> -> 168 `i `uc
-> -> 169 `i `uc
-> -> 170 `i `uc
-> -> 171 `i `uc
-> -> 172 `i `uc
-> -> 33 `i `uc
-> -> 174 `i `uc
-> -> 175 `i `uc
-> -> 176 `i `uc
-> -> 177 `i `uc
-> -> 178 `i `uc
-> -> 179 `i `uc
-> -> 180 `i `uc
-> -> 181 `i `uc
-> -> 182 `i `uc
-> -> 183 `i `uc
-> -> 184 `i `uc
-> -> 185 `i `uc
-> -> 186 `i `uc
-> -> 187 `i `uc
-> -> 188 `i `uc
-> -> 189 `i `uc
-> -> 190 `i `uc
-> -> 191 `i `uc
-> -> 192 `i `uc
-> -> 193 `i `uc
-> -> 194 `i `uc
-> -> 195 `i `uc
-> -> 196 `i `uc
-> -> 197 `i `uc
-> -> 198 `i `uc
-> -> 199 `i `uc
-> -> 200 `i `uc
-> -> 201 `i `uc
-> -> 202 `i `uc
-> -> 203 `i `uc
-> -> 204 `i `uc
-> -> 205 `i `uc
-> -> 206 `i `uc
-> -> 207 `i `uc
-> -> 208 `i `uc
-> -> 209 `i `uc
-> -> 210 `i `uc
-> -> 211 `i `uc
-> -> 212 `i `uc
-> -> 213 `i `uc
-> -> 214 `i `uc
-> -> 215 `i `uc
-> -> 216 `i `uc
-> -> 217 `i `uc
-> -> 218 `i `uc
-> -> 219 `i `uc
-> -> 220 `i `uc
-> -> 221 `i `uc
-> -> 222 `i `uc
-> -> 223 `i `uc
-> -> 224 `i `uc
-> -> 225 `i `uc
-> -> 226 `i `uc
-> -> 227 `i `uc
-> -> 228 `i `uc
-> -> 229 `i `uc
-> -> 230 `i `uc
-> -> 231 `i `uc
-> -> 232 `i `uc
-> -> 233 `i `uc
-> -> 234 `i `uc
-> -> 235 `i `uc
-> -> 236 `i `uc
-> -> 237 `i `uc
-> -> 238 `i `uc
-> -> 239 `i `uc
-> -> 240 `i `uc
-> -> 241 `i `uc
-> -> 242 `i `uc
-> -> 243 `i `uc
-> -> 244 `i `uc
-> -> 245 `i `uc
-> -> 246 `i `uc
-> -> 247 `i `uc
-> -> 248 `i `uc
-> -> 249 `i `uc
-> -> 250 `i `uc
-> -> 251 `i `uc
-> -> 252 `i `uc
-> -> 253 `i `uc
-> -> 254 `i `uc
-> -> 255 `i `uc
..
]
[; ;pff.c: 586: BYTE c, ni, si, i, *sfn;
[; ;pff.c: 587: const char *p;
[; ;pff.c: 590: static const BYTE cvt[] = {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, 0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0x
[; ;pff.c: 595: sfn = dj->fn;
"595
[e = _sfn . *U _dj 1 ]
[; ;pff.c: 596: mem_set(sfn, ' ', 11);
"596
[e ( _mem_set (3 , , -> _sfn `*v -> -> 32 `ui `i -> 11 `i ]
[; ;pff.c: 597: si = i = 0; ni = 8;
"597
[e = _si = _i -> -> 0 `i `uc ]
[e = _ni -> -> 8 `i `uc ]
[; ;pff.c: 598: p = *path;
"598
[e = _p *U _path ]
[; ;pff.c: 599: for (;;) {
"599
{
[e :U 60 ]
{
[; ;pff.c: 600: c = p[si++];
"600
[e = _c *U + _p * -> ++ _si -> -> 1 `i `uc `ux -> -> # *U _p `ui `ux ]
[; ;pff.c: 601: if (c <= ' ' || c == '/') break;
"601
[e $ ! || <= -> _c `ui -> 32 `ui == -> _c `ui -> 47 `ui 63  ]
[e $U 61  ]
[e :U 63 ]
[; ;pff.c: 602: if (c == '.' || i >= ni) {
"602
[e $ ! || == -> _c `ui -> 46 `ui >= -> _i `i -> _ni `i 64  ]
{
[; ;pff.c: 603: if (ni != 8 || c != '.') break;
"603
[e $ ! || != -> _ni `i -> 8 `i != -> _c `ui -> 46 `ui 65  ]
[e $U 61  ]
[e :U 65 ]
[; ;pff.c: 604: i = 8; ni = 11;
"604
[e = _i -> -> 8 `i `uc ]
[e = _ni -> -> 11 `i `uc ]
[; ;pff.c: 605: continue;
"605
[e $U 62  ]
"606
}
[e :U 64 ]
[; ;pff.c: 606: }
[; ;pff.c: 609: if (c >= 0x80)
"609
[e $ ! >= -> _c `i -> 128 `i 66  ]
[; ;pff.c: 610: c = cvt[c - 0x80];
"610
[e = _c *U + &U F183 * -> -> - -> _c `i -> 128 `i `ui `ux -> -> # *U &U F183 `ui `ux ]
[e :U 66 ]
[; ;pff.c: 612: if (0 && i < ni - 1) {
"612
[e $ ! && != -> 0 `i -> 0 `i < -> _i `i - -> _ni `i -> 1 `i 67  ]
{
"613
[v _d `uc ~T0 @X0 1 a ]
[; ;pff.c: 613: BYTE d = p[si++];
[e = _d *U + _p * -> ++ _si -> -> 1 `i `uc `ux -> -> # *U _p `ui `ux ]
[; ;pff.c: 614: sfn[i++] = c;
"614
[e = *U + _sfn * -> ++ _i -> -> 1 `i `uc `ux -> -> # *U _sfn `ui `ux _c ]
[; ;pff.c: 615: sfn[i++] = d;
"615
[e = *U + _sfn * -> ++ _i -> -> 1 `i `uc `ux -> -> # *U _sfn `ui `ux _d ]
"616
}
[; ;pff.c: 616: } else
[e $U 68  ]
[e :U 67 ]
[; ;pff.c: 618: {
"618
{
[; ;pff.c: 619: if (1 && (((c)>='a')&&((c)<='z'))) c -= 0x20;
"619
[e $ ! && != -> 1 `i -> 0 `i && >= -> _c `ui -> 97 `ui <= -> _c `ui -> 122 `ui 69  ]
[e =- _c -> -> 32 `i `uc ]
[e :U 69 ]
[; ;pff.c: 620: sfn[i++] = c;
"620
[e = *U + _sfn * -> ++ _i -> -> 1 `i `uc `ux -> -> # *U _sfn `ui `ux _c ]
"621
}
[e :U 68 ]
"622
}
[e :U 62 ]
[; ;pff.c: 621: }
[; ;pff.c: 622: }
[e $U 60  ]
[e :U 61 ]
}
[; ;pff.c: 623: *path = &p[si];
"623
[e = *U _path &U *U + _p * -> _si `ux -> -> # *U _p `ui `ux ]
[; ;pff.c: 625: sfn[11] = (c <= ' ') ? 1 : 0;
"625
[e = *U + _sfn * -> -> 11 `i `x -> -> # *U _sfn `i `x -> ? <= -> _c `ui -> 32 `ui : -> 1 `i -> 0 `i `uc ]
[; ;pff.c: 627: return FR_OK;
"627
[e ) -> . `E43 0 `E43 ]
[e $UE 59  ]
[; ;pff.c: 628: }
"628
[e :UE 59 ]
}
"638
[v _get_fileinfo `(v ~T0 @X0 1 sf3`*S2`*uc`*S3 ]
"643
{
[; ;pff.c: 637: static
[; ;pff.c: 638: void get_fileinfo (
[; ;pff.c: 639: DIR *dj,
[; ;pff.c: 640: BYTE *dir,
[; ;pff.c: 641: FILINFO *fno
[; ;pff.c: 642: )
[; ;pff.c: 643: {
[e :U _get_fileinfo ]
"639
[v _dj `*S2 ~T0 @X0 1 r1 ]
"640
[v _dir `*uc ~T0 @X0 1 r2 ]
"641
[v _fno `*S3 ~T0 @X0 1 r3 ]
"643
[f ]
"644
[v _i `uc ~T0 @X0 1 a ]
[v _c `uc ~T0 @X0 1 a ]
"645
[v _p `*uc ~T0 @X0 1 a ]
[; ;pff.c: 644: BYTE i, c;
[; ;pff.c: 645: char *p;
[; ;pff.c: 648: p = fno->fname;
"648
[e = _p &U . *U _fno 4 ]
[; ;pff.c: 649: if (dj->sect) {
"649
[e $ ! != . *U _dj 4 -> -> 0 `i `ul 71  ]
{
[; ;pff.c: 650: for (i = 0; i < 8; i++) {
"650
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 72  ]
[e $U 73  ]
[e :U 72 ]
{
[; ;pff.c: 651: c = dir[i];
"651
[e = _c *U + _dir * -> _i `ux -> -> # *U _dir `ui `ux ]
[; ;pff.c: 652: if (c == ' ') break;
"652
[e $ ! == -> _c `ui -> 32 `ui 75  ]
[e $U 73  ]
[e :U 75 ]
[; ;pff.c: 653: if (c == 0x05) c = 0xE5;
"653
[e $ ! == -> _c `i -> 5 `i 76  ]
[e = _c -> -> 229 `i `uc ]
[e :U 76 ]
[; ;pff.c: 654: *p++ = c;
"654
[e = *U ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x _c ]
"655
}
"650
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 72  ]
[e :U 73 ]
"655
}
[; ;pff.c: 655: }
[; ;pff.c: 656: if (dir[8] != ' ') {
"656
[e $ ! != -> *U + _dir * -> -> 8 `i `x -> -> # *U _dir `i `x `ui -> 32 `ui 77  ]
{
[; ;pff.c: 657: *p++ = '.';
"657
[e = *U ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x -> -> 46 `ui `uc ]
[; ;pff.c: 658: for (i = 8; i < 11; i++) {
"658
{
[e = _i -> -> 8 `i `uc ]
[e $ < -> _i `i -> 11 `i 78  ]
[e $U 79  ]
[e :U 78 ]
{
[; ;pff.c: 659: c = dir[i];
"659
[e = _c *U + _dir * -> _i `ux -> -> # *U _dir `ui `ux ]
[; ;pff.c: 660: if (c == ' ') break;
"660
[e $ ! == -> _c `ui -> 32 `ui 81  ]
[e $U 79  ]
[e :U 81 ]
[; ;pff.c: 661: *p++ = c;
"661
[e = *U ++ _p * -> -> 1 `i `x -> -> # *U _p `i `x _c ]
"662
}
"658
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 11 `i 78  ]
[e :U 79 ]
"662
}
"663
}
[e :U 77 ]
[; ;pff.c: 662: }
[; ;pff.c: 663: }
[; ;pff.c: 664: fno->fattrib = dir[11];
"664
[e = . *U _fno 3 *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x ]
[; ;pff.c: 665: fno->fsize = (DWORD)(((DWORD)*((BYTE*)(dir+28)+3)<<24)|((DWORD)*((BYTE*)(dir+28)+2)<<16)|((WORD)*((BYTE*)(dir+28)+1)<<8)|*(BYTE*)(dir+28));
"665
[e = . *U _fno 0 | | | << -> *U + + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 3 `i `x -> -> # *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `ul -> 24 `i << -> *U + + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 2 `i `x -> -> # *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `ul -> 16 `i -> << -> -> *U + + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `i `x `us `ui -> 8 `i `ul -> *U + _dir * -> -> 28 `i `x -> -> # *U _dir `i `x `ul ]
[; ;pff.c: 666: fno->fdate = (WORD)(((WORD)*((BYTE*)(dir+24)+1)<<8)|(WORD)*(BYTE*)(dir+24));
"666
[e = . *U _fno 1 -> | << -> -> *U + + _dir * -> -> 24 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U + _dir * -> -> 24 `i `x -> -> # *U _dir `i `x `i `x `us `ui -> 8 `i -> -> *U + _dir * -> -> 24 `i `x -> -> # *U _dir `i `x `us `ui `us ]
[; ;pff.c: 667: fno->ftime = (WORD)(((WORD)*((BYTE*)(dir+22)+1)<<8)|(WORD)*(BYTE*)(dir+22));
"667
[e = . *U _fno 2 -> | << -> -> *U + + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x * -> -> 1 `i `x -> -> # *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `i `x `us `ui -> 8 `i -> -> *U + _dir * -> -> 22 `i `x -> -> # *U _dir `i `x `us `ui `us ]
"668
}
[e :U 71 ]
[; ;pff.c: 668: }
[; ;pff.c: 669: *p = 0;
"669
[e = *U _p -> -> 0 `i `uc ]
[; ;pff.c: 670: }
"670
[e :UE 70 ]
}
"680
[v _follow_path `(E43 ~T0 @X0 1 sf3`*S2`*uc`*Cuc ]
"685
{
[; ;pff.c: 679: static
[; ;pff.c: 680: FRESULT follow_path (
[; ;pff.c: 681: DIR *dj,
[; ;pff.c: 682: BYTE *dir,
[; ;pff.c: 683: const char *path
[; ;pff.c: 684: )
[; ;pff.c: 685: {
[e :U _follow_path ]
"681
[v _dj `*S2 ~T0 @X0 1 r1 ]
"682
[v _dir `*uc ~T0 @X0 1 r2 ]
"683
[v _path `*Cuc ~T0 @X0 1 r3 ]
"685
[f ]
"686
[v _res `E43 ~T0 @X0 1 a ]
[; ;pff.c: 686: FRESULT res;
[; ;pff.c: 689: while (*path == ' ') path++;
"689
[e $U 83  ]
[e :U 84 ]
[e ++ _path * -> -> 1 `i `x -> -> # *U _path `i `x ]
[e :U 83 ]
[e $ == -> *U _path `ui -> 32 `ui 84  ]
[e :U 85 ]
[; ;pff.c: 690: if (*path == '/') path++;
"690
[e $ ! == -> *U _path `ui -> 47 `ui 86  ]
[e ++ _path * -> -> 1 `i `x -> -> # *U _path `i `x ]
[e :U 86 ]
[; ;pff.c: 691: dj->sclust = 0;
"691
[e = . *U _dj 2 -> -> -> 0 `i `l `ul ]
[; ;pff.c: 693: if ((BYTE)*path < ' ') {
"693
[e $ ! < -> *U _path `ui -> 32 `ui 87  ]
{
[; ;pff.c: 694: res = dir_rewind(dj);
"694
[e = _res ( _dir_rewind (1 _dj ]
[; ;pff.c: 695: dir[0] = 0;
"695
[e = *U + _dir * -> -> 0 `i `x -> -> # *U _dir `i `x -> -> 0 `i `uc ]
"697
}
[; ;pff.c: 697: } else {
[e $U 88  ]
[e :U 87 ]
{
[; ;pff.c: 698: for (;;) {
"698
{
[e :U 89 ]
{
[; ;pff.c: 699: res = create_name(dj, &path);
"699
[e = _res ( _create_name (2 , _dj &U _path ]
[; ;pff.c: 700: if (res != FR_OK) break;
"700
[e $ ! != -> _res `i -> . `E43 0 `i 92  ]
[e $U 90  ]
[e :U 92 ]
[; ;pff.c: 701: res = dir_find(dj, dir);
"701
[e = _res ( _dir_find (2 , _dj _dir ]
[; ;pff.c: 702: if (res != FR_OK) break;
"702
[e $ ! != -> _res `i -> . `E43 0 `i 93  ]
[e $U 90  ]
[e :U 93 ]
[; ;pff.c: 703: if (dj->fn[11]) break;
"703
[e $ ! != -> *U + . *U _dj 1 * -> -> 11 `i `x -> -> # *U . *U _dj 1 `i `x `i -> -> -> 0 `i `uc `i 94  ]
[e $U 90  ]
[e :U 94 ]
[; ;pff.c: 704: if (!(dir[11] & 0x10)) {
"704
[e $ ! ! != & -> *U + _dir * -> -> 11 `i `x -> -> # *U _dir `i `x `i -> 16 `i -> 0 `i 95  ]
{
[; ;pff.c: 705: res = FR_NO_FILE; break;
"705
[e = _res -> . `E43 3 `E43 ]
[e $U 90  ]
"706
}
[e :U 95 ]
[; ;pff.c: 706: }
[; ;pff.c: 707: dj->sclust = get_clust(dir);
"707
[e = . *U _dj 2 ( _get_clust (1 _dir ]
"708
}
[; ;pff.c: 708: }
[e $U 89  ]
[e :U 90 ]
}
"709
}
[e :U 88 ]
[; ;pff.c: 709: }
[; ;pff.c: 711: return res;
"711
[e ) _res ]
[e $UE 82  ]
[; ;pff.c: 712: }
"712
[e :UE 82 ]
}
"722
[v _check_fs `(uc ~T0 @X0 1 sf2`*uc`ul ]
"726
{
[; ;pff.c: 721: static
[; ;pff.c: 722: BYTE check_fs (
[; ;pff.c: 723: BYTE *buf,
[; ;pff.c: 724: DWORD sect
[; ;pff.c: 725: )
[; ;pff.c: 726: {
[e :U _check_fs ]
"723
[v _buf `*uc ~T0 @X0 1 r1 ]
"724
[v _sect `ul ~T0 @X0 1 r2 ]
"726
[f ]
[; ;pff.c: 727: if (disk_readp(buf, sect, 510, 2))
"727
[e $ ! != -> ( _disk_readp (4 , , , _buf _sect -> -> 510 `i `ui -> -> 2 `i `ui `i -> -> -> 0 `i `E73 `i 97  ]
[; ;pff.c: 728: return 3;
"728
[e ) -> -> 3 `i `uc ]
[e $UE 96  ]
[e :U 97 ]
[; ;pff.c: 729: if ( (WORD)(((WORD)*((BYTE*)(buf)+1)<<8)|(WORD)*(BYTE*)(buf)) != 0xAA55)
"729
[e $ ! != -> -> | << -> -> *U + _buf * -> -> 1 `i `x -> -> # *U _buf `i `x `us `ui -> 8 `i -> -> *U _buf `us `ui `us `ui -> 43605 `ui 98  ]
[; ;pff.c: 730: {
"730
{
[; ;pff.c: 731: return 2;
"731
[e ) -> -> 2 `i `uc ]
[e $UE 96  ]
"732
}
[e :U 98 ]
[; ;pff.c: 732: }
[; ;pff.c: 733: if (!0 && !disk_readp(buf, sect, 54 , 2) && (WORD)(((WORD)*((BYTE*)(buf)+1)<<8)|(WORD)*(BYTE*)(buf)) == 0x4146)
"733
[e $ ! && && ! != -> 0 `i -> 0 `i ! != -> ( _disk_readp (4 , , , _buf _sect -> -> 54 `i `ui -> -> 2 `i `ui `i -> -> -> 0 `i `E73 `i == -> -> | << -> -> *U + _buf * -> -> 1 `i `x -> -> # *U _buf `i `x `us `ui -> 8 `i -> -> *U _buf `us `ui `us `ui -> -> 16710 `i `ui 99  ]
[; ;pff.c: 734: return 0;
"734
[e ) -> -> 0 `i `uc ]
[e $UE 96  ]
[e :U 99 ]
[; ;pff.c: 735: if (1 && !disk_readp(buf, sect, 82 , 2) && (WORD)(((WORD)*((BYTE*)(buf)+1)<<8)|(WORD)*(BYTE*)(buf)) == 0x4146)
"735
[e $ ! && && != -> 1 `i -> 0 `i ! != -> ( _disk_readp (4 , , , _buf _sect -> -> 82 `i `ui -> -> 2 `i `ui `i -> -> -> 0 `i `E73 `i == -> -> | << -> -> *U + _buf * -> -> 1 `i `x -> -> # *U _buf `i `x `us `ui -> 8 `i -> -> *U _buf `us `ui `us `ui -> -> 16710 `i `ui 100  ]
[; ;pff.c: 736: return 0;
"736
[e ) -> -> 0 `i `uc ]
[e $UE 96  ]
[e :U 100 ]
[; ;pff.c: 737: return 1;
"737
[e ) -> -> 1 `i `uc ]
[e $UE 96  ]
[; ;pff.c: 738: }
"738
[e :UE 96 ]
}
"755
[v _pf_mount `(E43 ~T0 @X0 1 ef1`*S1 ]
"758
{
[; ;pff.c: 755: FRESULT pf_mount (
[; ;pff.c: 756: FATFS *fs
[; ;pff.c: 757: )
[; ;pff.c: 758: {
[e :U _pf_mount ]
"756
[v _fs `*S1 ~T0 @X0 1 r1 ]
"758
[f ]
"759
[v _fmt `uc ~T0 @X0 1 a ]
[v _buf `uc ~T0 @X0 -> 36 `i a ]
"760
[v _bsect `ul ~T0 @X0 1 a ]
[v _fsize `ul ~T0 @X0 1 a ]
[v _tsect `ul ~T0 @X0 1 a ]
[v _mclst `ul ~T0 @X0 1 a ]
[; ;pff.c: 759: BYTE fmt, buf[36];
[; ;pff.c: 760: DWORD bsect, fsize, tsect, mclst;
[; ;pff.c: 763: FatFs = 0;
"763
[e = _FatFs -> -> 0 `i `*S1 ]
[; ;pff.c: 764: if (disk_initialize() & 0x01)
"764
[e $ ! != & -> ( _disk_initialize ..  `i -> 1 `i -> 0 `i 102  ]
[; ;pff.c: 765: return FR_NOT_READY;
"765
[e ) -> . `E43 2 `E43 ]
[e $UE 101  ]
[e :U 102 ]
[; ;pff.c: 767: bsect = 0;
"767
[e = _bsect -> -> -> 0 `i `l `ul ]
[; ;pff.c: 768: fmt = check_fs(buf, bsect);
"768
[e = _fmt ( _check_fs (2 , &U _buf _bsect ]
[; ;pff.c: 769: if (fmt == 1) {
"769
[e $ ! == -> _fmt `i -> 1 `i 103  ]
{
[; ;pff.c: 771: if (disk_readp(buf, bsect, 446, 16)) {
"771
[e $ ! != -> ( _disk_readp (4 , , , &U _buf _bsect -> -> 446 `i `ui -> -> 16 `i `ui `i -> -> -> 0 `i `E73 `i 104  ]
{
[; ;pff.c: 772: fmt = 3;
"772
[e = _fmt -> -> 3 `i `uc ]
"773
}
[; ;pff.c: 773: } else {
[e $U 105  ]
[e :U 104 ]
{
[; ;pff.c: 774: if (buf[4]) {
"774
[e $ ! != -> *U + &U _buf * -> -> -> 4 `i `ui `ux -> -> # *U &U _buf `ui `ux `i -> -> -> 0 `i `uc `i 106  ]
{
[; ;pff.c: 775: bsect = (DWORD)(((DWORD)*((BYTE*)(&buf[8])+3)<<24)|((DWORD)*((BYTE*)(&buf[8])+2)<<16)|((WORD)*((BYTE*)(&buf[8])+1)<<8)|*(BYTE*)(&buf[8]));
"775
[e = _bsect | | | << -> *U + &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux * -> -> 3 `i `x -> -> # *U &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux `i `x `ul -> 24 `i << -> *U + &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux * -> -> 2 `i `x -> -> # *U &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux `i `x `ul -> 16 `i -> << -> -> *U + &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux * -> -> 1 `i `x -> -> # *U &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux `i `x `us `ui -> 8 `i `ul -> *U &U *U + &U _buf * -> -> -> 8 `i `ui `ux -> -> # *U &U _buf `ui `ux `ul ]
[; ;pff.c: 776: fmt = check_fs(buf, bsect);
"776
[e = _fmt ( _check_fs (2 , &U _buf _bsect ]
"777
}
[e :U 106 ]
"778
}
[e :U 105 ]
"779
}
[e :U 103 ]
[; ;pff.c: 777: }
[; ;pff.c: 778: }
[; ;pff.c: 779: }
[; ;pff.c: 780: if (fmt == 3) return FR_DISK_ERR;
"780
[e $ ! == -> _fmt `i -> 3 `i 107  ]
[e ) -> . `E43 1 `E43 ]
[e $UE 101  ]
[e :U 107 ]
[; ;pff.c: 781: if (fmt) return FR_NO_FILESYSTEM;
"781
[e $ ! != -> _fmt `i -> -> -> 0 `i `uc `i 108  ]
[e ) -> . `E43 6 `E43 ]
[e $UE 101  ]
[e :U 108 ]
[; ;pff.c: 784: if (disk_readp(buf, bsect, 13, sizeof (buf))) return FR_DISK_ERR;
"784
[e $ ! != -> ( _disk_readp (4 , , , &U _buf _bsect -> -> 13 `i `ui -> # _buf `ui `i -> -> -> 0 `i `E73 `i 109  ]
[e ) -> . `E43 1 `E43 ]
[e $UE 101  ]
[e :U 109 ]
[; ;pff.c: 786: fsize = (WORD)(((WORD)*((BYTE*)(buf+22-13)+1)<<8)|(WORD)*(BYTE*)(buf+22-13));
"786
[e = _fsize -> -> | << -> -> *U + - + &U _buf * -> -> 22 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 22 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 22 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 22 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i -> -> *U - + &U _buf * -> -> 22 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 22 `i `x -> -> # *U &U _buf `i `x `i `x `us `ui `us `ul ]
[; ;pff.c: 787: if (!fsize) fsize = (DWORD)(((DWORD)*((BYTE*)(buf+36-13)+3)<<24)|((DWORD)*((BYTE*)(buf+36-13)+2)<<16)|((WORD)*((BYTE*)(buf+36-13)+1)<<8)|*(BYTE*)(buf+36-13));
"787
[e $ ! ! != _fsize -> -> 0 `i `ul 110  ]
[e = _fsize | | | << -> *U + - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 3 `i `x -> -> # *U - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `ul -> 24 `i << -> *U + - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 2 `i `x -> -> # *U - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `ul -> 16 `i -> << -> -> *U + - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i `ul -> *U - + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 36 `i `x -> -> # *U &U _buf `i `x `i `x `ul ]
[e :U 110 ]
[; ;pff.c: 789: fsize *= buf[16-13];
"789
[e =* _fsize -> *U + &U _buf * -> -> - -> 16 `i -> 13 `i `ui `ux -> -> # *U &U _buf `ui `ux `ul ]
[; ;pff.c: 790: fs->fatbase = bsect + (WORD)(((WORD)*((BYTE*)(buf+14-13)+1)<<8)|(WORD)*(BYTE*)(buf+14-13));
"790
[e = . *U _fs 6 + _bsect -> -> | << -> -> *U + - + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i -> -> *U - + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x `i `x `us `ui `us `ul ]
[; ;pff.c: 791: fs->csize = buf[13-13];
"791
[e = . *U _fs 2 *U + &U _buf * -> -> - -> 13 `i -> 13 `i `ui `ux -> -> # *U &U _buf `ui `ux ]
[; ;pff.c: 792: fs->n_rootdir = (WORD)(((WORD)*((BYTE*)(buf+17-13)+1)<<8)|(WORD)*(BYTE*)(buf+17-13));
"792
[e = . *U _fs 4 -> | << -> -> *U + - + &U _buf * -> -> 17 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 17 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 17 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 17 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i -> -> *U - + &U _buf * -> -> 17 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 17 `i `x -> -> # *U &U _buf `i `x `i `x `us `ui `us ]
[; ;pff.c: 793: tsect = (WORD)(((WORD)*((BYTE*)(buf+19-13)+1)<<8)|(WORD)*(BYTE*)(buf+19-13));
"793
[e = _tsect -> -> | << -> -> *U + - + &U _buf * -> -> 19 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 19 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 19 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 19 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i -> -> *U - + &U _buf * -> -> 19 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 19 `i `x -> -> # *U &U _buf `i `x `i `x `us `ui `us `ul ]
[; ;pff.c: 794: if (!tsect) tsect = (DWORD)(((DWORD)*((BYTE*)(buf+32-13)+3)<<24)|((DWORD)*((BYTE*)(buf+32-13)+2)<<16)|((WORD)*((BYTE*)(buf+32-13)+1)<<8)|*(BYTE*)(buf+32-13));
"794
[e $ ! ! != _tsect -> -> 0 `i `ul 111  ]
[e = _tsect | | | << -> *U + - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 3 `i `x -> -> # *U - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `ul -> 24 `i << -> *U + - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 2 `i `x -> -> # *U - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `ul -> 16 `i -> << -> -> *U + - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i `ul -> *U - + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 32 `i `x -> -> # *U &U _buf `i `x `i `x `ul ]
[e :U 111 ]
[; ;pff.c: 795: mclst = (tsect
[; ;pff.c: 796: - (WORD)(((WORD)*((BYTE*)(buf+14-13)+1)<<8)|(WORD)*(BYTE*)(buf+14-13)) - fsize - fs->n_rootdir / 16
[; ;pff.c: 797: ) / fs->csize + 2;
"797
[e = _mclst + / - - - _tsect -> -> | << -> -> *U + - + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x `i `x * -> -> 1 `i `x -> -> # *U - + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x `i `x `i `x `us `ui -> 8 `i -> -> *U - + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x * -> -> 13 `i `x -> -> # *U + &U _buf * -> -> 14 `i `x -> -> # *U &U _buf `i `x `i `x `us `ui `us `ul _fsize -> / -> . *U _fs 4 `ui -> -> 16 `i `ui `ul -> . *U _fs 2 `ul -> -> -> 2 `i `l `ul ]
[; ;pff.c: 798: fs->n_fatent = (DWORD)mclst;
"798
[e = . *U _fs 5 _mclst ]
[; ;pff.c: 800: fmt = 0;
"800
[e = _fmt -> -> 0 `i `uc ]
[; ;pff.c: 801: if (1 && mclst < 0xFF7)
"801
[e $ ! && != -> 1 `i -> 0 `i < _mclst -> -> -> 4087 `i `l `ul 112  ]
[; ;pff.c: 802: fmt = 1;
"802
[e = _fmt -> -> 1 `i `uc ]
[e :U 112 ]
[; ;pff.c: 803: if (1 && mclst >= 0xFF8 && mclst < 0xFFF7)
"803
[e $ ! && && != -> 1 `i -> 0 `i >= _mclst -> -> -> 4088 `i `l `ul < _mclst -> -> 65527 `ui `ul 113  ]
[; ;pff.c: 804: fmt = 2;
"804
[e = _fmt -> -> 2 `i `uc ]
[e :U 113 ]
[; ;pff.c: 805: if (1 && mclst >= 0xFFF7)
"805
[e $ ! && != -> 1 `i -> 0 `i >= _mclst -> -> 65527 `ui `ul 114  ]
[; ;pff.c: 806: fmt = 3;
"806
[e = _fmt -> -> 3 `i `uc ]
[e :U 114 ]
[; ;pff.c: 807: if (!fmt) return FR_NO_FILESYSTEM;
"807
[e $ ! ! != -> _fmt `i -> -> -> 0 `i `uc `i 115  ]
[e ) -> . `E43 6 `E43 ]
[e $UE 101  ]
[e :U 115 ]
[; ;pff.c: 808: fs->fs_type = fmt;
"808
[e = . *U _fs 0 _fmt ]
[; ;pff.c: 810: if (0 || (1 && fmt == 3))
"810
[e $ ! || != -> 0 `i -> 0 `i && != -> 1 `i -> 0 `i == -> _fmt `i -> 3 `i 116  ]
[; ;pff.c: 811: fs->dirbase = (DWORD)(((DWORD)*((BYTE*)(buf+(44-13))+3)<<24)|((DWORD)*((BYTE*)(buf+(44-13))+2)<<16)|((WORD)*((BYTE*)(buf+(44-13))+1)<<8)|*(BYTE*)(buf+(44-13)));
"811
[e = . *U _fs 7 | | | << -> *U + + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x * -> -> 3 `i `x -> -> # *U + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x `i `x `ul -> 24 `i << -> *U + + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x * -> -> 2 `i `x -> -> # *U + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x `i `x `ul -> 16 `i -> << -> -> *U + + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x * -> -> 1 `i `x -> -> # *U + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x `i `x `us `ui -> 8 `i `ul -> *U + &U _buf * -> - -> 44 `i -> 13 `i `x -> -> # *U &U _buf `i `x `ul ]
[e $U 117  ]
"812
[e :U 116 ]
[; ;pff.c: 812: else
[; ;pff.c: 813: fs->dirbase = fs->fatbase + fsize;
"813
[e = . *U _fs 7 + . *U _fs 6 _fsize ]
[e :U 117 ]
[; ;pff.c: 814: fs->database = fs->fatbase + fsize + fs->n_rootdir / 16;
"814
[e = . *U _fs 8 + + . *U _fs 6 _fsize -> / -> . *U _fs 4 `ui -> -> 16 `i `ui `ul ]
[; ;pff.c: 816: fs->flag = 0;
"816
[e = . *U _fs 1 -> -> 0 `i `uc ]
[; ;pff.c: 817: FatFs = fs;
"817
[e = _FatFs _fs ]
[; ;pff.c: 819: return FR_OK;
"819
[e ) -> . `E43 0 `E43 ]
[e $UE 101  ]
[; ;pff.c: 820: }
"820
[e :UE 101 ]
}
"829
[v _pf_open `(E43 ~T0 @X0 1 ef1`*Cuc ]
"832
{
[; ;pff.c: 829: FRESULT pf_open (
[; ;pff.c: 830: const char *path
[; ;pff.c: 831: )
[; ;pff.c: 832: {
[e :U _pf_open ]
"830
[v _path `*Cuc ~T0 @X0 1 r1 ]
"832
[f ]
"833
[v _res `E43 ~T0 @X0 1 a ]
"834
[v _dj `S2 ~T0 @X0 1 a ]
"835
[v _sp `uc ~T0 @X0 -> 12 `i a ]
[v _dir `uc ~T0 @X0 -> 32 `i a ]
"836
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 833: FRESULT res;
[; ;pff.c: 834: DIR dj;
[; ;pff.c: 835: BYTE sp[12], dir[32];
[; ;pff.c: 836: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 838: if (!fs) return FR_NOT_ENABLED;
"838
[e $ ! ! != _fs -> -> 0 `i `*S1 119  ]
[e ) -> . `E43 5 `E43 ]
[e $UE 118  ]
[e :U 119 ]
[; ;pff.c: 840: fs->flag = 0;
"840
[e = . *U _fs 1 -> -> 0 `i `uc ]
[; ;pff.c: 841: dj.fn = sp;
"841
[e = . _dj 1 &U _sp ]
[; ;pff.c: 842: res = follow_path(&dj, dir, "check.txt" );
"842
[e = _res ( _follow_path (3 , , &U _dj &U _dir :s 1C ]
[; ;pff.c: 843: if (res != FR_OK) return res;
"843
[e $ ! != -> _res `i -> . `E43 0 `i 120  ]
[e ) _res ]
[e $UE 118  ]
[e :U 120 ]
[; ;pff.c: 844: if (!dir[0] || (dir[11] & 0x10))
"844
[e $ ! || ! != -> *U + &U _dir * -> -> -> 0 `i `ui `ux -> -> # *U &U _dir `ui `ux `i -> -> -> 0 `i `uc `i != & -> *U + &U _dir * -> -> -> 11 `i `ui `ux -> -> # *U &U _dir `ui `ux `i -> 16 `i -> 0 `i 121  ]
[; ;pff.c: 845: return FR_NO_FILE;
"845
[e ) -> . `E43 3 `E43 ]
[e $UE 118  ]
[e :U 121 ]
[; ;pff.c: 847: fs->org_clust = get_clust(dir);
"847
[e = . *U _fs 11 ( _get_clust (1 &U _dir ]
[; ;pff.c: 848: fs->fsize = (DWORD)(((DWORD)*((BYTE*)(dir+28)+3)<<24)|((DWORD)*((BYTE*)(dir+28)+2)<<16)|((WORD)*((BYTE*)(dir+28)+1)<<8)|*(BYTE*)(dir+28));
"848
[e = . *U _fs 10 | | | << -> *U + + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x * -> -> 3 `i `x -> -> # *U + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x `i `x `ul -> 24 `i << -> *U + + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x * -> -> 2 `i `x -> -> # *U + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x `i `x `ul -> 16 `i -> << -> -> *U + + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x * -> -> 1 `i `x -> -> # *U + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x `i `x `us `ui -> 8 `i `ul -> *U + &U _dir * -> -> 28 `i `x -> -> # *U &U _dir `i `x `ul ]
[; ;pff.c: 849: fs->fptr = 0;
"849
[e = . *U _fs 9 -> -> -> 0 `i `l `ul ]
[; ;pff.c: 850: fs->flag = 0x01;
"850
[e = . *U _fs 1 -> -> 1 `i `uc ]
[; ;pff.c: 852: return FR_OK;
"852
[e ) -> . `E43 0 `E43 ]
[e $UE 118  ]
[; ;pff.c: 853: }
"853
[e :UE 118 ]
}
"863
[v _pf_read `(E43 ~T0 @X0 1 ef3`*v`ui`*ui ]
"868
{
[; ;pff.c: 863: FRESULT pf_read (
[; ;pff.c: 864: void* buff,
[; ;pff.c: 865: UINT btr,
[; ;pff.c: 866: UINT* br
[; ;pff.c: 867: )
[; ;pff.c: 868: {
[e :U _pf_read ]
"864
[v _buff `*v ~T0 @X0 1 r1 ]
"865
[v _btr `ui ~T0 @X0 1 r2 ]
"866
[v _br `*ui ~T0 @X0 1 r3 ]
"868
[f ]
"869
[v _dr `E73 ~T0 @X0 1 a ]
"870
[v _clst `ul ~T0 @X0 1 a ]
"871
[v _sect `ul ~T0 @X0 1 a ]
[v _remain `ul ~T0 @X0 1 a ]
"872
[v _rcnt `ui ~T0 @X0 1 a ]
"873
[v _cs `uc ~T0 @X0 1 a ]
[v _rbuff `*uc ~T0 @X0 1 a ]
[; ;pff.c: 869: DRESULT dr;
[; ;pff.c: 870: DWORD clst;
[; ;pff.c: 871: DWORD sect, remain;
[; ;pff.c: 872: UINT rcnt;
[; ;pff.c: 873: BYTE cs, *rbuff = buff;
[e = _rbuff -> _buff `*uc ]
"874
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 874: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 877: *br = 0;
"877
[e = *U _br -> -> 0 `i `ui ]
[; ;pff.c: 878: if (!fs) return FR_NOT_ENABLED;
"878
[e $ ! ! != _fs -> -> 0 `i `*S1 123  ]
[e ) -> . `E43 5 `E43 ]
[e $UE 122  ]
[e :U 123 ]
[; ;pff.c: 879: if (!(fs->flag & 0x01))
"879
[e $ ! ! != & -> . *U _fs 1 `i -> 1 `i -> 0 `i 124  ]
[; ;pff.c: 880: return FR_NOT_OPENED;
"880
[e ) -> . `E43 4 `E43 ]
[e $UE 122  ]
[e :U 124 ]
[; ;pff.c: 882: remain = fs->fsize - fs->fptr;
"882
[e = _remain - . *U _fs 10 . *U _fs 9 ]
[; ;pff.c: 883: if (btr > remain) btr = (UINT)remain;
"883
[e $ ! > -> _btr `ul _remain 125  ]
[e = _btr -> _remain `ui ]
[e :U 125 ]
[; ;pff.c: 885: while (btr) {
"885
[e $U 126  ]
[e :U 127 ]
{
[; ;pff.c: 886: if ((fs->fptr % 512) == 0) {
"886
[e $ ! == % . *U _fs 9 -> -> -> 512 `i `l `ul -> -> -> 0 `i `l `ul 129  ]
{
[; ;pff.c: 887: cs = (BYTE)(fs->fptr / 512 & (fs->csize - 1));
"887
[e = _cs -> & / . *U _fs 9 -> -> -> 512 `i `l `ul -> -> - -> . *U _fs 2 `i -> 1 `i `l `ul `uc ]
[; ;pff.c: 888: if (!cs) {
"888
[e $ ! ! != -> _cs `i -> -> -> 0 `i `uc `i 130  ]
{
[; ;pff.c: 889: if (fs->fptr == 0)
"889
[e $ ! == . *U _fs 9 -> -> -> 0 `i `l `ul 131  ]
[; ;pff.c: 890: clst = fs->org_clust;
"890
[e = _clst . *U _fs 11 ]
[e $U 132  ]
"891
[e :U 131 ]
[; ;pff.c: 891: else
[; ;pff.c: 892: clst = get_fat(fs->curr_clust);
"892
[e = _clst ( _get_fat (1 . *U _fs 12 ]
[e :U 132 ]
[; ;pff.c: 893: if (clst <= 1) {fs->flag = 0; return FR_DISK_ERR;};
"893
[e $ ! <= _clst -> -> -> 1 `i `l `ul 133  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) -> . `E43 1 `E43 ]
[e $UE 122  ]
}
[e :U 133 ]
[; ;pff.c: 894: fs->curr_clust = clst;
"894
[e = . *U _fs 12 _clst ]
"895
}
[e :U 130 ]
[; ;pff.c: 895: }
[; ;pff.c: 896: sect = clust2sect(fs->curr_clust);
"896
[e = _sect ( _clust2sect (1 . *U _fs 12 ]
[; ;pff.c: 897: if (!sect) {fs->flag = 0; return FR_DISK_ERR;};
"897
[e $ ! ! != _sect -> -> 0 `i `ul 134  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) -> . `E43 1 `E43 ]
[e $UE 122  ]
}
[e :U 134 ]
[; ;pff.c: 898: fs->dsect = sect + cs;
"898
[e = . *U _fs 13 + _sect -> _cs `ul ]
"899
}
[e :U 129 ]
[; ;pff.c: 899: }
[; ;pff.c: 900: rcnt = 512 - (UINT)fs->fptr % 512;
"900
[e = _rcnt - -> -> 512 `i `ui % -> . *U _fs 9 `ui -> -> 512 `i `ui ]
[; ;pff.c: 901: if (rcnt > btr) rcnt = btr;
"901
[e $ ! > _rcnt _btr 135  ]
[e = _rcnt _btr ]
[e :U 135 ]
[; ;pff.c: 902: dr = disk_readp(!buff ? 0 : rbuff, fs->dsect, (UINT)fs->fptr % 512, rcnt);
"902
[e = _dr ( _disk_readp (4 , , , ? ! != _buff -> -> 0 `i `*v : -> -> 0 `i `*uc _rbuff . *U _fs 13 % -> . *U _fs 9 `ui -> -> 512 `i `ui _rcnt ]
[; ;pff.c: 903: if (dr) {fs->flag = 0; return FR_DISK_ERR;};
"903
[e $ ! != -> _dr `i -> -> -> 0 `i `E73 `i 136  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) -> . `E43 1 `E43 ]
[e $UE 122  ]
}
[e :U 136 ]
[; ;pff.c: 904: fs->fptr += rcnt; rbuff += rcnt;
"904
[e =+ . *U _fs 9 -> _rcnt `ul ]
[e =+ _rbuff * -> _rcnt `ux -> -> # *U _rbuff `ui `ux ]
[; ;pff.c: 905: btr -= rcnt; *br += rcnt;
"905
[e =- _btr _rcnt ]
[e =+ *U _br _rcnt ]
"906
}
[e :U 126 ]
"885
[e $ != _btr -> -> 0 `i `ui 127  ]
[e :U 128 ]
[; ;pff.c: 906: }
[; ;pff.c: 908: return FR_OK;
"908
[e ) -> . `E43 0 `E43 ]
[e $UE 122  ]
[; ;pff.c: 909: }
"909
[e :UE 122 ]
}
"919
[v _pf_write `(E43 ~T0 @X0 1 ef3`*Cv`ui`*ui ]
"924
{
[; ;pff.c: 919: FRESULT pf_write (
[; ;pff.c: 920: const void* buff,
[; ;pff.c: 921: UINT btw,
[; ;pff.c: 922: UINT* bw
[; ;pff.c: 923: )
[; ;pff.c: 924: {
[e :U _pf_write ]
"920
[v _buff `*Cv ~T0 @X0 1 r1 ]
"921
[v _btw `ui ~T0 @X0 1 r2 ]
"922
[v _bw `*ui ~T0 @X0 1 r3 ]
"924
[f ]
"925
[v _clst `ul ~T0 @X0 1 a ]
"926
[v _sect `ul ~T0 @X0 1 a ]
[v _remain `ul ~T0 @X0 1 a ]
"927
[v _p `*Cuc ~T0 @X0 1 a ]
[; ;pff.c: 925: DWORD clst;
[; ;pff.c: 926: DWORD sect, remain;
[; ;pff.c: 927: const BYTE *p = buff;
[e = _p -> _buff `*Cuc ]
"928
[v _cs `uc ~T0 @X0 1 a ]
"929
[v _wcnt `ui ~T0 @X0 1 a ]
"930
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 928: BYTE cs;
[; ;pff.c: 929: UINT wcnt;
[; ;pff.c: 930: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 933: *bw = 0;
"933
[e = *U _bw -> -> 0 `i `ui ]
[; ;pff.c: 934: if (!fs) return FR_NOT_ENABLED;
"934
[e $ ! ! != _fs -> -> 0 `i `*S1 138  ]
[e ) -> . `E43 5 `E43 ]
[e $UE 137  ]
[e :U 138 ]
[; ;pff.c: 935: if (!(fs->flag & 0x01))
"935
[e $ ! ! != & -> . *U _fs 1 `i -> 1 `i -> 0 `i 139  ]
[; ;pff.c: 936: return FR_NOT_OPENED;
"936
[e ) -> . `E43 4 `E43 ]
[e $UE 137  ]
[e :U 139 ]
[; ;pff.c: 938: if (!btw) {
"938
[e $ ! ! != _btw -> -> 0 `i `ui 140  ]
{
[; ;pff.c: 939: if ((fs->flag & 0x40) && disk_writep(0, 0)) {fs->flag = 0; return FR_DISK_ERR;};
"939
[e $ ! && != & -> . *U _fs 1 `i -> 64 `i -> 0 `i != -> ( _disk_writep (2 , -> -> 0 `i `*Cuc -> -> -> 0 `i `l `ul `i -> -> -> 0 `i `E73 `i 141  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) -> . `E43 1 `E43 ]
[e $UE 137  ]
}
[e :U 141 ]
[; ;pff.c: 940: fs->flag &= ~0x40;
"940
[e =& . *U _fs 1 -> ~ -> 64 `i `uc ]
[; ;pff.c: 941: return FR_OK;
"941
[e ) -> . `E43 0 `E43 ]
[e $UE 137  ]
"942
}
[; ;pff.c: 942: } else {
[e $U 142  ]
[e :U 140 ]
{
[; ;pff.c: 943: if (!(fs->flag & 0x40))
"943
[e $ ! ! != & -> . *U _fs 1 `i -> 64 `i -> 0 `i 143  ]
[; ;pff.c: 944: fs->fptr &= 0xFFFFFE00;
"944
[e =& . *U _fs 9 -> -512 `ul ]
[e :U 143 ]
"945
}
[e :U 142 ]
[; ;pff.c: 945: }
[; ;pff.c: 946: remain = fs->fsize - fs->fptr;
"946
[e = _remain - . *U _fs 10 . *U _fs 9 ]
[; ;pff.c: 947: if (btw > remain) btw = (UINT)remain;
"947
[e $ ! > -> _btw `ul _remain 144  ]
[e = _btw -> _remain `ui ]
[e :U 144 ]
[; ;pff.c: 949: while (btw) {
"949
[e $U 145  ]
[e :U 146 ]
{
[; ;pff.c: 950: if ((UINT)fs->fptr % 512 == 0) {
"950
[e $ ! == % -> . *U _fs 9 `ui -> -> 512 `i `ui -> -> 0 `i `ui 148  ]
{
[; ;pff.c: 951: cs = (BYTE)(fs->fptr / 512 & (fs->csize - 1));
"951
[e = _cs -> & / . *U _fs 9 -> -> -> 512 `i `l `ul -> -> - -> . *U _fs 2 `i -> 1 `i `l `ul `uc ]
[; ;pff.c: 952: if (!cs) {
"952
[e $ ! ! != -> _cs `i -> -> -> 0 `i `uc `i 149  ]
{
[; ;pff.c: 953: if (fs->fptr == 0)
"953
[e $ ! == . *U _fs 9 -> -> -> 0 `i `l `ul 150  ]
[; ;pff.c: 954: clst = fs->org_clust;
"954
[e = _clst . *U _fs 11 ]
[e $U 151  ]
"955
[e :U 150 ]
[; ;pff.c: 955: else
[; ;pff.c: 956: clst = get_fat(fs->curr_clust);
"956
[e = _clst ( _get_fat (1 . *U _fs 12 ]
[e :U 151 ]
[; ;pff.c: 957: if (clst <= 1) {fs->flag = 0; return FR_DISK_ERR;};
"957
[e $ ! <= _clst -> -> -> 1 `i `l `ul 152  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) -> . `E43 1 `E43 ]
[e $UE 137  ]
}
[e :U 152 ]
[; ;pff.c: 958: fs->curr_clust = clst;
"958
[e = . *U _fs 12 _clst ]
"959
}
[e :U 149 ]
[; ;pff.c: 959: }
[; ;pff.c: 960: sect = clust2sect(fs->curr_clust);
"960
[e = _sect ( _clust2sect (1 . *U _fs 12 ]
[; ;pff.c: 961: if (!sect) {fs->flag = 0; return FR_DISK_ERR;};
"961
[e $ ! ! != _sect -> -> 0 `i `ul 153  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) -> . `E43 1 `E43 ]
[e $UE 137  ]
}
[e :U 153 ]
[; ;pff.c: 962: fs->dsect = sect + cs;
"962
[e = . *U _fs 13 + _sect -> _cs `ul ]
[; ;pff.c: 963: if (disk_writep(0, fs->dsect)) {fs->flag = 0; return FR_DISK_ERR;};
"963
[e $ ! != -> ( _disk_writep (2 , -> -> 0 `i `*Cuc . *U _fs 13 `i -> -> -> 0 `i `E73 `i 154  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) -> . `E43 1 `E43 ]
[e $UE 137  ]
}
[e :U 154 ]
[; ;pff.c: 964: fs->flag |= 0x40;
"964
[e =| . *U _fs 1 -> -> 64 `i `uc ]
"965
}
[e :U 148 ]
[; ;pff.c: 965: }
[; ;pff.c: 966: wcnt = 512 - (UINT)fs->fptr % 512;
"966
[e = _wcnt - -> -> 512 `i `ui % -> . *U _fs 9 `ui -> -> 512 `i `ui ]
[; ;pff.c: 967: if (wcnt > btw)wcnt = btw;
"967
[e $ ! > _wcnt _btw 155  ]
[e = _wcnt _btw ]
[e :U 155 ]
[; ;pff.c: 968: if (disk_writep(p, fs->dsect )) {fs->flag = 0; return FR_DISK_ERR;};
"968
[e $ ! != -> ( _disk_writep (2 , _p . *U _fs 13 `i -> -> -> 0 `i `E73 `i 156  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) -> . `E43 1 `E43 ]
[e $UE 137  ]
}
[e :U 156 ]
[; ;pff.c: 969: fs->fptr += wcnt; p += wcnt;
"969
[e =+ . *U _fs 9 -> _wcnt `ul ]
[e =+ _p * -> _wcnt `ux -> -> # *U _p `ui `ux ]
[; ;pff.c: 970: btw -= wcnt; *bw += wcnt;
"970
[e =- _btw _wcnt ]
[e =+ *U _bw _wcnt ]
[; ;pff.c: 971: if ((UINT)fs->fptr % 512 == 0) {
"971
[e $ ! == % -> . *U _fs 9 `ui -> -> 512 `i `ui -> -> 0 `i `ui 157  ]
{
[; ;pff.c: 972: if (disk_writep(0, 0)) {fs->flag = 0; return FR_DISK_ERR;};
"972
[e $ ! != -> ( _disk_writep (2 , -> -> 0 `i `*Cuc -> -> -> 0 `i `l `ul `i -> -> -> 0 `i `E73 `i 158  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) -> . `E43 1 `E43 ]
[e $UE 137  ]
}
[e :U 158 ]
[; ;pff.c: 973: fs->flag &= ~0x40;
"973
[e =& . *U _fs 1 -> ~ -> 64 `i `uc ]
"974
}
[e :U 157 ]
"975
}
[e :U 145 ]
"949
[e $ != _btw -> -> 0 `i `ui 146  ]
[e :U 147 ]
[; ;pff.c: 974: }
[; ;pff.c: 975: }
[; ;pff.c: 977: return FR_OK;
"977
[e ) -> . `E43 0 `E43 ]
[e $UE 137  ]
[; ;pff.c: 978: }
"978
[e :UE 137 ]
}
"988
[v _pf_lseek `(E43 ~T0 @X0 1 ef1`ul ]
"991
{
[; ;pff.c: 988: FRESULT pf_lseek (
[; ;pff.c: 989: DWORD ofs
[; ;pff.c: 990: )
[; ;pff.c: 991: {
[e :U _pf_lseek ]
"989
[v _ofs `ul ~T0 @X0 1 r1 ]
"991
[f ]
"992
[v _clst `ul ~T0 @X0 1 a ]
"993
[v _bcs `ul ~T0 @X0 1 a ]
[v _sect `ul ~T0 @X0 1 a ]
[v _ifptr `ul ~T0 @X0 1 a ]
"994
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 992: DWORD clst;
[; ;pff.c: 993: DWORD bcs, sect, ifptr;
[; ;pff.c: 994: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 997: if (!fs) return FR_NOT_ENABLED;
"997
[e $ ! ! != _fs -> -> 0 `i `*S1 160  ]
[e ) -> . `E43 5 `E43 ]
[e $UE 159  ]
[e :U 160 ]
[; ;pff.c: 998: if (!(fs->flag & 0x01))
"998
[e $ ! ! != & -> . *U _fs 1 `i -> 1 `i -> 0 `i 161  ]
[; ;pff.c: 999: return FR_NOT_OPENED;
"999
[e ) -> . `E43 4 `E43 ]
[e $UE 159  ]
[e :U 161 ]
[; ;pff.c: 1001: if (ofs > fs->fsize) ofs = fs->fsize;
"1001
[e $ ! > _ofs . *U _fs 10 162  ]
[e = _ofs . *U _fs 10 ]
[e :U 162 ]
[; ;pff.c: 1002: ifptr = fs->fptr;
"1002
[e = _ifptr . *U _fs 9 ]
[; ;pff.c: 1003: fs->fptr = 0;
"1003
[e = . *U _fs 9 -> -> -> 0 `i `l `ul ]
[; ;pff.c: 1004: if (ofs > 0) {
"1004
[e $ ! > _ofs -> -> -> 0 `i `l `ul 163  ]
{
[; ;pff.c: 1005: bcs = (DWORD)fs->csize * 512;
"1005
[e = _bcs * -> . *U _fs 2 `ul -> -> -> 512 `i `l `ul ]
[; ;pff.c: 1006: if (ifptr > 0 &&
[; ;pff.c: 1007: (ofs - 1) / bcs >= (ifptr - 1) / bcs) {
"1007
[e $ ! && > _ifptr -> -> -> 0 `i `l `ul >= / - _ofs -> -> -> 1 `i `l `ul _bcs / - _ifptr -> -> -> 1 `i `l `ul _bcs 164  ]
{
[; ;pff.c: 1008: fs->fptr = (ifptr - 1) & ~(bcs - 1);
"1008
[e = . *U _fs 9 & - _ifptr -> -> -> 1 `i `l `ul ~ - _bcs -> -> -> 1 `i `l `ul ]
[; ;pff.c: 1009: ofs -= fs->fptr;
"1009
[e =- _ofs . *U _fs 9 ]
[; ;pff.c: 1010: clst = fs->curr_clust;
"1010
[e = _clst . *U _fs 12 ]
"1011
}
[; ;pff.c: 1011: } else {
[e $U 165  ]
[e :U 164 ]
{
[; ;pff.c: 1012: clst = fs->org_clust;
"1012
[e = _clst . *U _fs 11 ]
[; ;pff.c: 1013: fs->curr_clust = clst;
"1013
[e = . *U _fs 12 _clst ]
"1014
}
[e :U 165 ]
[; ;pff.c: 1014: }
[; ;pff.c: 1015: while (ofs > bcs) {
"1015
[e $U 166  ]
[e :U 167 ]
{
[; ;pff.c: 1016: clst = get_fat(clst);
"1016
[e = _clst ( _get_fat (1 _clst ]
[; ;pff.c: 1017: if (clst <= 1 || clst >= fs->n_fatent) {fs->flag = 0; return FR_DISK_ERR;};
"1017
[e $ ! || <= _clst -> -> -> 1 `i `l `ul >= _clst . *U _fs 5 169  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) -> . `E43 1 `E43 ]
[e $UE 159  ]
}
[e :U 169 ]
[; ;pff.c: 1018: fs->curr_clust = clst;
"1018
[e = . *U _fs 12 _clst ]
[; ;pff.c: 1019: fs->fptr += bcs;
"1019
[e =+ . *U _fs 9 _bcs ]
[; ;pff.c: 1020: ofs -= bcs;
"1020
[e =- _ofs _bcs ]
"1021
}
[e :U 166 ]
"1015
[e $ > _ofs _bcs 167  ]
[e :U 168 ]
[; ;pff.c: 1021: }
[; ;pff.c: 1022: fs->fptr += ofs;
"1022
[e =+ . *U _fs 9 _ofs ]
[; ;pff.c: 1023: sect = clust2sect(clst);
"1023
[e = _sect ( _clust2sect (1 _clst ]
[; ;pff.c: 1024: if (!sect) {fs->flag = 0; return FR_DISK_ERR;};
"1024
[e $ ! ! != _sect -> -> 0 `i `ul 170  ]
{
[e = . *U _fs 1 -> -> 0 `i `uc ]
[e ) -> . `E43 1 `E43 ]
[e $UE 159  ]
}
[e :U 170 ]
[; ;pff.c: 1025: fs->dsect = sect + (fs->fptr / 512 & (fs->csize - 1));
"1025
[e = . *U _fs 13 + _sect & / . *U _fs 9 -> -> -> 512 `i `l `ul -> -> - -> . *U _fs 2 `i -> 1 `i `l `ul ]
"1026
}
[e :U 163 ]
[; ;pff.c: 1026: }
[; ;pff.c: 1028: return FR_OK;
"1028
[e ) -> . `E43 0 `E43 ]
[e $UE 159  ]
[; ;pff.c: 1029: }
"1029
[e :UE 159 ]
}
"1039
[v _pf_opendir `(E43 ~T0 @X0 1 ef2`*S2`*Cuc ]
"1043
{
[; ;pff.c: 1039: FRESULT pf_opendir (
[; ;pff.c: 1040: DIR *dj,
[; ;pff.c: 1041: const char *path
[; ;pff.c: 1042: )
[; ;pff.c: 1043: {
[e :U _pf_opendir ]
"1040
[v _dj `*S2 ~T0 @X0 1 r1 ]
"1041
[v _path `*Cuc ~T0 @X0 1 r2 ]
"1043
[f ]
"1044
[v _res `E43 ~T0 @X0 1 a ]
"1045
[v _sp `uc ~T0 @X0 -> 12 `i a ]
[v _dir `uc ~T0 @X0 -> 32 `i a ]
"1046
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 1044: FRESULT res;
[; ;pff.c: 1045: BYTE sp[12], dir[32];
[; ;pff.c: 1046: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 1049: if (!fs) {
"1049
[e $ ! ! != _fs -> -> 0 `i `*S1 172  ]
{
[; ;pff.c: 1050: res = FR_NOT_ENABLED;
"1050
[e = _res -> . `E43 5 `E43 ]
"1051
}
[; ;pff.c: 1051: } else {
[e $U 173  ]
[e :U 172 ]
{
[; ;pff.c: 1052: dj->fn = sp;
"1052
[e = . *U _dj 1 &U _sp ]
[; ;pff.c: 1053: res = follow_path(dj, dir, path);
"1053
[e = _res ( _follow_path (3 , , _dj &U _dir _path ]
[; ;pff.c: 1054: if (res == FR_OK) {
"1054
[e $ ! == -> _res `i -> . `E43 0 `i 174  ]
{
[; ;pff.c: 1055: if (dir[0]) {
"1055
[e $ ! != -> *U + &U _dir * -> -> -> 0 `i `ui `ux -> -> # *U &U _dir `ui `ux `i -> -> -> 0 `i `uc `i 175  ]
{
[; ;pff.c: 1056: if (dir[11] & 0x10)
"1056
[e $ ! != & -> *U + &U _dir * -> -> -> 11 `i `ui `ux -> -> # *U &U _dir `ui `ux `i -> 16 `i -> 0 `i 176  ]
[; ;pff.c: 1057: dj->sclust = get_clust(dir);
"1057
[e = . *U _dj 2 ( _get_clust (1 &U _dir ]
[e $U 177  ]
"1058
[e :U 176 ]
[; ;pff.c: 1058: else
[; ;pff.c: 1059: res = FR_NO_FILE;
"1059
[e = _res -> . `E43 3 `E43 ]
[e :U 177 ]
"1060
}
[e :U 175 ]
[; ;pff.c: 1060: }
[; ;pff.c: 1061: if (res == FR_OK)
"1061
[e $ ! == -> _res `i -> . `E43 0 `i 178  ]
[; ;pff.c: 1062: res = dir_rewind(dj);
"1062
[e = _res ( _dir_rewind (1 _dj ]
[e :U 178 ]
"1063
}
[e :U 174 ]
"1064
}
[e :U 173 ]
[; ;pff.c: 1063: }
[; ;pff.c: 1064: }
[; ;pff.c: 1066: return res;
"1066
[e ) _res ]
[e $UE 171  ]
[; ;pff.c: 1067: }
"1067
[e :UE 171 ]
}
"1076
[v _pf_readdir `(E43 ~T0 @X0 1 ef2`*S2`*S3 ]
"1080
{
[; ;pff.c: 1076: FRESULT pf_readdir (
[; ;pff.c: 1077: DIR *dj,
[; ;pff.c: 1078: FILINFO *fno
[; ;pff.c: 1079: )
[; ;pff.c: 1080: {
[e :U _pf_readdir ]
"1077
[v _dj `*S2 ~T0 @X0 1 r1 ]
"1078
[v _fno `*S3 ~T0 @X0 1 r2 ]
"1080
[f ]
"1081
[v _res `E43 ~T0 @X0 1 a ]
"1082
[v _sp `uc ~T0 @X0 -> 12 `i a ]
[v _dir `uc ~T0 @X0 -> 32 `i a ]
"1083
[v _fs `*S1 ~T0 @X0 1 a ]
[; ;pff.c: 1081: FRESULT res;
[; ;pff.c: 1082: BYTE sp[12], dir[32];
[; ;pff.c: 1083: FATFS *fs = FatFs;
[e = _fs _FatFs ]
[; ;pff.c: 1086: if (!fs) {
"1086
[e $ ! ! != _fs -> -> 0 `i `*S1 180  ]
{
[; ;pff.c: 1087: res = FR_NOT_ENABLED;
"1087
[e = _res -> . `E43 5 `E43 ]
"1088
}
[; ;pff.c: 1088: } else {
[e $U 181  ]
[e :U 180 ]
{
[; ;pff.c: 1089: dj->fn = sp;
"1089
[e = . *U _dj 1 &U _sp ]
[; ;pff.c: 1090: if (!fno) {
"1090
[e $ ! ! != _fno -> -> 0 `i `*S3 182  ]
{
[; ;pff.c: 1091: res = dir_rewind(dj);
"1091
[e = _res ( _dir_rewind (1 _dj ]
"1092
}
[; ;pff.c: 1092: } else {
[e $U 183  ]
[e :U 182 ]
{
[; ;pff.c: 1093: res = dir_read(dj, dir);
"1093
[e = _res ( _dir_read (2 , _dj &U _dir ]
[; ;pff.c: 1094: if (res == FR_NO_FILE) res = FR_OK;
"1094
[e $ ! == -> _res `i -> . `E43 3 `i 184  ]
[e = _res -> . `E43 0 `E43 ]
[e :U 184 ]
[; ;pff.c: 1095: if (res == FR_OK) {
"1095
[e $ ! == -> _res `i -> . `E43 0 `i 185  ]
{
[; ;pff.c: 1096: get_fileinfo(dj, dir, fno);
"1096
[e ( _get_fileinfo (3 , , _dj &U _dir _fno ]
[; ;pff.c: 1097: res = dir_next(dj);
"1097
[e = _res ( _dir_next (1 _dj ]
[; ;pff.c: 1098: if (res == FR_NO_FILE) res = FR_OK;
"1098
[e $ ! == -> _res `i -> . `E43 3 `i 186  ]
[e = _res -> . `E43 0 `E43 ]
[e :U 186 ]
"1099
}
[e :U 185 ]
"1100
}
[e :U 183 ]
"1101
}
[e :U 181 ]
[; ;pff.c: 1099: }
[; ;pff.c: 1100: }
[; ;pff.c: 1101: }
[; ;pff.c: 1103: return res;
"1103
[e ) _res ]
[e $UE 179  ]
[; ;pff.c: 1104: }
"1104
[e :UE 179 ]
}
[a 1C 99 104 101 99 107 46 116 120 116 0 ]

