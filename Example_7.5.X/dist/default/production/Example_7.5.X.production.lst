

Microchip Technology PIC18 STD Macro Assembler V1.32 build 58300 
                                                                                               Tue Jun 02 12:23:27 2015

Microchip Technology Omniscient Code Generator (Standard mode) build 58300
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	sm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	idataBANK2,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,delta=1
   160                           	psect	text141,global,reloc=2,class=CODE,delta=1
   161                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   164  0000                     
   165                           	psect	idataBANK1
   166  003ECB                     __pidataBANK1:
   167                           	opt stack 0
   168                           
   169                           ;initializer for fatfs_filename_to_lfn@F379
   170  003ECB  0001               	dw	1
   171  003ECD  0003               	dw	3
   172  003ECF  0005               	dw	5
   173  003ED1  0007               	dw	7
   174  003ED3  0009               	dw	9
   175                           
   176                           ;initializer for Switch@F4804
   177  003ED5  65                 	db	101
   178  003ED6  78                 	db	120
   179  003ED7  69                 	db	105
   180  003ED8  74                 	db	116
   181  003ED9  00                 	db	0
   182                           
   183                           ;initializer for Check_extension@F4793
   184  003EDA  62                 	db	98
   185  003EDB  69                 	db	105
   186  003EDC  6E                 	db	110
   187  003EDD  00                 	db	0
   188                           
   189                           ;initializer for Check_extension@F4795
   190  003EDE  74                 	db	116
   191  003EDF  78                 	db	120
   192  003EE0  74                 	db	116
   193  003EE1  00                 	db	0
   194                           
   195                           ;initializer for _Stat
   196  003EE2  01                 	db	1
   197                           
   198                           ;initializer for _config_1
   199  003EE3  2C                 	db	44
   200                           
   201                           ;initializer for _data
   202  003EE4  20                 	db	32
   203                           
   204                           ;initializer for _w
   205  003EE5  79                 	db	121
   206                           
   207                           	psect	idataBANK2
   208  00487A                     __pidataBANK2:
   209                           	opt stack 0
   210                           
   211                           ;initializer for __cluster_size_table16
   212  00487A  7FA8               	dw	32680
   213  00487C  0000               	dw	0
   214  00487E  02                 	db	2
   215  00487F  0000               	dw	0
   216  004881  0004               	dw	4
   217  004883  04                 	db	4
   218  004884  0000               	dw	0
   219  004886  0008               	dw	8
   220  004888  08                 	db	8
   221  004889  0000               	dw	0
   222  00488B  0010               	dw	16
   223  00488D  10                 	db	16
   224  00488E  0000               	dw	0
   225  004890  0020               	dw	32
   226  004892  20                 	db	32
   227  004893  0000               	dw	0
   228  004895  0040               	dw	64
   229  004897  40                 	db	64
   230  004898  0000               	dw	0
   231  00489A  0080               	dw	128
   232  00489C  80                 	db	128
   233  00489D  0000               	dw	0
   234  00489F  0000               	dw	0
   235  0048A1  00                 	db	0
   236                           
   237                           ;initializer for __cluster_size_table32
   238  0048A2  2000               	dw	8192
   239  0048A4  0008               	dw	8
   240  0048A6  01                 	db	1
   241  0048A7  0000               	dw	0
   242  0048A9  0100               	dw	256
   243  0048AB  08                 	db	8
   244  0048AC  0000               	dw	0
   245  0048AE  0200               	dw	512
   246  0048B0  10                 	db	16
   247  0048B1  0000               	dw	0
   248  0048B3  0400               	dw	1024
   249  0048B5  20                 	db	32
   250  0048B6  FFFF               	dw	65535
   251  0048B8  FFFF               	dw	65535
   252  0048BA  40                 	db	64
   253  0048BB  0000               	dw	0
   254  0048BD  0000               	dw	0
   255  0048BF  00                 	db	0
   256                           
   257                           ;initializer for _str_0
   258  0048C0  20                 	db	32
   259  0048C1  20                 	db	32
   260  0048C2  20                 	db	32
   261  0048C3  20                 	db	32
   262  0048C4  20                 	db	32
   263  0048C5  20                 	db	32
   264  0048C6  20                 	db	32
   265  0048C7  20                 	db	32
   266  0048C8  20                 	db	32
   267  0048C9  20                 	db	32
   268  0048CA  20                 	db	32
   269  0048CB  20                 	db	32
   270  0048CC  20                 	db	32
   271  0048CD  20                 	db	32
   272  0048CE  20                 	db	32
   273  0048CF  20                 	db	32
   274  0048D0  20                 	db	32
   275  0048D1  20                 	db	32
   276  0048D2  20                 	db	32
   277  0048D3  20                 	db	32
   278  0048D4  20                 	db	32
   279  0048D5  20                 	db	32
   280  0048D6  20                 	db	32
   281  0048D7  20                 	db	32
   282  0048D8  20                 	db	32
   283  0048D9  00                 	db	0
   284                           
   285                           	psect	mediumconst
   286  00FA48                     __pmediumconst:
   287                           	opt stack 0
   288  00FA48  00                 	db	0
   289  00FA49                     fatfs_itoa@F407:
   290                           	opt stack 0
   291  00FA49  30                 	db	48
   292  00FA4A  31                 	db	49
   293  00FA4B  32                 	db	50
   294  00FA4C  33                 	db	51
   295  00FA4D  34                 	db	52
   296  00FA4E  35                 	db	53
   297  00FA4F  36                 	db	54
   298  00FA50  37                 	db	55
   299  00FA51  38                 	db	56
   300  00FA52  39                 	db	57
   301  00FA53  41                 	db	65
   302  00FA54  42                 	db	66
   303  00FA55  43                 	db	67
   304  00FA56  44                 	db	68
   305  00FA57  45                 	db	69
   306  00FA58  46                 	db	70
   307  00FA59  00                 	db	0
   308  00FA5A                     __end_offatfs_itoa@F407:
   309                           	opt stack 0
   310  00FA5A                     _dpowers:
   311                           	opt stack 0
   312  00FA5A  0001               	dw	1
   313  00FA5C  000A               	dw	10
   314  00FA5E  0064               	dw	100
   315  00FA60  03E8               	dw	1000
   316  00FA62  2710               	dw	10000
   317  00FA64                     __end_of_dpowers:
   318                           	opt stack 0
   319  00FA64                     _hexpowers:
   320                           	opt stack 0
   321  00FA64  0001               	dw	1
   322  00FA66  0010               	dw	16
   323  00FA68  0100               	dw	256
   324  00FA6A  1000               	dw	4096
   325  00FA6C                     __end_of_hexpowers:
   326                           	opt stack 0
   327  0000                     _ADCON1	set	4033
   328  0000                     _CMCON	set	4020
   329  0000                     _LATBbits	set	3978
   330  0000                     _LATCbits	set	3979
   331  0000                     _LATE	set	3981
   332  0000                     _PIE1bits	set	3997
   333  0000                     _PIR1bits	set	3998
   334  0000                     _PORTB	set	3969
   335  0000                     _RCREG	set	4014
   336  0000                     _RCSTA	set	4011
   337  0000                     _RCSTAbits	set	4011
   338  0000                     _SPBRG	set	4015
   339  0000                     _SPBRGH	set	4016
   340  0000                     _SSPBUF	set	4041
   341  0000                     _SSPCON1	set	4038
   342  0000                     _SSPCON1bits	set	4038
   343  0000                     _SSPSTAT	set	4039
   344  0000                     _SSPSTATbits	set	4039
   345  0000                     _TRISBbits	set	3987
   346  0000                     _TRISCbits	set	3988
   347  0000                     _TRISE	set	3990
   348  0000                     _TXREG	set	4013
   349  0000                     _TXSTA	set	4012
   350  0000                     _TXSTAbits	set	4012
   351  0000                     _CKE	set	32318
   352  0000                     _CKP	set	32308
   353  0000                     _LATA5	set	31821
   354  0000                     _LATB4	set	31828
   355  0000                     _SMP	set	32319
   356  0000                     _SSPEN	set	32309
   357  0000                     _TRISA5	set	31893
   358  00FA6C                     __stringdata:
   359                           	opt stack 0
   360  00FA6C                     STR_61:
   361  00FA6C  0A                 	db	10
   362  00FA6D  0D                 	db	13
   363  00FA6E  50                 	db	80	;'P'
   364  00FA6F  6C                 	db	108	;'l'
   365  00FA70  65                 	db	101	;'e'
   366  00FA71  61                 	db	97	;'a'
   367  00FA72  73                 	db	115	;'s'
   368  00FA73  65                 	db	101	;'e'
   369  00FA74  20                 	db	32
   370  00FA75  73                 	db	115	;'s'
   371  00FA76  65                 	db	101	;'e'
   372  00FA77  6C                 	db	108	;'l'
   373  00FA78  65                 	db	101	;'e'
   374  00FA79  63                 	db	99	;'c'
   375  00FA7A  74                 	db	116	;'t'
   376  00FA7B  20                 	db	32
   377  00FA7C  61                 	db	97	;'a'
   378  00FA7D  20                 	db	32
   379  00FA7E  66                 	db	102	;'f'
   380  00FA7F  69                 	db	105	;'i'
   381  00FA80  6C                 	db	108	;'l'
   382  00FA81  65                 	db	101	;'e'
   383  00FA82  20                 	db	32
   384  00FA83  6F                 	db	111	;'o'
   385  00FA84  70                 	db	112	;'p'
   386  00FA85  65                 	db	101	;'e'
   387  00FA86  72                 	db	114	;'r'
   388  00FA87  61                 	db	97	;'a'
   389  00FA88  74                 	db	116	;'t'
   390  00FA89  69                 	db	105	;'i'
   391  00FA8A  6F                 	db	111	;'o'
   392  00FA8B  6E                 	db	110	;'n'
   393  00FA8C  3F                 	db	63	;'?'
   394  00FA8D  09                 	db	9
   395  00FA8E  09                 	db	9
   396  00FA8F  57                 	db	87	;'W'
   397  00FA90  72                 	db	114	;'r'
   398  00FA91  69                 	db	105	;'i'
   399  00FA92  74                 	db	116	;'t'
   400  00FA93  65                 	db	101	;'e'
   401  00FA94  20                 	db	32
   402  00FA95  20                 	db	32
   403  00FA96  20                 	db	32
   404  00FA97  20                 	db	32
   405  00FA98  2D                 	db	45
   406  00FA99  20                 	db	32
   407  00FA9A  77                 	db	119	;'w'
   408  00FA9B  09                 	db	9
   409  00FA9C  52                 	db	82	;'R'
   410  00FA9D  65                 	db	101	;'e'
   411  00FA9E  61                 	db	97	;'a'
   412  00FA9F  64                 	db	100	;'d'
   413  00FAA0  20                 	db	32
   414  00FAA1  20                 	db	32
   415  00FAA2  20                 	db	32
   416  00FAA3  20                 	db	32
   417  00FAA4  20                 	db	32
   418  00FAA5  2D                 	db	45
   419  00FAA6  20                 	db	32
   420  00FAA7  72                 	db	114	;'r'
   421  00FAA8  0A                 	db	10
   422  00FAA9  0D                 	db	13
   423  00FAAA  09                 	db	9
   424  00FAAB  09                 	db	9
   425  00FAAC  09                 	db	9
   426  00FAAD  09                 	db	9
   427  00FAAE  09                 	db	9
   428  00FAAF  44                 	db	68	;'D'
   429  00FAB0  65                 	db	101	;'e'
   430  00FAB1  6C                 	db	108	;'l'
   431  00FAB2  65                 	db	101	;'e'
   432  00FAB3  74                 	db	116	;'t'
   433  00FAB4  65                 	db	101	;'e'
   434  00FAB5  20                 	db	32
   435  00FAB6  20                 	db	32
   436  00FAB7  20                 	db	32
   437  00FAB8  2D                 	db	45
   438  00FAB9  20                 	db	32
   439  00FABA  64                 	db	100	;'d'
   440  00FABB  09                 	db	9
   441  00FABC  41                 	db	65	;'A'
   442  00FABD  70                 	db	112	;'p'
   443  00FABE  70                 	db	112	;'p'
   444  00FABF  65                 	db	101	;'e'
   445  00FAC0  6E                 	db	110	;'n'
   446  00FAC1  64                 	db	100	;'d'
   447  00FAC2  20                 	db	32
   448  00FAC3  20                 	db	32
   449  00FAC4  20                 	db	32
   450  00FAC5  2D                 	db	45
   451  00FAC6  20                 	db	32
   452  00FAC7  61                 	db	97	;'a'
   453  00FAC8  0A                 	db	10
   454  00FAC9  0D                 	db	13
   455  00FACA  09                 	db	9
   456  00FACB  09                 	db	9
   457  00FACC  09                 	db	9
   458  00FACD  09                 	db	9
   459  00FACE  09                 	db	9
   460  00FACF  4E                 	db	78	;'N'
   461  00FAD0  65                 	db	101	;'e'
   462  00FAD1  77                 	db	119	;'w'
   463  00FAD2  20                 	db	32
   464  00FAD3  44                 	db	68	;'D'
   465  00FAD4  69                 	db	105	;'i'
   466  00FAD5  72                 	db	114	;'r'
   467  00FAD6  20                 	db	32
   468  00FAD7  20                 	db	32
   469  00FAD8  2D                 	db	45
   470  00FAD9  20                 	db	32
   471  00FADA  6E                 	db	110	;'n'
   472  00FADB  09                 	db	9
   473  00FADC  46                 	db	70	;'F'
   474  00FADD  6F                 	db	111	;'o'
   475  00FADE  72                 	db	114	;'r'
   476  00FADF  6D                 	db	109	;'m'
   477  00FAE0  61                 	db	97	;'a'
   478  00FAE1  74                 	db	116	;'t'
   479  00FAE2  20                 	db	32
   480  00FAE3  20                 	db	32
   481  00FAE4  20                 	db	32
   482  00FAE5  2D                 	db	45
   483  00FAE6  20                 	db	32
   484  00FAE7  66                 	db	102	;'f'
   485  00FAE8  0A                 	db	10
   486  00FAE9  0D                 	db	13
   487  00FAEA  09                 	db	9
   488  00FAEB  09                 	db	9
   489  00FAEC  09                 	db	9
   490  00FAED  09                 	db	9
   491  00FAEE  09                 	db	9
   492  00FAEF  4F                 	db	79	;'O'
   493  00FAF0  70                 	db	112	;'p'
   494  00FAF1  65                 	db	101	;'e'
   495  00FAF2  6E                 	db	110	;'n'
   496  00FAF3  20                 	db	32
   497  00FAF4  44                 	db	68	;'D'
   498  00FAF5  69                 	db	105	;'i'
   499  00FAF6  72                 	db	114	;'r'
   500  00FAF7  20                 	db	32
   501  00FAF8  2D                 	db	45
   502  00FAF9  20                 	db	32
   503  00FAFA  78                 	db	120	;'x'
   504  00FAFB  0A                 	db	10
   505  00FAFC  0D                 	db	13
   506  00FAFD  00                 	db	0
   507  00FAFE                     STR_17:
   508  00FAFE  0A                 	db	10
   509  00FAFF  0D                 	db	13
   510  00FB00  45                 	db	69	;'E'
   511  00FB01  6E                 	db	110	;'n'
   512  00FB02  74                 	db	116	;'t'
   513  00FB03  65                 	db	101	;'e'
   514  00FB04  72                 	db	114	;'r'
   515  00FB05  20                 	db	32
   516  00FB06  74                 	db	116	;'t'
   517  00FB07  68                 	db	104	;'h'
   518  00FB08  65                 	db	101	;'e'
   519  00FB09  20                 	db	32
   520  00FB0A  66                 	db	102	;'f'
   521  00FB0B  69                 	db	105	;'i'
   522  00FB0C  6C                 	db	108	;'l'
   523  00FB0D  65                 	db	101	;'e'
   524  00FB0E  20                 	db	32
   525  00FB0F  6E                 	db	110	;'n'
   526  00FB10  61                 	db	97	;'a'
   527  00FB11  6D                 	db	109	;'m'
   528  00FB12  65                 	db	101	;'e'
   529  00FB13  2F                 	db	47
   530  00FB14  20                 	db	32
   531  00FB15  70                 	db	112	;'p'
   532  00FB16  61                 	db	97	;'a'
   533  00FB17  74                 	db	116	;'t'
   534  00FB18  68                 	db	104	;'h'
   535  00FB19  3F                 	db	63	;'?'
   536  00FB1A  0A                 	db	10
   537  00FB1B  0D                 	db	13
   538  00FB1C  35                 	db	53	;'5'
   539  00FB1D  20                 	db	32
   540  00FB1E  63                 	db	99	;'c'
   541  00FB1F  68                 	db	104	;'h'
   542  00FB20  61                 	db	97	;'a'
   543  00FB21  72                 	db	114	;'r'
   544  00FB22  61                 	db	97	;'a'
   545  00FB23  63                 	db	99	;'c'
   546  00FB24  74                 	db	116	;'t'
   547  00FB25  65                 	db	101	;'e'
   548  00FB26  72                 	db	114	;'r'
   549  00FB27  73                 	db	115	;'s'
   550  00FB28  20                 	db	32
   551  00FB29  77                 	db	119	;'w'
   552  00FB2A  69                 	db	105	;'i'
   553  00FB2B  74                 	db	116	;'t'
   554  00FB2C  68                 	db	104	;'h'
   555  00FB2D  20                 	db	32
   556  00FB2E  66                 	db	102	;'f'
   557  00FB2F  69                 	db	105	;'i'
   558  00FB30  6C                 	db	108	;'l'
   559  00FB31  65                 	db	101	;'e'
   560  00FB32  20                 	db	32
   561  00FB33  65                 	db	101	;'e'
   562  00FB34  78                 	db	120	;'x'
   563  00FB35  74                 	db	116	;'t'
   564  00FB36  65                 	db	101	;'e'
   565  00FB37  6E                 	db	110	;'n'
   566  00FB38  73                 	db	115	;'s'
   567  00FB39  69                 	db	105	;'i'
   568  00FB3A  6F                 	db	111	;'o'
   569  00FB3B  6E                 	db	110	;'n'
   570  00FB3C  20                 	db	32
   571  00FB3D  2E                 	db	46
   572  00FB3E  74                 	db	116	;'t'
   573  00FB3F  78                 	db	120	;'x'
   574  00FB40  74                 	db	116	;'t'
   575  00FB41  20                 	db	32
   576  00FB42  6F                 	db	111	;'o'
   577  00FB43  72                 	db	114	;'r'
   578  00FB44  20                 	db	32
   579  00FB45  2E                 	db	46
   580  00FB46  62                 	db	98	;'b'
   581  00FB47  69                 	db	105	;'i'
   582  00FB48  6E                 	db	110	;'n'
   583  00FB49  0A                 	db	10
   584  00FB4A  0D                 	db	13
   585  00FB4B  00                 	db	0
   586  00FB4C                     STR_19:
   587  00FB4C  0A                 	db	10
   588  00FB4D  0D                 	db	13
   589  00FB4E  46                 	db	70	;'F'
   590  00FB4F  69                 	db	105	;'i'
   591  00FB50  6C                 	db	108	;'l'
   592  00FB51  65                 	db	101	;'e'
   593  00FB52  20                 	db	32
   594  00FB53  61                 	db	97	;'a'
   595  00FB54  6C                 	db	108	;'l'
   596  00FB55  72                 	db	114	;'r'
   597  00FB56  65                 	db	101	;'e'
   598  00FB57  61                 	db	97	;'a'
   599  00FB58  64                 	db	100	;'d'
   600  00FB59  79                 	db	121	;'y'
   601  00FB5A  20                 	db	32
   602  00FB5B  65                 	db	101	;'e'
   603  00FB5C  78                 	db	120	;'x'
   604  00FB5D  69                 	db	105	;'i'
   605  00FB5E  73                 	db	115	;'s'
   606  00FB5F  74                 	db	116	;'t'
   607  00FB60  73                 	db	115	;'s'
   608  00FB61  2E                 	db	46
   609  00FB62  2E                 	db	46
   610  00FB63  21                 	db	33
   611  00FB64  0A                 	db	10
   612  00FB65  0D                 	db	13
   613  00FB66  44                 	db	68	;'D'
   614  00FB67  6F                 	db	111	;'o'
   615  00FB68  20                 	db	32
   616  00FB69  79                 	db	121	;'y'
   617  00FB6A  6F                 	db	111	;'o'
   618  00FB6B  75                 	db	117	;'u'
   619  00FB6C  20                 	db	32
   620  00FB6D  77                 	db	119	;'w'
   621  00FB6E  61                 	db	97	;'a'
   622  00FB6F  6E                 	db	110	;'n'
   623  00FB70  74                 	db	116	;'t'
   624  00FB71  20                 	db	32
   625  00FB72  74                 	db	116	;'t'
   626  00FB73  6F                 	db	111	;'o'
   627  00FB74  20                 	db	32
   628  00FB75  72                 	db	114	;'r'
   629  00FB76  65                 	db	101	;'e'
   630  00FB77  70                 	db	112	;'p'
   631  00FB78  6C                 	db	108	;'l'
   632  00FB79  61                 	db	97	;'a'
   633  00FB7A  63                 	db	99	;'c'
   634  00FB7B  65                 	db	101	;'e'
   635  00FB7C  3F                 	db	63	;'?'
   636  00FB7D  20                 	db	32
   637  00FB7E  79                 	db	121	;'y'
   638  00FB7F  2F                 	db	47
   639  00FB80  6E                 	db	110	;'n'
   640  00FB81  00                 	db	0
   641  00FB82                     STR_9:
   642  00FB82  46                 	db	70	;'F'
   643  00FB83  41                 	db	65	;'A'
   644  00FB84  54                 	db	84	;'T'
   645  00FB85  5F                 	db	95	;'_'
   646  00FB86  46                 	db	70	;'F'
   647  00FB87  53                 	db	83	;'S'
   648  00FB88  3A                 	db	58	;':'
   649  00FB89  20                 	db	32
   650  00FB8A  45                 	db	69	;'E'
   651  00FB8B  72                 	db	114	;'r'
   652  00FB8C  72                 	db	114	;'r'
   653  00FB8D  6F                 	db	111	;'o'
   654  00FB8E  72                 	db	114	;'r'
   655  00FB8F  20                 	db	32
   656  00FB90  63                 	db	99	;'c'
   657  00FB91  6F                 	db	111	;'o'
   658  00FB92  75                 	db	117	;'u'
   659  00FB93  6C                 	db	108	;'l'
   660  00FB94  64                 	db	100	;'d'
   661  00FB95  20                 	db	32
   662  00FB96  6E                 	db	110	;'n'
   663  00FB97  6F                 	db	111	;'o'
   664  00FB98  74                 	db	116	;'t'
   665  00FB99  20                 	db	32
   666  00FB9A  6C                 	db	108	;'l'
   667  00FB9B  6F                 	db	111	;'o'
   668  00FB9C  61                 	db	97	;'a'
   669  00FB9D  64                 	db	100	;'d'
   670  00FB9E  20                 	db	32
   671  00FB9F  46                 	db	70	;'F'
   672  00FBA0  41                 	db	65	;'A'
   673  00FBA1  54                 	db	84	;'T'
   674  00FBA2  20                 	db	32
   675  00FBA3  64                 	db	100	;'d'
   676  00FBA4  65                 	db	101	;'e'
   677  00FBA5  74                 	db	116	;'t'
   678  00FBA6  61                 	db	97	;'a'
   679  00FBA7  69                 	db	105	;'i'
   680  00FBA8  6C                 	db	108	;'l'
   681  00FBA9  73                 	db	115	;'s'
   682  00FBAA  20                 	db	32
   683  00FBAB  28                 	db	40
   684  00FBAC  25                 	db	37
   685  00FBAD  64                 	db	100	;'d'
   686  00FBAE  29                 	db	41
   687  00FBAF  21                 	db	33
   688  00FBB0  0D                 	db	13
   689  00FBB1  0A                 	db	10
   690  00FBB2  00                 	db	0
   691  00FBB3                     STR_30:
   692  00FBB3  0A                 	db	10
   693  00FBB4  0D                 	db	13
   694  00FBB5  45                 	db	69	;'E'
   695  00FBB6  6E                 	db	110	;'n'
   696  00FBB7  74                 	db	116	;'t'
   697  00FBB8  65                 	db	101	;'e'
   698  00FBB9  72                 	db	114	;'r'
   699  00FBBA  20                 	db	32
   700  00FBBB  74                 	db	116	;'t'
   701  00FBBC  68                 	db	104	;'h'
   702  00FBBD  65                 	db	101	;'e'
   703  00FBBE  20                 	db	32
   704  00FBBF  64                 	db	100	;'d'
   705  00FBC0  61                 	db	97	;'a'
   706  00FBC1  74                 	db	116	;'t'
   707  00FBC2  61                 	db	97	;'a'
   708  00FBC3  20                 	db	32
   709  00FBC4  74                 	db	116	;'t'
   710  00FBC5  6F                 	db	111	;'o'
   711  00FBC6  20                 	db	32
   712  00FBC7  62                 	db	98	;'b'
   713  00FBC8  65                 	db	101	;'e'
   714  00FBC9  20                 	db	32
   715  00FBCA  61                 	db	97	;'a'
   716  00FBCB  70                 	db	112	;'p'
   717  00FBCC  70                 	db	112	;'p'
   718  00FBCD  65                 	db	101	;'e'
   719  00FBCE  6E                 	db	110	;'n'
   720  00FBCF  64                 	db	100	;'d'
   721  00FBD0  65                 	db	101	;'e'
   722  00FBD1  64                 	db	100	;'d'
   723  00FBD2  20                 	db	32
   724  00FBD3  74                 	db	116	;'t'
   725  00FBD4  6F                 	db	111	;'o'
   726  00FBD5  20                 	db	32
   727  00FBD6  74                 	db	116	;'t'
   728  00FBD7  68                 	db	104	;'h'
   729  00FBD8  65                 	db	101	;'e'
   730  00FBD9  20                 	db	32
   731  00FBDA  66                 	db	102	;'f'
   732  00FBDB  69                 	db	105	;'i'
   733  00FBDC  6C                 	db	108	;'l'
   734  00FBDD  65                 	db	101	;'e'
   735  00FBDE  2E                 	db	46
   736  00FBDF  2E                 	db	46
   737  00FBE0  0A                 	db	10
   738  00FBE1  0D                 	db	13
   739  00FBE2  00                 	db	0
   740  00FBE3                     STR_58:
   741  00FBE3  0A                 	db	10
   742  00FBE4  0D                 	db	13
   743  00FBE5  41                 	db	65	;'A'
   744  00FBE6  6C                 	db	108	;'l'
   745  00FBE7  6C                 	db	108	;'l'
   746  00FBE8  20                 	db	32
   747  00FBE9  64                 	db	100	;'d'
   748  00FBEA  61                 	db	97	;'a'
   749  00FBEB  74                 	db	116	;'t'
   750  00FBEC  61                 	db	97	;'a'
   751  00FBED  20                 	db	32
   752  00FBEE  77                 	db	119	;'w'
   753  00FBEF  69                 	db	105	;'i'
   754  00FBF0  6C                 	db	108	;'l'
   755  00FBF1  6C                 	db	108	;'l'
   756  00FBF2  20                 	db	32
   757  00FBF3  62                 	db	98	;'b'
   758  00FBF4  65                 	db	101	;'e'
   759  00FBF5  20                 	db	32
   760  00FBF6  6C                 	db	108	;'l'
   761  00FBF7  6F                 	db	111	;'o'
   762  00FBF8  73                 	db	115	;'s'
   763  00FBF9  74                 	db	116	;'t'
   764  00FBFA  2E                 	db	46
   765  00FBFB  2E                 	db	46
   766  00FBFC  21                 	db	33
   767  00FBFD  0A                 	db	10
   768  00FBFE  0D                 	db	13
   769  00FBFF  41                 	db	65	;'A'
   770  00FC00  72                 	db	114	;'r'
   771  00FC01  65                 	db	101	;'e'
   772  00FC02  20                 	db	32
   773  00FC03  79                 	db	121	;'y'
   774  00FC04  6F                 	db	111	;'o'
   775  00FC05  75                 	db	117	;'u'
   776  00FC06  20                 	db	32
   777  00FC07  73                 	db	115	;'s'
   778  00FC08  75                 	db	117	;'u'
   779  00FC09  72                 	db	114	;'r'
   780  00FC0A  65                 	db	101	;'e'
   781  00FC0B  3F                 	db	63	;'?'
   782  00FC0C  20                 	db	32
   783  00FC0D  79                 	db	121	;'y'
   784  00FC0E  2F                 	db	47
   785  00FC0F  6E                 	db	110	;'n'
   786  00FC10  0A                 	db	10
   787  00FC11  0D                 	db	13
   788  00FC12  00                 	db	0
   789  00FC13                     STR_47:
   790  00FC13  0A                 	db	10
   791  00FC14  0D                 	db	13
   792  00FC15  45                 	db	69	;'E'
   793  00FC16  6E                 	db	110	;'n'
   794  00FC17  74                 	db	116	;'t'
   795  00FC18  65                 	db	101	;'e'
   796  00FC19  72                 	db	114	;'r'
   797  00FC1A  20                 	db	32
   798  00FC1B  74                 	db	116	;'t'
   799  00FC1C  68                 	db	104	;'h'
   800  00FC1D  65                 	db	101	;'e'
   801  00FC1E  20                 	db	32
   802  00FC1F  66                 	db	102	;'f'
   803  00FC20  69                 	db	105	;'i'
   804  00FC21  6C                 	db	108	;'l'
   805  00FC22  65                 	db	101	;'e'
   806  00FC23  20                 	db	32
   807  00FC24  4E                 	db	78	;'N'
   808  00FC25  61                 	db	97	;'a'
   809  00FC26  6D                 	db	109	;'m'
   810  00FC27  65                 	db	101	;'e'
   811  00FC28  2F                 	db	47
   812  00FC29  70                 	db	112	;'p'
   813  00FC2A  61                 	db	97	;'a'
   814  00FC2B  74                 	db	116	;'t'
   815  00FC2C  68                 	db	104	;'h'
   816  00FC2D  3F                 	db	63	;'?'
   817  00FC2E  20                 	db	32
   818  00FC2F  35                 	db	53	;'5'
   819  00FC30  20                 	db	32
   820  00FC31  63                 	db	99	;'c'
   821  00FC32  68                 	db	104	;'h'
   822  00FC33  61                 	db	97	;'a'
   823  00FC34  72                 	db	114	;'r'
   824  00FC35  61                 	db	97	;'a'
   825  00FC36  63                 	db	99	;'c'
   826  00FC37  74                 	db	116	;'t'
   827  00FC38  65                 	db	101	;'e'
   828  00FC39  72                 	db	114	;'r'
   829  00FC3A  73                 	db	115	;'s'
   830  00FC3B  0A                 	db	10
   831  00FC3C  0D                 	db	13
   832  00FC3D  00                 	db	0
   833  00FC3E                     STR_27:
   834  00FC3E  0A                 	db	10
   835  00FC3F  0D                 	db	13
   836  00FC40  46                 	db	70	;'F'
   837  00FC41  69                 	db	105	;'i'
   838  00FC42  6C                 	db	108	;'l'
   839  00FC43  65                 	db	101	;'e'
   840  00FC44  20                 	db	32
   841  00FC45  77                 	db	119	;'w'
   842  00FC46  72                 	db	114	;'r'
   843  00FC47  69                 	db	105	;'i'
   844  00FC48  74                 	db	116	;'t'
   845  00FC49  65                 	db	101	;'e'
   846  00FC4A  20                 	db	32
   847  00FC4B  66                 	db	102	;'f'
   848  00FC4C  61                 	db	97	;'a'
   849  00FC4D  69                 	db	105	;'i'
   850  00FC4E  6C                 	db	108	;'l'
   851  00FC4F  65                 	db	101	;'e'
   852  00FC50  64                 	db	100	;'d'
   853  00FC51  2F                 	db	47
   854  00FC52  20                 	db	32
   855  00FC53  49                 	db	73	;'I'
   856  00FC54  6E                 	db	110	;'n'
   857  00FC55  76                 	db	118	;'v'
   858  00FC56  61                 	db	97	;'a'
   859  00FC57  6C                 	db	108	;'l'
   860  00FC58  69                 	db	105	;'i'
   861  00FC59  64                 	db	100	;'d'
   862  00FC5A  20                 	db	32
   863  00FC5B  44                 	db	68	;'D'
   864  00FC5C  69                 	db	105	;'i'
   865  00FC5D  72                 	db	114	;'r'
   866  00FC5E  65                 	db	101	;'e'
   867  00FC5F  63                 	db	99	;'c'
   868  00FC60  74                 	db	116	;'t'
   869  00FC61  6F                 	db	111	;'o'
   870  00FC62  72                 	db	114	;'r'
   871  00FC63  79                 	db	121	;'y'
   872  00FC64  00                 	db	0
   873  00FC65                     STR_28:
   874  00FC65  0A                 	db	10
   875  00FC66  0D                 	db	13
   876  00FC67  45                 	db	69	;'E'
   877  00FC68  6E                 	db	110	;'n'
   878  00FC69  74                 	db	116	;'t'
   879  00FC6A  65                 	db	101	;'e'
   880  00FC6B  72                 	db	114	;'r'
   881  00FC6C  20                 	db	32
   882  00FC6D  74                 	db	116	;'t'
   883  00FC6E  68                 	db	104	;'h'
   884  00FC6F  65                 	db	101	;'e'
   885  00FC70  20                 	db	32
   886  00FC71  66                 	db	102	;'f'
   887  00FC72  69                 	db	105	;'i'
   888  00FC73  6C                 	db	108	;'l'
   889  00FC74  65                 	db	101	;'e'
   890  00FC75  20                 	db	32
   891  00FC76  4E                 	db	78	;'N'
   892  00FC77  61                 	db	97	;'a'
   893  00FC78  6D                 	db	109	;'m'
   894  00FC79  65                 	db	101	;'e'
   895  00FC7A  3F                 	db	63	;'?'
   896  00FC7B  20                 	db	32
   897  00FC7C  35                 	db	53	;'5'
   898  00FC7D  20                 	db	32
   899  00FC7E  63                 	db	99	;'c'
   900  00FC7F  68                 	db	104	;'h'
   901  00FC80  61                 	db	97	;'a'
   902  00FC81  72                 	db	114	;'r'
   903  00FC82  61                 	db	97	;'a'
   904  00FC83  63                 	db	99	;'c'
   905  00FC84  74                 	db	116	;'t'
   906  00FC85  65                 	db	101	;'e'
   907  00FC86  72                 	db	114	;'r'
   908  00FC87  73                 	db	115	;'s'
   909  00FC88  0A                 	db	10
   910  00FC89  0D                 	db	13
   911  00FC8A  00                 	db	0
   912  00FC8B                     STR_24:
   913  00FC8B  0A                 	db	10
   914  00FC8C  0D                 	db	13
   915  00FC8D  45                 	db	69	;'E'
   916  00FC8E  6E                 	db	110	;'n'
   917  00FC8F  74                 	db	116	;'t'
   918  00FC90  65                 	db	101	;'e'
   919  00FC91  72                 	db	114	;'r'
   920  00FC92  20                 	db	32
   921  00FC93  74                 	db	116	;'t'
   922  00FC94  68                 	db	104	;'h'
   923  00FC95  65                 	db	101	;'e'
   924  00FC96  20                 	db	32
   925  00FC97  64                 	db	100	;'d'
   926  00FC98  61                 	db	97	;'a'
   927  00FC99  74                 	db	116	;'t'
   928  00FC9A  61                 	db	97	;'a'
   929  00FC9B  2E                 	db	46
   930  00FC9C  2E                 	db	46
   931  00FC9D  28                 	db	40
   932  00FC9E  63                 	db	99	;'c'
   933  00FC9F  74                 	db	116	;'t'
   934  00FCA0  72                 	db	114	;'r'
   935  00FCA1  6C                 	db	108	;'l'
   936  00FCA2  2B                 	db	43
   937  00FCA3  73                 	db	115	;'s'
   938  00FCA4  20                 	db	32
   939  00FCA5  74                 	db	116	;'t'
   940  00FCA6  6F                 	db	111	;'o'
   941  00FCA7  20                 	db	32
   942  00FCA8  73                 	db	115	;'s'
   943  00FCA9  61                 	db	97	;'a'
   944  00FCAA  76                 	db	118	;'v'
   945  00FCAB  65                 	db	101	;'e'
   946  00FCAC  29                 	db	41
   947  00FCAD  0A                 	db	10
   948  00FCAE  0D                 	db	13
   949  00FCAF  00                 	db	0
   950  00FCB0                     STR_54:
   951  00FCB0  0A                 	db	10
   952  00FCB1  0D                 	db	13
   953  00FCB2  45                 	db	69	;'E'
   954  00FCB3  6E                 	db	110	;'n'
   955  00FCB4  74                 	db	116	;'t'
   956  00FCB5  65                 	db	101	;'e'
   957  00FCB6  72                 	db	114	;'r'
   958  00FCB7  20                 	db	32
   959  00FCB8  74                 	db	116	;'t'
   960  00FCB9  68                 	db	104	;'h'
   961  00FCBA  65                 	db	101	;'e'
   962  00FCBB  20                 	db	32
   963  00FCBC  6E                 	db	110	;'n'
   964  00FCBD  61                 	db	97	;'a'
   965  00FCBE  6D                 	db	109	;'m'
   966  00FCBF  65                 	db	101	;'e'
   967  00FCC0  20                 	db	32
   968  00FCC1  6F                 	db	111	;'o'
   969  00FCC2  66                 	db	102	;'f'
   970  00FCC3  20                 	db	32
   971  00FCC4  74                 	db	116	;'t'
   972  00FCC5  68                 	db	104	;'h'
   973  00FCC6  65                 	db	101	;'e'
   974  00FCC7  20                 	db	32
   975  00FCC8  64                 	db	100	;'d'
   976  00FCC9  69                 	db	105	;'i'
   977  00FCCA  72                 	db	114	;'r'
   978  00FCCB  65                 	db	101	;'e'
   979  00FCCC  63                 	db	99	;'c'
   980  00FCCD  74                 	db	116	;'t'
   981  00FCCE  6F                 	db	111	;'o'
   982  00FCCF  72                 	db	114	;'r'
   983  00FCD0  79                 	db	121	;'y'
   984  00FCD1  0A                 	db	10
   985  00FCD2  0D                 	db	13
   986  00FCD3  00                 	db	0
   987  00FCD4                     STR_53:
   988  00FCD4  0A                 	db	10
   989  00FCD5  0D                 	db	13
   990  00FCD6  46                 	db	70	;'F'
   991  00FCD7  6F                 	db	111	;'o'
   992  00FCD8  6C                 	db	108	;'l'
   993  00FCD9  64                 	db	100	;'d'
   994  00FCDA  65                 	db	101	;'e'
   995  00FCDB  72                 	db	114	;'r'
   996  00FCDC  20                 	db	32
   997  00FCDD  61                 	db	97	;'a'
   998  00FCDE  6C                 	db	108	;'l'
   999  00FCDF  72                 	db	114	;'r'
  1000  00FCE0  65                 	db	101	;'e'
  1001  00FCE1  61                 	db	97	;'a'
  1002  00FCE2  64                 	db	100	;'d'
  1003  00FCE3  79                 	db	121	;'y'
  1004  00FCE4  20                 	db	32
  1005  00FCE5  65                 	db	101	;'e'
  1006  00FCE6  78                 	db	120	;'x'
  1007  00FCE7  69                 	db	105	;'i'
  1008  00FCE8  73                 	db	115	;'s'
  1009  00FCE9  74                 	db	116	;'t'
  1010  00FCEA  73                 	db	115	;'s'
  1011  00FCEB  2F                 	db	47
  1012  00FCEC  20                 	db	32
  1013  00FCED  65                 	db	101	;'e'
  1014  00FCEE  72                 	db	114	;'r'
  1015  00FCEF  72                 	db	114	;'r'
  1016  00FCF0  6F                 	db	111	;'o'
  1017  00FCF1  72                 	db	114	;'r'
  1018  00FCF2  2E                 	db	46
  1019  00FCF3  2E                 	db	46
  1020  00FCF4  21                 	db	33
  1021  00FCF5  00                 	db	0
  1022  00FCF6                     STR_49:
  1023  00FCF6  0A                 	db	10
  1024  00FCF7  0D                 	db	13
  1025  00FCF8  44                 	db	68	;'D'
  1026  00FCF9  65                 	db	101	;'e'
  1027  00FCFA  6C                 	db	108	;'l'
  1028  00FCFB  65                 	db	101	;'e'
  1029  00FCFC  74                 	db	116	;'t'
  1030  00FCFD  65                 	db	101	;'e'
  1031  00FCFE  20                 	db	32
  1032  00FCFF  66                 	db	102	;'f'
  1033  00FD00  69                 	db	105	;'i'
  1034  00FD01  6C                 	db	108	;'l'
  1035  00FD02  65                 	db	101	;'e'
  1036  00FD03  20                 	db	32
  1037  00FD04  77                 	db	119	;'w'
  1038  00FD05  61                 	db	97	;'a'
  1039  00FD06  73                 	db	115	;'s'
  1040  00FD07  20                 	db	32
  1041  00FD08  73                 	db	115	;'s'
  1042  00FD09  75                 	db	117	;'u'
  1043  00FD0A  63                 	db	99	;'c'
  1044  00FD0B  63                 	db	99	;'c'
  1045  00FD0C  65                 	db	101	;'e'
  1046  00FD0D  73                 	db	115	;'s'
  1047  00FD0E  73                 	db	115	;'s'
  1048  00FD0F  66                 	db	102	;'f'
  1049  00FD10  75                 	db	117	;'u'
  1050  00FD11  6C                 	db	108	;'l'
  1051  00FD12  2E                 	db	46
  1052  00FD13  2E                 	db	46
  1053  00FD14  21                 	db	33
  1054  00FD15  0A                 	db	10
  1055  00FD16  00                 	db	0
  1056  00FD17                     STR_31:
  1057  00FD17  0A                 	db	10
  1058  00FD18  0D                 	db	13
  1059  00FD19  45                 	db	69	;'E'
  1060  00FD1A  6E                 	db	110	;'n'
  1061  00FD1B  74                 	db	116	;'t'
  1062  00FD1C  65                 	db	101	;'e'
  1063  00FD1D  72                 	db	114	;'r'
  1064  00FD1E  20                 	db	32
  1065  00FD1F  74                 	db	116	;'t'
  1066  00FD20  68                 	db	104	;'h'
  1067  00FD21  65                 	db	101	;'e'
  1068  00FD22  20                 	db	32
  1069  00FD23  6C                 	db	108	;'l'
  1070  00FD24  69                 	db	105	;'i'
  1071  00FD25  6E                 	db	110	;'n'
  1072  00FD26  65                 	db	101	;'e'
  1073  00FD27  20                 	db	32
  1074  00FD28  4E                 	db	78	;'N'
  1075  00FD29  6F                 	db	111	;'o'
  1076  00FD2A  2E                 	db	46
  1077  00FD2B  20                 	db	32
  1078  00FD2C  74                 	db	116	;'t'
  1079  00FD2D  6F                 	db	111	;'o'
  1080  00FD2E  20                 	db	32
  1081  00FD2F  44                 	db	68	;'D'
  1082  00FD30  65                 	db	101	;'e'
  1083  00FD31  6C                 	db	108	;'l'
  1084  00FD32  65                 	db	101	;'e'
  1085  00FD33  74                 	db	116	;'t'
  1086  00FD34  65                 	db	101	;'e'
  1087  00FD35  0A                 	db	10
  1088  00FD36  0D                 	db	13
  1089  00FD37  00                 	db	0
  1090  00FD38                     STR_65:
  1091  00FD38  0A                 	db	10
  1092  00FD39  0D                 	db	13
  1093  00FD3A  43                 	db	67	;'C'
  1094  00FD3B  41                 	db	65	;'A'
  1095  00FD3C  52                 	db	82	;'R'
  1096  00FD3D  44                 	db	68	;'D'
  1097  00FD3E  20                 	db	32
  1098  00FD3F  69                 	db	105	;'i'
  1099  00FD40  6E                 	db	110	;'n'
  1100  00FD41  69                 	db	105	;'i'
  1101  00FD42  74                 	db	116	;'t'
  1102  00FD43  69                 	db	105	;'i'
  1103  00FD44  61                 	db	97	;'a'
  1104  00FD45  6C                 	db	108	;'l'
  1105  00FD46  69                 	db	105	;'i'
  1106  00FD47  7A                 	db	122	;'z'
  1107  00FD48  61                 	db	97	;'a'
  1108  00FD49  74                 	db	116	;'t'
  1109  00FD4A  69                 	db	105	;'i'
  1110  00FD4B  6F                 	db	111	;'o'
  1111  00FD4C  6E                 	db	110	;'n'
  1112  00FD4D  20                 	db	32
  1113  00FD4E  66                 	db	102	;'f'
  1114  00FD4F  61                 	db	97	;'a'
  1115  00FD50  69                 	db	105	;'i'
  1116  00FD51  6C                 	db	108	;'l'
  1117  00FD52  65                 	db	101	;'e'
  1118  00FD53  64                 	db	100	;'d'
  1119  00FD54  2E                 	db	46
  1120  00FD55  2E                 	db	46
  1121  00FD56  21                 	db	33
  1122  00FD57  00                 	db	0
  1123  00FD58                     STR_59:
  1124  00FD58  0A                 	db	10
  1125  00FD59  0D                 	db	13
  1126  00FD5A  45                 	db	69	;'E'
  1127  00FD5B  6E                 	db	110	;'n'
  1128  00FD5C  74                 	db	116	;'t'
  1129  00FD5D  65                 	db	101	;'e'
  1130  00FD5E  72                 	db	114	;'r'
  1131  00FD5F  20                 	db	32
  1132  00FD60  74                 	db	116	;'t'
  1133  00FD61  68                 	db	104	;'h'
  1134  00FD62  65                 	db	101	;'e'
  1135  00FD63  20                 	db	32
  1136  00FD64  6E                 	db	110	;'n'
  1137  00FD65  61                 	db	97	;'a'
  1138  00FD66  6D                 	db	109	;'m'
  1139  00FD67  65                 	db	101	;'e'
  1140  00FD68  20                 	db	32
  1141  00FD69  6F                 	db	111	;'o'
  1142  00FD6A  66                 	db	102	;'f'
  1143  00FD6B  20                 	db	32
  1144  00FD6C  74                 	db	116	;'t'
  1145  00FD6D  68                 	db	104	;'h'
  1146  00FD6E  65                 	db	101	;'e'
  1147  00FD6F  20                 	db	32
  1148  00FD70  44                 	db	68	;'D'
  1149  00FD71  69                 	db	105	;'i'
  1150  00FD72  73                 	db	115	;'s'
  1151  00FD73  6B                 	db	107	;'k'
  1152  00FD74  0A                 	db	10
  1153  00FD75  0D                 	db	13
  1154  00FD76  00                 	db	0
  1155  00FD77  20                 	db	32
  1156  00FD78  52                 	db	82	;'R'
  1157  00FD79  6F                 	db	111	;'o'
  1158  00FD7A  6F                 	db	111	;'o'
  1159  00FD7B  74                 	db	116	;'t'
  1160  00FD7C  20                 	db	32
  1161  00FD7D  44                 	db	68	;'D'
  1162  00FD7E  69                 	db	105	;'i'
  1163  00FD7F  72                 	db	114	;'r'
  1164  00FD80  20                 	db	32
  1165  00FD81  46                 	db	70	;'F'
  1166  00FD82  69                 	db	105	;'i'
  1167  00FD83  72                 	db	114	;'r'
  1168  00FD84  73                 	db	115	;'s'
  1169  00FD85  74                 	db	116	;'t'
  1170  00FD86  20                 	db	32
  1171  00FD87  43                 	db	67	;'C'
  1172  00FD88  6C                 	db	108	;'l'
  1173  00FD89  75                 	db	117	;'u'
  1174  00FD8A  73                 	db	115	;'s'
  1175  00FD8B  74                 	db	116	;'t'
  1176  00FD8C  65                 	db	101	;'e'
  1177  00FD8D  72                 	db	114	;'r'
  1178  00FD8E  20                 	db	32
  1179  00FD8F  3D                 	db	61	;'='
  1180  00FD90  20                 	db	32
  1181  00FD91  25                 	db	37
  1182  00FD92  78                 	db	120	;'x'
  1183  00FD93  0D                 	db	13
  1184  00FD94  0A                 	db	10
  1185  00FD95  00                 	db	0
  1186  00FD96                     STR_66:
  1187  00FD96  45                 	db	69	;'E'
  1188  00FD97  72                 	db	114	;'r'
  1189  00FD98  72                 	db	114	;'r'
  1190  00FD99  6F                 	db	111	;'o'
  1191  00FD9A  72                 	db	114	;'r'
  1192  00FD9B  3A                 	db	58	;':'
  1193  00FD9C  20                 	db	32
  1194  00FD9D  4D                 	db	77	;'M'
  1195  00FD9E  65                 	db	101	;'e'
  1196  00FD9F  64                 	db	100	;'d'
  1197  00FDA0  69                 	db	105	;'i'
  1198  00FDA1  61                 	db	97	;'a'
  1199  00FDA2  20                 	db	32
  1200  00FDA3  61                 	db	97	;'a'
  1201  00FDA4  74                 	db	116	;'t'
  1202  00FDA5  74                 	db	116	;'t'
  1203  00FDA6  61                 	db	97	;'a'
  1204  00FDA7  63                 	db	99	;'c'
  1205  00FDA8  68                 	db	104	;'h'
  1206  00FDA9  20                 	db	32
  1207  00FDAA  66                 	db	102	;'f'
  1208  00FDAB  61                 	db	97	;'a'
  1209  00FDAC  69                 	db	105	;'i'
  1210  00FDAD  6C                 	db	108	;'l'
  1211  00FDAE  65                 	db	101	;'e'
  1212  00FDAF  64                 	db	100	;'d'
  1213  00FDB0  0A                 	db	10
  1214  00FDB1  00                 	db	0
  1215  00FDB2                     STR_26:
  1216  00FDB2  0A                 	db	10
  1217  00FDB3  0D                 	db	13
  1218  00FDB4  0A                 	db	10
  1219  00FDB5  0D                 	db	13
  1220  00FDB6  46                 	db	70	;'F'
  1221  00FDB7  69                 	db	105	;'i'
  1222  00FDB8  6C                 	db	108	;'l'
  1223  00FDB9  65                 	db	101	;'e'
  1224  00FDBA  20                 	db	32
  1225  00FDBB  77                 	db	119	;'w'
  1226  00FDBC  72                 	db	114	;'r'
  1227  00FDBD  69                 	db	105	;'i'
  1228  00FDBE  74                 	db	116	;'t'
  1229  00FDBF  65                 	db	101	;'e'
  1230  00FDC0  20                 	db	32
  1231  00FDC1  63                 	db	99	;'c'
  1232  00FDC2  6F                 	db	111	;'o'
  1233  00FDC3  6D                 	db	109	;'m'
  1234  00FDC4  70                 	db	112	;'p'
  1235  00FDC5  6C                 	db	108	;'l'
  1236  00FDC6  65                 	db	101	;'e'
  1237  00FDC7  74                 	db	116	;'t'
  1238  00FDC8  65                 	db	101	;'e'
  1239  00FDC9  64                 	db	100	;'d'
  1240  00FDCA  2E                 	db	46
  1241  00FDCB  2E                 	db	46
  1242  00FDCC  21                 	db	33
  1243  00FDCD  00                 	db	0
  1244  00FDCE                     STR_48:
  1245  00FDCE  0A                 	db	10
  1246  00FDCF  0D                 	db	13
  1247  00FDD0  45                 	db	69	;'E'
  1248  00FDD1  52                 	db	82	;'R'
  1249  00FDD2  52                 	db	82	;'R'
  1250  00FDD3  4F                 	db	79	;'O'
  1251  00FDD4  52                 	db	82	;'R'
  1252  00FDD5  3A                 	db	58	;':'
  1253  00FDD6  20                 	db	32
  1254  00FDD7  44                 	db	68	;'D'
  1255  00FDD8  65                 	db	101	;'e'
  1256  00FDD9  6C                 	db	108	;'l'
  1257  00FDDA  65                 	db	101	;'e'
  1258  00FDDB  74                 	db	116	;'t'
  1259  00FDDC  65                 	db	101	;'e'
  1260  00FDDD  20                 	db	32
  1261  00FDDE  66                 	db	102	;'f'
  1262  00FDDF  69                 	db	105	;'i'
  1263  00FDE0  6C                 	db	108	;'l'
  1264  00FDE1  65                 	db	101	;'e'
  1265  00FDE2  20                 	db	32
  1266  00FDE3  66                 	db	102	;'f'
  1267  00FDE4  61                 	db	97	;'a'
  1268  00FDE5  69                 	db	105	;'i'
  1269  00FDE6  6C                 	db	108	;'l'
  1270  00FDE7  65                 	db	101	;'e'
  1271  00FDE8  64                 	db	100	;'d'
  1272  00FDE9  00                 	db	0
  1273  00FDEA  20                 	db	32
  1274  00FDEB  53                 	db	83	;'S'
  1275  00FDEC  65                 	db	101	;'e'
  1276  00FDED  63                 	db	99	;'c'
  1277  00FDEE  74                 	db	116	;'t'
  1278  00FDEF  6F                 	db	111	;'o'
  1279  00FDF0  72                 	db	114	;'r'
  1280  00FDF1  73                 	db	115	;'s'
  1281  00FDF2  20                 	db	32
  1282  00FDF3  50                 	db	80	;'P'
  1283  00FDF4  65                 	db	101	;'e'
  1284  00FDF5  72                 	db	114	;'r'
  1285  00FDF6  20                 	db	32
  1286  00FDF7  43                 	db	67	;'C'
  1287  00FDF8  6C                 	db	108	;'l'
  1288  00FDF9  75                 	db	117	;'u'
  1289  00FDFA  73                 	db	115	;'s'
  1290  00FDFB  74                 	db	116	;'t'
  1291  00FDFC  65                 	db	101	;'e'
  1292  00FDFD  72                 	db	114	;'r'
  1293  00FDFE  20                 	db	32
  1294  00FDFF  3D                 	db	61	;'='
  1295  00FE00  20                 	db	32
  1296  00FE01  25                 	db	37
  1297  00FE02  64                 	db	100	;'d'
  1298  00FE03  0D                 	db	13
  1299  00FE04  0A                 	db	10
  1300  00FE05  00                 	db	0
  1301  00FE06  20                 	db	32
  1302  00FE07  43                 	db	67	;'C'
  1303  00FE08  6C                 	db	108	;'l'
  1304  00FE09  75                 	db	117	;'u'
  1305  00FE0A  73                 	db	115	;'s'
  1306  00FE0B  74                 	db	116	;'t'
  1307  00FE0C  65                 	db	101	;'e'
  1308  00FE0D  72                 	db	114	;'r'
  1309  00FE0E  20                 	db	32
  1310  00FE0F  42                 	db	66	;'B'
  1311  00FE10  65                 	db	101	;'e'
  1312  00FE11  67                 	db	103	;'g'
  1313  00FE12  69                 	db	105	;'i'
  1314  00FE13  6E                 	db	110	;'n'
  1315  00FE14  20                 	db	32
  1316  00FE15  4C                 	db	76	;'L'
  1317  00FE16  42                 	db	66	;'B'
  1318  00FE17  41                 	db	65	;'A'
  1319  00FE18  20                 	db	32
  1320  00FE19  3D                 	db	61	;'='
  1321  00FE1A  20                 	db	32
  1322  00FE1B  30                 	db	48	;'0'
  1323  00FE1C  78                 	db	120	;'x'
  1324  00FE1D  25                 	db	37
  1325  00FE1E  78                 	db	120	;'x'
  1326  00FE1F  0D                 	db	13
  1327  00FE20  0A                 	db	10
  1328  00FE21  00                 	db	0
  1329  00FE22                     STR_37:
  1330  00FE22  0A                 	db	10
  1331  00FE23  0D                 	db	13
  1332  00FE24  46                 	db	70	;'F'
  1333  00FE25  69                 	db	105	;'i'
  1334  00FE26  6C                 	db	108	;'l'
  1335  00FE27  65                 	db	101	;'e'
  1336  00FE28  20                 	db	32
  1337  00FE29  6F                 	db	111	;'o'
  1338  00FE2A  70                 	db	112	;'p'
  1339  00FE2B  65                 	db	101	;'e'
  1340  00FE2C  6E                 	db	110	;'n'
  1341  00FE2D  20                 	db	32
  1342  00FE2E  73                 	db	115	;'s'
  1343  00FE2F  75                 	db	117	;'u'
  1344  00FE30  63                 	db	99	;'c'
  1345  00FE31  63                 	db	99	;'c'
  1346  00FE32  65                 	db	101	;'e'
  1347  00FE33  73                 	db	115	;'s'
  1348  00FE34  73                 	db	115	;'s'
  1349  00FE35  2E                 	db	46
  1350  00FE36  2E                 	db	46
  1351  00FE37  21                 	db	33
  1352  00FE38  0A                 	db	10
  1353  00FE39  0D                 	db	13
  1354  00FE3A  00                 	db	0
  1355  00FE3B                     STR_52:
  1356  00FE3B  0A                 	db	10
  1357  00FE3C  0D                 	db	13
  1358  00FE3D  4E                 	db	78	;'N'
  1359  00FE3E  65                 	db	101	;'e'
  1360  00FE3F  77                 	db	119	;'w'
  1361  00FE40  20                 	db	32
  1362  00FE41  66                 	db	102	;'f'
  1363  00FE42  6F                 	db	111	;'o'
  1364  00FE43  6C                 	db	108	;'l'
  1365  00FE44  64                 	db	100	;'d'
  1366  00FE45  65                 	db	101	;'e'
  1367  00FE46  72                 	db	114	;'r'
  1368  00FE47  20                 	db	32
  1369  00FE48  63                 	db	99	;'c'
  1370  00FE49  72                 	db	114	;'r'
  1371  00FE4A  65                 	db	101	;'e'
  1372  00FE4B  61                 	db	97	;'a'
  1373  00FE4C  74                 	db	116	;'t'
  1374  00FE4D  65                 	db	101	;'e'
  1375  00FE4E  64                 	db	100	;'d'
  1376  00FE4F  2E                 	db	46
  1377  00FE50  2E                 	db	46
  1378  00FE51  21                 	db	33
  1379  00FE52  00                 	db	0
  1380  00FE53                     STR_15:
  1381  00FE53  0A                 	db	10
  1382  00FE54  0D                 	db	13
  1383  00FE55  46                 	db	70	;'F'
  1384  00FE56  69                 	db	105	;'i'
  1385  00FE57  6C                 	db	108	;'l'
  1386  00FE58  65                 	db	101	;'e'
  1387  00FE59  20                 	db	32
  1388  00FE5A  65                 	db	101	;'e'
  1389  00FE5B  78                 	db	120	;'x'
  1390  00FE5C  74                 	db	116	;'t'
  1391  00FE5D  65                 	db	101	;'e'
  1392  00FE5E  6E                 	db	110	;'n'
  1393  00FE5F  73                 	db	115	;'s'
  1394  00FE60  69                 	db	105	;'i'
  1395  00FE61  6F                 	db	111	;'o'
  1396  00FE62  6E                 	db	110	;'n'
  1397  00FE63  20                 	db	32
  1398  00FE64  65                 	db	101	;'e'
  1399  00FE65  72                 	db	114	;'r'
  1400  00FE66  72                 	db	114	;'r'
  1401  00FE67  6F                 	db	111	;'o'
  1402  00FE68  72                 	db	114	;'r'
  1403  00FE69  21                 	db	33
  1404  00FE6A  00                 	db	0
  1405  00FE6B  20                 	db	32
  1406  00FE6C  46                 	db	70	;'F'
  1407  00FE6D  41                 	db	65	;'A'
  1408  00FE6E  54                 	db	84	;'T'
  1409  00FE6F  20                 	db	32
  1410  00FE70  42                 	db	66	;'B'
  1411  00FE71  65                 	db	101	;'e'
  1412  00FE72  67                 	db	103	;'g'
  1413  00FE73  69                 	db	105	;'i'
  1414  00FE74  6E                 	db	110	;'n'
  1415  00FE75  20                 	db	32
  1416  00FE76  4C                 	db	76	;'L'
  1417  00FE77  42                 	db	66	;'B'
  1418  00FE78  41                 	db	65	;'A'
  1419  00FE79  20                 	db	32
  1420  00FE7A  3D                 	db	61	;'='
  1421  00FE7B  20                 	db	32
  1422  00FE7C  30                 	db	48	;'0'
  1423  00FE7D  78                 	db	120	;'x'
  1424  00FE7E  25                 	db	37
  1425  00FE7F  78                 	db	120	;'x'
  1426  00FE80  0D                 	db	13
  1427  00FE81  0A                 	db	10
  1428  00FE82  00                 	db	0
  1429  00FE83                     STR_50:
  1430  00FE83  0A                 	db	10
  1431  00FE84  0D                 	db	13
  1432  00FE85  45                 	db	69	;'E'
  1433  00FE86  6E                 	db	110	;'n'
  1434  00FE87  74                 	db	116	;'t'
  1435  00FE88  65                 	db	101	;'e'
  1436  00FE89  72                 	db	114	;'r'
  1437  00FE8A  20                 	db	32
  1438  00FE8B  61                 	db	97	;'a'
  1439  00FE8C  20                 	db	32
  1440  00FE8D  6E                 	db	110	;'n'
  1441  00FE8E  61                 	db	97	;'a'
  1442  00FE8F  6D                 	db	109	;'m'
  1443  00FE90  65                 	db	101	;'e'
  1444  00FE91  2F                 	db	47
  1445  00FE92  20                 	db	32
  1446  00FE93  70                 	db	112	;'p'
  1447  00FE94  61                 	db	97	;'a'
  1448  00FE95  74                 	db	116	;'t'
  1449  00FE96  68                 	db	104	;'h'
  1450  00FE97  0A                 	db	10
  1451  00FE98  0D                 	db	13
  1452  00FE99  00                 	db	0
  1453  00FE9A                     STR_64:
  1454  00FE9A  0A                 	db	10
  1455  00FE9B  0D                 	db	13
  1456  00FE9C  43                 	db	67	;'C'
  1457  00FE9D  41                 	db	65	;'A'
  1458  00FE9E  52                 	db	82	;'R'
  1459  00FE9F  44                 	db	68	;'D'
  1460  00FEA0  20                 	db	32
  1461  00FEA1  69                 	db	105	;'i'
  1462  00FEA2  6E                 	db	110	;'n'
  1463  00FEA3  69                 	db	105	;'i'
  1464  00FEA4  74                 	db	116	;'t'
  1465  00FEA5  69                 	db	105	;'i'
  1466  00FEA6  61                 	db	97	;'a'
  1467  00FEA7  6C                 	db	108	;'l'
  1468  00FEA8  69                 	db	105	;'i'
  1469  00FEA9  7A                 	db	122	;'z'
  1470  00FEAA  65                 	db	101	;'e'
  1471  00FEAB  64                 	db	100	;'d'
  1472  00FEAC  2E                 	db	46
  1473  00FEAD  2E                 	db	46
  1474  00FEAE  21                 	db	33
  1475  00FEAF  00                 	db	0
  1476  00FEB0                     STR_32:
  1477  00FEB0  0A                 	db	10
  1478  00FEB1  0D                 	db	13
  1479  00FEB2  53                 	db	83	;'S'
  1480  00FEB3  61                 	db	97	;'a'
  1481  00FEB4  76                 	db	118	;'v'
  1482  00FEB5  65                 	db	101	;'e'
  1483  00FEB6  20                 	db	32
  1484  00FEB7  74                 	db	116	;'t'
  1485  00FEB8  68                 	db	104	;'h'
  1486  00FEB9  65                 	db	101	;'e'
  1487  00FEBA  20                 	db	32
  1488  00FEBB  64                 	db	100	;'d'
  1489  00FEBC  61                 	db	97	;'a'
  1490  00FEBD  74                 	db	116	;'t'
  1491  00FEBE  61                 	db	97	;'a'
  1492  00FEBF  3F                 	db	63	;'?'
  1493  00FEC0  20                 	db	32
  1494  00FEC1  79                 	db	121	;'y'
  1495  00FEC2  2F                 	db	47
  1496  00FEC3  6E                 	db	110	;'n'
  1497  00FEC4  3F                 	db	63	;'?'
  1498  00FEC5  00                 	db	0
  1499  00FEC6                     STR_20:
  1500  00FEC6  0A                 	db	10
  1501  00FEC7  0D                 	db	13
  1502  00FEC8  46                 	db	70	;'F'
  1503  00FEC9  69                 	db	105	;'i'
  1504  00FECA  6C                 	db	108	;'l'
  1505  00FECB  65                 	db	101	;'e'
  1506  00FECC  20                 	db	32
  1507  00FECD  72                 	db	114	;'r'
  1508  00FECE  65                 	db	101	;'e'
  1509  00FECF  70                 	db	112	;'p'
  1510  00FED0  6C                 	db	108	;'l'
  1511  00FED1  61                 	db	97	;'a'
  1512  00FED2  63                 	db	99	;'c'
  1513  00FED3  65                 	db	101	;'e'
  1514  00FED4  64                 	db	100	;'d'
  1515  00FED5  2E                 	db	46
  1516  00FED6  2E                 	db	46
  1517  00FED7  21                 	db	33
  1518  00FED8  0A                 	db	10
  1519  00FED9  0D                 	db	13
  1520  00FEDA  00                 	db	0
  1521  00FEDB                     STR_56:
  1522  00FEDB  0A                 	db	10
  1523  00FEDC  0D                 	db	13
  1524  00FEDD  46                 	db	70	;'F'
  1525  00FEDE  6F                 	db	111	;'o'
  1526  00FEDF  72                 	db	114	;'r'
  1527  00FEE0  6D                 	db	109	;'m'
  1528  00FEE1  61                 	db	97	;'a'
  1529  00FEE2  74                 	db	116	;'t'
  1530  00FEE3  20                 	db	32
  1531  00FEE4  63                 	db	99	;'c'
  1532  00FEE5  6F                 	db	111	;'o'
  1533  00FEE6  6D                 	db	109	;'m'
  1534  00FEE7  70                 	db	112	;'p'
  1535  00FEE8  6C                 	db	108	;'l'
  1536  00FEE9  65                 	db	101	;'e'
  1537  00FEEA  74                 	db	116	;'t'
  1538  00FEEB  65                 	db	101	;'e'
  1539  00FEEC  2E                 	db	46
  1540  00FEED  2E                 	db	46
  1541  00FEEE  21                 	db	33
  1542  00FEEF  00                 	db	0
  1543  00FEF0                     STR_40:
  1544  00FEF0  0A                 	db	10
  1545  00FEF1  0D                 	db	13
  1546  00FEF2  66                 	db	102	;'f'
  1547  00FEF3  69                 	db	105	;'i'
  1548  00FEF4  6C                 	db	108	;'l'
  1549  00FEF5  65                 	db	101	;'e'
  1550  00FEF6  20                 	db	32
  1551  00FEF7  6E                 	db	110	;'n'
  1552  00FEF8  6F                 	db	111	;'o'
  1553  00FEF9  74                 	db	116	;'t'
  1554  00FEFA  20                 	db	32
  1555  00FEFB  66                 	db	102	;'f'
  1556  00FEFC  6F                 	db	111	;'o'
  1557  00FEFD  75                 	db	117	;'u'
  1558  00FEFE  6E                 	db	110	;'n'
  1559  00FEFF  64                 	db	100	;'d'
  1560  00FF00  2E                 	db	46
  1561  00FF01  2E                 	db	46
  1562  00FF02  21                 	db	33
  1563  00FF03  00                 	db	0
  1564  00FF04                     STR_22:
  1565  00FF04  0A                 	db	10
  1566  00FF05  0D                 	db	13
  1567  00FF06  50                 	db	80	;'P'
  1568  00FF07  6C                 	db	108	;'l'
  1569  00FF08  65                 	db	101	;'e'
  1570  00FF09  61                 	db	97	;'a'
  1571  00FF0A  73                 	db	115	;'s'
  1572  00FF0B  65                 	db	101	;'e'
  1573  00FF0C  20                 	db	32
  1574  00FF0D  65                 	db	101	;'e'
  1575  00FF0E  6E                 	db	110	;'n'
  1576  00FF0F  74                 	db	116	;'t'
  1577  00FF10  65                 	db	101	;'e'
  1578  00FF11  72                 	db	114	;'r'
  1579  00FF12  20                 	db	32
  1580  00FF13  79                 	db	121	;'y'
  1581  00FF14  2F                 	db	47
  1582  00FF15  6E                 	db	110	;'n'
  1583  00FF16  3F                 	db	63	;'?'
  1584  00FF17  00                 	db	0
  1585  00FF18                     STR_57:
  1586  00FF18  0A                 	db	10
  1587  00FF19  0D                 	db	13
  1588  00FF1A  46                 	db	70	;'F'
  1589  00FF1B  6F                 	db	111	;'o'
  1590  00FF1C  72                 	db	114	;'r'
  1591  00FF1D  6D                 	db	109	;'m'
  1592  00FF1E  61                 	db	97	;'a'
  1593  00FF1F  74                 	db	116	;'t'
  1594  00FF20  20                 	db	32
  1595  00FF21  66                 	db	102	;'f'
  1596  00FF22  61                 	db	97	;'a'
  1597  00FF23  69                 	db	105	;'i'
  1598  00FF24  6C                 	db	108	;'l'
  1599  00FF25  65                 	db	101	;'e'
  1600  00FF26  64                 	db	100	;'d'
  1601  00FF27  2E                 	db	46
  1602  00FF28  2E                 	db	46
  1603  00FF29  21                 	db	33
  1604  00FF2A  00                 	db	0
  1605  00FF2B                     STR_62:
  1606  00FF2B  0A                 	db	10
  1607  00FF2C  0D                 	db	13
  1608  00FF2D  49                 	db	73	;'I'
  1609  00FF2E  6E                 	db	110	;'n'
  1610  00FF2F  76                 	db	118	;'v'
  1611  00FF30  61                 	db	97	;'a'
  1612  00FF31  6C                 	db	108	;'l'
  1613  00FF32  69                 	db	105	;'i'
  1614  00FF33  64                 	db	100	;'d'
  1615  00FF34  20                 	db	32
  1616  00FF35  45                 	db	69	;'E'
  1617  00FF36  6E                 	db	110	;'n'
  1618  00FF37  74                 	db	116	;'t'
  1619  00FF38  72                 	db	114	;'r'
  1620  00FF39  79                 	db	121	;'y'
  1621  00FF3A  2E                 	db	46
  1622  00FF3B  2E                 	db	46
  1623  00FF3C  21                 	db	33
  1624  00FF3D  00                 	db	0
  1625  00FF3E                     STR_14:
  1626  00FF3E  0A                 	db	10
  1627  00FF3F  0D                 	db	13
  1628  00FF40  45                 	db	69	;'E'
  1629  00FF41  78                 	db	120	;'x'
  1630  00FF42  74                 	db	116	;'t'
  1631  00FF43  65                 	db	101	;'e'
  1632  00FF44  6E                 	db	110	;'n'
  1633  00FF45  73                 	db	115	;'s'
  1634  00FF46  69                 	db	105	;'i'
  1635  00FF47  6F                 	db	111	;'o'
  1636  00FF48  6E                 	db	110	;'n'
  1637  00FF49  20                 	db	32
  1638  00FF4A  46                 	db	70	;'F'
  1639  00FF4B  61                 	db	97	;'a'
  1640  00FF4C  69                 	db	105	;'i'
  1641  00FF4D  6C                 	db	108	;'l'
  1642  00FF4E  65                 	db	101	;'e'
  1643  00FF4F  64                 	db	100	;'d'
  1644  00FF50  00                 	db	0
  1645  00FF51                     STR_34:
  1646  00FF51  0A                 	db	10
  1647  00FF52  0D                 	db	13
  1648  00FF53  46                 	db	70	;'F'
  1649  00FF54  69                 	db	105	;'i'
  1650  00FF55  6C                 	db	108	;'l'
  1651  00FF56  65                 	db	101	;'e'
  1652  00FF57  20                 	db	32
  1653  00FF58  6F                 	db	111	;'o'
  1654  00FF59  70                 	db	112	;'p'
  1655  00FF5A  65                 	db	101	;'e'
  1656  00FF5B  6E                 	db	110	;'n'
  1657  00FF5C  20                 	db	32
  1658  00FF5D  66                 	db	102	;'f'
  1659  00FF5E  61                 	db	97	;'a'
  1660  00FF5F  69                 	db	105	;'i'
  1661  00FF60  6C                 	db	108	;'l'
  1662  00FF61  65                 	db	101	;'e'
  1663  00FF62  64                 	db	100	;'d'
  1664  00FF63  00                 	db	0
  1665  00FF64                     STR_25:
  1666  00FF64  0A                 	db	10
  1667  00FF65  0D                 	db	13
  1668  00FF66  53                 	db	83	;'S'
  1669  00FF67  61                 	db	97	;'a'
  1670  00FF68  76                 	db	118	;'v'
  1671  00FF69  65                 	db	101	;'e'
  1672  00FF6A  20                 	db	32
  1673  00FF6B  64                 	db	100	;'d'
  1674  00FF6C  61                 	db	97	;'a'
  1675  00FF6D  74                 	db	116	;'t'
  1676  00FF6E  61                 	db	97	;'a'
  1677  00FF6F  3F                 	db	63	;'?'
  1678  00FF70  20                 	db	32
  1679  00FF71  79                 	db	121	;'y'
  1680  00FF72  2F                 	db	47
  1681  00FF73  6E                 	db	110	;'n'
  1682  00FF74  3F                 	db	63	;'?'
  1683  00FF75  00                 	db	0
  1684  00FF76                     STR_69:
  1685  00FF76  30                 	db	48	;'0'
  1686  00FF77  31                 	db	49	;'1'
  1687  00FF78  32                 	db	50	;'2'
  1688  00FF79  33                 	db	51	;'3'
  1689  00FF7A  34                 	db	52	;'4'
  1690  00FF7B  35                 	db	53	;'5'
  1691  00FF7C  36                 	db	54	;'6'
  1692  00FF7D  37                 	db	55	;'7'
  1693  00FF7E  38                 	db	56	;'8'
  1694  00FF7F  39                 	db	57	;'9'
  1695  00FF80  61                 	db	97	;'a'
  1696  00FF81  62                 	db	98	;'b'
  1697  00FF82  63                 	db	99	;'c'
  1698  00FF83  64                 	db	100	;'d'
  1699  00FF84  65                 	db	101	;'e'
  1700  00FF85  66                 	db	102	;'f'
  1701  00FF86  00                 	db	0
  1702  00FF87                     STR_11:
  1703  00FF87  0D                 	db	13
  1704  00FF88  0A                 	db	10
  1705  00FF89  44                 	db	68	;'D'
  1706  00FF8A  69                 	db	105	;'i'
  1707  00FF8B  72                 	db	114	;'r'
  1708  00FF8C  65                 	db	101	;'e'
  1709  00FF8D  63                 	db	99	;'c'
  1710  00FF8E  74                 	db	116	;'t'
  1711  00FF8F  6F                 	db	111	;'o'
  1712  00FF90  72                 	db	114	;'r'
  1713  00FF91  79                 	db	121	;'y'
  1714  00FF92  20                 	db	32
  1715  00FF93  25                 	db	37
  1716  00FF94  73                 	db	115	;'s'
  1717  00FF95  0D                 	db	13
  1718  00FF96  0A                 	db	10
  1719  00FF97  00                 	db	0
  1720  00FF98                     STR_13:
  1721  00FF98  25                 	db	37
  1722  00FF99  73                 	db	115	;'s'
  1723  00FF9A  20                 	db	32
  1724  00FF9B  5B                 	db	91	;'['
  1725  00FF9C  25                 	db	37
  1726  00FF9D  64                 	db	100	;'d'
  1727  00FF9E  20                 	db	32
  1728  00FF9F  62                 	db	98	;'b'
  1729  00FFA0  79                 	db	121	;'y'
  1730  00FFA1  74                 	db	116	;'t'
  1731  00FFA2  65                 	db	101	;'e'
  1732  00FFA3  73                 	db	115	;'s'
  1733  00FFA4  5D                 	db	93	;']'
  1734  00FFA5  0D                 	db	13
  1735  00FFA6  0A                 	db	10
  1736  00FFA7  00                 	db	0
  1737  00FFA8  46                 	db	70	;'F'
  1738  00FFA9  41                 	db	65	;'A'
  1739  00FFAA  54                 	db	84	;'T'
  1740  00FFAB  20                 	db	32
  1741  00FFAC  64                 	db	100	;'d'
  1742  00FFAD  65                 	db	101	;'e'
  1743  00FFAE  74                 	db	116	;'t'
  1744  00FFAF  61                 	db	97	;'a'
  1745  00FFB0  69                 	db	105	;'i'
  1746  00FFB1  6C                 	db	108	;'l'
  1747  00FFB2  73                 	db	115	;'s'
  1748  00FFB3  3A                 	db	58	;':'
  1749  00FFB4  0D                 	db	13
  1750  00FFB5  0A                 	db	10
  1751  00FFB6  00                 	db	0
  1752  00FFB7                     STR_38:
  1753  00FFB7  46                 	db	70	;'F'
  1754  00FFB8  69                 	db	105	;'i'
  1755  00FFB9  6C                 	db	108	;'l'
  1756  00FFBA  65                 	db	101	;'e'
  1757  00FFBB  20                 	db	32
  1758  00FFBC  6E                 	db	110	;'n'
  1759  00FFBD  61                 	db	97	;'a'
  1760  00FFBE  6D                 	db	109	;'m'
  1761  00FFBF  65                 	db	101	;'e'
  1762  00FFC0  09                 	db	9
  1763  00FFC1  3A                 	db	58	;':'
  1764  00FFC2  09                 	db	9
  1765  00FFC3  00                 	db	0
  1766  00FFC4                     STR_12:
  1767  00FFC4  25                 	db	37
  1768  00FFC5  73                 	db	115	;'s'
  1769  00FFC6  20                 	db	32
  1770  00FFC7  3C                 	db	60	;'<'
  1771  00FFC8  44                 	db	68	;'D'
  1772  00FFC9  49                 	db	73	;'I'
  1773  00FFCA  52                 	db	82	;'R'
  1774  00FFCB  3E                 	db	62	;'>'
  1775  00FFCC  0D                 	db	13
  1776  00FFCD  0A                 	db	10
  1777  00FFCE  00                 	db	0
  1778  00FFCF  20                 	db	32
  1779  00FFD0  54                 	db	84	;'T'
  1780  00FFD1  79                 	db	121	;'y'
  1781  00FFD2  70                 	db	112	;'p'
  1782  00FFD3  65                 	db	101	;'e'
  1783  00FFD4  20                 	db	32
  1784  00FFD5  3D                 	db	61	;'='
  1785  00FFD6  25                 	db	37
  1786  00FFD7  73                 	db	115	;'s'
  1787  00FFD8  00                 	db	0
  1788  00FFD9                     STR_68:
  1789  00FFD9  28                 	db	40
  1790  00FFDA  6E                 	db	110	;'n'
  1791  00FFDB  75                 	db	117	;'u'
  1792  00FFDC  6C                 	db	108	;'l'
  1793  00FFDD  6C                 	db	108	;'l'
  1794  00FFDE  29                 	db	41
  1795  00FFDF  00                 	db	0
  1796  00FFE0                     STR_60:
  1797  00FFE0  44                 	db	68	;'D'
  1798  00FFE1  49                 	db	73	;'I'
  1799  00FFE2  53                 	db	83	;'S'
  1800  00FFE3  4B                 	db	75	;'K'
  1801  00FFE4  5F                 	db	95	;'_'
  1802  00FFE5  00                 	db	0
  1803  00FFE6  46                 	db	70	;'F'
  1804  00FFE7  41                 	db	65	;'A'
  1805  00FFE8  54                 	db	84	;'T'
  1806  00FFE9  33                 	db	51	;'3'
  1807  00FFEA  32                 	db	50	;'2'
  1808  00FFEB  00                 	db	0
  1809  00FFEC  46                 	db	70	;'F'
  1810  00FFED  41                 	db	65	;'A'
  1811  00FFEE  54                 	db	84	;'T'
  1812  00FFEF  31                 	db	49	;'1'
  1813  00FFF0  36                 	db	54	;'6'
  1814  00FFF1  00                 	db	0
  1815  00FFF2                     STR_55:
  1816  00FFF2  0A                 	db	10
  1817  00FFF3  0D                 	db	13
  1818  00FFF4  25                 	db	37
  1819  00FFF5  73                 	db	115	;'s'
  1820  00FFF6  00                 	db	0
  1821  00FFF7                     STR_63:
  1822  00FFF7  2F                 	db	47
  1823  00FFF8  00                 	db	0
  1824  00FFF9                     STR_29:
  1825  00FFF9  61                 	db	97	;'a'
  1826  00FFFA  00                 	db	0
  1827  00FFFB                     STR_23:
  1828  00FFFB  77                 	db	119	;'w'
  1829  00FFFC  00                 	db	0
  1830  00FFFD                     STR_10:
  1831  00FFFD  72                 	db	114	;'r'
  1832  00FFFE  00                 	db	0
  1833  00FFFF                     __end_of__stringdata:
  1834                           	opt stack 0
  1835                           
  1836                           ; #config settings
  1837  00FFFF  00                 	db	0	; dummy byte at the end
  1838  0000                     
  1839                           	psect	cinit
  1840  0051FE                     __pcinit:
  1841                           	opt stack 0
  1842  0051FE                     start_initialization:
  1843                           	opt stack 0
  1844  0051FE                     __initialization:
  1845                           	opt stack 0
  1846                           
  1847                           ; Clear objects allocated to BIGRAM (2255 bytes)
  1848  0051FE  EE04  F0F0         	lfsr	0,__pbssBIGRAM
  1849  005202  EE18 F0CF          	lfsr	1,2255
  1850  005206                     clear_0:
  1851  005206  6AEE               	clrf	postinc0,c
  1852  005208  50E5               	movf	postdec1,w,c
  1853  00520A  50E1               	movf	fsr1l,w,c
  1854  00520C  E1FC               	bnz	clear_0
  1855  00520E  50E2               	movf	fsr1h,w,c
  1856  005210  E1FA               	bnz	clear_0
  1857                           
  1858                           ; Clear objects allocated to BANK4 (240 bytes)
  1859  005212  EE04  F000         	lfsr	0,__pbssBANK4
  1860  005216  0EF0               	movlw	240
  1861  005218                     clear_1:
  1862  005218  6AEE               	clrf	postinc0,c
  1863  00521A  06E8               	decf	wreg,f,c
  1864  00521C  E1FD               	bnz	clear_1
  1865                           
  1866                           ; Clear objects allocated to BANK3 (240 bytes)
  1867  00521E  EE03  F000         	lfsr	0,__pbssBANK3
  1868  005222  0EF0               	movlw	240
  1869  005224                     clear_2:
  1870  005224  6AEE               	clrf	postinc0,c
  1871  005226  06E8               	decf	wreg,f,c
  1872  005228  E1FD               	bnz	clear_2
  1873                           
  1874                           ; Clear objects allocated to BANK2 (88 bytes)
  1875  00522A  EE02  F060         	lfsr	0,__pbssBANK2
  1876  00522E  0E58               	movlw	88
  1877  005230                     clear_3:
  1878  005230  6AEE               	clrf	postinc0,c
  1879  005232  06E8               	decf	wreg,f,c
  1880  005234  E1FD               	bnz	clear_3
  1881                           
  1882                           ; Clear objects allocated to BANK1 (83 bytes)
  1883  005236  EE01  F08B         	lfsr	0,__pbssBANK1
  1884  00523A  0E53               	movlw	83
  1885  00523C                     clear_4:
  1886  00523C  6AEE               	clrf	postinc0,c
  1887  00523E  06E8               	decf	wreg,f,c
  1888  005240  E1FD               	bnz	clear_4
  1889                           
  1890                           ; Initialize objects allocated to BANK2 (96 bytes)
  1891                           ; load TBLPTR registers with __pidataBANK2
  1892  005242  0E7A               	movlw	low __pidataBANK2
  1893  005244  6EF6               	movwf	tblptrl,c
  1894  005246  0E48               	movlw	high __pidataBANK2
  1895  005248  6EF7               	movwf	tblptrh,c
  1896  00524A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1897  00524C  6EF8               	movwf	tblptru,c
  1898  00524E  EE02  F000         	lfsr	0,__pdataBANK2
  1899  005252  EE10 F060          	lfsr	1,96
  1900  005256                     copy_data0:
  1901  005256  0009               	tblrd		*+
  1902  005258  CFF5 FFEE          	movff	tablat,postinc0
  1903  00525C  50E5               	movf	postdec1,w,c
  1904  00525E  50E1               	movf	fsr1l,w,c
  1905  005260  E1FA               	bnz	copy_data0
  1906                           
  1907                           ; Initialize objects allocated to BANK1 (27 bytes)
  1908                           ; load TBLPTR registers with __pidataBANK1
  1909  005262  0ECB               	movlw	low __pidataBANK1
  1910  005264  6EF6               	movwf	tblptrl,c
  1911  005266  0E3E               	movlw	high __pidataBANK1
  1912  005268  6EF7               	movwf	tblptrh,c
  1913  00526A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1914  00526C  6EF8               	movwf	tblptru,c
  1915  00526E  EE01  F0DE         	lfsr	0,__pdataBANK1
  1916  005272  EE10 F01B          	lfsr	1,27
  1917  005276                     copy_data1:
  1918  005276  0009               	tblrd		*+
  1919  005278  CFF5 FFEE          	movff	tablat,postinc0
  1920  00527C  50E5               	movf	postdec1,w,c
  1921  00527E  50E1               	movf	fsr1l,w,c
  1922  005280  E1FA               	bnz	copy_data1
  1923  005282                     end_of_initialization:
  1924                           	opt stack 0
  1925  005282                     __end_of__initialization:
  1926                           	opt stack 0
  1927  005282  0100               	movlb	0
  1928  005284  EF64  F02A         	goto	_main	;jump to C main() function
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           postdec1	equ	0xFE5
  1936                           fsr1h	equ	0xFE2
  1937                           fsr1l	equ	0xFE1
  1938                           
  1939                           	psect	bssBANK1
  1940  00018B                     __pbssBANK1:
  1941                           	opt stack 0
  1942  00018B                     _CardType:
  1943                           	opt stack 0
  1944  00018B                     	ds	2
  1945  00018D                     _Timer1:
  1946                           	opt stack 0
  1947  00018D                     	ds	2
  1948  00018F                     _Timer2:
  1949                           	opt stack 0
  1950  00018F                     	ds	2
  1951  000191                     __filelib_init:
  1952                           	opt stack 0
  1953  000191                     	ds	2
  1954  000193                     __filelib_valid:
  1955                           	opt stack 0
  1956  000193                     	ds	2
  1957  000195                     _count:
  1958                           	opt stack 0
  1959  000195                     	ds	2
  1960  000197                     _file:
  1961                           	opt stack 0
  1962  000197                     	ds	2
  1963  000199                     _fptr:
  1964                           	opt stack 0
  1965  000199                     	ds	2
  1966  00019B                     _i:
  1967                           	opt stack 0
  1968  00019B                     	ds	2
  1969  00019D                     _j:
  1970                           	opt stack 0
  1971  00019D                     	ds	2
  1972  00019F                     _n:
  1973                           	opt stack 0
  1974  00019F                     	ds	2
  1975  0001A1                     _res:
  1976                           	opt stack 0
  1977  0001A1                     	ds	2
  1978  0001A3                     _v:
  1979                           	opt stack 0
  1980  0001A3                     	ds	2
  1981  0001A5                     _USART_Status:
  1982                           	opt stack 0
  1983  0001A5                     	ds	1
  1984  0001A6                     _c:
  1985                           	opt stack 0
  1986  0001A6                     	ds	1
  1987  0001A7                     _d:
  1988                           	opt stack 0
  1989  0001A7                     	ds	1
  1990  0001A8                     _f:
  1991                           	opt stack 0
  1992  0001A8                     	ds	1
  1993  0001A9                     _flag:
  1994                           	opt stack 0
  1995  0001A9                     	ds	1
  1996  0001AA                     _flag_1:
  1997                           	opt stack 0
  1998  0001AA                     	ds	1
  1999  0001AB                     _response:
  2000                           	opt stack 0
  2001  0001AB                     	ds	1
  2002  0001AC                     _t:
  2003                           	opt stack 0
  2004  0001AC                     	ds	1
  2005  0001AD                     _x:
  2006                           	opt stack 0
  2007  0001AD                     	ds	1
  2008  0001AE                     _z:
  2009                           	opt stack 0
  2010  0001AE                     	ds	1
  2011  0001AF                     _string:
  2012                           	opt stack 0
  2013  0001AF                     	ds	30
  2014  0001CD                     _dptr:
  2015                           	opt stack 0
  2016  0001CD                     	ds	9
  2017  0001D6                     __free_file_list:
  2018                           	opt stack 0
  2019  0001D6                     	ds	4
  2020  0001DA                     __open_file_list:
  2021                           	opt stack 0
  2022  0001DA                     	ds	4
  2023                           tblptru	equ	0xFF8
  2024                           tblptrh	equ	0xFF7
  2025                           tblptrl	equ	0xFF6
  2026                           tablat	equ	0xFF5
  2027                           postinc0	equ	0xFEE
  2028                           wreg	equ	0xFE8
  2029                           postdec1	equ	0xFE5
  2030                           fsr1h	equ	0xFE2
  2031                           fsr1l	equ	0xFE1
  2032                           
  2033                           	psect	dataBANK1
  2034  0001DE                     __pdataBANK1:
  2035                           	opt stack 0
  2036  0001DE                     fatfs_filename_to_lfn@F379:
  2037                           	opt stack 0
  2038  0001DE                     	ds	10
  2039  0001E8                     Switch@F4804:
  2040                           	opt stack 0
  2041  0001E8                     	ds	5
  2042  0001ED                     Check_extension@F4793:
  2043                           	opt stack 0
  2044  0001ED                     	ds	4
  2045  0001F1                     Check_extension@F4795:
  2046                           	opt stack 0
  2047  0001F1                     	ds	4
  2048  0001F5                     _Stat:
  2049                           	opt stack 0
  2050  0001F5                     	ds	1
  2051  0001F6                     _config_1:
  2052                           	opt stack 0
  2053  0001F6                     	ds	1
  2054  0001F7                     _data:
  2055                           	opt stack 0
  2056  0001F7                     	ds	1
  2057  0001F8                     _w:
  2058                           	opt stack 0
  2059  0001F8                     	ds	1
  2060                           tblptru	equ	0xFF8
  2061                           tblptrh	equ	0xFF7
  2062                           tblptrl	equ	0xFF6
  2063                           tablat	equ	0xFF5
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           postdec1	equ	0xFE5
  2067                           fsr1h	equ	0xFE2
  2068                           fsr1l	equ	0xFE1
  2069                           
  2070                           	psect	bssBANK2
  2071  000260                     __pbssBANK2:
  2072                           	opt stack 0
  2073  000260                     _array:
  2074                           	opt stack 0
  2075  000260                     	ds	41
  2076  000289                     _m:
  2077                           	opt stack 0
  2078  000289                     	ds	30
  2079  0002A7                     _s:
  2080                           	opt stack 0
  2081  0002A7                     	ds	17
  2082                           tblptru	equ	0xFF8
  2083                           tblptrh	equ	0xFF7
  2084                           tblptrl	equ	0xFF6
  2085                           tablat	equ	0xFF5
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           postdec1	equ	0xFE5
  2089                           fsr1h	equ	0xFE2
  2090                           fsr1l	equ	0xFE1
  2091                           
  2092                           	psect	dataBANK2
  2093  000200                     __pdataBANK2:
  2094                           	opt stack 0
  2095  000200                     __cluster_size_table16:
  2096                           	opt stack 0
  2097  000200                     	ds	40
  2098  000228                     __cluster_size_table32:
  2099                           	opt stack 0
  2100  000228                     	ds	30
  2101  000246                     _str_0:
  2102                           	opt stack 0
  2103  000246                     	ds	26
  2104                           tblptru	equ	0xFF8
  2105                           tblptrh	equ	0xFF7
  2106                           tblptrl	equ	0xFF6
  2107                           tablat	equ	0xFF5
  2108                           postinc0	equ	0xFEE
  2109                           wreg	equ	0xFE8
  2110                           postdec1	equ	0xFE5
  2111                           fsr1h	equ	0xFE2
  2112                           fsr1l	equ	0xFE1
  2113                           
  2114                           	psect	bssBANK3
  2115  000300                     __pbssBANK3:
  2116                           	opt stack 0
  2117  000300                     _str_1:
  2118                           	opt stack 0
  2119  000300                     	ds	240
  2120                           tblptru	equ	0xFF8
  2121                           tblptrh	equ	0xFF7
  2122                           tblptrl	equ	0xFF6
  2123                           tablat	equ	0xFF5
  2124                           postinc0	equ	0xFEE
  2125                           wreg	equ	0xFE8
  2126                           postdec1	equ	0xFE5
  2127                           fsr1h	equ	0xFE2
  2128                           fsr1l	equ	0xFE1
  2129                           
  2130                           	psect	bssBANK4
  2131  000400                     __pbssBANK4:
  2132                           	opt stack 0
  2133  000400                     _str:
  2134                           	opt stack 0
  2135  000400                     	ds	240
  2136                           tblptru	equ	0xFF8
  2137                           tblptrh	equ	0xFF7
  2138                           tblptrl	equ	0xFF6
  2139                           tablat	equ	0xFF5
  2140                           postinc0	equ	0xFEE
  2141                           wreg	equ	0xFE8
  2142                           postdec1	equ	0xFE5
  2143                           fsr1h	equ	0xFE2
  2144                           fsr1l	equ	0xFE1
  2145                           
  2146                           	psect	bssBIGRAM
  2147  0004F0                     __pbssBIGRAM:
  2148                           	opt stack 0
  2149  0004F0                     __files:
  2150                           	opt stack 0
  2151  0004F0                     	ds	1160
  2152  000978                     __fs:
  2153                           	opt stack 0
  2154  000978                     	ds	1095
  2155                           tblptru	equ	0xFF8
  2156                           tblptrh	equ	0xFF7
  2157                           tblptrl	equ	0xFF6
  2158                           tablat	equ	0xFF5
  2159                           postinc0	equ	0xFEE
  2160                           wreg	equ	0xFE8
  2161                           postdec1	equ	0xFE5
  2162                           fsr1h	equ	0xFE2
  2163                           fsr1l	equ	0xFE1
  2164                           
  2165                           	psect	cstackBANK1
  2166  000100                     __pcstackBANK1:
  2167                           	opt stack 0
  2168  000100                     fatfs_add_file_entry@pSname:
  2169                           	opt stack 0
  2170  000100                     fl_fwrite@buffer:
  2171                           	opt stack 0
  2172  000100                     fl_fread@sectorsRead:
  2173                           	opt stack 0
  2174  000100                     fatfs_get_file_entry@short_filename:
  2175                           	opt stack 0
  2176  000100                     fatfs_list_directory_next@short_filename:
  2177                           	opt stack 0
  2178                           
  2179                           ; 13 bytes @ 0x0
  2180  000100                     	ds	2
  2181  000102                     _fatfs_add_file_entry$3211:
  2182                           	opt stack 0
  2183                           
  2184                           ; 2 bytes @ 0x2
  2185  000102                     	ds	1
  2186  000103                     fl_fwrite@sectorsWrote:
  2187                           	opt stack 0
  2188                           
  2189                           ; 4 bytes @ 0x3
  2190  000103                     	ds	1
  2191  000104                     fatfs_add_file_entry@dirtySector:
  2192                           	opt stack 0
  2193  000104                     fl_fread@offset:
  2194                           	opt stack 0
  2195                           
  2196                           ; 4 bytes @ 0x4
  2197  000104                     	ds	2
  2198  000106                     fatfs_add_file_entry@x:
  2199                           	opt stack 0
  2200                           
  2201                           ; 4 bytes @ 0x6
  2202  000106                     	ds	1
  2203  000107                     fl_fwrite@offset:
  2204                           	opt stack 0
  2205                           
  2206                           ; 4 bytes @ 0x7
  2207  000107                     	ds	1
  2208  000108                     fl_fread@sector:
  2209                           	opt stack 0
  2210                           
  2211                           ; 4 bytes @ 0x8
  2212  000108                     	ds	2
  2213  00010A                     fatfs_add_file_entry@recordoffset:
  2214                           	opt stack 0
  2215                           
  2216                           ; 2 bytes @ 0xA
  2217  00010A                     	ds	1
  2218  00010B                     fl_fwrite@sector:
  2219                           	opt stack 0
  2220                           
  2221                           ; 4 bytes @ 0xB
  2222  00010B                     	ds	1
  2223  00010C                     fl_fread@copyCount:
  2224                           	opt stack 0
  2225  00010C                     fatfs_add_file_entry@foundEnd:
  2226                           	opt stack 0
  2227                           
  2228                           ; 2 bytes @ 0xC
  2229  00010C                     	ds	1
  2230  00010D                     fatfs_get_file_entry@x:
  2231                           	opt stack 0
  2232  00010D                     fatfs_list_directory_next@long_filename:
  2233                           	opt stack 0
  2234                           
  2235                           ; 2 bytes @ 0xD
  2236  00010D                     	ds	1
  2237  00010E                     fatfs_add_file_entry@i:
  2238                           	opt stack 0
  2239  00010E                     fl_fread@count:
  2240                           	opt stack 0
  2241                           
  2242                           ; 2 bytes @ 0xE
  2243  00010E                     	ds	1
  2244  00010F                     fatfs_add_file_entry@checksum:
  2245                           	opt stack 0
  2246  00010F                     fatfs_get_file_entry@long_filename:
  2247                           	opt stack 0
  2248  00010F                     fatfs_list_directory_next@dotRequired:
  2249                           	opt stack 0
  2250  00010F                     fl_fwrite@length:
  2251                           	opt stack 0
  2252                           
  2253                           ; 4 bytes @ 0xF
  2254  00010F                     	ds	1
  2255  000110                     fl_fread@bytesRead:
  2256                           	opt stack 0
  2257  000110                     fatfs_add_file_entry@entryCount:
  2258                           	opt stack 0
  2259                           
  2260                           ; 2 bytes @ 0x10
  2261  000110                     	ds	1
  2262  000111                     fatfs_get_file_entry@dotRequired:
  2263                           	opt stack 0
  2264  000111                     fatfs_list_directory_next@result:
  2265                           	opt stack 0
  2266                           
  2267                           ; 2 bytes @ 0x11
  2268  000111                     	ds	1
  2269  000112                     fatfs_add_file_entry@dirOffset:
  2270                           	opt stack 0
  2271  000112                     fl_fread@file:
  2272                           	opt stack 0
  2273                           
  2274                           ; 2 bytes @ 0x12
  2275  000112                     	ds	1
  2276  000113                     fatfs_add_file_entry@item:
  2277                           	opt stack 0
  2278  000113                     fatfs_get_file_entry@recordoffset:
  2279                           	opt stack 0
  2280  000113                     fatfs_list_directory_next@recordoffset:
  2281                           	opt stack 0
  2282  000113                     fl_fwrite@bytesWritten:
  2283                           	opt stack 0
  2284                           
  2285                           ; 4 bytes @ 0x13
  2286  000113                     	ds	1
  2287  000114                     fatfs_add_file_entry@dirSector:
  2288                           	opt stack 0
  2289                           
  2290                           ; 4 bytes @ 0x14
  2291  000114                     	ds	1
  2292  000115                     fatfs_get_file_entry@item:
  2293                           	opt stack 0
  2294  000115                     fatfs_list_directory_next@item:
  2295                           	opt stack 0
  2296                           
  2297                           ; 1 bytes @ 0x15
  2298  000115                     	ds	1
  2299  000116                     fatfs_list_directory_next@i:
  2300                           	opt stack 0
  2301  000116                     fatfs_get_file_entry@directoryEntry:
  2302                           	opt stack 0
  2303                           
  2304                           ; 2 bytes @ 0x16
  2305  000116                     	ds	1
  2306  000117                     fl_fwrite@copyCount:
  2307                           	opt stack 0
  2308  000117                     fatfs_list_directory_next@lfn:
  2309                           	opt stack 0
  2310                           
  2311                           ; 52 bytes @ 0x17
  2312  000117                     	ds	1
  2313  000118                     fatfs_get_file_entry@i:
  2314                           	opt stack 0
  2315  000118                     fatfs_add_file_entry@shortEntry:
  2316                           	opt stack 0
  2317                           
  2318                           ; 32 bytes @ 0x18
  2319  000118                     	ds	1
  2320  000119                     fatfs_get_file_entry@lfn:
  2321                           	opt stack 0
  2322                           
  2323                           ; 52 bytes @ 0x19
  2324  000119                     	ds	2
  2325  00011B                     fl_fwrite@file:
  2326                           	opt stack 0
  2327                           
  2328                           ; 2 bytes @ 0x1B
  2329  00011B                     	ds	48
  2330  00014B                     fatfs_list_directory_next@directoryEntry:
  2331                           	opt stack 0
  2332                           
  2333                           ; 2 bytes @ 0x4B
  2334  00014B                     	ds	2
  2335  00014D                     __open_file@file:
  2336                           	opt stack 0
  2337  00014D                     fl_listdirectory@path:
  2338                           	opt stack 0
  2339  00014D                     __create_directory@shortFilename:
  2340                           	opt stack 0
  2341  00014D                     __create_file@shortFilename:
  2342                           	opt stack 0
  2343                           
  2344                           ; 11 bytes @ 0x4D
  2345  00014D                     	ds	2
  2346  00014F                     fl_listdirectory@dirstat:
  2347                           	opt stack 0
  2348  00014F                     __open_file@sfEntry:
  2349                           	opt stack 0
  2350                           
  2351                           ; 32 bytes @ 0x4F
  2352  00014F                     	ds	9
  2353  000158                     fl_listdirectory@dirent:
  2354                           	opt stack 0
  2355  000158                     __create_directory@sfEntry:
  2356                           	opt stack 0
  2357  000158                     __create_file@sfEntry:
  2358                           	opt stack 0
  2359                           
  2360                           ; 32 bytes @ 0x58
  2361  000158                     	ds	32
  2362  000178                     __create_directory@i:
  2363                           	opt stack 0
  2364  000178                     __create_file@tailNum:
  2365                           	opt stack 0
  2366                           
  2367                           ; 2 bytes @ 0x78
  2368  000178                     	ds	2
  2369  00017A                     __create_directory@tailNum:
  2370                           	opt stack 0
  2371  00017A                     __create_file@file:
  2372                           	opt stack 0
  2373                           
  2374                           ; 2 bytes @ 0x7A
  2375  00017A                     	ds	2
  2376  00017C                     ??_fl_fopen:
  2377  00017C                     __create_directory@file:
  2378                           	opt stack 0
  2379                           
  2380                           ; 2 bytes @ 0x7C
  2381  00017C                     	ds	2
  2382  00017E                     fl_fopen@i:
  2383                           	opt stack 0
  2384                           
  2385                           ; 2 bytes @ 0x7E
  2386  00017E                     	ds	2
  2387  000180                     fl_fopen@file:
  2388                           	opt stack 0
  2389                           
  2390                           ; 2 bytes @ 0x80
  2391  000180                     	ds	2
  2392  000182                     fl_fopen@flags:
  2393                           	opt stack 0
  2394                           
  2395                           ; 1 bytes @ 0x82
  2396  000182                     	ds	1
  2397  000183                     ??_File_append:
  2398  000183                     ?_fl_remove:
  2399                           	opt stack 0
  2400  000183                     fl_remove@filename:
  2401                           	opt stack 0
  2402                           
  2403                           ; 2 bytes @ 0x83
  2404  000183                     	ds	2
  2405  000185                     fl_remove@res:
  2406                           	opt stack 0
  2407                           
  2408                           ; 2 bytes @ 0x85
  2409  000185                     	ds	2
  2410  000187                     fl_remove@file:
  2411                           	opt stack 0
  2412                           
  2413                           ; 2 bytes @ 0x87
  2414  000187                     	ds	2
  2415  000189                     ??_File_write:
  2416                           
  2417                           ; 0 bytes @ 0x89
  2418  000189                     	ds	1
  2419  00018A                     ??_main:
  2420                           
  2421                           ; 0 bytes @ 0x8A
  2422  00018A                     	ds	1
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           postinc0	equ	0xFEE
  2428                           wreg	equ	0xFE8
  2429                           postdec1	equ	0xFE5
  2430                           fsr1h	equ	0xFE2
  2431                           fsr1l	equ	0xFE1
  2432                           
  2433                           	psect	cstackBANK0
  2434  000080                     __pcstackBANK0:
  2435                           	opt stack 0
  2436  000080                     ?_fatfs_free_cluster_chain:
  2437                           	opt stack 0
  2438  000080                     ?_fatfs_sector_reader:
  2439                           	opt stack 0
  2440  000080                     ?_fatfs_fat_add_cluster_to_chain:
  2441                           	opt stack 0
  2442  000080                     ?__read_sectors:
  2443                           	opt stack 0
  2444  000080                     fatfs_sector_reader@fs:
  2445                           	opt stack 0
  2446  000080                     __read_sectors@file:
  2447                           	opt stack 0
  2448  000080                     fatfs_free_cluster_chain@fs:
  2449                           	opt stack 0
  2450  000080                     fatfs_fat_add_cluster_to_chain@fs:
  2451                           	opt stack 0
  2452  000080                     fatfs_find_blank_cluster@nextcluster:
  2453                           	opt stack 0
  2454                           
  2455                           ; 4 bytes @ 0x0
  2456  000080                     	ds	2
  2457  000082                     fatfs_sector_reader@start_cluster:
  2458                           	opt stack 0
  2459  000082                     __read_sectors@offset:
  2460                           	opt stack 0
  2461  000082                     fatfs_free_cluster_chain@start_cluster:
  2462                           	opt stack 0
  2463  000082                     fatfs_fat_add_cluster_to_chain@start_cluster:
  2464                           	opt stack 0
  2465                           
  2466                           ; 4 bytes @ 0x2
  2467  000082                     	ds	2
  2468  000084                     fatfs_find_blank_cluster@fat_sector_offset:
  2469                           	opt stack 0
  2470                           
  2471                           ; 4 bytes @ 0x4
  2472  000084                     	ds	2
  2473  000086                     __read_sectors@buffer:
  2474                           	opt stack 0
  2475  000086                     fatfs_sector_reader@offset:
  2476                           	opt stack 0
  2477  000086                     fatfs_free_cluster_chain@last_cluster:
  2478                           	opt stack 0
  2479  000086                     fatfs_fat_add_cluster_to_chain@newEntry:
  2480                           	opt stack 0
  2481                           
  2482                           ; 4 bytes @ 0x6
  2483  000086                     	ds	2
  2484  000088                     __read_sectors@count:
  2485                           	opt stack 0
  2486  000088                     fatfs_find_blank_cluster@current_cluster:
  2487                           	opt stack 0
  2488                           
  2489                           ; 4 bytes @ 0x8
  2490  000088                     	ds	2
  2491  00008A                     fatfs_sector_reader@target:
  2492                           	opt stack 0
  2493  00008A                     fatfs_free_cluster_chain@next_cluster:
  2494                           	opt stack 0
  2495  00008A                     fatfs_fat_add_cluster_to_chain@last_cluster:
  2496                           	opt stack 0
  2497                           
  2498                           ; 4 bytes @ 0xA
  2499  00008A                     	ds	2
  2500  00008C                     ??_fatfs_sector_reader:
  2501  00008C                     ??__read_sectors:
  2502  00008C                     fatfs_find_blank_cluster@position:
  2503                           	opt stack 0
  2504                           
  2505                           ; 4 bytes @ 0xC
  2506  00008C                     	ds	2
  2507  00008E                     fatfs_fat_add_cluster_to_chain@next_cluster:
  2508                           	opt stack 0
  2509                           
  2510                           ; 4 bytes @ 0xE
  2511  00008E                     	ds	2
  2512  000090                     fatfs_find_blank_cluster@pbuf:
  2513                           	opt stack 0
  2514                           
  2515                           ; 2 bytes @ 0x10
  2516  000090                     	ds	2
  2517  000092                     fatfs_add_free_space@start:
  2518                           	opt stack 0
  2519                           
  2520                           ; 4 bytes @ 0x12
  2521  000092                     	ds	3
  2522  000095                     __read_sectors@lba:
  2523                           	opt stack 0
  2524                           
  2525                           ; 4 bytes @ 0x15
  2526  000095                     	ds	1
  2527  000096                     fatfs_add_free_space@i:
  2528                           	opt stack 0
  2529                           
  2530                           ; 4 bytes @ 0x16
  2531  000096                     	ds	2
  2532  000098                     fatfs_sector_reader@sector_to_read:
  2533                           	opt stack 0
  2534                           
  2535                           ; 4 bytes @ 0x18
  2536  000098                     	ds	1
  2537  000099                     __read_sectors@nextCluster:
  2538                           	opt stack 0
  2539                           
  2540                           ; 4 bytes @ 0x19
  2541  000099                     	ds	1
  2542  00009A                     fatfs_add_free_space@nextcluster:
  2543                           	opt stack 0
  2544                           
  2545                           ; 4 bytes @ 0x1A
  2546  00009A                     	ds	2
  2547  00009C                     fatfs_sector_reader@i:
  2548                           	opt stack 0
  2549                           
  2550                           ; 4 bytes @ 0x1C
  2551  00009C                     	ds	1
  2552  00009D                     __read_sectors@Sector:
  2553                           	opt stack 0
  2554                           
  2555                           ; 4 bytes @ 0x1D
  2556  00009D                     	ds	1
  2557  00009E                     ?_fatfs_allocate_free_space:
  2558                           	opt stack 0
  2559  00009E                     ?__write_sectors:
  2560                           	opt stack 0
  2561  00009E                     __write_sectors@file:
  2562                           	opt stack 0
  2563  00009E                     fatfs_allocate_free_space@fs:
  2564                           	opt stack 0
  2565                           
  2566                           ; 2 bytes @ 0x1E
  2567  00009E                     	ds	2
  2568  0000A0                     fatfs_allocate_free_space@newFile:
  2569                           	opt stack 0
  2570  0000A0                     fatfs_sector_reader@cluster_to_read:
  2571                           	opt stack 0
  2572  0000A0                     __write_sectors@offset:
  2573                           	opt stack 0
  2574                           
  2575                           ; 4 bytes @ 0x20
  2576  0000A0                     	ds	1
  2577  0000A1                     __read_sectors@i:
  2578                           	opt stack 0
  2579                           
  2580                           ; 4 bytes @ 0x21
  2581  0000A1                     	ds	1
  2582  0000A2                     fatfs_allocate_free_space@startCluster:
  2583                           	opt stack 0
  2584                           
  2585                           ; 2 bytes @ 0x22
  2586  0000A2                     	ds	2
  2587  0000A4                     __write_sectors@buf:
  2588                           	opt stack 0
  2589  0000A4                     fatfs_sector_reader@lba:
  2590                           	opt stack 0
  2591  0000A4                     fatfs_allocate_free_space@size:
  2592                           	opt stack 0
  2593                           
  2594                           ; 4 bytes @ 0x24
  2595  0000A4                     	ds	1
  2596  0000A5                     __read_sectors@Cluster:
  2597                           	opt stack 0
  2598                           
  2599                           ; 4 bytes @ 0x25
  2600  0000A5                     	ds	2
  2601  0000A7                     __write_sectors@count:
  2602                           	opt stack 0
  2603                           
  2604                           ; 4 bytes @ 0x27
  2605  0000A7                     	ds	1
  2606  0000A8                     ??_fatfs_allocate_free_space:
  2607  0000A8                     fatfs_sector_reader@cluster_chain:
  2608                           	opt stack 0
  2609                           
  2610                           ; 4 bytes @ 0x28
  2611  0000A8                     	ds	1
  2612  0000A9                     __read_sectors@ClusterIdx:
  2613                           	opt stack 0
  2614                           
  2615                           ; 4 bytes @ 0x29
  2616  0000A9                     	ds	2
  2617  0000AB                     ??__write_sectors:
  2618                           
  2619                           ; 0 bytes @ 0x2B
  2620  0000AB                     	ds	1
  2621  0000AC                     ?_fatfs_sfn_exists:
  2622                           	opt stack 0
  2623  0000AC                     ?_fatfs_mark_file_deleted:
  2624                           	opt stack 0
  2625  0000AC                     ?_fatfs_list_directory_next:
  2626                           	opt stack 0
  2627  0000AC                     ?_fatfs_find_free_dir_offset:
  2628                           	opt stack 0
  2629  0000AC                     ?_fatfs_get_file_entry:
  2630                           	opt stack 0
  2631  0000AC                     fatfs_get_file_entry@fs:
  2632                           	opt stack 0
  2633  0000AC                     fatfs_sfn_exists@fs:
  2634                           	opt stack 0
  2635  0000AC                     fatfs_update_file_length@fs:
  2636                           	opt stack 0
  2637  0000AC                     fatfs_mark_file_deleted@fs:
  2638                           	opt stack 0
  2639  0000AC                     fatfs_list_directory_next@fs:
  2640                           	opt stack 0
  2641  0000AC                     fatfs_find_free_dir_offset@fs:
  2642                           	opt stack 0
  2643                           
  2644                           ; 2 bytes @ 0x2C
  2645  0000AC                     	ds	2
  2646  0000AE                     fatfs_list_directory_next@dirls:
  2647                           	opt stack 0
  2648  0000AE                     fatfs_get_file_entry@Cluster:
  2649                           	opt stack 0
  2650  0000AE                     fatfs_sfn_exists@Cluster:
  2651                           	opt stack 0
  2652  0000AE                     fatfs_update_file_length@Cluster:
  2653                           	opt stack 0
  2654  0000AE                     fatfs_mark_file_deleted@Cluster:
  2655                           	opt stack 0
  2656  0000AE                     fatfs_find_free_dir_offset@dirCluster:
  2657                           	opt stack 0
  2658                           
  2659                           ; 4 bytes @ 0x2E
  2660  0000AE                     	ds	2
  2661  0000B0                     fatfs_list_directory_next@entry:
  2662                           	opt stack 0
  2663  0000B0                     fatfs_allocate_free_space@clusterSize:
  2664                           	opt stack 0
  2665                           
  2666                           ; 4 bytes @ 0x30
  2667  0000B0                     	ds	2
  2668  0000B2                     ??_fatfs_list_directory_next:
  2669  0000B2                     fatfs_get_file_entry@name_to_find:
  2670                           	opt stack 0
  2671  0000B2                     fatfs_sfn_exists@shortname:
  2672                           	opt stack 0
  2673  0000B2                     fatfs_update_file_length@shortname:
  2674                           	opt stack 0
  2675  0000B2                     fatfs_mark_file_deleted@shortname:
  2676                           	opt stack 0
  2677  0000B2                     fatfs_find_free_dir_offset@entryCount:
  2678                           	opt stack 0
  2679                           
  2680                           ; 2 bytes @ 0x32
  2681  0000B2                     	ds	2
  2682  0000B4                     ??_fatfs_sfn_exists:
  2683  0000B4                     ??_fatfs_mark_file_deleted:
  2684  0000B4                     fatfs_get_file_entry@sfEntry:
  2685                           	opt stack 0
  2686  0000B4                     fatfs_find_free_dir_offset@pSector:
  2687                           	opt stack 0
  2688  0000B4                     fatfs_update_file_length@fileLength:
  2689                           	opt stack 0
  2690  0000B4                     __write_sectors@lba:
  2691                           	opt stack 0
  2692  0000B4                     fatfs_allocate_free_space@clusterCount:
  2693                           	opt stack 0
  2694                           
  2695                           ; 4 bytes @ 0x34
  2696  0000B4                     	ds	2
  2697  0000B6                     ??_fatfs_get_file_entry:
  2698  0000B6                     fatfs_sfn_exists@x:
  2699                           	opt stack 0
  2700  0000B6                     fatfs_find_free_dir_offset@pOffset:
  2701                           	opt stack 0
  2702                           
  2703                           ; 2 bytes @ 0x36
  2704  0000B6                     	ds	2
  2705  0000B8                     ??_fatfs_update_file_length:
  2706  0000B8                     ??_fatfs_find_free_dir_offset:
  2707  0000B8                     ?__open_directory:
  2708                           	opt stack 0
  2709  0000B8                     fatfs_sfn_exists@recordoffset:
  2710                           	opt stack 0
  2711  0000B8                     fatfs_mark_file_deleted@x:
  2712                           	opt stack 0
  2713  0000B8                     __open_directory@path:
  2714                           	opt stack 0
  2715  0000B8                     __write_sectors@TotalWriteCount:
  2716                           	opt stack 0
  2717  0000B8                     fatfs_allocate_free_space@nextcluster:
  2718                           	opt stack 0
  2719                           
  2720                           ; 4 bytes @ 0x38
  2721  0000B8                     	ds	2
  2722  0000BA                     ?_fl_readdir:
  2723                           	opt stack 0
  2724  0000BA                     fatfs_sfn_exists@item:
  2725                           	opt stack 0
  2726  0000BA                     fatfs_mark_file_deleted@recordoffset:
  2727                           	opt stack 0
  2728  0000BA                     __open_directory@pathCluster:
  2729                           	opt stack 0
  2730  0000BA                     fl_readdir@dirls:
  2731                           	opt stack 0
  2732                           
  2733                           ; 2 bytes @ 0x3A
  2734  0000BA                     	ds	1
  2735  0000BB                     fatfs_sfn_exists@directoryEntry:
  2736                           	opt stack 0
  2737                           
  2738                           ; 2 bytes @ 0x3B
  2739  0000BB                     	ds	1
  2740  0000BC                     ??__open_directory:
  2741  0000BC                     fatfs_mark_file_deleted@item:
  2742                           	opt stack 0
  2743  0000BC                     fatfs_update_file_length@x:
  2744                           	opt stack 0
  2745  0000BC                     fl_readdir@entry:
  2746                           	opt stack 0
  2747  0000BC                     fatfs_find_free_dir_offset@directoryEntry:
  2748                           	opt stack 0
  2749  0000BC                     __write_sectors@LastCluster:
  2750                           	opt stack 0
  2751                           
  2752                           ; 4 bytes @ 0x3C
  2753  0000BC                     	ds	1
  2754  0000BD                     fatfs_mark_file_deleted@directoryEntry:
  2755                           	opt stack 0
  2756                           
  2757                           ; 2 bytes @ 0x3D
  2758  0000BD                     	ds	1
  2759  0000BE                     fatfs_update_file_length@recordoffset:
  2760                           	opt stack 0
  2761  0000BE                     fl_readdir@res:
  2762                           	opt stack 0
  2763  0000BE                     fatfs_find_free_dir_offset@start_recorded:
  2764                           	opt stack 0
  2765                           
  2766                           ; 2 bytes @ 0x3E
  2767  0000BE                     	ds	2
  2768  0000C0                     fatfs_update_file_length@item:
  2769                           	opt stack 0
  2770  0000C0                     fatfs_find_free_dir_offset@i:
  2771                           	opt stack 0
  2772  0000C0                     __write_sectors@nextCluster:
  2773                           	opt stack 0
  2774  0000C0                     __open_directory@currentfolder:
  2775                           	opt stack 0
  2776                           
  2777                           ; 10 bytes @ 0x40
  2778  0000C0                     	ds	1
  2779  0000C1                     fatfs_update_file_length@directoryEntry:
  2780                           	opt stack 0
  2781  0000C1                     fatfs_find_free_dir_offset@newCluster:
  2782                           	opt stack 0
  2783                           
  2784                           ; 4 bytes @ 0x41
  2785  0000C1                     	ds	3
  2786  0000C4                     __write_sectors@SectorNumber:
  2787                           	opt stack 0
  2788                           
  2789                           ; 4 bytes @ 0x44
  2790  0000C4                     	ds	1
  2791  0000C5                     fatfs_find_free_dir_offset@recordoffset:
  2792                           	opt stack 0
  2793                           
  2794                           ; 2 bytes @ 0x45
  2795  0000C5                     	ds	2
  2796  0000C7                     fatfs_find_free_dir_offset@x:
  2797                           	opt stack 0
  2798                           
  2799                           ; 2 bytes @ 0x47
  2800  0000C7                     	ds	1
  2801  0000C8                     __write_sectors@i:
  2802                           	opt stack 0
  2803                           
  2804                           ; 4 bytes @ 0x48
  2805  0000C8                     	ds	1
  2806  0000C9                     fatfs_find_free_dir_offset@possible_spaces:
  2807                           	opt stack 0
  2808                           
  2809                           ; 2 bytes @ 0x49
  2810  0000C9                     	ds	1
  2811  0000CA                     __open_directory@levels:
  2812                           	opt stack 0
  2813                           
  2814                           ; 2 bytes @ 0x4A
  2815  0000CA                     	ds	1
  2816  0000CB                     fatfs_find_free_dir_offset@item:
  2817                           	opt stack 0
  2818                           
  2819                           ; 1 bytes @ 0x4B
  2820  0000CB                     	ds	1
  2821  0000CC                     ?_fatfs_add_file_entry:
  2822                           	opt stack 0
  2823  0000CC                     fatfs_add_file_entry@fs:
  2824                           	opt stack 0
  2825  0000CC                     __open_directory@startcluster:
  2826                           	opt stack 0
  2827  0000CC                     __write_sectors@ClusterIdx:
  2828                           	opt stack 0
  2829                           
  2830                           ; 4 bytes @ 0x4C
  2831  0000CC                     	ds	2
  2832  0000CE                     fatfs_add_file_entry@dirCluster:
  2833                           	opt stack 0
  2834                           
  2835                           ; 4 bytes @ 0x4E
  2836  0000CE                     	ds	2
  2837  0000D0                     __open_directory@sublevel:
  2838                           	opt stack 0
  2839  0000D0                     __write_sectors@Cluster:
  2840                           	opt stack 0
  2841                           
  2842                           ; 4 bytes @ 0x50
  2843  0000D0                     	ds	2
  2844  0000D2                     fatfs_add_file_entry@filename:
  2845                           	opt stack 0
  2846  0000D2                     __open_directory@sfEntry:
  2847                           	opt stack 0
  2848                           
  2849                           ; 32 bytes @ 0x52
  2850  0000D2                     	ds	2
  2851  0000D4                     fl_fflush@f:
  2852                           	opt stack 0
  2853  0000D4                     fatfs_add_file_entry@shortfilename:
  2854                           	opt stack 0
  2855                           
  2856                           ; 2 bytes @ 0x54
  2857  0000D4                     	ds	2
  2858  0000D6                     ??_fl_fflush:
  2859  0000D6                     fatfs_add_file_entry@startCluster:
  2860                           	opt stack 0
  2861                           
  2862                           ; 4 bytes @ 0x56
  2863  0000D6                     	ds	4
  2864  0000DA                     fatfs_add_file_entry@size:
  2865                           	opt stack 0
  2866                           
  2867                           ; 4 bytes @ 0x5A
  2868  0000DA                     	ds	2
  2869  0000DC                     fl_fflush@file:
  2870                           	opt stack 0
  2871                           
  2872                           ; 2 bytes @ 0x5C
  2873  0000DC                     	ds	2
  2874  0000DE                     ?_fl_fread:
  2875                           	opt stack 0
  2876  0000DE                     ?_fl_fwrite:
  2877                           	opt stack 0
  2878  0000DE                     fl_fclose@f:
  2879                           	opt stack 0
  2880  0000DE                     fl_fread@buffer:
  2881                           	opt stack 0
  2882  0000DE                     fatfs_add_file_entry@dir:
  2883                           	opt stack 0
  2884  0000DE                     fl_fwrite@data:
  2885                           	opt stack 0
  2886                           
  2887                           ; 3 bytes @ 0x5E
  2888  0000DE                     	ds	2
  2889  0000E0                     ??_fatfs_add_file_entry:
  2890  0000E0                     fl_fclose@file:
  2891                           	opt stack 0
  2892  0000E0                     fl_fread@size:
  2893                           	opt stack 0
  2894                           
  2895                           ; 2 bytes @ 0x60
  2896  0000E0                     	ds	1
  2897  0000E1                     fl_fwrite@size:
  2898                           	opt stack 0
  2899                           
  2900                           ; 2 bytes @ 0x61
  2901  0000E1                     	ds	1
  2902  0000E2                     fl_fread@length:
  2903                           	opt stack 0
  2904                           
  2905                           ; 2 bytes @ 0x62
  2906  0000E2                     	ds	1
  2907  0000E3                     fl_fwrite@count:
  2908                           	opt stack 0
  2909                           
  2910                           ; 2 bytes @ 0x63
  2911  0000E3                     	ds	1
  2912  0000E4                     fl_fread@f:
  2913                           	opt stack 0
  2914                           
  2915                           ; 2 bytes @ 0x64
  2916  0000E4                     	ds	1
  2917  0000E5                     fl_fwrite@f:
  2918                           	opt stack 0
  2919                           
  2920                           ; 2 bytes @ 0x65
  2921  0000E5                     	ds	1
  2922  0000E6                     ??_fl_fread:
  2923                           
  2924                           ; 0 bytes @ 0x66
  2925  0000E6                     	ds	1
  2926  0000E7                     ??_fl_fwrite:
  2927                           
  2928                           ; 0 bytes @ 0x67
  2929  0000E7                     	ds	11
  2930  0000F2                     ?_fl_opendir:
  2931                           	opt stack 0
  2932  0000F2                     ?__create_directory:
  2933                           	opt stack 0
  2934  0000F2                     ?__open_file:
  2935                           	opt stack 0
  2936  0000F2                     ?__create_file:
  2937                           	opt stack 0
  2938  0000F2                     __create_directory@path:
  2939                           	opt stack 0
  2940  0000F2                     __open_file@path:
  2941                           	opt stack 0
  2942  0000F2                     __create_file@filename:
  2943                           	opt stack 0
  2944  0000F2                     fl_opendir@path:
  2945                           	opt stack 0
  2946                           
  2947                           ; 2 bytes @ 0x72
  2948  0000F2                     	ds	2
  2949  0000F4                     ??__create_directory:
  2950  0000F4                     ??__open_file:
  2951  0000F4                     ??__create_file:
  2952  0000F4                     fl_opendir@dir:
  2953                           	opt stack 0
  2954                           
  2955                           ; 2 bytes @ 0x74
  2956  0000F4                     	ds	2
  2957  0000F6                     ?_fl_fgetc:
  2958                           	opt stack 0
  2959  0000F6                     fl_fgetc@f:
  2960                           	opt stack 0
  2961  0000F6                     fl_opendir@levels:
  2962                           	opt stack 0
  2963                           
  2964                           ; 2 bytes @ 0x76
  2965  0000F6                     	ds	2
  2966  0000F8                     ?_fl_createdirectory:
  2967                           	opt stack 0
  2968  0000F8                     fl_fgetc@res:
  2969                           	opt stack 0
  2970  0000F8                     fl_createdirectory@path:
  2971                           	opt stack 0
  2972  0000F8                     fl_opendir@res:
  2973                           	opt stack 0
  2974                           
  2975                           ; 2 bytes @ 0x78
  2976  0000F8                     	ds	2
  2977  0000FA                     fl_fgetc@data:
  2978                           	opt stack 0
  2979  0000FA                     fl_createdirectory@res:
  2980                           	opt stack 0
  2981  0000FA                     fl_opendir@cluster:
  2982                           	opt stack 0
  2983                           
  2984                           ; 4 bytes @ 0x7A
  2985  0000FA                     	ds	2
  2986  0000FC                     ?_fl_fopen:
  2987                           	opt stack 0
  2988  0000FC                     fl_fopen@path:
  2989                           	opt stack 0
  2990                           
  2991                           ; 2 bytes @ 0x7C
  2992  0000FC                     	ds	2
  2993  0000FE                     fl_fopen@mode:
  2994                           	opt stack 0
  2995                           
  2996                           ; 2 bytes @ 0x7E
  2997  0000FE                     	ds	2
  2998                           tblptru	equ	0xFF8
  2999                           tblptrh	equ	0xFF7
  3000                           tblptrl	equ	0xFF6
  3001                           tablat	equ	0xFF5
  3002                           postinc0	equ	0xFEE
  3003                           wreg	equ	0xFE8
  3004                           postdec1	equ	0xFE5
  3005                           fsr1h	equ	0xFE2
  3006                           fsr1l	equ	0xFE1
  3007                           
  3008                           	psect	cstackCOMRAM
  3009  000001                     __pcstackCOMRAM:
  3010                           	opt stack 0
  3011  000001                     ?_fatfs_entry_lfn_text:
  3012                           	opt stack 0
  3013  000001                     ?_fatfs_entry_lfn_invalid:
  3014                           	opt stack 0
  3015  000001                     ?_fatfs_entry_lfn_exists:
  3016                           	opt stack 0
  3017  000001                     ?_fatfs_lfn_cache_get:
  3018                           	opt stack 0
  3019  000001                     ?_fatfs_entry_sfn_only:
  3020                           	opt stack 0
  3021  000001                     ?_strncmp:
  3022                           	opt stack 0
  3023  000001                     ?_fatfs_entry_is_dir:
  3024                           	opt stack 0
  3025  000001                     ?_fatfs_total_path_levels:
  3026                           	opt stack 0
  3027  000001                     ?_fatfs_entry_is_file:
  3028                           	opt stack 0
  3029  000001                     ?_strlen:
  3030                           	opt stack 0
  3031  000001                     ?_strcmp:
  3032                           	opt stack 0
  3033  000001                     ?_fatfs_cache_get_next_cluster:
  3034                           	opt stack 0
  3035  000001                     ?_fl_feof:
  3036                           	opt stack 0
  3037  000001                     ?_FileString_GetExtension:
  3038                           	opt stack 0
  3039  000001                     ?_FileString_TrimLength:
  3040                           	opt stack 0
  3041  000001                     ?___awdiv:
  3042                           	opt stack 0
  3043  000001                     ?___lwdiv:
  3044                           	opt stack 0
  3045  000001                     ?_fatfs_lba_of_cluster:
  3046                           	opt stack 0
  3047  000001                     ?_fatfs_get_root_cluster:
  3048                           	opt stack 0
  3049  000001                     ?___lldiv:
  3050                           	opt stack 0
  3051  000001                     ?___llmod:
  3052                           	opt stack 0
  3053  000001                     ReadBUF@u:
  3054                           	opt stack 0
  3055  000001                     ReadSPI_@Temp:
  3056                           	opt stack 0
  3057  000001                     WriteSPI_@TempVar:
  3058                           	opt stack 0
  3059  000001                     ReadUSART@data:
  3060                           	opt stack 0
  3061  000001                     WriteUSART@data:
  3062                           	opt stack 0
  3063  000001                     fatfs_lba_of_cluster@fs:
  3064                           	opt stack 0
  3065  000001                     fatfs_get_root_cluster@fs:
  3066                           	opt stack 0
  3067  000001                     fatfs_list_directory_start@fs:
  3068                           	opt stack 0
  3069  000001                     fatfs_cache_init@fs:
  3070                           	opt stack 0
  3071  000001                     fatfs_cache_get_next_cluster@fs:
  3072                           	opt stack 0
  3073  000001                     fatfs_cache_set_next_cluster@fs:
  3074                           	opt stack 0
  3075  000001                     fat_list@fat_list_init@list:
  3076                           	opt stack 0
  3077  000001                     fat_list@fat_list_remove@list:
  3078                           	opt stack 0
  3079  000001                     fat_list@fat_list_insert_after@list:
  3080                           	opt stack 0
  3081  000001                     fat_list@fat_list_insert_before@list:
  3082                           	opt stack 0
  3083  000001                     fl_fgetpos@f:
  3084                           	opt stack 0
  3085  000001                     fl_feof@f:
  3086                           	opt stack 0
  3087  000001                     fl_closedir@dir:
  3088                           	opt stack 0
  3089  000001                     fatfs_lfn_cache_entry@lfn:
  3090                           	opt stack 0
  3091  000001                     fatfs_lfn_cache_get@lfn:
  3092                           	opt stack 0
  3093  000001                     fatfs_entry_lfn_text@entry:
  3094                           	opt stack 0
  3095  000001                     fatfs_entry_lfn_invalid@entry:
  3096                           	opt stack 0
  3097  000001                     fatfs_entry_lfn_exists@lfn:
  3098                           	opt stack 0
  3099  000001                     fatfs_entry_sfn_only@entry:
  3100                           	opt stack 0
  3101  000001                     fatfs_entry_is_dir@entry:
  3102                           	opt stack 0
  3103  000001                     fatfs_entry_is_file@entry:
  3104                           	opt stack 0
  3105  000001                     fatfs_sfn_create_entry@shortfilename:
  3106                           	opt stack 0
  3107  000001                     fatfs_total_path_levels@path:
  3108                           	opt stack 0
  3109  000001                     FileString_GetExtension@str:
  3110                           	opt stack 0
  3111  000001                     FileString_TrimLength@str:
  3112                           	opt stack 0
  3113  000001                     fatfs_get_sfn_display_name@out:
  3114                           	opt stack 0
  3115  000001                     Clr_str@buffer:
  3116                           	opt stack 0
  3117  000001                     Format_string@buf_1:
  3118                           	opt stack 0
  3119  000001                     OpenUSART@spbrg:
  3120                           	opt stack 0
  3121  000001                     ___awdiv@dividend:
  3122                           	opt stack 0
  3123  000001                     ___lwdiv@dividend:
  3124                           	opt stack 0
  3125  000001                     memcpy@d1:
  3126                           	opt stack 0
  3127  000001                     memset@p1:
  3128                           	opt stack 0
  3129  000001                     strcmp@s1:
  3130                           	opt stack 0
  3131  000001                     strlen@s:
  3132                           	opt stack 0
  3133  000001                     strncmp@s1:
  3134                           	opt stack 0
  3135  000001                     strncpy@to:
  3136                           	opt stack 0
  3137  000001                     fatfs_calc_cluster_size@sectors:
  3138                           	opt stack 0
  3139  000001                     ___lldiv@dividend:
  3140                           	opt stack 0
  3141  000001                     ___llmod@dividend:
  3142                           	opt stack 0
  3143                           
  3144                           ; 4 bytes @ 0x0
  3145  000001                     	ds	1
  3146  000002                     WriteSPI_@data_out:
  3147                           	opt stack 0
  3148  000002                     Write@data:
  3149                           	opt stack 0
  3150  000002                     Read_str@buffer:
  3151                           	opt stack 0
  3152  000002                     putsUSART@data:
  3153                           	opt stack 0
  3154                           
  3155                           ; 2 bytes @ 0x1
  3156  000002                     	ds	1
  3157  000003                     ??_fatfs_entry_lfn_text:
  3158  000003                     ??_fatfs_entry_lfn_invalid:
  3159  000003                     ??_fatfs_lfn_cache_get:
  3160  000003                     ??_fatfs_entry_sfn_only:
  3161  000003                     ??_fatfs_entry_is_dir:
  3162  000003                     ??_fatfs_total_path_levels:
  3163  000003                     ??_fatfs_entry_is_file:
  3164  000003                     ??_strlen:
  3165  000003                     ??_OpenUSART:
  3166  000003                     ??_fl_feof:
  3167  000003                     ??_FileString_GetExtension:
  3168  000003                     Draw_Line@length:
  3169                           	opt stack 0
  3170  000003                     putch@byte:
  3171                           	opt stack 0
  3172  000003                     fatfs_list_directory_start@dirls:
  3173                           	opt stack 0
  3174  000003                     fatfs_cache_init@file:
  3175                           	opt stack 0
  3176  000003                     fatfs_cache_get_next_cluster@file:
  3177                           	opt stack 0
  3178  000003                     fatfs_cache_set_next_cluster@file:
  3179                           	opt stack 0
  3180  000003                     fat_list@fat_list_remove@node:
  3181                           	opt stack 0
  3182  000003                     fat_list@fat_list_insert_after@node:
  3183                           	opt stack 0
  3184  000003                     fat_list@fat_list_insert_before@node:
  3185                           	opt stack 0
  3186  000003                     fl_fgetpos@position:
  3187                           	opt stack 0
  3188  000003                     fatfs_lfn_cache_entry@entryBuffer:
  3189                           	opt stack 0
  3190  000003                     fatfs_entry_lfn_exists@entry:
  3191                           	opt stack 0
  3192  000003                     FileString_TrimLength@strLen:
  3193                           	opt stack 0
  3194  000003                     fatfs_get_sfn_display_name@in:
  3195                           	opt stack 0
  3196  000003                     Format_string@buf_2:
  3197                           	opt stack 0
  3198  000003                     ___awdiv@divisor:
  3199                           	opt stack 0
  3200  000003                     ___lwdiv@divisor:
  3201                           	opt stack 0
  3202  000003                     memset@c:
  3203                           	opt stack 0
  3204  000003                     strcmp@s2:
  3205                           	opt stack 0
  3206  000003                     strncmp@s2:
  3207                           	opt stack 0
  3208  000003                     strncpy@from:
  3209                           	opt stack 0
  3210  000003                     memcpy@s1:
  3211                           	opt stack 0
  3212  000003                     fatfs_lba_of_cluster@Cluster_Number:
  3213                           	opt stack 0
  3214  000003                     fatfs_sfn_create_entry@size:
  3215                           	opt stack 0
  3216  000003                     Command@arg:
  3217                           	opt stack 0
  3218                           
  3219                           ; 4 bytes @ 0x2
  3220  000003                     	ds	1
  3221  000004                     ??_putsUSART:
  3222  000004                     ??_Draw_Line:
  3223  000004                     Read_str@i:
  3224                           	opt stack 0
  3225                           
  3226                           ; 1 bytes @ 0x3
  3227  000004                     	ds	1
  3228  000005                     ??_fatfs_lfn_cache_entry:
  3229  000005                     ??_fatfs_entry_lfn_exists:
  3230  000005                     ??_strcmp:
  3231  000005                     ??fat_list@fat_list_remove:
  3232  000005                     ??_FileString_TrimLength:
  3233  000005                     Format_string@c:
  3234                           	opt stack 0
  3235  000005                     Read_str@data:
  3236                           	opt stack 0
  3237  000005                     ___awdiv@counter:
  3238                           	opt stack 0
  3239  000005                     fat_list@fat_list_insert_after@new_node:
  3240                           	opt stack 0
  3241  000005                     fat_list@fat_list_insert_before@new_node:
  3242                           	opt stack 0
  3243  000005                     fl_fgetpos@file:
  3244                           	opt stack 0
  3245  000005                     fatfs_calc_cluster_size@is_fat32:
  3246                           	opt stack 0
  3247  000005                     fatfs_total_path_levels@levels:
  3248                           	opt stack 0
  3249  000005                     FileString_GetExtension@dotPos:
  3250                           	opt stack 0
  3251  000005                     fatfs_get_sfn_display_name@len:
  3252                           	opt stack 0
  3253  000005                     ___lwdiv@quotient:
  3254                           	opt stack 0
  3255  000005                     memset@n:
  3256                           	opt stack 0
  3257  000005                     strlen@cp:
  3258                           	opt stack 0
  3259  000005                     strncmp@len:
  3260                           	opt stack 0
  3261  000005                     strncpy@size:
  3262                           	opt stack 0
  3263  000005                     fatfs_list_directory_start@StartCluster:
  3264                           	opt stack 0
  3265  000005                     fatfs_cache_get_next_cluster@clusterIdx:
  3266                           	opt stack 0
  3267  000005                     fatfs_cache_set_next_cluster@clusterIdx:
  3268                           	opt stack 0
  3269  000005                     ___lldiv@divisor:
  3270                           	opt stack 0
  3271  000005                     ___llmod@divisor:
  3272                           	opt stack 0
  3273                           
  3274                           ; 4 bytes @ 0x4
  3275  000005                     	ds	1
  3276  000006                     OpenUSART@config:
  3277                           	opt stack 0
  3278  000006                     ___awdiv@sign:
  3279                           	opt stack 0
  3280  000006                     Write_str@str:
  3281                           	opt stack 0
  3282  000006                     memcpy@n:
  3283                           	opt stack 0
  3284                           
  3285                           ; 2 bytes @ 0x5
  3286  000006                     	ds	1
  3287  000007                     ??_strncmp:
  3288  000007                     ??_fatfs_lba_of_cluster:
  3289  000007                     ??fat_list@fat_list_insert_after:
  3290  000007                     ??_fatfs_calc_cluster_size:
  3291  000007                     ?_fatfs_get_substring:
  3292                           	opt stack 0
  3293  000007                     ?fat_list@fat_list_pop_head:
  3294                           	opt stack 0
  3295  000007                     ?_FileString_StrCmpNoCase:
  3296                           	opt stack 0
  3297  000007                     ?_fl_ftell:
  3298                           	opt stack 0
  3299  000007                     fatfs_total_path_levels@expectedchar:
  3300                           	opt stack 0
  3301  000007                     fatfs_get_sfn_display_name@a:
  3302                           	opt stack 0
  3303  000007                     Command@CRCbits:
  3304                           	opt stack 0
  3305  000007                     Draw_Line@line:
  3306                           	opt stack 0
  3307  000007                     ConfigUSART@config_2:
  3308                           	opt stack 0
  3309  000007                     ___lwdiv@counter:
  3310                           	opt stack 0
  3311  000007                     strcmp@t0:
  3312                           	opt stack 0
  3313  000007                     fat_list@fat_list_insert_first@list:
  3314                           	opt stack 0
  3315  000007                     fat_list@fat_list_pop_head@list:
  3316                           	opt stack 0
  3317  000007                     fl_ftell@f:
  3318                           	opt stack 0
  3319  000007                     fatfs_get_substring@path:
  3320                           	opt stack 0
  3321  000007                     FileString_StrCmpNoCase@s1:
  3322                           	opt stack 0
  3323  000007                     FileString_GetExtension@strSrc:
  3324                           	opt stack 0
  3325  000007                     FileString_TrimLength@length:
  3326                           	opt stack 0
  3327  000007                     ___awdiv@quotient:
  3328                           	opt stack 0
  3329  000007                     memset@p:
  3330                           	opt stack 0
  3331  000007                     strncpy@cp:
  3332                           	opt stack 0
  3333  000007                     fatfs_sfn_create_entry@startCluster:
  3334                           	opt stack 0
  3335                           
  3336                           ; 4 bytes @ 0x6
  3337  000007                     	ds	1
  3338  000008                     ?___lwmod:
  3339                           	opt stack 0
  3340  000008                     Command@cmd:
  3341                           	opt stack 0
  3342  000008                     ConfigUSART@config_1:
  3343                           	opt stack 0
  3344  000008                     strcmp@t2:
  3345                           	opt stack 0
  3346  000008                     ___lwmod@dividend:
  3347                           	opt stack 0
  3348  000008                     memcpy@s:
  3349                           	opt stack 0
  3350                           
  3351                           ; 3 bytes @ 0x7
  3352  000008                     	ds	1
  3353  000009                     ??_SD_init:
  3354  000009                     ?_fatfs_lfn_entries_required:
  3355                           	opt stack 0
  3356  000009                     ?_media_read:
  3357                           	opt stack 0
  3358  000009                     ?_media_write:
  3359                           	opt stack 0
  3360  000009                     ___llmod@counter:
  3361                           	opt stack 0
  3362  000009                     strcmp@t1:
  3363                           	opt stack 0
  3364  000009                     fatfs_cache_get_next_cluster@pNextCluster:
  3365                           	opt stack 0
  3366  000009                     fat_list@fat_list_insert_first@node:
  3367                           	opt stack 0
  3368  000009                     fat_list@fat_list_pop_head@node:
  3369                           	opt stack 0
  3370  000009                     fatfs_lfn_cache_init@lfn:
  3371                           	opt stack 0
  3372  000009                     fatfs_lfn_entries_required@filename:
  3373                           	opt stack 0
  3374  000009                     fatfs_lfn_create_sfn@sfn_output:
  3375                           	opt stack 0
  3376  000009                     fatfs_get_substring@levelreq:
  3377                           	opt stack 0
  3378  000009                     FileString_StrCmpNoCase@s2:
  3379                           	opt stack 0
  3380  000009                     FileString_TrimLength@strSrc:
  3381                           	opt stack 0
  3382  000009                     fatfs_fat_init@fs:
  3383                           	opt stack 0
  3384  000009                     fatfs_cache_set_next_cluster@nextCluster:
  3385                           	opt stack 0
  3386  000009                     media_read@sector:
  3387                           	opt stack 0
  3388  000009                     media_write@sector:
  3389                           	opt stack 0
  3390  000009                     ___lldiv@quotient:
  3391                           	opt stack 0
  3392                           
  3393                           ; 4 bytes @ 0x8
  3394  000009                     	ds	1
  3395  00000A                     SD_init@i:
  3396                           	opt stack 0
  3397  00000A                     Check_extension@xtn:
  3398                           	opt stack 0
  3399  00000A                     ___lwmod@divisor:
  3400                           	opt stack 0
  3401                           
  3402                           ; 2 bytes @ 0x9
  3403  00000A                     	ds	1
  3404  00000B                     ??_fatfs_fat_init:
  3405  00000B                     SD_init@u:
  3406                           	opt stack 0
  3407  00000B                     fat_list@fat_list_insert_last@list:
  3408                           	opt stack 0
  3409  00000B                     fl_feof@res:
  3410                           	opt stack 0
  3411  00000B                     fatfs_lfn_cache_init@wipeTable:
  3412                           	opt stack 0
  3413  00000B                     fatfs_lfn_entries_required@length:
  3414                           	opt stack 0
  3415  00000B                     fatfs_sfn_create_entry@entry:
  3416                           	opt stack 0
  3417  00000B                     fatfs_lfn_create_sfn@filename:
  3418                           	opt stack 0
  3419  00000B                     fatfs_get_substring@output:
  3420                           	opt stack 0
  3421  00000B                     FileString_StrCmpNoCase@n:
  3422                           	opt stack 0
  3423  00000B                     memcpy@d:
  3424                           	opt stack 0
  3425  00000B                     fl_ftell@pos:
  3426                           	opt stack 0
  3427                           
  3428                           ; 4 bytes @ 0xA
  3429  00000B                     	ds	1
  3430  00000C                     Check_extension@str_1:
  3431                           	opt stack 0
  3432  00000C                     ___lwmod@counter:
  3433                           	opt stack 0
  3434                           
  3435                           ; 1 bytes @ 0xB
  3436  00000C                     	ds	1
  3437  00000D                     ??_fatfs_lfn_cache_init:
  3438  00000D                     ??_fatfs_lfn_create_sfn:
  3439  00000D                     ??_FileString_StrCmpNoCase:
  3440  00000D                     ?_printf:
  3441                           	opt stack 0
  3442  00000D                     ___lldiv@counter:
  3443                           	opt stack 0
  3444  00000D                     fat_list@fat_list_insert_last@node:
  3445                           	opt stack 0
  3446  00000D                     fl_feof@file:
  3447                           	opt stack 0
  3448  00000D                     fatfs_calc_cluster_size@i:
  3449                           	opt stack 0
  3450  00000D                     fatfs_filename_to_lfn@filename:
  3451                           	opt stack 0
  3452  00000D                     fatfs_sfn_create_entry@dir:
  3453                           	opt stack 0
  3454  00000D                     fatfs_get_substring@max_len:
  3455                           	opt stack 0
  3456  00000D                     media_read@buffer:
  3457                           	opt stack 0
  3458  00000D                     printf@f:
  3459                           	opt stack 0
  3460  00000D                     media_write@buffer:
  3461                           	opt stack 0
  3462  00000D                     Check_extension@s_1:
  3463                           	opt stack 0
  3464                           
  3465                           ; 4 bytes @ 0xC
  3466  00000D                     	ds	1
  3467  00000E                     fatfs_itoa@num:
  3468                           	opt stack 0
  3469                           
  3470                           ; 4 bytes @ 0xD
  3471  00000E                     	ds	1
  3472  00000F                     ??_fatfs_get_substring:
  3473  00000F                     ??_fl_init:
  3474  00000F                     ?__allocate_file:
  3475                           	opt stack 0
  3476  00000F                     fatfs_lfn_cache_entry@i:
  3477                           	opt stack 0
  3478  00000F                     __free_file@file:
  3479                           	opt stack 0
  3480  00000F                     fatfs_lfn_cache_init@i:
  3481                           	opt stack 0
  3482  00000F                     fatfs_filename_to_lfn@buffer:
  3483                           	opt stack 0
  3484  00000F                     fatfs_sfn_create_entry@i:
  3485                           	opt stack 0
  3486  00000F                     FileString_StrCmpNoCase@diff:
  3487                           	opt stack 0
  3488  00000F                     media_read@sector_count:
  3489                           	opt stack 0
  3490                           
  3491                           ; 4 bytes @ 0xE
  3492  00000F                     	ds	1
  3493  000010                     fatfs_lfn_cache_entry@LFNIndex:
  3494                           	opt stack 0
  3495  000010                     media_write@sector_count:
  3496                           	opt stack 0
  3497                           
  3498                           ; 4 bytes @ 0xF
  3499  000010                     	ds	1
  3500  000011                     FileString_StrCmpNoCase@a:
  3501                           	opt stack 0
  3502  000011                     __allocate_file@node:
  3503                           	opt stack 0
  3504  000011                     fatfs_filename_to_lfn@entry:
  3505                           	opt stack 0
  3506  000011                     Check_extension@s_2:
  3507                           	opt stack 0
  3508                           
  3509                           ; 4 bytes @ 0x10
  3510  000011                     	ds	1
  3511  000012                     FileString_StrCmpNoCase@b:
  3512                           	opt stack 0
  3513  000012                     fatfs_itoa@s:
  3514                           	opt stack 0
  3515  000012                     fatfs_lfn_create_sfn@ext:
  3516                           	opt stack 0
  3517                           
  3518                           ; 3 bytes @ 0x11
  3519  000012                     	ds	1
  3520  000013                     ??_media_read:
  3521  000013                     ?_fatfs_compare_names:
  3522                           	opt stack 0
  3523  000013                     fatfs_filename_to_lfn@sfnChk:
  3524                           	opt stack 0
  3525  000013                     fatfs_compare_names@strA:
  3526                           	opt stack 0
  3527  000013                     fatfs_fat_init@i:
  3528                           	opt stack 0
  3529                           
  3530                           ; 2 bytes @ 0x12
  3531  000013                     	ds	1
  3532  000014                     ??_fatfs_filename_to_lfn:
  3533  000014                     ??_fatfs_itoa:
  3534  000014                     ??_media_write:
  3535  000014                     fatfs_get_substring@i:
  3536                           	opt stack 0
  3537                           
  3538                           ; 2 bytes @ 0x13
  3539  000014                     	ds	1
  3540  000015                     ??_printf:
  3541  000015                     Check_extension@j:
  3542                           	opt stack 0
  3543  000015                     fl_init@i:
  3544                           	opt stack 0
  3545  000015                     fatfs_lfn_create_sfn@len:
  3546                           	opt stack 0
  3547  000015                     fatfs_compare_names@strB:
  3548                           	opt stack 0
  3549                           
  3550                           ; 2 bytes @ 0x14
  3551  000015                     	ds	1
  3552  000016                     fatfs_get_substring@pathlen:
  3553                           	opt stack 0
  3554  000016                     Switch@exit:
  3555                           	opt stack 0
  3556                           
  3557                           ; 5 bytes @ 0x15
  3558  000016                     	ds	1
  3559  000017                     ??_fatfs_compare_names:
  3560  000017                     printf@idx:
  3561                           	opt stack 0
  3562  000017                     fl_fseek@f:
  3563                           	opt stack 0
  3564  000017                     fatfs_lfn_create_sfn@pos:
  3565                           	opt stack 0
  3566  000017                     media_read@Start_Addr:
  3567                           	opt stack 0
  3568                           
  3569                           ; 4 bytes @ 0x16
  3570  000017                     	ds	1
  3571  000018                     printf@prec:
  3572                           	opt stack 0
  3573  000018                     fatfs_get_substring@levels:
  3574                           	opt stack 0
  3575  000018                     media_write@Start_Addr:
  3576                           	opt stack 0
  3577  000018                     fatfs_itoa@digits:
  3578                           	opt stack 0
  3579                           
  3580                           ; 17 bytes @ 0x17
  3581  000018                     	ds	1
  3582  000019                     fatfs_lfn_create_sfn@dotPos:
  3583                           	opt stack 0
  3584  000019                     fatfs_compare_names@ext2:
  3585                           	opt stack 0
  3586  000019                     printf@ap:
  3587                           	opt stack 0
  3588  000019                     fl_fseek@offset:
  3589                           	opt stack 0
  3590                           
  3591                           ; 4 bytes @ 0x18
  3592  000019                     	ds	1
  3593  00001A                     fatfs_get_substring@expectedchar:
  3594                           	opt stack 0
  3595  00001A                     fatfs_filename_to_lfn@nameIndexes:
  3596                           	opt stack 0
  3597                           
  3598                           ; 10 bytes @ 0x19
  3599  00001A                     	ds	1
  3600  00001B                     Switch@c:
  3601                           	opt stack 0
  3602  00001B                     printf@flag:
  3603                           	opt stack 0
  3604  00001B                     fatfs_lfn_create_sfn@i:
  3605                           	opt stack 0
  3606  00001B                     fatfs_get_substring@copypnt:
  3607                           	opt stack 0
  3608  00001B                     fatfs_compare_names@file2Len:
  3609                           	opt stack 0
  3610  00001B                     media_read@i:
  3611                           	opt stack 0
  3612                           
  3613                           ; 4 bytes @ 0x1A
  3614  00001B                     	ds	1
  3615  00001C                     media_write@i:
  3616                           	opt stack 0
  3617  00001C                     printf@_val:
  3618                           	opt stack 0
  3619                           
  3620                           ; 4 bytes @ 0x1B
  3621  00001C                     	ds	1
  3622  00001D                     ?_fatfs_split_path:
  3623                           	opt stack 0
  3624  00001D                     fl_fseek@origin:
  3625                           	opt stack 0
  3626  00001D                     fatfs_split_path@full_path:
  3627                           	opt stack 0
  3628  00001D                     fatfs_compare_names@ext1:
  3629                           	opt stack 0
  3630                           
  3631                           ; 2 bytes @ 0x1C
  3632  00001D                     	ds	2
  3633  00001F                     ??_fl_fseek:
  3634  00001F                     ?_fatfs_init:
  3635                           	opt stack 0
  3636  00001F                     ?_fatfs_sector_read:
  3637                           	opt stack 0
  3638  00001F                     fatfs_init@fs:
  3639                           	opt stack 0
  3640  00001F                     fatfs_sector_read@fs:
  3641                           	opt stack 0
  3642  00001F                     fatfs_split_path@path:
  3643                           	opt stack 0
  3644  00001F                     fatfs_compare_names@file1Len:
  3645                           	opt stack 0
  3646                           
  3647                           ; 2 bytes @ 0x1E
  3648  00001F                     	ds	1
  3649  000020                     ?_fatfs_sector_write:
  3650                           	opt stack 0
  3651  000020                     ?_fatfs_write_sector:
  3652                           	opt stack 0
  3653  000020                     ?_fatfs_erase_sectors:
  3654                           	opt stack 0
  3655  000020                     ?_fatfs_create_boot_sector:
  3656                           	opt stack 0
  3657  000020                     ?_fatfs_create_fsinfo_sector:
  3658                           	opt stack 0
  3659  000020                     ?_fatfs_erase_fat:
  3660                           	opt stack 0
  3661  000020                     ?_fatfs_fat_writeback:
  3662                           	opt stack 0
  3663  000020                     printf@c:
  3664                           	opt stack 0
  3665  000020                     fatfs_sector_write@fs:
  3666                           	opt stack 0
  3667  000020                     fatfs_write_sector@fs:
  3668                           	opt stack 0
  3669  000020                     fatfs_erase_sectors@fs:
  3670                           	opt stack 0
  3671  000020                     fatfs_create_boot_sector@fs:
  3672                           	opt stack 0
  3673  000020                     fatfs_create_fsinfo_sector@fs:
  3674                           	opt stack 0
  3675  000020                     fatfs_erase_fat@fs:
  3676                           	opt stack 0
  3677  000020                     fatfs_fat_writeback@fs:
  3678                           	opt stack 0
  3679                           
  3680                           ; 2 bytes @ 0x1F
  3681  000020                     	ds	1
  3682  000021                     ??_fatfs_init:
  3683  000021                     fatfs_split_path@max_path:
  3684                           	opt stack 0
  3685  000021                     fatfs_compare_names@ext2Pos:
  3686                           	opt stack 0
  3687  000021                     fatfs_sector_read@lba:
  3688                           	opt stack 0
  3689                           
  3690                           ; 4 bytes @ 0x20
  3691  000021                     	ds	1
  3692  000022                     fatfs_erase_fat@is_fat32:
  3693                           	opt stack 0
  3694  000022                     fatfs_fat_writeback@pcur:
  3695                           	opt stack 0
  3696  000022                     fatfs_sector_write@lba:
  3697                           	opt stack 0
  3698  000022                     fatfs_write_sector@cluster:
  3699                           	opt stack 0
  3700  000022                     fatfs_erase_sectors@lba:
  3701                           	opt stack 0
  3702  000022                     fatfs_create_boot_sector@boot_sector_lba:
  3703                           	opt stack 0
  3704  000022                     fatfs_create_fsinfo_sector@sector_lba:
  3705                           	opt stack 0
  3706                           
  3707                           ; 4 bytes @ 0x21
  3708  000022                     	ds	1
  3709  000023                     fatfs_split_path@filename:
  3710                           	opt stack 0
  3711  000023                     fatfs_compare_names@ext1Pos:
  3712                           	opt stack 0
  3713                           
  3714                           ; 2 bytes @ 0x22
  3715  000023                     	ds	1
  3716  000024                     ??_fatfs_erase_fat:
  3717  000024                     ??_fatfs_fat_writeback:
  3718  000024                     fatfs_filename_to_lfn@entriesRequired:
  3719                           	opt stack 0
  3720                           
  3721                           ; 2 bytes @ 0x23
  3722  000024                     	ds	1
  3723  000025                     ?__check_file_open:
  3724                           	opt stack 0
  3725  000025                     fatfs_sector_read@target:
  3726                           	opt stack 0
  3727  000025                     __check_file_open@file:
  3728                           	opt stack 0
  3729  000025                     fatfs_split_path@max_filename:
  3730                           	opt stack 0
  3731                           
  3732                           ; 2 bytes @ 0x24
  3733  000025                     	ds	1
  3734  000026                     ??_fatfs_create_fsinfo_sector:
  3735  000026                     fatfs_erase_sectors@count:
  3736                           	opt stack 0
  3737  000026                     _fatfs_filename_to_lfn$2422:
  3738                           	opt stack 0
  3739  000026                     fatfs_sector_write@target:
  3740                           	opt stack 0
  3741  000026                     fatfs_write_sector@sector:
  3742                           	opt stack 0
  3743  000026                     fatfs_create_boot_sector@vol_sectors:
  3744                           	opt stack 0
  3745                           
  3746                           ; 4 bytes @ 0x25
  3747  000026                     	ds	1
  3748  000027                     ??_fatfs_split_path:
  3749  000027                     __check_file_open@openFile:
  3750                           	opt stack 0
  3751  000027                     fl_fseek@res:
  3752                           	opt stack 0
  3753  000027                     fatfs_sector_read@count:
  3754                           	opt stack 0
  3755                           
  3756                           ; 4 bytes @ 0x26
  3757  000027                     	ds	1
  3758  000028                     ??_fatfs_erase_sectors:
  3759  000028                     fatfs_filename_to_lfn@length:
  3760                           	opt stack 0
  3761                           
  3762                           ; 2 bytes @ 0x27
  3763  000028                     	ds	1
  3764  000029                     __check_file_open@node:
  3765                           	opt stack 0
  3766  000029                     fl_fseek@file:
  3767                           	opt stack 0
  3768  000029                     fatfs_sector_write@count:
  3769                           	opt stack 0
  3770  000029                     fatfs_itoa@outbuf:
  3771                           	opt stack 0
  3772                           
  3773                           ; 12 bytes @ 0x28
  3774  000029                     	ds	1
  3775  00002A                     fatfs_write_sector@target:
  3776                           	opt stack 0
  3777  00002A                     fatfs_create_boot_sector@name:
  3778                           	opt stack 0
  3779  00002A                     fatfs_filename_to_lfn@start:
  3780                           	opt stack 0
  3781                           
  3782                           ; 2 bytes @ 0x29
  3783  00002A                     	ds	1
  3784  00002B                     ??_fatfs_sector_read:
  3785  00002B                     fatfs_split_path@levels:
  3786                           	opt stack 0
  3787                           
  3788                           ; 2 bytes @ 0x2A
  3789  00002B                     	ds	1
  3790  00002C                     ??_fatfs_write_sector:
  3791  00002C                     fatfs_create_boot_sector@is_fat32:
  3792                           	opt stack 0
  3793  00002C                     fatfs_filename_to_lfn@i:
  3794                           	opt stack 0
  3795  00002C                     fatfs_fat_writeback@sectors:
  3796                           	opt stack 0
  3797                           
  3798                           ; 4 bytes @ 0x2B
  3799  00002C                     	ds	1
  3800  00002D                     ??_fatfs_sector_write:
  3801  00002D                     fatfs_split_path@strindex:
  3802                           	opt stack 0
  3803                           
  3804                           ; 2 bytes @ 0x2C
  3805  00002D                     	ds	1
  3806  00002E                     ??_fatfs_create_boot_sector:
  3807                           
  3808                           ; 0 bytes @ 0x2D
  3809  00002E                     	ds	2
  3810  000030                     fatfs_erase_sectors@i:
  3811                           	opt stack 0
  3812  000030                     fatfs_fat_writeback@offset:
  3813                           	opt stack 0
  3814                           
  3815                           ; 4 bytes @ 0x2F
  3816  000030                     	ds	1
  3817  000031                     fatfs_erase_fat@i:
  3818                           	opt stack 0
  3819                           
  3820                           ; 4 bytes @ 0x30
  3821  000031                     	ds	3
  3822  000034                     ?_fatfs_fat_read_sector:
  3823                           	opt stack 0
  3824  000034                     fatfs_fat_read_sector@fs:
  3825                           	opt stack 0
  3826  000034                     fatfs_fat_purge@fs:
  3827                           	opt stack 0
  3828                           
  3829                           ; 2 bytes @ 0x33
  3830  000034                     	ds	1
  3831  000035                     fatfs_itoa@cp:
  3832                           	opt stack 0
  3833                           
  3834                           ; 2 bytes @ 0x34
  3835  000035                     	ds	1
  3836  000036                     fatfs_fat_purge@pcur:
  3837                           	opt stack 0
  3838  000036                     fatfs_create_boot_sector@total_clusters:
  3839                           	opt stack 0
  3840  000036                     fatfs_fat_read_sector@sector:
  3841                           	opt stack 0
  3842                           
  3843                           ; 4 bytes @ 0x35
  3844  000036                     	ds	1
  3845  000037                     fatfs_lfn_generate_tail@sfn_output:
  3846                           	opt stack 0
  3847                           
  3848                           ; 2 bytes @ 0x36
  3849  000037                     	ds	1
  3850  000038                     fatfs_write_sector@lba_440:
  3851                           	opt stack 0
  3852                           
  3853                           ; 4 bytes @ 0x37
  3854  000038                     	ds	1
  3855  000039                     fatfs_lfn_generate_tail@sfn_input:
  3856                           	opt stack 0
  3857                           
  3858                           ; 2 bytes @ 0x38
  3859  000039                     	ds	1
  3860  00003A                     ??_fatfs_fat_read_sector:
  3861  00003A                     fatfs_create_boot_sector@i:
  3862                           	opt stack 0
  3863                           
  3864                           ; 2 bytes @ 0x39
  3865  00003A                     	ds	1
  3866  00003B                     fatfs_lfn_generate_tail@tailNum:
  3867                           	opt stack 0
  3868                           
  3869                           ; 4 bytes @ 0x3A
  3870  00003B                     	ds	1
  3871  00003C                     ?_fatfs_format_fat16:
  3872                           	opt stack 0
  3873  00003C                     ?_fatfs_format_fat32:
  3874                           	opt stack 0
  3875  00003C                     fatfs_format_fat16@fs:
  3876                           	opt stack 0
  3877  00003C                     fatfs_format_fat32@fs:
  3878                           	opt stack 0
  3879  00003C                     fatfs_write_sector@lba:
  3880                           	opt stack 0
  3881                           
  3882                           ; 4 bytes @ 0x3B
  3883  00003C                     	ds	1
  3884  00003D                     fatfs_init@root_dir_sectors:
  3885                           	opt stack 0
  3886                           
  3887                           ; 4 bytes @ 0x3C
  3888  00003D                     	ds	1
  3889  00003E                     fatfs_format_fat16@volume_sectors:
  3890                           	opt stack 0
  3891  00003E                     fatfs_format_fat32@volume_sectors:
  3892                           	opt stack 0
  3893                           
  3894                           ; 4 bytes @ 0x3D
  3895  00003E                     	ds	1
  3896  00003F                     ??_fatfs_lfn_generate_tail:
  3897                           
  3898                           ; 0 bytes @ 0x3E
  3899  00003F                     	ds	2
  3900  000041                     fatfs_init@data_sectors:
  3901                           	opt stack 0
  3902  000041                     fatfs_lfn_generate_tail@tail_str:
  3903                           	opt stack 0
  3904                           
  3905                           ; 12 bytes @ 0x40
  3906  000041                     	ds	1
  3907  000042                     fatfs_format_fat16@name:
  3908                           	opt stack 0
  3909  000042                     fatfs_format_fat32@name:
  3910                           	opt stack 0
  3911  000042                     fatfs_fat_read_sector@last:
  3912                           	opt stack 0
  3913                           
  3914                           ; 2 bytes @ 0x41
  3915  000042                     	ds	2
  3916  000044                     ??_fatfs_format_fat16:
  3917  000044                     ??_fatfs_format_fat32:
  3918  000044                     fatfs_fat_read_sector@pcur:
  3919                           	opt stack 0
  3920                           
  3921                           ; 2 bytes @ 0x43
  3922  000044                     	ds	1
  3923  000045                     fatfs_init@FATSz:
  3924                           	opt stack 0
  3925                           
  3926                           ; 4 bytes @ 0x44
  3927  000045                     	ds	1
  3928  000046                     ?_fatfs_find_blank_cluster:
  3929                           	opt stack 0
  3930  000046                     ?_fatfs_find_next_cluster:
  3931                           	opt stack 0
  3932  000046                     fatfs_find_next_cluster@fs:
  3933                           	opt stack 0
  3934  000046                     fatfs_set_fs_info_next_free_cluster@fs:
  3935                           	opt stack 0
  3936  000046                     fatfs_find_blank_cluster@fs:
  3937                           	opt stack 0
  3938  000046                     fatfs_fat_set_cluster@fs:
  3939                           	opt stack 0
  3940                           
  3941                           ; 2 bytes @ 0x45
  3942  000046                     	ds	2
  3943  000048                     fatfs_find_next_cluster@current_cluster:
  3944                           	opt stack 0
  3945  000048                     fatfs_set_fs_info_next_free_cluster@newValue:
  3946                           	opt stack 0
  3947  000048                     fatfs_find_blank_cluster@start_cluster:
  3948                           	opt stack 0
  3949  000048                     fatfs_fat_set_cluster@cluster:
  3950                           	opt stack 0
  3951                           
  3952                           ; 4 bytes @ 0x47
  3953  000048                     	ds	1
  3954  000049                     fatfs_init@total_sectors:
  3955                           	opt stack 0
  3956                           
  3957                           ; 4 bytes @ 0x48
  3958  000049                     	ds	3
  3959  00004C                     ??_fatfs_find_next_cluster:
  3960  00004C                     ??_fatfs_set_fs_info_next_free_cluster:
  3961  00004C                     fatfs_find_blank_cluster@free_cluster:
  3962                           	opt stack 0
  3963  00004C                     fatfs_fat_set_cluster@next_cluster:
  3964                           	opt stack 0
  3965                           
  3966                           ; 4 bytes @ 0x4B
  3967  00004C                     	ds	1
  3968  00004D                     fatfs_lfn_generate_tail@tail_chars:
  3969                           	opt stack 0
  3970  00004D                     fatfs_init@count_of_clusters:
  3971                           	opt stack 0
  3972                           
  3973                           ; 4 bytes @ 0x4C
  3974  00004D                     	ds	1
  3975  00004E                     ??_fatfs_find_blank_cluster:
  3976                           
  3977                           ; 0 bytes @ 0x4D
  3978  00004E                     	ds	2
  3979  000050                     ??_fatfs_fat_set_cluster:
  3980                           
  3981                           ; 0 bytes @ 0x4F
  3982  000050                     	ds	1
  3983  000051                     fatfs_init@reserved_sectors:
  3984                           	opt stack 0
  3985                           
  3986                           ; 2 bytes @ 0x50
  3987  000051                     	ds	1
  3988  000052                     fatfs_set_fs_info_next_free_cluster@pbuf:
  3989                           	opt stack 0
  3990                           
  3991                           ; 2 bytes @ 0x51
  3992  000052                     	ds	1
  3993  000053                     fatfs_init@valid_partition:
  3994                           	opt stack 0
  3995                           
  3996                           ; 1 bytes @ 0x52
  3997  000053                     	ds	1
  3998  000054                     fatfs_init@num_of_fats:
  3999                           	opt stack 0
  4000                           
  4001                           ; 1 bytes @ 0x53
  4002  000054                     	ds	1
  4003  000055                     ?_fl_attach_media:
  4004                           	opt stack 0
  4005  000055                     fl_attach_media@rd:
  4006                           	opt stack 0
  4007                           
  4008                           ; 2 bytes @ 0x54
  4009  000055                     	ds	2
  4010  000057                     fl_attach_media@wr:
  4011                           	opt stack 0
  4012                           
  4013                           ; 2 bytes @ 0x56
  4014  000057                     	ds	1
  4015  000058                     fatfs_fat_set_cluster@fat_sector_offset:
  4016                           	opt stack 0
  4017                           
  4018                           ; 4 bytes @ 0x57
  4019  000058                     	ds	1
  4020  000059                     ?_fatfs_format:
  4021                           	opt stack 0
  4022  000059                     fl_attach_media@res:
  4023                           	opt stack 0
  4024  000059                     fatfs_format@fs:
  4025                           	opt stack 0
  4026                           
  4027                           ; 2 bytes @ 0x58
  4028  000059                     	ds	2
  4029  00005B                     fatfs_format@volume_sectors:
  4030                           	opt stack 0
  4031                           
  4032                           ; 4 bytes @ 0x5A
  4033  00005B                     	ds	1
  4034  00005C                     fatfs_fat_set_cluster@position:
  4035                           	opt stack 0
  4036                           
  4037                           ; 4 bytes @ 0x5B
  4038  00005C                     	ds	3
  4039  00005F                     fatfs_format@name:
  4040                           	opt stack 0
  4041                           
  4042                           ; 2 bytes @ 0x5E
  4043  00005F                     	ds	1
  4044  000060                     fatfs_fat_set_cluster@pbuf:
  4045                           	opt stack 0
  4046                           
  4047                           ; 2 bytes @ 0x5F
  4048  000060                     	ds	1
  4049  000061                     ??_fatfs_format:
  4050                           
  4051                           ; 0 bytes @ 0x60
  4052  000061                     	ds	4
  4053  000065                     ?_fl_format:
  4054                           	opt stack 0
  4055  000065                     fl_format@volume_sectors:
  4056                           	opt stack 0
  4057                           
  4058                           ; 4 bytes @ 0x64
  4059  000065                     	ds	4
  4060  000069                     fl_format@name:
  4061                           	opt stack 0
  4062                           
  4063                           ; 2 bytes @ 0x68
  4064  000069                     	ds	2
  4065  00006B                     File_format@volume:
  4066                           	opt stack 0
  4067                           
  4068                           ; 4 bytes @ 0x6A
  4069  00006B                     	ds	4
  4070  00006F                     File_format@name:
  4071                           	opt stack 0
  4072                           
  4073                           ; 2 bytes @ 0x6E
  4074  00006F                     	ds	2
  4075  000071                     
  4076                           ; 0 bytes @ 0x70
  4077  000071                     	ds	1
  4078  000072                     fatfs_find_next_cluster@fat_sector_offset:
  4079                           	opt stack 0
  4080                           
  4081                           ; 4 bytes @ 0x71
  4082  000072                     	ds	2
  4083  000074                     ?_fatfs_add_free_space:
  4084                           	opt stack 0
  4085  000074                     fatfs_add_free_space@fs:
  4086                           	opt stack 0
  4087                           
  4088                           ; 2 bytes @ 0x73
  4089  000074                     	ds	2
  4090  000076                     fatfs_add_free_space@startCluster:
  4091                           	opt stack 0
  4092  000076                     fatfs_find_next_cluster@position:
  4093                           	opt stack 0
  4094                           
  4095                           ; 4 bytes @ 0x75
  4096  000076                     	ds	2
  4097  000078                     fatfs_add_free_space@clusters:
  4098                           	opt stack 0
  4099                           
  4100                           ; 4 bytes @ 0x77
  4101  000078                     	ds	2
  4102  00007A                     fatfs_find_next_cluster@nextcluster:
  4103                           	opt stack 0
  4104                           
  4105                           ; 4 bytes @ 0x79
  4106  00007A                     	ds	2
  4107  00007C                     ??_fatfs_add_free_space:
  4108                           
  4109                           ; 0 bytes @ 0x7B
  4110  00007C                     	ds	2
  4111  00007E                     fatfs_find_next_cluster@pbuf:
  4112                           	opt stack 0
  4113                           
  4114                           ; 2 bytes @ 0x7D
  4115  00007E                     	ds	2
  4116  000080                     tblptru	equ	0xFF8
  4117                           tblptrh	equ	0xFF7
  4118                           tblptrl	equ	0xFF6
  4119                           tablat	equ	0xFF5
  4120                           postinc0	equ	0xFEE
  4121                           wreg	equ	0xFE8
  4122                           postdec1	equ	0xFE5
  4123                           fsr1h	equ	0xFE2
  4124                           fsr1l	equ	0xFE1
  4125                           
  4126                           ; 0 bytes @ 0x7F
  4127 ;;
  4128 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4129 ;;
  4130 ;; *************** function _main *****************
  4131 ;; Defined at:
  4132 ;;		line 793 in file "main.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;		None
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;		None
  4137 ;; Return value:  Size  Location     Type
  4138 ;;		None               void
  4139 ;; Registers used:
  4140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;Total ram usage:        1 bytes
  4151 ;; Hardware stack levels required when called:   14
  4152 ;; This function calls:
  4153 ;;		_ConfigUSART
  4154 ;;		_File_IO
  4155 ;;		_SD_init
  4156 ;;		_Write_str
  4157 ;;		_fl_attach_media
  4158 ;;		_fl_init
  4159 ;;		_fl_listdirectory
  4160 ;;		_fl_shutdown
  4161 ;;		_spi_init
  4162 ;; This function is called by:
  4163 ;;		Startup code after reset
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text0
  4168  0054C8                     __ptext0:
  4169                           	opt stack 0
  4170  0054C8                     _main:
  4171                           	opt stack 17
  4172                           
  4173                           ;main.c: 795: ADCON1 = 0x0F;
  4174                           
  4175                           ;incstack = 0
  4176  0054C8  0E0F               	movlw	15
  4177  0054CA  6EC1               	movwf	4033,c	;volatile
  4178                           
  4179                           ;main.c: 796: CMCON |=0X07;
  4180  0054CC  0E07               	movlw	7
  4181  0054CE  12B4               	iorwf	4020,f,c	;volatile
  4182                           
  4183                           ;main.c: 797: TRISA5 = 0x00;
  4184  0054D0  9A92               	bcf	3986,5,c	;volatile
  4185                           
  4186                           ;main.c: 798: TRISE = 0x00;
  4187  0054D2  6A96               	clrf	3990,c	;volatile
  4188                           
  4189                           ;main.c: 799: LATA5 = 0x00;
  4190  0054D4  9A89               	bcf	3977,5,c	;volatile
  4191                           
  4192                           ;main.c: 800: LATE = 0x00;
  4193  0054D6  6A8D               	clrf	3981,c	;volatile
  4194                           
  4195                           ;main.c: 801: ConfigUSART(config_1, ((20000000/9600/64)-1));
  4196  0054D8  0E1F               	movlw	31
  4197  0054DA  6E07               	movwf	ConfigUSART@config_2,c
  4198  0054DC  0101               	movlb	1	; () banked
  4199  0054DE  51F6               	movf	_config_1& (0+255),w,b
  4200  0054E0  EC35  F01F         	call	_ConfigUSART
  4201                           
  4202                           ;main.c: 802: spi_init();
  4203  0054E4  EC73  F01F         	call	_spi_init	;wreg free
  4204                           
  4205                           ;main.c: 803: _delay((unsigned long)((1)*(20000000/4000.0)));
  4206  0054E8  0E07               	movlw	7
  4207  0054EA  0101               	movlb	1	; () banked
  4208  0054EC  6F8A               	movwf	??_main& (0+255),b
  4209  0054EE  0E7D               	movlw	125
  4210  0054F0                     u17357:
  4211  0054F0  2EE8               	decfsz	wreg,f,c
  4212  0054F2  D7FE               	goto	u17357
  4213  0054F4  2F8A               	decfsz	??_main& (0+255),f,b
  4214  0054F6  D7FC               	goto	u17357
  4215  0054F8  F000               	nop	
  4216                           
  4217                           ;main.c: 804: if(!SD_init())
  4218  0054FA  ECA9  F02D         	call	_SD_init	;wreg free
  4219  0054FE  0900               	iorlw	0
  4220  005500  E107               	bnz	l13685
  4221                           
  4222                           ;main.c: 805: Write_str("\n\rCARD initialized..!");
  4223  005502  0EFE               	movlw	high STR_64
  4224  005504  6E07               	movwf	Write_str@str+1,c
  4225  005506  0E9A               	movlw	low STR_64
  4226  005508  6E06               	movwf	Write_str@str,c
  4227  00550A  EC3C  F01F         	call	_Write_str	;wreg free
  4228  00550E  D006               	goto	l13687
  4229  005510                     l13685:
  4230                           
  4231                           ;main.c: 806: else
  4232                           ;main.c: 807: Write_str("\n\rCARD initialization failed..!");
  4233  005510  0EFD               	movlw	high STR_65
  4234  005512  6E07               	movwf	Write_str@str+1,c
  4235  005514  0E38               	movlw	low STR_65
  4236  005516  6E06               	movwf	Write_str@str,c
  4237  005518  EC3C  F01F         	call	_Write_str	;wreg free
  4238  00551C                     l13687:
  4239                           
  4240                           ;main.c: 808: fl_init();
  4241  00551C  EC44  F029         	call	_fl_init	;wreg free
  4242                           
  4243                           ;main.c: 809: if (fl_attach_media(media_read, media_write) != 0)
  4244  005520  0E62               	movlw	high _media_read
  4245  005522  6E56               	movwf	fl_attach_media@rd+1,c
  4246  005524  0E6E               	movlw	low _media_read
  4247  005526  6E55               	movwf	fl_attach_media@rd,c
  4248  005528  0E65               	movlw	high _media_write
  4249  00552A  6E58               	movwf	fl_attach_media@wr+1,c
  4250  00552C  0EA4               	movlw	low _media_write
  4251  00552E  6E57               	movwf	fl_attach_media@wr,c
  4252  005530  ECA1  F025         	call	_fl_attach_media	;wreg free
  4253  005534  5056               	movf	?_fl_attach_media+1,w,c
  4254  005536  1055               	iorwf	?_fl_attach_media,w,c
  4255  005538  E008               	bz	l13695
  4256                           
  4257                           ;main.c: 810: {
  4258                           ;main.c: 811: Write_str("Error: Media attach failed\n");
  4259  00553A  0EFD               	movlw	high STR_66
  4260  00553C  6E07               	movwf	Write_str@str+1,c
  4261  00553E  0E96               	movlw	low STR_66
  4262  005540  6E06               	movwf	Write_str@str,c
  4263  005542  EC3C  F01F         	call	_Write_str	;wreg free
  4264  005546  EF00  F000         	goto	start
  4265  00554A                     l13695:
  4266                           
  4267                           ;main.c: 813: }
  4268                           ;main.c: 814: fl_listdirectory("/");
  4269  00554A  0EFF               	movlw	high STR_63
  4270  00554C  0101               	movlb	1	; () banked
  4271  00554E  6F4E               	movwf	(fl_listdirectory@path+1)& (0+255),b
  4272  005550  0EF7               	movlw	low STR_63
  4273  005552  6F4D               	movwf	fl_listdirectory@path& (0+255),b
  4274  005554  EC94  F02C         	call	_fl_listdirectory	;wreg free
  4275  005558                     l1826:
  4276                           
  4277                           ;main.c: 816: File_IO();
  4278  005558  EC4B  F02B         	call	_File_IO	;wreg free
  4279                           
  4280                           ;main.c: 817: }while(1);
  4281  00555C  D7FD               	goto	l1826
  4282  00555E                     __end_of_main:
  4283                           	opt stack 0
  4284                           tblptru	equ	0xFF8
  4285                           tblptrh	equ	0xFF7
  4286                           tblptrl	equ	0xFF6
  4287                           tablat	equ	0xFF5
  4288                           postinc0	equ	0xFEE
  4289                           wreg	equ	0xFE8
  4290                           postdec1	equ	0xFE5
  4291                           fsr1h	equ	0xFE2
  4292                           fsr1l	equ	0xFE1
  4293                           
  4294 ;; *************** function _spi_init *****************
  4295 ;; Defined at:
  4296 ;;		line 36 in file "spi_1.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;		None               void
  4303 ;; Registers used:
  4304 ;;		wreg, status,2
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;Total ram usage:        0 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_main
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text1
  4324  003EE6                     __ptext1:
  4325                           	opt stack 0
  4326  003EE6                     _spi_init:
  4327                           	opt stack 30
  4328                           
  4329                           ;spi_1.c: 38: TRISCbits.TRISC4 = 1;
  4330                           
  4331                           ;incstack = 0
  4332  003EE6  8894               	bsf	3988,4,c	;volatile
  4333                           
  4334                           ;spi_1.c: 39: TRISCbits.TRISC3 = 0;
  4335  003EE8  9694               	bcf	3988,3,c	;volatile
  4336                           
  4337                           ;spi_1.c: 40: TRISBbits.TRISB4 = 0;
  4338  003EEA  9893               	bcf	3987,4,c	;volatile
  4339                           
  4340                           ;spi_1.c: 41: TRISCbits.TRISC5 = 0;
  4341  003EEC  9A94               	bcf	3988,5,c	;volatile
  4342                           
  4343                           ;spi_1.c: 42: LATBbits.LATB4 = 1;
  4344  003EEE  888A               	bsf	3978,4,c	;volatile
  4345                           
  4346                           ;spi_1.c: 43: LATCbits.LATC3 = 0;
  4347  003EF0  968B               	bcf	3979,3,c	;volatile
  4348                           
  4349                           ;spi_1.c: 44: LATCbits.LATC5 = 0;
  4350  003EF2  9A8B               	bcf	3979,5,c	;volatile
  4351                           
  4352                           ;spi_1.c: 45: SSPCON1 = 0b00100010;
  4353  003EF4  0E22               	movlw	34
  4354  003EF6  6EC6               	movwf	4038,c	;volatile
  4355                           
  4356                           ;spi_1.c: 46: SMP = 1;
  4357  003EF8  8EC7               	bsf	4039,7,c	;volatile
  4358                           
  4359                           ;spi_1.c: 47: CKE = 1;
  4360  003EFA  8CC7               	bsf	4039,6,c	;volatile
  4361                           
  4362                           ;spi_1.c: 48: CKP = 0;
  4363  003EFC  98C6               	bcf	4038,4,c	;volatile
  4364                           
  4365                           ;spi_1.c: 49: SSPEN = 1;
  4366  003EFE  8AC6               	bsf	4038,5,c	;volatile
  4367  003F00  0C22               	retlw	34
  4368  003F02                     __end_of_spi_init:
  4369                           	opt stack 0
  4370                           tblptru	equ	0xFF8
  4371                           tblptrh	equ	0xFF7
  4372                           tblptrl	equ	0xFF6
  4373                           tablat	equ	0xFF5
  4374                           postinc0	equ	0xFEE
  4375                           wreg	equ	0xFE8
  4376                           postdec1	equ	0xFE5
  4377                           fsr1h	equ	0xFE2
  4378                           fsr1l	equ	0xFE1
  4379                           
  4380 ;; *************** function _fl_shutdown *****************
  4381 ;; Defined at:
  4382 ;;		line 681 in file "fat_filelib.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;		None               void
  4389 ;; Registers used:
  4390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    5
  4403 ;; This function calls:
  4404 ;;		_fatfs_fat_purge
  4405 ;;		_fl_init
  4406 ;; This function is called by:
  4407 ;;		_main
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text2
  4412  003EB2                     __ptext2:
  4413                           	opt stack 0
  4414  003EB2                     _fl_shutdown:
  4415                           	opt stack 25
  4416                           
  4417                           ;fat_filelib.c: 684: { if (_filelib_init==0) fl_init(); };
  4418                           
  4419                           ;incstack = 0
  4420  003EB2  0101               	movlb	1	; () banked
  4421  003EB4  5192               	movf	(__filelib_init+1)& (0+255),w,b
  4422  003EB6  1191               	iorwf	__filelib_init& (0+255),w,b
  4423  003EB8  B4D8               	btfsc	status,2,c
  4424                           
  4425                           ; BSR set to: 1
  4426  003EBA  EC44  F029         	call	_fl_init	;wreg free
  4427                           
  4428                           ;fat_filelib.c: 687: fatfs_fat_purge(&_fs);
  4429                           
  4430                           ;fat_filelib.c: 686: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
  4431  003EBE  0E09               	movlw	high __fs
  4432  003EC0  6E35               	movwf	fatfs_fat_purge@fs+1,c
  4433  003EC2  0E78               	movlw	low __fs
  4434  003EC4  6E34               	movwf	fatfs_fat_purge@fs,c
  4435  003EC6  EFCD  F022         	goto	_fatfs_fat_purge	;wreg free
  4436  003ECA                     __end_of_fl_shutdown:
  4437                           	opt stack 0
  4438                           tblptru	equ	0xFF8
  4439                           tblptrh	equ	0xFF7
  4440                           tblptrl	equ	0xFF6
  4441                           tablat	equ	0xFF5
  4442                           postinc0	equ	0xFEE
  4443                           wreg	equ	0xFE8
  4444                           postdec1	equ	0xFE5
  4445                           fsr1h	equ	0xFE2
  4446                           fsr1l	equ	0xFE1
  4447                           status	equ	0xFD8
  4448                           
  4449 ;; *************** function _fl_attach_media *****************
  4450 ;; Defined at:
  4451 ;;		line 658 in file "fat_filelib.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;  rd              2   84[COMRAM] PTR FTN(unsigned long ,P
  4454 ;;		 -> media_read(2), 
  4455 ;;  wr              2   86[COMRAM] PTR FTN(unsigned long ,P
  4456 ;;		 -> media_write(2), 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  res             2   88[COMRAM] int 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  2   84[COMRAM] int 
  4461 ;; Registers used:
  4462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;Total ram usage:        6 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    4
  4475 ;; This function calls:
  4476 ;;		_fatfs_init
  4477 ;;		_fl_init
  4478 ;;		_printf
  4479 ;; This function is called by:
  4480 ;;		_main
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text3
  4485  004B42                     __ptext3:
  4486                           	opt stack 0
  4487  004B42                     _fl_attach_media:
  4488                           	opt stack 26
  4489                           
  4490                           ;fat_filelib.c: 660: int res;
  4491                           ;fat_filelib.c: 663: { if (_filelib_init==0) fl_init(); };
  4492                           
  4493                           ;incstack = 0
  4494  004B42  0101               	movlb	1	; () banked
  4495  004B44  5192               	movf	(__filelib_init+1)& (0+255),w,b
  4496  004B46  1191               	iorwf	__filelib_init& (0+255),w,b
  4497  004B48  B4D8               	btfsc	status,2,c
  4498                           
  4499                           ; BSR set to: 1
  4500  004B4A  EC44  F029         	call	_fl_init	;wreg free
  4501                           
  4502                           ;fat_filelib.c: 665: _fs.disk_io.read_media = rd;
  4503  004B4E  EE29  F0A1         	lfsr	2,__fs+41
  4504  004B52  C055  FFDE         	movff	fl_attach_media@rd,postinc2
  4505  004B56  C056  FFDD         	movff	fl_attach_media@rd+1,postdec2
  4506                           
  4507                           ;fat_filelib.c: 666: _fs.disk_io.write_media = wr;
  4508  004B5A  EE29  F0A3         	lfsr	2,__fs+43
  4509  004B5E  C057  FFDE         	movff	fl_attach_media@wr,postinc2
  4510  004B62  C058  FFDD         	movff	fl_attach_media@wr+1,postdec2
  4511                           
  4512                           ;fat_filelib.c: 669: if ((res = fatfs_init(&_fs)) != 0)
  4513  004B66  0E09               	movlw	high __fs
  4514  004B68  6E20               	movwf	fatfs_init@fs+1,c
  4515  004B6A  0E78               	movlw	low __fs
  4516  004B6C  6E1F               	movwf	fatfs_init@fs,c
  4517  004B6E  EC2F  F076         	call	_fatfs_init	;wreg free
  4518  004B72  C01F  F059         	movff	?_fatfs_init,fl_attach_media@res
  4519  004B76  C020  F05A         	movff	?_fatfs_init+1,fl_attach_media@res+1
  4520  004B7A  505A               	movf	(fl_attach_media@res+1)& (0+255),w,c
  4521  004B7C  1059               	iorwf	fl_attach_media@res& (0+255),w,c
  4522  004B7E  E00F               	bz	l13049
  4523                           
  4524                           ;fat_filelib.c: 670: {
  4525                           ;fat_filelib.c: 671: printf ("FAT_FS: Error could not load FAT details (%d)!\r\n", res);
  4526  004B80  0EFB               	movlw	high STR_9
  4527  004B82  6E0E               	movwf	printf@f+1,c
  4528  004B84  0E82               	movlw	low STR_9
  4529  004B86  6E0D               	movwf	printf@f,c
  4530  004B88  C059  F00F         	movff	fl_attach_media@res,?_printf+2
  4531  004B8C  C05A  F010         	movff	fl_attach_media@res+1,?_printf+3
  4532  004B90  ECDA  F045         	call	_printf	;wreg free
  4533                           
  4534                           ;fat_filelib.c: 672: return res;
  4535  004B94  C059  F055         	movff	fl_attach_media@res,?_fl_attach_media
  4536  004B98  C05A  F056         	movff	fl_attach_media@res+1,?_fl_attach_media+1
  4537  004B9C  D008               	goto	l530
  4538  004B9E                     l13049:
  4539                           
  4540                           ;fat_filelib.c: 673: }
  4541                           ;fat_filelib.c: 675: _filelib_valid = 1;
  4542  004B9E  0E00               	movlw	0
  4543  004BA0  0101               	movlb	1	; () banked
  4544  004BA2  6F94               	movwf	(__filelib_valid+1)& (0+255),b
  4545  004BA4  0E01               	movlw	1
  4546  004BA6  6F93               	movwf	__filelib_valid& (0+255),b
  4547                           
  4548                           ;fat_filelib.c: 676: return 0;
  4549  004BA8  0E00               	movlw	0
  4550  004BAA  6E56               	movwf	?_fl_attach_media+1,c
  4551  004BAC  6E55               	movwf	?_fl_attach_media,c
  4552  004BAE                     l530:
  4553  004BAE  0012               	return	
  4554  004BB0                     __end_of_fl_attach_media:
  4555                           	opt stack 0
  4556                           tblptru	equ	0xFF8
  4557                           tblptrh	equ	0xFF7
  4558                           tblptrl	equ	0xFF6
  4559                           tablat	equ	0xFF5
  4560                           postinc0	equ	0xFEE
  4561                           wreg	equ	0xFE8
  4562                           postdec1	equ	0xFE5
  4563                           fsr1h	equ	0xFE2
  4564                           fsr1l	equ	0xFE1
  4565                           postinc2	equ	0xFDE
  4566                           postdec2	equ	0xFDD
  4567                           status	equ	0xFD8
  4568                           
  4569 ;; *************** function _fatfs_init *****************
  4570 ;; Defined at:
  4571 ;;		line 42 in file "fat_access.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  fs              2   30[COMRAM] PTR struct fatfs
  4574 ;;		 -> _fs(1095), 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  count_of_clu    4   76[COMRAM] unsigned long 
  4577 ;;  total_sector    4   72[COMRAM] unsigned long 
  4578 ;;  FATSz           4   68[COMRAM] unsigned long 
  4579 ;;  data_sectors    4   64[COMRAM] unsigned long 
  4580 ;;  root_dir_sec    4   60[COMRAM] unsigned long 
  4581 ;;  reserved_sec    2   80[COMRAM] unsigned short 
  4582 ;;  num_of_fats     1   83[COMRAM] unsigned char 
  4583 ;;  valid_partit    1   82[COMRAM] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  2   30[COMRAM] int 
  4586 ;; Registers used:
  4587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Temps:         28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Totals:        54       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;Total ram usage:       54 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    3
  4600 ;; This function calls:
  4601 ;;		___lldiv
  4602 ;;		___lwdiv
  4603 ;;		_fatfs_fat_init
  4604 ;;		_media_read
  4605 ;; This function is called by:
  4606 ;;		_fl_attach_media
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text4
  4611  00EC5E                     __ptext4:
  4612                           	opt stack 0
  4613  00EC5E                     _fatfs_init:
  4614                           	opt stack 26
  4615                           
  4616                           ;fat_access.c: 44: uint8 num_of_fats;
  4617                           ;fat_access.c: 45: uint16 reserved_sectors;
  4618                           ;fat_access.c: 46: uint32 FATSz;
  4619                           ;fat_access.c: 47: uint32 root_dir_sectors;
  4620                           ;fat_access.c: 48: uint32 total_sectors;
  4621                           ;fat_access.c: 49: uint32 data_sectors;
  4622                           ;fat_access.c: 50: uint32 count_of_clusters;
  4623                           ;fat_access.c: 51: uint8 valid_partition = 0;
  4624                           
  4625                           ;incstack = 0
  4626  00EC5E  6A53               	clrf	fatfs_init@valid_partition,c
  4627                           
  4628                           ;fat_access.c: 53: fs->currentsector.address = 0xFFFFFFFF;
  4629  00EC60  EE22 F031          	lfsr	2,561
  4630  00EC64  501F               	movf	fatfs_init@fs,w,c
  4631  00EC66  26D9               	addwf	fsr2l,f,c
  4632  00EC68  5020               	movf	fatfs_init@fs+1,w,c
  4633  00EC6A  22DA               	addwfc	fsr2h,f,c
  4634  00EC6C  68DE               	setf	postinc2,c
  4635  00EC6E  68DE               	setf	postinc2,c
  4636  00EC70  68DE               	setf	postinc2,c
  4637  00EC72  68DD               	setf	postdec2,c
  4638                           
  4639                           ;fat_access.c: 54: fs->currentsector.dirty = 0;
  4640  00EC74  EE22 F035          	lfsr	2,565
  4641  00EC78  501F               	movf	fatfs_init@fs,w,c
  4642  00EC7A  26D9               	addwf	fsr2l,f,c
  4643  00EC7C  5020               	movf	fatfs_init@fs+1,w,c
  4644  00EC7E  22DA               	addwfc	fsr2h,f,c
  4645  00EC80  6ADE               	clrf	postinc2,c
  4646  00EC82  6ADD               	clrf	postdec2,c
  4647                           
  4648                           ;fat_access.c: 56: fs->next_free_cluster = 0;
  4649  00EC84  EE20 F01F          	lfsr	2,31
  4650  00EC88  501F               	movf	fatfs_init@fs,w,c
  4651  00EC8A  26D9               	addwf	fsr2l,f,c
  4652  00EC8C  5020               	movf	fatfs_init@fs+1,w,c
  4653  00EC8E  22DA               	addwfc	fsr2h,f,c
  4654  00EC90  6ADE               	clrf	postinc2,c
  4655  00EC92  6ADE               	clrf	postinc2,c
  4656  00EC94  6ADE               	clrf	postinc2,c
  4657  00EC96  6ADD               	clrf	postdec2,c
  4658                           
  4659                           ;fat_access.c: 58: fatfs_fat_init(fs);
  4660  00EC98  C020  F00A         	movff	fatfs_init@fs+1,fatfs_fat_init@fs+1
  4661  00EC9C  C01F  F009         	movff	fatfs_init@fs,fatfs_fat_init@fs
  4662  00ECA0  EC6C  F042         	call	_fatfs_fat_init	;wreg free
  4663                           
  4664                           ;fat_access.c: 61: if (!fs->disk_io.read_media)
  4665  00ECA4  EE20 F029          	lfsr	2,41
  4666  00ECA8  501F               	movf	fatfs_init@fs,w,c
  4667  00ECAA  26D9               	addwf	fsr2l,f,c
  4668  00ECAC  5020               	movf	fatfs_init@fs+1,w,c
  4669  00ECAE  22DA               	addwfc	fsr2h,f,c
  4670  00ECB0  50DE               	movf	postinc2,w,c
  4671  00ECB2  10DD               	iorwf	postdec2,w,c
  4672  00ECB4  E101 D137          	bz	u15110
  4673                           
  4674                           ;fat_access.c: 68: if (!fs->disk_io.read_media(0, fs->currentsector.sector, 1))
  4675                           
  4676                           ;fat_access.c: 62: return (-1);
  4677  00ECB8  6A09               	clrf	media_read@sector,c
  4678  00ECBA  6A0A               	clrf	media_read@sector+1,c
  4679  00ECBC  6A0B               	clrf	media_read@sector+2,c
  4680  00ECBE  6A0C               	clrf	media_read@sector+3,c
  4681  00ECC0  0E31               	movlw	49
  4682  00ECC2  241F               	addwf	fatfs_init@fs,w,c
  4683  00ECC4  6E0D               	movwf	media_read@buffer,c
  4684  00ECC6  0E00               	movlw	0
  4685  00ECC8  2020               	addwfc	fatfs_init@fs+1,w,c
  4686  00ECCA  6E0E               	movwf	media_read@buffer+1,c
  4687  00ECCC  0E01               	movlw	1
  4688  00ECCE  6E0F               	movwf	media_read@sector_count,c
  4689  00ECD0  6A10               	clrf	media_read@sector_count+1,c
  4690  00ECD2  6A11               	clrf	media_read@sector_count+2,c
  4691  00ECD4  6A12               	clrf	media_read@sector_count+3,c
  4692  00ECD6  EE20 F029          	lfsr	2,41
  4693  00ECDA  501F               	movf	fatfs_init@fs,w,c
  4694  00ECDC  26D9               	addwf	fsr2l,f,c
  4695  00ECDE  5020               	movf	fatfs_init@fs+1,w,c
  4696  00ECE0  22DA               	addwfc	fsr2h,f,c
  4697  00ECE2  CFDE F021          	movff	postinc2,??_fatfs_init
  4698  00ECE6  CFDD F022          	movff	postdec2,??_fatfs_init+1
  4699  00ECEA  D801               	call	u15038
  4700  00ECEC  D009               	goto	u15039
  4701  00ECEE                     u15038:
  4702  00ECEE  0005               	push	
  4703  00ECF0  6EFA               	movwf	pclath,c
  4704  00ECF2  5021               	movf	??_fatfs_init,w,c
  4705  00ECF4  6EFD               	movwf	tosl,c
  4706  00ECF6  5022               	movf	??_fatfs_init+1,w,c
  4707  00ECF8  6EFE               	movwf	tosh,c
  4708  00ECFA  6AFF               	clrf	tosu,c
  4709  00ECFC  50FA               	movf	pclath,w,c
  4710  00ECFE  0012               	return		;indir
  4711  00ED00                     u15039:
  4712  00ED00  500A               	movf	?_media_read+1,w,c
  4713  00ED02  1009               	iorwf	?_media_read,w,c
  4714  00ED04  E101 D10F          	bz	u15110
  4715                           
  4716                           ;fat_access.c: 73: if (fs->currentsector.sector[510] != 0x55 || fs->currentsector.sector
      +                          [510+1] != 0xAA)
  4717                           
  4718                           ;fat_access.c: 69: return (-1);
  4719  00ED08  EE22 F02F          	lfsr	2,559
  4720  00ED0C  501F               	movf	fatfs_init@fs,w,c
  4721  00ED0E  26D9               	addwf	fsr2l,f,c
  4722  00ED10  5020               	movf	fatfs_init@fs+1,w,c
  4723  00ED12  22DA               	addwfc	fsr2h,f,c
  4724  00ED14  0E55               	movlw	85
  4725  00ED16  62DF               	cpfseq	indf2,c
  4726  00ED18  D009               	goto	l12543
  4727  00ED1A  EE22 F030          	lfsr	2,560
  4728  00ED1E  501F               	movf	fatfs_init@fs,w,c
  4729  00ED20  26D9               	addwf	fsr2l,f,c
  4730  00ED22  5020               	movf	fatfs_init@fs+1,w,c
  4731  00ED24  22DA               	addwfc	fsr2h,f,c
  4732  00ED26  50DF               	movf	indf2,w,c
  4733  00ED28  0AAA               	xorlw	170
  4734  00ED2A  E004               	bz	l12547
  4735  00ED2C                     l12543:
  4736                           
  4737                           ;fat_access.c: 74: return (-3);
  4738  00ED2C  6820               	setf	?_fatfs_init+1,c
  4739  00ED2E  0EFD               	movlw	253
  4740  00ED30  EF22  F07D         	goto	L10
  4741  00ED34                     l12547:
  4742                           
  4743                           ;fat_access.c: 77: if (( ((uint16)fs->currentsector.sector[510+1]<<8) + (uint16)fs->curr
      +                          entsector.sector[510+0] ) != 0xAA55)
  4744  00ED34  EE22 F030          	lfsr	2,560
  4745  00ED38  501F               	movf	fatfs_init@fs,w,c
  4746  00ED3A  26D9               	addwf	fsr2l,f,c
  4747  00ED3C  5020               	movf	fatfs_init@fs+1,w,c
  4748  00ED3E  22DA               	addwfc	fsr2h,f,c
  4749  00ED40  50DF               	movf	indf2,w,c
  4750  00ED42  6E21               	movwf	??_fatfs_init& (0+255),c
  4751  00ED44  5021               	movf	??_fatfs_init,w,c
  4752  00ED46  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  4753  00ED48  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  4754  00ED4A  EE22 F02F          	lfsr	2,559
  4755  00ED4E  501F               	movf	fatfs_init@fs,w,c
  4756  00ED50  26D9               	addwf	fsr2l,f,c
  4757  00ED52  5020               	movf	fatfs_init@fs+1,w,c
  4758  00ED54  22DA               	addwfc	fsr2h,f,c
  4759  00ED56  50DF               	movf	indf2,w,c
  4760  00ED58  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  4761  00ED5A  5024               	movf	??_fatfs_init+3,w,c
  4762  00ED5C  2622               	addwf	??_fatfs_init+1,f,c
  4763  00ED5E  0E00               	movlw	0
  4764  00ED60  2223               	addwfc	??_fatfs_init+2,f,c
  4765  00ED62  5023               	movf	??_fatfs_init+2,w,c
  4766  00ED64  0AAA               	xorlw	170
  4767  00ED66  0E55               	movlw	85
  4768  00ED68  B4D8               	btfsc	status,2,c
  4769  00ED6A  1822               	xorwf	??_fatfs_init+1,w,c
  4770  00ED6C  E014               	bz	l12567
  4771                           
  4772                           ;fat_access.c: 78: return (-4);
  4773  00ED6E  6820               	setf	?_fatfs_init+1,c
  4774  00ED70  0EFC               	movlw	252
  4775  00ED72  EF22  F07D         	goto	L10
  4776  00ED76                     l12559:
  4777                           
  4778                           ;fat_access.c: 96: valid_partition = 0;
  4779  00ED76  0E00               	movlw	0
  4780  00ED78  D00C               	goto	L4
  4781  00ED7A                     l12561:
  4782                           
  4783                           ;fat_access.c: 99: if (fs->currentsector.sector[450] <= 0x06)
  4784  00ED7A  EE21 F0F3          	lfsr	2,499
  4785  00ED7E  501F               	movf	fatfs_init@fs,w,c
  4786  00ED80  26D9               	addwf	fsr2l,f,c
  4787  00ED82  5020               	movf	fatfs_init@fs+1,w,c
  4788  00ED84  22DA               	addwfc	fsr2h,f,c
  4789  00ED86  50DF               	movf	indf2,w,c
  4790  00ED88  6E21               	movwf	??_fatfs_init& (0+255),c
  4791  00ED8A  0E07               	movlw	7
  4792  00ED8C  5C21               	subwf	??_fatfs_init,w,c
  4793  00ED8E  E218               	bc	l12569
  4794  00ED90                     
  4795                           ;fat_access.c: 100: valid_partition = 1;
  4796  00ED90  0E01               	movlw	1
  4797  00ED92                     L4:
  4798  00ED92  6E53               	movwf	fatfs_init@valid_partition,c
  4799  00ED94  D015               	goto	l12569
  4800  00ED96                     l12567:
  4801  00ED96  EE21 F0F3          	lfsr	2,499
  4802  00ED9A  501F               	movf	fatfs_init@fs,w,c
  4803  00ED9C  26D9               	addwf	fsr2l,f,c
  4804  00ED9E  5020               	movf	fatfs_init@fs+1,w,c
  4805  00EDA0  22DA               	addwfc	fsr2h,f,c
  4806  00EDA2  50DF               	movf	indf2,w,c
  4807                           
  4808                           ; Switch size 1, requested type "speed"
  4809                           ; Number of cases is 7, Range of values is 0 to 15
  4810                           ; switch strategies available:
  4811                           ; Name         Instructions Cycles
  4812                           ; simple_byte           22    12 (average)
  4813                           ;	Chosen strategy is simple_byte
  4814  00EDA4  E0E8               	bz	l12559
  4815  00EDA6  0A05               	xorlw	5	; case 5
  4816  00EDA8  E0F3               	bz	L11
  4817  00EDAA  0A03               	xorlw	3	; case 6
  4818  00EDAC  E0F1               	bz	L11
  4819  00EDAE  0A0D               	xorlw	13	; case 11
  4820  00EDB0  E0EF               	bz	L11
  4821  00EDB2  0A07               	xorlw	7	; case 12
  4822  00EDB4  E0ED               	bz	L11
  4823  00EDB6  0A02               	xorlw	2	; case 14
  4824  00EDB8  E0EB               	bz	L11
  4825  00EDBA  0A01               	xorlw	1	; case 15
  4826  00EDBC  E0E9               	bz	L11
  4827  00EDBE  D7DD               	goto	l12561
  4828  00EDC0                     l12569:
  4829                           
  4830                           ;fat_access.c: 105: if (valid_partition)
  4831  00EDC0  5053               	movf	fatfs_init@valid_partition,w,c
  4832  00EDC2  E076               	bz	l12573
  4833                           
  4834                           ;fat_access.c: 106: fs->lba_begin = ( ((uint32)fs->currentsector.sector[454+3]<<24) + ((
      +                          uint32)fs->currentsector.sector[454+2]<<16) + ((uint32)fs->currentsector.sector[454+1]<<
      +                          8) + (uint32)fs->currentsector.sector[454+0] );
  4835  00EDC4  EE21 F0F8          	lfsr	2,504
  4836  00EDC8  501F               	movf	fatfs_init@fs,w,c
  4837  00EDCA  26D9               	addwf	fsr2l,f,c
  4838  00EDCC  5020               	movf	fatfs_init@fs+1,w,c
  4839  00EDCE  22DA               	addwfc	fsr2h,f,c
  4840  00EDD0  50DF               	movf	indf2,w,c
  4841  00EDD2  6E21               	movwf	??_fatfs_init& (0+255),c
  4842  00EDD4  C021  F022         	movff	??_fatfs_init,??_fatfs_init+1
  4843  00EDD8  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  4844  00EDDA  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  4845  00EDDC  6A25               	clrf	(??_fatfs_init+4)& (0+255),c
  4846  00EDDE  C024  F025         	movff	??_fatfs_init+3,??_fatfs_init+4
  4847  00EDE2  C023  F024         	movff	??_fatfs_init+2,??_fatfs_init+3
  4848  00EDE6  C022  F023         	movff	??_fatfs_init+1,??_fatfs_init+2
  4849  00EDEA  6A22               	clrf	??_fatfs_init+1,c
  4850  00EDEC  EE21 F0F9          	lfsr	2,505
  4851  00EDF0  501F               	movf	fatfs_init@fs,w,c
  4852  00EDF2  26D9               	addwf	fsr2l,f,c
  4853  00EDF4  5020               	movf	fatfs_init@fs+1,w,c
  4854  00EDF6  22DA               	addwfc	fsr2h,f,c
  4855  00EDF8  50DF               	movf	indf2,w,c
  4856  00EDFA  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  4857  00EDFC  C026  F027         	movff	??_fatfs_init+5,??_fatfs_init+6
  4858  00EE00  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  4859  00EE02  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  4860  00EE04  6A2A               	clrf	(??_fatfs_init+9)& (0+255),c
  4861  00EE06  C028  F02A         	movff	??_fatfs_init+7,??_fatfs_init+9
  4862  00EE0A  C027  F029         	movff	??_fatfs_init+6,??_fatfs_init+8
  4863  00EE0E  6A28               	clrf	??_fatfs_init+7,c
  4864  00EE10  6A27               	clrf	??_fatfs_init+6,c
  4865  00EE12  EE21 F0FA          	lfsr	2,506
  4866  00EE16  501F               	movf	fatfs_init@fs,w,c
  4867  00EE18  26D9               	addwf	fsr2l,f,c
  4868  00EE1A  5020               	movf	fatfs_init@fs+1,w,c
  4869  00EE1C  22DA               	addwfc	fsr2h,f,c
  4870  00EE1E  50DF               	movf	indf2,w,c
  4871  00EE20  6E2B               	movwf	(??_fatfs_init+10)& (0+255),c
  4872  00EE22  C02B  F02C         	movff	??_fatfs_init+10,??_fatfs_init+11
  4873  00EE26  6A2D               	clrf	(??_fatfs_init+12)& (0+255),c
  4874  00EE28  6A2E               	clrf	(??_fatfs_init+13)& (0+255),c
  4875  00EE2A  6A2F               	clrf	(??_fatfs_init+14)& (0+255),c
  4876  00EE2C  C02C  F02F         	movff	??_fatfs_init+11,??_fatfs_init+14
  4877  00EE30  6A2E               	clrf	??_fatfs_init+13,c
  4878  00EE32  6A2D               	clrf	??_fatfs_init+12,c
  4879  00EE34  6A2C               	clrf	??_fatfs_init+11,c
  4880  00EE36  5027               	movf	??_fatfs_init+6,w,c
  4881  00EE38  242C               	addwf	??_fatfs_init+11,w,c
  4882  00EE3A  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  4883  00EE3C  5028               	movf	??_fatfs_init+7,w,c
  4884  00EE3E  202D               	addwfc	??_fatfs_init+12,w,c
  4885  00EE40  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  4886  00EE42  5029               	movf	??_fatfs_init+8,w,c
  4887  00EE44  202E               	addwfc	??_fatfs_init+13,w,c
  4888  00EE46  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  4889  00EE48  502A               	movf	??_fatfs_init+9,w,c
  4890  00EE4A  202F               	addwfc	??_fatfs_init+14,w,c
  4891  00EE4C  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  4892  00EE4E  5022               	movf	??_fatfs_init+1,w,c
  4893  00EE50  2430               	addwf	??_fatfs_init+15,w,c
  4894  00EE52  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  4895  00EE54  5023               	movf	??_fatfs_init+2,w,c
  4896  00EE56  2031               	addwfc	??_fatfs_init+16,w,c
  4897  00EE58  6E35               	movwf	(??_fatfs_init+20)& (0+255),c
  4898  00EE5A  5024               	movf	??_fatfs_init+3,w,c
  4899  00EE5C  2032               	addwfc	??_fatfs_init+17,w,c
  4900  00EE5E  6E36               	movwf	(??_fatfs_init+21)& (0+255),c
  4901  00EE60  5025               	movf	??_fatfs_init+4,w,c
  4902  00EE62  2033               	addwfc	??_fatfs_init+18,w,c
  4903  00EE64  6E37               	movwf	(??_fatfs_init+22)& (0+255),c
  4904  00EE66  EE21 F0F7          	lfsr	2,503
  4905  00EE6A  501F               	movf	fatfs_init@fs,w,c
  4906  00EE6C  26D9               	addwf	fsr2l,f,c
  4907  00EE6E  5020               	movf	fatfs_init@fs+1,w,c
  4908  00EE70  22DA               	addwfc	fsr2h,f,c
  4909  00EE72  50DF               	movf	indf2,w,c
  4910  00EE74  6E38               	movwf	(??_fatfs_init+23)& (0+255),c
  4911  00EE76  5038               	movf	??_fatfs_init+23,w,c
  4912  00EE78  2434               	addwf	??_fatfs_init+19,w,c
  4913  00EE7A  6E39               	movwf	(??_fatfs_init+24)& (0+255),c
  4914  00EE7C  0E00               	movlw	0
  4915  00EE7E  2035               	addwfc	??_fatfs_init+20,w,c
  4916  00EE80  6E3A               	movwf	(??_fatfs_init+25)& (0+255),c
  4917  00EE82  0E00               	movlw	0
  4918  00EE84  2036               	addwfc	??_fatfs_init+21,w,c
  4919  00EE86  6E3B               	movwf	(??_fatfs_init+26)& (0+255),c
  4920  00EE88  0E00               	movlw	0
  4921  00EE8A  2037               	addwfc	??_fatfs_init+22,w,c
  4922  00EE8C  6E3C               	movwf	(??_fatfs_init+27)& (0+255),c
  4923  00EE8E  EE20 F017          	lfsr	2,23
  4924  00EE92  501F               	movf	fatfs_init@fs,w,c
  4925  00EE94  26D9               	addwf	fsr2l,f,c
  4926  00EE96  5020               	movf	fatfs_init@fs+1,w,c
  4927  00EE98  22DA               	addwfc	fsr2h,f,c
  4928  00EE9A  C039  FFDE         	movff	??_fatfs_init+24,postinc2
  4929  00EE9E  C03A  FFDE         	movff	??_fatfs_init+25,postinc2
  4930  00EEA2  C03B  FFDE         	movff	??_fatfs_init+26,postinc2
  4931  00EEA6  C03C  FFDD         	movff	??_fatfs_init+27,postdec2
  4932  00EEAA  06D9               	decf	fsr2l,f,c
  4933  00EEAC  06D9               	decf	fsr2l,f,c
  4934  00EEAE  D00A               	goto	l12575
  4935  00EEB0                     l12573:
  4936                           
  4937                           ;fat_access.c: 108: else
  4938                           ;fat_access.c: 109: fs->lba_begin = 0;
  4939  00EEB0  EE20 F017          	lfsr	2,23
  4940  00EEB4  501F               	movf	fatfs_init@fs,w,c
  4941  00EEB6  26D9               	addwf	fsr2l,f,c
  4942  00EEB8  5020               	movf	fatfs_init@fs+1,w,c
  4943  00EEBA  22DA               	addwfc	fsr2h,f,c
  4944  00EEBC  6ADE               	clrf	postinc2,c
  4945  00EEBE  6ADE               	clrf	postinc2,c
  4946  00EEC0  6ADE               	clrf	postinc2,c
  4947  00EEC2  6ADD               	clrf	postdec2,c
  4948  00EEC4                     l12575:
  4949                           
  4950                           ;fat_access.c: 113: if (!fs->disk_io.read_media(fs->lba_begin, fs->currentsector.sector,
      +                           1))
  4951  00EEC4  EE20 F017          	lfsr	2,23
  4952  00EEC8  501F               	movf	fatfs_init@fs,w,c
  4953  00EECA  26D9               	addwf	fsr2l,f,c
  4954  00EECC  5020               	movf	fatfs_init@fs+1,w,c
  4955  00EECE  22DA               	addwfc	fsr2h,f,c
  4956  00EED0  CFDE F009          	movff	postinc2,media_read@sector
  4957  00EED4  CFDE F00A          	movff	postinc2,media_read@sector+1
  4958  00EED8  CFDE F00B          	movff	postinc2,media_read@sector+2
  4959  00EEDC  CFDE F00C          	movff	postinc2,media_read@sector+3
  4960  00EEE0  0E31               	movlw	49
  4961  00EEE2  241F               	addwf	fatfs_init@fs,w,c
  4962  00EEE4  6E0D               	movwf	media_read@buffer,c
  4963  00EEE6  0E00               	movlw	0
  4964  00EEE8  2020               	addwfc	fatfs_init@fs+1,w,c
  4965  00EEEA  6E0E               	movwf	media_read@buffer+1,c
  4966  00EEEC  0E01               	movlw	1
  4967  00EEEE  6E0F               	movwf	media_read@sector_count,c
  4968  00EEF0  6A10               	clrf	media_read@sector_count+1,c
  4969  00EEF2  6A11               	clrf	media_read@sector_count+2,c
  4970  00EEF4  6A12               	clrf	media_read@sector_count+3,c
  4971  00EEF6  EE20 F029          	lfsr	2,41
  4972  00EEFA  501F               	movf	fatfs_init@fs,w,c
  4973  00EEFC  26D9               	addwf	fsr2l,f,c
  4974  00EEFE  5020               	movf	fatfs_init@fs+1,w,c
  4975  00EF00  22DA               	addwfc	fsr2h,f,c
  4976  00EF02  CFDE F021          	movff	postinc2,??_fatfs_init
  4977  00EF06  CFDD F022          	movff	postdec2,??_fatfs_init+1
  4978  00EF0A  D801               	call	u15108
  4979  00EF0C  D009               	goto	u15109
  4980  00EF0E                     u15108:
  4981  00EF0E  0005               	push	
  4982  00EF10  6EFA               	movwf	pclath,c
  4983  00EF12  5021               	movf	??_fatfs_init,w,c
  4984  00EF14  6EFD               	movwf	tosl,c
  4985  00EF16  5022               	movf	??_fatfs_init+1,w,c
  4986  00EF18  6EFE               	movwf	tosh,c
  4987  00EF1A  6AFF               	clrf	tosu,c
  4988  00EF1C  50FA               	movf	pclath,w,c
  4989  00EF1E  0012               	return		;indir
  4990  00EF20                     u15109:
  4991  00EF20  500A               	movf	?_media_read+1,w,c
  4992  00EF22  1009               	iorwf	?_media_read,w,c
  4993  00EF24  E104               	bnz	l12579
  4994  00EF26                     u15110:
  4995                           
  4996                           ;fat_access.c: 114: return (-1);
  4997  00EF26  681F               	setf	?_fatfs_init,c
  4998  00EF28  6820               	setf	?_fatfs_init+1,c
  4999  00EF2A  EF23  F07D         	goto	l38
  5000  00EF2E                     l12579:
  5001                           
  5002                           ;fat_access.c: 117: if (( ((uint16)fs->currentsector.sector[0x0B+1]<<8) + (uint16)fs->cu
      +                          rrentsector.sector[0x0B+0] ) != 512)
  5003  00EF2E  EE20 F03D          	lfsr	2,61
  5004  00EF32  501F               	movf	fatfs_init@fs,w,c
  5005  00EF34  26D9               	addwf	fsr2l,f,c
  5006  00EF36  5020               	movf	fatfs_init@fs+1,w,c
  5007  00EF38  22DA               	addwfc	fsr2h,f,c
  5008  00EF3A  50DF               	movf	indf2,w,c
  5009  00EF3C  6E21               	movwf	??_fatfs_init& (0+255),c
  5010  00EF3E  5021               	movf	??_fatfs_init,w,c
  5011  00EF40  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5012  00EF42  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5013  00EF44  EE20 F03C          	lfsr	2,60
  5014  00EF48  501F               	movf	fatfs_init@fs,w,c
  5015  00EF4A  26D9               	addwf	fsr2l,f,c
  5016  00EF4C  5020               	movf	fatfs_init@fs+1,w,c
  5017  00EF4E  22DA               	addwfc	fsr2h,f,c
  5018  00EF50  50DF               	movf	indf2,w,c
  5019  00EF52  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5020  00EF54  5024               	movf	??_fatfs_init+3,w,c
  5021  00EF56  2622               	addwf	??_fatfs_init+1,f,c
  5022  00EF58  0E00               	movlw	0
  5023  00EF5A  2223               	addwfc	??_fatfs_init+2,f,c
  5024  00EF5C  5023               	movf	??_fatfs_init+2,w,c
  5025  00EF5E  0A02               	xorlw	2
  5026  00EF60  1022               	iorwf	??_fatfs_init+1,w,c
  5027  00EF62  E004               	bz	l12585
  5028                           
  5029                           ;fat_access.c: 118: return (-2);
  5030  00EF64  6820               	setf	?_fatfs_init+1,c
  5031  00EF66  0EFE               	movlw	254
  5032  00EF68  EF22  F07D         	goto	L10
  5033  00EF6C                     l12585:
  5034                           
  5035                           ;fat_access.c: 121: fs->sectors_per_cluster = fs->currentsector.sector[13];
  5036  00EF6C  EE20 F03E          	lfsr	2,62
  5037  00EF70  501F               	movf	fatfs_init@fs,w,c
  5038  00EF72  26D9               	addwf	fsr2l,f,c
  5039  00EF74  5020               	movf	fatfs_init@fs+1,w,c
  5040  00EF76  22DA               	addwfc	fsr2h,f,c
  5041  00EF78  C01F  FFE1         	movff	fatfs_init@fs,fsr1l
  5042  00EF7C  C020  FFE2         	movff	fatfs_init@fs+1,fsr1h
  5043  00EF80  CFDF FFE7          	movff	indf2,indf1
  5044                           
  5045                           ;fat_access.c: 122: reserved_sectors = ( ((uint16)fs->currentsector.sector[14+1]<<8) + (
      +                          uint16)fs->currentsector.sector[14+0] );
  5046  00EF84  EE20 F03F          	lfsr	2,63
  5047  00EF88  501F               	movf	fatfs_init@fs,w,c
  5048  00EF8A  26D9               	addwf	fsr2l,f,c
  5049  00EF8C  5020               	movf	fatfs_init@fs+1,w,c
  5050  00EF8E  22DA               	addwfc	fsr2h,f,c
  5051  00EF90  50DF               	movf	indf2,w,c
  5052  00EF92  6E21               	movwf	??_fatfs_init& (0+255),c
  5053  00EF94  EE20 F040          	lfsr	2,64
  5054  00EF98  501F               	movf	fatfs_init@fs,w,c
  5055  00EF9A  26D9               	addwf	fsr2l,f,c
  5056  00EF9C  5020               	movf	fatfs_init@fs+1,w,c
  5057  00EF9E  22DA               	addwfc	fsr2h,f,c
  5058  00EFA0  50DF               	movf	indf2,w,c
  5059  00EFA2  6E52               	movwf	fatfs_init@reserved_sectors+1,c
  5060  00EFA4  5021               	movf	??_fatfs_init,w,c
  5061  00EFA6  6E51               	movwf	fatfs_init@reserved_sectors,c
  5062                           
  5063                           ;fat_access.c: 123: num_of_fats = fs->currentsector.sector[16];
  5064  00EFA8  EE20 F041          	lfsr	2,65
  5065  00EFAC  501F               	movf	fatfs_init@fs,w,c
  5066  00EFAE  26D9               	addwf	fsr2l,f,c
  5067  00EFB0  5020               	movf	fatfs_init@fs+1,w,c
  5068  00EFB2  22DA               	addwfc	fsr2h,f,c
  5069  00EFB4  50DF               	movf	indf2,w,c
  5070  00EFB6  6E54               	movwf	fatfs_init@num_of_fats,c
  5071                           
  5072                           ;fat_access.c: 124: fs->root_entry_count = ( ((uint16)fs->currentsector.sector[17+1]<<8)
      +                           + (uint16)fs->currentsector.sector[17+0] );
  5073  00EFB8  EE20 F043          	lfsr	2,67
  5074  00EFBC  501F               	movf	fatfs_init@fs,w,c
  5075  00EFBE  26D9               	addwf	fsr2l,f,c
  5076  00EFC0  5020               	movf	fatfs_init@fs+1,w,c
  5077  00EFC2  22DA               	addwfc	fsr2h,f,c
  5078  00EFC4  50DF               	movf	indf2,w,c
  5079  00EFC6  6E21               	movwf	??_fatfs_init& (0+255),c
  5080  00EFC8  5021               	movf	??_fatfs_init,w,c
  5081  00EFCA  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5082  00EFCC  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5083  00EFCE  EE20 F042          	lfsr	2,66
  5084  00EFD2  501F               	movf	fatfs_init@fs,w,c
  5085  00EFD4  26D9               	addwf	fsr2l,f,c
  5086  00EFD6  5020               	movf	fatfs_init@fs+1,w,c
  5087  00EFD8  22DA               	addwfc	fsr2h,f,c
  5088  00EFDA  50DF               	movf	indf2,w,c
  5089  00EFDC  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5090  00EFDE  5024               	movf	??_fatfs_init+3,w,c
  5091  00EFE0  2622               	addwf	??_fatfs_init+1,f,c
  5092  00EFE2  0E00               	movlw	0
  5093  00EFE4  2223               	addwfc	??_fatfs_init+2,f,c
  5094  00EFE6  EE20 F023          	lfsr	2,35
  5095  00EFEA  501F               	movf	fatfs_init@fs,w,c
  5096  00EFEC  26D9               	addwf	fsr2l,f,c
  5097  00EFEE  5020               	movf	fatfs_init@fs+1,w,c
  5098  00EFF0  22DA               	addwfc	fsr2h,f,c
  5099  00EFF2  C022  FFDE         	movff	??_fatfs_init+1,postinc2
  5100  00EFF6  C023  FFDD         	movff	??_fatfs_init+2,postdec2
  5101                           
  5102                           ;fat_access.c: 126: if(( ((uint16)fs->currentsector.sector[22+1]<<8) + (uint16)fs->curre
      +                          ntsector.sector[22+0] ) != 0)
  5103  00EFFA  EE20 F048          	lfsr	2,72
  5104  00EFFE  501F               	movf	fatfs_init@fs,w,c
  5105  00F000  26D9               	addwf	fsr2l,f,c
  5106  00F002  5020               	movf	fatfs_init@fs+1,w,c
  5107  00F004  22DA               	addwfc	fsr2h,f,c
  5108  00F006  50DF               	movf	indf2,w,c
  5109  00F008  6E21               	movwf	??_fatfs_init& (0+255),c
  5110  00F00A  5021               	movf	??_fatfs_init,w,c
  5111  00F00C  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5112  00F00E  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5113  00F010  EE20 F047          	lfsr	2,71
  5114  00F014  501F               	movf	fatfs_init@fs,w,c
  5115  00F016  26D9               	addwf	fsr2l,f,c
  5116  00F018  5020               	movf	fatfs_init@fs+1,w,c
  5117  00F01A  22DA               	addwfc	fsr2h,f,c
  5118  00F01C  50DF               	movf	indf2,w,c
  5119  00F01E  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5120  00F020  5024               	movf	??_fatfs_init+3,w,c
  5121  00F022  2622               	addwf	??_fatfs_init+1,f,c
  5122  00F024  0E00               	movlw	0
  5123  00F026  2223               	addwfc	??_fatfs_init+2,f,c
  5124  00F028  5023               	movf	??_fatfs_init+2,w,c
  5125  00F02A  1022               	iorwf	??_fatfs_init+1,w,c
  5126  00F02C  E02A               	bz	l12597
  5127                           
  5128                           ;fat_access.c: 127: fs->fat_sectors = ( ((uint16)fs->currentsector.sector[22+1]<<8) + (u
      +                          int16)fs->currentsector.sector[22+0] );
  5129  00F02E  EE20 F047          	lfsr	2,71
  5130  00F032  501F               	movf	fatfs_init@fs,w,c
  5131  00F034  26D9               	addwf	fsr2l,f,c
  5132  00F036  5020               	movf	fatfs_init@fs+1,w,c
  5133  00F038  22DA               	addwfc	fsr2h,f,c
  5134  00F03A  50DF               	movf	indf2,w,c
  5135  00F03C  6E21               	movwf	??_fatfs_init& (0+255),c
  5136  00F03E  EE20 F048          	lfsr	2,72
  5137  00F042  501F               	movf	fatfs_init@fs,w,c
  5138  00F044  26D9               	addwf	fsr2l,f,c
  5139  00F046  5020               	movf	fatfs_init@fs+1,w,c
  5140  00F048  22DA               	addwfc	fsr2h,f,c
  5141  00F04A  50DF               	movf	indf2,w,c
  5142  00F04C  6E22               	movwf	(??_fatfs_init+1)& (0+255),c
  5143  00F04E  5022               	movf	??_fatfs_init+1,w,c
  5144  00F050  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5145  00F052  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  5146  00F054  5021               	movf	??_fatfs_init,w,c
  5147  00F056  2423               	addwf	??_fatfs_init+2,w,c
  5148  00F058  6E25               	movwf	(??_fatfs_init+4)& (0+255),c
  5149  00F05A  0E00               	movlw	0
  5150  00F05C  2024               	addwfc	??_fatfs_init+3,w,c
  5151  00F05E  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  5152  00F060  6A27               	clrf	(??_fatfs_init+6)& (0+255),c
  5153  00F062  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  5154  00F064  EE20 F01B          	lfsr	2,27
  5155  00F068  501F               	movf	fatfs_init@fs,w,c
  5156  00F06A  26D9               	addwf	fsr2l,f,c
  5157  00F06C  5020               	movf	fatfs_init@fs+1,w,c
  5158  00F06E  22DA               	addwfc	fsr2h,f,c
  5159  00F070  C025  FFDE         	movff	??_fatfs_init+4,postinc2
  5160  00F074  C026  FFDE         	movff	??_fatfs_init+5,postinc2
  5161  00F078  C027  FFDE         	movff	??_fatfs_init+6,postinc2
  5162  00F07C  C028  FFDD         	movff	??_fatfs_init+7,postdec2
  5163  00F080  D073               	goto	L6
  5164  00F082                     l12597:
  5165                           
  5166                           ;fat_access.c: 128: else
  5167                           ;fat_access.c: 129: fs->fat_sectors = ( ((uint32)fs->currentsector.sector[36+3]<<24) + (
      +                          (uint32)fs->currentsector.sector[36+2]<<16) + ((uint32)fs->currentsector.sector[36+1]<<8
      +                          ) + (uint32)fs->currentsector.sector[36+0] );
  5168  00F082  EE20 F056          	lfsr	2,86
  5169  00F086  501F               	movf	fatfs_init@fs,w,c
  5170  00F088  26D9               	addwf	fsr2l,f,c
  5171  00F08A  5020               	movf	fatfs_init@fs+1,w,c
  5172  00F08C  22DA               	addwfc	fsr2h,f,c
  5173  00F08E  50DF               	movf	indf2,w,c
  5174  00F090  6E21               	movwf	??_fatfs_init& (0+255),c
  5175  00F092  C021  F022         	movff	??_fatfs_init,??_fatfs_init+1
  5176  00F096  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  5177  00F098  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  5178  00F09A  6A25               	clrf	(??_fatfs_init+4)& (0+255),c
  5179  00F09C  C024  F025         	movff	??_fatfs_init+3,??_fatfs_init+4
  5180  00F0A0  C023  F024         	movff	??_fatfs_init+2,??_fatfs_init+3
  5181  00F0A4  C022  F023         	movff	??_fatfs_init+1,??_fatfs_init+2
  5182  00F0A8  6A22               	clrf	??_fatfs_init+1,c
  5183  00F0AA  EE20 F057          	lfsr	2,87
  5184  00F0AE  501F               	movf	fatfs_init@fs,w,c
  5185  00F0B0  26D9               	addwf	fsr2l,f,c
  5186  00F0B2  5020               	movf	fatfs_init@fs+1,w,c
  5187  00F0B4  22DA               	addwfc	fsr2h,f,c
  5188  00F0B6  50DF               	movf	indf2,w,c
  5189  00F0B8  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  5190  00F0BA  C026  F027         	movff	??_fatfs_init+5,??_fatfs_init+6
  5191  00F0BE  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  5192  00F0C0  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  5193  00F0C2  6A2A               	clrf	(??_fatfs_init+9)& (0+255),c
  5194  00F0C4  C028  F02A         	movff	??_fatfs_init+7,??_fatfs_init+9
  5195  00F0C8  C027  F029         	movff	??_fatfs_init+6,??_fatfs_init+8
  5196  00F0CC  6A28               	clrf	??_fatfs_init+7,c
  5197  00F0CE  6A27               	clrf	??_fatfs_init+6,c
  5198  00F0D0  EE20 F058          	lfsr	2,88
  5199  00F0D4  501F               	movf	fatfs_init@fs,w,c
  5200  00F0D6  26D9               	addwf	fsr2l,f,c
  5201  00F0D8  5020               	movf	fatfs_init@fs+1,w,c
  5202  00F0DA  22DA               	addwfc	fsr2h,f,c
  5203  00F0DC  50DF               	movf	indf2,w,c
  5204  00F0DE  6E2B               	movwf	(??_fatfs_init+10)& (0+255),c
  5205  00F0E0  C02B  F02C         	movff	??_fatfs_init+10,??_fatfs_init+11
  5206  00F0E4  6A2D               	clrf	(??_fatfs_init+12)& (0+255),c
  5207  00F0E6  6A2E               	clrf	(??_fatfs_init+13)& (0+255),c
  5208  00F0E8  6A2F               	clrf	(??_fatfs_init+14)& (0+255),c
  5209  00F0EA  C02C  F02F         	movff	??_fatfs_init+11,??_fatfs_init+14
  5210  00F0EE  6A2E               	clrf	??_fatfs_init+13,c
  5211  00F0F0  6A2D               	clrf	??_fatfs_init+12,c
  5212  00F0F2  6A2C               	clrf	??_fatfs_init+11,c
  5213  00F0F4  5027               	movf	??_fatfs_init+6,w,c
  5214  00F0F6  242C               	addwf	??_fatfs_init+11,w,c
  5215  00F0F8  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  5216  00F0FA  5028               	movf	??_fatfs_init+7,w,c
  5217  00F0FC  202D               	addwfc	??_fatfs_init+12,w,c
  5218  00F0FE  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  5219  00F100  5029               	movf	??_fatfs_init+8,w,c
  5220  00F102  202E               	addwfc	??_fatfs_init+13,w,c
  5221  00F104  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  5222  00F106  502A               	movf	??_fatfs_init+9,w,c
  5223  00F108  202F               	addwfc	??_fatfs_init+14,w,c
  5224  00F10A  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  5225  00F10C  5022               	movf	??_fatfs_init+1,w,c
  5226  00F10E  2430               	addwf	??_fatfs_init+15,w,c
  5227  00F110  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  5228  00F112  5023               	movf	??_fatfs_init+2,w,c
  5229  00F114  2031               	addwfc	??_fatfs_init+16,w,c
  5230  00F116  6E35               	movwf	(??_fatfs_init+20)& (0+255),c
  5231  00F118  5024               	movf	??_fatfs_init+3,w,c
  5232  00F11A  2032               	addwfc	??_fatfs_init+17,w,c
  5233  00F11C  6E36               	movwf	(??_fatfs_init+21)& (0+255),c
  5234  00F11E  5025               	movf	??_fatfs_init+4,w,c
  5235  00F120  2033               	addwfc	??_fatfs_init+18,w,c
  5236  00F122  6E37               	movwf	(??_fatfs_init+22)& (0+255),c
  5237  00F124  EE20 F055          	lfsr	2,85
  5238  00F128  501F               	movf	fatfs_init@fs,w,c
  5239  00F12A  26D9               	addwf	fsr2l,f,c
  5240  00F12C  5020               	movf	fatfs_init@fs+1,w,c
  5241  00F12E  22DA               	addwfc	fsr2h,f,c
  5242  00F130  50DF               	movf	indf2,w,c
  5243  00F132  6E38               	movwf	(??_fatfs_init+23)& (0+255),c
  5244  00F134  5038               	movf	??_fatfs_init+23,w,c
  5245  00F136  2434               	addwf	??_fatfs_init+19,w,c
  5246  00F138  6E39               	movwf	(??_fatfs_init+24)& (0+255),c
  5247  00F13A  0E00               	movlw	0
  5248  00F13C  2035               	addwfc	??_fatfs_init+20,w,c
  5249  00F13E  6E3A               	movwf	(??_fatfs_init+25)& (0+255),c
  5250  00F140  0E00               	movlw	0
  5251  00F142  2036               	addwfc	??_fatfs_init+21,w,c
  5252  00F144  6E3B               	movwf	(??_fatfs_init+26)& (0+255),c
  5253  00F146  0E00               	movlw	0
  5254  00F148  2037               	addwfc	??_fatfs_init+22,w,c
  5255  00F14A  6E3C               	movwf	(??_fatfs_init+27)& (0+255),c
  5256  00F14C  EE20 F01B          	lfsr	2,27
  5257  00F150  501F               	movf	fatfs_init@fs,w,c
  5258  00F152  26D9               	addwf	fsr2l,f,c
  5259  00F154  5020               	movf	fatfs_init@fs+1,w,c
  5260  00F156  22DA               	addwfc	fsr2h,f,c
  5261  00F158  C039  FFDE         	movff	??_fatfs_init+24,postinc2
  5262  00F15C  C03A  FFDE         	movff	??_fatfs_init+25,postinc2
  5263  00F160  C03B  FFDE         	movff	??_fatfs_init+26,postinc2
  5264  00F164  C03C  FFDD         	movff	??_fatfs_init+27,postdec2
  5265  00F168                     L6:
  5266  00F168  06D9               	decf	fsr2l,f,c
  5267  00F16A  06D9               	decf	fsr2l,f,c
  5268                           
  5269                           ;fat_access.c: 132: fs->rootdir_first_cluster = ( ((uint32)fs->currentsector.sector[44+3
      +                          ]<<24) + ((uint32)fs->currentsector.sector[44+2]<<16) + ((uint32)fs->currentsector.secto
      +                          r[44+1]<<8) + (uint32)fs->currentsector.sector[44+0] );
  5270  00F16C  EE20 F05E          	lfsr	2,94
  5271  00F170  501F               	movf	fatfs_init@fs,w,c
  5272  00F172  26D9               	addwf	fsr2l,f,c
  5273  00F174  5020               	movf	fatfs_init@fs+1,w,c
  5274  00F176  22DA               	addwfc	fsr2h,f,c
  5275  00F178  50DF               	movf	indf2,w,c
  5276  00F17A  6E21               	movwf	??_fatfs_init& (0+255),c
  5277  00F17C  C021  F022         	movff	??_fatfs_init,??_fatfs_init+1
  5278  00F180  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  5279  00F182  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  5280  00F184  6A25               	clrf	(??_fatfs_init+4)& (0+255),c
  5281  00F186  C024  F025         	movff	??_fatfs_init+3,??_fatfs_init+4
  5282  00F18A  C023  F024         	movff	??_fatfs_init+2,??_fatfs_init+3
  5283  00F18E  C022  F023         	movff	??_fatfs_init+1,??_fatfs_init+2
  5284  00F192  6A22               	clrf	??_fatfs_init+1,c
  5285  00F194  EE20 F05F          	lfsr	2,95
  5286  00F198  501F               	movf	fatfs_init@fs,w,c
  5287  00F19A  26D9               	addwf	fsr2l,f,c
  5288  00F19C  5020               	movf	fatfs_init@fs+1,w,c
  5289  00F19E  22DA               	addwfc	fsr2h,f,c
  5290  00F1A0  50DF               	movf	indf2,w,c
  5291  00F1A2  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  5292  00F1A4  C026  F027         	movff	??_fatfs_init+5,??_fatfs_init+6
  5293  00F1A8  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  5294  00F1AA  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  5295  00F1AC  6A2A               	clrf	(??_fatfs_init+9)& (0+255),c
  5296  00F1AE  C028  F02A         	movff	??_fatfs_init+7,??_fatfs_init+9
  5297  00F1B2  C027  F029         	movff	??_fatfs_init+6,??_fatfs_init+8
  5298  00F1B6  6A28               	clrf	??_fatfs_init+7,c
  5299  00F1B8  6A27               	clrf	??_fatfs_init+6,c
  5300  00F1BA  EE20 F060          	lfsr	2,96
  5301  00F1BE  501F               	movf	fatfs_init@fs,w,c
  5302  00F1C0  26D9               	addwf	fsr2l,f,c
  5303  00F1C2  5020               	movf	fatfs_init@fs+1,w,c
  5304  00F1C4  22DA               	addwfc	fsr2h,f,c
  5305  00F1C6  50DF               	movf	indf2,w,c
  5306  00F1C8  6E2B               	movwf	(??_fatfs_init+10)& (0+255),c
  5307  00F1CA  C02B  F02C         	movff	??_fatfs_init+10,??_fatfs_init+11
  5308  00F1CE  6A2D               	clrf	(??_fatfs_init+12)& (0+255),c
  5309  00F1D0  6A2E               	clrf	(??_fatfs_init+13)& (0+255),c
  5310  00F1D2  6A2F               	clrf	(??_fatfs_init+14)& (0+255),c
  5311  00F1D4  C02C  F02F         	movff	??_fatfs_init+11,??_fatfs_init+14
  5312  00F1D8  6A2E               	clrf	??_fatfs_init+13,c
  5313  00F1DA  6A2D               	clrf	??_fatfs_init+12,c
  5314  00F1DC  6A2C               	clrf	??_fatfs_init+11,c
  5315  00F1DE  5027               	movf	??_fatfs_init+6,w,c
  5316  00F1E0  242C               	addwf	??_fatfs_init+11,w,c
  5317  00F1E2  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  5318  00F1E4  5028               	movf	??_fatfs_init+7,w,c
  5319  00F1E6  202D               	addwfc	??_fatfs_init+12,w,c
  5320  00F1E8  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  5321  00F1EA  5029               	movf	??_fatfs_init+8,w,c
  5322  00F1EC  202E               	addwfc	??_fatfs_init+13,w,c
  5323  00F1EE  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  5324  00F1F0  502A               	movf	??_fatfs_init+9,w,c
  5325  00F1F2  202F               	addwfc	??_fatfs_init+14,w,c
  5326  00F1F4  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  5327  00F1F6  5022               	movf	??_fatfs_init+1,w,c
  5328  00F1F8  2430               	addwf	??_fatfs_init+15,w,c
  5329  00F1FA  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  5330  00F1FC  5023               	movf	??_fatfs_init+2,w,c
  5331  00F1FE  2031               	addwfc	??_fatfs_init+16,w,c
  5332  00F200  6E35               	movwf	(??_fatfs_init+20)& (0+255),c
  5333  00F202  5024               	movf	??_fatfs_init+3,w,c
  5334  00F204  2032               	addwfc	??_fatfs_init+17,w,c
  5335  00F206  6E36               	movwf	(??_fatfs_init+21)& (0+255),c
  5336  00F208  5025               	movf	??_fatfs_init+4,w,c
  5337  00F20A  2033               	addwfc	??_fatfs_init+18,w,c
  5338  00F20C  6E37               	movwf	(??_fatfs_init+22)& (0+255),c
  5339  00F20E  EE20 F05D          	lfsr	2,93
  5340  00F212  501F               	movf	fatfs_init@fs,w,c
  5341  00F214  26D9               	addwf	fsr2l,f,c
  5342  00F216  5020               	movf	fatfs_init@fs+1,w,c
  5343  00F218  22DA               	addwfc	fsr2h,f,c
  5344  00F21A  50DF               	movf	indf2,w,c
  5345  00F21C  6E38               	movwf	(??_fatfs_init+23)& (0+255),c
  5346  00F21E  5038               	movf	??_fatfs_init+23,w,c
  5347  00F220  2434               	addwf	??_fatfs_init+19,w,c
  5348  00F222  6E39               	movwf	(??_fatfs_init+24)& (0+255),c
  5349  00F224  0E00               	movlw	0
  5350  00F226  2035               	addwfc	??_fatfs_init+20,w,c
  5351  00F228  6E3A               	movwf	(??_fatfs_init+25)& (0+255),c
  5352  00F22A  0E00               	movlw	0
  5353  00F22C  2036               	addwfc	??_fatfs_init+21,w,c
  5354  00F22E  6E3B               	movwf	(??_fatfs_init+26)& (0+255),c
  5355  00F230  0E00               	movlw	0
  5356  00F232  2037               	addwfc	??_fatfs_init+22,w,c
  5357  00F234  6E3C               	movwf	(??_fatfs_init+27)& (0+255),c
  5358  00F236  EE20 F005          	lfsr	2,5
  5359  00F23A  501F               	movf	fatfs_init@fs,w,c
  5360  00F23C  26D9               	addwf	fsr2l,f,c
  5361  00F23E  5020               	movf	fatfs_init@fs+1,w,c
  5362  00F240  22DA               	addwfc	fsr2h,f,c
  5363  00F242  C039  FFDE         	movff	??_fatfs_init+24,postinc2
  5364  00F246  C03A  FFDE         	movff	??_fatfs_init+25,postinc2
  5365  00F24A  C03B  FFDE         	movff	??_fatfs_init+26,postinc2
  5366  00F24E  C03C  FFDD         	movff	??_fatfs_init+27,postdec2
  5367  00F252  06D9               	decf	fsr2l,f,c
  5368  00F254  06D9               	decf	fsr2l,f,c
  5369                           
  5370                           ;fat_access.c: 133: fs->fs_info_sector = ( ((uint16)fs->currentsector.sector[48+1]<<8) +
      +                           (uint16)fs->currentsector.sector[48+0] );
  5371  00F256  EE20 F062          	lfsr	2,98
  5372  00F25A  501F               	movf	fatfs_init@fs,w,c
  5373  00F25C  26D9               	addwf	fsr2l,f,c
  5374  00F25E  5020               	movf	fatfs_init@fs+1,w,c
  5375  00F260  22DA               	addwfc	fsr2h,f,c
  5376  00F262  50DF               	movf	indf2,w,c
  5377  00F264  6E21               	movwf	??_fatfs_init& (0+255),c
  5378  00F266  5021               	movf	??_fatfs_init,w,c
  5379  00F268  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5380  00F26A  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5381  00F26C  EE20 F061          	lfsr	2,97
  5382  00F270  501F               	movf	fatfs_init@fs,w,c
  5383  00F272  26D9               	addwf	fsr2l,f,c
  5384  00F274  5020               	movf	fatfs_init@fs+1,w,c
  5385  00F276  22DA               	addwfc	fsr2h,f,c
  5386  00F278  50DF               	movf	indf2,w,c
  5387  00F27A  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5388  00F27C  5024               	movf	??_fatfs_init+3,w,c
  5389  00F27E  2622               	addwf	??_fatfs_init+1,f,c
  5390  00F280  0E00               	movlw	0
  5391  00F282  2223               	addwfc	??_fatfs_init+2,f,c
  5392  00F284  EE20 F015          	lfsr	2,21
  5393  00F288  501F               	movf	fatfs_init@fs,w,c
  5394  00F28A  26D9               	addwf	fsr2l,f,c
  5395  00F28C  5020               	movf	fatfs_init@fs+1,w,c
  5396  00F28E  22DA               	addwfc	fsr2h,f,c
  5397  00F290  C022  FFDE         	movff	??_fatfs_init+1,postinc2
  5398  00F294  C023  FFDD         	movff	??_fatfs_init+2,postdec2
  5399                           
  5400                           ;fat_access.c: 136: fs->rootdir_first_sector = reserved_sectors + (num_of_fats * fs->fat
      +                          _sectors);
  5401  00F298  EE20 F01B          	lfsr	2,27
  5402  00F29C  501F               	movf	fatfs_init@fs,w,c
  5403  00F29E  26D9               	addwf	fsr2l,f,c
  5404  00F2A0  5020               	movf	fatfs_init@fs+1,w,c
  5405  00F2A2  22DA               	addwfc	fsr2h,f,c
  5406  00F2A4  CFDE F021          	movff	postinc2,??_fatfs_init
  5407  00F2A8  CFDE F022          	movff	postinc2,??_fatfs_init+1
  5408  00F2AC  CFDE F023          	movff	postinc2,??_fatfs_init+2
  5409  00F2B0  CFDE F024          	movff	postinc2,??_fatfs_init+3
  5410  00F2B4  C054  F025         	movff	fatfs_init@num_of_fats,??_fatfs_init+4
  5411  00F2B8  6A26               	clrf	(??_fatfs_init+5)& (0+255),c
  5412  00F2BA  6A27               	clrf	(??_fatfs_init+6)& (0+255),c
  5413  00F2BC  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  5414  00F2BE  5025               	movf	??_fatfs_init+4,w,c
  5415  00F2C0  0221               	mulwf	??_fatfs_init,c
  5416  00F2C2  CFF3 F029          	movff	prodl,??_fatfs_init+8
  5417  00F2C6  CFF4 F02A          	movff	prodh,??_fatfs_init+9
  5418  00F2CA  6A2B               	clrf	(??_fatfs_init+10)& (0+255),c
  5419  00F2CC  6A2C               	clrf	(??_fatfs_init+11)& (0+255),c
  5420  00F2CE  0222               	mulwf	??_fatfs_init+1,c
  5421  00F2D0  50F3               	movf	243,w,c
  5422  00F2D2  262A               	addwf	(??_fatfs_init+9)& (0+255),f,c
  5423  00F2D4  50F4               	movf	244,w,c
  5424  00F2D6  222B               	addwfc	(??_fatfs_init+10)& (0+255),f,c
  5425  00F2D8  0E00               	movlw	0
  5426  00F2DA  222C               	addwfc	(??_fatfs_init+11)& (0+255),f,c
  5427  00F2DC  5026               	movf	??_fatfs_init+5,w,c
  5428  00F2DE  0221               	mulwf	??_fatfs_init,c
  5429  00F2E0  50F3               	movf	243,w,c
  5430  00F2E2  262A               	addwf	(??_fatfs_init+9)& (0+255),f,c
  5431  00F2E4  50F4               	movf	244,w,c
  5432  00F2E6  222B               	addwfc	(??_fatfs_init+10)& (0+255),f,c
  5433  00F2E8  0E00               	movlw	0
  5434  00F2EA  222C               	addwfc	(??_fatfs_init+11)& (0+255),f,c
  5435  00F2EC  5025               	movf	??_fatfs_init+4,w,c
  5436  00F2EE  0223               	mulwf	??_fatfs_init+2,c
  5437  00F2F0  50F3               	movf	243,w,c
  5438  00F2F2  262B               	addwf	(??_fatfs_init+10)& (0+255),f,c
  5439  00F2F4  50F4               	movf	244,w,c
  5440  00F2F6  222C               	addwfc	(??_fatfs_init+11)& (0+255),f,c
  5441  00F2F8  5026               	movf	??_fatfs_init+5,w,c
  5442  00F2FA  0222               	mulwf	??_fatfs_init+1,c
  5443  00F2FC  50F3               	movf	243,w,c
  5444  00F2FE  262B               	addwf	(??_fatfs_init+10)& (0+255),f,c
  5445  00F300  50F4               	movf	244,w,c
  5446  00F302  222C               	addwfc	(??_fatfs_init+11)& (0+255),f,c
  5447  00F304  5027               	movf	??_fatfs_init+6,w,c
  5448  00F306  0221               	mulwf	??_fatfs_init,c
  5449  00F308  50F3               	movf	243,w,c
  5450  00F30A  262B               	addwf	(??_fatfs_init+10)& (0+255),f,c
  5451  00F30C  50F4               	movf	244,w,c
  5452  00F30E  222C               	addwfc	(??_fatfs_init+11)& (0+255),f,c
  5453  00F310  5024               	movf	??_fatfs_init+3,w,c
  5454  00F312  0225               	mulwf	??_fatfs_init+4,c
  5455  00F314  50F3               	movf	243,w,c
  5456  00F316  262C               	addwf	(??_fatfs_init+11)& (0+255),f,c
  5457  00F318  5026               	movf	??_fatfs_init+5,w,c
  5458  00F31A  0223               	mulwf	??_fatfs_init+2,c
  5459  00F31C  50F3               	movf	243,w,c
  5460  00F31E  262C               	addwf	(??_fatfs_init+11)& (0+255),f,c
  5461  00F320  5027               	movf	??_fatfs_init+6,w,c
  5462  00F322  0222               	mulwf	??_fatfs_init+1,c
  5463  00F324  50F3               	movf	243,w,c
  5464  00F326  262C               	addwf	(??_fatfs_init+11)& (0+255),f,c
  5465  00F328  5028               	movf	??_fatfs_init+7,w,c
  5466  00F32A  0221               	mulwf	??_fatfs_init,c
  5467  00F32C  50F3               	movf	243,w,c
  5468  00F32E  262C               	addwf	(??_fatfs_init+11)& (0+255),f,c
  5469  00F330  5051               	movf	fatfs_init@reserved_sectors,w,c
  5470  00F332  2429               	addwf	??_fatfs_init+8,w,c
  5471  00F334  6E2D               	movwf	(??_fatfs_init+12)& (0+255),c
  5472  00F336  5052               	movf	fatfs_init@reserved_sectors+1,w,c
  5473  00F338  202A               	addwfc	??_fatfs_init+9,w,c
  5474  00F33A  6E2E               	movwf	(??_fatfs_init+13)& (0+255),c
  5475  00F33C  0E00               	movlw	0
  5476  00F33E  202B               	addwfc	??_fatfs_init+10,w,c
  5477  00F340  6E2F               	movwf	(??_fatfs_init+14)& (0+255),c
  5478  00F342  0E00               	movlw	0
  5479  00F344  202C               	addwfc	??_fatfs_init+11,w,c
  5480  00F346  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  5481  00F348  EE20 F009          	lfsr	2,9
  5482  00F34C  501F               	movf	fatfs_init@fs,w,c
  5483  00F34E  26D9               	addwf	fsr2l,f,c
  5484  00F350  5020               	movf	fatfs_init@fs+1,w,c
  5485  00F352  22DA               	addwfc	fsr2h,f,c
  5486  00F354  C02D  FFDE         	movff	??_fatfs_init+12,postinc2
  5487  00F358  C02E  FFDE         	movff	??_fatfs_init+13,postinc2
  5488  00F35C  C02F  FFDE         	movff	??_fatfs_init+14,postinc2
  5489  00F360  C030  FFDD         	movff	??_fatfs_init+15,postdec2
  5490  00F364  06D9               	decf	fsr2l,f,c
  5491  00F366  06D9               	decf	fsr2l,f,c
  5492                           
  5493                           ;fat_access.c: 137: fs->rootdir_sectors = ((fs->root_entry_count * 32) + (512 - 1)) / 51
      +                          2;
  5494  00F368  6821               	setf	??_fatfs_init& (0+255),c
  5495  00F36A  0E01               	movlw	1
  5496  00F36C  6E22               	movwf	(??_fatfs_init+1)& (0+255),c
  5497  00F36E  EE20 F023          	lfsr	2,35
  5498  00F372  501F               	movf	fatfs_init@fs,w,c
  5499  00F374  26D9               	addwf	fsr2l,f,c
  5500  00F376  5020               	movf	fatfs_init@fs+1,w,c
  5501  00F378  22DA               	addwfc	fsr2h,f,c
  5502  00F37A  CFDE F023          	movff	postinc2,??_fatfs_init+2
  5503  00F37E  CFDD F024          	movff	postdec2,??_fatfs_init+3
  5504  00F382  0E05               	movlw	5
  5505  00F384                     u15145:
  5506  00F384  90D8               	bcf	status,0,c
  5507  00F386  3623               	rlcf	??_fatfs_init+2,f,c
  5508  00F388  3624               	rlcf	??_fatfs_init+3,f,c
  5509  00F38A  2EE8               	decfsz	wreg,f,c
  5510  00F38C  D7FB               	goto	u15145
  5511  00F38E  5021               	movf	??_fatfs_init,w,c
  5512  00F390  2623               	addwf	??_fatfs_init+2,f,c
  5513  00F392  5022               	movf	??_fatfs_init+1,w,c
  5514  00F394  2224               	addwfc	??_fatfs_init+3,f,c
  5515  00F396  0E09               	movlw	9
  5516  00F398  6E25               	movwf	(??_fatfs_init+4)& (0+255),c
  5517  00F39A                     u15155:
  5518  00F39A  90D8               	bcf	status,0,c
  5519  00F39C  3224               	rrcf	??_fatfs_init+3,f,c
  5520  00F39E  3223               	rrcf	??_fatfs_init+2,f,c
  5521  00F3A0  2E25               	decfsz	(??_fatfs_init+4)& (0+255),f,c
  5522  00F3A2  D7FB               	goto	u15155
  5523  00F3A4  5023               	movf	??_fatfs_init+2,w,c
  5524  00F3A6  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  5525  00F3A8  5024               	movf	??_fatfs_init+3,w,c
  5526  00F3AA  6E27               	movwf	(??_fatfs_init+6)& (0+255),c
  5527  00F3AC  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  5528  00F3AE  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  5529  00F3B0  EE20 F00D          	lfsr	2,13
  5530  00F3B4  501F               	movf	fatfs_init@fs,w,c
  5531  00F3B6  26D9               	addwf	fsr2l,f,c
  5532  00F3B8  5020               	movf	fatfs_init@fs+1,w,c
  5533  00F3BA  22DA               	addwfc	fsr2h,f,c
  5534  00F3BC  C026  FFDE         	movff	??_fatfs_init+5,postinc2
  5535  00F3C0  C027  FFDE         	movff	??_fatfs_init+6,postinc2
  5536  00F3C4  C028  FFDE         	movff	??_fatfs_init+7,postinc2
  5537  00F3C8  C029  FFDD         	movff	??_fatfs_init+8,postdec2
  5538  00F3CC  06D9               	decf	fsr2l,f,c
  5539  00F3CE  06D9               	decf	fsr2l,f,c
  5540                           
  5541                           ;fat_access.c: 140: fs->fat_begin_lba = fs->lba_begin + reserved_sectors;
  5542  00F3D0  EE20 F017          	lfsr	2,23
  5543  00F3D4  501F               	movf	fatfs_init@fs,w,c
  5544  00F3D6  26D9               	addwf	fsr2l,f,c
  5545  00F3D8  5020               	movf	fatfs_init@fs+1,w,c
  5546  00F3DA  22DA               	addwfc	fsr2h,f,c
  5547  00F3DC  CFDE F021          	movff	postinc2,??_fatfs_init
  5548  00F3E0  CFDE F022          	movff	postinc2,??_fatfs_init+1
  5549  00F3E4  CFDE F023          	movff	postinc2,??_fatfs_init+2
  5550  00F3E8  CFDE F024          	movff	postinc2,??_fatfs_init+3
  5551  00F3EC  5051               	movf	fatfs_init@reserved_sectors,w,c
  5552  00F3EE  2421               	addwf	??_fatfs_init,w,c
  5553  00F3F0  6E25               	movwf	(??_fatfs_init+4)& (0+255),c
  5554  00F3F2  5052               	movf	fatfs_init@reserved_sectors+1,w,c
  5555  00F3F4  2022               	addwfc	??_fatfs_init+1,w,c
  5556  00F3F6  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  5557  00F3F8  0E00               	movlw	0
  5558  00F3FA  2023               	addwfc	??_fatfs_init+2,w,c
  5559  00F3FC  6E27               	movwf	(??_fatfs_init+6)& (0+255),c
  5560  00F3FE  0E00               	movlw	0
  5561  00F400  2024               	addwfc	??_fatfs_init+3,w,c
  5562  00F402  6E28               	movwf	(??_fatfs_init+7)& (0+255),c
  5563  00F404  EE20 F011          	lfsr	2,17
  5564  00F408  501F               	movf	fatfs_init@fs,w,c
  5565  00F40A  26D9               	addwf	fsr2l,f,c
  5566  00F40C  5020               	movf	fatfs_init@fs+1,w,c
  5567  00F40E  22DA               	addwfc	fsr2h,f,c
  5568  00F410  C025  FFDE         	movff	??_fatfs_init+4,postinc2
  5569  00F414  C026  FFDE         	movff	??_fatfs_init+5,postinc2
  5570  00F418  C027  FFDE         	movff	??_fatfs_init+6,postinc2
  5571  00F41C  C028  FFDD         	movff	??_fatfs_init+7,postdec2
  5572  00F420  06D9               	decf	fsr2l,f,c
  5573  00F422  06D9               	decf	fsr2l,f,c
  5574                           
  5575                           ;fat_access.c: 143: fs->cluster_begin_lba = fs->fat_begin_lba + (num_of_fats * fs->fat_s
      +                          ectors);
  5576  00F424  EE20 F011          	lfsr	2,17
  5577  00F428  501F               	movf	fatfs_init@fs,w,c
  5578  00F42A  26D9               	addwf	fsr2l,f,c
  5579  00F42C  5020               	movf	fatfs_init@fs+1,w,c
  5580  00F42E  22DA               	addwfc	fsr2h,f,c
  5581  00F430  CFDE F021          	movff	postinc2,??_fatfs_init
  5582  00F434  CFDE F022          	movff	postinc2,??_fatfs_init+1
  5583  00F438  CFDE F023          	movff	postinc2,??_fatfs_init+2
  5584  00F43C  CFDE F024          	movff	postinc2,??_fatfs_init+3
  5585  00F440  EE20 F01B          	lfsr	2,27
  5586  00F444  501F               	movf	fatfs_init@fs,w,c
  5587  00F446  26D9               	addwf	fsr2l,f,c
  5588  00F448  5020               	movf	fatfs_init@fs+1,w,c
  5589  00F44A  22DA               	addwfc	fsr2h,f,c
  5590  00F44C  CFDE F025          	movff	postinc2,??_fatfs_init+4
  5591  00F450  CFDE F026          	movff	postinc2,??_fatfs_init+5
  5592  00F454  CFDE F027          	movff	postinc2,??_fatfs_init+6
  5593  00F458  CFDE F028          	movff	postinc2,??_fatfs_init+7
  5594  00F45C  C054  F029         	movff	fatfs_init@num_of_fats,??_fatfs_init+8
  5595  00F460  6A2A               	clrf	(??_fatfs_init+9)& (0+255),c
  5596  00F462  6A2B               	clrf	(??_fatfs_init+10)& (0+255),c
  5597  00F464  6A2C               	clrf	(??_fatfs_init+11)& (0+255),c
  5598  00F466  5029               	movf	??_fatfs_init+8,w,c
  5599  00F468  0225               	mulwf	??_fatfs_init+4,c
  5600  00F46A  CFF3 F02D          	movff	prodl,??_fatfs_init+12
  5601  00F46E  CFF4 F02E          	movff	prodh,??_fatfs_init+13
  5602  00F472  6A2F               	clrf	(??_fatfs_init+14)& (0+255),c
  5603  00F474  6A30               	clrf	(??_fatfs_init+15)& (0+255),c
  5604  00F476  0226               	mulwf	??_fatfs_init+5,c
  5605  00F478  50F3               	movf	243,w,c
  5606  00F47A  262E               	addwf	(??_fatfs_init+13)& (0+255),f,c
  5607  00F47C  50F4               	movf	244,w,c
  5608  00F47E  222F               	addwfc	(??_fatfs_init+14)& (0+255),f,c
  5609  00F480  0E00               	movlw	0
  5610  00F482  2230               	addwfc	(??_fatfs_init+15)& (0+255),f,c
  5611  00F484  502A               	movf	??_fatfs_init+9,w,c
  5612  00F486  0225               	mulwf	??_fatfs_init+4,c
  5613  00F488  50F3               	movf	243,w,c
  5614  00F48A  262E               	addwf	(??_fatfs_init+13)& (0+255),f,c
  5615  00F48C  50F4               	movf	244,w,c
  5616  00F48E  222F               	addwfc	(??_fatfs_init+14)& (0+255),f,c
  5617  00F490  0E00               	movlw	0
  5618  00F492  2230               	addwfc	(??_fatfs_init+15)& (0+255),f,c
  5619  00F494  5029               	movf	??_fatfs_init+8,w,c
  5620  00F496  0227               	mulwf	??_fatfs_init+6,c
  5621  00F498  50F3               	movf	243,w,c
  5622  00F49A  262F               	addwf	(??_fatfs_init+14)& (0+255),f,c
  5623  00F49C  50F4               	movf	244,w,c
  5624  00F49E  2230               	addwfc	(??_fatfs_init+15)& (0+255),f,c
  5625  00F4A0  502A               	movf	??_fatfs_init+9,w,c
  5626  00F4A2  0226               	mulwf	??_fatfs_init+5,c
  5627  00F4A4  50F3               	movf	243,w,c
  5628  00F4A6  262F               	addwf	(??_fatfs_init+14)& (0+255),f,c
  5629  00F4A8  50F4               	movf	244,w,c
  5630  00F4AA  2230               	addwfc	(??_fatfs_init+15)& (0+255),f,c
  5631  00F4AC  502B               	movf	??_fatfs_init+10,w,c
  5632  00F4AE  0225               	mulwf	??_fatfs_init+4,c
  5633  00F4B0  50F3               	movf	243,w,c
  5634  00F4B2  262F               	addwf	(??_fatfs_init+14)& (0+255),f,c
  5635  00F4B4  50F4               	movf	244,w,c
  5636  00F4B6  2230               	addwfc	(??_fatfs_init+15)& (0+255),f,c
  5637  00F4B8  5028               	movf	??_fatfs_init+7,w,c
  5638  00F4BA  0229               	mulwf	??_fatfs_init+8,c
  5639  00F4BC  50F3               	movf	243,w,c
  5640  00F4BE  2630               	addwf	(??_fatfs_init+15)& (0+255),f,c
  5641  00F4C0  502A               	movf	??_fatfs_init+9,w,c
  5642  00F4C2  0227               	mulwf	??_fatfs_init+6,c
  5643  00F4C4  50F3               	movf	243,w,c
  5644  00F4C6  2630               	addwf	(??_fatfs_init+15)& (0+255),f,c
  5645  00F4C8  502B               	movf	??_fatfs_init+10,w,c
  5646  00F4CA  0226               	mulwf	??_fatfs_init+5,c
  5647  00F4CC  50F3               	movf	243,w,c
  5648  00F4CE  2630               	addwf	(??_fatfs_init+15)& (0+255),f,c
  5649  00F4D0  502C               	movf	??_fatfs_init+11,w,c
  5650  00F4D2  0225               	mulwf	??_fatfs_init+4,c
  5651  00F4D4  50F3               	movf	243,w,c
  5652  00F4D6  2630               	addwf	(??_fatfs_init+15)& (0+255),f,c
  5653  00F4D8  5021               	movf	??_fatfs_init,w,c
  5654  00F4DA  242D               	addwf	??_fatfs_init+12,w,c
  5655  00F4DC  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  5656  00F4DE  5022               	movf	??_fatfs_init+1,w,c
  5657  00F4E0  202E               	addwfc	??_fatfs_init+13,w,c
  5658  00F4E2  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  5659  00F4E4  5023               	movf	??_fatfs_init+2,w,c
  5660  00F4E6  202F               	addwfc	??_fatfs_init+14,w,c
  5661  00F4E8  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  5662  00F4EA  5024               	movf	??_fatfs_init+3,w,c
  5663  00F4EC  2030               	addwfc	??_fatfs_init+15,w,c
  5664  00F4EE  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  5665  00F4F0  EE20 F001          	lfsr	2,1
  5666  00F4F4  501F               	movf	fatfs_init@fs,w,c
  5667  00F4F6  26D9               	addwf	fsr2l,f,c
  5668  00F4F8  5020               	movf	fatfs_init@fs+1,w,c
  5669  00F4FA  22DA               	addwfc	fsr2h,f,c
  5670  00F4FC  C031  FFDE         	movff	??_fatfs_init+16,postinc2
  5671  00F500  C032  FFDE         	movff	??_fatfs_init+17,postinc2
  5672  00F504  C033  FFDE         	movff	??_fatfs_init+18,postinc2
  5673  00F508  C034  FFDD         	movff	??_fatfs_init+19,postdec2
  5674  00F50C  06D9               	decf	fsr2l,f,c
  5675  00F50E  06D9               	decf	fsr2l,f,c
  5676                           
  5677                           ;fat_access.c: 145: if (( ((uint16)fs->currentsector.sector[0x1FE+1]<<8) + (uint16)fs->c
      +                          urrentsector.sector[0x1FE+0] ) != 0xAA55)
  5678  00F510  EE22 F030          	lfsr	2,560
  5679  00F514  501F               	movf	fatfs_init@fs,w,c
  5680  00F516  26D9               	addwf	fsr2l,f,c
  5681  00F518  5020               	movf	fatfs_init@fs+1,w,c
  5682  00F51A  22DA               	addwfc	fsr2h,f,c
  5683  00F51C  50DF               	movf	indf2,w,c
  5684  00F51E  6E21               	movwf	??_fatfs_init& (0+255),c
  5685  00F520  5021               	movf	??_fatfs_init,w,c
  5686  00F522  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5687  00F524  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5688  00F526  EE22 F02F          	lfsr	2,559
  5689  00F52A  501F               	movf	fatfs_init@fs,w,c
  5690  00F52C  26D9               	addwf	fsr2l,f,c
  5691  00F52E  5020               	movf	fatfs_init@fs+1,w,c
  5692  00F530  22DA               	addwfc	fsr2h,f,c
  5693  00F532  50DF               	movf	indf2,w,c
  5694  00F534  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5695  00F536  5024               	movf	??_fatfs_init+3,w,c
  5696  00F538  2622               	addwf	??_fatfs_init+1,f,c
  5697  00F53A  0E00               	movlw	0
  5698  00F53C  2223               	addwfc	??_fatfs_init+2,f,c
  5699  00F53E  5023               	movf	??_fatfs_init+2,w,c
  5700  00F540  0AAA               	xorlw	170
  5701  00F542  0E55               	movlw	85
  5702  00F544  B4D8               	btfsc	status,2,c
  5703  00F546  1822               	xorwf	??_fatfs_init+1,w,c
  5704  00F548  E002 EF96  F076    	bnz	l12543
  5705                           
  5706                           ;fat_access.c: 149: root_dir_sectors = ((( ((uint16)fs->currentsector.sector[17+1]<<8) +
      +                           (uint16)fs->currentsector.sector[17+0] ) * 32) + (( ((uint16)fs->currentsector.sector[1
      +                          1+1]<<8) + (uint16)fs->currentsector.sector[11+0] ) - 1)) / ( ((uint16)fs->currentsector
      +                          .secto
  5707                           
  5708                           ;fat_access.c: 146: return (-3);
  5709  00F54E  EE20 F043          	lfsr	2,67
  5710  00F552  501F               	movf	fatfs_init@fs,w,c
  5711  00F554  26D9               	addwf	fsr2l,f,c
  5712  00F556  5020               	movf	fatfs_init@fs+1,w,c
  5713  00F558  22DA               	addwfc	fsr2h,f,c
  5714  00F55A  50DF               	movf	indf2,w,c
  5715  00F55C  6E21               	movwf	??_fatfs_init& (0+255),c
  5716  00F55E  5021               	movf	??_fatfs_init,w,c
  5717  00F560  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5718  00F562  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5719  00F564  EE20 F042          	lfsr	2,66
  5720  00F568  501F               	movf	fatfs_init@fs,w,c
  5721  00F56A  26D9               	addwf	fsr2l,f,c
  5722  00F56C  5020               	movf	fatfs_init@fs+1,w,c
  5723  00F56E  22DA               	addwfc	fsr2h,f,c
  5724  00F570  50DF               	movf	indf2,w,c
  5725  00F572  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5726  00F574  5024               	movf	??_fatfs_init+3,w,c
  5727  00F576  2622               	addwf	??_fatfs_init+1,f,c
  5728  00F578  0E00               	movlw	0
  5729  00F57A  2223               	addwfc	??_fatfs_init+2,f,c
  5730  00F57C  0E05               	movlw	5
  5731  00F57E                     u15175:
  5732  00F57E  90D8               	bcf	status,0,c
  5733  00F580  3622               	rlcf	??_fatfs_init+1,f,c
  5734  00F582  3623               	rlcf	??_fatfs_init+2,f,c
  5735  00F584  2EE8               	decfsz	wreg,f,c
  5736  00F586  D7FB               	goto	u15175
  5737  00F588  EE20 F03D          	lfsr	2,61
  5738  00F58C  501F               	movf	fatfs_init@fs,w,c
  5739  00F58E  26D9               	addwf	fsr2l,f,c
  5740  00F590  5020               	movf	fatfs_init@fs+1,w,c
  5741  00F592  22DA               	addwfc	fsr2h,f,c
  5742  00F594  50DF               	movf	indf2,w,c
  5743  00F596  6E25               	movwf	(??_fatfs_init+4)& (0+255),c
  5744  00F598  5025               	movf	??_fatfs_init+4,w,c
  5745  00F59A  6E27               	movwf	(??_fatfs_init+6)& (0+255),c
  5746  00F59C  6A26               	clrf	(??_fatfs_init+5)& (0+255),c
  5747  00F59E  EE20 F03C          	lfsr	2,60
  5748  00F5A2  501F               	movf	fatfs_init@fs,w,c
  5749  00F5A4  26D9               	addwf	fsr2l,f,c
  5750  00F5A6  5020               	movf	fatfs_init@fs+1,w,c
  5751  00F5A8  22DA               	addwfc	fsr2h,f,c
  5752  00F5AA  50DF               	movf	indf2,w,c
  5753  00F5AC  6E28               	movwf	(??_fatfs_init+7)& (0+255),c
  5754  00F5AE  5028               	movf	??_fatfs_init+7,w,c
  5755  00F5B0  2626               	addwf	??_fatfs_init+5,f,c
  5756  00F5B2  0E00               	movlw	0
  5757  00F5B4  2227               	addwfc	??_fatfs_init+6,f,c
  5758  00F5B6  5022               	movf	??_fatfs_init+1,w,c
  5759  00F5B8  2626               	addwf	??_fatfs_init+5,f,c
  5760  00F5BA  5023               	movf	??_fatfs_init+2,w,c
  5761  00F5BC  2227               	addwfc	??_fatfs_init+6,f,c
  5762  00F5BE  0EFF               	movlw	255
  5763  00F5C0  2426               	addwf	??_fatfs_init+5,w,c
  5764  00F5C2  6E01               	movwf	___lwdiv@dividend,c
  5765  00F5C4  0EFF               	movlw	255
  5766  00F5C6  2027               	addwfc	??_fatfs_init+6,w,c
  5767  00F5C8  6E02               	movwf	___lwdiv@dividend+1,c
  5768  00F5CA  EE20 F03C          	lfsr	2,60
  5769  00F5CE  501F               	movf	fatfs_init@fs,w,c
  5770  00F5D0  26D9               	addwf	fsr2l,f,c
  5771  00F5D2  5020               	movf	fatfs_init@fs+1,w,c
  5772  00F5D4  22DA               	addwfc	fsr2h,f,c
  5773  00F5D6  50DF               	movf	indf2,w,c
  5774  00F5D8  6E29               	movwf	(??_fatfs_init+8)& (0+255),c
  5775  00F5DA  EE20 F03D          	lfsr	2,61
  5776  00F5DE  501F               	movf	fatfs_init@fs,w,c
  5777  00F5E0  26D9               	addwf	fsr2l,f,c
  5778  00F5E2  5020               	movf	fatfs_init@fs+1,w,c
  5779  00F5E4  22DA               	addwfc	fsr2h,f,c
  5780  00F5E6  50DF               	movf	indf2,w,c
  5781  00F5E8  6E04               	movwf	___lwdiv@divisor+1,c
  5782  00F5EA  5029               	movf	??_fatfs_init+8,w,c
  5783  00F5EC  6E03               	movwf	___lwdiv@divisor,c
  5784  00F5EE  ECB5  F021         	call	___lwdiv	;wreg free
  5785  00F5F2  C001  F03D         	movff	?___lwdiv,fatfs_init@root_dir_sectors
  5786  00F5F6  C002  F03E         	movff	?___lwdiv+1,fatfs_init@root_dir_sectors+1
  5787  00F5FA  6A3F               	clrf	fatfs_init@root_dir_sectors+2,c
  5788  00F5FC  6A40               	clrf	fatfs_init@root_dir_sectors+3,c
  5789                           
  5790                           ;fat_access.c: 151: if(( ((uint16)fs->currentsector.sector[22+1]<<8) + (uint16)fs->curre
      +                          ntsector.sector[22+0] ) != 0)
  5791  00F5FE  EE20 F048          	lfsr	2,72
  5792  00F602  501F               	movf	fatfs_init@fs,w,c
  5793  00F604  26D9               	addwf	fsr2l,f,c
  5794  00F606  5020               	movf	fatfs_init@fs+1,w,c
  5795  00F608  22DA               	addwfc	fsr2h,f,c
  5796  00F60A  50DF               	movf	indf2,w,c
  5797  00F60C  6E21               	movwf	??_fatfs_init& (0+255),c
  5798  00F60E  5021               	movf	??_fatfs_init,w,c
  5799  00F610  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5800  00F612  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5801  00F614  EE20 F047          	lfsr	2,71
  5802  00F618  501F               	movf	fatfs_init@fs,w,c
  5803  00F61A  26D9               	addwf	fsr2l,f,c
  5804  00F61C  5020               	movf	fatfs_init@fs+1,w,c
  5805  00F61E  22DA               	addwfc	fsr2h,f,c
  5806  00F620  50DF               	movf	indf2,w,c
  5807  00F622  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5808  00F624  5024               	movf	??_fatfs_init+3,w,c
  5809  00F626  2622               	addwf	??_fatfs_init+1,f,c
  5810  00F628  0E00               	movlw	0
  5811  00F62A  2223               	addwfc	??_fatfs_init+2,f,c
  5812  00F62C  5023               	movf	??_fatfs_init+2,w,c
  5813  00F62E  1022               	iorwf	??_fatfs_init+1,w,c
  5814  00F630  E01E               	bz	l12617
  5815                           
  5816                           ;fat_access.c: 152: FATSz = ( ((uint16)fs->currentsector.sector[22+1]<<8) + (uint16)fs->
      +                          currentsector.sector[22+0] );
  5817  00F632  EE20 F048          	lfsr	2,72
  5818  00F636  501F               	movf	fatfs_init@fs,w,c
  5819  00F638  26D9               	addwf	fsr2l,f,c
  5820  00F63A  5020               	movf	fatfs_init@fs+1,w,c
  5821  00F63C  22DA               	addwfc	fsr2h,f,c
  5822  00F63E  50DF               	movf	indf2,w,c
  5823  00F640  6E21               	movwf	??_fatfs_init& (0+255),c
  5824  00F642  5021               	movf	??_fatfs_init,w,c
  5825  00F644  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5826  00F646  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5827  00F648  EE20 F047          	lfsr	2,71
  5828  00F64C  501F               	movf	fatfs_init@fs,w,c
  5829  00F64E  26D9               	addwf	fsr2l,f,c
  5830  00F650  5020               	movf	fatfs_init@fs+1,w,c
  5831  00F652  22DA               	addwfc	fsr2h,f,c
  5832  00F654  50DF               	movf	indf2,w,c
  5833  00F656  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5834  00F658  5024               	movf	??_fatfs_init+3,w,c
  5835  00F65A  2622               	addwf	??_fatfs_init+1,f,c
  5836  00F65C  0E00               	movlw	0
  5837  00F65E  2223               	addwfc	??_fatfs_init+2,f,c
  5838  00F660  C022  F045         	movff	??_fatfs_init+1,fatfs_init@FATSz
  5839  00F664  C023  F046         	movff	??_fatfs_init+2,fatfs_init@FATSz+1
  5840  00F668  6A47               	clrf	fatfs_init@FATSz+2,c
  5841  00F66A  6A48               	clrf	fatfs_init@FATSz+3,c
  5842  00F66C  D065               	goto	l64
  5843  00F66E                     l12617:
  5844                           
  5845                           ;fat_access.c: 153: else
  5846                           ;fat_access.c: 154: FATSz = ( ((uint32)fs->currentsector.sector[36+3]<<24) + ((uint32)fs
      +                          ->currentsector.sector[36+2]<<16) + ((uint32)fs->currentsector.sector[36+1]<<8) + (uint3
      +                          2)fs->currentsector.sector[36+0] );
  5847  00F66E  EE20 F056          	lfsr	2,86
  5848  00F672  501F               	movf	fatfs_init@fs,w,c
  5849  00F674  26D9               	addwf	fsr2l,f,c
  5850  00F676  5020               	movf	fatfs_init@fs+1,w,c
  5851  00F678  22DA               	addwfc	fsr2h,f,c
  5852  00F67A  50DF               	movf	indf2,w,c
  5853  00F67C  6E21               	movwf	??_fatfs_init& (0+255),c
  5854  00F67E  C021  F022         	movff	??_fatfs_init,??_fatfs_init+1
  5855  00F682  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  5856  00F684  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  5857  00F686  6A25               	clrf	(??_fatfs_init+4)& (0+255),c
  5858  00F688  C024  F025         	movff	??_fatfs_init+3,??_fatfs_init+4
  5859  00F68C  C023  F024         	movff	??_fatfs_init+2,??_fatfs_init+3
  5860  00F690  C022  F023         	movff	??_fatfs_init+1,??_fatfs_init+2
  5861  00F694  6A22               	clrf	??_fatfs_init+1,c
  5862  00F696  EE20 F057          	lfsr	2,87
  5863  00F69A  501F               	movf	fatfs_init@fs,w,c
  5864  00F69C  26D9               	addwf	fsr2l,f,c
  5865  00F69E  5020               	movf	fatfs_init@fs+1,w,c
  5866  00F6A0  22DA               	addwfc	fsr2h,f,c
  5867  00F6A2  50DF               	movf	indf2,w,c
  5868  00F6A4  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  5869  00F6A6  C026  F027         	movff	??_fatfs_init+5,??_fatfs_init+6
  5870  00F6AA  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  5871  00F6AC  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  5872  00F6AE  6A2A               	clrf	(??_fatfs_init+9)& (0+255),c
  5873  00F6B0  C028  F02A         	movff	??_fatfs_init+7,??_fatfs_init+9
  5874  00F6B4  C027  F029         	movff	??_fatfs_init+6,??_fatfs_init+8
  5875  00F6B8  6A28               	clrf	??_fatfs_init+7,c
  5876  00F6BA  6A27               	clrf	??_fatfs_init+6,c
  5877  00F6BC  EE20 F058          	lfsr	2,88
  5878  00F6C0  501F               	movf	fatfs_init@fs,w,c
  5879  00F6C2  26D9               	addwf	fsr2l,f,c
  5880  00F6C4  5020               	movf	fatfs_init@fs+1,w,c
  5881  00F6C6  22DA               	addwfc	fsr2h,f,c
  5882  00F6C8  50DF               	movf	indf2,w,c
  5883  00F6CA  6E2B               	movwf	(??_fatfs_init+10)& (0+255),c
  5884  00F6CC  C02B  F02C         	movff	??_fatfs_init+10,??_fatfs_init+11
  5885  00F6D0  6A2D               	clrf	(??_fatfs_init+12)& (0+255),c
  5886  00F6D2  6A2E               	clrf	(??_fatfs_init+13)& (0+255),c
  5887  00F6D4  6A2F               	clrf	(??_fatfs_init+14)& (0+255),c
  5888  00F6D6  C02C  F02F         	movff	??_fatfs_init+11,??_fatfs_init+14
  5889  00F6DA  6A2E               	clrf	??_fatfs_init+13,c
  5890  00F6DC  6A2D               	clrf	??_fatfs_init+12,c
  5891  00F6DE  6A2C               	clrf	??_fatfs_init+11,c
  5892  00F6E0  5027               	movf	??_fatfs_init+6,w,c
  5893  00F6E2  242C               	addwf	??_fatfs_init+11,w,c
  5894  00F6E4  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  5895  00F6E6  5028               	movf	??_fatfs_init+7,w,c
  5896  00F6E8  202D               	addwfc	??_fatfs_init+12,w,c
  5897  00F6EA  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  5898  00F6EC  5029               	movf	??_fatfs_init+8,w,c
  5899  00F6EE  202E               	addwfc	??_fatfs_init+13,w,c
  5900  00F6F0  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  5901  00F6F2  502A               	movf	??_fatfs_init+9,w,c
  5902  00F6F4  202F               	addwfc	??_fatfs_init+14,w,c
  5903  00F6F6  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  5904  00F6F8  5022               	movf	??_fatfs_init+1,w,c
  5905  00F6FA  2430               	addwf	??_fatfs_init+15,w,c
  5906  00F6FC  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  5907  00F6FE  5023               	movf	??_fatfs_init+2,w,c
  5908  00F700  2031               	addwfc	??_fatfs_init+16,w,c
  5909  00F702  6E35               	movwf	(??_fatfs_init+20)& (0+255),c
  5910  00F704  5024               	movf	??_fatfs_init+3,w,c
  5911  00F706  2032               	addwfc	??_fatfs_init+17,w,c
  5912  00F708  6E36               	movwf	(??_fatfs_init+21)& (0+255),c
  5913  00F70A  5025               	movf	??_fatfs_init+4,w,c
  5914  00F70C  2033               	addwfc	??_fatfs_init+18,w,c
  5915  00F70E  6E37               	movwf	(??_fatfs_init+22)& (0+255),c
  5916  00F710  EE20 F055          	lfsr	2,85
  5917  00F714  501F               	movf	fatfs_init@fs,w,c
  5918  00F716  26D9               	addwf	fsr2l,f,c
  5919  00F718  5020               	movf	fatfs_init@fs+1,w,c
  5920  00F71A  22DA               	addwfc	fsr2h,f,c
  5921  00F71C  50DF               	movf	indf2,w,c
  5922  00F71E  6E38               	movwf	(??_fatfs_init+23)& (0+255),c
  5923  00F720  5038               	movf	??_fatfs_init+23,w,c
  5924  00F722  2434               	addwf	??_fatfs_init+19,w,c
  5925  00F724  6E45               	movwf	fatfs_init@FATSz,c
  5926  00F726  0E00               	movlw	0
  5927  00F728  2035               	addwfc	??_fatfs_init+20,w,c
  5928  00F72A  6E46               	movwf	fatfs_init@FATSz+1,c
  5929  00F72C  0E00               	movlw	0
  5930  00F72E  2036               	addwfc	??_fatfs_init+21,w,c
  5931  00F730  6E47               	movwf	fatfs_init@FATSz+2,c
  5932  00F732  0E00               	movlw	0
  5933  00F734  2037               	addwfc	??_fatfs_init+22,w,c
  5934  00F736  6E48               	movwf	fatfs_init@FATSz+3,c
  5935  00F738                     l64:
  5936                           
  5937                           ;fat_access.c: 156: if(( ((uint16)fs->currentsector.sector[19+1]<<8) + (uint16)fs->curre
      +                          ntsector.sector[19+0] ) != 0)
  5938  00F738  EE20 F045          	lfsr	2,69
  5939  00F73C  501F               	movf	fatfs_init@fs,w,c
  5940  00F73E  26D9               	addwf	fsr2l,f,c
  5941  00F740  5020               	movf	fatfs_init@fs+1,w,c
  5942  00F742  22DA               	addwfc	fsr2h,f,c
  5943  00F744  50DF               	movf	indf2,w,c
  5944  00F746  6E21               	movwf	??_fatfs_init& (0+255),c
  5945  00F748  5021               	movf	??_fatfs_init,w,c
  5946  00F74A  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5947  00F74C  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5948  00F74E  EE20 F044          	lfsr	2,68
  5949  00F752  501F               	movf	fatfs_init@fs,w,c
  5950  00F754  26D9               	addwf	fsr2l,f,c
  5951  00F756  5020               	movf	fatfs_init@fs+1,w,c
  5952  00F758  22DA               	addwfc	fsr2h,f,c
  5953  00F75A  50DF               	movf	indf2,w,c
  5954  00F75C  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5955  00F75E  5024               	movf	??_fatfs_init+3,w,c
  5956  00F760  2622               	addwf	??_fatfs_init+1,f,c
  5957  00F762  0E00               	movlw	0
  5958  00F764  2223               	addwfc	??_fatfs_init+2,f,c
  5959  00F766  5023               	movf	??_fatfs_init+2,w,c
  5960  00F768  1022               	iorwf	??_fatfs_init+1,w,c
  5961  00F76A  E01E               	bz	l12621
  5962                           
  5963                           ;fat_access.c: 157: total_sectors = ( ((uint16)fs->currentsector.sector[19+1]<<8) + (uin
      +                          t16)fs->currentsector.sector[19+0] );
  5964  00F76C  EE20 F045          	lfsr	2,69
  5965  00F770  501F               	movf	fatfs_init@fs,w,c
  5966  00F772  26D9               	addwf	fsr2l,f,c
  5967  00F774  5020               	movf	fatfs_init@fs+1,w,c
  5968  00F776  22DA               	addwfc	fsr2h,f,c
  5969  00F778  50DF               	movf	indf2,w,c
  5970  00F77A  6E21               	movwf	??_fatfs_init& (0+255),c
  5971  00F77C  5021               	movf	??_fatfs_init,w,c
  5972  00F77E  6E23               	movwf	(??_fatfs_init+2)& (0+255),c
  5973  00F780  6A22               	clrf	(??_fatfs_init+1)& (0+255),c
  5974  00F782  EE20 F044          	lfsr	2,68
  5975  00F786  501F               	movf	fatfs_init@fs,w,c
  5976  00F788  26D9               	addwf	fsr2l,f,c
  5977  00F78A  5020               	movf	fatfs_init@fs+1,w,c
  5978  00F78C  22DA               	addwfc	fsr2h,f,c
  5979  00F78E  50DF               	movf	indf2,w,c
  5980  00F790  6E24               	movwf	(??_fatfs_init+3)& (0+255),c
  5981  00F792  5024               	movf	??_fatfs_init+3,w,c
  5982  00F794  2622               	addwf	??_fatfs_init+1,f,c
  5983  00F796  0E00               	movlw	0
  5984  00F798  2223               	addwfc	??_fatfs_init+2,f,c
  5985  00F79A  C022  F049         	movff	??_fatfs_init+1,fatfs_init@total_sectors
  5986  00F79E  C023  F04A         	movff	??_fatfs_init+2,fatfs_init@total_sectors+1
  5987  00F7A2  6A4B               	clrf	fatfs_init@total_sectors+2,c
  5988  00F7A4  6A4C               	clrf	fatfs_init@total_sectors+3,c
  5989  00F7A6  D065               	goto	l12623
  5990  00F7A8                     l12621:
  5991                           
  5992                           ;fat_access.c: 158: else
  5993                           ;fat_access.c: 159: total_sectors = ( ((uint32)fs->currentsector.sector[32+3]<<24) + ((u
      +                          int32)fs->currentsector.sector[32+2]<<16) + ((uint32)fs->currentsector.sector[32+1]<<8) 
      +                          + (uint32)fs->currentsector.sector[32+0] );
  5994  00F7A8  EE20 F052          	lfsr	2,82
  5995  00F7AC  501F               	movf	fatfs_init@fs,w,c
  5996  00F7AE  26D9               	addwf	fsr2l,f,c
  5997  00F7B0  5020               	movf	fatfs_init@fs+1,w,c
  5998  00F7B2  22DA               	addwfc	fsr2h,f,c
  5999  00F7B4  50DF               	movf	indf2,w,c
  6000  00F7B6  6E21               	movwf	??_fatfs_init& (0+255),c
  6001  00F7B8  C021  F022         	movff	??_fatfs_init,??_fatfs_init+1
  6002  00F7BC  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  6003  00F7BE  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  6004  00F7C0  6A25               	clrf	(??_fatfs_init+4)& (0+255),c
  6005  00F7C2  C024  F025         	movff	??_fatfs_init+3,??_fatfs_init+4
  6006  00F7C6  C023  F024         	movff	??_fatfs_init+2,??_fatfs_init+3
  6007  00F7CA  C022  F023         	movff	??_fatfs_init+1,??_fatfs_init+2
  6008  00F7CE  6A22               	clrf	??_fatfs_init+1,c
  6009  00F7D0  EE20 F053          	lfsr	2,83
  6010  00F7D4  501F               	movf	fatfs_init@fs,w,c
  6011  00F7D6  26D9               	addwf	fsr2l,f,c
  6012  00F7D8  5020               	movf	fatfs_init@fs+1,w,c
  6013  00F7DA  22DA               	addwfc	fsr2h,f,c
  6014  00F7DC  50DF               	movf	indf2,w,c
  6015  00F7DE  6E26               	movwf	(??_fatfs_init+5)& (0+255),c
  6016  00F7E0  C026  F027         	movff	??_fatfs_init+5,??_fatfs_init+6
  6017  00F7E4  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  6018  00F7E6  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  6019  00F7E8  6A2A               	clrf	(??_fatfs_init+9)& (0+255),c
  6020  00F7EA  C028  F02A         	movff	??_fatfs_init+7,??_fatfs_init+9
  6021  00F7EE  C027  F029         	movff	??_fatfs_init+6,??_fatfs_init+8
  6022  00F7F2  6A28               	clrf	??_fatfs_init+7,c
  6023  00F7F4  6A27               	clrf	??_fatfs_init+6,c
  6024  00F7F6  EE20 F054          	lfsr	2,84
  6025  00F7FA  501F               	movf	fatfs_init@fs,w,c
  6026  00F7FC  26D9               	addwf	fsr2l,f,c
  6027  00F7FE  5020               	movf	fatfs_init@fs+1,w,c
  6028  00F800  22DA               	addwfc	fsr2h,f,c
  6029  00F802  50DF               	movf	indf2,w,c
  6030  00F804  6E2B               	movwf	(??_fatfs_init+10)& (0+255),c
  6031  00F806  C02B  F02C         	movff	??_fatfs_init+10,??_fatfs_init+11
  6032  00F80A  6A2D               	clrf	(??_fatfs_init+12)& (0+255),c
  6033  00F80C  6A2E               	clrf	(??_fatfs_init+13)& (0+255),c
  6034  00F80E  6A2F               	clrf	(??_fatfs_init+14)& (0+255),c
  6035  00F810  C02C  F02F         	movff	??_fatfs_init+11,??_fatfs_init+14
  6036  00F814  6A2E               	clrf	??_fatfs_init+13,c
  6037  00F816  6A2D               	clrf	??_fatfs_init+12,c
  6038  00F818  6A2C               	clrf	??_fatfs_init+11,c
  6039  00F81A  5027               	movf	??_fatfs_init+6,w,c
  6040  00F81C  242C               	addwf	??_fatfs_init+11,w,c
  6041  00F81E  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  6042  00F820  5028               	movf	??_fatfs_init+7,w,c
  6043  00F822  202D               	addwfc	??_fatfs_init+12,w,c
  6044  00F824  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  6045  00F826  5029               	movf	??_fatfs_init+8,w,c
  6046  00F828  202E               	addwfc	??_fatfs_init+13,w,c
  6047  00F82A  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  6048  00F82C  502A               	movf	??_fatfs_init+9,w,c
  6049  00F82E  202F               	addwfc	??_fatfs_init+14,w,c
  6050  00F830  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  6051  00F832  5022               	movf	??_fatfs_init+1,w,c
  6052  00F834  2430               	addwf	??_fatfs_init+15,w,c
  6053  00F836  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  6054  00F838  5023               	movf	??_fatfs_init+2,w,c
  6055  00F83A  2031               	addwfc	??_fatfs_init+16,w,c
  6056  00F83C  6E35               	movwf	(??_fatfs_init+20)& (0+255),c
  6057  00F83E  5024               	movf	??_fatfs_init+3,w,c
  6058  00F840  2032               	addwfc	??_fatfs_init+17,w,c
  6059  00F842  6E36               	movwf	(??_fatfs_init+21)& (0+255),c
  6060  00F844  5025               	movf	??_fatfs_init+4,w,c
  6061  00F846  2033               	addwfc	??_fatfs_init+18,w,c
  6062  00F848  6E37               	movwf	(??_fatfs_init+22)& (0+255),c
  6063  00F84A  EE20 F051          	lfsr	2,81
  6064  00F84E  501F               	movf	fatfs_init@fs,w,c
  6065  00F850  26D9               	addwf	fsr2l,f,c
  6066  00F852  5020               	movf	fatfs_init@fs+1,w,c
  6067  00F854  22DA               	addwfc	fsr2h,f,c
  6068  00F856  50DF               	movf	indf2,w,c
  6069  00F858  6E38               	movwf	(??_fatfs_init+23)& (0+255),c
  6070  00F85A  5038               	movf	??_fatfs_init+23,w,c
  6071  00F85C  2434               	addwf	??_fatfs_init+19,w,c
  6072  00F85E  6E49               	movwf	fatfs_init@total_sectors,c
  6073  00F860  0E00               	movlw	0
  6074  00F862  2035               	addwfc	??_fatfs_init+20,w,c
  6075  00F864  6E4A               	movwf	fatfs_init@total_sectors+1,c
  6076  00F866  0E00               	movlw	0
  6077  00F868  2036               	addwfc	??_fatfs_init+21,w,c
  6078  00F86A  6E4B               	movwf	fatfs_init@total_sectors+2,c
  6079  00F86C  0E00               	movlw	0
  6080  00F86E  2037               	addwfc	??_fatfs_init+22,w,c
  6081  00F870  6E4C               	movwf	fatfs_init@total_sectors+3,c
  6082  00F872                     l12623:
  6083                           
  6084                           ;fat_access.c: 161: data_sectors = total_sectors - (( ((uint16)fs->currentsector.sector[
      +                          14+1]<<8) + (uint16)fs->currentsector.sector[14+0] ) + (fs->currentsector.sector[16] * F
      +                          ATSz) + root_dir_sectors);
  6085  00F872  EE20 F041          	lfsr	2,65
  6086  00F876  501F               	movf	fatfs_init@fs,w,c
  6087  00F878  26D9               	addwf	fsr2l,f,c
  6088  00F87A  5020               	movf	fatfs_init@fs+1,w,c
  6089  00F87C  22DA               	addwfc	fsr2h,f,c
  6090  00F87E  50DF               	movf	indf2,w,c
  6091  00F880  6E21               	movwf	??_fatfs_init& (0+255),c
  6092  00F882  C021  F022         	movff	??_fatfs_init,??_fatfs_init+1
  6093  00F886  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  6094  00F888  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  6095  00F88A  6A25               	clrf	(??_fatfs_init+4)& (0+255),c
  6096  00F88C  5022               	movf	??_fatfs_init+1,w,c
  6097  00F88E  0245               	mulwf	fatfs_init@FATSz,c
  6098  00F890  CFF3 F026          	movff	prodl,??_fatfs_init+5
  6099  00F894  CFF4 F027          	movff	prodh,??_fatfs_init+6
  6100  00F898  6A28               	clrf	(??_fatfs_init+7)& (0+255),c
  6101  00F89A  6A29               	clrf	(??_fatfs_init+8)& (0+255),c
  6102  00F89C  0246               	mulwf	fatfs_init@FATSz+1,c
  6103  00F89E  50F3               	movf	243,w,c
  6104  00F8A0  2627               	addwf	(??_fatfs_init+6)& (0+255),f,c
  6105  00F8A2  50F4               	movf	244,w,c
  6106  00F8A4  2228               	addwfc	(??_fatfs_init+7)& (0+255),f,c
  6107  00F8A6  0E00               	movlw	0
  6108  00F8A8  2229               	addwfc	(??_fatfs_init+8)& (0+255),f,c
  6109  00F8AA  5023               	movf	??_fatfs_init+2,w,c
  6110  00F8AC  0245               	mulwf	fatfs_init@FATSz,c
  6111  00F8AE  50F3               	movf	243,w,c
  6112  00F8B0  2627               	addwf	(??_fatfs_init+6)& (0+255),f,c
  6113  00F8B2  50F4               	movf	244,w,c
  6114  00F8B4  2228               	addwfc	(??_fatfs_init+7)& (0+255),f,c
  6115  00F8B6  0E00               	movlw	0
  6116  00F8B8  2229               	addwfc	(??_fatfs_init+8)& (0+255),f,c
  6117  00F8BA  5022               	movf	??_fatfs_init+1,w,c
  6118  00F8BC  0247               	mulwf	fatfs_init@FATSz+2,c
  6119  00F8BE  50F3               	movf	243,w,c
  6120  00F8C0  2628               	addwf	(??_fatfs_init+7)& (0+255),f,c
  6121  00F8C2  50F4               	movf	244,w,c
  6122  00F8C4  2229               	addwfc	(??_fatfs_init+8)& (0+255),f,c
  6123  00F8C6  5023               	movf	??_fatfs_init+2,w,c
  6124  00F8C8  0246               	mulwf	fatfs_init@FATSz+1,c
  6125  00F8CA  50F3               	movf	243,w,c
  6126  00F8CC  2628               	addwf	(??_fatfs_init+7)& (0+255),f,c
  6127  00F8CE  50F4               	movf	244,w,c
  6128  00F8D0  2229               	addwfc	(??_fatfs_init+8)& (0+255),f,c
  6129  00F8D2  5024               	movf	??_fatfs_init+3,w,c
  6130  00F8D4  0245               	mulwf	fatfs_init@FATSz,c
  6131  00F8D6  50F3               	movf	243,w,c
  6132  00F8D8  2628               	addwf	(??_fatfs_init+7)& (0+255),f,c
  6133  00F8DA  50F4               	movf	244,w,c
  6134  00F8DC  2229               	addwfc	(??_fatfs_init+8)& (0+255),f,c
  6135  00F8DE  5048               	movf	fatfs_init@FATSz+3,w,c
  6136  00F8E0  0222               	mulwf	??_fatfs_init+1,c
  6137  00F8E2  50F3               	movf	243,w,c
  6138  00F8E4  2629               	addwf	(??_fatfs_init+8)& (0+255),f,c
  6139  00F8E6  5023               	movf	??_fatfs_init+2,w,c
  6140  00F8E8  0247               	mulwf	fatfs_init@FATSz+2,c
  6141  00F8EA  50F3               	movf	243,w,c
  6142  00F8EC  2629               	addwf	(??_fatfs_init+8)& (0+255),f,c
  6143  00F8EE  5024               	movf	??_fatfs_init+3,w,c
  6144  00F8F0  0246               	mulwf	fatfs_init@FATSz+1,c
  6145  00F8F2  50F3               	movf	243,w,c
  6146  00F8F4  2629               	addwf	(??_fatfs_init+8)& (0+255),f,c
  6147  00F8F6  5025               	movf	??_fatfs_init+4,w,c
  6148  00F8F8  0245               	mulwf	fatfs_init@FATSz,c
  6149  00F8FA  50F3               	movf	243,w,c
  6150  00F8FC  2629               	addwf	(??_fatfs_init+8)& (0+255),f,c
  6151  00F8FE  EE20 F040          	lfsr	2,64
  6152  00F902  501F               	movf	fatfs_init@fs,w,c
  6153  00F904  26D9               	addwf	fsr2l,f,c
  6154  00F906  5020               	movf	fatfs_init@fs+1,w,c
  6155  00F908  22DA               	addwfc	fsr2h,f,c
  6156  00F90A  50DF               	movf	indf2,w,c
  6157  00F90C  6E2A               	movwf	(??_fatfs_init+9)& (0+255),c
  6158  00F90E  502A               	movf	??_fatfs_init+9,w,c
  6159  00F910  6E2C               	movwf	(??_fatfs_init+11)& (0+255),c
  6160  00F912  6A2B               	clrf	(??_fatfs_init+10)& (0+255),c
  6161  00F914  EE20 F03F          	lfsr	2,63
  6162  00F918  501F               	movf	fatfs_init@fs,w,c
  6163  00F91A  26D9               	addwf	fsr2l,f,c
  6164  00F91C  5020               	movf	fatfs_init@fs+1,w,c
  6165  00F91E  22DA               	addwfc	fsr2h,f,c
  6166  00F920  50DF               	movf	indf2,w,c
  6167  00F922  6E2D               	movwf	(??_fatfs_init+12)& (0+255),c
  6168  00F924  502D               	movf	??_fatfs_init+12,w,c
  6169  00F926  262B               	addwf	??_fatfs_init+10,f,c
  6170  00F928  0E00               	movlw	0
  6171  00F92A  222C               	addwfc	??_fatfs_init+11,f,c
  6172  00F92C  502B               	movf	??_fatfs_init+10,w,c
  6173  00F92E  2426               	addwf	??_fatfs_init+5,w,c
  6174  00F930  6E2E               	movwf	(??_fatfs_init+13)& (0+255),c
  6175  00F932  502C               	movf	??_fatfs_init+11,w,c
  6176  00F934  2027               	addwfc	??_fatfs_init+6,w,c
  6177  00F936  6E2F               	movwf	(??_fatfs_init+14)& (0+255),c
  6178  00F938  0E00               	movlw	0
  6179  00F93A  2028               	addwfc	??_fatfs_init+7,w,c
  6180  00F93C  6E30               	movwf	(??_fatfs_init+15)& (0+255),c
  6181  00F93E  0E00               	movlw	0
  6182  00F940  2029               	addwfc	??_fatfs_init+8,w,c
  6183  00F942  6E31               	movwf	(??_fatfs_init+16)& (0+255),c
  6184  00F944  503D               	movf	fatfs_init@root_dir_sectors,w,c
  6185  00F946  242E               	addwf	??_fatfs_init+13,w,c
  6186  00F948  6E32               	movwf	(??_fatfs_init+17)& (0+255),c
  6187  00F94A  503E               	movf	fatfs_init@root_dir_sectors+1,w,c
  6188  00F94C  202F               	addwfc	??_fatfs_init+14,w,c
  6189  00F94E  6E33               	movwf	(??_fatfs_init+18)& (0+255),c
  6190  00F950  503F               	movf	fatfs_init@root_dir_sectors+2,w,c
  6191  00F952  2030               	addwfc	??_fatfs_init+15,w,c
  6192  00F954  6E34               	movwf	(??_fatfs_init+19)& (0+255),c
  6193  00F956  5040               	movf	fatfs_init@root_dir_sectors+3,w,c
  6194  00F958  2031               	addwfc	??_fatfs_init+16,w,c
  6195  00F95A  6E35               	movwf	(??_fatfs_init+20)& (0+255),c
  6196  00F95C  1E32               	comf	??_fatfs_init+17,f,c
  6197  00F95E  1E33               	comf	??_fatfs_init+18,f,c
  6198  00F960  1E34               	comf	??_fatfs_init+19,f,c
  6199  00F962  1E35               	comf	??_fatfs_init+20,f,c
  6200  00F964  2A32               	incf	??_fatfs_init+17,f,c
  6201  00F966  0E00               	movlw	0
  6202  00F968  2233               	addwfc	??_fatfs_init+18,f,c
  6203  00F96A  2234               	addwfc	??_fatfs_init+19,f,c
  6204  00F96C  2235               	addwfc	??_fatfs_init+20,f,c
  6205  00F96E  5049               	movf	fatfs_init@total_sectors,w,c
  6206  00F970  2432               	addwf	??_fatfs_init+17,w,c
  6207  00F972  6E41               	movwf	fatfs_init@data_sectors,c
  6208  00F974  504A               	movf	fatfs_init@total_sectors+1,w,c
  6209  00F976  2033               	addwfc	??_fatfs_init+18,w,c
  6210  00F978  6E42               	movwf	fatfs_init@data_sectors+1,c
  6211  00F97A  504B               	movf	fatfs_init@total_sectors+2,w,c
  6212  00F97C  2034               	addwfc	??_fatfs_init+19,w,c
  6213  00F97E  6E43               	movwf	fatfs_init@data_sectors+2,c
  6214  00F980  504C               	movf	fatfs_init@total_sectors+3,w,c
  6215  00F982  2035               	addwfc	??_fatfs_init+20,w,c
  6216  00F984  6E44               	movwf	fatfs_init@data_sectors+3,c
  6217                           
  6218                           ;fat_access.c: 164: if (fs->sectors_per_cluster != 0)
  6219  00F986  C01F  FFD9         	movff	fatfs_init@fs,fsr2l
  6220  00F98A  C020  FFDA         	movff	fatfs_init@fs+1,fsr2h
  6221  00F98E  50DF               	movf	indf2,w,c
  6222  00F990  E057               	bz	l12653
  6223                           
  6224                           ;fat_access.c: 165: {
  6225                           ;fat_access.c: 166: count_of_clusters = data_sectors / fs->sectors_per_cluster;
  6226  00F992  C041  F001         	movff	fatfs_init@data_sectors,___lldiv@dividend
  6227  00F996  C042  F002         	movff	fatfs_init@data_sectors+1,___lldiv@dividend+1
  6228  00F99A  C043  F003         	movff	fatfs_init@data_sectors+2,___lldiv@dividend+2
  6229  00F99E  C044  F004         	movff	fatfs_init@data_sectors+3,___lldiv@dividend+3
  6230  00F9A2  C01F  FFD9         	movff	fatfs_init@fs,fsr2l
  6231  00F9A6  C020  FFDA         	movff	fatfs_init@fs+1,fsr2h
  6232  00F9AA  50DF               	movf	indf2,w,c
  6233  00F9AC  6E21               	movwf	??_fatfs_init& (0+255),c
  6234  00F9AE  5021               	movf	??_fatfs_init,w,c
  6235  00F9B0  6E05               	movwf	___lldiv@divisor,c
  6236  00F9B2  6A06               	clrf	___lldiv@divisor+1,c
  6237  00F9B4  6A07               	clrf	___lldiv@divisor+2,c
  6238  00F9B6  6A08               	clrf	___lldiv@divisor+3,c
  6239  00F9B8  EC85  F026         	call	___lldiv	;wreg free
  6240  00F9BC  C001  F04D         	movff	?___lldiv,fatfs_init@count_of_clusters
  6241  00F9C0  C002  F04E         	movff	?___lldiv+1,fatfs_init@count_of_clusters+1
  6242  00F9C4  C003  F04F         	movff	?___lldiv+2,fatfs_init@count_of_clusters+2
  6243  00F9C8  C004  F050         	movff	?___lldiv+3,fatfs_init@count_of_clusters+3
  6244                           
  6245                           ;fat_access.c: 168: if(count_of_clusters < 4085)
  6246  00F9CC  0EF5               	movlw	245
  6247  00F9CE  6E21               	movwf	??_fatfs_init& (0+255),c
  6248  00F9D0  0E0F               	movlw	15
  6249  00F9D2  6E22               	movwf	(??_fatfs_init+1)& (0+255),c
  6250  00F9D4  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  6251  00F9D6  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  6252  00F9D8  5021               	movf	??_fatfs_init,w,c
  6253  00F9DA  5C4D               	subwf	fatfs_init@count_of_clusters,w,c
  6254  00F9DC  5022               	movf	??_fatfs_init+1,w,c
  6255  00F9DE  584E               	subwfb	fatfs_init@count_of_clusters+1,w,c
  6256  00F9E0  5023               	movf	??_fatfs_init+2,w,c
  6257  00F9E2  584F               	subwfb	fatfs_init@count_of_clusters+2,w,c
  6258  00F9E4  5024               	movf	??_fatfs_init+3,w,c
  6259  00F9E6  5850               	subwfb	fatfs_init@count_of_clusters+3,w,c
  6260  00F9E8  E32B               	bnc	l12653
  6261                           
  6262                           ;fat_access.c: 171: else if(count_of_clusters < 65525)
  6263                           
  6264                           ;fat_access.c: 170: return (-5);
  6265  00F9EA  0EF5               	movlw	245
  6266  00F9EC  6E21               	movwf	??_fatfs_init& (0+255),c
  6267  00F9EE  6822               	setf	(??_fatfs_init+1)& (0+255),c
  6268  00F9F0  6A23               	clrf	(??_fatfs_init+2)& (0+255),c
  6269  00F9F2  6A24               	clrf	(??_fatfs_init+3)& (0+255),c
  6270  00F9F4  5021               	movf	??_fatfs_init,w,c
  6271  00F9F6  5C4D               	subwf	fatfs_init@count_of_clusters,w,c
  6272  00F9F8  5022               	movf	??_fatfs_init+1,w,c
  6273  00F9FA  584E               	subwfb	fatfs_init@count_of_clusters+1,w,c
  6274  00F9FC  5023               	movf	??_fatfs_init+2,w,c
  6275  00F9FE  584F               	subwfb	fatfs_init@count_of_clusters+2,w,c
  6276  00FA00  5024               	movf	??_fatfs_init+3,w,c
  6277  00FA02  5850               	subwfb	fatfs_init@count_of_clusters+3,w,c
  6278  00FA04  E212               	bc	l12647
  6279                           
  6280                           ;fat_access.c: 172: {
  6281                           ;fat_access.c: 174: fs->rootdir_first_cluster = 0;
  6282  00FA06  EE20 F005          	lfsr	2,5
  6283  00FA0A  501F               	movf	fatfs_init@fs,w,c
  6284  00FA0C  26D9               	addwf	fsr2l,f,c
  6285  00FA0E  5020               	movf	fatfs_init@fs+1,w,c
  6286  00FA10  22DA               	addwfc	fsr2h,f,c
  6287  00FA12  6ADE               	clrf	postinc2,c
  6288  00FA14  6ADE               	clrf	postinc2,c
  6289  00FA16  6ADE               	clrf	postinc2,c
  6290  00FA18  6ADD               	clrf	postdec2,c
  6291                           
  6292                           ;fat_access.c: 177: fs->fat_type = FAT_TYPE_16;
  6293  00FA1A  EE20 F028          	lfsr	2,40
  6294  00FA1E  501F               	movf	fatfs_init@fs,w,c
  6295  00FA20  26D9               	addwf	fsr2l,f,c
  6296  00FA22  5020               	movf	fatfs_init@fs+1,w,c
  6297  00FA24  22DA               	addwfc	fsr2h,f,c
  6298  00FA26  0E00               	movlw	0
  6299  00FA28  D007               	goto	L9
  6300  00FA2A                     l12647:
  6301                           
  6302                           ;fat_access.c: 180: else
  6303                           ;fat_access.c: 181: {
  6304                           ;fat_access.c: 183: fs->fat_type = FAT_TYPE_32;
  6305  00FA2A  EE20 F028          	lfsr	2,40
  6306  00FA2E  501F               	movf	fatfs_init@fs,w,c
  6307  00FA30  26D9               	addwf	fsr2l,f,c
  6308  00FA32  5020               	movf	fatfs_init@fs+1,w,c
  6309  00FA34  22DA               	addwfc	fsr2h,f,c
  6310  00FA36  0E01               	movlw	1
  6311  00FA38                     L9:
  6312  00FA38  6EDF               	movwf	indf2,c
  6313                           
  6314                           ;fat_access.c: 184: return 0;
  6315  00FA3A  0E00               	movlw	0
  6316  00FA3C  6E20               	movwf	?_fatfs_init+1,c
  6317  00FA3E  D002               	goto	L10
  6318  00FA40                     l12653:
  6319                           
  6320                           ;fat_access.c: 187: else
  6321                           ;fat_access.c: 188: return (-5);
  6322  00FA40  6820               	setf	?_fatfs_init+1,c
  6323  00FA42  0EFB               	movlw	251
  6324  00FA44                     L10:
  6325  00FA44  6E1F               	movwf	?_fatfs_init,c
  6326  00FA46                     l38:
  6327  00FA46  0012               	return	
  6328  00FA48                     __end_of_fatfs_init:
  6329                           	opt stack 0
  6330                           tosu	equ	0xFFF
  6331                           tosh	equ	0xFFE
  6332                           tosl	equ	0xFFD
  6333                           pclath	equ	0xFFA
  6334                           tblptru	equ	0xFF8
  6335                           tblptrh	equ	0xFF7
  6336                           tblptrl	equ	0xFF6
  6337                           tablat	equ	0xFF5
  6338                           prodh	equ	0xFF4
  6339                           prodl	equ	0xFF3
  6340                           postinc0	equ	0xFEE
  6341                           wreg	equ	0xFE8
  6342                           indf1	equ	0xFE7
  6343                           postdec1	equ	0xFE5
  6344                           fsr1h	equ	0xFE2
  6345                           fsr1l	equ	0xFE1
  6346                           indf2	equ	0xFDF
  6347                           postinc2	equ	0xFDE
  6348                           postdec2	equ	0xFDD
  6349                           fsr2h	equ	0xFDA
  6350                           fsr2l	equ	0xFD9
  6351                           status	equ	0xFD8
  6352                           
  6353 ;; *************** function _SD_init *****************
  6354 ;; Defined at:
  6355 ;;		line 109 in file "main.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;		None
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  u               1   10[COMRAM] unsigned char 
  6360 ;;  i               1    9[COMRAM] unsigned char 
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  1    wreg      unsigned char 
  6363 ;; Registers used:
  6364 ;;		wreg, status,2, status,0, cstack
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6371 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6374 ;;Total ram usage:        3 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    2
  6377 ;; This function calls:
  6378 ;;		_Command
  6379 ;;		_ReadSPI_
  6380 ;;		_WriteSPI_
  6381 ;; This function is called by:
  6382 ;;		_main
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           	psect	text5
  6387  005B52                     __ptext5:
  6388                           	opt stack 0
  6389  005B52                     _SD_init:
  6390                           	opt stack 28
  6391                           
  6392                           ;main.c: 111: unsigned char u,i;
  6393                           ;main.c: 112: LATBbits.LATB4 = 1;
  6394                           
  6395                           ;incstack = 0
  6396  005B52  888A               	bsf	3978,4,c	;volatile
  6397                           
  6398                           ;main.c: 113: LATCbits.LATC5 = 0;
  6399  005B54  9A8B               	bcf	3979,5,c	;volatile
  6400                           
  6401                           ;main.c: 114: for (u = 0; u <10; u++)
  6402  005B56  6A0B               	clrf	SD_init@u,c
  6403  005B58  D004               	goto	L12
  6404  005B5A                     l13089:
  6405                           
  6406                           ;main.c: 115: WriteSPI_(0xFF);
  6407  005B5A  0EFF               	movlw	255
  6408  005B5C  EC81  F01F         	call	_WriteSPI_
  6409  005B60  2A0B               	incf	SD_init@u,f,c
  6410  005B62                     L12:
  6411  005B62  0E09               	movlw	9
  6412  005B64  640B               	cpfsgt	SD_init@u,c
  6413  005B66  D7F9               	goto	l13089
  6414                           
  6415                           ;main.c: 116: LATBbits.LATB4 = 0;
  6416  005B68  988A               	bcf	3978,4,c	;volatile
  6417                           
  6418                           ;main.c: 117: response = 0;
  6419  005B6A  0101               	movlb	1	; () banked
  6420  005B6C  6BAB               	clrf	_response& (0+255),b
  6421                           
  6422                           ; BSR set to: 1
  6423                           ;main.c: 118: Command(0, 0, 0x95);
  6424  005B6E  6A03               	clrf	Command@arg,c
  6425  005B70  6A04               	clrf	Command@arg+1,c
  6426  005B72  6A05               	clrf	Command@arg+2,c
  6427  005B74  6A06               	clrf	Command@arg+3,c
  6428  005B76  0E95               	movlw	149
  6429  005B78  6E07               	movwf	Command@CRCbits,c
  6430  005B7A  0E00               	movlw	0
  6431  005B7C  EC90  F021         	call	_Command
  6432  005B80                     l13099:
  6433                           
  6434                           ;main.c: 120: ReadSPI_();
  6435  005B80  EC4F  F01F         	call	_ReadSPI_	;wreg free
  6436                           
  6437                           ;main.c: 121: }while(response!= 0x01);
  6438  005B84  0101               	movlb	1	; () banked
  6439  005B86  05AB               	decf	_response& (0+255),w,b
  6440  005B88  E1FB               	bnz	l13099
  6441                           
  6442                           ; BSR set to: 1
  6443                           ;main.c: 122: count = 0;
  6444                           
  6445                           ; BSR set to: 1
  6446  005B8A  6B96               	clrf	(_count+1)& (0+255),b
  6447  005B8C  6B95               	clrf	_count& (0+255),b
  6448                           
  6449                           ; BSR set to: 1
  6450                           ;main.c: 123: _delay((unsigned long)((1)*(20000000/4000.0)));
  6451  005B8E  0E07               	movlw	7
  6452  005B90  6E09               	movwf	??_SD_init& (0+255),c
  6453  005B92  0E7D               	movlw	125
  6454  005B94                     u17367:
  6455  005B94  2EE8               	decfsz	wreg,f,c
  6456  005B96  D7FE               	goto	u17367
  6457  005B98  2E09               	decfsz	??_SD_init& (0+255),f,c
  6458  005B9A  D7FC               	goto	u17367
  6459  005B9C  F000               	nop	
  6460                           
  6461                           ;main.c: 124: Command(1, 0 , 0xFF);
  6462  005B9E  6A03               	clrf	Command@arg,c
  6463  005BA0  6A04               	clrf	Command@arg+1,c
  6464  005BA2  6A05               	clrf	Command@arg+2,c
  6465  005BA4  6A06               	clrf	Command@arg+3,c
  6466  005BA6  6807               	setf	Command@CRCbits,c
  6467  005BA8  0E01               	movlw	1
  6468  005BAA  EC90  F021         	call	_Command
  6469  005BAE                     l13109:
  6470                           
  6471                           ;main.c: 126: ReadSPI_();
  6472  005BAE  EC4F  F01F         	call	_ReadSPI_	;wreg free
  6473                           
  6474                           ;main.c: 127: count++;
  6475  005BB2  0101               	movlb	1	; () banked
  6476  005BB4  4B95               	infsnz	_count& (0+255),f,b
  6477  005BB6  2B96               	incf	(_count+1)& (0+255),f,b
  6478                           
  6479                           ; BSR set to: 1
  6480                           ;main.c: 128: }while((response!= 0x00)&&(response!= 0x01));
  6481  005BB8  51AB               	movf	_response& (0+255),w,b
  6482  005BBA  E002               	bz	l13117
  6483                           
  6484                           ; BSR set to: 1
  6485  005BBC  05AB               	decf	_response& (0+255),w,b
  6486  005BBE  E1F7               	bnz	l13109
  6487  005BC0                     l13117:
  6488                           
  6489                           ; BSR set to: 1
  6490                           ;main.c: 129: i=0;
  6491  005BC0  6A0A               	clrf	SD_init@i,c
  6492  005BC2                     l13119:
  6493                           
  6494                           ; BSR set to: 1
  6495                           ;main.c: 131: Command(55, 0 , 0xFF);
  6496  005BC2  6A03               	clrf	Command@arg,c
  6497  005BC4  6A04               	clrf	Command@arg+1,c
  6498  005BC6  6A05               	clrf	Command@arg+2,c
  6499  005BC8  6A06               	clrf	Command@arg+3,c
  6500  005BCA  6807               	setf	Command@CRCbits,c
  6501  005BCC  0E37               	movlw	55
  6502  005BCE  EC90  F021         	call	_Command
  6503  005BD2                     l13121:
  6504                           
  6505                           ;main.c: 133: ReadSPI_();
  6506  005BD2  EC4F  F01F         	call	_ReadSPI_	;wreg free
  6507                           
  6508                           ;main.c: 134: }while((response!=0x00)&&(response!=0x01)&&(response!=0x05));
  6509  005BD6  0101               	movlb	1	; () banked
  6510  005BD8  51AB               	movf	_response& (0+255),w,b
  6511  005BDA  E005               	bz	l13129
  6512                           
  6513                           ; BSR set to: 1
  6514  005BDC  05AB               	decf	_response& (0+255),w,b
  6515  005BDE  E003               	bz	l13129
  6516                           
  6517                           ; BSR set to: 1
  6518  005BE0  51AB               	movf	_response& (0+255),w,b
  6519  005BE2  0A05               	xorlw	5
  6520  005BE4  E1F6               	bnz	l13121
  6521  005BE6                     l13129:
  6522                           
  6523                           ; BSR set to: 1
  6524                           ;main.c: 135: Command(1, 0 , 0xFF);
  6525  005BE6  6A03               	clrf	Command@arg,c
  6526  005BE8  6A04               	clrf	Command@arg+1,c
  6527  005BEA  6A05               	clrf	Command@arg+2,c
  6528  005BEC  6A06               	clrf	Command@arg+3,c
  6529  005BEE  6807               	setf	Command@CRCbits,c
  6530  005BF0  0E01               	movlw	1
  6531  005BF2  EC90  F021         	call	_Command
  6532  005BF6                     l13131:
  6533                           
  6534                           ;main.c: 137: ReadSPI_();
  6535  005BF6  EC4F  F01F         	call	_ReadSPI_	;wreg free
  6536                           
  6537                           ;main.c: 138: }while((response!= 0x00)&&(response!= 0x01));
  6538  005BFA  0101               	movlb	1	; () banked
  6539  005BFC  51AB               	movf	_response& (0+255),w,b
  6540  005BFE  E002               	bz	l1584
  6541                           
  6542                           ; BSR set to: 1
  6543  005C00  05AB               	decf	_response& (0+255),w,b
  6544  005C02  E1F9               	bnz	l13131
  6545  005C04                     l1584:
  6546                           
  6547                           ; BSR set to: 1
  6548                           ;main.c: 139: }while(response!=00);
  6549  005C04  0101               	movlb	1	; () banked
  6550  005C06  67AB               	tstfsz	_response& (0+255),b
  6551  005C08  D7DC               	goto	l13119
  6552                           
  6553                           ; BSR set to: 1
  6554                           ;main.c: 140: if(response != 0x00)
  6555                           
  6556                           ; BSR set to: 1
  6557  005C0A  51AB               	movf	_response& (0+255),w,b
  6558  005C0C  A4D8               	btfss	status,2,c
  6559                           
  6560                           ; BSR set to: 1
  6561                           ;main.c: 141: return(1);
  6562  005C0E  0E01               	movlw	1
  6563                           
  6564                           ; BSR set to: 1
  6565                           
  6566                           ; BSR set to: 1
  6567                           
  6568                           ; BSR set to: 1
  6569  005C10  0012               	return	
  6570  005C12                     __end_of_SD_init:
  6571                           	opt stack 0
  6572                           tosu	equ	0xFFF
  6573                           tosh	equ	0xFFE
  6574                           tosl	equ	0xFFD
  6575                           pclath	equ	0xFFA
  6576                           tblptru	equ	0xFF8
  6577                           tblptrh	equ	0xFF7
  6578                           tblptrl	equ	0xFF6
  6579                           tablat	equ	0xFF5
  6580                           prodh	equ	0xFF4
  6581                           prodl	equ	0xFF3
  6582                           postinc0	equ	0xFEE
  6583                           wreg	equ	0xFE8
  6584                           indf1	equ	0xFE7
  6585                           postdec1	equ	0xFE5
  6586                           fsr1h	equ	0xFE2
  6587                           fsr1l	equ	0xFE1
  6588                           indf2	equ	0xFDF
  6589                           postinc2	equ	0xFDE
  6590                           postdec2	equ	0xFDD
  6591                           fsr2h	equ	0xFDA
  6592                           fsr2l	equ	0xFD9
  6593                           status	equ	0xFD8
  6594                           
  6595 ;; *************** function _File_IO *****************
  6596 ;; Defined at:
  6597 ;;		line 756 in file "main.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;		None
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;		None
  6602 ;; Return value:  Size  Location     Type
  6603 ;;		None               void
  6604 ;; Registers used:
  6605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6615 ;;Total ram usage:        0 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; Hardware stack levels required when called:   13
  6618 ;; This function calls:
  6619 ;;		_Create_folder
  6620 ;;		_File_append
  6621 ;;		_File_delete
  6622 ;;		_File_read
  6623 ;;		_File_write
  6624 ;;		_Format_drive
  6625 ;;		_Open_dir
  6626 ;;		_ReadUART
  6627 ;;		_Write_str
  6628 ;;		_fl_listdirectory
  6629 ;; This function is called by:
  6630 ;;		_main
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           	psect	text6
  6635  005696                     __ptext6:
  6636                           	opt stack 0
  6637  005696                     _File_IO:
  6638                           	opt stack 17
  6639  005696                     l1805:
  6640                           
  6641                           ;main.c: 759: Write_str("\n\rPlease select a file operation?\t\tWrite    - w\tRead     -
      +                           r\n\r\t\t\t\t\tDelete   - d\tAppend   - a\n\r\t\t\t\t\tNew Dir  - n\tFormat   - f\n\r\t
      +                          \t\t\t\tOpen Dir - x\n\r");
  6642  005696  0EFA               	movlw	high STR_61
  6643  005698  6E07               	movwf	Write_str@str+1,c
  6644  00569A  0E6C               	movlw	low STR_61
  6645  00569C  6E06               	movwf	Write_str@str,c
  6646  00569E  EC3C  F01F         	call	_Write_str	;wreg free
  6647                           
  6648                           ;main.c: 760: c = ReadUART();
  6649  0056A2  EC24  F01F         	call	_ReadUART	;wreg free
  6650  0056A6  0101               	movlb	1	; () banked
  6651  0056A8  6FA6               	movwf	_c& (0+255),b
  6652                           
  6653                           ;main.c: 761: switch(c)
  6654  0056AA  D01C               	goto	l13173
  6655  0056AC                     l13155:
  6656                           
  6657                           ; BSR set to: 1
  6658                           ;main.c: 764: File_write();
  6659  0056AC  EC50  F03E         	call	_File_write	;wreg free
  6660                           
  6661                           ;main.c: 765: break;
  6662  0056B0  D02A               	goto	l13175
  6663  0056B2                     l13157:
  6664                           
  6665                           ;main.c: 767: File_append();
  6666  0056B2  EC56  F041         	call	_File_append	;wreg free
  6667                           
  6668                           ;main.c: 768: break;
  6669  0056B6  D027               	goto	l13175
  6670  0056B8                     l13159:
  6671                           
  6672                           ;main.c: 770: File_read();
  6673  0056B8  EC3B  F030         	call	_File_read	;wreg free
  6674                           
  6675                           ;main.c: 771: break;
  6676  0056BC  D024               	goto	l13175
  6677  0056BE                     l13161:
  6678                           
  6679                           ;main.c: 773: File_delete();
  6680  0056BE  ECF3  F027         	call	_File_delete	;wreg free
  6681                           
  6682                           ;main.c: 774: break;
  6683  0056C2  D021               	goto	l13175
  6684  0056C4                     l13163:
  6685                           
  6686                           ;main.c: 776: Create_folder();
  6687  0056C4  EC76  F028         	call	_Create_folder	;wreg free
  6688                           
  6689                           ;main.c: 777: break;
  6690  0056C8  D01E               	goto	l13175
  6691  0056CA                     l13165:
  6692                           
  6693                           ;main.c: 779: Open_dir();
  6694  0056CA  ECB3  F027         	call	_Open_dir	;wreg free
  6695                           
  6696                           ;main.c: 780: break;
  6697  0056CE  D01B               	goto	l13175
  6698  0056D0                     l13167:
  6699  0056D0  EC51  F023         	call	_Format_drive	;wreg free
  6700                           
  6701                           ;main.c: 783: break;
  6702  0056D4  D018               	goto	l13175
  6703  0056D6                     l13169:
  6704                           
  6705                           ;main.c: 785: Write_str("\n\rInvalid Entry..!");
  6706  0056D6  0EFF               	movlw	high STR_62
  6707  0056D8  6E07               	movwf	Write_str@str+1,c
  6708  0056DA  0E2B               	movlw	low STR_62
  6709  0056DC  6E06               	movwf	Write_str@str,c
  6710  0056DE  EC3C  F01F         	call	_Write_str	;wreg free
  6711                           
  6712                           ;main.c: 786: break;
  6713  0056E2  D011               	goto	l13175
  6714  0056E4                     l13173:
  6715  0056E4  0101               	movlb	1	; () banked
  6716  0056E6  51A6               	movf	_c& (0+255),w,b
  6717                           
  6718                           ; Switch size 1, requested type "speed"
  6719                           ; Number of cases is 7, Range of values is 97 to 120
  6720                           ; switch strategies available:
  6721                           ; Name         Instructions Cycles
  6722                           ; simple_byte           22    12 (average)
  6723                           ;	Chosen strategy is simple_byte
  6724  0056E8  0A61               	xorlw	97	; case 97
  6725  0056EA  E0E3               	bz	l13157
  6726  0056EC  0A05               	xorlw	5	; case 100
  6727  0056EE  E0E7               	bz	l13161
  6728  0056F0  0A02               	xorlw	2	; case 102
  6729  0056F2  E0EE               	bz	l13167
  6730  0056F4  0A08               	xorlw	8	; case 110
  6731  0056F6  E0E6               	bz	l13163
  6732  0056F8  0A1C               	xorlw	28	; case 114
  6733  0056FA  E0DE               	bz	l13159
  6734  0056FC  0A05               	xorlw	5	; case 119
  6735  0056FE  E0D6               	bz	l13155
  6736  005700  0A0F               	xorlw	15	; case 120
  6737  005702  E0E3               	bz	l13165
  6738  005704  D7E8               	goto	l13169
  6739  005706                     l13175:
  6740                           
  6741                           ;main.c: 788: }while((c != 'w') && (c != 'r') && (c != 'd') && (c != 'n') && (c != 'x'))
      +                          ;
  6742  005706  0101               	movlb	1	; () banked
  6743  005708  51A6               	movf	_c& (0+255),w,b
  6744  00570A  0A77               	xorlw	119
  6745  00570C  E00C               	bz	l13185
  6746                           
  6747                           ; BSR set to: 1
  6748  00570E  51A6               	movf	_c& (0+255),w,b
  6749  005710  0A72               	xorlw	114
  6750  005712  E009               	bz	l13185
  6751                           
  6752                           ; BSR set to: 1
  6753  005714  51A6               	movf	_c& (0+255),w,b
  6754  005716  0A64               	xorlw	100
  6755  005718  E006               	bz	l13185
  6756                           
  6757                           ; BSR set to: 1
  6758  00571A  51A6               	movf	_c& (0+255),w,b
  6759  00571C  0A6E               	xorlw	110
  6760  00571E  E003               	bz	l13185
  6761                           
  6762                           ; BSR set to: 1
  6763  005720  51A6               	movf	_c& (0+255),w,b
  6764  005722  0A78               	xorlw	120
  6765  005724  E1B8               	bnz	l1805
  6766  005726                     l13185:
  6767                           
  6768                           ; BSR set to: 1
  6769                           ;main.c: 790: fl_listdirectory("/");
  6770  005726  0EFF               	movlw	high STR_63
  6771  005728  0101               	movlb	1	; () banked
  6772  00572A  6F4E               	movwf	(fl_listdirectory@path+1)& (0+255),b
  6773  00572C  0EF7               	movlw	low STR_63
  6774  00572E  6F4D               	movwf	fl_listdirectory@path& (0+255),b
  6775  005730  EF94  F02C         	goto	_fl_listdirectory	;wreg free
  6776  005734                     __end_of_File_IO:
  6777                           	opt stack 0
  6778                           tosu	equ	0xFFF
  6779                           tosh	equ	0xFFE
  6780                           tosl	equ	0xFFD
  6781                           pclath	equ	0xFFA
  6782                           tblptru	equ	0xFF8
  6783                           tblptrh	equ	0xFF7
  6784                           tblptrl	equ	0xFF6
  6785                           tablat	equ	0xFF5
  6786                           prodh	equ	0xFF4
  6787                           prodl	equ	0xFF3
  6788                           postinc0	equ	0xFEE
  6789                           wreg	equ	0xFE8
  6790                           indf1	equ	0xFE7
  6791                           postdec1	equ	0xFE5
  6792                           fsr1h	equ	0xFE2
  6793                           fsr1l	equ	0xFE1
  6794                           indf2	equ	0xFDF
  6795                           postinc2	equ	0xFDE
  6796                           postdec2	equ	0xFDD
  6797                           fsr2h	equ	0xFDA
  6798                           fsr2l	equ	0xFD9
  6799                           status	equ	0xFD8
  6800                           
  6801 ;; *************** function _Open_dir *****************
  6802 ;; Defined at:
  6803 ;;		line 716 in file "main.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;		None
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;		None
  6808 ;; Return value:  Size  Location     Type
  6809 ;;		None               void
  6810 ;; Registers used:
  6811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;Total ram usage:        0 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:   11
  6824 ;; This function calls:
  6825 ;;		_Clr_str
  6826 ;;		_Read_str
  6827 ;;		_Switch
  6828 ;;		_Write_str
  6829 ;;		_fl_closedir
  6830 ;;		_fl_listdirectory
  6831 ;;		_fl_opendir
  6832 ;;		_printf
  6833 ;; This function is called by:
  6834 ;;		_File_IO
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text7
  6839  004F66                     __ptext7:
  6840                           	opt stack 0
  6841  004F66                     _Open_dir:
  6842                           	opt stack 18
  6843                           
  6844                           ;main.c: 718: Write_str("\n\rEnter the name of the directory\n\r");
  6845                           
  6846                           ;incstack = 0
  6847  004F66  0EFC               	movlw	high STR_54
  6848  004F68  6E07               	movwf	Write_str@str+1,c
  6849  004F6A  0EB0               	movlw	low STR_54
  6850  004F6C  6E06               	movwf	Write_str@str,c
  6851  004F6E  EC3C  F01F         	call	_Write_str	;wreg free
  6852                           
  6853                           ;main.c: 719: Clr_str(string);
  6854  004F72  0E01               	movlw	high _string
  6855  004F74  6E02               	movwf	Clr_str@buffer+1,c
  6856  004F76  0101               	movlb	1	; () banked
  6857  004F78  0EAF               	movlw	low _string
  6858  004F7A  6E01               	movwf	Clr_str@buffer,c
  6859  004F7C  EC9F  F01F         	call	_Clr_str	;wreg free
  6860                           
  6861                           ;main.c: 720: Read_str(string);
  6862  004F80  0E01               	movlw	high _string
  6863  004F82  6E03               	movwf	Read_str@buffer+1,c
  6864  004F84  0101               	movlb	1	; () banked
  6865  004F86  0EAF               	movlw	low _string
  6866  004F88  6E02               	movwf	Read_str@buffer,c
  6867  004F8A  EC2C  F021         	call	_Read_str	;wreg free
  6868                           
  6869                           ;main.c: 721: Switch('r');
  6870  004F8E  0E72               	movlw	114
  6871  004F90  ECB7  F030         	call	_Switch
  6872                           
  6873                           ;main.c: 722: if (fl_opendir(m, &dptr))
  6874  004F94  0E02               	movlw	high _m
  6875  004F96  0100               	movlb	0	; () banked
  6876  004F98  6FF3               	movwf	(fl_opendir@path+1)& (0+255),b
  6877  004F9A  0E89               	movlw	low _m
  6878  004F9C  6FF2               	movwf	fl_opendir@path& (0+255),b
  6879  004F9E  0E01               	movlw	high _dptr
  6880  004FA0  6FF5               	movwf	(fl_opendir@dir+1)& (0+255),b
  6881  004FA2  0ECD               	movlw	low _dptr
  6882  004FA4  6FF4               	movwf	fl_opendir@dir& (0+255),b
  6883  004FA6  EC6B  F02E         	call	_fl_opendir	;wreg free
  6884  004FAA  0100               	movlb	0	; () banked
  6885  004FAC  51F3               	movf	(?_fl_opendir+1)& (0+255),w,b
  6886  004FAE  11F2               	iorwf	?_fl_opendir& (0+255),w,b
  6887  004FB0  E019               	bz	l1787
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;main.c: 723: {
  6891                           ;main.c: 724: printf("\n\r%s",m);
  6892  004FB2  0EFF               	movlw	high STR_55
  6893  004FB4  6E0E               	movwf	printf@f+1,c
  6894  004FB6  0EF2               	movlw	low STR_55
  6895  004FB8  6E0D               	movwf	printf@f,c
  6896  004FBA  0E02               	movlw	high _m
  6897  004FBC  6E10               	movwf	?_printf+3,c
  6898  004FBE  0102               	movlb	2	; () banked
  6899  004FC0  0E89               	movlw	low _m
  6900  004FC2  6E0F               	movwf	?_printf+2,c
  6901  004FC4  ECDA  F045         	call	_printf	;wreg free
  6902                           
  6903                           ;main.c: 725: fl_listdirectory(m);
  6904  004FC8  0E02               	movlw	high _m
  6905  004FCA  0101               	movlb	1	; () banked
  6906  004FCC  6F4E               	movwf	(fl_listdirectory@path+1)& (0+255),b
  6907  004FCE  0E89               	movlw	low _m
  6908  004FD0  6F4D               	movwf	fl_listdirectory@path& (0+255),b
  6909  004FD2  EC94  F02C         	call	_fl_listdirectory	;wreg free
  6910                           
  6911                           ;main.c: 726: fl_closedir(&dptr);
  6912  004FD6  0E01               	movlw	high _dptr
  6913  004FD8  6E02               	movwf	fl_closedir@dir+1,c
  6914  004FDA  0101               	movlb	1	; () banked
  6915  004FDC  0ECD               	movlw	low _dptr
  6916  004FDE  6E01               	movwf	fl_closedir@dir,c
  6917  004FE0  EC23  F01F         	call	_fl_closedir	;wreg free
  6918  004FE4                     l1787:
  6919  004FE4  0012               	return	
  6920  004FE6                     __end_of_Open_dir:
  6921                           	opt stack 0
  6922                           tosu	equ	0xFFF
  6923                           tosh	equ	0xFFE
  6924                           tosl	equ	0xFFD
  6925                           pclath	equ	0xFFA
  6926                           tblptru	equ	0xFF8
  6927                           tblptrh	equ	0xFF7
  6928                           tblptrl	equ	0xFF6
  6929                           tablat	equ	0xFF5
  6930                           prodh	equ	0xFF4
  6931                           prodl	equ	0xFF3
  6932                           postinc0	equ	0xFEE
  6933                           wreg	equ	0xFE8
  6934                           indf1	equ	0xFE7
  6935                           postdec1	equ	0xFE5
  6936                           fsr1h	equ	0xFE2
  6937                           fsr1l	equ	0xFE1
  6938                           indf2	equ	0xFDF
  6939                           postinc2	equ	0xFDE
  6940                           postdec2	equ	0xFDD
  6941                           fsr2h	equ	0xFDA
  6942                           fsr2l	equ	0xFD9
  6943                           status	equ	0xFD8
  6944                           
  6945 ;; *************** function _fl_listdirectory *****************
  6946 ;; Defined at:
  6947 ;;		line 1468 in file "fat_filelib.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  path            2   77[BANK1 ] PTR const unsigned char 
  6950 ;;		 -> STR_67(2), STR_63(2), m(30), 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  dirent         19   88[BANK1 ] struct fs_dir_ent
  6953 ;;  dirstat         9   79[BANK1 ] struct fs_dir_list_statu
  6954 ;; Return value:  Size  Location     Type
  6955 ;;		None               void
  6956 ;; Registers used:
  6957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6963 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6964 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6966 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6967 ;;Total ram usage:       30 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; Hardware stack levels required when called:   10
  6970 ;; This function calls:
  6971 ;;		_fl_closedir
  6972 ;;		_fl_init
  6973 ;;		_fl_opendir
  6974 ;;		_fl_readdir
  6975 ;;		_printf
  6976 ;; This function is called by:
  6977 ;;		_Open_dir
  6978 ;;		_File_IO
  6979 ;;		_main
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           	psect	text8
  6984  005928                     __ptext8:
  6985                           	opt stack 0
  6986  005928                     _fl_listdirectory:
  6987                           	opt stack 20
  6988                           
  6989                           ;fat_filelib.c: 1470: FL_DIR dirstat;
  6990                           ;fat_filelib.c: 1473: { if (_filelib_init==0) fl_init(); };
  6991                           
  6992                           ;incstack = 0
  6993  005928  0101               	movlb	1	; () banked
  6994  00592A  5192               	movf	(__filelib_init+1)& (0+255),w,b
  6995  00592C  1191               	iorwf	__filelib_init& (0+255),w,b
  6996  00592E  B4D8               	btfsc	status,2,c
  6997                           
  6998                           ; BSR set to: 1
  6999  005930  EC44  F029         	call	_fl_init	;wreg free
  7000                           
  7001                           ;fat_filelib.c: 1477: printf ("\r\nDirectory %s\r\n", path);
  7002                           
  7003                           ;fat_filelib.c: 1475: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
  7004  005934  0EFF               	movlw	high STR_11
  7005  005936  6E0E               	movwf	printf@f+1,c
  7006  005938  0E87               	movlw	low STR_11
  7007  00593A  6E0D               	movwf	printf@f,c
  7008  00593C  C14E  F010         	movff	fl_listdirectory@path+1,?_printf+3
  7009  005940  0101               	movlb	1	; () banked
  7010  005942  C14D  F00F         	movff	fl_listdirectory@path,?_printf+2
  7011  005946  ECDA  F045         	call	_printf	;wreg free
  7012                           
  7013                           ;fat_filelib.c: 1479: if (fl_opendir(path, &dirstat))
  7014  00594A  C14E  F0F3         	movff	fl_listdirectory@path+1,fl_opendir@path+1
  7015  00594E  C14D  F0F2         	movff	fl_listdirectory@path,fl_opendir@path
  7016  005952  0E01               	movlw	high fl_listdirectory@dirstat
  7017  005954  0100               	movlb	0	; () banked
  7018  005956  6FF5               	movwf	(fl_opendir@dir+1)& (0+255),b
  7019  005958  0E4F               	movlw	low fl_listdirectory@dirstat
  7020  00595A  6FF4               	movwf	fl_opendir@dir& (0+255),b
  7021  00595C  EC6B  F02E         	call	_fl_opendir	;wreg free
  7022  005960  0100               	movlb	0	; () banked
  7023  005962  51F3               	movf	(?_fl_opendir+1)& (0+255),w,b
  7024  005964  11F2               	iorwf	?_fl_opendir& (0+255),w,b
  7025  005966  E122               	bnz	l12379
  7026  005968  D037               	goto	l790
  7027  00596A                     l12373:
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;fat_filelib.c: 1484: {
  7031                           ;fat_filelib.c: 1492: if (dirent.is_dir)
  7032  00596A  0101               	movlb	1	; () banked
  7033  00596C  5162               	movf	(fl_listdirectory@dirent+10)& (0+255),w,b
  7034  00596E  E00B               	bz	l12377
  7035                           
  7036                           ; BSR set to: 1
  7037                           ;fat_filelib.c: 1493: {
  7038                           ;fat_filelib.c: 1494: printf ("%s <DIR>\r\n", dirent.filename);
  7039  005970  0EFF               	movlw	high STR_12
  7040  005972  6E0E               	movwf	printf@f+1,c
  7041  005974  0EC4               	movlw	low STR_12
  7042  005976  6E0D               	movwf	printf@f,c
  7043  005978  0E01               	movlw	high fl_listdirectory@dirent
  7044  00597A  6E10               	movwf	?_printf+3,c
  7045  00597C  0E58               	movlw	low fl_listdirectory@dirent
  7046  00597E  6E0F               	movwf	?_printf+2,c
  7047  005980  ECDA  F045         	call	_printf	;wreg free
  7048                           
  7049                           ;fat_filelib.c: 1495: }
  7050  005984  D013               	goto	l12379
  7051  005986                     l12377:
  7052                           
  7053                           ;fat_filelib.c: 1496: else
  7054                           ;fat_filelib.c: 1497: {
  7055                           ;fat_filelib.c: 1498: printf ("%s [%d bytes]\r\n", dirent.filename, dirent.size);
  7056  005986  0EFF               	movlw	high STR_13
  7057  005988  6E0E               	movwf	printf@f+1,c
  7058  00598A  0E98               	movlw	low STR_13
  7059  00598C  6E0D               	movwf	printf@f,c
  7060  00598E  0E01               	movlw	high fl_listdirectory@dirent
  7061  005990  6E10               	movwf	?_printf+3,c
  7062  005992  0101               	movlb	1	; () banked
  7063  005994  0E58               	movlw	low fl_listdirectory@dirent
  7064  005996  6E0F               	movwf	?_printf+2,c
  7065  005998  C167  F011         	movff	fl_listdirectory@dirent+15,?_printf+4
  7066  00599C  C168  F012         	movff	fl_listdirectory@dirent+16,?_printf+5
  7067  0059A0  C169  F013         	movff	fl_listdirectory@dirent+17,?_printf+6
  7068  0059A4  C16A  F014         	movff	fl_listdirectory@dirent+18,?_printf+7
  7069  0059A8  ECDA  F045         	call	_printf	;wreg free
  7070  0059AC                     l12379:
  7071  0059AC  0E01               	movlw	high fl_listdirectory@dirstat
  7072  0059AE  0100               	movlb	0	; () banked
  7073  0059B0  6FBB               	movwf	(fl_readdir@dirls+1)& (0+255),b
  7074  0059B2  0E4F               	movlw	low fl_listdirectory@dirstat
  7075  0059B4  6FBA               	movwf	fl_readdir@dirls& (0+255),b
  7076  0059B6  0E01               	movlw	high fl_listdirectory@dirent
  7077  0059B8  6FBD               	movwf	(fl_readdir@entry+1)& (0+255),b
  7078  0059BA  0E58               	movlw	low fl_listdirectory@dirent
  7079  0059BC  6FBC               	movwf	fl_readdir@entry& (0+255),b
  7080  0059BE  EC01  F022         	call	_fl_readdir	;wreg free
  7081  0059C2  0100               	movlb	0	; () banked
  7082  0059C4  51BB               	movf	(?_fl_readdir+1)& (0+255),w,b
  7083  0059C6  11BA               	iorwf	?_fl_readdir& (0+255),w,b
  7084  0059C8  E0D0               	bz	l12373
  7085                           
  7086                           ; BSR set to: 0
  7087                           ;fat_filelib.c: 1499: }
  7088                           ;fat_filelib.c: 1500: }
  7089                           ;fat_filelib.c: 1502: fl_closedir(&dirstat);
  7090                           
  7091                           ; BSR set to: 0
  7092  0059CA  0E01               	movlw	high fl_listdirectory@dirstat
  7093  0059CC  6E02               	movwf	fl_closedir@dir+1,c
  7094  0059CE  0101               	movlb	1	; () banked
  7095  0059D0  0E4F               	movlw	low fl_listdirectory@dirstat
  7096  0059D2  6E01               	movwf	fl_closedir@dir,c
  7097  0059D4  EC23  F01F         	call	_fl_closedir	;wreg free
  7098  0059D8                     l790:
  7099  0059D8  0012               	return	
  7100  0059DA                     __end_of_fl_listdirectory:
  7101                           	opt stack 0
  7102                           tosu	equ	0xFFF
  7103                           tosh	equ	0xFFE
  7104                           tosl	equ	0xFFD
  7105                           pclath	equ	0xFFA
  7106                           tblptru	equ	0xFF8
  7107                           tblptrh	equ	0xFF7
  7108                           tblptrl	equ	0xFF6
  7109                           tablat	equ	0xFF5
  7110                           prodh	equ	0xFF4
  7111                           prodl	equ	0xFF3
  7112                           postinc0	equ	0xFEE
  7113                           wreg	equ	0xFE8
  7114                           indf1	equ	0xFE7
  7115                           postdec1	equ	0xFE5
  7116                           fsr1h	equ	0xFE2
  7117                           fsr1l	equ	0xFE1
  7118                           indf2	equ	0xFDF
  7119                           postinc2	equ	0xFDE
  7120                           postdec2	equ	0xFDD
  7121                           fsr2h	equ	0xFDA
  7122                           fsr2l	equ	0xFD9
  7123                           status	equ	0xFD8
  7124                           
  7125 ;; *************** function _printf *****************
  7126 ;; Defined at:
  7127 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\doprnt.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  f               2   12[COMRAM] PTR const unsigned char 
  7130 ;;		 -> STR_55(5), STR_13(16), STR_12(11), STR_11(17), 
  7131 ;;		 -> STR_9(49), STR_8(28), STR_7(28), STR_6(24), 
  7132 ;;		 -> STR_5(31), STR_2(10), STR_1(15), 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;  idx             1   22[COMRAM] unsigned char 
  7135 ;;  _val            4   27[COMRAM] struct .
  7136 ;;  ap              2   24[COMRAM] PTR void [1]
  7137 ;;		 -> ?_printf(2), 
  7138 ;;  c               1   31[COMRAM] char 
  7139 ;;  flag            1   26[COMRAM] unsigned char 
  7140 ;;  prec            1   23[COMRAM] char 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  2   12[COMRAM] int 
  7143 ;; Registers used:
  7144 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7150 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7153 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7154 ;;Total ram usage:       20 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    3
  7157 ;; This function calls:
  7158 ;;		___lwdiv
  7159 ;;		___lwmod
  7160 ;;		_putch
  7161 ;; This function is called by:
  7162 ;;		_fl_attach_media
  7163 ;;		_fl_listdirectory
  7164 ;;		_Open_dir
  7165 ;;		_fatfs_show_details
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text9
  7170  008BB4                     __ptext9:
  7171                           	opt stack 0
  7172  008BB4                     _printf:
  7173                           	opt stack 26
  7174                           
  7175                           ;doprnt.c: 466: va_list ap;
  7176                           ;doprnt.c: 499: signed char c;
  7177                           ;doprnt.c: 506: signed char prec;
  7178                           ;doprnt.c: 508: unsigned char flag;
  7179                           ;doprnt.c: 527: union {
  7180                           ;doprnt.c: 528: unsigned int _val;
  7181                           ;doprnt.c: 529: struct {
  7182                           ;doprnt.c: 530: const char * _cp;
  7183                           ;doprnt.c: 531: unsigned _len;
  7184                           ;doprnt.c: 532: } _str;
  7185                           ;doprnt.c: 533: } _val;
  7186                           ;doprnt.c: 542: *ap = __va_start();
  7187                           
  7188                           ;incstack = 0
  7189  008BB4  0E00               	movlw	high (?_printf+2)
  7190  008BB6  6E1A               	movwf	printf@ap+1,c
  7191  008BB8  0E0F               	movlw	low (?_printf+2)
  7192  008BBA  6E19               	movwf	printf@ap,c
  7193                           
  7194                           ;doprnt.c: 545: while(c = *f++) {
  7195  008BBC  D12C               	goto	l11611
  7196  008BBE                     l11519:
  7197                           
  7198                           ;doprnt.c: 547: if(c != '%')
  7199  008BBE  5020               	movf	printf@c,w,c
  7200  008BC0  0A25               	xorlw	37
  7201  008BC2  E004               	bz	l11523
  7202                           
  7203                           ;doprnt.c: 549: {
  7204                           ;doprnt.c: 550: (putch(c) );
  7205  008BC4  5020               	movf	printf@c,w,c
  7206  008BC6  EC2C  F01F         	call	_putch
  7207                           
  7208                           ;doprnt.c: 551: continue;
  7209  008BCA  D125               	goto	l11611
  7210  008BCC                     l11523:
  7211                           
  7212                           ;doprnt.c: 552: }
  7213                           ;doprnt.c: 557: flag = 0;
  7214  008BCC  6A1B               	clrf	printf@flag,c
  7215                           
  7216                           ;doprnt.c: 644: switch(c = *f++) {
  7217  008BCE  D040               	goto	l11543
  7218  008BD0                     l11525:
  7219                           
  7220                           ;doprnt.c: 730: flag |= 0x80;
  7221  008BD0  8E1B               	bsf	printf@flag,7,c
  7222                           
  7223                           ;doprnt.c: 732: break;
  7224  008BD2  D054               	goto	l2209
  7225  008BD4                     l11527:
  7226                           
  7227                           ;doprnt.c: 743: _val._str._cp = (*(const char * *)__va_arg((*(const char * **)ap), (cons
      +                          t char *)0));
  7228  008BD4  C019  FFD9         	movff	printf@ap,fsr2l
  7229  008BD8  C01A  FFDA         	movff	printf@ap+1,fsr2h
  7230  008BDC  CFDE F01C          	movff	postinc2,printf@_val
  7231  008BE0  CFDD F01D          	movff	postdec2,printf@_val+1
  7232  008BE4  0E02               	movlw	2
  7233  008BE6  2619               	addwf	printf@ap,f,c
  7234  008BE8  0E00               	movlw	0
  7235  008BEA  221A               	addwfc	printf@ap+1,f,c
  7236                           
  7237                           ;doprnt.c: 749: if(!_val._str._cp)
  7238  008BEC  501D               	movf	printf@_val+1,w,c
  7239  008BEE  101C               	iorwf	printf@_val,w,c
  7240  008BF0  E11A               	bnz	l11539
  7241                           
  7242                           ;doprnt.c: 750: _val._str._cp = "(null)";
  7243  008BF2  0EFF               	movlw	high STR_68
  7244  008BF4  6E1D               	movwf	printf@_val+1,c
  7245  008BF6  0ED9               	movlw	low STR_68
  7246  008BF8  6E1C               	movwf	printf@_val,c
  7247  008BFA  D015               	goto	l11539
  7248  008BFC                     l11535:
  7249                           
  7250                           ;doprnt.c: 787: (putch(*_val._str._cp++) );
  7251  008BFC  C01C  FFF6         	movff	printf@_val,tblptrl
  7252  008C00  C01D  FFF7         	movff	printf@_val+1,tblptrh
  7253  008C04  0E00               	movlw	low (__mediumconst shr (0+16))
  7254  008C06  6EF8               	movwf	tblptru,c
  7255  008C08  0E0F               	movlw	(high __ramtop+-1)
  7256  008C0A  64F7               	cpfsgt	tblptrh,c
  7257  008C0C  D003               	bra	u13437
  7258  008C0E  0008               	tblrd		*
  7259  008C10  50F5               	movf	tablat,w,c
  7260  008C12  D005               	bra	u13430
  7261  008C14                     u13437:
  7262  008C14  CFF6 FFE9          	movff	tblptrl,fsr0l
  7263  008C18  CFF7 FFEA          	movff	tblptrh,fsr0h
  7264  008C1C  50EF               	movf	indf0,w,c
  7265  008C1E                     u13430:
  7266  008C1E  EC2C  F01F         	call	_putch
  7267  008C22  4A1C               	infsnz	printf@_val,f,c
  7268  008C24  2A1D               	incf	printf@_val+1,f,c
  7269  008C26                     l11539:
  7270  008C26  C01C  FFF6         	movff	printf@_val,tblptrl
  7271  008C2A  C01D  FFF7         	movff	printf@_val+1,tblptrh
  7272  008C2E  0E00               	movlw	low (__mediumconst shr (0+16))
  7273  008C30  6EF8               	movwf	tblptru,c
  7274  008C32  0E0F               	movlw	(high __ramtop+-1)
  7275  008C34  64F7               	cpfsgt	tblptrh,c
  7276  008C36  D003               	bra	u13447
  7277  008C38  0008               	tblrd		*
  7278  008C3A  50F5               	movf	tablat,w,c
  7279  008C3C  D005               	bra	u13440
  7280  008C3E                     u13447:
  7281  008C3E  CFF6 FFE9          	movff	tblptrl,fsr0l
  7282  008C42  CFF7 FFEA          	movff	tblptrh,fsr0h
  7283  008C46  50EF               	movf	indf0,w,c
  7284  008C48                     u13440:
  7285  008C48  0900               	iorlw	0
  7286  008C4A  E101 D0E4          	bz	l11611
  7287  008C4E  D7D6               	goto	l11535
  7288  008C50                     l11543:
  7289  008C50  C00D  FFF6         	movff	printf@f,tblptrl
  7290  008C54  C00E  FFF7         	movff	printf@f+1,tblptrh
  7291  008C58  4A0D               	infsnz	printf@f,f,c
  7292  008C5A  2A0E               	incf	printf@f+1,f,c
  7293  008C5C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7294  008C5C  6AF8               	clrf	tblptru,c
  7295  008C5E                     	endif
  7296  008C5E                     	if	0	;tblptru may be non-zero
  7297  008C5E                     	endif
  7298  008C5E  0008               	tblrd		*
  7299  008C60  CFF5 F020          	movff	tablat,printf@c
  7300  008C64  5020               	movf	printf@c& (0+255),w,c
  7301                           
  7302                           ; Switch size 1, requested type "speed"
  7303                           ; Number of cases is 5, Range of values is 0 to 120
  7304                           ; switch strategies available:
  7305                           ; Name         Instructions Cycles
  7306                           ; simple_byte           16     9 (average)
  7307                           ;	Chosen strategy is simple_byte
  7308  008C66  E101 D0E2          	bz	l2239
  7309  008C6A  0A64               	xorlw	100	; case 100
  7310  008C6C  E007               	bz	l2209
  7311  008C6E  0A0D               	xorlw	13	; case 105
  7312  008C70  E005               	bz	l2209
  7313  008C72  0A1A               	xorlw	26	; case 115
  7314  008C74  E0AF               	bz	l11527
  7315  008C76  0A0B               	xorlw	11	; case 120
  7316  008C78  E0AB               	bz	l11525
  7317  008C7A  D0CD               	goto	l11611
  7318  008C7C                     l2209:
  7319                           
  7320                           ;doprnt.c: 1260: if((flag & 0x80) == 0x00)
  7321  008C7C  BE1B               	btfsc	printf@flag,7,c
  7322  008C7E  D01C               	goto	l11555
  7323                           
  7324                           ;doprnt.c: 1262: {
  7325                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7326  008C80  C019  FFD9         	movff	printf@ap,fsr2l
  7327  008C84  C01A  FFDA         	movff	printf@ap+1,fsr2h
  7328  008C88  CFDE F01C          	movff	postinc2,printf@_val
  7329  008C8C  CFDD F01D          	movff	postdec2,printf@_val+1
  7330  008C90  0E02               	movlw	2
  7331  008C92  2619               	addwf	printf@ap,f,c
  7332  008C94  0E00               	movlw	0
  7333  008C96  221A               	addwfc	printf@ap+1,f,c
  7334                           
  7335                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  7336  008C98  501D               	movf	printf@_val+1,w,c
  7337  008C9A  0A80               	xorlw	128
  7338  008C9C  6EF3               	movwf	prodl,c
  7339  008C9E  0E80               	movlw	128
  7340  008CA0  5CF3               	subwf	prodl,w,c
  7341  008CA2  0E00               	movlw	0
  7342  008CA4  B4D8               	btfsc	status,2,c
  7343  008CA6  5C1C               	subwf	printf@_val,w,c
  7344  008CA8  E24E               	bc	l11589
  7345                           
  7346                           ;doprnt.c: 1271: flag |= 0x03;
  7347  008CAA  0E03               	movlw	3
  7348  008CAC  121B               	iorwf	printf@flag,f,c
  7349                           
  7350                           ;doprnt.c: 1272: _val._val = -_val._val;
  7351  008CAE  6C1C               	negf	printf@_val,c
  7352  008CB0  1E1D               	comf	printf@_val+1,f,c
  7353  008CB2  B0D8               	btfsc	status,0,c
  7354  008CB4  2A1D               	incf	printf@_val+1,f,c
  7355  008CB6  D047               	goto	l11589
  7356  008CB8                     l11555:
  7357                           
  7358                           ;doprnt.c: 1277: else
  7359                           ;doprnt.c: 1282: {
  7360                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7361  008CB8  C019  FFD9         	movff	printf@ap,fsr2l
  7362  008CBC  C01A  FFDA         	movff	printf@ap+1,fsr2h
  7363  008CC0  CFDE F01C          	movff	postinc2,printf@_val
  7364  008CC4  CFDD F01D          	movff	postdec2,printf@_val+1
  7365  008CC8  0E02               	movlw	2
  7366  008CCA  2619               	addwf	printf@ap,f,c
  7367  008CCC  0E00               	movlw	0
  7368  008CCE  221A               	addwfc	printf@ap+1,f,c
  7369  008CD0  D03A               	goto	l11589
  7370  008CD2                     l11559:
  7371                           
  7372                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7373  008CD2  0E01               	movlw	1
  7374  008CD4  6E20               	movwf	printf@c,c
  7375  008CD6  5020               	movf	printf@c,w,c
  7376  008CD8  0A05               	xorlw	5
  7377  008CDA  E03A               	bz	l11591
  7378                           
  7379                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  7380  008CDC  5020               	movf	printf@c,w,c
  7381  008CDE  0D02               	mullw	2
  7382  008CE0  0E5A               	movlw	low _dpowers
  7383  008CE2  24F3               	addwf	prodl,w,c
  7384  008CE4  6EF6               	movwf	tblptrl,c
  7385  008CE6  0EFA               	movlw	high _dpowers
  7386  008CE8  20F4               	addwfc	prodh,w,c
  7387  008CEA  6EF7               	movwf	tblptrh,c
  7388  008CEC                     	if	1	;There are 3 active tblptr bytes
  7389  008CEC  6AF8               	clrf	tblptru,c
  7390  008CEE  0E00               	movlw	low (__mediumconst shr (0+16))
  7391  008CF0  22F8               	addwfc	tblptru,f,c
  7392  008CF2                     	endif
  7393  008CF2  0009               	tblrd		*+
  7394  008CF4  CFF5 F015          	movff	tablat,??_printf
  7395  008CF8  0009               	tblrd		*+
  7396  008CFA  CFF5 F016          	movff	tablat,??_printf+1
  7397  008CFE  5015               	movf	??_printf,w,c
  7398  008D00  5C1C               	subwf	printf@_val,w,c
  7399  008D02  5016               	movf	??_printf+1,w,c
  7400  008D04  581D               	subwfb	printf@_val+1,w,c
  7401  008D06  E324               	bnc	l11591
  7402                           
  7403                           ;doprnt.c: 1316: break;
  7404  008D08  2A20               	incf	printf@c,f,c
  7405  008D0A  D7E5               	goto	L13
  7406  008D0C                     l11573:
  7407                           
  7408                           ;doprnt.c: 1325: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  7409  008D0C  0E01               	movlw	1
  7410  008D0E  6E20               	movwf	printf@c,c
  7411  008D10  5020               	movf	printf@c,w,c
  7412  008D12  0A04               	xorlw	4
  7413  008D14  E01D               	bz	l11591
  7414                           
  7415                           ;doprnt.c: 1326: if(_val._val < hexpowers[c])
  7416  008D16  5020               	movf	printf@c,w,c
  7417  008D18  0D02               	mullw	2
  7418  008D1A  0E64               	movlw	low _hexpowers
  7419  008D1C  24F3               	addwf	prodl,w,c
  7420  008D1E  6EF6               	movwf	tblptrl,c
  7421  008D20  0EFA               	movlw	high _hexpowers
  7422  008D22  20F4               	addwfc	prodh,w,c
  7423  008D24  6EF7               	movwf	tblptrh,c
  7424  008D26                     	if	1	;There are 3 active tblptr bytes
  7425  008D26  6AF8               	clrf	tblptru,c
  7426  008D28  0E00               	movlw	low (__mediumconst shr (0+16))
  7427  008D2A  22F8               	addwfc	tblptru,f,c
  7428  008D2C                     	endif
  7429  008D2C  0009               	tblrd		*+
  7430  008D2E  CFF5 F015          	movff	tablat,??_printf
  7431  008D32  0009               	tblrd		*+
  7432  008D34  CFF5 F016          	movff	tablat,??_printf+1
  7433  008D38  5015               	movf	??_printf,w,c
  7434  008D3A  5C1C               	subwf	printf@_val,w,c
  7435  008D3C  5016               	movf	??_printf+1,w,c
  7436  008D3E  581D               	subwfb	printf@_val+1,w,c
  7437  008D40  E307               	bnc	l11591
  7438                           
  7439                           ;doprnt.c: 1327: break;
  7440  008D42  2A20               	incf	printf@c,f,c
  7441  008D44  D7E5               	goto	L14
  7442  008D46                     l11589:
  7443  008D46  501B               	movf	printf@flag,w,c
  7444  008D48  0B80               	andlw	128
  7445                           
  7446                           ; Switch size 1, requested type "speed"
  7447                           ; Number of cases is 2, Range of values is 0 to 128
  7448                           ; switch strategies available:
  7449                           ; Name         Instructions Cycles
  7450                           ; simple_byte            7     4 (average)
  7451                           ;	Chosen strategy is simple_byte
  7452  008D4A  E0C3               	bz	l11559
  7453  008D4C  0A80               	xorlw	128	; case 128
  7454  008D4E  E0DE               	bz	l11573
  7455  008D50                     l11591:
  7456                           
  7457                           ;doprnt.c: 1431: {
  7458                           ;doprnt.c: 1447: if(flag & 0x03)
  7459  008D50  C01B  F015         	movff	printf@flag,??_printf
  7460  008D54  0E03               	movlw	3
  7461  008D56  1615               	andwf	??_printf,f,c
  7462  008D58  E003               	bz	l11595
  7463                           
  7464                           ;doprnt.c: 1448: (putch('-') );
  7465  008D5A  0E2D               	movlw	45
  7466  008D5C  EC2C  F01F         	call	_putch
  7467  008D60                     l11595:
  7468                           
  7469                           ;doprnt.c: 1478: }
  7470                           ;doprnt.c: 1481: prec = c;
  7471  008D60  C020  F018         	movff	printf@c,printf@prec
  7472                           
  7473                           ;doprnt.c: 1483: while(prec--) {
  7474  008D64  D055               	goto	l11609
  7475  008D66                     l11597:
  7476                           
  7477                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  7478  008D66  5018               	movf	printf@prec,w,c
  7479  008D68  0D02               	mullw	2
  7480  008D6A  0E5A               	movlw	low _dpowers
  7481  008D6C  24F3               	addwf	prodl,w,c
  7482  008D6E  6EF6               	movwf	tblptrl,c
  7483  008D70  0EFA               	movlw	high _dpowers
  7484  008D72  20F4               	addwfc	prodh,w,c
  7485  008D74  6EF7               	movwf	tblptrh,c
  7486  008D76                     	if	1	;There are 3 active tblptr bytes
  7487  008D76  6AF8               	clrf	tblptru,c
  7488  008D78  0E00               	movlw	low (__mediumconst shr (0+16))
  7489  008D7A  22F8               	addwfc	tblptru,f,c
  7490  008D7C                     	endif
  7491  008D7C  0009               	tblrd		*+
  7492  008D7E  CFF5 F003          	movff	tablat,___lwdiv@divisor
  7493  008D82  000A               	tblrd		*-
  7494  008D84  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  7495  008D88  C01C  F001         	movff	printf@_val,___lwdiv@dividend
  7496  008D8C  C01D  F002         	movff	printf@_val+1,___lwdiv@dividend+1
  7497  008D90  ECB5  F021         	call	___lwdiv	;wreg free
  7498  008D94  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  7499  008D98  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  7500  008D9C  6A0B               	clrf	___lwmod@divisor+1,c
  7501  008D9E  0E0A               	movlw	10
  7502  008DA0  6E0A               	movwf	___lwmod@divisor,c
  7503  008DA2  EC0D  F021         	call	___lwmod	;wreg free
  7504  008DA6  5008               	movf	?___lwmod,w,c
  7505  008DA8  0F30               	addlw	48
  7506  008DAA  6E20               	movwf	printf@c,c
  7507                           
  7508                           ;doprnt.c: 1500: break;
  7509  008DAC  D02E               	goto	l11607
  7510  008DAE                     l11599:
  7511                           
  7512                           ;doprnt.c: 1508: {
  7513                           ;doprnt.c: 1509: unsigned char idx = (_val._val / hexpowers[prec]) & 0xF;
  7514  008DAE  C01C  F001         	movff	printf@_val,___lwdiv@dividend
  7515  008DB2  C01D  F002         	movff	printf@_val+1,___lwdiv@dividend+1
  7516  008DB6  5018               	movf	printf@prec,w,c
  7517  008DB8  0D02               	mullw	2
  7518  008DBA  0E64               	movlw	low _hexpowers
  7519  008DBC  24F3               	addwf	prodl,w,c
  7520  008DBE  6EF6               	movwf	tblptrl,c
  7521  008DC0  0EFA               	movlw	high _hexpowers
  7522  008DC2  20F4               	addwfc	prodh,w,c
  7523  008DC4  6EF7               	movwf	tblptrh,c
  7524  008DC6                     	if	1	;There are 3 active tblptr bytes
  7525  008DC6  6AF8               	clrf	tblptru,c
  7526  008DC8  0E00               	movlw	low (__mediumconst shr (0+16))
  7527  008DCA  22F8               	addwfc	tblptru,f,c
  7528  008DCC                     	endif
  7529  008DCC  0009               	tblrd		*+
  7530  008DCE  CFF5 F003          	movff	tablat,___lwdiv@divisor
  7531  008DD2  000A               	tblrd		*-
  7532  008DD4  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  7533  008DD8  ECB5  F021         	call	___lwdiv	;wreg free
  7534  008DDC  5001               	movf	?___lwdiv,w,c
  7535  008DDE  0B0F               	andlw	15
  7536  008DE0  6E17               	movwf	printf@idx,c
  7537                           
  7538                           ;doprnt.c: 1515: c = "0123456789abcdef"[idx];
  7539  008DE2  5017               	movf	printf@idx,w,c
  7540  008DE4  0D01               	mullw	1
  7541  008DE6  0E76               	movlw	low STR_69
  7542  008DE8  24F3               	addwf	prodl,w,c
  7543  008DEA  6EF6               	movwf	tblptrl,c
  7544  008DEC  0EFF               	movlw	high STR_69
  7545  008DEE  20F4               	addwfc	prodh,w,c
  7546  008DF0  6EF7               	movwf	tblptrh,c
  7547  008DF2                     	if	1	;There are 3 active tblptr bytes
  7548  008DF2  6AF8               	clrf	tblptru,c
  7549  008DF4  0E00               	movlw	low (__mediumconst shr (0+16))
  7550  008DF6  22F8               	addwfc	tblptru,f,c
  7551  008DF8                     	endif
  7552  008DF8  0008               	tblrd		*
  7553  008DFA  CFF5 F020          	movff	tablat,printf@c
  7554                           
  7555                           ;doprnt.c: 1517: }
  7556                           ;doprnt.c: 1519: break;
  7557  008DFE  D005               	goto	l11607
  7558  008E00                     l11605:
  7559  008E00  501B               	movf	printf@flag,w,c
  7560  008E02  0B80               	andlw	128
  7561                           
  7562                           ; Switch size 1, requested type "speed"
  7563                           ; Number of cases is 2, Range of values is 0 to 128
  7564                           ; switch strategies available:
  7565                           ; Name         Instructions Cycles
  7566                           ; simple_byte            7     4 (average)
  7567                           ;	Chosen strategy is simple_byte
  7568  008E04  E0B0               	bz	l11597
  7569  008E06  0A80               	xorlw	128	; case 128
  7570  008E08  E0D2               	bz	l11599
  7571  008E0A                     l11607:
  7572                           
  7573                           ;doprnt.c: 1533: (putch(c) );
  7574  008E0A  5020               	movf	printf@c,w,c
  7575  008E0C  EC2C  F01F         	call	_putch
  7576  008E10                     l11609:
  7577  008E10  0618               	decf	printf@prec,f,c
  7578  008E12  2818               	incf	printf@prec& (0+255),w,c
  7579  008E14  E1F5               	bnz	l11605
  7580  008E16                     l11611:
  7581  008E16  C00D  FFF6         	movff	printf@f,tblptrl
  7582  008E1A  C00E  FFF7         	movff	printf@f+1,tblptrh
  7583  008E1E  4A0D               	infsnz	printf@f,f,c
  7584  008E20  2A0E               	incf	printf@f+1,f,c
  7585  008E22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7586  008E22  6AF8               	clrf	tblptru,c
  7587  008E24                     	endif
  7588  008E24                     	if	0	;tblptru may be non-zero
  7589  008E24                     	endif
  7590  008E24  0008               	tblrd		*
  7591  008E26  CFF5 F020          	movff	tablat,printf@c
  7592  008E2A  6620               	tstfsz	printf@c& (0+255),c
  7593  008E2C  D6C8               	goto	l11519
  7594  008E2E                     l2239:
  7595  008E2E  0012               	return	
  7596  008E30                     __end_of_printf:
  7597                           	opt stack 0
  7598                           tosu	equ	0xFFF
  7599                           tosh	equ	0xFFE
  7600                           tosl	equ	0xFFD
  7601                           pclath	equ	0xFFA
  7602                           tblptru	equ	0xFF8
  7603                           tblptrh	equ	0xFF7
  7604                           tblptrl	equ	0xFF6
  7605                           tablat	equ	0xFF5
  7606                           prodh	equ	0xFF4
  7607                           prodl	equ	0xFF3
  7608                           indf0	equ	0xFEF
  7609                           postinc0	equ	0xFEE
  7610                           fsr0h	equ	0xFEA
  7611                           fsr0l	equ	0xFE9
  7612                           wreg	equ	0xFE8
  7613                           indf1	equ	0xFE7
  7614                           postdec1	equ	0xFE5
  7615                           fsr1h	equ	0xFE2
  7616                           fsr1l	equ	0xFE1
  7617                           indf2	equ	0xFDF
  7618                           postinc2	equ	0xFDE
  7619                           postdec2	equ	0xFDD
  7620                           fsr2h	equ	0xFDA
  7621                           fsr2l	equ	0xFD9
  7622                           status	equ	0xFD8
  7623                           
  7624 ;; *************** function _putch *****************
  7625 ;; Defined at:
  7626 ;;		line 751 in file "main.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;  byte            1    wreg     unsigned char 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;  byte            1    2[COMRAM] unsigned char 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;		None               void
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0, cstack
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;Total ram usage:        1 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; Hardware stack levels required when called:    2
  7647 ;; This function calls:
  7648 ;;		_Write
  7649 ;; This function is called by:
  7650 ;;		_printf
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text10
  7655  003E58                     __ptext10:
  7656                           	opt stack 0
  7657  003E58                     _putch:
  7658                           	opt stack 26
  7659                           
  7660                           ;incstack = 0
  7661                           ;putch@byte stored from wreg
  7662  003E58  6E03               	movwf	putch@byte,c
  7663                           
  7664                           ;main.c: 753: Write(byte);
  7665  003E5A  5003               	movf	putch@byte,w,c
  7666  003E5C  EF0F  F020         	goto	_Write
  7667  003E60                     __end_of_putch:
  7668                           	opt stack 0
  7669                           tosu	equ	0xFFF
  7670                           tosh	equ	0xFFE
  7671                           tosl	equ	0xFFD
  7672                           pclath	equ	0xFFA
  7673                           tblptru	equ	0xFF8
  7674                           tblptrh	equ	0xFF7
  7675                           tblptrl	equ	0xFF6
  7676                           tablat	equ	0xFF5
  7677                           prodh	equ	0xFF4
  7678                           prodl	equ	0xFF3
  7679                           indf0	equ	0xFEF
  7680                           postinc0	equ	0xFEE
  7681                           fsr0h	equ	0xFEA
  7682                           fsr0l	equ	0xFE9
  7683                           wreg	equ	0xFE8
  7684                           indf1	equ	0xFE7
  7685                           postdec1	equ	0xFE5
  7686                           fsr1h	equ	0xFE2
  7687                           fsr1l	equ	0xFE1
  7688                           indf2	equ	0xFDF
  7689                           postinc2	equ	0xFDE
  7690                           postdec2	equ	0xFDD
  7691                           fsr2h	equ	0xFDA
  7692                           fsr2l	equ	0xFD9
  7693                           status	equ	0xFD8
  7694                           
  7695 ;; *************** function ___lwmod *****************
  7696 ;; Defined at:
  7697 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  dividend        2    7[COMRAM] unsigned int 
  7700 ;;  divisor         2    9[COMRAM] unsigned int 
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;  counter         1   11[COMRAM] unsigned char 
  7703 ;; Return value:  Size  Location     Type
  7704 ;;                  2    7[COMRAM] unsigned int 
  7705 ;; Registers used:
  7706 ;;		wreg, status,2, status,0
  7707 ;; Tracked objects:
  7708 ;;		On entry : 0/0
  7709 ;;		On exit  : 0/0
  7710 ;;		Unchanged: 0/0
  7711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7712 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;Total ram usage:        5 bytes
  7717 ;; Hardware stack levels used:    1
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_printf
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text11
  7726  00421A                     __ptext11:
  7727                           	opt stack 0
  7728  00421A                     ___lwmod:
  7729                           	opt stack 28
  7730                           
  7731                           ;incstack = 0
  7732  00421A  500B               	movf	___lwmod@divisor+1,w,c
  7733  00421C  100A               	iorwf	___lwmod@divisor,w,c
  7734  00421E  E017               	bz	l2843
  7735  004220  0E01               	movlw	1
  7736  004222  6E0C               	movwf	___lwmod@counter,c
  7737  004224  D004               	goto	l11507
  7738  004226                     l11505:
  7739  004226  90D8               	bcf	status,0,c
  7740  004228  360A               	rlcf	___lwmod@divisor,f,c
  7741  00422A  360B               	rlcf	___lwmod@divisor+1,f,c
  7742  00422C  2A0C               	incf	___lwmod@counter,f,c
  7743  00422E                     l11507:
  7744  00422E  AE0B               	btfss	___lwmod@divisor+1,7,c
  7745  004230  D7FA               	goto	l11505
  7746  004232                     l11509:
  7747  004232  500A               	movf	___lwmod@divisor,w,c
  7748  004234  5C08               	subwf	___lwmod@dividend,w,c
  7749  004236  500B               	movf	___lwmod@divisor+1,w,c
  7750  004238  5809               	subwfb	___lwmod@dividend+1,w,c
  7751  00423A  E304               	bnc	l11513
  7752  00423C  500A               	movf	___lwmod@divisor,w,c
  7753  00423E  5E08               	subwf	___lwmod@dividend,f,c
  7754  004240  500B               	movf	___lwmod@divisor+1,w,c
  7755  004242  5A09               	subwfb	___lwmod@dividend+1,f,c
  7756  004244                     l11513:
  7757  004244  90D8               	bcf	status,0,c
  7758  004246  320B               	rrcf	___lwmod@divisor+1,f,c
  7759  004248  320A               	rrcf	___lwmod@divisor,f,c
  7760  00424A  2E0C               	decfsz	___lwmod@counter,f,c
  7761  00424C  D7F2               	goto	l11509
  7762  00424E                     l2843:
  7763  00424E  C008  F008         	movff	___lwmod@dividend,?___lwmod
  7764  004252  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  7765  004256  0012               	return	
  7766  004258                     __end_of___lwmod:
  7767                           	opt stack 0
  7768                           tosu	equ	0xFFF
  7769                           tosh	equ	0xFFE
  7770                           tosl	equ	0xFFD
  7771                           pclath	equ	0xFFA
  7772                           tblptru	equ	0xFF8
  7773                           tblptrh	equ	0xFF7
  7774                           tblptrl	equ	0xFF6
  7775                           tablat	equ	0xFF5
  7776                           prodh	equ	0xFF4
  7777                           prodl	equ	0xFF3
  7778                           indf0	equ	0xFEF
  7779                           postinc0	equ	0xFEE
  7780                           fsr0h	equ	0xFEA
  7781                           fsr0l	equ	0xFE9
  7782                           wreg	equ	0xFE8
  7783                           indf1	equ	0xFE7
  7784                           postdec1	equ	0xFE5
  7785                           fsr1h	equ	0xFE2
  7786                           fsr1l	equ	0xFE1
  7787                           indf2	equ	0xFDF
  7788                           postinc2	equ	0xFDE
  7789                           postdec2	equ	0xFDD
  7790                           fsr2h	equ	0xFDA
  7791                           fsr2l	equ	0xFD9
  7792                           status	equ	0xFD8
  7793                           
  7794 ;; *************** function ___lwdiv *****************
  7795 ;; Defined at:
  7796 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;  dividend        2    0[COMRAM] unsigned int 
  7799 ;;  divisor         2    2[COMRAM] unsigned int 
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;  quotient        2    4[COMRAM] unsigned int 
  7802 ;;  counter         1    6[COMRAM] unsigned char 
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  2    0[COMRAM] unsigned int 
  7805 ;; Registers used:
  7806 ;;		wreg, status,2, status,0
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7813 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7815 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7816 ;;Total ram usage:        7 bytes
  7817 ;; Hardware stack levels used:    1
  7818 ;; This function calls:
  7819 ;;		Nothing
  7820 ;; This function is called by:
  7821 ;;		_fatfs_init
  7822 ;;		_printf
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text12
  7827  00436A                     __ptext12:
  7828                           	opt stack 0
  7829  00436A                     ___lwdiv:
  7830                           	opt stack 28
  7831                           
  7832                           ;incstack = 0
  7833  00436A  6A06               	clrf	___lwdiv@quotient+1,c
  7834  00436C  6A05               	clrf	___lwdiv@quotient,c
  7835  00436E  5004               	movf	___lwdiv@divisor+1,w,c
  7836  004370  1003               	iorwf	___lwdiv@divisor,w,c
  7837  004372  E01B               	bz	l2833
  7838  004374  0E01               	movlw	1
  7839  004376  6E07               	movwf	___lwdiv@counter,c
  7840  004378  D004               	goto	l11487
  7841  00437A                     l11485:
  7842  00437A  90D8               	bcf	status,0,c
  7843  00437C  3603               	rlcf	___lwdiv@divisor,f,c
  7844  00437E  3604               	rlcf	___lwdiv@divisor+1,f,c
  7845  004380  2A07               	incf	___lwdiv@counter,f,c
  7846  004382                     l11487:
  7847  004382  AE04               	btfss	___lwdiv@divisor+1,7,c
  7848  004384  D7FA               	goto	l11485
  7849  004386                     l11489:
  7850  004386  90D8               	bcf	status,0,c
  7851  004388  3605               	rlcf	___lwdiv@quotient,f,c
  7852  00438A  3606               	rlcf	___lwdiv@quotient+1,f,c
  7853  00438C  5003               	movf	___lwdiv@divisor,w,c
  7854  00438E  5C01               	subwf	___lwdiv@dividend,w,c
  7855  004390  5004               	movf	___lwdiv@divisor+1,w,c
  7856  004392  5802               	subwfb	___lwdiv@dividend+1,w,c
  7857  004394  E305               	bnc	l11497
  7858  004396  5003               	movf	___lwdiv@divisor,w,c
  7859  004398  5E01               	subwf	___lwdiv@dividend,f,c
  7860  00439A  5004               	movf	___lwdiv@divisor+1,w,c
  7861  00439C  5A02               	subwfb	___lwdiv@dividend+1,f,c
  7862  00439E  8005               	bsf	___lwdiv@quotient,0,c
  7863  0043A0                     l11497:
  7864  0043A0  90D8               	bcf	status,0,c
  7865  0043A2  3204               	rrcf	___lwdiv@divisor+1,f,c
  7866  0043A4  3203               	rrcf	___lwdiv@divisor,f,c
  7867  0043A6  2E07               	decfsz	___lwdiv@counter,f,c
  7868  0043A8  D7EE               	goto	l11489
  7869  0043AA                     l2833:
  7870  0043AA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  7871  0043AE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7872  0043B2  0012               	return	
  7873  0043B4                     __end_of___lwdiv:
  7874                           	opt stack 0
  7875                           tosu	equ	0xFFF
  7876                           tosh	equ	0xFFE
  7877                           tosl	equ	0xFFD
  7878                           pclath	equ	0xFFA
  7879                           tblptru	equ	0xFF8
  7880                           tblptrh	equ	0xFF7
  7881                           tblptrl	equ	0xFF6
  7882                           tablat	equ	0xFF5
  7883                           prodh	equ	0xFF4
  7884                           prodl	equ	0xFF3
  7885                           indf0	equ	0xFEF
  7886                           postinc0	equ	0xFEE
  7887                           fsr0h	equ	0xFEA
  7888                           fsr0l	equ	0xFE9
  7889                           wreg	equ	0xFE8
  7890                           indf1	equ	0xFE7
  7891                           postdec1	equ	0xFE5
  7892                           fsr1h	equ	0xFE2
  7893                           fsr1l	equ	0xFE1
  7894                           indf2	equ	0xFDF
  7895                           postinc2	equ	0xFDE
  7896                           postdec2	equ	0xFDD
  7897                           fsr2h	equ	0xFDA
  7898                           fsr2l	equ	0xFD9
  7899                           status	equ	0xFD8
  7900                           
  7901 ;; *************** function _fl_readdir *****************
  7902 ;; Defined at:
  7903 ;;		line 1544 in file "fat_filelib.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  dirls           2   58[BANK0 ] PTR struct fs_dir_list_s
  7906 ;;		 -> fl_listdirectory@dirstat(9), 
  7907 ;;  entry           2   60[BANK0 ] PTR struct fs_dir_ent
  7908 ;;		 -> fl_listdirectory@dirent(19), 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;  res             2   62[BANK0 ] int 
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  2   58[BANK0 ] int 
  7913 ;; Registers used:
  7914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7920 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7921 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7923 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7924 ;;Total ram usage:        6 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    8
  7927 ;; This function calls:
  7928 ;;		_fatfs_list_directory_next
  7929 ;;		_fl_init
  7930 ;; This function is called by:
  7931 ;;		_fl_listdirectory
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           	psect	text13
  7936  004402                     __ptext13:
  7937                           	opt stack 0
  7938  004402                     _fl_readdir:
  7939                           	opt stack 21
  7940                           
  7941                           ;fat_filelib.c: 1546: int res = 0;
  7942                           
  7943                           ;incstack = 0
  7944  004402  0100               	movlb	0	; () banked
  7945  004404  6BBF               	clrf	(fl_readdir@res+1)& (0+255),b
  7946  004406  6BBE               	clrf	fl_readdir@res& (0+255),b
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;fat_filelib.c: 1549: { if (_filelib_init==0) fl_init(); };
  7950  004408  0101               	movlb	1	; () banked
  7951  00440A  5192               	movf	(__filelib_init+1)& (0+255),w,b
  7952  00440C  1191               	iorwf	__filelib_init& (0+255),w,b
  7953  00440E  B4D8               	btfsc	status,2,c
  7954                           
  7955                           ; BSR set to: 1
  7956  004410  EC44  F029         	call	_fl_init	;wreg free
  7957                           
  7958                           ;fat_filelib.c: 1553: res = fatfs_list_directory_next(&_fs, dirls, entry);
  7959                           
  7960                           ;fat_filelib.c: 1551: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
  7961  004414  0E09               	movlw	high __fs
  7962  004416  0100               	movlb	0	; () banked
  7963  004418  6FAD               	movwf	(fatfs_list_directory_next@fs+1)& (0+255),b
  7964  00441A  0E78               	movlw	low __fs
  7965  00441C  6FAC               	movwf	fatfs_list_directory_next@fs& (0+255),b
  7966  00441E  C0BB  F0AF         	movff	fl_readdir@dirls+1,fatfs_list_directory_next@dirls+1
  7967  004422  C0BA  F0AE         	movff	fl_readdir@dirls,fatfs_list_directory_next@dirls
  7968  004426  C0BD  F0B1         	movff	fl_readdir@entry+1,fatfs_list_directory_next@entry+1
  7969  00442A  C0BC  F0B0         	movff	fl_readdir@entry,fatfs_list_directory_next@entry
  7970  00442E  EC49  F058         	call	_fatfs_list_directory_next	;wreg free
  7971  004432  C0AC  F0BE         	movff	?_fatfs_list_directory_next,fl_readdir@res
  7972  004436  C0AD  F0BF         	movff	?_fatfs_list_directory_next+1,fl_readdir@res+1
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;fat_filelib.c: 1557: return res ? 0 : -1;
  7976                           
  7977                           ; BSR set to: 0
  7978                           
  7979                           ; BSR set to: 0
  7980                           
  7981                           ; BSR set to: 0
  7982                           
  7983                           ; BSR set to: 0
  7984                           
  7985                           ;fat_filelib.c: 1555: do { if ((&_fs)->fl_unlock) (&_fs)->fl_unlock(); } while (0);
  7986  00443A  0100               	movlb	0	; () banked
  7987  00443C  51BF               	movf	(fl_readdir@res+1)& (0+255),w,b
  7988  00443E  11BE               	iorwf	fl_readdir@res& (0+255),w,b
  7989  004440  E103               	bnz	l12025
  7990                           
  7991                           ; BSR set to: 0
  7992  004442  69BA               	setf	?_fl_readdir& (0+255),b
  7993  004444  69BB               	setf	(?_fl_readdir+1)& (0+255),b
  7994  004446  D004               	goto	l821
  7995  004448                     l12025:
  7996                           
  7997                           ; BSR set to: 0
  7998  004448  0E00               	movlw	0
  7999  00444A  0100               	movlb	0	; () banked
  8000  00444C  6FBB               	movwf	(?_fl_readdir+1)& (0+255),b
  8001  00444E  6FBA               	movwf	?_fl_readdir& (0+255),b
  8002  004450                     l821:
  8003                           
  8004                           ; BSR set to: 0
  8005  004450  0012               	return	
  8006  004452                     __end_of_fl_readdir:
  8007                           	opt stack 0
  8008                           tosu	equ	0xFFF
  8009                           tosh	equ	0xFFE
  8010                           tosl	equ	0xFFD
  8011                           pclath	equ	0xFFA
  8012                           tblptru	equ	0xFF8
  8013                           tblptrh	equ	0xFF7
  8014                           tblptrl	equ	0xFF6
  8015                           tablat	equ	0xFF5
  8016                           prodh	equ	0xFF4
  8017                           prodl	equ	0xFF3
  8018                           indf0	equ	0xFEF
  8019                           postinc0	equ	0xFEE
  8020                           fsr0h	equ	0xFEA
  8021                           fsr0l	equ	0xFE9
  8022                           wreg	equ	0xFE8
  8023                           indf1	equ	0xFE7
  8024                           postdec1	equ	0xFE5
  8025                           fsr1h	equ	0xFE2
  8026                           fsr1l	equ	0xFE1
  8027                           indf2	equ	0xFDF
  8028                           postinc2	equ	0xFDE
  8029                           postdec2	equ	0xFDD
  8030                           fsr2h	equ	0xFDA
  8031                           fsr2l	equ	0xFD9
  8032                           status	equ	0xFD8
  8033                           
  8034 ;; *************** function _fatfs_list_directory_next *****************
  8035 ;; Defined at:
  8036 ;;		line 767 in file "fat_access.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  fs              2   44[BANK0 ] PTR struct fatfs
  8039 ;;		 -> _fs(1095), 
  8040 ;;  dirls           2   46[BANK0 ] PTR struct fs_dir_list_s
  8041 ;;		 -> fl_listdirectory@dirstat(9), 
  8042 ;;  entry           2   48[BANK0 ] PTR struct fs_dir_ent
  8043 ;;		 -> fl_listdirectory@dirent(19), 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;  lfn            52   23[BANK1 ] struct lfn_cache
  8046 ;;  short_filena   13    0[BANK1 ] unsigned char [13]
  8047 ;;  directoryEnt    2   75[BANK1 ] PTR struct fat_dir_entry
  8048 ;;		 -> _fs.currentsector.sector(512), 
  8049 ;;  recordoffset    2   19[BANK1 ] unsigned short 
  8050 ;;  result          2   17[BANK1 ] int 
  8051 ;;  dotRequired     2   15[BANK1 ] int 
  8052 ;;  long_filenam    2   13[BANK1 ] PTR unsigned char 
  8053 ;;		 -> lfn.String(50), lfn.String(50), fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
  8054 ;;		 -> NULL(0), 
  8055 ;;  i               1   22[BANK1 ] unsigned char 
  8056 ;;  item            1   21[BANK1 ] unsigned char 
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  2   44[BANK0 ] int 
  8059 ;; Registers used:
  8060 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8066 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;      Locals:         0       0      77       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;      Totals:         0      14      77       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;Total ram usage:       91 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; Hardware stack levels required when called:    7
  8073 ;; This function calls:
  8074 ;;		_fatfs_entry_is_dir
  8075 ;;		_fatfs_entry_lfn_exists
  8076 ;;		_fatfs_entry_lfn_invalid
  8077 ;;		_fatfs_entry_lfn_text
  8078 ;;		_fatfs_entry_sfn_only
  8079 ;;		_fatfs_get_sfn_display_name
  8080 ;;		_fatfs_lfn_cache_entry
  8081 ;;		_fatfs_lfn_cache_get
  8082 ;;		_fatfs_lfn_cache_init
  8083 ;;		_fatfs_sector_reader
  8084 ;;		_memset
  8085 ;;		_strncpy
  8086 ;; This function is called by:
  8087 ;;		_fl_readdir
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text14
  8092  00B092                     __ptext14:
  8093                           	opt stack 0
  8094  00B092                     _fatfs_list_directory_next:
  8095                           	opt stack 21
  8096                           
  8097                           ;fat_access.c: 769: uint8 i,item;
  8098                           ;fat_access.c: 770: uint16 recordoffset;
  8099                           ;fat_access.c: 771: struct fat_dir_entry *directoryEntry;
  8100                           ;fat_access.c: 772: char *long_filename = (0);
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;incstack = 0
  8104  00B092  0101               	movlb	1	; () banked
  8105  00B094  6B0E               	clrf	(fatfs_list_directory_next@long_filename+1)& (0+255),b
  8106  00B096  6B0D               	clrf	fatfs_list_directory_next@long_filename& (0+255),b
  8107                           
  8108                           ; BSR set to: 1
  8109                           ;fat_access.c: 773: char short_filename[13];
  8110                           ;fat_access.c: 774: struct lfn_cache lfn;
  8111                           ;fat_access.c: 775: int dotRequired = 0;
  8112  00B098  6B10               	clrf	(fatfs_list_directory_next@dotRequired+1)& (0+255),b
  8113  00B09A  6B0F               	clrf	fatfs_list_directory_next@dotRequired& (0+255),b
  8114                           
  8115                           ; BSR set to: 1
  8116                           ;fat_access.c: 776: int result = 0;
  8117  00B09C  6B12               	clrf	(fatfs_list_directory_next@result+1)& (0+255),b
  8118  00B09E  6B11               	clrf	fatfs_list_directory_next@result& (0+255),b
  8119                           
  8120                           ; BSR set to: 1
  8121                           ;fat_access.c: 779: fatfs_lfn_cache_init(&lfn, 0);
  8122  00B0A0  0E01               	movlw	high fatfs_list_directory_next@lfn
  8123  00B0A2  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
  8124  00B0A4  0E17               	movlw	low fatfs_list_directory_next@lfn
  8125  00B0A6  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
  8126  00B0A8  0E00               	movlw	0
  8127  00B0AA  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
  8128  00B0AC  6A0B               	clrf	fatfs_lfn_cache_init@wipeTable,c
  8129  00B0AE  EC7F  F023         	call	_fatfs_lfn_cache_init	;wreg free
  8130  00B0B2                     l11089:
  8131                           
  8132                           ;fat_access.c: 782: {
  8133                           ;fat_access.c: 784: if (fatfs_sector_reader(fs, dirls->cluster, dirls->sector, 0))
  8134  00B0B2  C0AD  F081         	movff	fatfs_list_directory_next@fs+1,fatfs_sector_reader@fs+1
  8135  00B0B6  C0AC  F080         	movff	fatfs_list_directory_next@fs,fatfs_sector_reader@fs
  8136  00B0BA  EE20 F004          	lfsr	2,4
  8137  00B0BE  0100               	movlb	0	; () banked
  8138  00B0C0  51AE               	movf	fatfs_list_directory_next@dirls& (0+255),w,b
  8139  00B0C2  26D9               	addwf	fsr2l,f,c
  8140  00B0C4  51AF               	movf	(fatfs_list_directory_next@dirls+1)& (0+255),w,b
  8141  00B0C6  22DA               	addwfc	fsr2h,f,c
  8142  00B0C8  CFDE F082          	movff	postinc2,fatfs_sector_reader@start_cluster
  8143  00B0CC  CFDE F083          	movff	postinc2,fatfs_sector_reader@start_cluster+1
  8144  00B0D0  CFDE F084          	movff	postinc2,fatfs_sector_reader@start_cluster+2
  8145  00B0D4  CFDE F085          	movff	postinc2,fatfs_sector_reader@start_cluster+3
  8146  00B0D8  C0AE  FFD9         	movff	fatfs_list_directory_next@dirls,fsr2l
  8147  00B0DC  C0AF  FFDA         	movff	fatfs_list_directory_next@dirls+1,fsr2h
  8148  00B0E0  CFDE F086          	movff	postinc2,fatfs_sector_reader@offset
  8149  00B0E4  CFDE F087          	movff	postinc2,fatfs_sector_reader@offset+1
  8150  00B0E8  CFDE F088          	movff	postinc2,fatfs_sector_reader@offset+2
  8151  00B0EC  CFDE F089          	movff	postinc2,fatfs_sector_reader@offset+3
  8152  00B0F0  0E00               	movlw	0
  8153  00B0F2  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
  8154  00B0F4  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
  8155  00B0F6  ECD6  F052         	call	_fatfs_sector_reader	;wreg free
  8156  00B0FA  0100               	movlb	0	; () banked
  8157  00B0FC  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
  8158  00B0FE  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
  8159  00B100  E101 D19F          	bz	l241
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;fat_access.c: 785: {
  8163                           ;fat_access.c: 787: for (item = dirls->offset; item < (512 / 32); item++)
  8164  00B104  EE20 F008          	lfsr	2,8
  8165  00B108  51AE               	movf	fatfs_list_directory_next@dirls& (0+255),w,b
  8166  00B10A  26D9               	addwf	fsr2l,f,c
  8167  00B10C  51AF               	movf	(fatfs_list_directory_next@dirls+1)& (0+255),w,b
  8168  00B10E  22DA               	addwfc	fsr2h,f,c
  8169  00B110  50DF               	movf	indf2,w,c
  8170  00B112  0101               	movlb	1	; () banked
  8171  00B114  6F15               	movwf	fatfs_list_directory_next@item& (0+255),b
  8172  00B116  D17F               	goto	L19
  8173  00B118                     l11097:
  8174                           
  8175                           ; BSR set to: 1
  8176                           ;fat_access.c: 788: {
  8177                           ;fat_access.c: 790: recordoffset = 32 * item;
  8178  00B118  0101               	movlb	1	; () banked
  8179  00B11A  5115               	movf	fatfs_list_directory_next@item& (0+255),w,b
  8180  00B11C  0D20               	mullw	32
  8181  00B11E  CFF3 F113          	movff	prodl,fatfs_list_directory_next@recordoffset
  8182  00B122  CFF4 F114          	movff	prodh,fatfs_list_directory_next@recordoffset+1
  8183                           
  8184                           ; BSR set to: 1
  8185                           ;fat_access.c: 793: directoryEntry = (struct fat_dir_entry*)(fs->currentsector.sector+re
      +                          cordoffset);
  8186  00B126  C0AC  F0B2         	movff	fatfs_list_directory_next@fs,??_fatfs_list_directory_next
  8187  00B12A  C0AD  F0B3         	movff	fatfs_list_directory_next@fs+1,??_fatfs_list_directory_next+1
  8188  00B12E  5113               	movf	fatfs_list_directory_next@recordoffset& (0+255),w,b
  8189  00B130  0100               	movlb	0	; () banked
  8190  00B132  27B2               	addwf	??_fatfs_list_directory_next& (0+255),f,b
  8191  00B134  0101               	movlb	1	; () banked
  8192  00B136  5114               	movf	(fatfs_list_directory_next@recordoffset+1)& (0+255),w,b
  8193  00B138  0100               	movlb	0	; () banked
  8194  00B13A  23B3               	addwfc	(??_fatfs_list_directory_next+1)& (0+255),f,b
  8195  00B13C  0E31               	movlw	49
  8196  00B13E  25B2               	addwf	??_fatfs_list_directory_next& (0+255),w,b
  8197  00B140  0101               	movlb	1	; () banked
  8198  00B142  6F4B               	movwf	fatfs_list_directory_next@directoryEntry& (0+255),b
  8199  00B144  0E00               	movlw	0
  8200  00B146  0100               	movlb	0	; () banked
  8201  00B148  21B3               	addwfc	(??_fatfs_list_directory_next+1)& (0+255),w,b
  8202  00B14A  0101               	movlb	1	; () banked
  8203  00B14C  6F4C               	movwf	(fatfs_list_directory_next@directoryEntry+1)& (0+255),b
  8204                           
  8205                           ; BSR set to: 1
  8206                           ;fat_access.c: 797: if ( fatfs_entry_lfn_text(directoryEntry) )
  8207  00B14E  C14C  F002         	movff	fatfs_list_directory_next@directoryEntry+1,fatfs_entry_lfn_text@entry+1
  8208  00B152  C14B  F001         	movff	fatfs_list_directory_next@directoryEntry,fatfs_entry_lfn_text@entry
  8209  00B156  ECFA  F01F         	call	_fatfs_entry_lfn_text	;wreg free
  8210  00B15A  5002               	movf	?_fatfs_entry_lfn_text+1,w,c
  8211  00B15C  1001               	iorwf	?_fatfs_entry_lfn_text,w,c
  8212  00B15E  E019               	bz	l11105
  8213                           
  8214                           ;fat_access.c: 798: fatfs_lfn_cache_entry(&lfn, fs->currentsector.sector+recordoffset);
  8215  00B160  0E01               	movlw	high fatfs_list_directory_next@lfn
  8216  00B162  6E02               	movwf	fatfs_lfn_cache_entry@lfn+1,c
  8217  00B164  0E17               	movlw	low fatfs_list_directory_next@lfn
  8218  00B166  6E01               	movwf	fatfs_lfn_cache_entry@lfn,c
  8219  00B168  C0AC  F0B2         	movff	fatfs_list_directory_next@fs,??_fatfs_list_directory_next
  8220  00B16C  C0AD  F0B3         	movff	fatfs_list_directory_next@fs+1,??_fatfs_list_directory_next+1
  8221  00B170  0101               	movlb	1	; () banked
  8222  00B172  5113               	movf	fatfs_list_directory_next@recordoffset& (0+255),w,b
  8223  00B174  0100               	movlb	0	; () banked
  8224  00B176  27B2               	addwf	??_fatfs_list_directory_next& (0+255),f,b
  8225  00B178  0101               	movlb	1	; () banked
  8226  00B17A  5114               	movf	(fatfs_list_directory_next@recordoffset+1)& (0+255),w,b
  8227  00B17C  0100               	movlb	0	; () banked
  8228  00B17E  23B3               	addwfc	(??_fatfs_list_directory_next+1)& (0+255),f,b
  8229  00B180  0E31               	movlw	49
  8230  00B182  25B2               	addwf	??_fatfs_list_directory_next& (0+255),w,b
  8231  00B184  6E03               	movwf	fatfs_lfn_cache_entry@entryBuffer,c
  8232  00B186  0E00               	movlw	0
  8233  00B188  21B3               	addwfc	(??_fatfs_list_directory_next+1)& (0+255),w,b
  8234  00B18A  6E04               	movwf	fatfs_lfn_cache_entry@entryBuffer+1,c
  8235  00B18C  EC9D  F067         	call	_fatfs_lfn_cache_entry	;wreg free
  8236  00B190  D140               	goto	l11199
  8237  00B192                     l11105:
  8238                           
  8239                           ;fat_access.c: 801: else if ( fatfs_entry_lfn_invalid(directoryEntry) )
  8240  00B192  C14C  F002         	movff	fatfs_list_directory_next@directoryEntry+1,fatfs_entry_lfn_invalid@entry+1
  8241  00B196  0101               	movlb	1	; () banked
  8242  00B198  C14B  F001         	movff	fatfs_list_directory_next@directoryEntry,fatfs_entry_lfn_invalid@entry
  8243  00B19C  ECA4  F022         	call	_fatfs_entry_lfn_invalid	;wreg free
  8244  00B1A0  5002               	movf	?_fatfs_entry_lfn_invalid+1,w,c
  8245  00B1A2  1001               	iorwf	?_fatfs_entry_lfn_invalid,w,c
  8246  00B1A4  E00B               	bz	l11109
  8247                           
  8248                           ;fat_access.c: 802: fatfs_lfn_cache_init(&lfn, 0);
  8249  00B1A6  0E01               	movlw	high fatfs_list_directory_next@lfn
  8250  00B1A8  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
  8251  00B1AA  0101               	movlb	1	; () banked
  8252  00B1AC  0E17               	movlw	low fatfs_list_directory_next@lfn
  8253  00B1AE  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
  8254  00B1B0  0E00               	movlw	0
  8255  00B1B2  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
  8256  00B1B4  6A0B               	clrf	fatfs_lfn_cache_init@wipeTable,c
  8257  00B1B6  EC7F  F023         	call	_fatfs_lfn_cache_init	;wreg free
  8258  00B1BA  D12B               	goto	l11199
  8259  00B1BC                     l11109:
  8260                           
  8261                           ;fat_access.c: 805: else if (fatfs_entry_lfn_exists(&lfn, directoryEntry) )
  8262  00B1BC  0E01               	movlw	high fatfs_list_directory_next@lfn
  8263  00B1BE  6E02               	movwf	fatfs_entry_lfn_exists@lfn+1,c
  8264  00B1C0  0E17               	movlw	low fatfs_list_directory_next@lfn
  8265  00B1C2  6E01               	movwf	fatfs_entry_lfn_exists@lfn,c
  8266  00B1C4  C14C  F004         	movff	fatfs_list_directory_next@directoryEntry+1,fatfs_entry_lfn_exists@entry+1
  8267  00B1C8  0101               	movlb	1	; () banked
  8268  00B1CA  C14B  F003         	movff	fatfs_list_directory_next@directoryEntry,fatfs_entry_lfn_exists@entry
  8269  00B1CE  EC4B  F026         	call	_fatfs_entry_lfn_exists	;wreg free
  8270  00B1D2  5002               	movf	?_fatfs_entry_lfn_exists+1,w,c
  8271  00B1D4  1001               	iorwf	?_fatfs_entry_lfn_exists,w,c
  8272  00B1D6  E02D               	bz	l11135
  8273                           
  8274                           ;fat_access.c: 806: {
  8275                           ;fat_access.c: 808: long_filename = fatfs_lfn_cache_get(&lfn);
  8276  00B1D8  0E01               	movlw	high fatfs_list_directory_next@lfn
  8277  00B1DA  6E02               	movwf	fatfs_lfn_cache_get@lfn+1,c
  8278  00B1DC  0101               	movlb	1	; () banked
  8279  00B1DE  0E17               	movlw	low fatfs_list_directory_next@lfn
  8280  00B1E0  6E01               	movwf	fatfs_lfn_cache_get@lfn,c
  8281  00B1E2  EC02  F025         	call	_fatfs_lfn_cache_get	;wreg free
  8282  00B1E6  C001  F10D         	movff	?_fatfs_lfn_cache_get,fatfs_list_directory_next@long_filename
  8283  00B1EA  C002  F10E         	movff	?_fatfs_lfn_cache_get+1,fatfs_list_directory_next@long_filename+1
  8284                           
  8285                           ;fat_access.c: 809: strncpy(entry->filename, long_filename, 10-1);
  8286  00B1EE  C0B1  F002         	movff	fatfs_list_directory_next@entry+1,strncpy@to+1
  8287  00B1F2  C0B0  F001         	movff	fatfs_list_directory_next@entry,strncpy@to
  8288  00B1F6  C10E  F004         	movff	fatfs_list_directory_next@long_filename+1,strncpy@from+1
  8289  00B1FA  0101               	movlb	1	; () banked
  8290  00B1FC  C10D  F003         	movff	fatfs_list_directory_next@long_filename,strncpy@from
  8291  00B200  6A06               	clrf	strncpy@size+1,c
  8292  00B202  0E09               	movlw	9
  8293  00B204  6E05               	movwf	strncpy@size,c
  8294  00B206  ECF7  F022         	call	_strncpy	;wreg free
  8295                           
  8296                           ;fat_access.c: 811: if (fatfs_entry_is_dir(directoryEntry))
  8297  00B20A  C14C  F002         	movff	fatfs_list_directory_next@directoryEntry+1,fatfs_entry_is_dir@entry+1
  8298  00B20E  0101               	movlb	1	; () banked
  8299  00B210  C14B  F001         	movff	fatfs_list_directory_next@directoryEntry,fatfs_entry_is_dir@entry
  8300  00B214  ECB0  F01F         	call	_fatfs_entry_is_dir	;wreg free
  8301  00B218  5002               	movf	?_fatfs_entry_is_dir+1,w,c
  8302  00B21A  1001               	iorwf	?_fatfs_entry_is_dir,w,c
  8303  00B21C  E101 D097          	bz	l11185
  8304  00B220                     
  8305                           ;fat_access.c: 812: entry->is_dir = 1;
  8306  00B220  EE20 F00A          	lfsr	2,10
  8307  00B224  0100               	movlb	0	; () banked
  8308  00B226  51B0               	movf	fatfs_list_directory_next@entry& (0+255),w,b
  8309  00B228  26D9               	addwf	fsr2l,f,c
  8310  00B22A  51B1               	movf	(fatfs_list_directory_next@entry+1)& (0+255),w,b
  8311  00B22C  22DA               	addwfc	fsr2h,f,c
  8312  00B22E  0E01               	movlw	1
  8313  00B230  D096               	goto	L17
  8314  00B232                     l11135:
  8315                           
  8316                           ;fat_access.c: 834: else
  8317                           ;fat_access.c: 836: if ( fatfs_entry_sfn_only(directoryEntry) )
  8318  00B232  C14C  F002         	movff	fatfs_list_directory_next@directoryEntry+1,fatfs_entry_sfn_only@entry+1
  8319  00B236  0101               	movlb	1	; () banked
  8320  00B238  C14B  F001         	movff	fatfs_list_directory_next@directoryEntry,fatfs_entry_sfn_only@entry
  8321  00B23C  ECD0  F024         	call	_fatfs_entry_sfn_only	;wreg free
  8322  00B240  5002               	movf	?_fatfs_entry_sfn_only+1,w,c
  8323  00B242  1001               	iorwf	?_fatfs_entry_sfn_only,w,c
  8324  00B244  E101 D0E5          	bz	l11199
  8325                           
  8326                           ;fat_access.c: 837: {
  8327                           ;fat_access.c: 838: fatfs_lfn_cache_init(&lfn, 0);
  8328  00B248  0E01               	movlw	high fatfs_list_directory_next@lfn
  8329  00B24A  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
  8330  00B24C  0101               	movlb	1	; () banked
  8331  00B24E  0E17               	movlw	low fatfs_list_directory_next@lfn
  8332  00B250  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
  8333  00B252  0E00               	movlw	0
  8334  00B254  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
  8335  00B256  6A0B               	clrf	fatfs_lfn_cache_init@wipeTable,c
  8336  00B258  EC7F  F023         	call	_fatfs_lfn_cache_init	;wreg free
  8337                           
  8338                           ;fat_access.c: 840: memset(short_filename, 0, sizeof(short_filename));
  8339  00B25C  0E01               	movlw	high fatfs_list_directory_next@short_filename
  8340  00B25E  6E02               	movwf	memset@p1+1,c
  8341  00B260  0101               	movlb	1	; () banked
  8342  00B262  0E00               	movlw	low fatfs_list_directory_next@short_filename
  8343  00B264  6E01               	movwf	memset@p1,c
  8344  00B266  6A04               	clrf	memset@c+1,c
  8345  00B268  6A03               	clrf	memset@c,c
  8346  00B26A  6A06               	clrf	memset@n+1,c
  8347  00B26C  0E0D               	movlw	13
  8348  00B26E  6E05               	movwf	memset@n,c
  8349  00B270  EC24  F020         	call	_memset	;wreg free
  8350                           
  8351                           ;fat_access.c: 843: for (i=0; i<8; i++)
  8352  00B274  0101               	movlb	1	; () banked
  8353  00B276  6B16               	clrf	fatfs_list_directory_next@i& (0+255),b
  8354  00B278  D014               	goto	L20
  8355  00B27A                     l11147:
  8356                           
  8357                           ; BSR set to: 1
  8358                           ;fat_access.c: 844: short_filename[i] = directoryEntry->Name[i];
  8359  00B27A  0101               	movlb	1	; () banked
  8360  00B27C  5116               	movf	fatfs_list_directory_next@i& (0+255),w,b
  8361  00B27E  0D01               	mullw	1
  8362  00B280  50F3               	movf	prodl,w,c
  8363  00B282  254B               	addwf	fatfs_list_directory_next@directoryEntry& (0+255),w,b
  8364  00B284  6ED9               	movwf	fsr2l,c
  8365  00B286  50F4               	movf	prodh,w,c
  8366  00B288  214C               	addwfc	(fatfs_list_directory_next@directoryEntry+1)& (0+255),w,b
  8367  00B28A  6EDA               	movwf	fsr2h,c
  8368  00B28C  5116               	movf	fatfs_list_directory_next@i& (0+255),w,b
  8369  00B28E  0D01               	mullw	1
  8370  00B290  0E00               	movlw	low fatfs_list_directory_next@short_filename
  8371  00B292  24F3               	addwf	prodl,w,c
  8372  00B294  6EE1               	movwf	fsr1l,c
  8373  00B296  0E01               	movlw	high fatfs_list_directory_next@short_filename
  8374  00B298  20F4               	addwfc	prodh,w,c
  8375  00B29A  6EE2               	movwf	fsr1h,c
  8376  00B29C  CFDF FFE7          	movff	indf2,indf1
  8377                           
  8378                           ; BSR set to: 1
  8379  00B2A0  2B16               	incf	fatfs_list_directory_next@i& (0+255),f,b
  8380  00B2A2                     L20:
  8381                           
  8382                           ; BSR set to: 1
  8383  00B2A2  0E07               	movlw	7
  8384  00B2A4  0101               	movlb	1	; () banked
  8385  00B2A6  6516               	cpfsgt	fatfs_list_directory_next@i& (0+255),b
  8386  00B2A8  D7E8               	goto	l11147
  8387                           
  8388                           ; BSR set to: 1
  8389                           ;fat_access.c: 847: dotRequired = 0;
  8390                           
  8391                           ; BSR set to: 1
  8392  00B2AA  6B10               	clrf	(fatfs_list_directory_next@dotRequired+1)& (0+255),b
  8393  00B2AC  6B0F               	clrf	fatfs_list_directory_next@dotRequired& (0+255),b
  8394                           
  8395                           ;fat_access.c: 848: for (i=8; i<11; i++)
  8396  00B2AE  0E08               	movlw	8
  8397  00B2B0  6F16               	movwf	fatfs_list_directory_next@i& (0+255),b
  8398  00B2B2  D029               	goto	L21
  8399  00B2B4                     l11159:
  8400                           
  8401                           ; BSR set to: 1
  8402                           ;fat_access.c: 849: {
  8403                           ;fat_access.c: 850: short_filename[i+1] = directoryEntry->Name[i];
  8404  00B2B4  0101               	movlb	1	; () banked
  8405  00B2B6  5116               	movf	fatfs_list_directory_next@i& (0+255),w,b
  8406  00B2B8  0D01               	mullw	1
  8407  00B2BA  50F3               	movf	prodl,w,c
  8408  00B2BC  254B               	addwf	fatfs_list_directory_next@directoryEntry& (0+255),w,b
  8409  00B2BE  6ED9               	movwf	fsr2l,c
  8410  00B2C0  50F4               	movf	prodh,w,c
  8411  00B2C2  214C               	addwfc	(fatfs_list_directory_next@directoryEntry+1)& (0+255),w,b
  8412  00B2C4  6EDA               	movwf	fsr2h,c
  8413  00B2C6  5116               	movf	fatfs_list_directory_next@i& (0+255),w,b
  8414  00B2C8  0100               	movlb	0	; () banked
  8415  00B2CA  6FB2               	movwf	??_fatfs_list_directory_next& (0+255),b
  8416  00B2CC  6BB3               	clrf	(??_fatfs_list_directory_next+1)& (0+255),b
  8417  00B2CE  2BB2               	incf	??_fatfs_list_directory_next& (0+255),f,b
  8418  00B2D0  0E00               	movlw	0
  8419  00B2D2  23B3               	addwfc	(??_fatfs_list_directory_next+1)& (0+255),f,b
  8420  00B2D4  0E00               	movlw	low fatfs_list_directory_next@short_filename
  8421  00B2D6  25B2               	addwf	??_fatfs_list_directory_next& (0+255),w,b
  8422  00B2D8  6EE1               	movwf	fsr1l,c
  8423  00B2DA  0E01               	movlw	high fatfs_list_directory_next@short_filename
  8424  00B2DC  21B3               	addwfc	(??_fatfs_list_directory_next+1)& (0+255),w,b
  8425  00B2DE  6EE2               	movwf	fsr1h,c
  8426  00B2E0  CFDF FFE7          	movff	indf2,indf1
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;fat_access.c: 851: if (directoryEntry->Name[i] != ' ')
  8430  00B2E4  0101               	movlb	1	; () banked
  8431  00B2E6  5116               	movf	fatfs_list_directory_next@i& (0+255),w,b
  8432  00B2E8  0D01               	mullw	1
  8433  00B2EA  50F3               	movf	prodl,w,c
  8434  00B2EC  254B               	addwf	fatfs_list_directory_next@directoryEntry& (0+255),w,b
  8435  00B2EE  6ED9               	movwf	fsr2l,c
  8436  00B2F0  50F4               	movf	prodh,w,c
  8437  00B2F2  214C               	addwfc	(fatfs_list_directory_next@directoryEntry+1)& (0+255),w,b
  8438  00B2F4  6EDA               	movwf	fsr2h,c
  8439  00B2F6  50DF               	movf	indf2,w,c
  8440  00B2F8  0A20               	xorlw	32
  8441  00B2FA  E003               	bz	l11165
  8442                           
  8443                           ; BSR set to: 1
  8444                           ;fat_access.c: 852: dotRequired = 1;
  8445  00B2FC  6B10               	clrf	(fatfs_list_directory_next@dotRequired+1)& (0+255),b
  8446  00B2FE  0E01               	movlw	1
  8447  00B300  6F0F               	movwf	fatfs_list_directory_next@dotRequired& (0+255),b
  8448  00B302                     l11165:
  8449                           
  8450                           ; BSR set to: 1
  8451  00B302  0101               	movlb	1	; () banked
  8452  00B304  2B16               	incf	fatfs_list_directory_next@i& (0+255),f,b
  8453  00B306                     L21:
  8454                           
  8455                           ; BSR set to: 1
  8456  00B306  0E0A               	movlw	10
  8457  00B308  0101               	movlb	1	; () banked
  8458  00B30A  6516               	cpfsgt	fatfs_list_directory_next@i& (0+255),b
  8459  00B30C  D7D3               	goto	l11159
  8460                           
  8461                           ; BSR set to: 1
  8462                           ;fat_access.c: 853: }
  8463                           ;fat_access.c: 856: if (dotRequired)
  8464                           
  8465                           ; BSR set to: 1
  8466  00B30E  5110               	movf	(fatfs_list_directory_next@dotRequired+1)& (0+255),w,b
  8467  00B310  110F               	iorwf	fatfs_list_directory_next@dotRequired& (0+255),w,b
  8468  00B312  E005               	bz	l11177
  8469                           
  8470                           ; BSR set to: 1
  8471                           ;fat_access.c: 857: {
  8472                           ;fat_access.c: 859: if (short_filename[0]!='.')
  8473  00B314  5100               	movf	fatfs_list_directory_next@short_filename& (0+255),w,b
  8474  00B316  0A2E               	xorlw	46
  8475  00B318  E002               	bz	l11177
  8476                           
  8477                           ; BSR set to: 1
  8478                           ;fat_access.c: 860: short_filename[8] = '.';
  8479  00B31A  0E2E               	movlw	46
  8480  00B31C  D001               	goto	L18
  8481  00B31E                     l11177:
  8482                           
  8483                           ; BSR set to: 1
  8484                           ;fat_access.c: 864: else
  8485                           ;fat_access.c: 865: short_filename[8] = ' ';
  8486  00B31E  0E20               	movlw	32
  8487  00B320                     L18:
  8488  00B320  0101               	movlb	1	; () banked
  8489  00B322  6F08               	movwf	(fatfs_list_directory_next@short_filename+8)& (0+255),b
  8490                           
  8491                           ; BSR set to: 1
  8492                           ;fat_access.c: 867: fatfs_get_sfn_display_name(entry->filename, short_filename);
  8493                           
  8494                           ; BSR set to: 1
  8495  00B324  C0B1  F002         	movff	fatfs_list_directory_next@entry+1,fatfs_get_sfn_display_name@out+1
  8496  00B328  C0B0  F001         	movff	fatfs_list_directory_next@entry,fatfs_get_sfn_display_name@out
  8497  00B32C  0E01               	movlw	high fatfs_list_directory_next@short_filename
  8498  00B32E  6E04               	movwf	fatfs_get_sfn_display_name@in+1,c
  8499  00B330  0E00               	movlw	low fatfs_list_directory_next@short_filename
  8500  00B332  6E03               	movwf	fatfs_get_sfn_display_name@in,c
  8501  00B334  EC36  F025         	call	_fatfs_get_sfn_display_name	;wreg free
  8502                           
  8503                           ;fat_access.c: 869: if (fatfs_entry_is_dir(directoryEntry))
  8504  00B338  C14C  F002         	movff	fatfs_list_directory_next@directoryEntry+1,fatfs_entry_is_dir@entry+1
  8505  00B33C  0101               	movlb	1	; () banked
  8506  00B33E  C14B  F001         	movff	fatfs_list_directory_next@directoryEntry,fatfs_entry_is_dir@entry
  8507  00B342  ECB0  F01F         	call	_fatfs_entry_is_dir	;wreg free
  8508  00B346  5002               	movf	?_fatfs_entry_is_dir+1,w,c
  8509  00B348  1001               	iorwf	?_fatfs_entry_is_dir,w,c
  8510  00B34A  E001 D769          	bnz	L22
  8511  00B34E                     l11185:
  8512                           
  8513                           ;fat_access.c: 871: else
  8514                           ;fat_access.c: 872: entry->is_dir = 0;
  8515  00B34E  EE20 F00A          	lfsr	2,10
  8516  00B352  0100               	movlb	0	; () banked
  8517  00B354  51B0               	movf	fatfs_list_directory_next@entry& (0+255),w,b
  8518  00B356  26D9               	addwf	fsr2l,f,c
  8519  00B358  51B1               	movf	(fatfs_list_directory_next@entry+1)& (0+255),w,b
  8520  00B35A  22DA               	addwfc	fsr2h,f,c
  8521  00B35C  0E00               	movlw	0
  8522  00B35E                     L17:
  8523  00B35E  6EDF               	movwf	indf2,c
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;fat_access.c: 883: entry->size = (directoryEntry->FileSize);
  8527                           
  8528                           ; BSR set to: 0
  8529  00B360  EE20 F01C          	lfsr	2,28
  8530  00B364  0101               	movlb	1	; () banked
  8531  00B366  514B               	movf	fatfs_list_directory_next@directoryEntry& (0+255),w,b
  8532  00B368  26D9               	addwf	fsr2l,f,c
  8533  00B36A  514C               	movf	(fatfs_list_directory_next@directoryEntry+1)& (0+255),w,b
  8534  00B36C  22DA               	addwfc	fsr2h,f,c
  8535  00B36E  EE10 F00F          	lfsr	1,15
  8536  00B372  0100               	movlb	0	; () banked
  8537  00B374  51B0               	movf	fatfs_list_directory_next@entry& (0+255),w,b
  8538  00B376  26E1               	addwf	fsr1l,f,c
  8539  00B378  51B1               	movf	(fatfs_list_directory_next@entry+1)& (0+255),w,b
  8540  00B37A  22E2               	addwfc	fsr1h,f,c
  8541  00B37C  CFDE FFE6          	movff	postinc2,postinc1
  8542  00B380  CFDE FFE6          	movff	postinc2,postinc1
  8543  00B384  CFDE FFE6          	movff	postinc2,postinc1
  8544  00B388  CFDD FFE5          	movff	postdec2,postdec1
  8545  00B38C  52E5               	movf	postdec1,f,c
  8546  00B38E  52E5               	movf	postdec1,f,c
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;fat_access.c: 884: entry->cluster = ((directoryEntry->FstClusHI)<<16) | (directoryEntry
      +                          ->FstClusLO);
  8550  00B390  EE20 F01A          	lfsr	2,26
  8551  00B394  0101               	movlb	1	; () banked
  8552  00B396  514B               	movf	fatfs_list_directory_next@directoryEntry& (0+255),w,b
  8553  00B398  26D9               	addwf	fsr2l,f,c
  8554  00B39A  514C               	movf	(fatfs_list_directory_next@directoryEntry+1)& (0+255),w,b
  8555  00B39C  22DA               	addwfc	fsr2h,f,c
  8556  00B39E  CFDE F0B2          	movff	postinc2,??_fatfs_list_directory_next
  8557  00B3A2  CFDD F0B3          	movff	postdec2,??_fatfs_list_directory_next+1
  8558  00B3A6  EE20 F014          	lfsr	2,20
  8559  00B3AA  514B               	movf	fatfs_list_directory_next@directoryEntry& (0+255),w,b
  8560  00B3AC  26D9               	addwf	fsr2l,f,c
  8561  00B3AE  514C               	movf	(fatfs_list_directory_next@directoryEntry+1)& (0+255),w,b
  8562  00B3B0  22DA               	addwfc	fsr2h,f,c
  8563  00B3B2  CFDE F0B4          	movff	postinc2,??_fatfs_list_directory_next+2
  8564  00B3B6  CFDD F0B5          	movff	postdec2,??_fatfs_list_directory_next+3
  8565  00B3BA  0100               	movlb	0	; () banked
  8566  00B3BC  51B2               	movf	??_fatfs_list_directory_next& (0+255),w,b
  8567  00B3BE  11B4               	iorwf	(??_fatfs_list_directory_next+2)& (0+255),w,b
  8568  00B3C0  6FB6               	movwf	(??_fatfs_list_directory_next+4)& (0+255),b
  8569  00B3C2  51B3               	movf	(??_fatfs_list_directory_next+1)& (0+255),w,b
  8570  00B3C4  11B5               	iorwf	(??_fatfs_list_directory_next+3)& (0+255),w,b
  8571  00B3C6  6FB7               	movwf	(??_fatfs_list_directory_next+5)& (0+255),b
  8572  00B3C8  6BB8               	clrf	(??_fatfs_list_directory_next+6)& (0+255),b
  8573  00B3CA  6BB9               	clrf	(??_fatfs_list_directory_next+7)& (0+255),b
  8574  00B3CC  EE20 F00B          	lfsr	2,11
  8575  00B3D0  51B0               	movf	fatfs_list_directory_next@entry& (0+255),w,b
  8576  00B3D2  26D9               	addwf	fsr2l,f,c
  8577  00B3D4  51B1               	movf	(fatfs_list_directory_next@entry+1)& (0+255),w,b
  8578  00B3D6  22DA               	addwfc	fsr2h,f,c
  8579  00B3D8  C0B6  FFDE         	movff	??_fatfs_list_directory_next+4,postinc2
  8580  00B3DC  C0B7  FFDE         	movff	??_fatfs_list_directory_next+5,postinc2
  8581  00B3E0  C0B8  FFDE         	movff	??_fatfs_list_directory_next+6,postinc2
  8582  00B3E4  C0B9  FFDD         	movff	??_fatfs_list_directory_next+7,postdec2
  8583  00B3E8  06D9               	decf	fsr2l,f,c
  8584  00B3EA  06D9               	decf	fsr2l,f,c
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;fat_access.c: 887: dirls->offset = item + 1;
  8588  00B3EC  EE20 F008          	lfsr	2,8
  8589  00B3F0  51AE               	movf	fatfs_list_directory_next@dirls& (0+255),w,b
  8590  00B3F2  26D9               	addwf	fsr2l,f,c
  8591  00B3F4  51AF               	movf	(fatfs_list_directory_next@dirls+1)& (0+255),w,b
  8592  00B3F6  22DA               	addwfc	fsr2h,f,c
  8593  00B3F8  0101               	movlb	1	; () banked
  8594  00B3FA  2915               	incf	fatfs_list_directory_next@item& (0+255),w,b
  8595  00B3FC  6EDF               	movwf	indf2,c
  8596                           
  8597                           ; BSR set to: 1
  8598                           ;fat_access.c: 888: result = 1;
  8599  00B3FE  0E00               	movlw	0
  8600  00B400  6F12               	movwf	(fatfs_list_directory_next@result+1)& (0+255),b
  8601  00B402  0E01               	movlw	1
  8602  00B404  6F11               	movwf	fatfs_list_directory_next@result& (0+255),b
  8603                           
  8604                           ; BSR set to: 1
  8605                           ;fat_access.c: 889: return 1;
  8606  00B406  0E00               	movlw	0
  8607  00B408  0100               	movlb	0	; () banked
  8608  00B40A  6FAD               	movwf	(?_fatfs_list_directory_next+1)& (0+255),b
  8609  00B40C  0E01               	movlw	1
  8610  00B40E  6FAC               	movwf	?_fatfs_list_directory_next& (0+255),b
  8611  00B410  D01C               	goto	l226
  8612  00B412                     l11199:
  8613  00B412  0101               	movlb	1	; () banked
  8614  00B414  2B15               	incf	fatfs_list_directory_next@item& (0+255),f,b
  8615  00B416                     L19:
  8616                           
  8617                           ; BSR set to: 1
  8618  00B416  0E0F               	movlw	15
  8619  00B418  0101               	movlb	1	; () banked
  8620  00B41A  6515               	cpfsgt	fatfs_list_directory_next@item& (0+255),b
  8621  00B41C  D67D               	goto	l11097
  8622                           
  8623                           ; BSR set to: 1
  8624                           ;fat_access.c: 890: }
  8625                           ;fat_access.c: 891: }
  8626                           ;fat_access.c: 894: dirls->sector++;
  8627                           
  8628                           ; BSR set to: 1
  8629  00B41E  C0AE  FFD9         	movff	fatfs_list_directory_next@dirls,fsr2l
  8630  00B422  C0AF  FFDA         	movff	fatfs_list_directory_next@dirls+1,fsr2h
  8631  00B426  2ADE               	incf	postinc2,f,c
  8632  00B428  0E00               	movlw	0
  8633  00B42A  22DE               	addwfc	postinc2,f,c
  8634  00B42C  22DE               	addwfc	postinc2,f,c
  8635  00B42E  22DD               	addwfc	postdec2,f,c
  8636                           
  8637                           ;fat_access.c: 895: dirls->offset = 0;
  8638  00B430  EE20 F008          	lfsr	2,8
  8639  00B434  0100               	movlb	0	; () banked
  8640  00B436  51AE               	movf	fatfs_list_directory_next@dirls& (0+255),w,b
  8641  00B438  26D9               	addwf	fsr2l,f,c
  8642  00B43A  51AF               	movf	(fatfs_list_directory_next@dirls+1)& (0+255),w,b
  8643  00B43C  22DA               	addwfc	fsr2h,f,c
  8644  00B43E  6ADF               	clrf	indf2,c
  8645                           
  8646                           ;fat_access.c: 896: }
  8647  00B440  D638               	goto	l11089
  8648  00B442                     l241:
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;fat_access.c: 899: }
  8652                           ;fat_access.c: 901: return result;
  8653  00B442  C111  F0AC         	movff	fatfs_list_directory_next@result,?_fatfs_list_directory_next
  8654  00B446  C112  F0AD         	movff	fatfs_list_directory_next@result+1,?_fatfs_list_directory_next+1
  8655  00B44A                     l226:
  8656                           
  8657                           ; BSR set to: 0
  8658  00B44A  0012               	return	
  8659  00B44C                     __end_of_fatfs_list_directory_next:
  8660                           	opt stack 0
  8661                           tosu	equ	0xFFF
  8662                           tosh	equ	0xFFE
  8663                           tosl	equ	0xFFD
  8664                           pclath	equ	0xFFA
  8665                           tblptru	equ	0xFF8
  8666                           tblptrh	equ	0xFF7
  8667                           tblptrl	equ	0xFF6
  8668                           tablat	equ	0xFF5
  8669                           prodh	equ	0xFF4
  8670                           prodl	equ	0xFF3
  8671                           indf0	equ	0xFEF
  8672                           postinc0	equ	0xFEE
  8673                           fsr0h	equ	0xFEA
  8674                           fsr0l	equ	0xFE9
  8675                           wreg	equ	0xFE8
  8676                           indf1	equ	0xFE7
  8677                           postinc1	equ	0xFE6
  8678                           postdec1	equ	0xFE5
  8679                           fsr1h	equ	0xFE2
  8680                           fsr1l	equ	0xFE1
  8681                           indf2	equ	0xFDF
  8682                           postinc2	equ	0xFDE
  8683                           postdec2	equ	0xFDD
  8684                           fsr2h	equ	0xFDA
  8685                           fsr2l	equ	0xFD9
  8686                           status	equ	0xFD8
  8687                           
  8688 ;; *************** function _strncpy *****************
  8689 ;; Defined at:
  8690 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strncpy.c"
  8691 ;; Parameters:    Size  Location     Type
  8692 ;;  to              2    0[COMRAM] PTR unsigned char 
  8693 ;;		 -> fl_listdirectory@dirent(19), 
  8694 ;;  from            2    2[COMRAM] PTR const unsigned char 
  8695 ;;		 -> lfn.String(50), lfn.String(50), fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
  8696 ;;		 -> NULL(0), 
  8697 ;;  size            2    4[COMRAM] unsigned int 
  8698 ;; Auto vars:     Size  Location     Type
  8699 ;;  cp              2    6[COMRAM] PTR unsigned char 
  8700 ;;		 -> fl_listdirectory@dirent(19), 
  8701 ;; Return value:  Size  Location     Type
  8702 ;;                  2    0[COMRAM] PTR unsigned char 
  8703 ;; Registers used:
  8704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8710 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8713 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8714 ;;Total ram usage:        8 bytes
  8715 ;; Hardware stack levels used:    1
  8716 ;; This function calls:
  8717 ;;		Nothing
  8718 ;; This function is called by:
  8719 ;;		_fatfs_list_directory_next
  8720 ;;		_Name_copy
  8721 ;; This function uses a non-reentrant model
  8722 ;;
  8723                           
  8724                           	psect	text15
  8725  0045EE                     __ptext15:
  8726                           	opt stack 0
  8727  0045EE                     _strncpy:
  8728                           	opt stack 27
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;incstack = 0
  8732  0045EE  C002  F008         	movff	strncpy@to+1,strncpy@cp+1
  8733  0045F2  C001  F007         	movff	strncpy@to,strncpy@cp
  8734  0045F6  D013               	goto	l10431
  8735  0045F8                     l10425:
  8736  0045F8  0605               	decf	strncpy@size,f,c
  8737  0045FA  A0D8               	btfss	status,0,c
  8738  0045FC  0606               	decf	strncpy@size+1,f,c
  8739  0045FE  C003  FFD9         	movff	strncpy@from,fsr2l
  8740  004602  C004  FFDA         	movff	strncpy@from+1,fsr2h
  8741  004606  4A03               	infsnz	strncpy@from,f,c
  8742  004608  2A04               	incf	strncpy@from+1,f,c
  8743  00460A  C007  FFE1         	movff	strncpy@cp,fsr1l
  8744  00460E  C008  FFE2         	movff	strncpy@cp+1,fsr1h
  8745  004612  4A07               	infsnz	strncpy@cp,f,c
  8746  004614  2A08               	incf	strncpy@cp+1,f,c
  8747  004616  CFDF FFE7          	movff	indf2,indf1
  8748  00461A  50E7               	movf	indf1,w,c
  8749  00461C  E00B               	bz	l10437
  8750  00461E                     l10431:
  8751  00461E  5006               	movf	strncpy@size+1,w,c
  8752  004620  1005               	iorwf	strncpy@size,w,c
  8753  004622  E008               	bz	l10437
  8754  004624  D7E9               	goto	l10425
  8755  004626                     l10433:
  8756  004626  C007  FFD9         	movff	strncpy@cp,fsr2l
  8757  00462A  C008  FFDA         	movff	strncpy@cp+1,fsr2h
  8758  00462E  6ADF               	clrf	indf2,c
  8759  004630  4A07               	infsnz	strncpy@cp,f,c
  8760  004632  2A08               	incf	strncpy@cp+1,f,c
  8761  004634                     l10437:
  8762  004634  0605               	decf	strncpy@size,f,c
  8763  004636  A0D8               	btfss	status,0,c
  8764  004638  0606               	decf	strncpy@size+1,f,c
  8765  00463A  2805               	incf	strncpy@size& (0+255),w,c
  8766  00463C  B4D8               	btfsc	status,2,c
  8767  00463E  2806               	incf	(strncpy@size+1)& (0+255),w,c
  8768  004640  B4D8               	btfsc	status,2,c
  8769                           
  8770                           ;	Return value of _strncpy is never used
  8771  004642  0012               	return	
  8772  004644  D7F0               	goto	l10433
  8773  004646                     __end_of_strncpy:
  8774                           	opt stack 0
  8775                           tosu	equ	0xFFF
  8776                           tosh	equ	0xFFE
  8777                           tosl	equ	0xFFD
  8778                           pclath	equ	0xFFA
  8779                           tblptru	equ	0xFF8
  8780                           tblptrh	equ	0xFF7
  8781                           tblptrl	equ	0xFF6
  8782                           tablat	equ	0xFF5
  8783                           prodh	equ	0xFF4
  8784                           prodl	equ	0xFF3
  8785                           indf0	equ	0xFEF
  8786                           postinc0	equ	0xFEE
  8787                           fsr0h	equ	0xFEA
  8788                           fsr0l	equ	0xFE9
  8789                           wreg	equ	0xFE8
  8790                           indf1	equ	0xFE7
  8791                           postinc1	equ	0xFE6
  8792                           postdec1	equ	0xFE5
  8793                           fsr1h	equ	0xFE2
  8794                           fsr1l	equ	0xFE1
  8795                           indf2	equ	0xFDF
  8796                           postinc2	equ	0xFDE
  8797                           postdec2	equ	0xFDD
  8798                           fsr2h	equ	0xFDA
  8799                           fsr2l	equ	0xFD9
  8800                           status	equ	0xFD8
  8801                           
  8802 ;; *************** function _fatfs_get_sfn_display_name *****************
  8803 ;; Defined at:
  8804 ;;		line 345 in file "fat_string.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  out             2    0[COMRAM] PTR unsigned char 
  8807 ;;		 -> fl_listdirectory@dirent(19), 
  8808 ;;  in              2    2[COMRAM] PTR unsigned char 
  8809 ;;		 -> fatfs_list_directory_next@short_filename(13), 
  8810 ;; Auto vars:     Size  Location     Type
  8811 ;;  a               1    6[COMRAM] unsigned char 
  8812 ;;  len             2    4[COMRAM] int 
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  2    0[COMRAM] int 
  8815 ;; Registers used:
  8816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8822 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8823 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8825 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8826 ;;Total ram usage:        7 bytes
  8827 ;; Hardware stack levels used:    1
  8828 ;; This function calls:
  8829 ;;		Nothing
  8830 ;; This function is called by:
  8831 ;;		_fatfs_list_directory_next
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text16
  8836  004A6C                     __ptext16:
  8837                           	opt stack 0
  8838  004A6C                     _fatfs_get_sfn_display_name:
  8839                           	opt stack 27
  8840                           
  8841                           ;fat_string.c: 347: int len = 0;
  8842                           
  8843                           ;incstack = 0
  8844  004A6C  0E00               	movlw	0
  8845  004A6E  6E06               	movwf	fatfs_get_sfn_display_name@len+1,c
  8846  004A70  6E05               	movwf	fatfs_get_sfn_display_name@len,c
  8847                           
  8848                           ;fat_string.c: 348: while (*in && len <= 11)
  8849  004A72  D01D               	goto	l10463
  8850  004A74                     l10441:
  8851                           
  8852                           ;fat_string.c: 349: {
  8853                           ;fat_string.c: 350: char a = *in++;
  8854  004A74  C003  FFD9         	movff	fatfs_get_sfn_display_name@in,fsr2l
  8855  004A78  C004  FFDA         	movff	fatfs_get_sfn_display_name@in+1,fsr2h
  8856  004A7C  50DF               	movf	indf2,w,c
  8857  004A7E  6E07               	movwf	fatfs_get_sfn_display_name@a,c
  8858  004A80  4A03               	infsnz	fatfs_get_sfn_display_name@in,f,c
  8859  004A82  2A04               	incf	fatfs_get_sfn_display_name@in+1,f,c
  8860                           
  8861                           ;fat_string.c: 352: if (a == ' ')
  8862  004A84  5007               	movf	fatfs_get_sfn_display_name@a,w,c
  8863  004A86  0A20               	xorlw	32
  8864  004A88  E012               	bz	l10463
  8865                           
  8866                           ;fat_string.c: 355: else if ((a>='A') && (a<='Z'))
  8867                           
  8868                           ;fat_string.c: 353: continue;
  8869  004A8A  0E40               	movlw	64
  8870  004A8C  6407               	cpfsgt	fatfs_get_sfn_display_name@a,c
  8871  004A8E  D005               	goto	l10457
  8872  004A90  0E5B               	movlw	91
  8873  004A92  5C07               	subwf	fatfs_get_sfn_display_name@a,w,c
  8874  004A94  E202               	bc	l10457
  8875                           
  8876                           ;fat_string.c: 356: a+= 32;
  8877  004A96  0E20               	movlw	32
  8878  004A98  2607               	addwf	fatfs_get_sfn_display_name@a,f,c
  8879  004A9A                     l10457:
  8880                           
  8881                           ;fat_string.c: 358: *out++ = a;
  8882  004A9A  C001  FFD9         	movff	fatfs_get_sfn_display_name@out,fsr2l
  8883  004A9E  C002  FFDA         	movff	fatfs_get_sfn_display_name@out+1,fsr2h
  8884  004AA2  C007  FFDF         	movff	fatfs_get_sfn_display_name@a,indf2
  8885  004AA6  4A01               	infsnz	fatfs_get_sfn_display_name@out,f,c
  8886  004AA8  2A02               	incf	fatfs_get_sfn_display_name@out+1,f,c
  8887                           
  8888                           ;fat_string.c: 359: len++;
  8889  004AAA  4A05               	infsnz	fatfs_get_sfn_display_name@len,f,c
  8890  004AAC  2A06               	incf	fatfs_get_sfn_display_name@len+1,f,c
  8891  004AAE                     l10463:
  8892  004AAE  C003  FFD9         	movff	fatfs_get_sfn_display_name@in,fsr2l
  8893  004AB2  C004  FFDA         	movff	fatfs_get_sfn_display_name@in+1,fsr2h
  8894  004AB6  50DF               	movf	indf2,w,c
  8895  004AB8  E007               	bz	l10467
  8896  004ABA  5006               	movf	fatfs_get_sfn_display_name@len+1,w,c
  8897  004ABC  0A80               	xorlw	128
  8898  004ABE  0F80               	addlw	-128
  8899  004AC0  0E0C               	movlw	12
  8900  004AC2  B4D8               	btfsc	status,2,c
  8901  004AC4  5C05               	subwf	fatfs_get_sfn_display_name@len,w,c
  8902  004AC6  E3D6               	bnc	l10441
  8903  004AC8                     l10467:
  8904                           
  8905                           ;fat_string.c: 360: }
  8906                           ;fat_string.c: 362: *out = '\0';
  8907  004AC8  C001  FFD9         	movff	fatfs_get_sfn_display_name@out,fsr2l
  8908  004ACC  C002  FFDA         	movff	fatfs_get_sfn_display_name@out+1,fsr2h
  8909  004AD0  0E00               	movlw	0
  8910  004AD2  6EDF               	movwf	indf2,c
  8911                           
  8912                           ;fat_string.c: 363: return 1;
  8913                           ;	Return value of _fatfs_get_sfn_display_name is never used
  8914  004AD4  0C00               	retlw	0
  8915  004AD6                     __end_of_fatfs_get_sfn_display_name:
  8916                           	opt stack 0
  8917                           tosu	equ	0xFFF
  8918                           tosh	equ	0xFFE
  8919                           tosl	equ	0xFFD
  8920                           pclath	equ	0xFFA
  8921                           tblptru	equ	0xFF8
  8922                           tblptrh	equ	0xFF7
  8923                           tblptrl	equ	0xFF6
  8924                           tablat	equ	0xFF5
  8925                           prodh	equ	0xFF4
  8926                           prodl	equ	0xFF3
  8927                           indf0	equ	0xFEF
  8928                           postinc0	equ	0xFEE
  8929                           fsr0h	equ	0xFEA
  8930                           fsr0l	equ	0xFE9
  8931                           wreg	equ	0xFE8
  8932                           indf1	equ	0xFE7
  8933                           postinc1	equ	0xFE6
  8934                           postdec1	equ	0xFE5
  8935                           fsr1h	equ	0xFE2
  8936                           fsr1l	equ	0xFE1
  8937                           indf2	equ	0xFDF
  8938                           postinc2	equ	0xFDE
  8939                           postdec2	equ	0xFDD
  8940                           fsr2h	equ	0xFDA
  8941                           fsr2l	equ	0xFD9
  8942                           status	equ	0xFD8
  8943                           
  8944 ;; *************** function _fl_opendir *****************
  8945 ;; Defined at:
  8946 ;;		line 1512 in file "fat_filelib.c"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;  path            2  114[BANK0 ] PTR const unsigned char 
  8949 ;;		 -> STR_67(2), STR_63(2), m(30), 
  8950 ;;  dir             2  116[BANK0 ] PTR struct fs_dir_list_s
  8951 ;;		 -> dptr(9), fl_is_dir@dir(9), fl_listdirectory@dirstat(9), 
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;  cluster         4  122[BANK0 ] unsigned long 
  8954 ;;  res             2  120[BANK0 ] int 
  8955 ;;  levels          2  118[BANK0 ] int 
  8956 ;; Return value:  Size  Location     Type
  8957 ;;                  2  114[BANK0 ] PTR struct fs_dir_list_s
  8958 ;; Registers used:
  8959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8960 ;; Tracked objects:
  8961 ;;		On entry : 0/0
  8962 ;;		On exit  : 0/0
  8963 ;;		Unchanged: 0/0
  8964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8965 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8966 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8968 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8969 ;;Total ram usage:       12 bytes
  8970 ;; Hardware stack levels used:    1
  8971 ;; Hardware stack levels required when called:    9
  8972 ;; This function calls:
  8973 ;;		__open_directory
  8974 ;;		_fatfs_get_root_cluster
  8975 ;;		_fatfs_list_directory_start
  8976 ;;		_fatfs_total_path_levels
  8977 ;;		_fl_init
  8978 ;; This function is called by:
  8979 ;;		_fl_listdirectory
  8980 ;;		_Open_dir
  8981 ;;		_fl_is_dir
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           	psect	text17
  8986  005CD6                     __ptext17:
  8987                           	opt stack 0
  8988  005CD6                     _fl_opendir:
  8989                           	opt stack 20
  8990                           
  8991                           ;fat_filelib.c: 1514: int levels;
  8992                           ;fat_filelib.c: 1515: int res = 1;
  8993                           
  8994                           ;incstack = 0
  8995  005CD6  0100               	movlb	0	; () banked
  8996  005CD8  6BF9               	clrf	(fl_opendir@res+1)& (0+255),b
  8997  005CDA  0E01               	movlw	1
  8998  005CDC  6FF8               	movwf	fl_opendir@res& (0+255),b
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;fat_filelib.c: 1516: uint32 cluster = 0xFFFFFFFF;
  9002  005CDE  69FA               	setf	fl_opendir@cluster& (0+255),b
  9003  005CE0  69FB               	setf	(fl_opendir@cluster+1)& (0+255),b
  9004  005CE2  69FC               	setf	(fl_opendir@cluster+2)& (0+255),b
  9005  005CE4  69FD               	setf	(fl_opendir@cluster+3)& (0+255),b
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;fat_filelib.c: 1519: { if (_filelib_init==0) fl_init(); };
  9009  005CE6  0101               	movlb	1	; () banked
  9010  005CE8  5192               	movf	(__filelib_init+1)& (0+255),w,b
  9011  005CEA  1191               	iorwf	__filelib_init& (0+255),w,b
  9012  005CEC  B4D8               	btfsc	status,2,c
  9013                           
  9014                           ; BSR set to: 1
  9015  005CEE  EC44  F029         	call	_fl_init	;wreg free
  9016                           
  9017                           ;fat_filelib.c: 1523: levels = fatfs_total_path_levels((char*)path) + 1;
  9018                           
  9019                           ;fat_filelib.c: 1521: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
  9020  005CF2  C0F3  F002         	movff	fl_opendir@path+1,fatfs_total_path_levels@path+1
  9021  005CF6  0100               	movlb	0	; () banked
  9022  005CF8  C0F2  F001         	movff	fl_opendir@path,fatfs_total_path_levels@path
  9023  005CFC  EC71  F033         	call	_fatfs_total_path_levels	;wreg free
  9024  005D00  2801               	incf	?_fatfs_total_path_levels,w,c
  9025  005D02  0100               	movlb	0	; () banked
  9026  005D04  6FF6               	movwf	fl_opendir@levels& (0+255),b
  9027  005D06  0E00               	movlw	0
  9028  005D08  2002               	addwfc	?_fatfs_total_path_levels+1,w,c
  9029  005D0A  6FF7               	movwf	(fl_opendir@levels+1)& (0+255),b
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;fat_filelib.c: 1526: if (levels == 0)
  9033  005D0C  51F7               	movf	(fl_opendir@levels+1)& (0+255),w,b
  9034  005D0E  11F6               	iorwf	fl_opendir@levels& (0+255),w,b
  9035  005D10  E10F               	bnz	l11993
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;fat_filelib.c: 1527: cluster = fatfs_get_root_cluster(&_fs);
  9039  005D12  0E09               	movlw	high __fs
  9040  005D14  6E02               	movwf	fatfs_get_root_cluster@fs+1,c
  9041  005D16  0E78               	movlw	low __fs
  9042  005D18  6E01               	movwf	fatfs_get_root_cluster@fs,c
  9043  005D1A  EC90  F01F         	call	_fatfs_get_root_cluster	;wreg free
  9044  005D1E  C001  F0FA         	movff	?_fatfs_get_root_cluster,fl_opendir@cluster
  9045  005D22  C002  F0FB         	movff	?_fatfs_get_root_cluster+1,fl_opendir@cluster+1
  9046  005D26  C003  F0FC         	movff	?_fatfs_get_root_cluster+2,fl_opendir@cluster+2
  9047  005D2A  C004  F0FD         	movff	?_fatfs_get_root_cluster+3,fl_opendir@cluster+3
  9048  005D2E  D00F               	goto	l11995
  9049  005D30                     l11993:
  9050                           
  9051                           ;fat_filelib.c: 1529: else
  9052                           ;fat_filelib.c: 1530: res = _open_directory((char*)path, &cluster);
  9053  005D30  C0F3  F0B9         	movff	fl_opendir@path+1,__open_directory@path+1
  9054  005D34  C0F2  F0B8         	movff	fl_opendir@path,__open_directory@path
  9055  005D38  0E00               	movlw	high fl_opendir@cluster
  9056  005D3A  0100               	movlb	0	; () banked
  9057  005D3C  6FBB               	movwf	(__open_directory@pathCluster+1)& (0+255),b
  9058  005D3E  0EFA               	movlw	low fl_opendir@cluster
  9059  005D40  6FBA               	movwf	__open_directory@pathCluster& (0+255),b
  9060  005D42  EC10  F034         	call	__open_directory	;wreg free
  9061  005D46  C0B8  F0F8         	movff	?__open_directory,fl_opendir@res
  9062  005D4A  C0B9  F0F9         	movff	?__open_directory+1,fl_opendir@res+1
  9063  005D4E                     l11995:
  9064                           
  9065                           ;fat_filelib.c: 1532: if (res)
  9066  005D4E  0100               	movlb	0	; () banked
  9067  005D50  51F9               	movf	(fl_opendir@res+1)& (0+255),w,b
  9068  005D52  11F8               	iorwf	fl_opendir@res& (0+255),w,b
  9069  005D54  E012               	bz	l12001
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;fat_filelib.c: 1533: fatfs_list_directory_start(&_fs, dir, cluster);
  9073  005D56  0E09               	movlw	high __fs
  9074  005D58  6E02               	movwf	fatfs_list_directory_start@fs+1,c
  9075  005D5A  0E78               	movlw	low __fs
  9076  005D5C  6E01               	movwf	fatfs_list_directory_start@fs,c
  9077  005D5E  C0F5  F004         	movff	fl_opendir@dir+1,fatfs_list_directory_start@dirls+1
  9078  005D62  C0F4  F003         	movff	fl_opendir@dir,fatfs_list_directory_start@dirls
  9079  005D66  C0FA  F005         	movff	fl_opendir@cluster,fatfs_list_directory_start@StartCluster
  9080  005D6A  C0FB  F006         	movff	fl_opendir@cluster+1,fatfs_list_directory_start@StartCluster+1
  9081  005D6E  C0FC  F007         	movff	fl_opendir@cluster+2,fatfs_list_directory_start@StartCluster+2
  9082  005D72  C0FD  F008         	movff	fl_opendir@cluster+3,fatfs_list_directory_start@StartCluster+3
  9083  005D76  ECEE  F020         	call	_fatfs_list_directory_start	;wreg free
  9084  005D7A                     l12001:
  9085                           
  9086                           ;fat_filelib.c: 1537: return cluster != 0xFFFFFFFF ? dir : 0;
  9087  005D7A  0100               	movlb	0	; () banked
  9088  005D7C  29FA               	incf	fl_opendir@cluster& (0+255),w,b
  9089  005D7E  B4D8               	btfsc	status,2,c
  9090  005D80  29FB               	incf	(fl_opendir@cluster+1)& (0+255),w,b
  9091  005D82  B4D8               	btfsc	status,2,c
  9092  005D84  29FC               	incf	(fl_opendir@cluster+2)& (0+255),w,b
  9093  005D86  B4D8               	btfsc	status,2,c
  9094  005D88  29FD               	incf	(fl_opendir@cluster+3)& (0+255),w,b
  9095  005D8A  E104               	bnz	l12005
  9096                           
  9097                           ; BSR set to: 0
  9098  005D8C  0E00               	movlw	0
  9099  005D8E  6FF3               	movwf	(?_fl_opendir+1)& (0+255),b
  9100  005D90  6FF2               	movwf	?_fl_opendir& (0+255),b
  9101  005D92  D005               	goto	l807
  9102  005D94                     l12005:
  9103                           
  9104                           ; BSR set to: 0
  9105  005D94  C0F5  F0F3         	movff	fl_opendir@dir+1,?_fl_opendir+1
  9106  005D98  0100               	movlb	0	; () banked
  9107  005D9A  C0F4  F0F2         	movff	fl_opendir@dir,?_fl_opendir
  9108  005D9E                     l807:
  9109                           
  9110                           ; BSR set to: 0
  9111  005D9E  0012               	return	
  9112  005DA0                     __end_of_fl_opendir:
  9113                           	opt stack 0
  9114                           tosu	equ	0xFFF
  9115                           tosh	equ	0xFFE
  9116                           tosl	equ	0xFFD
  9117                           pclath	equ	0xFFA
  9118                           tblptru	equ	0xFF8
  9119                           tblptrh	equ	0xFF7
  9120                           tblptrl	equ	0xFF6
  9121                           tablat	equ	0xFF5
  9122                           prodh	equ	0xFF4
  9123                           prodl	equ	0xFF3
  9124                           indf0	equ	0xFEF
  9125                           postinc0	equ	0xFEE
  9126                           fsr0h	equ	0xFEA
  9127                           fsr0l	equ	0xFE9
  9128                           wreg	equ	0xFE8
  9129                           indf1	equ	0xFE7
  9130                           postinc1	equ	0xFE6
  9131                           postdec1	equ	0xFE5
  9132                           fsr1h	equ	0xFE2
  9133                           fsr1l	equ	0xFE1
  9134                           indf2	equ	0xFDF
  9135                           postinc2	equ	0xFDE
  9136                           postdec2	equ	0xFDD
  9137                           fsr2h	equ	0xFDA
  9138                           fsr2l	equ	0xFD9
  9139                           status	equ	0xFD8
  9140                           
  9141 ;; *************** function _fatfs_list_directory_start *****************
  9142 ;; Defined at:
  9143 ;;		line 755 in file "fat_access.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  fs              2    0[COMRAM] PTR struct fatfs
  9146 ;;		 -> _fs(1095), 
  9147 ;;  dirls           2    2[COMRAM] PTR struct fs_dir_list_s
  9148 ;;		 -> dptr(9), fl_is_dir@dir(9), fl_listdirectory@dirstat(9), 
  9149 ;;  StartCluster    4    4[COMRAM] unsigned long 
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;		None
  9152 ;; Return value:  Size  Location     Type
  9153 ;;		None               void
  9154 ;; Registers used:
  9155 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9161 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9165 ;;Total ram usage:        8 bytes
  9166 ;; Hardware stack levels used:    1
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_fl_opendir
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           	psect	text18
  9175  0041DC                     __ptext18:
  9176                           	opt stack 0
  9177  0041DC                     _fatfs_list_directory_start:
  9178                           	opt stack 28
  9179                           
  9180                           ;fat_access.c: 757: dirls->cluster = StartCluster;
  9181                           
  9182                           ; BSR set to: 0
  9183                           ;incstack = 0
  9184  0041DC  EE20 F004          	lfsr	2,4
  9185  0041E0  5003               	movf	fatfs_list_directory_start@dirls,w,c
  9186  0041E2  26D9               	addwf	fsr2l,f,c
  9187  0041E4  5004               	movf	fatfs_list_directory_start@dirls+1,w,c
  9188  0041E6  22DA               	addwfc	fsr2h,f,c
  9189  0041E8  C005  FFDE         	movff	fatfs_list_directory_start@StartCluster,postinc2
  9190  0041EC  C006  FFDE         	movff	fatfs_list_directory_start@StartCluster+1,postinc2
  9191  0041F0  C007  FFDE         	movff	fatfs_list_directory_start@StartCluster+2,postinc2
  9192  0041F4  C008  FFDE         	movff	fatfs_list_directory_start@StartCluster+3,postinc2
  9193                           
  9194                           ;fat_access.c: 758: dirls->sector = 0;
  9195  0041F8  C003  FFD9         	movff	fatfs_list_directory_start@dirls,fsr2l
  9196  0041FC  C004  FFDA         	movff	fatfs_list_directory_start@dirls+1,fsr2h
  9197  004200  6ADE               	clrf	postinc2,c
  9198  004202  6ADE               	clrf	postinc2,c
  9199  004204  6ADE               	clrf	postinc2,c
  9200  004206  6ADD               	clrf	postdec2,c
  9201                           
  9202                           ;fat_access.c: 759: dirls->offset = 0;
  9203  004208  EE20 F008          	lfsr	2,8
  9204  00420C  5003               	movf	fatfs_list_directory_start@dirls,w,c
  9205  00420E  26D9               	addwf	fsr2l,f,c
  9206  004210  5004               	movf	fatfs_list_directory_start@dirls+1,w,c
  9207  004212  22DA               	addwfc	fsr2h,f,c
  9208  004214  0E00               	movlw	0
  9209  004216  6EDF               	movwf	indf2,c
  9210  004218  0C00               	retlw	0
  9211  00421A                     __end_of_fatfs_list_directory_start:
  9212                           	opt stack 0
  9213                           tosu	equ	0xFFF
  9214                           tosh	equ	0xFFE
  9215                           tosl	equ	0xFFD
  9216                           pclath	equ	0xFFA
  9217                           tblptru	equ	0xFF8
  9218                           tblptrh	equ	0xFF7
  9219                           tblptrl	equ	0xFF6
  9220                           tablat	equ	0xFF5
  9221                           prodh	equ	0xFF4
  9222                           prodl	equ	0xFF3
  9223                           indf0	equ	0xFEF
  9224                           postinc0	equ	0xFEE
  9225                           fsr0h	equ	0xFEA
  9226                           fsr0l	equ	0xFE9
  9227                           wreg	equ	0xFE8
  9228                           indf1	equ	0xFE7
  9229                           postinc1	equ	0xFE6
  9230                           postdec1	equ	0xFE5
  9231                           fsr1h	equ	0xFE2
  9232                           fsr1l	equ	0xFE1
  9233                           indf2	equ	0xFDF
  9234                           postinc2	equ	0xFDE
  9235                           postdec2	equ	0xFDD
  9236                           fsr2h	equ	0xFDA
  9237                           fsr2l	equ	0xFD9
  9238                           status	equ	0xFD8
  9239                           
  9240 ;; *************** function _fl_closedir *****************
  9241 ;; Defined at:
  9242 ;;		line 1564 in file "fat_filelib.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;  dir             2    0[COMRAM] PTR struct fs_dir_list_s
  9245 ;;		 -> dptr(9), fl_is_dir@dir(9), fl_listdirectory@dirstat(9), 
  9246 ;; Auto vars:     Size  Location     Type
  9247 ;;		None
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  2    0[COMRAM] int 
  9250 ;; Registers used:
  9251 ;;		None
  9252 ;; Tracked objects:
  9253 ;;		On entry : 0/0
  9254 ;;		On exit  : 0/0
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;Total ram usage:        2 bytes
  9262 ;; Hardware stack levels used:    1
  9263 ;; This function calls:
  9264 ;;		Nothing
  9265 ;; This function is called by:
  9266 ;;		_fl_listdirectory
  9267 ;;		_Open_dir
  9268 ;;		_fl_is_dir
  9269 ;; This function uses a non-reentrant model
  9270 ;;
  9271                           
  9272                           	psect	text19
  9273  003E46                     __ptext19:
  9274                           	opt stack 0
  9275  003E46                     _fl_closedir:
  9276                           	opt stack 29
  9277                           
  9278                           ;fat_filelib.c: 1567: return 0;
  9279                           ;	Return value of _fl_closedir is never used
  9280                           
  9281                           ;incstack = 0
  9282  003E46  0012               	return	
  9283  003E48                     __end_of_fl_closedir:
  9284                           	opt stack 0
  9285                           tosu	equ	0xFFF
  9286                           tosh	equ	0xFFE
  9287                           tosl	equ	0xFFD
  9288                           pclath	equ	0xFFA
  9289                           tblptru	equ	0xFF8
  9290                           tblptrh	equ	0xFF7
  9291                           tblptrl	equ	0xFF6
  9292                           tablat	equ	0xFF5
  9293                           prodh	equ	0xFF4
  9294                           prodl	equ	0xFF3
  9295                           indf0	equ	0xFEF
  9296                           postinc0	equ	0xFEE
  9297                           fsr0h	equ	0xFEA
  9298                           fsr0l	equ	0xFE9
  9299                           wreg	equ	0xFE8
  9300                           indf1	equ	0xFE7
  9301                           postinc1	equ	0xFE6
  9302                           postdec1	equ	0xFE5
  9303                           fsr1h	equ	0xFE2
  9304                           fsr1l	equ	0xFE1
  9305                           indf2	equ	0xFDF
  9306                           postinc2	equ	0xFDE
  9307                           postdec2	equ	0xFDD
  9308                           fsr2h	equ	0xFDA
  9309                           fsr2l	equ	0xFD9
  9310                           status	equ	0xFD8
  9311                           
  9312 ;; *************** function _Format_drive *****************
  9313 ;; Defined at:
  9314 ;;		line 738 in file "main.c"
  9315 ;; Parameters:    Size  Location     Type
  9316 ;;		None
  9317 ;; Auto vars:     Size  Location     Type
  9318 ;;		None
  9319 ;; Return value:  Size  Location     Type
  9320 ;;		None               void
  9321 ;; Registers used:
  9322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9323 ;; Tracked objects:
  9324 ;;		On entry : 0/0
  9325 ;;		On exit  : 0/0
  9326 ;;		Unchanged: 0/0
  9327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9332 ;;Total ram usage:        0 bytes
  9333 ;; Hardware stack levels used:    1
  9334 ;; Hardware stack levels required when called:    8
  9335 ;; This function calls:
  9336 ;;		_Clr_str
  9337 ;;		_File_format
  9338 ;;		_ReadUART
  9339 ;;		_Read_str
  9340 ;;		_Write_str
  9341 ;; This function is called by:
  9342 ;;		_File_IO
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           	psect	text20
  9347  0046A2                     __ptext20:
  9348                           	opt stack 0
  9349  0046A2                     _Format_drive:
  9350                           	opt stack 21
  9351                           
  9352                           ;main.c: 740: Write_str("\n\rAll data will be lost..!\n\rAre you sure? y/n\n\r");
  9353                           
  9354                           ;incstack = 0
  9355  0046A2  0EFB               	movlw	high STR_58
  9356  0046A4  6E07               	movwf	Write_str@str+1,c
  9357  0046A6  0EE3               	movlw	low STR_58
  9358  0046A8  6E06               	movwf	Write_str@str,c
  9359  0046AA  EC3C  F01F         	call	_Write_str	;wreg free
  9360                           
  9361                           ;main.c: 741: switch(ReadUART())
  9362  0046AE  D020               	goto	l12941
  9363  0046B0                     l12931:
  9364  0046B0  0EFD               	movlw	high STR_59
  9365  0046B2  6E07               	movwf	Write_str@str+1,c
  9366  0046B4  0E58               	movlw	low STR_59
  9367  0046B6  6E06               	movwf	Write_str@str,c
  9368  0046B8  EC3C  F01F         	call	_Write_str	;wreg free
  9369                           
  9370                           ;main.c: 744: Clr_str(string);
  9371  0046BC  0E01               	movlw	high _string
  9372  0046BE  6E02               	movwf	Clr_str@buffer+1,c
  9373  0046C0  0101               	movlb	1	; () banked
  9374  0046C2  0EAF               	movlw	low _string
  9375  0046C4  6E01               	movwf	Clr_str@buffer,c
  9376  0046C6  EC9F  F01F         	call	_Clr_str	;wreg free
  9377                           
  9378                           ;main.c: 745: Read_str(string);
  9379  0046CA  0E01               	movlw	high _string
  9380  0046CC  6E03               	movwf	Read_str@buffer+1,c
  9381  0046CE  0101               	movlb	1	; () banked
  9382  0046D0  0EAF               	movlw	low _string
  9383  0046D2  6E02               	movwf	Read_str@buffer,c
  9384  0046D4  EC2C  F021         	call	_Read_str	;wreg free
  9385                           
  9386                           ;main.c: 746: File_format(1048576, "DISK_");
  9387  0046D8  6A6B               	clrf	File_format@volume,c
  9388  0046DA  6A6C               	clrf	File_format@volume+1,c
  9389  0046DC  0E10               	movlw	16
  9390  0046DE  6E6D               	movwf	File_format@volume+2,c
  9391  0046E0  6A6E               	clrf	File_format@volume+3,c
  9392  0046E2  0EFF               	movlw	high STR_60
  9393  0046E4  6E70               	movwf	File_format@name+1,c
  9394  0046E6  0EE0               	movlw	low STR_60
  9395  0046E8  6E6F               	movwf	File_format@name,c
  9396  0046EA  ECCF  F020         	call	_File_format	;wreg free
  9397                           
  9398                           ;main.c: 747: break;
  9399  0046EE  D006               	goto	l1799
  9400  0046F0                     l12941:
  9401  0046F0  EC24  F01F         	call	_ReadUART	;wreg free
  9402                           
  9403                           ; Switch size 1, requested type "speed"
  9404                           ; Number of cases is 2, Range of values is 110 to 121
  9405                           ; switch strategies available:
  9406                           ; Name         Instructions Cycles
  9407                           ; simple_byte            7     4 (average)
  9408                           ;	Chosen strategy is simple_byte
  9409  0046F4  0A6E               	xorlw	110	; case 110
  9410  0046F6  E002               	bz	l1799
  9411  0046F8  0A17               	xorlw	23	; case 121
  9412  0046FA  E0DA               	bz	l12931
  9413  0046FC                     l1799:
  9414  0046FC  0012               	return	
  9415  0046FE                     __end_of_Format_drive:
  9416                           	opt stack 0
  9417                           tosu	equ	0xFFF
  9418                           tosh	equ	0xFFE
  9419                           tosl	equ	0xFFD
  9420                           pclath	equ	0xFFA
  9421                           tblptru	equ	0xFF8
  9422                           tblptrh	equ	0xFF7
  9423                           tblptrl	equ	0xFF6
  9424                           tablat	equ	0xFF5
  9425                           prodh	equ	0xFF4
  9426                           prodl	equ	0xFF3
  9427                           indf0	equ	0xFEF
  9428                           postinc0	equ	0xFEE
  9429                           fsr0h	equ	0xFEA
  9430                           fsr0l	equ	0xFE9
  9431                           wreg	equ	0xFE8
  9432                           indf1	equ	0xFE7
  9433                           postinc1	equ	0xFE6
  9434                           postdec1	equ	0xFE5
  9435                           fsr1h	equ	0xFE2
  9436                           fsr1l	equ	0xFE1
  9437                           indf2	equ	0xFDF
  9438                           postinc2	equ	0xFDE
  9439                           postdec2	equ	0xFDD
  9440                           fsr2h	equ	0xFDA
  9441                           fsr2l	equ	0xFD9
  9442                           status	equ	0xFD8
  9443                           
  9444 ;; *************** function _File_format *****************
  9445 ;; Defined at:
  9446 ;;		line 730 in file "main.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;  volume          4  106[COMRAM] unsigned long 
  9449 ;;  name            2  110[COMRAM] PTR unsigned char 
  9450 ;;		 -> STR_60(6), 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;		None
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  2  106[COMRAM] int 
  9455 ;; Registers used:
  9456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9462 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9466 ;;Total ram usage:        6 bytes
  9467 ;; Hardware stack levels used:    1
  9468 ;; Hardware stack levels required when called:    7
  9469 ;; This function calls:
  9470 ;;		_Write_str
  9471 ;;		_fl_format
  9472 ;; This function is called by:
  9473 ;;		_Format_drive
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text21
  9478  00419E                     __ptext21:
  9479                           	opt stack 0
  9480  00419E                     _File_format:
  9481                           	opt stack 21
  9482                           
  9483                           ;main.c: 732: if(fl_format(volume,name))
  9484                           
  9485                           ;incstack = 0
  9486  00419E  C06B  F065         	movff	File_format@volume,fl_format@volume_sectors
  9487  0041A2  C06C  F066         	movff	File_format@volume+1,fl_format@volume_sectors+1
  9488  0041A6  C06D  F067         	movff	File_format@volume+2,fl_format@volume_sectors+2
  9489  0041AA  C06E  F068         	movff	File_format@volume+3,fl_format@volume_sectors+3
  9490  0041AE  C070  F06A         	movff	File_format@name+1,fl_format@name+1
  9491  0041B2  C06F  F069         	movff	File_format@name,fl_format@name
  9492  0041B6  EC68  F020         	call	_fl_format	;wreg free
  9493  0041BA  5066               	movf	?_fl_format+1,w,c
  9494  0041BC  1065               	iorwf	?_fl_format,w,c
  9495  0041BE  E007               	bz	l12503
  9496                           
  9497                           ;main.c: 733: Write_str("\n\rFormat complete..!");
  9498  0041C0  0EFE               	movlw	high STR_56
  9499  0041C2  6E07               	movwf	Write_str@str+1,c
  9500  0041C4  0EDB               	movlw	low STR_56
  9501  0041C6  6E06               	movwf	Write_str@str,c
  9502  0041C8  EC3C  F01F         	call	_Write_str	;wreg free
  9503  0041CC  D006               	goto	l1792
  9504  0041CE                     l12503:
  9505                           
  9506                           ;main.c: 734: else
  9507                           ;main.c: 735: Write_str("\n\rFormat failed..!");
  9508  0041CE  0EFF               	movlw	high STR_57
  9509  0041D0  6E07               	movwf	Write_str@str+1,c
  9510  0041D2  0E18               	movlw	low STR_57
  9511  0041D4  6E06               	movwf	Write_str@str,c
  9512  0041D6  EC3C  F01F         	call	_Write_str	;wreg free
  9513  0041DA                     l1792:
  9514  0041DA  0012               	return	
  9515  0041DC                     __end_of_File_format:
  9516                           	opt stack 0
  9517                           tosu	equ	0xFFF
  9518                           tosh	equ	0xFFE
  9519                           tosl	equ	0xFFD
  9520                           pclath	equ	0xFFA
  9521                           tblptru	equ	0xFF8
  9522                           tblptrh	equ	0xFF7
  9523                           tblptrl	equ	0xFF6
  9524                           tablat	equ	0xFF5
  9525                           prodh	equ	0xFF4
  9526                           prodl	equ	0xFF3
  9527                           indf0	equ	0xFEF
  9528                           postinc0	equ	0xFEE
  9529                           fsr0h	equ	0xFEA
  9530                           fsr0l	equ	0xFE9
  9531                           wreg	equ	0xFE8
  9532                           indf1	equ	0xFE7
  9533                           postinc1	equ	0xFE6
  9534                           postdec1	equ	0xFE5
  9535                           fsr1h	equ	0xFE2
  9536                           fsr1l	equ	0xFE1
  9537                           indf2	equ	0xFDF
  9538                           postinc2	equ	0xFDE
  9539                           postdec2	equ	0xFDD
  9540                           fsr2h	equ	0xFDA
  9541                           fsr2l	equ	0xFD9
  9542                           status	equ	0xFD8
  9543                           
  9544 ;; *************** function _fl_format *****************
  9545 ;; Defined at:
  9546 ;;		line 1592 in file "fat_filelib.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;  volume_secto    4  100[COMRAM] unsigned long 
  9549 ;;  name            2  104[COMRAM] PTR const unsigned char 
  9550 ;;		 -> STR_60(6), 
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;		None
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  2  100[COMRAM] int 
  9555 ;; Registers used:
  9556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9562 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9565 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9566 ;;Total ram usage:        6 bytes
  9567 ;; Hardware stack levels used:    1
  9568 ;; Hardware stack levels required when called:    6
  9569 ;; This function calls:
  9570 ;;		_fatfs_format
  9571 ;; This function is called by:
  9572 ;;		_File_format
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           	psect	text22
  9577  0040D0                     __ptext22:
  9578                           	opt stack 0
  9579  0040D0                     _fl_format:
  9580                           	opt stack 21
  9581                           
  9582                           ;fat_filelib.c: 1594: return fatfs_format(&_fs, volume_sectors, name);
  9583                           
  9584                           ;incstack = 0
  9585  0040D0  0E09               	movlw	high __fs
  9586  0040D2  6E5A               	movwf	fatfs_format@fs+1,c
  9587  0040D4  0E78               	movlw	low __fs
  9588  0040D6  6E59               	movwf	fatfs_format@fs,c
  9589  0040D8  C065  F05B         	movff	fl_format@volume_sectors,fatfs_format@volume_sectors
  9590  0040DC  C066  F05C         	movff	fl_format@volume_sectors+1,fatfs_format@volume_sectors+1
  9591  0040E0  C067  F05D         	movff	fl_format@volume_sectors+2,fatfs_format@volume_sectors+2
  9592  0040E4  C068  F05E         	movff	fl_format@volume_sectors+3,fatfs_format@volume_sectors+3
  9593  0040E8  C06A  F060         	movff	fl_format@name+1,fatfs_format@name+1
  9594  0040EC  C069  F05F         	movff	fl_format@name,fatfs_format@name
  9595  0040F0  EC76  F027         	call	_fatfs_format	;wreg free
  9596  0040F4  C059  F065         	movff	?_fatfs_format,?_fl_format
  9597  0040F8  C05A  F066         	movff	?_fatfs_format+1,?_fl_format+1
  9598  0040FC  0012               	return	
  9599  0040FE                     __end_of_fl_format:
  9600                           	opt stack 0
  9601                           tosu	equ	0xFFF
  9602                           tosh	equ	0xFFE
  9603                           tosl	equ	0xFFD
  9604                           pclath	equ	0xFFA
  9605                           tblptru	equ	0xFF8
  9606                           tblptrh	equ	0xFF7
  9607                           tblptrl	equ	0xFF6
  9608                           tablat	equ	0xFF5
  9609                           prodh	equ	0xFF4
  9610                           prodl	equ	0xFF3
  9611                           indf0	equ	0xFEF
  9612                           postinc0	equ	0xFEE
  9613                           fsr0h	equ	0xFEA
  9614                           fsr0l	equ	0xFE9
  9615                           wreg	equ	0xFE8
  9616                           indf1	equ	0xFE7
  9617                           postinc1	equ	0xFE6
  9618                           postdec1	equ	0xFE5
  9619                           fsr1h	equ	0xFE2
  9620                           fsr1l	equ	0xFE1
  9621                           indf2	equ	0xFDF
  9622                           postinc2	equ	0xFDE
  9623                           postdec2	equ	0xFDD
  9624                           fsr2h	equ	0xFDA
  9625                           fsr2l	equ	0xFD9
  9626                           status	equ	0xFD8
  9627                           
  9628 ;; *************** function _fatfs_format *****************
  9629 ;; Defined at:
  9630 ;;		line 524 in file "fat_format.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;  fs              2   88[COMRAM] PTR struct fatfs
  9633 ;;		 -> _fs(1095), 
  9634 ;;  volume_secto    4   90[COMRAM] unsigned long 
  9635 ;;  name            2   94[COMRAM] PTR const unsigned char 
  9636 ;;		 -> STR_60(6), 
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;		None
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  2   88[COMRAM] int 
  9641 ;; Registers used:
  9642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9643 ;; Tracked objects:
  9644 ;;		On entry : 0/0
  9645 ;;		On exit  : 0/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9648 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9650 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9651 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9652 ;;Total ram usage:       12 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:    5
  9655 ;; This function calls:
  9656 ;;		_fatfs_format_fat16
  9657 ;;		_fatfs_format_fat32
  9658 ;; This function is called by:
  9659 ;;		_fl_format
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           	psect	text23
  9664  004EEC                     __ptext23:
  9665                           	opt stack 0
  9666  004EEC                     _fatfs_format:
  9667                           	opt stack 21
  9668                           
  9669                           ;fat_format.c: 527: if (volume_sectors <= 4194304)
  9670                           
  9671                           ;incstack = 0
  9672  004EEC  0E01               	movlw	1
  9673  004EEE  6E61               	movwf	??_fatfs_format& (0+255),c
  9674  004EF0  6A62               	clrf	(??_fatfs_format+1)& (0+255),c
  9675  004EF2  0E40               	movlw	64
  9676  004EF4  6E63               	movwf	(??_fatfs_format+2)& (0+255),c
  9677  004EF6  6A64               	clrf	(??_fatfs_format+3)& (0+255),c
  9678  004EF8  5061               	movf	??_fatfs_format,w,c
  9679  004EFA  5C5B               	subwf	fatfs_format@volume_sectors,w,c
  9680  004EFC  5062               	movf	??_fatfs_format+1,w,c
  9681  004EFE  585C               	subwfb	fatfs_format@volume_sectors+1,w,c
  9682  004F00  5063               	movf	??_fatfs_format+2,w,c
  9683  004F02  585D               	subwfb	fatfs_format@volume_sectors+2,w,c
  9684  004F04  5064               	movf	??_fatfs_format+3,w,c
  9685  004F06  585E               	subwfb	fatfs_format@volume_sectors+3,w,c
  9686  004F08  E217               	bc	l11471
  9687                           
  9688                           ;fat_format.c: 528: return fatfs_format_fat16(fs, volume_sectors, name);
  9689  004F0A  C05A  F03D         	movff	fatfs_format@fs+1,fatfs_format_fat16@fs+1
  9690  004F0E  C059  F03C         	movff	fatfs_format@fs,fatfs_format_fat16@fs
  9691  004F12  C05B  F03E         	movff	fatfs_format@volume_sectors,fatfs_format_fat16@volume_sectors
  9692  004F16  C05C  F03F         	movff	fatfs_format@volume_sectors+1,fatfs_format_fat16@volume_sectors+1
  9693  004F1A  C05D  F040         	movff	fatfs_format@volume_sectors+2,fatfs_format_fat16@volume_sectors+2
  9694  004F1E  C05E  F041         	movff	fatfs_format@volume_sectors+3,fatfs_format_fat16@volume_sectors+3
  9695  004F22  C060  F043         	movff	fatfs_format@name+1,fatfs_format_fat16@name+1
  9696  004F26  C05F  F042         	movff	fatfs_format@name,fatfs_format_fat16@name
  9697  004F2A  EC1A  F05E         	call	_fatfs_format_fat16	;wreg free
  9698  004F2E  C03C  F059         	movff	?_fatfs_format_fat16,?_fatfs_format
  9699  004F32  C03D  F05A         	movff	?_fatfs_format_fat16+1,?_fatfs_format+1
  9700  004F36  D016               	goto	l921
  9701  004F38                     l11471:
  9702                           
  9703                           ;fat_format.c: 529: else
  9704                           ;fat_format.c: 530: return fatfs_format_fat32(fs, volume_sectors, name);
  9705  004F38  C05A  F03D         	movff	fatfs_format@fs+1,fatfs_format_fat32@fs+1
  9706  004F3C  C059  F03C         	movff	fatfs_format@fs,fatfs_format_fat32@fs
  9707  004F40  C05B  F03E         	movff	fatfs_format@volume_sectors,fatfs_format_fat32@volume_sectors
  9708  004F44  C05C  F03F         	movff	fatfs_format@volume_sectors+1,fatfs_format_fat32@volume_sectors+1
  9709  004F48  C05D  F040         	movff	fatfs_format@volume_sectors+2,fatfs_format_fat32@volume_sectors+2
  9710  004F4C  C05E  F041         	movff	fatfs_format@volume_sectors+3,fatfs_format_fat32@volume_sectors+3
  9711  004F50  C060  F043         	movff	fatfs_format@name+1,fatfs_format_fat32@name+1
  9712  004F54  C05F  F042         	movff	fatfs_format@name,fatfs_format_fat32@name
  9713  004F58  EC45  F051         	call	_fatfs_format_fat32	;wreg free
  9714  004F5C  C03C  F059         	movff	?_fatfs_format_fat32,?_fatfs_format
  9715  004F60  C03D  F05A         	movff	?_fatfs_format_fat32+1,?_fatfs_format+1
  9716  004F64                     l921:
  9717  004F64  0012               	return	
  9718  004F66                     __end_of_fatfs_format:
  9719                           	opt stack 0
  9720                           tosu	equ	0xFFF
  9721                           tosh	equ	0xFFE
  9722                           tosl	equ	0xFFD
  9723                           pclath	equ	0xFFA
  9724                           tblptru	equ	0xFF8
  9725                           tblptrh	equ	0xFF7
  9726                           tblptrl	equ	0xFF6
  9727                           tablat	equ	0xFF5
  9728                           prodh	equ	0xFF4
  9729                           prodl	equ	0xFF3
  9730                           indf0	equ	0xFEF
  9731                           postinc0	equ	0xFEE
  9732                           fsr0h	equ	0xFEA
  9733                           fsr0l	equ	0xFE9
  9734                           wreg	equ	0xFE8
  9735                           indf1	equ	0xFE7
  9736                           postinc1	equ	0xFE6
  9737                           postdec1	equ	0xFE5
  9738                           fsr1h	equ	0xFE2
  9739                           fsr1l	equ	0xFE1
  9740                           indf2	equ	0xFDF
  9741                           postinc2	equ	0xFDE
  9742                           postdec2	equ	0xFDD
  9743                           fsr2h	equ	0xFDA
  9744                           fsr2l	equ	0xFD9
  9745                           status	equ	0xFD8
  9746                           
  9747 ;; *************** function _fatfs_format_fat32 *****************
  9748 ;; Defined at:
  9749 ;;		line 475 in file "fat_format.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;  fs              2   59[COMRAM] PTR struct fatfs
  9752 ;;		 -> _fs(1095), 
  9753 ;;  volume_secto    4   61[COMRAM] unsigned long 
  9754 ;;  name            2   65[COMRAM] PTR const unsigned char 
  9755 ;;		 -> STR_60(6), 
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;		None
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  2   59[COMRAM] int 
  9760 ;; Registers used:
  9761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9767 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9769 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;Total ram usage:       29 bytes
  9772 ;; Hardware stack levels used:    1
  9773 ;; Hardware stack levels required when called:    4
  9774 ;; This function calls:
  9775 ;;		_fatfs_create_boot_sector
  9776 ;;		_fatfs_create_fsinfo_sector
  9777 ;;		_fatfs_erase_fat
  9778 ;;		_fatfs_erase_sectors
  9779 ;;		_fatfs_fat_init
  9780 ;;		_fatfs_lba_of_cluster
  9781 ;; This function is called by:
  9782 ;;		_fatfs_format
  9783 ;; This function uses a non-reentrant model
  9784 ;;
  9785                           
  9786                           	psect	text24
  9787  00A28A                     __ptext24:
  9788                           	opt stack 0
  9789  00A28A                     _fatfs_format_fat32:
  9790                           	opt stack 21
  9791                           
  9792                           ;fat_format.c: 477: fs->currentsector.address = 0xFFFFFFFF;
  9793                           
  9794                           ;incstack = 0
  9795  00A28A  EE22 F031          	lfsr	2,561
  9796  00A28E  503C               	movf	fatfs_format_fat32@fs,w,c
  9797  00A290  26D9               	addwf	fsr2l,f,c
  9798  00A292  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9799  00A294  22DA               	addwfc	fsr2h,f,c
  9800  00A296  68DE               	setf	postinc2,c
  9801  00A298  68DE               	setf	postinc2,c
  9802  00A29A  68DE               	setf	postinc2,c
  9803  00A29C  68DD               	setf	postdec2,c
  9804                           
  9805                           ;fat_format.c: 478: fs->currentsector.dirty = 0;
  9806  00A29E  EE22 F035          	lfsr	2,565
  9807  00A2A2  503C               	movf	fatfs_format_fat32@fs,w,c
  9808  00A2A4  26D9               	addwf	fsr2l,f,c
  9809  00A2A6  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9810  00A2A8  22DA               	addwfc	fsr2h,f,c
  9811  00A2AA  6ADE               	clrf	postinc2,c
  9812  00A2AC  6ADD               	clrf	postdec2,c
  9813                           
  9814                           ;fat_format.c: 480: fs->next_free_cluster = 0;
  9815  00A2AE  EE20 F01F          	lfsr	2,31
  9816  00A2B2  503C               	movf	fatfs_format_fat32@fs,w,c
  9817  00A2B4  26D9               	addwf	fsr2l,f,c
  9818  00A2B6  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9819  00A2B8  22DA               	addwfc	fsr2h,f,c
  9820  00A2BA  6ADE               	clrf	postinc2,c
  9821  00A2BC  6ADE               	clrf	postinc2,c
  9822  00A2BE  6ADE               	clrf	postinc2,c
  9823  00A2C0  6ADD               	clrf	postdec2,c
  9824                           
  9825                           ;fat_format.c: 482: fatfs_fat_init(fs);
  9826  00A2C2  C03D  F00A         	movff	fatfs_format_fat32@fs+1,fatfs_fat_init@fs+1
  9827  00A2C6  C03C  F009         	movff	fatfs_format_fat32@fs,fatfs_fat_init@fs
  9828  00A2CA  EC6C  F042         	call	_fatfs_fat_init	;wreg free
  9829                           
  9830                           ;fat_format.c: 485: if (!fs->disk_io.read_media || !fs->disk_io.write_media)
  9831  00A2CE  EE20 F029          	lfsr	2,41
  9832  00A2D2  503C               	movf	fatfs_format_fat32@fs,w,c
  9833  00A2D4  26D9               	addwf	fsr2l,f,c
  9834  00A2D6  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9835  00A2D8  22DA               	addwfc	fsr2h,f,c
  9836  00A2DA  50DE               	movf	postinc2,w,c
  9837  00A2DC  10DD               	iorwf	postdec2,w,c
  9838  00A2DE  E009               	bz	l912
  9839  00A2E0  EE20 F02B          	lfsr	2,43
  9840  00A2E4  503C               	movf	fatfs_format_fat32@fs,w,c
  9841  00A2E6  26D9               	addwf	fsr2l,f,c
  9842  00A2E8  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9843  00A2EA  22DA               	addwfc	fsr2h,f,c
  9844  00A2EC  50DE               	movf	postinc2,w,c
  9845  00A2EE  10DD               	iorwf	postdec2,w,c
  9846  00A2F0  E103               	bnz	l10987
  9847  00A2F2                     l912:
  9848                           
  9849                           ;fat_format.c: 486: return (-1);
  9850  00A2F2  683C               	setf	?_fatfs_format_fat32,c
  9851  00A2F4  683D               	setf	?_fatfs_format_fat32+1,c
  9852  00A2F6  D159               	goto	l913
  9853  00A2F8                     l10987:
  9854                           
  9855                           ;fat_format.c: 489: fs->fat_type = FAT_TYPE_32;
  9856  00A2F8  EE20 F028          	lfsr	2,40
  9857  00A2FC  503C               	movf	fatfs_format_fat32@fs,w,c
  9858  00A2FE  26D9               	addwf	fsr2l,f,c
  9859  00A300  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9860  00A302  22DA               	addwfc	fsr2h,f,c
  9861  00A304  0E01               	movlw	1
  9862  00A306  6EDF               	movwf	indf2,c
  9863                           
  9864                           ;fat_format.c: 492: fs->fs_info_sector = 1;
  9865  00A308  EE20 F015          	lfsr	2,21
  9866  00A30C  503C               	movf	fatfs_format_fat32@fs,w,c
  9867  00A30E  26D9               	addwf	fsr2l,f,c
  9868  00A310  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9869  00A312  22DA               	addwfc	fsr2h,f,c
  9870  00A314  0E01               	movlw	1
  9871  00A316  6EDE               	movwf	postinc2,c
  9872  00A318  6ADD               	clrf	postdec2,c
  9873                           
  9874                           ;fat_format.c: 493: fs->rootdir_first_cluster = 2;
  9875  00A31A  EE20 F005          	lfsr	2,5
  9876  00A31E  503C               	movf	fatfs_format_fat32@fs,w,c
  9877  00A320  26D9               	addwf	fsr2l,f,c
  9878  00A322  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9879  00A324  22DA               	addwfc	fsr2h,f,c
  9880  00A326  0E02               	movlw	2
  9881  00A328  6EDE               	movwf	postinc2,c
  9882  00A32A  6ADE               	clrf	postinc2,c
  9883  00A32C  6ADE               	clrf	postinc2,c
  9884  00A32E  6ADD               	clrf	postdec2,c
  9885                           
  9886                           ;fat_format.c: 497: fs->lba_begin = 0;
  9887  00A330  EE20 F017          	lfsr	2,23
  9888  00A334  503C               	movf	fatfs_format_fat32@fs,w,c
  9889  00A336  26D9               	addwf	fsr2l,f,c
  9890  00A338  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9891  00A33A  22DA               	addwfc	fsr2h,f,c
  9892  00A33C  6ADE               	clrf	postinc2,c
  9893  00A33E  6ADE               	clrf	postinc2,c
  9894  00A340  6ADE               	clrf	postinc2,c
  9895  00A342  6ADD               	clrf	postdec2,c
  9896                           
  9897                           ;fat_format.c: 498: if (!fatfs_create_boot_sector(fs, fs->lba_begin, volume_sectors, nam
      +                          e, 1))
  9898  00A344  C03D  F021         	movff	fatfs_format_fat32@fs+1,fatfs_create_boot_sector@fs+1
  9899  00A348  C03C  F020         	movff	fatfs_format_fat32@fs,fatfs_create_boot_sector@fs
  9900  00A34C  EE20 F017          	lfsr	2,23
  9901  00A350  503C               	movf	fatfs_format_fat32@fs,w,c
  9902  00A352  26D9               	addwf	fsr2l,f,c
  9903  00A354  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9904  00A356  22DA               	addwfc	fsr2h,f,c
  9905  00A358  CFDE F022          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba
  9906  00A35C  CFDE F023          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba+1
  9907  00A360  CFDE F024          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba+2
  9908  00A364  CFDE F025          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba+3
  9909  00A368  C03E  F026         	movff	fatfs_format_fat32@volume_sectors,fatfs_create_boot_sector@vol_sectors
  9910  00A36C  C03F  F027         	movff	fatfs_format_fat32@volume_sectors+1,fatfs_create_boot_sector@vol_sectors+1
  9911  00A370  C040  F028         	movff	fatfs_format_fat32@volume_sectors+2,fatfs_create_boot_sector@vol_sectors+2
  9912  00A374  C041  F029         	movff	fatfs_format_fat32@volume_sectors+3,fatfs_create_boot_sector@vol_sectors+3
  9913  00A378  C043  F02B         	movff	fatfs_format_fat32@name+1,fatfs_create_boot_sector@name+1
  9914  00A37C  C042  F02A         	movff	fatfs_format_fat32@name,fatfs_create_boot_sector@name
  9915  00A380  6A2D               	clrf	fatfs_create_boot_sector@is_fat32+1,c
  9916  00A382  0E01               	movlw	1
  9917  00A384  6E2C               	movwf	fatfs_create_boot_sector@is_fat32,c
  9918  00A386  EC5F  F070         	call	_fatfs_create_boot_sector	;wreg free
  9919  00A38A  5021               	movf	?_fatfs_create_boot_sector+1,w,c
  9920  00A38C  1020               	iorwf	?_fatfs_create_boot_sector,w,c
  9921  00A38E  E101 D105          	bz	u12660
  9922                           
  9923                           ;fat_format.c: 502: fs->fat_begin_lba = fs->lba_begin + fs->reserved_sectors;
  9924                           
  9925                           ;fat_format.c: 499: return 0;
  9926  00A392  EE20 F017          	lfsr	2,23
  9927  00A396  503C               	movf	fatfs_format_fat32@fs,w,c
  9928  00A398  26D9               	addwf	fsr2l,f,c
  9929  00A39A  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9930  00A39C  22DA               	addwfc	fsr2h,f,c
  9931  00A39E  CFDE F044          	movff	postinc2,??_fatfs_format_fat32
  9932  00A3A2  CFDE F045          	movff	postinc2,??_fatfs_format_fat32+1
  9933  00A3A6  CFDE F046          	movff	postinc2,??_fatfs_format_fat32+2
  9934  00A3AA  CFDE F047          	movff	postinc2,??_fatfs_format_fat32+3
  9935  00A3AE  EE20 F025          	lfsr	2,37
  9936  00A3B2  503C               	movf	fatfs_format_fat32@fs,w,c
  9937  00A3B4  26D9               	addwf	fsr2l,f,c
  9938  00A3B6  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9939  00A3B8  22DA               	addwfc	fsr2h,f,c
  9940  00A3BA  CFDE F048          	movff	postinc2,??_fatfs_format_fat32+4
  9941  00A3BE  CFDD F049          	movff	postdec2,??_fatfs_format_fat32+5
  9942  00A3C2  5048               	movf	??_fatfs_format_fat32+4,w,c
  9943  00A3C4  2444               	addwf	??_fatfs_format_fat32,w,c
  9944  00A3C6  6E4A               	movwf	(??_fatfs_format_fat32+6)& (0+255),c
  9945  00A3C8  5049               	movf	??_fatfs_format_fat32+5,w,c
  9946  00A3CA  2045               	addwfc	??_fatfs_format_fat32+1,w,c
  9947  00A3CC  6E4B               	movwf	(??_fatfs_format_fat32+7)& (0+255),c
  9948  00A3CE  0E00               	movlw	0
  9949  00A3D0  2046               	addwfc	??_fatfs_format_fat32+2,w,c
  9950  00A3D2  6E4C               	movwf	(??_fatfs_format_fat32+8)& (0+255),c
  9951  00A3D4  0E00               	movlw	0
  9952  00A3D6  2047               	addwfc	??_fatfs_format_fat32+3,w,c
  9953  00A3D8  6E4D               	movwf	(??_fatfs_format_fat32+9)& (0+255),c
  9954  00A3DA  EE20 F011          	lfsr	2,17
  9955  00A3DE  503C               	movf	fatfs_format_fat32@fs,w,c
  9956  00A3E0  26D9               	addwf	fsr2l,f,c
  9957  00A3E2  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9958  00A3E4  22DA               	addwfc	fsr2h,f,c
  9959  00A3E6  C04A  FFDE         	movff	??_fatfs_format_fat32+6,postinc2
  9960  00A3EA  C04B  FFDE         	movff	??_fatfs_format_fat32+7,postinc2
  9961  00A3EE  C04C  FFDE         	movff	??_fatfs_format_fat32+8,postinc2
  9962  00A3F2  C04D  FFDD         	movff	??_fatfs_format_fat32+9,postdec2
  9963  00A3F6  06D9               	decf	fsr2l,f,c
  9964  00A3F8  06D9               	decf	fsr2l,f,c
  9965                           
  9966                           ;fat_format.c: 505: fs->cluster_begin_lba = fs->fat_begin_lba + (fs->num_of_fats * fs->f
      +                          at_sectors);
  9967  00A3FA  EE20 F011          	lfsr	2,17
  9968  00A3FE  503C               	movf	fatfs_format_fat32@fs,w,c
  9969  00A400  26D9               	addwf	fsr2l,f,c
  9970  00A402  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9971  00A404  22DA               	addwfc	fsr2h,f,c
  9972  00A406  CFDE F044          	movff	postinc2,??_fatfs_format_fat32
  9973  00A40A  CFDE F045          	movff	postinc2,??_fatfs_format_fat32+1
  9974  00A40E  CFDE F046          	movff	postinc2,??_fatfs_format_fat32+2
  9975  00A412  CFDE F047          	movff	postinc2,??_fatfs_format_fat32+3
  9976  00A416  EE20 F01B          	lfsr	2,27
  9977  00A41A  503C               	movf	fatfs_format_fat32@fs,w,c
  9978  00A41C  26D9               	addwf	fsr2l,f,c
  9979  00A41E  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9980  00A420  22DA               	addwfc	fsr2h,f,c
  9981  00A422  CFDE F048          	movff	postinc2,??_fatfs_format_fat32+4
  9982  00A426  CFDE F049          	movff	postinc2,??_fatfs_format_fat32+5
  9983  00A42A  CFDE F04A          	movff	postinc2,??_fatfs_format_fat32+6
  9984  00A42E  CFDE F04B          	movff	postinc2,??_fatfs_format_fat32+7
  9985  00A432  EE20 F027          	lfsr	2,39
  9986  00A436  503C               	movf	fatfs_format_fat32@fs,w,c
  9987  00A438  26D9               	addwf	fsr2l,f,c
  9988  00A43A  503D               	movf	fatfs_format_fat32@fs+1,w,c
  9989  00A43C  22DA               	addwfc	fsr2h,f,c
  9990  00A43E  50DF               	movf	indf2,w,c
  9991  00A440  6E4C               	movwf	(??_fatfs_format_fat32+8)& (0+255),c
  9992  00A442  C04C  F04D         	movff	??_fatfs_format_fat32+8,??_fatfs_format_fat32+9
  9993  00A446  6A4E               	clrf	(??_fatfs_format_fat32+10)& (0+255),c
  9994  00A448  6A4F               	clrf	(??_fatfs_format_fat32+11)& (0+255),c
  9995  00A44A  6A50               	clrf	(??_fatfs_format_fat32+12)& (0+255),c
  9996  00A44C  504D               	movf	??_fatfs_format_fat32+9,w,c
  9997  00A44E  0248               	mulwf	??_fatfs_format_fat32+4,c
  9998  00A450  CFF3 F051          	movff	prodl,??_fatfs_format_fat32+13
  9999  00A454  CFF4 F052          	movff	prodh,??_fatfs_format_fat32+14
 10000  00A458  6A53               	clrf	(??_fatfs_format_fat32+15)& (0+255),c
 10001  00A45A  6A54               	clrf	(??_fatfs_format_fat32+16)& (0+255),c
 10002  00A45C  0249               	mulwf	??_fatfs_format_fat32+5,c
 10003  00A45E  50F3               	movf	243,w,c
 10004  00A460  2652               	addwf	(??_fatfs_format_fat32+14)& (0+255),f,c
 10005  00A462  50F4               	movf	244,w,c
 10006  00A464  2253               	addwfc	(??_fatfs_format_fat32+15)& (0+255),f,c
 10007  00A466  0E00               	movlw	0
 10008  00A468  2254               	addwfc	(??_fatfs_format_fat32+16)& (0+255),f,c
 10009  00A46A  504E               	movf	??_fatfs_format_fat32+10,w,c
 10010  00A46C  0248               	mulwf	??_fatfs_format_fat32+4,c
 10011  00A46E  50F3               	movf	243,w,c
 10012  00A470  2652               	addwf	(??_fatfs_format_fat32+14)& (0+255),f,c
 10013  00A472  50F4               	movf	244,w,c
 10014  00A474  2253               	addwfc	(??_fatfs_format_fat32+15)& (0+255),f,c
 10015  00A476  0E00               	movlw	0
 10016  00A478  2254               	addwfc	(??_fatfs_format_fat32+16)& (0+255),f,c
 10017  00A47A  504D               	movf	??_fatfs_format_fat32+9,w,c
 10018  00A47C  024A               	mulwf	??_fatfs_format_fat32+6,c
 10019  00A47E  50F3               	movf	243,w,c
 10020  00A480  2653               	addwf	(??_fatfs_format_fat32+15)& (0+255),f,c
 10021  00A482  50F4               	movf	244,w,c
 10022  00A484  2254               	addwfc	(??_fatfs_format_fat32+16)& (0+255),f,c
 10023  00A486  504E               	movf	??_fatfs_format_fat32+10,w,c
 10024  00A488  0249               	mulwf	??_fatfs_format_fat32+5,c
 10025  00A48A  50F3               	movf	243,w,c
 10026  00A48C  2653               	addwf	(??_fatfs_format_fat32+15)& (0+255),f,c
 10027  00A48E  50F4               	movf	244,w,c
 10028  00A490  2254               	addwfc	(??_fatfs_format_fat32+16)& (0+255),f,c
 10029  00A492  504F               	movf	??_fatfs_format_fat32+11,w,c
 10030  00A494  0248               	mulwf	??_fatfs_format_fat32+4,c
 10031  00A496  50F3               	movf	243,w,c
 10032  00A498  2653               	addwf	(??_fatfs_format_fat32+15)& (0+255),f,c
 10033  00A49A  50F4               	movf	244,w,c
 10034  00A49C  2254               	addwfc	(??_fatfs_format_fat32+16)& (0+255),f,c
 10035  00A49E  504B               	movf	??_fatfs_format_fat32+7,w,c
 10036  00A4A0  024D               	mulwf	??_fatfs_format_fat32+9,c
 10037  00A4A2  50F3               	movf	243,w,c
 10038  00A4A4  2654               	addwf	(??_fatfs_format_fat32+16)& (0+255),f,c
 10039  00A4A6  504E               	movf	??_fatfs_format_fat32+10,w,c
 10040  00A4A8  024A               	mulwf	??_fatfs_format_fat32+6,c
 10041  00A4AA  50F3               	movf	243,w,c
 10042  00A4AC  2654               	addwf	(??_fatfs_format_fat32+16)& (0+255),f,c
 10043  00A4AE  504F               	movf	??_fatfs_format_fat32+11,w,c
 10044  00A4B0  0249               	mulwf	??_fatfs_format_fat32+5,c
 10045  00A4B2  50F3               	movf	243,w,c
 10046  00A4B4  2654               	addwf	(??_fatfs_format_fat32+16)& (0+255),f,c
 10047  00A4B6  5050               	movf	??_fatfs_format_fat32+12,w,c
 10048  00A4B8  0248               	mulwf	??_fatfs_format_fat32+4,c
 10049  00A4BA  50F3               	movf	243,w,c
 10050  00A4BC  2654               	addwf	(??_fatfs_format_fat32+16)& (0+255),f,c
 10051  00A4BE  5044               	movf	??_fatfs_format_fat32,w,c
 10052  00A4C0  2451               	addwf	??_fatfs_format_fat32+13,w,c
 10053  00A4C2  6E55               	movwf	(??_fatfs_format_fat32+17)& (0+255),c
 10054  00A4C4  5045               	movf	??_fatfs_format_fat32+1,w,c
 10055  00A4C6  2052               	addwfc	??_fatfs_format_fat32+14,w,c
 10056  00A4C8  6E56               	movwf	(??_fatfs_format_fat32+18)& (0+255),c
 10057  00A4CA  5046               	movf	??_fatfs_format_fat32+2,w,c
 10058  00A4CC  2053               	addwfc	??_fatfs_format_fat32+15,w,c
 10059  00A4CE  6E57               	movwf	(??_fatfs_format_fat32+19)& (0+255),c
 10060  00A4D0  5047               	movf	??_fatfs_format_fat32+3,w,c
 10061  00A4D2  2054               	addwfc	??_fatfs_format_fat32+16,w,c
 10062  00A4D4  6E58               	movwf	(??_fatfs_format_fat32+20)& (0+255),c
 10063  00A4D6  EE20 F001          	lfsr	2,1
 10064  00A4DA  503C               	movf	fatfs_format_fat32@fs,w,c
 10065  00A4DC  26D9               	addwf	fsr2l,f,c
 10066  00A4DE  503D               	movf	fatfs_format_fat32@fs+1,w,c
 10067  00A4E0  22DA               	addwfc	fsr2h,f,c
 10068  00A4E2  C055  FFDE         	movff	??_fatfs_format_fat32+17,postinc2
 10069  00A4E6  C056  FFDE         	movff	??_fatfs_format_fat32+18,postinc2
 10070  00A4EA  C057  FFDE         	movff	??_fatfs_format_fat32+19,postinc2
 10071  00A4EE  C058  FFDD         	movff	??_fatfs_format_fat32+20,postdec2
 10072  00A4F2  06D9               	decf	fsr2l,f,c
 10073  00A4F4  06D9               	decf	fsr2l,f,c
 10074                           
 10075                           ;fat_format.c: 508: if (!fatfs_create_fsinfo_sector(fs, fs->fs_info_sector))
 10076  00A4F6  C03D  F021         	movff	fatfs_format_fat32@fs+1,fatfs_create_fsinfo_sector@fs+1
 10077  00A4FA  C03C  F020         	movff	fatfs_format_fat32@fs,fatfs_create_fsinfo_sector@fs
 10078  00A4FE  EE20 F015          	lfsr	2,21
 10079  00A502  503C               	movf	fatfs_format_fat32@fs,w,c
 10080  00A504  26D9               	addwf	fsr2l,f,c
 10081  00A506  503D               	movf	fatfs_format_fat32@fs+1,w,c
 10082  00A508  22DA               	addwfc	fsr2h,f,c
 10083  00A50A  CFDE F044          	movff	postinc2,??_fatfs_format_fat32
 10084  00A50E  CFDD F045          	movff	postdec2,??_fatfs_format_fat32+1
 10085  00A512  C044  F022         	movff	??_fatfs_format_fat32,fatfs_create_fsinfo_sector@sector_lba
 10086  00A516  C045  F023         	movff	??_fatfs_format_fat32+1,fatfs_create_fsinfo_sector@sector_lba+1
 10087  00A51A  6A24               	clrf	fatfs_create_fsinfo_sector@sector_lba+2,c
 10088  00A51C  6A25               	clrf	fatfs_create_fsinfo_sector@sector_lba+3,c
 10089  00A51E  EC3E  F038         	call	_fatfs_create_fsinfo_sector	;wreg free
 10090  00A522  5021               	movf	?_fatfs_create_fsinfo_sector+1,w,c
 10091  00A524  1020               	iorwf	?_fatfs_create_fsinfo_sector,w,c
 10092  00A526  E03A               	bz	u12660
 10093                           
 10094                           ;fat_format.c: 512: if (!fatfs_erase_fat(fs, 1))
 10095                           
 10096                           ;fat_format.c: 509: return 0;
 10097  00A528  C03D  F021         	movff	fatfs_format_fat32@fs+1,fatfs_erase_fat@fs+1
 10098  00A52C  C03C  F020         	movff	fatfs_format_fat32@fs,fatfs_erase_fat@fs
 10099  00A530  6A23               	clrf	fatfs_erase_fat@is_fat32+1,c
 10100  00A532  0E01               	movlw	1
 10101  00A534  6E22               	movwf	fatfs_erase_fat@is_fat32,c
 10102  00A536  EC35  F04B         	call	_fatfs_erase_fat	;wreg free
 10103  00A53A  5021               	movf	?_fatfs_erase_fat+1,w,c
 10104  00A53C  1020               	iorwf	?_fatfs_erase_fat,w,c
 10105  00A53E  E02E               	bz	u12660
 10106                           
 10107                           ;fat_format.c: 516: if (!fatfs_erase_sectors(fs, fatfs_lba_of_cluster(fs, fs->rootdir_fi
      +                          rst_cluster), fs->sectors_per_cluster))
 10108                           
 10109                           ;fat_format.c: 513: return 0;
 10110  00A540  C03D  F021         	movff	fatfs_format_fat32@fs+1,fatfs_erase_sectors@fs+1
 10111  00A544  C03C  F020         	movff	fatfs_format_fat32@fs,fatfs_erase_sectors@fs
 10112  00A548  C03D  F002         	movff	fatfs_format_fat32@fs+1,fatfs_lba_of_cluster@fs+1
 10113  00A54C  C03C  F001         	movff	fatfs_format_fat32@fs,fatfs_lba_of_cluster@fs
 10114  00A550  EE20 F005          	lfsr	2,5
 10115  00A554  503C               	movf	fatfs_format_fat32@fs,w,c
 10116  00A556  26D9               	addwf	fsr2l,f,c
 10117  00A558  503D               	movf	fatfs_format_fat32@fs+1,w,c
 10118  00A55A  22DA               	addwfc	fsr2h,f,c
 10119  00A55C  CFDE F003          	movff	postinc2,fatfs_lba_of_cluster@Cluster_Number
 10120  00A560  CFDE F004          	movff	postinc2,fatfs_lba_of_cluster@Cluster_Number+1
 10121  00A564  CFDE F005          	movff	postinc2,fatfs_lba_of_cluster@Cluster_Number+2
 10122  00A568  CFDE F006          	movff	postinc2,fatfs_lba_of_cluster@Cluster_Number+3
 10123  00A56C  EC4C  F03F         	call	_fatfs_lba_of_cluster	;wreg free
 10124  00A570  C001  F022         	movff	?_fatfs_lba_of_cluster,fatfs_erase_sectors@lba
 10125  00A574  C002  F023         	movff	?_fatfs_lba_of_cluster+1,fatfs_erase_sectors@lba+1
 10126  00A578  C003  F024         	movff	?_fatfs_lba_of_cluster+2,fatfs_erase_sectors@lba+2
 10127  00A57C  C004  F025         	movff	?_fatfs_lba_of_cluster+3,fatfs_erase_sectors@lba+3
 10128  00A580  C03C  FFD9         	movff	fatfs_format_fat32@fs,fsr2l
 10129  00A584  C03D  FFDA         	movff	fatfs_format_fat32@fs+1,fsr2h
 10130  00A588  50DF               	movf	indf2,w,c
 10131  00A58A  6E44               	movwf	??_fatfs_format_fat32& (0+255),c
 10132  00A58C  5044               	movf	??_fatfs_format_fat32,w,c
 10133  00A58E  6E26               	movwf	fatfs_erase_sectors@count,c
 10134  00A590  6A27               	clrf	fatfs_erase_sectors@count+1,c
 10135  00A592  EC09  F02E         	call	_fatfs_erase_sectors	;wreg free
 10136  00A596  5021               	movf	?_fatfs_erase_sectors+1,w,c
 10137  00A598  1020               	iorwf	?_fatfs_erase_sectors,w,c
 10138  00A59A  E103               	bnz	l11017
 10139  00A59C                     u12660:
 10140                           
 10141                           ;fat_format.c: 517: return 0;
 10142  00A59C  0E00               	movlw	0
 10143  00A59E  6E3D               	movwf	?_fatfs_format_fat32+1,c
 10144  00A5A0  D003               	goto	L23
 10145  00A5A2                     l11017:
 10146                           
 10147                           ;fat_format.c: 519: return 1;
 10148  00A5A2  0E00               	movlw	0
 10149  00A5A4  6E3D               	movwf	?_fatfs_format_fat32+1,c
 10150  00A5A6  0E01               	movlw	1
 10151  00A5A8                     L23:
 10152  00A5A8  6E3C               	movwf	?_fatfs_format_fat32,c
 10153  00A5AA                     l913:
 10154  00A5AA  0012               	return	
 10155  00A5AC                     __end_of_fatfs_format_fat32:
 10156                           	opt stack 0
 10157                           tosu	equ	0xFFF
 10158                           tosh	equ	0xFFE
 10159                           tosl	equ	0xFFD
 10160                           pclath	equ	0xFFA
 10161                           tblptru	equ	0xFF8
 10162                           tblptrh	equ	0xFF7
 10163                           tblptrl	equ	0xFF6
 10164                           tablat	equ	0xFF5
 10165                           prodh	equ	0xFF4
 10166                           prodl	equ	0xFF3
 10167                           indf0	equ	0xFEF
 10168                           postinc0	equ	0xFEE
 10169                           fsr0h	equ	0xFEA
 10170                           fsr0l	equ	0xFE9
 10171                           wreg	equ	0xFE8
 10172                           indf1	equ	0xFE7
 10173                           postinc1	equ	0xFE6
 10174                           postdec1	equ	0xFE5
 10175                           fsr1h	equ	0xFE2
 10176                           fsr1l	equ	0xFE1
 10177                           indf2	equ	0xFDF
 10178                           postinc2	equ	0xFDE
 10179                           postdec2	equ	0xFDD
 10180                           fsr2h	equ	0xFDA
 10181                           fsr2l	equ	0xFD9
 10182                           status	equ	0xFD8
 10183                           
 10184 ;; *************** function _fatfs_create_fsinfo_sector *****************
 10185 ;; Defined at:
 10186 ;;		line 351 in file "fat_format.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;  fs              2   31[COMRAM] PTR struct fatfs
 10189 ;;		 -> _fs(1095), 
 10190 ;;  sector_lba      4   33[COMRAM] unsigned long 
 10191 ;; Auto vars:     Size  Location     Type
 10192 ;;		None
 10193 ;; Return value:  Size  Location     Type
 10194 ;;                  2   31[COMRAM] int 
 10195 ;; Registers used:
 10196 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 10197 ;; Tracked objects:
 10198 ;;		On entry : 0/0
 10199 ;;		On exit  : 0/0
 10200 ;;		Unchanged: 0/0
 10201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10202 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10204 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10206 ;;Total ram usage:       10 bytes
 10207 ;; Hardware stack levels used:    1
 10208 ;; Hardware stack levels required when called:    3
 10209 ;; This function calls:
 10210 ;;		_media_write
 10211 ;;		_memset
 10212 ;; This function is called by:
 10213 ;;		_fatfs_format_fat32
 10214 ;; This function uses a non-reentrant model
 10215 ;;
 10216                           
 10217                           	psect	text25
 10218  00707C                     __ptext25:
 10219                           	opt stack 0
 10220  00707C                     _fatfs_create_fsinfo_sector:
 10221                           	opt stack 21
 10222                           
 10223                           ;fat_format.c: 354: memset(fs->currentsector.sector, 0, 512);
 10224                           
 10225                           ;incstack = 0
 10226  00707C  0E31               	movlw	49
 10227  00707E  2420               	addwf	fatfs_create_fsinfo_sector@fs,w,c
 10228  007080  6E01               	movwf	memset@p1,c
 10229  007082  0E00               	movlw	0
 10230  007084  2021               	addwfc	fatfs_create_fsinfo_sector@fs+1,w,c
 10231  007086  6E02               	movwf	memset@p1+1,c
 10232  007088  6A04               	clrf	memset@c+1,c
 10233  00708A  6A03               	clrf	memset@c,c
 10234  00708C  0E02               	movlw	2
 10235  00708E  6E06               	movwf	memset@n+1,c
 10236  007090  0E00               	movlw	0
 10237  007092  6A05               	clrf	memset@n,c
 10238  007094  EC24  F020         	call	_memset	;wreg free
 10239                           
 10240                           ;fat_format.c: 357: fs->currentsector.sector[0] = 0x52;
 10241  007098  EE20 F031          	lfsr	2,49
 10242  00709C  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10243  00709E  26D9               	addwf	fsr2l,f,c
 10244  0070A0  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10245  0070A2  22DA               	addwfc	fsr2h,f,c
 10246  0070A4  0E52               	movlw	82
 10247  0070A6  6EDF               	movwf	indf2,c
 10248                           
 10249                           ;fat_format.c: 358: fs->currentsector.sector[1] = 0x52;
 10250  0070A8  EE20 F032          	lfsr	2,50
 10251  0070AC  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10252  0070AE  26D9               	addwf	fsr2l,f,c
 10253  0070B0  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10254  0070B2  22DA               	addwfc	fsr2h,f,c
 10255  0070B4  0E52               	movlw	82
 10256  0070B6  6EDF               	movwf	indf2,c
 10257                           
 10258                           ;fat_format.c: 359: fs->currentsector.sector[2] = 0x61;
 10259  0070B8  EE20 F033          	lfsr	2,51
 10260  0070BC  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10261  0070BE  26D9               	addwf	fsr2l,f,c
 10262  0070C0  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10263  0070C2  22DA               	addwfc	fsr2h,f,c
 10264  0070C4  0E61               	movlw	97
 10265  0070C6  6EDF               	movwf	indf2,c
 10266                           
 10267                           ;fat_format.c: 360: fs->currentsector.sector[3] = 0x41;
 10268  0070C8  EE20 F034          	lfsr	2,52
 10269  0070CC  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10270  0070CE  26D9               	addwf	fsr2l,f,c
 10271  0070D0  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10272  0070D2  22DA               	addwfc	fsr2h,f,c
 10273  0070D4  0E41               	movlw	65
 10274  0070D6  6EDF               	movwf	indf2,c
 10275                           
 10276                           ;fat_format.c: 363: fs->currentsector.sector[484] = 0x72;
 10277  0070D8  EE22 F015          	lfsr	2,533
 10278  0070DC  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10279  0070DE  26D9               	addwf	fsr2l,f,c
 10280  0070E0  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10281  0070E2  22DA               	addwfc	fsr2h,f,c
 10282  0070E4  0E72               	movlw	114
 10283  0070E6  6EDF               	movwf	indf2,c
 10284                           
 10285                           ;fat_format.c: 364: fs->currentsector.sector[485] = 0x72;
 10286  0070E8  EE22 F016          	lfsr	2,534
 10287  0070EC  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10288  0070EE  26D9               	addwf	fsr2l,f,c
 10289  0070F0  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10290  0070F2  22DA               	addwfc	fsr2h,f,c
 10291  0070F4  0E72               	movlw	114
 10292  0070F6  6EDF               	movwf	indf2,c
 10293                           
 10294                           ;fat_format.c: 365: fs->currentsector.sector[486] = 0x41;
 10295  0070F8  EE22 F017          	lfsr	2,535
 10296  0070FC  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10297  0070FE  26D9               	addwf	fsr2l,f,c
 10298  007100  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10299  007102  22DA               	addwfc	fsr2h,f,c
 10300  007104  0E41               	movlw	65
 10301  007106  6EDF               	movwf	indf2,c
 10302                           
 10303                           ;fat_format.c: 366: fs->currentsector.sector[487] = 0x61;
 10304  007108  EE22 F018          	lfsr	2,536
 10305  00710C  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10306  00710E  26D9               	addwf	fsr2l,f,c
 10307  007110  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10308  007112  22DA               	addwfc	fsr2h,f,c
 10309  007114  0E61               	movlw	97
 10310  007116  6EDF               	movwf	indf2,c
 10311                           
 10312                           ;fat_format.c: 369: fs->currentsector.sector[488] = 0xFF;
 10313  007118  EE22 F019          	lfsr	2,537
 10314  00711C  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10315  00711E  26D9               	addwf	fsr2l,f,c
 10316  007120  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10317  007122  22DA               	addwfc	fsr2h,f,c
 10318  007124  68DF               	setf	indf2,c
 10319                           
 10320                           ;fat_format.c: 370: fs->currentsector.sector[489] = 0xFF;
 10321  007126  EE22 F01A          	lfsr	2,538
 10322  00712A  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10323  00712C  26D9               	addwf	fsr2l,f,c
 10324  00712E  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10325  007130  22DA               	addwfc	fsr2h,f,c
 10326  007132  68DF               	setf	indf2,c
 10327                           
 10328                           ;fat_format.c: 371: fs->currentsector.sector[490] = 0xFF;
 10329  007134  EE22 F01B          	lfsr	2,539
 10330  007138  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10331  00713A  26D9               	addwf	fsr2l,f,c
 10332  00713C  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10333  00713E  22DA               	addwfc	fsr2h,f,c
 10334  007140  68DF               	setf	indf2,c
 10335                           
 10336                           ;fat_format.c: 372: fs->currentsector.sector[491] = 0xFF;
 10337  007142  EE22 F01C          	lfsr	2,540
 10338  007146  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10339  007148  26D9               	addwf	fsr2l,f,c
 10340  00714A  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10341  00714C  22DA               	addwfc	fsr2h,f,c
 10342  00714E  68DF               	setf	indf2,c
 10343                           
 10344                           ;fat_format.c: 375: fs->currentsector.sector[492] = 0xFF;
 10345  007150  EE22 F01D          	lfsr	2,541
 10346  007154  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10347  007156  26D9               	addwf	fsr2l,f,c
 10348  007158  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10349  00715A  22DA               	addwfc	fsr2h,f,c
 10350  00715C  68DF               	setf	indf2,c
 10351                           
 10352                           ;fat_format.c: 376: fs->currentsector.sector[493] = 0xFF;
 10353  00715E  EE22 F01E          	lfsr	2,542
 10354  007162  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10355  007164  26D9               	addwf	fsr2l,f,c
 10356  007166  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10357  007168  22DA               	addwfc	fsr2h,f,c
 10358  00716A  68DF               	setf	indf2,c
 10359                           
 10360                           ;fat_format.c: 377: fs->currentsector.sector[494] = 0xFF;
 10361  00716C  EE22 F01F          	lfsr	2,543
 10362  007170  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10363  007172  26D9               	addwf	fsr2l,f,c
 10364  007174  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10365  007176  22DA               	addwfc	fsr2h,f,c
 10366  007178  68DF               	setf	indf2,c
 10367                           
 10368                           ;fat_format.c: 378: fs->currentsector.sector[495] = 0xFF;
 10369  00717A  EE22 F020          	lfsr	2,544
 10370  00717E  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10371  007180  26D9               	addwf	fsr2l,f,c
 10372  007182  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10373  007184  22DA               	addwfc	fsr2h,f,c
 10374  007186  68DF               	setf	indf2,c
 10375                           
 10376                           ;fat_format.c: 381: fs->currentsector.sector[510] = 0x55;
 10377  007188  EE22 F02F          	lfsr	2,559
 10378  00718C  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10379  00718E  26D9               	addwf	fsr2l,f,c
 10380  007190  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10381  007192  22DA               	addwfc	fsr2h,f,c
 10382  007194  0E55               	movlw	85
 10383  007196  6EDF               	movwf	indf2,c
 10384                           
 10385                           ;fat_format.c: 382: fs->currentsector.sector[511] = 0xAA;
 10386  007198  EE22 F030          	lfsr	2,560
 10387  00719C  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10388  00719E  26D9               	addwf	fsr2l,f,c
 10389  0071A0  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10390  0071A2  22DA               	addwfc	fsr2h,f,c
 10391  0071A4  0EAA               	movlw	170
 10392  0071A6  6EDF               	movwf	indf2,c
 10393                           
 10394                           ;fat_format.c: 384: if (fs->disk_io.write_media(sector_lba, fs->currentsector.sector, 1)
      +                          )
 10395  0071A8  C022  F009         	movff	fatfs_create_fsinfo_sector@sector_lba,media_write@sector
 10396  0071AC  C023  F00A         	movff	fatfs_create_fsinfo_sector@sector_lba+1,media_write@sector+1
 10397  0071B0  C024  F00B         	movff	fatfs_create_fsinfo_sector@sector_lba+2,media_write@sector+2
 10398  0071B4  C025  F00C         	movff	fatfs_create_fsinfo_sector@sector_lba+3,media_write@sector+3
 10399  0071B8  0E31               	movlw	49
 10400  0071BA  2420               	addwf	fatfs_create_fsinfo_sector@fs,w,c
 10401  0071BC  6E26               	movwf	??_fatfs_create_fsinfo_sector& (0+255),c
 10402  0071BE  0E00               	movlw	0
 10403  0071C0  2021               	addwfc	fatfs_create_fsinfo_sector@fs+1,w,c
 10404  0071C2  6E27               	movwf	(??_fatfs_create_fsinfo_sector+1)& (0+255),c
 10405  0071C4  0E20               	movlw	32
 10406  0071C6  6E0F               	movwf	media_write@buffer+2,c
 10407  0071C8  C027  F00E         	movff	??_fatfs_create_fsinfo_sector+1,media_write@buffer+1
 10408  0071CC  C026  F00D         	movff	??_fatfs_create_fsinfo_sector,media_write@buffer
 10409  0071D0  0E01               	movlw	1
 10410  0071D2  6E10               	movwf	media_write@sector_count,c
 10411  0071D4  6A11               	clrf	media_write@sector_count+1,c
 10412  0071D6  6A12               	clrf	media_write@sector_count+2,c
 10413  0071D8  6A13               	clrf	media_write@sector_count+3,c
 10414  0071DA  EE20 F02B          	lfsr	2,43
 10415  0071DE  5020               	movf	fatfs_create_fsinfo_sector@fs,w,c
 10416  0071E0  26D9               	addwf	fsr2l,f,c
 10417  0071E2  5021               	movf	fatfs_create_fsinfo_sector@fs+1,w,c
 10418  0071E4  22DA               	addwfc	fsr2h,f,c
 10419  0071E6  CFDE F028          	movff	postinc2,??_fatfs_create_fsinfo_sector+2
 10420  0071EA  CFDD F029          	movff	postdec2,??_fatfs_create_fsinfo_sector+3
 10421  0071EE  D801               	call	u11248
 10422  0071F0  D009               	goto	u11249
 10423  0071F2                     u11248:
 10424  0071F2  0005               	push	
 10425  0071F4  6EFA               	movwf	pclath,c
 10426  0071F6  5028               	movf	??_fatfs_create_fsinfo_sector+2,w,c
 10427  0071F8  6EFD               	movwf	tosl,c
 10428  0071FA  5029               	movf	??_fatfs_create_fsinfo_sector+3,w,c
 10429  0071FC  6EFE               	movwf	tosh,c
 10430  0071FE  6AFF               	clrf	tosu,c
 10431  007200  50FA               	movf	pclath,w,c
 10432  007202  0012               	return		;indir
 10433  007204                     u11249:
 10434  007204  500A               	movf	?_media_write+1,w,c
 10435  007206  1009               	iorwf	?_media_write,w,c
 10436  007208  E004               	bz	l10127
 10437                           
 10438                           ;fat_format.c: 385: return 1;
 10439  00720A  0E00               	movlw	0
 10440  00720C  6E21               	movwf	?_fatfs_create_fsinfo_sector+1,c
 10441  00720E  0E01               	movlw	1
 10442  007210  D002               	goto	L24
 10443  007212                     l10127:
 10444                           
 10445                           ;fat_format.c: 386: else
 10446                           ;fat_format.c: 387: return 0;
 10447  007212  0E00               	movlw	0
 10448  007214  6E21               	movwf	?_fatfs_create_fsinfo_sector+1,c
 10449  007216                     L24:
 10450  007216  6E20               	movwf	?_fatfs_create_fsinfo_sector,c
 10451  007218  0012               	return	
 10452  00721A                     __end_of_fatfs_create_fsinfo_sector:
 10453                           	opt stack 0
 10454                           tosu	equ	0xFFF
 10455                           tosh	equ	0xFFE
 10456                           tosl	equ	0xFFD
 10457                           pclath	equ	0xFFA
 10458                           tblptru	equ	0xFF8
 10459                           tblptrh	equ	0xFF7
 10460                           tblptrl	equ	0xFF6
 10461                           tablat	equ	0xFF5
 10462                           prodh	equ	0xFF4
 10463                           prodl	equ	0xFF3
 10464                           indf0	equ	0xFEF
 10465                           postinc0	equ	0xFEE
 10466                           fsr0h	equ	0xFEA
 10467                           fsr0l	equ	0xFE9
 10468                           wreg	equ	0xFE8
 10469                           indf1	equ	0xFE7
 10470                           postinc1	equ	0xFE6
 10471                           postdec1	equ	0xFE5
 10472                           fsr1h	equ	0xFE2
 10473                           fsr1l	equ	0xFE1
 10474                           indf2	equ	0xFDF
 10475                           postinc2	equ	0xFDE
 10476                           postdec2	equ	0xFDD
 10477                           fsr2h	equ	0xFDA
 10478                           fsr2l	equ	0xFD9
 10479                           status	equ	0xFD8
 10480                           
 10481 ;; *************** function _fatfs_format_fat16 *****************
 10482 ;; Defined at:
 10483 ;;		line 426 in file "fat_format.c"
 10484 ;; Parameters:    Size  Location     Type
 10485 ;;  fs              2   59[COMRAM] PTR struct fatfs
 10486 ;;		 -> _fs(1095), 
 10487 ;;  volume_secto    4   61[COMRAM] unsigned long 
 10488 ;;  name            2   65[COMRAM] PTR const unsigned char 
 10489 ;;		 -> STR_60(6), 
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;		None
 10492 ;; Return value:  Size  Location     Type
 10493 ;;                  2   59[COMRAM] int 
 10494 ;; Registers used:
 10495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10501 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10503 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10504 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10505 ;;Total ram usage:       29 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; Hardware stack levels required when called:    4
 10508 ;; This function calls:
 10509 ;;		_fatfs_create_boot_sector
 10510 ;;		_fatfs_erase_fat
 10511 ;;		_fatfs_erase_sectors
 10512 ;;		_fatfs_fat_init
 10513 ;; This function is called by:
 10514 ;;		_fatfs_format
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518                           	psect	text26
 10519  00BC34                     __ptext26:
 10520                           	opt stack 0
 10521  00BC34                     _fatfs_format_fat16:
 10522                           	opt stack 21
 10523                           
 10524                           ;fat_format.c: 428: fs->currentsector.address = 0xFFFFFFFF;
 10525                           
 10526                           ;incstack = 0
 10527  00BC34  EE22 F031          	lfsr	2,561
 10528  00BC38  503C               	movf	fatfs_format_fat16@fs,w,c
 10529  00BC3A  26D9               	addwf	fsr2l,f,c
 10530  00BC3C  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10531  00BC3E  22DA               	addwfc	fsr2h,f,c
 10532  00BC40  68DE               	setf	postinc2,c
 10533  00BC42  68DE               	setf	postinc2,c
 10534  00BC44  68DE               	setf	postinc2,c
 10535  00BC46  68DD               	setf	postdec2,c
 10536                           
 10537                           ;fat_format.c: 429: fs->currentsector.dirty = 0;
 10538  00BC48  EE22 F035          	lfsr	2,565
 10539  00BC4C  503C               	movf	fatfs_format_fat16@fs,w,c
 10540  00BC4E  26D9               	addwf	fsr2l,f,c
 10541  00BC50  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10542  00BC52  22DA               	addwfc	fsr2h,f,c
 10543  00BC54  6ADE               	clrf	postinc2,c
 10544  00BC56  6ADD               	clrf	postdec2,c
 10545                           
 10546                           ;fat_format.c: 431: fs->next_free_cluster = 0;
 10547  00BC58  EE20 F01F          	lfsr	2,31
 10548  00BC5C  503C               	movf	fatfs_format_fat16@fs,w,c
 10549  00BC5E  26D9               	addwf	fsr2l,f,c
 10550  00BC60  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10551  00BC62  22DA               	addwfc	fsr2h,f,c
 10552  00BC64  6ADE               	clrf	postinc2,c
 10553  00BC66  6ADE               	clrf	postinc2,c
 10554  00BC68  6ADE               	clrf	postinc2,c
 10555  00BC6A  6ADD               	clrf	postdec2,c
 10556                           
 10557                           ;fat_format.c: 433: fatfs_fat_init(fs);
 10558  00BC6C  C03D  F00A         	movff	fatfs_format_fat16@fs+1,fatfs_fat_init@fs+1
 10559  00BC70  C03C  F009         	movff	fatfs_format_fat16@fs,fatfs_fat_init@fs
 10560  00BC74  EC6C  F042         	call	_fatfs_fat_init	;wreg free
 10561                           
 10562                           ;fat_format.c: 436: if (!fs->disk_io.read_media || !fs->disk_io.write_media)
 10563  00BC78  EE20 F029          	lfsr	2,41
 10564  00BC7C  503C               	movf	fatfs_format_fat16@fs,w,c
 10565  00BC7E  26D9               	addwf	fsr2l,f,c
 10566  00BC80  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10567  00BC82  22DA               	addwfc	fsr2h,f,c
 10568  00BC84  50DE               	movf	postinc2,w,c
 10569  00BC86  10DD               	iorwf	postdec2,w,c
 10570  00BC88  E009               	bz	l903
 10571  00BC8A  EE20 F02B          	lfsr	2,43
 10572  00BC8E  503C               	movf	fatfs_format_fat16@fs,w,c
 10573  00BC90  26D9               	addwf	fsr2l,f,c
 10574  00BC92  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10575  00BC94  22DA               	addwfc	fsr2h,f,c
 10576  00BC96  50DE               	movf	postinc2,w,c
 10577  00BC98  10DD               	iorwf	postdec2,w,c
 10578  00BC9A  E103               	bnz	l10949
 10579  00BC9C                     l903:
 10580                           
 10581                           ;fat_format.c: 437: return (-1);
 10582  00BC9C  683C               	setf	?_fatfs_format_fat16,c
 10583  00BC9E  683D               	setf	?_fatfs_format_fat16+1,c
 10584  00BCA0  D1F8               	goto	l904
 10585  00BCA2                     l10949:
 10586                           
 10587                           ;fat_format.c: 440: fs->fat_type = FAT_TYPE_16;
 10588  00BCA2  EE20 F028          	lfsr	2,40
 10589  00BCA6  503C               	movf	fatfs_format_fat16@fs,w,c
 10590  00BCA8  26D9               	addwf	fsr2l,f,c
 10591  00BCAA  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10592  00BCAC  22DA               	addwfc	fsr2h,f,c
 10593  00BCAE  6ADF               	clrf	indf2,c
 10594                           
 10595                           ;fat_format.c: 443: fs->fs_info_sector = 0;
 10596  00BCB0  EE20 F015          	lfsr	2,21
 10597  00BCB4  503C               	movf	fatfs_format_fat16@fs,w,c
 10598  00BCB6  26D9               	addwf	fsr2l,f,c
 10599  00BCB8  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10600  00BCBA  22DA               	addwfc	fsr2h,f,c
 10601  00BCBC  6ADE               	clrf	postinc2,c
 10602  00BCBE  6ADD               	clrf	postdec2,c
 10603                           
 10604                           ;fat_format.c: 444: fs->rootdir_first_cluster = 0;
 10605  00BCC0  EE20 F005          	lfsr	2,5
 10606  00BCC4  503C               	movf	fatfs_format_fat16@fs,w,c
 10607  00BCC6  26D9               	addwf	fsr2l,f,c
 10608  00BCC8  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10609  00BCCA  22DA               	addwfc	fsr2h,f,c
 10610  00BCCC  6ADE               	clrf	postinc2,c
 10611  00BCCE  6ADE               	clrf	postinc2,c
 10612  00BCD0  6ADE               	clrf	postinc2,c
 10613  00BCD2  6ADD               	clrf	postdec2,c
 10614                           
 10615                           ;fat_format.c: 448: fs->lba_begin = 0;
 10616  00BCD4  EE20 F017          	lfsr	2,23
 10617  00BCD8  503C               	movf	fatfs_format_fat16@fs,w,c
 10618  00BCDA  26D9               	addwf	fsr2l,f,c
 10619  00BCDC  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10620  00BCDE  22DA               	addwfc	fsr2h,f,c
 10621  00BCE0  6ADE               	clrf	postinc2,c
 10622  00BCE2  6ADE               	clrf	postinc2,c
 10623  00BCE4  6ADE               	clrf	postinc2,c
 10624  00BCE6  6ADD               	clrf	postdec2,c
 10625                           
 10626                           ;fat_format.c: 449: if (!fatfs_create_boot_sector(fs, fs->lba_begin, volume_sectors, nam
      +                          e, 0))
 10627  00BCE8  C03D  F021         	movff	fatfs_format_fat16@fs+1,fatfs_create_boot_sector@fs+1
 10628  00BCEC  C03C  F020         	movff	fatfs_format_fat16@fs,fatfs_create_boot_sector@fs
 10629  00BCF0  EE20 F017          	lfsr	2,23
 10630  00BCF4  503C               	movf	fatfs_format_fat16@fs,w,c
 10631  00BCF6  26D9               	addwf	fsr2l,f,c
 10632  00BCF8  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10633  00BCFA  22DA               	addwfc	fsr2h,f,c
 10634  00BCFC  CFDE F022          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba
 10635  00BD00  CFDE F023          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba+1
 10636  00BD04  CFDE F024          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba+2
 10637  00BD08  CFDE F025          	movff	postinc2,fatfs_create_boot_sector@boot_sector_lba+3
 10638  00BD0C  C03E  F026         	movff	fatfs_format_fat16@volume_sectors,fatfs_create_boot_sector@vol_sectors
 10639  00BD10  C03F  F027         	movff	fatfs_format_fat16@volume_sectors+1,fatfs_create_boot_sector@vol_sectors+1
 10640  00BD14  C040  F028         	movff	fatfs_format_fat16@volume_sectors+2,fatfs_create_boot_sector@vol_sectors+2
 10641  00BD18  C041  F029         	movff	fatfs_format_fat16@volume_sectors+3,fatfs_create_boot_sector@vol_sectors+3
 10642  00BD1C  C043  F02B         	movff	fatfs_format_fat16@name+1,fatfs_create_boot_sector@name+1
 10643  00BD20  C042  F02A         	movff	fatfs_format_fat16@name,fatfs_create_boot_sector@name
 10644  00BD24  0E00               	movlw	0
 10645  00BD26  6A2D               	clrf	fatfs_create_boot_sector@is_fat32+1,c
 10646  00BD28  6A2C               	clrf	fatfs_create_boot_sector@is_fat32,c
 10647  00BD2A  EC5F  F070         	call	_fatfs_create_boot_sector	;wreg free
 10648  00BD2E  5021               	movf	?_fatfs_create_boot_sector+1,w,c
 10649  00BD30  1020               	iorwf	?_fatfs_create_boot_sector,w,c
 10650  00BD32  E101 D1A7          	bz	u12600
 10651                           
 10652                           ;fat_format.c: 453: fs->rootdir_first_sector = fs->reserved_sectors + (fs->num_of_fats *
      +                           fs->fat_sectors);
 10653                           
 10654                           ;fat_format.c: 450: return 0;
 10655  00BD36  EE20 F01B          	lfsr	2,27
 10656  00BD3A  503C               	movf	fatfs_format_fat16@fs,w,c
 10657  00BD3C  26D9               	addwf	fsr2l,f,c
 10658  00BD3E  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10659  00BD40  22DA               	addwfc	fsr2h,f,c
 10660  00BD42  CFDE F044          	movff	postinc2,??_fatfs_format_fat16
 10661  00BD46  CFDE F045          	movff	postinc2,??_fatfs_format_fat16+1
 10662  00BD4A  CFDE F046          	movff	postinc2,??_fatfs_format_fat16+2
 10663  00BD4E  CFDE F047          	movff	postinc2,??_fatfs_format_fat16+3
 10664  00BD52  EE20 F027          	lfsr	2,39
 10665  00BD56  503C               	movf	fatfs_format_fat16@fs,w,c
 10666  00BD58  26D9               	addwf	fsr2l,f,c
 10667  00BD5A  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10668  00BD5C  22DA               	addwfc	fsr2h,f,c
 10669  00BD5E  50DF               	movf	indf2,w,c
 10670  00BD60  6E48               	movwf	(??_fatfs_format_fat16+4)& (0+255),c
 10671  00BD62  C048  F049         	movff	??_fatfs_format_fat16+4,??_fatfs_format_fat16+5
 10672  00BD66  6A4A               	clrf	(??_fatfs_format_fat16+6)& (0+255),c
 10673  00BD68  6A4B               	clrf	(??_fatfs_format_fat16+7)& (0+255),c
 10674  00BD6A  6A4C               	clrf	(??_fatfs_format_fat16+8)& (0+255),c
 10675  00BD6C  5049               	movf	??_fatfs_format_fat16+5,w,c
 10676  00BD6E  0244               	mulwf	??_fatfs_format_fat16,c
 10677  00BD70  CFF3 F04D          	movff	prodl,??_fatfs_format_fat16+9
 10678  00BD74  CFF4 F04E          	movff	prodh,??_fatfs_format_fat16+10
 10679  00BD78  6A4F               	clrf	(??_fatfs_format_fat16+11)& (0+255),c
 10680  00BD7A  6A50               	clrf	(??_fatfs_format_fat16+12)& (0+255),c
 10681  00BD7C  0245               	mulwf	??_fatfs_format_fat16+1,c
 10682  00BD7E  50F3               	movf	243,w,c
 10683  00BD80  264E               	addwf	(??_fatfs_format_fat16+10)& (0+255),f,c
 10684  00BD82  50F4               	movf	244,w,c
 10685  00BD84  224F               	addwfc	(??_fatfs_format_fat16+11)& (0+255),f,c
 10686  00BD86  0E00               	movlw	0
 10687  00BD88  2250               	addwfc	(??_fatfs_format_fat16+12)& (0+255),f,c
 10688  00BD8A  504A               	movf	??_fatfs_format_fat16+6,w,c
 10689  00BD8C  0244               	mulwf	??_fatfs_format_fat16,c
 10690  00BD8E  50F3               	movf	243,w,c
 10691  00BD90  264E               	addwf	(??_fatfs_format_fat16+10)& (0+255),f,c
 10692  00BD92  50F4               	movf	244,w,c
 10693  00BD94  224F               	addwfc	(??_fatfs_format_fat16+11)& (0+255),f,c
 10694  00BD96  0E00               	movlw	0
 10695  00BD98  2250               	addwfc	(??_fatfs_format_fat16+12)& (0+255),f,c
 10696  00BD9A  5049               	movf	??_fatfs_format_fat16+5,w,c
 10697  00BD9C  0246               	mulwf	??_fatfs_format_fat16+2,c
 10698  00BD9E  50F3               	movf	243,w,c
 10699  00BDA0  264F               	addwf	(??_fatfs_format_fat16+11)& (0+255),f,c
 10700  00BDA2  50F4               	movf	244,w,c
 10701  00BDA4  2250               	addwfc	(??_fatfs_format_fat16+12)& (0+255),f,c
 10702  00BDA6  504A               	movf	??_fatfs_format_fat16+6,w,c
 10703  00BDA8  0245               	mulwf	??_fatfs_format_fat16+1,c
 10704  00BDAA  50F3               	movf	243,w,c
 10705  00BDAC  264F               	addwf	(??_fatfs_format_fat16+11)& (0+255),f,c
 10706  00BDAE  50F4               	movf	244,w,c
 10707  00BDB0  2250               	addwfc	(??_fatfs_format_fat16+12)& (0+255),f,c
 10708  00BDB2  504B               	movf	??_fatfs_format_fat16+7,w,c
 10709  00BDB4  0244               	mulwf	??_fatfs_format_fat16,c
 10710  00BDB6  50F3               	movf	243,w,c
 10711  00BDB8  264F               	addwf	(??_fatfs_format_fat16+11)& (0+255),f,c
 10712  00BDBA  50F4               	movf	244,w,c
 10713  00BDBC  2250               	addwfc	(??_fatfs_format_fat16+12)& (0+255),f,c
 10714  00BDBE  5047               	movf	??_fatfs_format_fat16+3,w,c
 10715  00BDC0  0249               	mulwf	??_fatfs_format_fat16+5,c
 10716  00BDC2  50F3               	movf	243,w,c
 10717  00BDC4  2650               	addwf	(??_fatfs_format_fat16+12)& (0+255),f,c
 10718  00BDC6  504A               	movf	??_fatfs_format_fat16+6,w,c
 10719  00BDC8  0246               	mulwf	??_fatfs_format_fat16+2,c
 10720  00BDCA  50F3               	movf	243,w,c
 10721  00BDCC  2650               	addwf	(??_fatfs_format_fat16+12)& (0+255),f,c
 10722  00BDCE  504B               	movf	??_fatfs_format_fat16+7,w,c
 10723  00BDD0  0245               	mulwf	??_fatfs_format_fat16+1,c
 10724  00BDD2  50F3               	movf	243,w,c
 10725  00BDD4  2650               	addwf	(??_fatfs_format_fat16+12)& (0+255),f,c
 10726  00BDD6  504C               	movf	??_fatfs_format_fat16+8,w,c
 10727  00BDD8  0244               	mulwf	??_fatfs_format_fat16,c
 10728  00BDDA  50F3               	movf	243,w,c
 10729  00BDDC  2650               	addwf	(??_fatfs_format_fat16+12)& (0+255),f,c
 10730  00BDDE  EE20 F025          	lfsr	2,37
 10731  00BDE2  503C               	movf	fatfs_format_fat16@fs,w,c
 10732  00BDE4  26D9               	addwf	fsr2l,f,c
 10733  00BDE6  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10734  00BDE8  22DA               	addwfc	fsr2h,f,c
 10735  00BDEA  CFDE F051          	movff	postinc2,??_fatfs_format_fat16+13
 10736  00BDEE  CFDD F052          	movff	postdec2,??_fatfs_format_fat16+14
 10737  00BDF2  5051               	movf	??_fatfs_format_fat16+13,w,c
 10738  00BDF4  244D               	addwf	??_fatfs_format_fat16+9,w,c
 10739  00BDF6  6E53               	movwf	(??_fatfs_format_fat16+15)& (0+255),c
 10740  00BDF8  5052               	movf	??_fatfs_format_fat16+14,w,c
 10741  00BDFA  204E               	addwfc	??_fatfs_format_fat16+10,w,c
 10742  00BDFC  6E54               	movwf	(??_fatfs_format_fat16+16)& (0+255),c
 10743  00BDFE  0E00               	movlw	0
 10744  00BE00  204F               	addwfc	??_fatfs_format_fat16+11,w,c
 10745  00BE02  6E55               	movwf	(??_fatfs_format_fat16+17)& (0+255),c
 10746  00BE04  0E00               	movlw	0
 10747  00BE06  2050               	addwfc	??_fatfs_format_fat16+12,w,c
 10748  00BE08  6E56               	movwf	(??_fatfs_format_fat16+18)& (0+255),c
 10749  00BE0A  EE20 F009          	lfsr	2,9
 10750  00BE0E  503C               	movf	fatfs_format_fat16@fs,w,c
 10751  00BE10  26D9               	addwf	fsr2l,f,c
 10752  00BE12  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10753  00BE14  22DA               	addwfc	fsr2h,f,c
 10754  00BE16  C053  FFDE         	movff	??_fatfs_format_fat16+15,postinc2
 10755  00BE1A  C054  FFDE         	movff	??_fatfs_format_fat16+16,postinc2
 10756  00BE1E  C055  FFDE         	movff	??_fatfs_format_fat16+17,postinc2
 10757  00BE22  C056  FFDD         	movff	??_fatfs_format_fat16+18,postdec2
 10758  00BE26  06D9               	decf	fsr2l,f,c
 10759  00BE28  06D9               	decf	fsr2l,f,c
 10760                           
 10761                           ;fat_format.c: 454: fs->rootdir_sectors = ((fs->root_entry_count * 32) + (512 - 1)) / 51
      +                          2;
 10762  00BE2A  6844               	setf	??_fatfs_format_fat16& (0+255),c
 10763  00BE2C  0E01               	movlw	1
 10764  00BE2E  6E45               	movwf	(??_fatfs_format_fat16+1)& (0+255),c
 10765  00BE30  EE20 F023          	lfsr	2,35
 10766  00BE34  503C               	movf	fatfs_format_fat16@fs,w,c
 10767  00BE36  26D9               	addwf	fsr2l,f,c
 10768  00BE38  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10769  00BE3A  22DA               	addwfc	fsr2h,f,c
 10770  00BE3C  CFDE F046          	movff	postinc2,??_fatfs_format_fat16+2
 10771  00BE40  CFDD F047          	movff	postdec2,??_fatfs_format_fat16+3
 10772  00BE44  0E05               	movlw	5
 10773  00BE46                     u12575:
 10774  00BE46  90D8               	bcf	status,0,c
 10775  00BE48  3646               	rlcf	??_fatfs_format_fat16+2,f,c
 10776  00BE4A  3647               	rlcf	??_fatfs_format_fat16+3,f,c
 10777  00BE4C  2EE8               	decfsz	wreg,f,c
 10778  00BE4E  D7FB               	goto	u12575
 10779  00BE50  5044               	movf	??_fatfs_format_fat16,w,c
 10780  00BE52  2646               	addwf	??_fatfs_format_fat16+2,f,c
 10781  00BE54  5045               	movf	??_fatfs_format_fat16+1,w,c
 10782  00BE56  2247               	addwfc	??_fatfs_format_fat16+3,f,c
 10783  00BE58  0E09               	movlw	9
 10784  00BE5A  6E48               	movwf	(??_fatfs_format_fat16+4)& (0+255),c
 10785  00BE5C                     u12585:
 10786  00BE5C  90D8               	bcf	status,0,c
 10787  00BE5E  3247               	rrcf	??_fatfs_format_fat16+3,f,c
 10788  00BE60  3246               	rrcf	??_fatfs_format_fat16+2,f,c
 10789  00BE62  2E48               	decfsz	(??_fatfs_format_fat16+4)& (0+255),f,c
 10790  00BE64  D7FB               	goto	u12585
 10791  00BE66  5046               	movf	??_fatfs_format_fat16+2,w,c
 10792  00BE68  6E49               	movwf	(??_fatfs_format_fat16+5)& (0+255),c
 10793  00BE6A  5047               	movf	??_fatfs_format_fat16+3,w,c
 10794  00BE6C  6E4A               	movwf	(??_fatfs_format_fat16+6)& (0+255),c
 10795  00BE6E  6A4B               	clrf	(??_fatfs_format_fat16+7)& (0+255),c
 10796  00BE70  6A4C               	clrf	(??_fatfs_format_fat16+8)& (0+255),c
 10797  00BE72  EE20 F00D          	lfsr	2,13
 10798  00BE76  503C               	movf	fatfs_format_fat16@fs,w,c
 10799  00BE78  26D9               	addwf	fsr2l,f,c
 10800  00BE7A  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10801  00BE7C  22DA               	addwfc	fsr2h,f,c
 10802  00BE7E  C049  FFDE         	movff	??_fatfs_format_fat16+5,postinc2
 10803  00BE82  C04A  FFDE         	movff	??_fatfs_format_fat16+6,postinc2
 10804  00BE86  C04B  FFDE         	movff	??_fatfs_format_fat16+7,postinc2
 10805  00BE8A  C04C  FFDD         	movff	??_fatfs_format_fat16+8,postdec2
 10806  00BE8E  06D9               	decf	fsr2l,f,c
 10807  00BE90  06D9               	decf	fsr2l,f,c
 10808                           
 10809                           ;fat_format.c: 457: fs->fat_begin_lba = fs->lba_begin + fs->reserved_sectors;
 10810  00BE92  EE20 F017          	lfsr	2,23
 10811  00BE96  503C               	movf	fatfs_format_fat16@fs,w,c
 10812  00BE98  26D9               	addwf	fsr2l,f,c
 10813  00BE9A  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10814  00BE9C  22DA               	addwfc	fsr2h,f,c
 10815  00BE9E  CFDE F044          	movff	postinc2,??_fatfs_format_fat16
 10816  00BEA2  CFDE F045          	movff	postinc2,??_fatfs_format_fat16+1
 10817  00BEA6  CFDE F046          	movff	postinc2,??_fatfs_format_fat16+2
 10818  00BEAA  CFDE F047          	movff	postinc2,??_fatfs_format_fat16+3
 10819  00BEAE  EE20 F025          	lfsr	2,37
 10820  00BEB2  503C               	movf	fatfs_format_fat16@fs,w,c
 10821  00BEB4  26D9               	addwf	fsr2l,f,c
 10822  00BEB6  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10823  00BEB8  22DA               	addwfc	fsr2h,f,c
 10824  00BEBA  CFDE F048          	movff	postinc2,??_fatfs_format_fat16+4
 10825  00BEBE  CFDD F049          	movff	postdec2,??_fatfs_format_fat16+5
 10826  00BEC2  5048               	movf	??_fatfs_format_fat16+4,w,c
 10827  00BEC4  2444               	addwf	??_fatfs_format_fat16,w,c
 10828  00BEC6  6E4A               	movwf	(??_fatfs_format_fat16+6)& (0+255),c
 10829  00BEC8  5049               	movf	??_fatfs_format_fat16+5,w,c
 10830  00BECA  2045               	addwfc	??_fatfs_format_fat16+1,w,c
 10831  00BECC  6E4B               	movwf	(??_fatfs_format_fat16+7)& (0+255),c
 10832  00BECE  0E00               	movlw	0
 10833  00BED0  2046               	addwfc	??_fatfs_format_fat16+2,w,c
 10834  00BED2  6E4C               	movwf	(??_fatfs_format_fat16+8)& (0+255),c
 10835  00BED4  0E00               	movlw	0
 10836  00BED6  2047               	addwfc	??_fatfs_format_fat16+3,w,c
 10837  00BED8  6E4D               	movwf	(??_fatfs_format_fat16+9)& (0+255),c
 10838  00BEDA  EE20 F011          	lfsr	2,17
 10839  00BEDE  503C               	movf	fatfs_format_fat16@fs,w,c
 10840  00BEE0  26D9               	addwf	fsr2l,f,c
 10841  00BEE2  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10842  00BEE4  22DA               	addwfc	fsr2h,f,c
 10843  00BEE6  C04A  FFDE         	movff	??_fatfs_format_fat16+6,postinc2
 10844  00BEEA  C04B  FFDE         	movff	??_fatfs_format_fat16+7,postinc2
 10845  00BEEE  C04C  FFDE         	movff	??_fatfs_format_fat16+8,postinc2
 10846  00BEF2  C04D  FFDD         	movff	??_fatfs_format_fat16+9,postdec2
 10847  00BEF6  06D9               	decf	fsr2l,f,c
 10848  00BEF8  06D9               	decf	fsr2l,f,c
 10849                           
 10850                           ;fat_format.c: 460: fs->cluster_begin_lba = fs->fat_begin_lba + (fs->num_of_fats * fs->f
      +                          at_sectors);
 10851  00BEFA  EE20 F011          	lfsr	2,17
 10852  00BEFE  503C               	movf	fatfs_format_fat16@fs,w,c
 10853  00BF00  26D9               	addwf	fsr2l,f,c
 10854  00BF02  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10855  00BF04  22DA               	addwfc	fsr2h,f,c
 10856  00BF06  CFDE F044          	movff	postinc2,??_fatfs_format_fat16
 10857  00BF0A  CFDE F045          	movff	postinc2,??_fatfs_format_fat16+1
 10858  00BF0E  CFDE F046          	movff	postinc2,??_fatfs_format_fat16+2
 10859  00BF12  CFDE F047          	movff	postinc2,??_fatfs_format_fat16+3
 10860  00BF16  EE20 F01B          	lfsr	2,27
 10861  00BF1A  503C               	movf	fatfs_format_fat16@fs,w,c
 10862  00BF1C  26D9               	addwf	fsr2l,f,c
 10863  00BF1E  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10864  00BF20  22DA               	addwfc	fsr2h,f,c
 10865  00BF22  CFDE F048          	movff	postinc2,??_fatfs_format_fat16+4
 10866  00BF26  CFDE F049          	movff	postinc2,??_fatfs_format_fat16+5
 10867  00BF2A  CFDE F04A          	movff	postinc2,??_fatfs_format_fat16+6
 10868  00BF2E  CFDE F04B          	movff	postinc2,??_fatfs_format_fat16+7
 10869  00BF32  EE20 F027          	lfsr	2,39
 10870  00BF36  503C               	movf	fatfs_format_fat16@fs,w,c
 10871  00BF38  26D9               	addwf	fsr2l,f,c
 10872  00BF3A  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10873  00BF3C  22DA               	addwfc	fsr2h,f,c
 10874  00BF3E  50DF               	movf	indf2,w,c
 10875  00BF40  6E4C               	movwf	(??_fatfs_format_fat16+8)& (0+255),c
 10876  00BF42  C04C  F04D         	movff	??_fatfs_format_fat16+8,??_fatfs_format_fat16+9
 10877  00BF46  6A4E               	clrf	(??_fatfs_format_fat16+10)& (0+255),c
 10878  00BF48  6A4F               	clrf	(??_fatfs_format_fat16+11)& (0+255),c
 10879  00BF4A  6A50               	clrf	(??_fatfs_format_fat16+12)& (0+255),c
 10880  00BF4C  504D               	movf	??_fatfs_format_fat16+9,w,c
 10881  00BF4E  0248               	mulwf	??_fatfs_format_fat16+4,c
 10882  00BF50  CFF3 F051          	movff	prodl,??_fatfs_format_fat16+13
 10883  00BF54  CFF4 F052          	movff	prodh,??_fatfs_format_fat16+14
 10884  00BF58  6A53               	clrf	(??_fatfs_format_fat16+15)& (0+255),c
 10885  00BF5A  6A54               	clrf	(??_fatfs_format_fat16+16)& (0+255),c
 10886  00BF5C  0249               	mulwf	??_fatfs_format_fat16+5,c
 10887  00BF5E  50F3               	movf	243,w,c
 10888  00BF60  2652               	addwf	(??_fatfs_format_fat16+14)& (0+255),f,c
 10889  00BF62  50F4               	movf	244,w,c
 10890  00BF64  2253               	addwfc	(??_fatfs_format_fat16+15)& (0+255),f,c
 10891  00BF66  0E00               	movlw	0
 10892  00BF68  2254               	addwfc	(??_fatfs_format_fat16+16)& (0+255),f,c
 10893  00BF6A  504E               	movf	??_fatfs_format_fat16+10,w,c
 10894  00BF6C  0248               	mulwf	??_fatfs_format_fat16+4,c
 10895  00BF6E  50F3               	movf	243,w,c
 10896  00BF70  2652               	addwf	(??_fatfs_format_fat16+14)& (0+255),f,c
 10897  00BF72  50F4               	movf	244,w,c
 10898  00BF74  2253               	addwfc	(??_fatfs_format_fat16+15)& (0+255),f,c
 10899  00BF76  0E00               	movlw	0
 10900  00BF78  2254               	addwfc	(??_fatfs_format_fat16+16)& (0+255),f,c
 10901  00BF7A  504D               	movf	??_fatfs_format_fat16+9,w,c
 10902  00BF7C  024A               	mulwf	??_fatfs_format_fat16+6,c
 10903  00BF7E  50F3               	movf	243,w,c
 10904  00BF80  2653               	addwf	(??_fatfs_format_fat16+15)& (0+255),f,c
 10905  00BF82  50F4               	movf	244,w,c
 10906  00BF84  2254               	addwfc	(??_fatfs_format_fat16+16)& (0+255),f,c
 10907  00BF86  504E               	movf	??_fatfs_format_fat16+10,w,c
 10908  00BF88  0249               	mulwf	??_fatfs_format_fat16+5,c
 10909  00BF8A  50F3               	movf	243,w,c
 10910  00BF8C  2653               	addwf	(??_fatfs_format_fat16+15)& (0+255),f,c
 10911  00BF8E  50F4               	movf	244,w,c
 10912  00BF90  2254               	addwfc	(??_fatfs_format_fat16+16)& (0+255),f,c
 10913  00BF92  504F               	movf	??_fatfs_format_fat16+11,w,c
 10914  00BF94  0248               	mulwf	??_fatfs_format_fat16+4,c
 10915  00BF96  50F3               	movf	243,w,c
 10916  00BF98  2653               	addwf	(??_fatfs_format_fat16+15)& (0+255),f,c
 10917  00BF9A  50F4               	movf	244,w,c
 10918  00BF9C  2254               	addwfc	(??_fatfs_format_fat16+16)& (0+255),f,c
 10919  00BF9E  504B               	movf	??_fatfs_format_fat16+7,w,c
 10920  00BFA0  024D               	mulwf	??_fatfs_format_fat16+9,c
 10921  00BFA2  50F3               	movf	243,w,c
 10922  00BFA4  2654               	addwf	(??_fatfs_format_fat16+16)& (0+255),f,c
 10923  00BFA6  504E               	movf	??_fatfs_format_fat16+10,w,c
 10924  00BFA8  024A               	mulwf	??_fatfs_format_fat16+6,c
 10925  00BFAA  50F3               	movf	243,w,c
 10926  00BFAC  2654               	addwf	(??_fatfs_format_fat16+16)& (0+255),f,c
 10927  00BFAE  504F               	movf	??_fatfs_format_fat16+11,w,c
 10928  00BFB0  0249               	mulwf	??_fatfs_format_fat16+5,c
 10929  00BFB2  50F3               	movf	243,w,c
 10930  00BFB4  2654               	addwf	(??_fatfs_format_fat16+16)& (0+255),f,c
 10931  00BFB6  5050               	movf	??_fatfs_format_fat16+12,w,c
 10932  00BFB8  0248               	mulwf	??_fatfs_format_fat16+4,c
 10933  00BFBA  50F3               	movf	243,w,c
 10934  00BFBC  2654               	addwf	(??_fatfs_format_fat16+16)& (0+255),f,c
 10935  00BFBE  5044               	movf	??_fatfs_format_fat16,w,c
 10936  00BFC0  2451               	addwf	??_fatfs_format_fat16+13,w,c
 10937  00BFC2  6E55               	movwf	(??_fatfs_format_fat16+17)& (0+255),c
 10938  00BFC4  5045               	movf	??_fatfs_format_fat16+1,w,c
 10939  00BFC6  2052               	addwfc	??_fatfs_format_fat16+14,w,c
 10940  00BFC8  6E56               	movwf	(??_fatfs_format_fat16+18)& (0+255),c
 10941  00BFCA  5046               	movf	??_fatfs_format_fat16+2,w,c
 10942  00BFCC  2053               	addwfc	??_fatfs_format_fat16+15,w,c
 10943  00BFCE  6E57               	movwf	(??_fatfs_format_fat16+19)& (0+255),c
 10944  00BFD0  5047               	movf	??_fatfs_format_fat16+3,w,c
 10945  00BFD2  2054               	addwfc	??_fatfs_format_fat16+16,w,c
 10946  00BFD4  6E58               	movwf	(??_fatfs_format_fat16+20)& (0+255),c
 10947  00BFD6  EE20 F001          	lfsr	2,1
 10948  00BFDA  503C               	movf	fatfs_format_fat16@fs,w,c
 10949  00BFDC  26D9               	addwf	fsr2l,f,c
 10950  00BFDE  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10951  00BFE0  22DA               	addwfc	fsr2h,f,c
 10952  00BFE2  C055  FFDE         	movff	??_fatfs_format_fat16+17,postinc2
 10953  00BFE6  C056  FFDE         	movff	??_fatfs_format_fat16+18,postinc2
 10954  00BFEA  C057  FFDE         	movff	??_fatfs_format_fat16+19,postinc2
 10955  00BFEE  C058  FFDD         	movff	??_fatfs_format_fat16+20,postdec2
 10956  00BFF2  06D9               	decf	fsr2l,f,c
 10957  00BFF4  06D9               	decf	fsr2l,f,c
 10958                           
 10959                           ;fat_format.c: 463: if (!fatfs_erase_fat(fs, 0))
 10960  00BFF6  C03D  F021         	movff	fatfs_format_fat16@fs+1,fatfs_erase_fat@fs+1
 10961  00BFFA  C03C  F020         	movff	fatfs_format_fat16@fs,fatfs_erase_fat@fs
 10962  00BFFE  0E00               	movlw	0
 10963  00C000  6A23               	clrf	fatfs_erase_fat@is_fat32+1,c
 10964  00C002  6A22               	clrf	fatfs_erase_fat@is_fat32,c
 10965  00C004  EC35  F04B         	call	_fatfs_erase_fat	;wreg free
 10966  00C008  5021               	movf	?_fatfs_erase_fat+1,w,c
 10967  00C00A  1020               	iorwf	?_fatfs_erase_fat,w,c
 10968  00C00C  E03B               	bz	u12600
 10969                           
 10970                           ;fat_format.c: 467: if (!fatfs_erase_sectors(fs, fs->lba_begin + fs->rootdir_first_secto
      +                          r, fs->rootdir_sectors))
 10971                           
 10972                           ;fat_format.c: 464: return 0;
 10973  00C00E  C03D  F021         	movff	fatfs_format_fat16@fs+1,fatfs_erase_sectors@fs+1
 10974  00C012  C03C  F020         	movff	fatfs_format_fat16@fs,fatfs_erase_sectors@fs
 10975  00C016  EE20 F009          	lfsr	2,9
 10976  00C01A  503C               	movf	fatfs_format_fat16@fs,w,c
 10977  00C01C  26D9               	addwf	fsr2l,f,c
 10978  00C01E  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10979  00C020  22DA               	addwfc	fsr2h,f,c
 10980  00C022  CFDE F044          	movff	postinc2,??_fatfs_format_fat16
 10981  00C026  CFDE F045          	movff	postinc2,??_fatfs_format_fat16+1
 10982  00C02A  CFDE F046          	movff	postinc2,??_fatfs_format_fat16+2
 10983  00C02E  CFDE F047          	movff	postinc2,??_fatfs_format_fat16+3
 10984  00C032  EE20 F017          	lfsr	2,23
 10985  00C036  503C               	movf	fatfs_format_fat16@fs,w,c
 10986  00C038  26D9               	addwf	fsr2l,f,c
 10987  00C03A  503D               	movf	fatfs_format_fat16@fs+1,w,c
 10988  00C03C  22DA               	addwfc	fsr2h,f,c
 10989  00C03E  CFDE F048          	movff	postinc2,??_fatfs_format_fat16+4
 10990  00C042  CFDE F049          	movff	postinc2,??_fatfs_format_fat16+5
 10991  00C046  CFDE F04A          	movff	postinc2,??_fatfs_format_fat16+6
 10992  00C04A  CFDE F04B          	movff	postinc2,??_fatfs_format_fat16+7
 10993  00C04E  5044               	movf	??_fatfs_format_fat16,w,c
 10994  00C050  2448               	addwf	??_fatfs_format_fat16+4,w,c
 10995  00C052  6E22               	movwf	fatfs_erase_sectors@lba,c
 10996  00C054  5045               	movf	??_fatfs_format_fat16+1,w,c
 10997  00C056  2049               	addwfc	??_fatfs_format_fat16+5,w,c
 10998  00C058  6E23               	movwf	fatfs_erase_sectors@lba+1,c
 10999  00C05A  5046               	movf	??_fatfs_format_fat16+2,w,c
 11000  00C05C  204A               	addwfc	??_fatfs_format_fat16+6,w,c
 11001  00C05E  6E24               	movwf	fatfs_erase_sectors@lba+2,c
 11002  00C060  5047               	movf	??_fatfs_format_fat16+3,w,c
 11003  00C062  204B               	addwfc	??_fatfs_format_fat16+7,w,c
 11004  00C064  6E25               	movwf	fatfs_erase_sectors@lba+3,c
 11005  00C066  EE20 F00D          	lfsr	2,13
 11006  00C06A  503C               	movf	fatfs_format_fat16@fs,w,c
 11007  00C06C  26D9               	addwf	fsr2l,f,c
 11008  00C06E  503D               	movf	fatfs_format_fat16@fs+1,w,c
 11009  00C070  22DA               	addwfc	fsr2h,f,c
 11010  00C072  CFDE F026          	movff	postinc2,fatfs_erase_sectors@count
 11011  00C076  CFDD F027          	movff	postdec2,fatfs_erase_sectors@count+1
 11012  00C07A  EC09  F02E         	call	_fatfs_erase_sectors	;wreg free
 11013  00C07E  5021               	movf	?_fatfs_erase_sectors+1,w,c
 11014  00C080  1020               	iorwf	?_fatfs_erase_sectors,w,c
 11015  00C082  E103               	bnz	l10975
 11016  00C084                     u12600:
 11017                           
 11018                           ;fat_format.c: 468: return 0;
 11019  00C084  0E00               	movlw	0
 11020  00C086  6E3D               	movwf	?_fatfs_format_fat16+1,c
 11021  00C088  D003               	goto	L25
 11022  00C08A                     l10975:
 11023                           
 11024                           ;fat_format.c: 470: return 1;
 11025  00C08A  0E00               	movlw	0
 11026  00C08C  6E3D               	movwf	?_fatfs_format_fat16+1,c
 11027  00C08E  0E01               	movlw	1
 11028  00C090                     L25:
 11029  00C090  6E3C               	movwf	?_fatfs_format_fat16,c
 11030  00C092                     l904:
 11031  00C092  0012               	return	
 11032  00C094                     __end_of_fatfs_format_fat16:
 11033                           	opt stack 0
 11034                           tosu	equ	0xFFF
 11035                           tosh	equ	0xFFE
 11036                           tosl	equ	0xFFD
 11037                           pclath	equ	0xFFA
 11038                           tblptru	equ	0xFF8
 11039                           tblptrh	equ	0xFF7
 11040                           tblptrl	equ	0xFF6
 11041                           tablat	equ	0xFF5
 11042                           prodh	equ	0xFF4
 11043                           prodl	equ	0xFF3
 11044                           indf0	equ	0xFEF
 11045                           postinc0	equ	0xFEE
 11046                           fsr0h	equ	0xFEA
 11047                           fsr0l	equ	0xFE9
 11048                           wreg	equ	0xFE8
 11049                           indf1	equ	0xFE7
 11050                           postinc1	equ	0xFE6
 11051                           postdec1	equ	0xFE5
 11052                           fsr1h	equ	0xFE2
 11053                           fsr1l	equ	0xFE1
 11054                           indf2	equ	0xFDF
 11055                           postinc2	equ	0xFDE
 11056                           postdec2	equ	0xFDD
 11057                           fsr2h	equ	0xFDA
 11058                           fsr2l	equ	0xFD9
 11059                           status	equ	0xFD8
 11060                           
 11061 ;; *************** function _fatfs_fat_init *****************
 11062 ;; Defined at:
 11063 ;;		line 60 in file "fat_table.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;  fs              2    8[COMRAM] PTR struct fatfs
 11066 ;;		 -> _fs(1095), 
 11067 ;; Auto vars:     Size  Location     Type
 11068 ;;  i               2   18[COMRAM] int 
 11069 ;; Return value:  Size  Location     Type
 11070 ;;		None               void
 11071 ;; Registers used:
 11072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11073 ;; Tracked objects:
 11074 ;;		On entry : 0/0
 11075 ;;		On exit  : 0/0
 11076 ;;		Unchanged: 0/0
 11077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11079 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11080 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11081 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11082 ;;Total ram usage:       12 bytes
 11083 ;; Hardware stack levels used:    1
 11084 ;; Hardware stack levels required when called:    1
 11085 ;; This function calls:
 11086 ;;		_memset
 11087 ;; This function is called by:
 11088 ;;		_fatfs_init
 11089 ;;		_fatfs_format_fat16
 11090 ;;		_fatfs_format_fat32
 11091 ;; This function uses a non-reentrant model
 11092 ;;
 11093                           
 11094                           	psect	text27
 11095  0084D8                     __ptext27:
 11096                           	opt stack 0
 11097  0084D8                     _fatfs_fat_init:
 11098                           	opt stack 27
 11099                           
 11100                           ;fat_table.c: 62: int i;
 11101                           ;fat_table.c: 65: fs->fat_buffer_head = (0);
 11102                           
 11103                           ;incstack = 0
 11104  0084D8  EE22 F03B          	lfsr	2,571
 11105  0084DC  5009               	movf	fatfs_fat_init@fs,w,c
 11106  0084DE  26D9               	addwf	fsr2l,f,c
 11107  0084E0  500A               	movf	fatfs_fat_init@fs+1,w,c
 11108  0084E2  22DA               	addwfc	fsr2h,f,c
 11109  0084E4  6ADE               	clrf	postinc2,c
 11110  0084E6  6ADD               	clrf	postdec2,c
 11111                           
 11112                           ;fat_table.c: 67: for (i=0;i<1;i++)
 11113  0084E8  6A14               	clrf	fatfs_fat_init@i+1,c
 11114  0084EA  6A13               	clrf	fatfs_fat_init@i,c
 11115  0084EC  5014               	movf	fatfs_fat_init@i+1,w,c
 11116  0084EE  0A80               	xorlw	128
 11117  0084F0  0F80               	addlw	-128
 11118  0084F2  0E01               	movlw	1
 11119  0084F4  B4D8               	btfsc	status,2,c
 11120  0084F6  5C13               	subwf	fatfs_fat_init@i,w,c
 11121  0084F8  E301 D103          	bc	l1189
 11122                           
 11123                           ;fat_table.c: 68: {
 11124                           ;fat_table.c: 70: fs->fat_buffers[i].address = 0xFFFFFFFF;
 11125  0084FC  0E3D               	movlw	61
 11126  0084FE  6E0B               	movwf	??_fatfs_fat_init& (0+255),c
 11127  008500  0E02               	movlw	2
 11128  008502  6E0C               	movwf	(??_fatfs_fat_init+1)& (0+255),c
 11129  008504  0E0A               	movlw	10
 11130  008506  6E0D               	movwf	(??_fatfs_fat_init+2)& (0+255),c
 11131  008508  0E02               	movlw	2
 11132  00850A  6E0E               	movwf	(??_fatfs_fat_init+3)& (0+255),c
 11133  00850C  500D               	movf	(??_fatfs_fat_init+2)& (0+255),w,c
 11134  00850E  0213               	mulwf	fatfs_fat_init@i,c
 11135  008510  CFF3 F00F          	movff	prodl,??_fatfs_fat_init+4
 11136  008514  CFF4 F010          	movff	prodh,??_fatfs_fat_init+5
 11137  008518  0214               	mulwf	fatfs_fat_init@i+1,c
 11138  00851A  50F3               	movf	243,w,c
 11139  00851C  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11140  00851E  500E               	movf	(??_fatfs_fat_init+3)& (0+255),w,c
 11141  008520  0213               	mulwf	fatfs_fat_init@i,c
 11142  008522  50F3               	movf	243,w,c
 11143  008524  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11144  008526  500B               	movf	??_fatfs_fat_init,w,c
 11145  008528  260F               	addwf	??_fatfs_fat_init+4,f,c
 11146  00852A  500C               	movf	??_fatfs_fat_init+1,w,c
 11147  00852C  2210               	addwfc	??_fatfs_fat_init+5,f,c
 11148  00852E  C009  F011         	movff	fatfs_fat_init@fs,??_fatfs_fat_init+6
 11149  008532  C00A  F012         	movff	fatfs_fat_init@fs+1,??_fatfs_fat_init+7
 11150  008536  500F               	movf	??_fatfs_fat_init+4,w,c
 11151  008538  2611               	addwf	??_fatfs_fat_init+6,f,c
 11152  00853A  5010               	movf	??_fatfs_fat_init+5,w,c
 11153  00853C  2212               	addwfc	??_fatfs_fat_init+7,f,c
 11154  00853E  0E00               	movlw	0
 11155  008540  2411               	addwf	??_fatfs_fat_init+6,w,c
 11156  008542  6ED9               	movwf	fsr2l,c
 11157  008544  0E02               	movlw	2
 11158  008546  2012               	addwfc	??_fatfs_fat_init+7,w,c
 11159  008548  6EDA               	movwf	fsr2h,c
 11160  00854A  68DE               	setf	postinc2,c
 11161  00854C  68DE               	setf	postinc2,c
 11162  00854E  68DE               	setf	postinc2,c
 11163  008550  68DD               	setf	postdec2,c
 11164                           
 11165                           ;fat_table.c: 71: fs->fat_buffers[i].dirty = 0;
 11166  008552  0E3D               	movlw	61
 11167  008554  6E0B               	movwf	??_fatfs_fat_init& (0+255),c
 11168  008556  0E02               	movlw	2
 11169  008558  6E0C               	movwf	(??_fatfs_fat_init+1)& (0+255),c
 11170  00855A  0E0A               	movlw	10
 11171  00855C  6E0D               	movwf	(??_fatfs_fat_init+2)& (0+255),c
 11172  00855E  0E02               	movlw	2
 11173  008560  6E0E               	movwf	(??_fatfs_fat_init+3)& (0+255),c
 11174  008562  500D               	movf	(??_fatfs_fat_init+2)& (0+255),w,c
 11175  008564  0213               	mulwf	fatfs_fat_init@i,c
 11176  008566  CFF3 F00F          	movff	prodl,??_fatfs_fat_init+4
 11177  00856A  CFF4 F010          	movff	prodh,??_fatfs_fat_init+5
 11178  00856E  0214               	mulwf	fatfs_fat_init@i+1,c
 11179  008570  50F3               	movf	243,w,c
 11180  008572  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11181  008574  500E               	movf	(??_fatfs_fat_init+3)& (0+255),w,c
 11182  008576  0213               	mulwf	fatfs_fat_init@i,c
 11183  008578  50F3               	movf	243,w,c
 11184  00857A  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11185  00857C  500B               	movf	??_fatfs_fat_init,w,c
 11186  00857E  260F               	addwf	??_fatfs_fat_init+4,f,c
 11187  008580  500C               	movf	??_fatfs_fat_init+1,w,c
 11188  008582  2210               	addwfc	??_fatfs_fat_init+5,f,c
 11189  008584  C009  F011         	movff	fatfs_fat_init@fs,??_fatfs_fat_init+6
 11190  008588  C00A  F012         	movff	fatfs_fat_init@fs+1,??_fatfs_fat_init+7
 11191  00858C  500F               	movf	??_fatfs_fat_init+4,w,c
 11192  00858E  2611               	addwf	??_fatfs_fat_init+6,f,c
 11193  008590  5010               	movf	??_fatfs_fat_init+5,w,c
 11194  008592  2212               	addwfc	??_fatfs_fat_init+7,f,c
 11195  008594  0E04               	movlw	4
 11196  008596  2411               	addwf	??_fatfs_fat_init+6,w,c
 11197  008598  6ED9               	movwf	fsr2l,c
 11198  00859A  0E02               	movlw	2
 11199  00859C  2012               	addwfc	??_fatfs_fat_init+7,w,c
 11200  00859E  6EDA               	movwf	fsr2h,c
 11201  0085A0  6ADE               	clrf	postinc2,c
 11202  0085A2  6ADD               	clrf	postdec2,c
 11203                           
 11204                           ;fat_table.c: 72: memset(fs->fat_buffers[i].sector, 0x00, sizeof(fs->fat_buffers[i].sect
      +                          or));
 11205  0085A4  0E3D               	movlw	61
 11206  0085A6  6E0B               	movwf	??_fatfs_fat_init& (0+255),c
 11207  0085A8  0E02               	movlw	2
 11208  0085AA  6E0C               	movwf	(??_fatfs_fat_init+1)& (0+255),c
 11209  0085AC  0E0A               	movlw	10
 11210  0085AE  6E0D               	movwf	(??_fatfs_fat_init+2)& (0+255),c
 11211  0085B0  0E02               	movlw	2
 11212  0085B2  6E0E               	movwf	(??_fatfs_fat_init+3)& (0+255),c
 11213  0085B4  500D               	movf	(??_fatfs_fat_init+2)& (0+255),w,c
 11214  0085B6  0213               	mulwf	fatfs_fat_init@i,c
 11215  0085B8  CFF3 F00F          	movff	prodl,??_fatfs_fat_init+4
 11216  0085BC  CFF4 F010          	movff	prodh,??_fatfs_fat_init+5
 11217  0085C0  0214               	mulwf	fatfs_fat_init@i+1,c
 11218  0085C2  50F3               	movf	243,w,c
 11219  0085C4  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11220  0085C6  500E               	movf	(??_fatfs_fat_init+3)& (0+255),w,c
 11221  0085C8  0213               	mulwf	fatfs_fat_init@i,c
 11222  0085CA  50F3               	movf	243,w,c
 11223  0085CC  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11224  0085CE  500B               	movf	??_fatfs_fat_init,w,c
 11225  0085D0  260F               	addwf	??_fatfs_fat_init+4,f,c
 11226  0085D2  500C               	movf	??_fatfs_fat_init+1,w,c
 11227  0085D4  2210               	addwfc	??_fatfs_fat_init+5,f,c
 11228  0085D6  500F               	movf	??_fatfs_fat_init+4,w,c
 11229  0085D8  2409               	addwf	fatfs_fat_init@fs,w,c
 11230  0085DA  6E01               	movwf	memset@p1,c
 11231  0085DC  5010               	movf	??_fatfs_fat_init+5,w,c
 11232  0085DE  200A               	addwfc	fatfs_fat_init@fs+1,w,c
 11233  0085E0  6E02               	movwf	memset@p1+1,c
 11234  0085E2  6A04               	clrf	memset@c+1,c
 11235  0085E4  6A03               	clrf	memset@c,c
 11236  0085E6  0E02               	movlw	2
 11237  0085E8  6E06               	movwf	memset@n+1,c
 11238  0085EA  0E00               	movlw	0
 11239  0085EC  6A05               	clrf	memset@n,c
 11240  0085EE  EC24  F020         	call	_memset	;wreg free
 11241                           
 11242                           ;fat_table.c: 73: fs->fat_buffers[i].ptr = (0);
 11243  0085F2  0E3D               	movlw	61
 11244  0085F4  6E0B               	movwf	??_fatfs_fat_init& (0+255),c
 11245  0085F6  0E02               	movlw	2
 11246  0085F8  6E0C               	movwf	(??_fatfs_fat_init+1)& (0+255),c
 11247  0085FA  0E0A               	movlw	10
 11248  0085FC  6E0D               	movwf	(??_fatfs_fat_init+2)& (0+255),c
 11249  0085FE  0E02               	movlw	2
 11250  008600  6E0E               	movwf	(??_fatfs_fat_init+3)& (0+255),c
 11251  008602  500D               	movf	(??_fatfs_fat_init+2)& (0+255),w,c
 11252  008604  0213               	mulwf	fatfs_fat_init@i,c
 11253  008606  CFF3 F00F          	movff	prodl,??_fatfs_fat_init+4
 11254  00860A  CFF4 F010          	movff	prodh,??_fatfs_fat_init+5
 11255  00860E  0214               	mulwf	fatfs_fat_init@i+1,c
 11256  008610  50F3               	movf	243,w,c
 11257  008612  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11258  008614  500E               	movf	(??_fatfs_fat_init+3)& (0+255),w,c
 11259  008616  0213               	mulwf	fatfs_fat_init@i,c
 11260  008618  50F3               	movf	243,w,c
 11261  00861A  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11262  00861C  500B               	movf	??_fatfs_fat_init,w,c
 11263  00861E  260F               	addwf	??_fatfs_fat_init+4,f,c
 11264  008620  500C               	movf	??_fatfs_fat_init+1,w,c
 11265  008622  2210               	addwfc	??_fatfs_fat_init+5,f,c
 11266  008624  C009  F011         	movff	fatfs_fat_init@fs,??_fatfs_fat_init+6
 11267  008628  C00A  F012         	movff	fatfs_fat_init@fs+1,??_fatfs_fat_init+7
 11268  00862C  500F               	movf	??_fatfs_fat_init+4,w,c
 11269  00862E  2611               	addwf	??_fatfs_fat_init+6,f,c
 11270  008630  5010               	movf	??_fatfs_fat_init+5,w,c
 11271  008632  2212               	addwfc	??_fatfs_fat_init+7,f,c
 11272  008634  0E06               	movlw	6
 11273  008636  2411               	addwf	??_fatfs_fat_init+6,w,c
 11274  008638  6ED9               	movwf	fsr2l,c
 11275  00863A  0E02               	movlw	2
 11276  00863C  2012               	addwfc	??_fatfs_fat_init+7,w,c
 11277  00863E  6EDA               	movwf	fsr2h,c
 11278  008640  6ADE               	clrf	postinc2,c
 11279  008642  6ADD               	clrf	postdec2,c
 11280                           
 11281                           ;fat_table.c: 76: fs->fat_buffers[i].next = fs->fat_buffer_head;
 11282  008644  EE22 F03B          	lfsr	2,571
 11283  008648  5009               	movf	fatfs_fat_init@fs,w,c
 11284  00864A  26D9               	addwf	fsr2l,f,c
 11285  00864C  500A               	movf	fatfs_fat_init@fs+1,w,c
 11286  00864E  22DA               	addwfc	fsr2h,f,c
 11287  008650  0E3D               	movlw	61
 11288  008652  6E0B               	movwf	??_fatfs_fat_init& (0+255),c
 11289  008654  0E02               	movlw	2
 11290  008656  6E0C               	movwf	(??_fatfs_fat_init+1)& (0+255),c
 11291  008658  0E0A               	movlw	10
 11292  00865A  6E0D               	movwf	(??_fatfs_fat_init+2)& (0+255),c
 11293  00865C  0E02               	movlw	2
 11294  00865E  6E0E               	movwf	(??_fatfs_fat_init+3)& (0+255),c
 11295  008660  500D               	movf	(??_fatfs_fat_init+2)& (0+255),w,c
 11296  008662  0213               	mulwf	fatfs_fat_init@i,c
 11297  008664  CFF3 F00F          	movff	prodl,??_fatfs_fat_init+4
 11298  008668  CFF4 F010          	movff	prodh,??_fatfs_fat_init+5
 11299  00866C  0214               	mulwf	fatfs_fat_init@i+1,c
 11300  00866E  50F3               	movf	243,w,c
 11301  008670  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11302  008672  500E               	movf	(??_fatfs_fat_init+3)& (0+255),w,c
 11303  008674  0213               	mulwf	fatfs_fat_init@i,c
 11304  008676  50F3               	movf	243,w,c
 11305  008678  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11306  00867A  500B               	movf	??_fatfs_fat_init,w,c
 11307  00867C  260F               	addwf	??_fatfs_fat_init+4,f,c
 11308  00867E  500C               	movf	??_fatfs_fat_init+1,w,c
 11309  008680  2210               	addwfc	??_fatfs_fat_init+5,f,c
 11310  008682  C009  F011         	movff	fatfs_fat_init@fs,??_fatfs_fat_init+6
 11311  008686  C00A  F012         	movff	fatfs_fat_init@fs+1,??_fatfs_fat_init+7
 11312  00868A  500F               	movf	??_fatfs_fat_init+4,w,c
 11313  00868C  2611               	addwf	??_fatfs_fat_init+6,f,c
 11314  00868E  5010               	movf	??_fatfs_fat_init+5,w,c
 11315  008690  2212               	addwfc	??_fatfs_fat_init+7,f,c
 11316  008692  0E08               	movlw	8
 11317  008694  2411               	addwf	??_fatfs_fat_init+6,w,c
 11318  008696  6EE1               	movwf	fsr1l,c
 11319  008698  0E02               	movlw	2
 11320  00869A  2012               	addwfc	??_fatfs_fat_init+7,w,c
 11321  00869C  6EE2               	movwf	fsr1h,c
 11322  00869E  CFDE FFE6          	movff	postinc2,postinc1
 11323  0086A2  CFDD FFE5          	movff	postdec2,postdec1
 11324                           
 11325                           ;fat_table.c: 77: fs->fat_buffer_head = &fs->fat_buffers[i];
 11326  0086A6  0E3D               	movlw	61
 11327  0086A8  6E0B               	movwf	??_fatfs_fat_init& (0+255),c
 11328  0086AA  0E02               	movlw	2
 11329  0086AC  6E0C               	movwf	(??_fatfs_fat_init+1)& (0+255),c
 11330  0086AE  0E0A               	movlw	10
 11331  0086B0  6E0D               	movwf	(??_fatfs_fat_init+2)& (0+255),c
 11332  0086B2  0E02               	movlw	2
 11333  0086B4  6E0E               	movwf	(??_fatfs_fat_init+3)& (0+255),c
 11334  0086B6  500D               	movf	(??_fatfs_fat_init+2)& (0+255),w,c
 11335  0086B8  0213               	mulwf	fatfs_fat_init@i,c
 11336  0086BA  CFF3 F00F          	movff	prodl,??_fatfs_fat_init+4
 11337  0086BE  CFF4 F010          	movff	prodh,??_fatfs_fat_init+5
 11338  0086C2  0214               	mulwf	fatfs_fat_init@i+1,c
 11339  0086C4  50F3               	movf	243,w,c
 11340  0086C6  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11341  0086C8  500E               	movf	(??_fatfs_fat_init+3)& (0+255),w,c
 11342  0086CA  0213               	mulwf	fatfs_fat_init@i,c
 11343  0086CC  50F3               	movf	243,w,c
 11344  0086CE  2610               	addwf	(??_fatfs_fat_init+5)& (0+255),f,c
 11345  0086D0  500B               	movf	??_fatfs_fat_init,w,c
 11346  0086D2  260F               	addwf	??_fatfs_fat_init+4,f,c
 11347  0086D4  500C               	movf	??_fatfs_fat_init+1,w,c
 11348  0086D6  2210               	addwfc	??_fatfs_fat_init+5,f,c
 11349  0086D8  C009  F011         	movff	fatfs_fat_init@fs,??_fatfs_fat_init+6
 11350  0086DC  C00A  F012         	movff	fatfs_fat_init@fs+1,??_fatfs_fat_init+7
 11351  0086E0  500F               	movf	??_fatfs_fat_init+4,w,c
 11352  0086E2  2611               	addwf	??_fatfs_fat_init+6,f,c
 11353  0086E4  5010               	movf	??_fatfs_fat_init+5,w,c
 11354  0086E6  2212               	addwfc	??_fatfs_fat_init+7,f,c
 11355  0086E8  EE22 F03B          	lfsr	2,571
 11356  0086EC  5009               	movf	fatfs_fat_init@fs,w,c
 11357  0086EE  26D9               	addwf	fsr2l,f,c
 11358  0086F0  500A               	movf	fatfs_fat_init@fs+1,w,c
 11359  0086F2  22DA               	addwfc	fsr2h,f,c
 11360  0086F4  C011  FFDE         	movff	??_fatfs_fat_init+6,postinc2
 11361  0086F8  C012  FFDD         	movff	??_fatfs_fat_init+7,postdec2
 11362  0086FC  4A13               	infsnz	fatfs_fat_init@i,f,c
 11363  0086FE  2A14               	incf	fatfs_fat_init@i+1,f,c
 11364  008700  D6F5               	goto	L26
 11365  008702                     l1189:
 11366  008702  0012               	return	
 11367  008704                     __end_of_fatfs_fat_init:
 11368                           	opt stack 0
 11369                           tosu	equ	0xFFF
 11370                           tosh	equ	0xFFE
 11371                           tosl	equ	0xFFD
 11372                           pclath	equ	0xFFA
 11373                           tblptru	equ	0xFF8
 11374                           tblptrh	equ	0xFF7
 11375                           tblptrl	equ	0xFF6
 11376                           tablat	equ	0xFF5
 11377                           prodh	equ	0xFF4
 11378                           prodl	equ	0xFF3
 11379                           indf0	equ	0xFEF
 11380                           postinc0	equ	0xFEE
 11381                           fsr0h	equ	0xFEA
 11382                           fsr0l	equ	0xFE9
 11383                           wreg	equ	0xFE8
 11384                           indf1	equ	0xFE7
 11385                           postinc1	equ	0xFE6
 11386                           postdec1	equ	0xFE5
 11387                           fsr1h	equ	0xFE2
 11388                           fsr1l	equ	0xFE1
 11389                           indf2	equ	0xFDF
 11390                           postinc2	equ	0xFDE
 11391                           postdec2	equ	0xFDD
 11392                           fsr2h	equ	0xFDA
 11393                           fsr2l	equ	0xFD9
 11394                           status	equ	0xFD8
 11395                           
 11396 ;; *************** function _fatfs_erase_sectors *****************
 11397 ;; Defined at:
 11398 ;;		line 99 in file "fat_format.c"
 11399 ;; Parameters:    Size  Location     Type
 11400 ;;  fs              2   31[COMRAM] PTR struct fatfs
 11401 ;;		 -> _fs(1095), 
 11402 ;;  lba             4   33[COMRAM] unsigned long 
 11403 ;;  count           2   37[COMRAM] int 
 11404 ;; Auto vars:     Size  Location     Type
 11405 ;;  i               2   47[COMRAM] int 
 11406 ;; Return value:  Size  Location     Type
 11407 ;;                  2   31[COMRAM] int 
 11408 ;; Registers used:
 11409 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 11410 ;; Tracked objects:
 11411 ;;		On entry : 0/0
 11412 ;;		On exit  : 0/0
 11413 ;;		Unchanged: 0/0
 11414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11415 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11417 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11418 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11419 ;;Total ram usage:       18 bytes
 11420 ;; Hardware stack levels used:    1
 11421 ;; Hardware stack levels required when called:    3
 11422 ;; This function calls:
 11423 ;;		_media_write
 11424 ;;		_memset
 11425 ;; This function is called by:
 11426 ;;		_fatfs_format_fat16
 11427 ;;		_fatfs_format_fat32
 11428 ;; This function uses a non-reentrant model
 11429 ;;
 11430                           
 11431                           	psect	text28
 11432  005C12                     __ptext28:
 11433                           	opt stack 0
 11434  005C12                     _fatfs_erase_sectors:
 11435                           	opt stack 21
 11436                           
 11437                           ;fat_format.c: 101: int i;
 11438                           ;fat_format.c: 104: memset(fs->currentsector.sector, 0, 512);
 11439                           
 11440                           ;incstack = 0
 11441  005C12  0E31               	movlw	49
 11442  005C14  2420               	addwf	fatfs_erase_sectors@fs,w,c
 11443  005C16  6E01               	movwf	memset@p1,c
 11444  005C18  0E00               	movlw	0
 11445  005C1A  2021               	addwfc	fatfs_erase_sectors@fs+1,w,c
 11446  005C1C  6E02               	movwf	memset@p1+1,c
 11447  005C1E  6A04               	clrf	memset@c+1,c
 11448  005C20  6A03               	clrf	memset@c,c
 11449  005C22  0E02               	movlw	2
 11450  005C24  6E06               	movwf	memset@n+1,c
 11451  005C26  0E00               	movlw	0
 11452  005C28  6A05               	clrf	memset@n,c
 11453  005C2A  EC24  F020         	call	_memset	;wreg free
 11454                           
 11455                           ;fat_format.c: 106: for (i=0;i<count;i++)
 11456  005C2E  6A31               	clrf	fatfs_erase_sectors@i+1,c
 11457  005C30  6A30               	clrf	fatfs_erase_sectors@i,c
 11458  005C32  D043               	goto	l9869
 11459  005C34                     l9861:
 11460                           
 11461                           ;fat_format.c: 107: if (!fs->disk_io.write_media(lba + i, fs->currentsector.sector, 1))
 11462  005C34  C030  F028         	movff	fatfs_erase_sectors@i,??_fatfs_erase_sectors
 11463  005C38  C031  F029         	movff	fatfs_erase_sectors@i+1,??_fatfs_erase_sectors+1
 11464  005C3C  0E00               	movlw	0
 11465  005C3E  BE29               	btfsc	(??_fatfs_erase_sectors+1)& (0+255),7,c
 11466  005C40  0EFF               	movlw	255
 11467  005C42  6E2A               	movwf	(??_fatfs_erase_sectors+2)& (0+255),c
 11468  005C44  6E2B               	movwf	(??_fatfs_erase_sectors+3)& (0+255),c
 11469  005C46  5022               	movf	fatfs_erase_sectors@lba,w,c
 11470  005C48  2428               	addwf	??_fatfs_erase_sectors,w,c
 11471  005C4A  6E09               	movwf	media_write@sector,c
 11472  005C4C  5023               	movf	fatfs_erase_sectors@lba+1,w,c
 11473  005C4E  2029               	addwfc	??_fatfs_erase_sectors+1,w,c
 11474  005C50  6E0A               	movwf	media_write@sector+1,c
 11475  005C52  5024               	movf	fatfs_erase_sectors@lba+2,w,c
 11476  005C54  202A               	addwfc	??_fatfs_erase_sectors+2,w,c
 11477  005C56  6E0B               	movwf	media_write@sector+2,c
 11478  005C58  5025               	movf	fatfs_erase_sectors@lba+3,w,c
 11479  005C5A  202B               	addwfc	??_fatfs_erase_sectors+3,w,c
 11480  005C5C  6E0C               	movwf	media_write@sector+3,c
 11481  005C5E  0E31               	movlw	49
 11482  005C60  2420               	addwf	fatfs_erase_sectors@fs,w,c
 11483  005C62  6E2C               	movwf	(??_fatfs_erase_sectors+4)& (0+255),c
 11484  005C64  0E00               	movlw	0
 11485  005C66  2021               	addwfc	fatfs_erase_sectors@fs+1,w,c
 11486  005C68  6E2D               	movwf	(??_fatfs_erase_sectors+5)& (0+255),c
 11487  005C6A  0E20               	movlw	32
 11488  005C6C  6E0F               	movwf	media_write@buffer+2,c
 11489  005C6E  C02D  F00E         	movff	??_fatfs_erase_sectors+5,media_write@buffer+1
 11490  005C72  C02C  F00D         	movff	??_fatfs_erase_sectors+4,media_write@buffer
 11491  005C76  0E01               	movlw	1
 11492  005C78  6E10               	movwf	media_write@sector_count,c
 11493  005C7A  6A11               	clrf	media_write@sector_count+1,c
 11494  005C7C  6A12               	clrf	media_write@sector_count+2,c
 11495  005C7E  6A13               	clrf	media_write@sector_count+3,c
 11496  005C80  EE20 F02B          	lfsr	2,43
 11497  005C84  5020               	movf	fatfs_erase_sectors@fs,w,c
 11498  005C86  26D9               	addwf	fsr2l,f,c
 11499  005C88  5021               	movf	fatfs_erase_sectors@fs+1,w,c
 11500  005C8A  22DA               	addwfc	fsr2h,f,c
 11501  005C8C  CFDE F02E          	movff	postinc2,??_fatfs_erase_sectors+6
 11502  005C90  CFDD F02F          	movff	postdec2,??_fatfs_erase_sectors+7
 11503  005C94  D801               	call	u11048
 11504  005C96  D009               	goto	u11049
 11505  005C98                     u11048:
 11506  005C98  0005               	push	
 11507  005C9A  6EFA               	movwf	pclath,c
 11508  005C9C  502E               	movf	??_fatfs_erase_sectors+6,w,c
 11509  005C9E  6EFD               	movwf	tosl,c
 11510  005CA0  502F               	movf	??_fatfs_erase_sectors+7,w,c
 11511  005CA2  6EFE               	movwf	tosh,c
 11512  005CA4  6AFF               	clrf	tosu,c
 11513  005CA6  50FA               	movf	pclath,w,c
 11514  005CA8  0012               	return		;indir
 11515  005CAA                     u11049:
 11516  005CAA  500A               	movf	?_media_write+1,w,c
 11517  005CAC  1009               	iorwf	?_media_write,w,c
 11518  005CAE  E103               	bnz	l9867
 11519                           
 11520                           ;fat_format.c: 108: return 0;
 11521  005CB0  0E00               	movlw	0
 11522  005CB2  6E21               	movwf	?_fatfs_erase_sectors+1,c
 11523  005CB4  D00E               	goto	L27
 11524  005CB6                     l9867:
 11525  005CB6  4A30               	infsnz	fatfs_erase_sectors@i,f,c
 11526  005CB8  2A31               	incf	fatfs_erase_sectors@i+1,f,c
 11527  005CBA                     l9869:
 11528  005CBA  5031               	movf	fatfs_erase_sectors@i+1,w,c
 11529  005CBC  0A80               	xorlw	128
 11530  005CBE  6E28               	movwf	??_fatfs_erase_sectors& (0+255),c
 11531  005CC0  5026               	movf	fatfs_erase_sectors@count,w,c
 11532  005CC2  5C30               	subwf	fatfs_erase_sectors@i,w,c
 11533  005CC4  5027               	movf	fatfs_erase_sectors@count+1,w,c
 11534  005CC6  0A80               	xorlw	128
 11535  005CC8  5828               	subwfb	??_fatfs_erase_sectors& (0+255),w,c
 11536  005CCA  E3B4               	bnc	l9861
 11537                           
 11538                           ;fat_format.c: 110: return 1;
 11539  005CCC  0E00               	movlw	0
 11540  005CCE  6E21               	movwf	?_fatfs_erase_sectors+1,c
 11541  005CD0  0E01               	movlw	1
 11542  005CD2                     L27:
 11543  005CD2  6E20               	movwf	?_fatfs_erase_sectors,c
 11544  005CD4  0012               	return	
 11545  005CD6                     __end_of_fatfs_erase_sectors:
 11546                           	opt stack 0
 11547                           tosu	equ	0xFFF
 11548                           tosh	equ	0xFFE
 11549                           tosl	equ	0xFFD
 11550                           pclath	equ	0xFFA
 11551                           tblptru	equ	0xFF8
 11552                           tblptrh	equ	0xFF7
 11553                           tblptrl	equ	0xFF6
 11554                           tablat	equ	0xFF5
 11555                           prodh	equ	0xFF4
 11556                           prodl	equ	0xFF3
 11557                           indf0	equ	0xFEF
 11558                           postinc0	equ	0xFEE
 11559                           fsr0h	equ	0xFEA
 11560                           fsr0l	equ	0xFE9
 11561                           wreg	equ	0xFE8
 11562                           indf1	equ	0xFE7
 11563                           postinc1	equ	0xFE6
 11564                           postdec1	equ	0xFE5
 11565                           fsr1h	equ	0xFE2
 11566                           fsr1l	equ	0xFE1
 11567                           indf2	equ	0xFDF
 11568                           postinc2	equ	0xFDE
 11569                           postdec2	equ	0xFDD
 11570                           fsr2h	equ	0xFDA
 11571                           fsr2l	equ	0xFD9
 11572                           status	equ	0xFD8
 11573                           
 11574 ;; *************** function _fatfs_erase_fat *****************
 11575 ;; Defined at:
 11576 ;;		line 392 in file "fat_format.c"
 11577 ;; Parameters:    Size  Location     Type
 11578 ;;  fs              2   31[COMRAM] PTR struct fatfs
 11579 ;;		 -> _fs(1095), 
 11580 ;;  is_fat32        2   33[COMRAM] int 
 11581 ;; Auto vars:     Size  Location     Type
 11582 ;;  i               4   48[COMRAM] unsigned long 
 11583 ;; Return value:  Size  Location     Type
 11584 ;;                  2   31[COMRAM] int 
 11585 ;; Registers used:
 11586 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11587 ;; Tracked objects:
 11588 ;;		On entry : 0/0
 11589 ;;		On exit  : 0/0
 11590 ;;		Unchanged: 0/0
 11591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11593 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11594 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11595 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11596 ;;Total ram usage:       21 bytes
 11597 ;; Hardware stack levels used:    1
 11598 ;; Hardware stack levels required when called:    3
 11599 ;; This function calls:
 11600 ;;		_media_write
 11601 ;;		_memset
 11602 ;; This function is called by:
 11603 ;;		_fatfs_format_fat16
 11604 ;;		_fatfs_format_fat32
 11605 ;; This function uses a non-reentrant model
 11606 ;;
 11607                           
 11608                           	psect	text29
 11609  00966A                     __ptext29:
 11610                           	opt stack 0
 11611  00966A                     _fatfs_erase_fat:
 11612                           	opt stack 21
 11613                           
 11614                           ;fat_format.c: 394: uint32 i;
 11615                           ;fat_format.c: 397: memset(fs->currentsector.sector, 0, 512);
 11616                           
 11617                           ;incstack = 0
 11618  00966A  0E31               	movlw	49
 11619  00966C  2420               	addwf	fatfs_erase_fat@fs,w,c
 11620  00966E  6E01               	movwf	memset@p1,c
 11621  009670  0E00               	movlw	0
 11622  009672  2021               	addwfc	fatfs_erase_fat@fs+1,w,c
 11623  009674  6E02               	movwf	memset@p1+1,c
 11624  009676  6A04               	clrf	memset@c+1,c
 11625  009678  6A03               	clrf	memset@c,c
 11626  00967A  0E02               	movlw	2
 11627  00967C  6E06               	movwf	memset@n+1,c
 11628  00967E  0E00               	movlw	0
 11629  009680  6A05               	clrf	memset@n,c
 11630  009682  EC24  F020         	call	_memset	;wreg free
 11631                           
 11632                           ;fat_format.c: 400: if (!is_fat32)
 11633  009686  5023               	movf	fatfs_erase_fat@is_fat32+1,w,c
 11634  009688  1022               	iorwf	fatfs_erase_fat@is_fat32,w,c
 11635  00968A  E11E               	bnz	l10137
 11636                           
 11637                           ;fat_format.c: 401: {
 11638                           ;fat_format.c: 402: { fs->currentsector.sector[0+0] = (uint8)((0xFFF8)&0xFF); fs->curren
      +                          tsector.sector[0+1] = (uint8)((0xFFF8>>8)&0xFF); };
 11639  00968C  EE20 F031          	lfsr	2,49
 11640  009690  5020               	movf	fatfs_erase_fat@fs,w,c
 11641  009692  26D9               	addwf	fsr2l,f,c
 11642  009694  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11643  009696  22DA               	addwfc	fsr2h,f,c
 11644  009698  0EF8               	movlw	248
 11645  00969A  6EDF               	movwf	indf2,c
 11646  00969C  EE20 F032          	lfsr	2,50
 11647  0096A0  5020               	movf	fatfs_erase_fat@fs,w,c
 11648  0096A2  26D9               	addwf	fsr2l,f,c
 11649  0096A4  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11650  0096A6  22DA               	addwfc	fsr2h,f,c
 11651  0096A8  68DF               	setf	indf2,c
 11652                           
 11653                           ;fat_format.c: 403: { fs->currentsector.sector[2+0] = (uint8)((0xFFFF)&0xFF); fs->curren
      +                          tsector.sector[2+1] = (uint8)((0xFFFF>>8)&0xFF); };
 11654  0096AA  EE20 F033          	lfsr	2,51
 11655  0096AE  5020               	movf	fatfs_erase_fat@fs,w,c
 11656  0096B0  26D9               	addwf	fsr2l,f,c
 11657  0096B2  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11658  0096B4  22DA               	addwfc	fsr2h,f,c
 11659  0096B6  68DF               	setf	indf2,c
 11660  0096B8  EE20 F034          	lfsr	2,52
 11661  0096BC  5020               	movf	fatfs_erase_fat@fs,w,c
 11662  0096BE  26D9               	addwf	fsr2l,f,c
 11663  0096C0  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11664  0096C2  22DA               	addwfc	fsr2h,f,c
 11665  0096C4  0EFF               	movlw	255
 11666  0096C6  D056               	goto	L28
 11667  0096C8                     l10137:
 11668                           
 11669                           ;fat_format.c: 405: else
 11670                           ;fat_format.c: 406: {
 11671                           ;fat_format.c: 407: { fs->currentsector.sector[0+0] = (uint8)((0x0FFFFFF8)&0xFF); fs->cu
      +                          rrentsector.sector[0+1] = (uint8)((0x0FFFFFF8>>8)&0xFF); fs->currentsector.sector[0+2] =
      +                           (uint8)((0x0FFFFFF8>>16)&0xFF); fs->currentsector.sector[0+3] = (uint8)((0x0FFFFFF8>>24
      +                          )&0xFF
 11672  0096C8  EE20 F031          	lfsr	2,49
 11673  0096CC  5020               	movf	fatfs_erase_fat@fs,w,c
 11674  0096CE  26D9               	addwf	fsr2l,f,c
 11675  0096D0  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11676  0096D2  22DA               	addwfc	fsr2h,f,c
 11677  0096D4  0EF8               	movlw	248
 11678  0096D6  6EDF               	movwf	indf2,c
 11679  0096D8  EE20 F032          	lfsr	2,50
 11680  0096DC  5020               	movf	fatfs_erase_fat@fs,w,c
 11681  0096DE  26D9               	addwf	fsr2l,f,c
 11682  0096E0  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11683  0096E2  22DA               	addwfc	fsr2h,f,c
 11684  0096E4  68DF               	setf	indf2,c
 11685  0096E6  EE20 F033          	lfsr	2,51
 11686  0096EA  5020               	movf	fatfs_erase_fat@fs,w,c
 11687  0096EC  26D9               	addwf	fsr2l,f,c
 11688  0096EE  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11689  0096F0  22DA               	addwfc	fsr2h,f,c
 11690  0096F2  68DF               	setf	indf2,c
 11691  0096F4  EE20 F034          	lfsr	2,52
 11692  0096F8  5020               	movf	fatfs_erase_fat@fs,w,c
 11693  0096FA  26D9               	addwf	fsr2l,f,c
 11694  0096FC  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11695  0096FE  22DA               	addwfc	fsr2h,f,c
 11696  009700  0E0F               	movlw	15
 11697  009702  6EDF               	movwf	indf2,c
 11698                           
 11699                           ;fat_format.c: 408: { fs->currentsector.sector[4+0] = (uint8)((0xFFFFFFFF)&0xFF); fs->cu
      +                          rrentsector.sector[4+1] = (uint8)((0xFFFFFFFF>>8)&0xFF); fs->currentsector.sector[4+2] =
      +                           (uint8)((0xFFFFFFFF>>16)&0xFF); fs->currentsector.sector[4+3] = (uint8)((0xFFFFFFFF>>24
      +                          )&0xFF
 11700  009704  EE20 F035          	lfsr	2,53
 11701  009708  5020               	movf	fatfs_erase_fat@fs,w,c
 11702  00970A  26D9               	addwf	fsr2l,f,c
 11703  00970C  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11704  00970E  22DA               	addwfc	fsr2h,f,c
 11705  009710  68DF               	setf	indf2,c
 11706  009712  EE20 F036          	lfsr	2,54
 11707  009716  5020               	movf	fatfs_erase_fat@fs,w,c
 11708  009718  26D9               	addwf	fsr2l,f,c
 11709  00971A  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11710  00971C  22DA               	addwfc	fsr2h,f,c
 11711  00971E  68DF               	setf	indf2,c
 11712  009720  EE20 F037          	lfsr	2,55
 11713  009724  5020               	movf	fatfs_erase_fat@fs,w,c
 11714  009726  26D9               	addwf	fsr2l,f,c
 11715  009728  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11716  00972A  22DA               	addwfc	fsr2h,f,c
 11717  00972C  68DF               	setf	indf2,c
 11718  00972E  EE20 F038          	lfsr	2,56
 11719  009732  5020               	movf	fatfs_erase_fat@fs,w,c
 11720  009734  26D9               	addwf	fsr2l,f,c
 11721  009736  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11722  009738  22DA               	addwfc	fsr2h,f,c
 11723  00973A  68DF               	setf	indf2,c
 11724                           
 11725                           ;fat_format.c: 409: { fs->currentsector.sector[8+0] = (uint8)((0x0FFFFFFF)&0xFF); fs->cu
      +                          rrentsector.sector[8+1] = (uint8)((0x0FFFFFFF>>8)&0xFF); fs->currentsector.sector[8+2] =
      +                           (uint8)((0x0FFFFFFF>>16)&0xFF); fs->currentsector.sector[8+3] = (uint8)((0x0FFFFFFF>>24
      +                          )&0xFF
 11726  00973C  EE20 F039          	lfsr	2,57
 11727  009740  5020               	movf	fatfs_erase_fat@fs,w,c
 11728  009742  26D9               	addwf	fsr2l,f,c
 11729  009744  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11730  009746  22DA               	addwfc	fsr2h,f,c
 11731  009748  68DF               	setf	indf2,c
 11732  00974A  EE20 F03A          	lfsr	2,58
 11733  00974E  5020               	movf	fatfs_erase_fat@fs,w,c
 11734  009750  26D9               	addwf	fsr2l,f,c
 11735  009752  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11736  009754  22DA               	addwfc	fsr2h,f,c
 11737  009756  68DF               	setf	indf2,c
 11738  009758  EE20 F03B          	lfsr	2,59
 11739  00975C  5020               	movf	fatfs_erase_fat@fs,w,c
 11740  00975E  26D9               	addwf	fsr2l,f,c
 11741  009760  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11742  009762  22DA               	addwfc	fsr2h,f,c
 11743  009764  68DF               	setf	indf2,c
 11744  009766  EE20 F03C          	lfsr	2,60
 11745  00976A  5020               	movf	fatfs_erase_fat@fs,w,c
 11746  00976C  26D9               	addwf	fsr2l,f,c
 11747  00976E  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11748  009770  22DA               	addwfc	fsr2h,f,c
 11749  009772  0E0F               	movlw	15
 11750  009774                     L28:
 11751  009774  6EDF               	movwf	indf2,c
 11752                           
 11753                           ;fat_format.c: 410: }
 11754                           ;fat_format.c: 412: if (!fs->disk_io.write_media(fs->fat_begin_lba + 0, fs->currentsecto
      +                          r.sector, 1))
 11755  009776  EE20 F011          	lfsr	2,17
 11756  00977A  5020               	movf	fatfs_erase_fat@fs,w,c
 11757  00977C  26D9               	addwf	fsr2l,f,c
 11758  00977E  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11759  009780  22DA               	addwfc	fsr2h,f,c
 11760  009782  CFDE F009          	movff	postinc2,media_write@sector
 11761  009786  CFDE F00A          	movff	postinc2,media_write@sector+1
 11762  00978A  CFDE F00B          	movff	postinc2,media_write@sector+2
 11763  00978E  CFDE F00C          	movff	postinc2,media_write@sector+3
 11764  009792  0E31               	movlw	49
 11765  009794  2420               	addwf	fatfs_erase_fat@fs,w,c
 11766  009796  6E24               	movwf	??_fatfs_erase_fat& (0+255),c
 11767  009798  0E00               	movlw	0
 11768  00979A  2021               	addwfc	fatfs_erase_fat@fs+1,w,c
 11769  00979C  6E25               	movwf	(??_fatfs_erase_fat+1)& (0+255),c
 11770  00979E  0E20               	movlw	32
 11771  0097A0  6E0F               	movwf	media_write@buffer+2,c
 11772  0097A2  C025  F00E         	movff	??_fatfs_erase_fat+1,media_write@buffer+1
 11773  0097A6  C024  F00D         	movff	??_fatfs_erase_fat,media_write@buffer
 11774  0097AA  0E01               	movlw	1
 11775  0097AC  6E10               	movwf	media_write@sector_count,c
 11776  0097AE  6A11               	clrf	media_write@sector_count+1,c
 11777  0097B0  6A12               	clrf	media_write@sector_count+2,c
 11778  0097B2  6A13               	clrf	media_write@sector_count+3,c
 11779  0097B4  EE20 F02B          	lfsr	2,43
 11780  0097B8  5020               	movf	fatfs_erase_fat@fs,w,c
 11781  0097BA  26D9               	addwf	fsr2l,f,c
 11782  0097BC  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11783  0097BE  22DA               	addwfc	fsr2h,f,c
 11784  0097C0  CFDE F026          	movff	postinc2,??_fatfs_erase_fat+2
 11785  0097C4  CFDD F027          	movff	postdec2,??_fatfs_erase_fat+3
 11786  0097C8  D801               	call	u11278
 11787  0097CA  D009               	goto	u11279
 11788  0097CC                     u11278:
 11789  0097CC  0005               	push	
 11790  0097CE  6EFA               	movwf	pclath,c
 11791  0097D0  5026               	movf	??_fatfs_erase_fat+2,w,c
 11792  0097D2  6EFD               	movwf	tosl,c
 11793  0097D4  5027               	movf	??_fatfs_erase_fat+3,w,c
 11794  0097D6  6EFE               	movwf	tosh,c
 11795  0097D8  6AFF               	clrf	tosu,c
 11796  0097DA  50FA               	movf	pclath,w,c
 11797  0097DC  0012               	return		;indir
 11798  0097DE                     u11279:
 11799  0097DE  500A               	movf	?_media_write+1,w,c
 11800  0097E0  1009               	iorwf	?_media_write,w,c
 11801  0097E2  E057               	bz	u11300
 11802                           
 11803                           ;fat_format.c: 416: memset(fs->currentsector.sector, 0, 512);
 11804                           
 11805                           ;fat_format.c: 413: return 0;
 11806  0097E4  0E31               	movlw	49
 11807  0097E6  2420               	addwf	fatfs_erase_fat@fs,w,c
 11808  0097E8  6E01               	movwf	memset@p1,c
 11809  0097EA  0E00               	movlw	0
 11810  0097EC  2021               	addwfc	fatfs_erase_fat@fs+1,w,c
 11811  0097EE  6E02               	movwf	memset@p1+1,c
 11812  0097F0  6A04               	clrf	memset@c+1,c
 11813  0097F2  6A03               	clrf	memset@c,c
 11814  0097F4  0E02               	movlw	2
 11815  0097F6  6E06               	movwf	memset@n+1,c
 11816  0097F8  0E00               	movlw	0
 11817  0097FA  6A05               	clrf	memset@n,c
 11818  0097FC  EC24  F020         	call	_memset	;wreg free
 11819                           
 11820                           ;fat_format.c: 417: for (i=1;i<fs->fat_sectors*fs->num_of_fats;i++)
 11821  009800  0E01               	movlw	1
 11822  009802  6E31               	movwf	fatfs_erase_fat@i,c
 11823  009804  6A32               	clrf	fatfs_erase_fat@i+1,c
 11824  009806  6A33               	clrf	fatfs_erase_fat@i+2,c
 11825  009808  6A34               	clrf	fatfs_erase_fat@i+3,c
 11826  00980A  D04B               	goto	l10157
 11827  00980C                     l10149:
 11828                           
 11829                           ;fat_format.c: 418: if (!fs->disk_io.write_media(fs->fat_begin_lba + i, fs->currentsecto
      +                          r.sector, 1))
 11830  00980C  EE20 F011          	lfsr	2,17
 11831  009810  5020               	movf	fatfs_erase_fat@fs,w,c
 11832  009812  26D9               	addwf	fsr2l,f,c
 11833  009814  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11834  009816  22DA               	addwfc	fsr2h,f,c
 11835  009818  CFDE F024          	movff	postinc2,??_fatfs_erase_fat
 11836  00981C  CFDE F025          	movff	postinc2,??_fatfs_erase_fat+1
 11837  009820  CFDE F026          	movff	postinc2,??_fatfs_erase_fat+2
 11838  009824  CFDE F027          	movff	postinc2,??_fatfs_erase_fat+3
 11839  009828  5031               	movf	fatfs_erase_fat@i,w,c
 11840  00982A  2424               	addwf	??_fatfs_erase_fat,w,c
 11841  00982C  6E09               	movwf	media_write@sector,c
 11842  00982E  5032               	movf	fatfs_erase_fat@i+1,w,c
 11843  009830  2025               	addwfc	??_fatfs_erase_fat+1,w,c
 11844  009832  6E0A               	movwf	media_write@sector+1,c
 11845  009834  5033               	movf	fatfs_erase_fat@i+2,w,c
 11846  009836  2026               	addwfc	??_fatfs_erase_fat+2,w,c
 11847  009838  6E0B               	movwf	media_write@sector+2,c
 11848  00983A  5034               	movf	fatfs_erase_fat@i+3,w,c
 11849  00983C  2027               	addwfc	??_fatfs_erase_fat+3,w,c
 11850  00983E  6E0C               	movwf	media_write@sector+3,c
 11851  009840  0E31               	movlw	49
 11852  009842  2420               	addwf	fatfs_erase_fat@fs,w,c
 11853  009844  6E28               	movwf	(??_fatfs_erase_fat+4)& (0+255),c
 11854  009846  0E00               	movlw	0
 11855  009848  2021               	addwfc	fatfs_erase_fat@fs+1,w,c
 11856  00984A  6E29               	movwf	(??_fatfs_erase_fat+5)& (0+255),c
 11857  00984C  0E20               	movlw	32
 11858  00984E  6E0F               	movwf	media_write@buffer+2,c
 11859  009850  C029  F00E         	movff	??_fatfs_erase_fat+5,media_write@buffer+1
 11860  009854  C028  F00D         	movff	??_fatfs_erase_fat+4,media_write@buffer
 11861  009858  0E01               	movlw	1
 11862  00985A  6E10               	movwf	media_write@sector_count,c
 11863  00985C  6A11               	clrf	media_write@sector_count+1,c
 11864  00985E  6A12               	clrf	media_write@sector_count+2,c
 11865  009860  6A13               	clrf	media_write@sector_count+3,c
 11866  009862  EE20 F02B          	lfsr	2,43
 11867  009866  5020               	movf	fatfs_erase_fat@fs,w,c
 11868  009868  26D9               	addwf	fsr2l,f,c
 11869  00986A  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11870  00986C  22DA               	addwfc	fsr2h,f,c
 11871  00986E  CFDE F02A          	movff	postinc2,??_fatfs_erase_fat+6
 11872  009872  CFDD F02B          	movff	postdec2,??_fatfs_erase_fat+7
 11873  009876  D801               	call	u11298
 11874  009878  D009               	goto	u11299
 11875  00987A                     u11298:
 11876  00987A  0005               	push	
 11877  00987C  6EFA               	movwf	pclath,c
 11878  00987E  502A               	movf	??_fatfs_erase_fat+6,w,c
 11879  009880  6EFD               	movwf	tosl,c
 11880  009882  502B               	movf	??_fatfs_erase_fat+7,w,c
 11881  009884  6EFE               	movwf	tosh,c
 11882  009886  6AFF               	clrf	tosu,c
 11883  009888  50FA               	movf	pclath,w,c
 11884  00988A  0012               	return		;indir
 11885  00988C                     u11299:
 11886  00988C  500A               	movf	?_media_write+1,w,c
 11887  00988E  1009               	iorwf	?_media_write,w,c
 11888  009890  E103               	bnz	l10155
 11889  009892                     u11300:
 11890                           
 11891                           ;fat_format.c: 419: return 0;
 11892  009892  0E00               	movlw	0
 11893  009894  6E21               	movwf	?_fatfs_erase_fat+1,c
 11894  009896  D066               	goto	L29
 11895  009898                     l10155:
 11896  009898  2A31               	incf	fatfs_erase_fat@i,f,c
 11897  00989A  0E00               	movlw	0
 11898  00989C  2232               	addwfc	fatfs_erase_fat@i+1,f,c
 11899  00989E  2233               	addwfc	fatfs_erase_fat@i+2,f,c
 11900  0098A0  2234               	addwfc	fatfs_erase_fat@i+3,f,c
 11901  0098A2                     l10157:
 11902  0098A2  EE20 F01B          	lfsr	2,27
 11903  0098A6  5020               	movf	fatfs_erase_fat@fs,w,c
 11904  0098A8  26D9               	addwf	fsr2l,f,c
 11905  0098AA  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11906  0098AC  22DA               	addwfc	fsr2h,f,c
 11907  0098AE  CFDE F024          	movff	postinc2,??_fatfs_erase_fat
 11908  0098B2  CFDE F025          	movff	postinc2,??_fatfs_erase_fat+1
 11909  0098B6  CFDE F026          	movff	postinc2,??_fatfs_erase_fat+2
 11910  0098BA  CFDE F027          	movff	postinc2,??_fatfs_erase_fat+3
 11911  0098BE  EE20 F027          	lfsr	2,39
 11912  0098C2  5020               	movf	fatfs_erase_fat@fs,w,c
 11913  0098C4  26D9               	addwf	fsr2l,f,c
 11914  0098C6  5021               	movf	fatfs_erase_fat@fs+1,w,c
 11915  0098C8  22DA               	addwfc	fsr2h,f,c
 11916  0098CA  50DF               	movf	indf2,w,c
 11917  0098CC  6E28               	movwf	(??_fatfs_erase_fat+4)& (0+255),c
 11918  0098CE  C028  F029         	movff	??_fatfs_erase_fat+4,??_fatfs_erase_fat+5
 11919  0098D2  6A2A               	clrf	(??_fatfs_erase_fat+6)& (0+255),c
 11920  0098D4  6A2B               	clrf	(??_fatfs_erase_fat+7)& (0+255),c
 11921  0098D6  6A2C               	clrf	(??_fatfs_erase_fat+8)& (0+255),c
 11922  0098D8  5029               	movf	??_fatfs_erase_fat+5,w,c
 11923  0098DA  0224               	mulwf	??_fatfs_erase_fat,c
 11924  0098DC  CFF3 F02D          	movff	prodl,??_fatfs_erase_fat+9
 11925  0098E0  CFF4 F02E          	movff	prodh,??_fatfs_erase_fat+10
 11926  0098E4  6A2F               	clrf	(??_fatfs_erase_fat+11)& (0+255),c
 11927  0098E6  6A30               	clrf	(??_fatfs_erase_fat+12)& (0+255),c
 11928  0098E8  0225               	mulwf	??_fatfs_erase_fat+1,c
 11929  0098EA  50F3               	movf	243,w,c
 11930  0098EC  262E               	addwf	(??_fatfs_erase_fat+10)& (0+255),f,c
 11931  0098EE  50F4               	movf	244,w,c
 11932  0098F0  222F               	addwfc	(??_fatfs_erase_fat+11)& (0+255),f,c
 11933  0098F2  0E00               	movlw	0
 11934  0098F4  2230               	addwfc	(??_fatfs_erase_fat+12)& (0+255),f,c
 11935  0098F6  502A               	movf	??_fatfs_erase_fat+6,w,c
 11936  0098F8  0224               	mulwf	??_fatfs_erase_fat,c
 11937  0098FA  50F3               	movf	243,w,c
 11938  0098FC  262E               	addwf	(??_fatfs_erase_fat+10)& (0+255),f,c
 11939  0098FE  50F4               	movf	244,w,c
 11940  009900  222F               	addwfc	(??_fatfs_erase_fat+11)& (0+255),f,c
 11941  009902  0E00               	movlw	0
 11942  009904  2230               	addwfc	(??_fatfs_erase_fat+12)& (0+255),f,c
 11943  009906  5029               	movf	??_fatfs_erase_fat+5,w,c
 11944  009908  0226               	mulwf	??_fatfs_erase_fat+2,c
 11945  00990A  50F3               	movf	243,w,c
 11946  00990C  262F               	addwf	(??_fatfs_erase_fat+11)& (0+255),f,c
 11947  00990E  50F4               	movf	244,w,c
 11948  009910  2230               	addwfc	(??_fatfs_erase_fat+12)& (0+255),f,c
 11949  009912  502A               	movf	??_fatfs_erase_fat+6,w,c
 11950  009914  0225               	mulwf	??_fatfs_erase_fat+1,c
 11951  009916  50F3               	movf	243,w,c
 11952  009918  262F               	addwf	(??_fatfs_erase_fat+11)& (0+255),f,c
 11953  00991A  50F4               	movf	244,w,c
 11954  00991C  2230               	addwfc	(??_fatfs_erase_fat+12)& (0+255),f,c
 11955  00991E  502B               	movf	??_fatfs_erase_fat+7,w,c
 11956  009920  0224               	mulwf	??_fatfs_erase_fat,c
 11957  009922  50F3               	movf	243,w,c
 11958  009924  262F               	addwf	(??_fatfs_erase_fat+11)& (0+255),f,c
 11959  009926  50F4               	movf	244,w,c
 11960  009928  2230               	addwfc	(??_fatfs_erase_fat+12)& (0+255),f,c
 11961  00992A  5027               	movf	??_fatfs_erase_fat+3,w,c
 11962  00992C  0229               	mulwf	??_fatfs_erase_fat+5,c
 11963  00992E  50F3               	movf	243,w,c
 11964  009930  2630               	addwf	(??_fatfs_erase_fat+12)& (0+255),f,c
 11965  009932  502A               	movf	??_fatfs_erase_fat+6,w,c
 11966  009934  0226               	mulwf	??_fatfs_erase_fat+2,c
 11967  009936  50F3               	movf	243,w,c
 11968  009938  2630               	addwf	(??_fatfs_erase_fat+12)& (0+255),f,c
 11969  00993A  502B               	movf	??_fatfs_erase_fat+7,w,c
 11970  00993C  0225               	mulwf	??_fatfs_erase_fat+1,c
 11971  00993E  50F3               	movf	243,w,c
 11972  009940  2630               	addwf	(??_fatfs_erase_fat+12)& (0+255),f,c
 11973  009942  502C               	movf	??_fatfs_erase_fat+8,w,c
 11974  009944  0224               	mulwf	??_fatfs_erase_fat,c
 11975  009946  50F3               	movf	243,w,c
 11976  009948  2630               	addwf	(??_fatfs_erase_fat+12)& (0+255),f,c
 11977  00994A  502D               	movf	??_fatfs_erase_fat+9,w,c
 11978  00994C  5C31               	subwf	fatfs_erase_fat@i,w,c
 11979  00994E  502E               	movf	??_fatfs_erase_fat+10,w,c
 11980  009950  5832               	subwfb	fatfs_erase_fat@i+1,w,c
 11981  009952  502F               	movf	??_fatfs_erase_fat+11,w,c
 11982  009954  5833               	subwfb	fatfs_erase_fat@i+2,w,c
 11983  009956  5030               	movf	??_fatfs_erase_fat+12,w,c
 11984  009958  5834               	subwfb	fatfs_erase_fat@i+3,w,c
 11985  00995A  E201 D757          	bnc	l10149
 11986                           
 11987                           ;fat_format.c: 421: return 1;
 11988  00995E  0E00               	movlw	0
 11989  009960  6E21               	movwf	?_fatfs_erase_fat+1,c
 11990  009962  0E01               	movlw	1
 11991  009964                     L29:
 11992  009964  6E20               	movwf	?_fatfs_erase_fat,c
 11993  009966  0012               	return	
 11994  009968                     __end_of_fatfs_erase_fat:
 11995                           	opt stack 0
 11996                           tosu	equ	0xFFF
 11997                           tosh	equ	0xFFE
 11998                           tosl	equ	0xFFD
 11999                           pclath	equ	0xFFA
 12000                           tblptru	equ	0xFF8
 12001                           tblptrh	equ	0xFF7
 12002                           tblptrl	equ	0xFF6
 12003                           tablat	equ	0xFF5
 12004                           prodh	equ	0xFF4
 12005                           prodl	equ	0xFF3
 12006                           indf0	equ	0xFEF
 12007                           postinc0	equ	0xFEE
 12008                           fsr0h	equ	0xFEA
 12009                           fsr0l	equ	0xFE9
 12010                           wreg	equ	0xFE8
 12011                           indf1	equ	0xFE7
 12012                           postinc1	equ	0xFE6
 12013                           postdec1	equ	0xFE5
 12014                           fsr1h	equ	0xFE2
 12015                           fsr1l	equ	0xFE1
 12016                           indf2	equ	0xFDF
 12017                           postinc2	equ	0xFDE
 12018                           postdec2	equ	0xFDD
 12019                           fsr2h	equ	0xFDA
 12020                           fsr2l	equ	0xFD9
 12021                           status	equ	0xFD8
 12022                           
 12023 ;; *************** function _fatfs_create_boot_sector *****************
 12024 ;; Defined at:
 12025 ;;		line 115 in file "fat_format.c"
 12026 ;; Parameters:    Size  Location     Type
 12027 ;;  fs              2   31[COMRAM] PTR struct fatfs
 12028 ;;		 -> _fs(1095), 
 12029 ;;  boot_sector_    4   33[COMRAM] unsigned long 
 12030 ;;  vol_sectors     4   37[COMRAM] unsigned long 
 12031 ;;  name            2   41[COMRAM] PTR const unsigned char 
 12032 ;;		 -> STR_60(6), 
 12033 ;;  is_fat32        2   43[COMRAM] int 
 12034 ;; Auto vars:     Size  Location     Type
 12035 ;;  total_cluste    4   53[COMRAM] unsigned long 
 12036 ;;  i               2   57[COMRAM] int 
 12037 ;; Return value:  Size  Location     Type
 12038 ;;                  2   31[COMRAM] int 
 12039 ;; Registers used:
 12040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12041 ;; Tracked objects:
 12042 ;;		On entry : 0/0
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12046 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12047 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12048 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12049 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12050 ;;Total ram usage:       28 bytes
 12051 ;; Hardware stack levels used:    1
 12052 ;; Hardware stack levels required when called:    3
 12053 ;; This function calls:
 12054 ;;		___lldiv
 12055 ;;		_fatfs_calc_cluster_size
 12056 ;;		_media_write
 12057 ;;		_memset
 12058 ;;		_strlen
 12059 ;; This function is called by:
 12060 ;;		_fatfs_format_fat16
 12061 ;;		_fatfs_format_fat32
 12062 ;; This function uses a non-reentrant model
 12063 ;;
 12064                           
 12065                           	psect	text30
 12066  00E0BE                     __ptext30:
 12067                           	opt stack 0
 12068  00E0BE                     _fatfs_create_boot_sector:
 12069                           	opt stack 21
 12070                           
 12071                           ;fat_format.c: 117: uint32 total_clusters;
 12072                           ;fat_format.c: 118: int i;
 12073                           ;fat_format.c: 121: memset(fs->currentsector.sector, 0, 512);
 12074                           
 12075                           ;incstack = 0
 12076  00E0BE  0E31               	movlw	49
 12077  00E0C0  2420               	addwf	fatfs_create_boot_sector@fs,w,c
 12078  00E0C2  6E01               	movwf	memset@p1,c
 12079  00E0C4  0E00               	movlw	0
 12080  00E0C6  2021               	addwfc	fatfs_create_boot_sector@fs+1,w,c
 12081  00E0C8  6E02               	movwf	memset@p1+1,c
 12082  00E0CA  6A04               	clrf	memset@c+1,c
 12083  00E0CC  6A03               	clrf	memset@c,c
 12084  00E0CE  0E02               	movlw	2
 12085  00E0D0  6E06               	movwf	memset@n+1,c
 12086  00E0D2  0E00               	movlw	0
 12087  00E0D4  6A05               	clrf	memset@n,c
 12088  00E0D6  EC24  F020         	call	_memset	;wreg free
 12089                           
 12090                           ;fat_format.c: 124: fs->currentsector.sector[0] = 0xEB;
 12091  00E0DA  EE20 F031          	lfsr	2,49
 12092  00E0DE  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12093  00E0E0  26D9               	addwf	fsr2l,f,c
 12094  00E0E2  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12095  00E0E4  22DA               	addwfc	fsr2h,f,c
 12096  00E0E6  0EEB               	movlw	235
 12097  00E0E8  6EDF               	movwf	indf2,c
 12098                           
 12099                           ;fat_format.c: 125: fs->currentsector.sector[1] = 0x3C;
 12100  00E0EA  EE20 F032          	lfsr	2,50
 12101  00E0EE  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12102  00E0F0  26D9               	addwf	fsr2l,f,c
 12103  00E0F2  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12104  00E0F4  22DA               	addwfc	fsr2h,f,c
 12105  00E0F6  0E3C               	movlw	60
 12106  00E0F8  6EDF               	movwf	indf2,c
 12107                           
 12108                           ;fat_format.c: 126: fs->currentsector.sector[2] = 0x90;
 12109  00E0FA  EE20 F033          	lfsr	2,51
 12110  00E0FE  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12111  00E100  26D9               	addwf	fsr2l,f,c
 12112  00E102  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12113  00E104  22DA               	addwfc	fsr2h,f,c
 12114  00E106  0E90               	movlw	144
 12115  00E108  6EDF               	movwf	indf2,c
 12116                           
 12117                           ;fat_format.c: 127: fs->currentsector.sector[3] = 0x4D;
 12118  00E10A  EE20 F034          	lfsr	2,52
 12119  00E10E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12120  00E110  26D9               	addwf	fsr2l,f,c
 12121  00E112  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12122  00E114  22DA               	addwfc	fsr2h,f,c
 12123  00E116  0E4D               	movlw	77
 12124  00E118  6EDF               	movwf	indf2,c
 12125                           
 12126                           ;fat_format.c: 128: fs->currentsector.sector[4] = 0x53;
 12127  00E11A  EE20 F035          	lfsr	2,53
 12128  00E11E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12129  00E120  26D9               	addwf	fsr2l,f,c
 12130  00E122  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12131  00E124  22DA               	addwfc	fsr2h,f,c
 12132  00E126  0E53               	movlw	83
 12133  00E128  6EDF               	movwf	indf2,c
 12134                           
 12135                           ;fat_format.c: 129: fs->currentsector.sector[5] = 0x44;
 12136  00E12A  EE20 F036          	lfsr	2,54
 12137  00E12E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12138  00E130  26D9               	addwf	fsr2l,f,c
 12139  00E132  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12140  00E134  22DA               	addwfc	fsr2h,f,c
 12141  00E136  0E44               	movlw	68
 12142  00E138  6EDF               	movwf	indf2,c
 12143                           
 12144                           ;fat_format.c: 130: fs->currentsector.sector[6] = 0x4F;
 12145  00E13A  EE20 F037          	lfsr	2,55
 12146  00E13E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12147  00E140  26D9               	addwf	fsr2l,f,c
 12148  00E142  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12149  00E144  22DA               	addwfc	fsr2h,f,c
 12150  00E146  0E4F               	movlw	79
 12151  00E148  6EDF               	movwf	indf2,c
 12152                           
 12153                           ;fat_format.c: 131: fs->currentsector.sector[7] = 0x53;
 12154  00E14A  EE20 F038          	lfsr	2,56
 12155  00E14E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12156  00E150  26D9               	addwf	fsr2l,f,c
 12157  00E152  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12158  00E154  22DA               	addwfc	fsr2h,f,c
 12159  00E156  0E53               	movlw	83
 12160  00E158  6EDF               	movwf	indf2,c
 12161                           
 12162                           ;fat_format.c: 132: fs->currentsector.sector[8] = 0x35;
 12163  00E15A  EE20 F039          	lfsr	2,57
 12164  00E15E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12165  00E160  26D9               	addwf	fsr2l,f,c
 12166  00E162  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12167  00E164  22DA               	addwfc	fsr2h,f,c
 12168  00E166  0E35               	movlw	53
 12169  00E168  6EDF               	movwf	indf2,c
 12170                           
 12171                           ;fat_format.c: 133: fs->currentsector.sector[9] = 0x2E;
 12172  00E16A  EE20 F03A          	lfsr	2,58
 12173  00E16E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12174  00E170  26D9               	addwf	fsr2l,f,c
 12175  00E172  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12176  00E174  22DA               	addwfc	fsr2h,f,c
 12177  00E176  0E2E               	movlw	46
 12178  00E178  6EDF               	movwf	indf2,c
 12179                           
 12180                           ;fat_format.c: 134: fs->currentsector.sector[10] = 0x30;
 12181  00E17A  EE20 F03B          	lfsr	2,59
 12182  00E17E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12183  00E180  26D9               	addwf	fsr2l,f,c
 12184  00E182  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12185  00E184  22DA               	addwfc	fsr2h,f,c
 12186  00E186  0E30               	movlw	48
 12187  00E188  6EDF               	movwf	indf2,c
 12188                           
 12189                           ;fat_format.c: 137: fs->currentsector.sector[11] = (512 >> 0) & 0xFF;
 12190  00E18A  EE20 F03C          	lfsr	2,60
 12191  00E18E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12192  00E190  26D9               	addwf	fsr2l,f,c
 12193  00E192  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12194  00E194  22DA               	addwfc	fsr2h,f,c
 12195  00E196  6ADF               	clrf	indf2,c
 12196                           
 12197                           ;fat_format.c: 138: fs->currentsector.sector[12] = (512 >> 8) & 0xFF;
 12198  00E198  EE20 F03D          	lfsr	2,61
 12199  00E19C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12200  00E19E  26D9               	addwf	fsr2l,f,c
 12201  00E1A0  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12202  00E1A2  22DA               	addwfc	fsr2h,f,c
 12203  00E1A4  0E02               	movlw	2
 12204  00E1A6  6EDF               	movwf	indf2,c
 12205                           
 12206                           ;fat_format.c: 141: fs->sectors_per_cluster = fatfs_calc_cluster_size(vol_sectors, is_fa
      +                          t32);
 12207  00E1A8  C026  F001         	movff	fatfs_create_boot_sector@vol_sectors,fatfs_calc_cluster_size@sectors
 12208  00E1AC  C027  F002         	movff	fatfs_create_boot_sector@vol_sectors+1,fatfs_calc_cluster_size@sectors+1
 12209  00E1B0  C028  F003         	movff	fatfs_create_boot_sector@vol_sectors+2,fatfs_calc_cluster_size@sectors+2
 12210  00E1B4  C029  F004         	movff	fatfs_create_boot_sector@vol_sectors+3,fatfs_calc_cluster_size@sectors+3
 12211  00E1B8  C02C  F005         	movff	fatfs_create_boot_sector@is_fat32,fatfs_calc_cluster_size@is_fat32
 12212  00E1BC  C02D  F006         	movff	fatfs_create_boot_sector@is_fat32+1,fatfs_calc_cluster_size@is_fat32+1
 12213  00E1C0  ECB4  F034         	call	_fatfs_calc_cluster_size	;wreg free
 12214  00E1C4  C020  FFD9         	movff	fatfs_create_boot_sector@fs,fsr2l
 12215  00E1C8  C021  FFDA         	movff	fatfs_create_boot_sector@fs+1,fsr2h
 12216  00E1CC  6EDF               	movwf	indf2,c
 12217                           
 12218                           ;fat_format.c: 142: if (!fs->sectors_per_cluster)
 12219  00E1CE  C020  FFD9         	movff	fatfs_create_boot_sector@fs,fsr2l
 12220  00E1D2  C021  FFDA         	movff	fatfs_create_boot_sector@fs+1,fsr2h
 12221  00E1D6  50DF               	movf	indf2,w,c
 12222  00E1D8  E102 EF2B  F076    	bz	l10077
 12223                           
 12224                           ;fat_format.c: 146: fs->currentsector.sector[13] = fs->sectors_per_cluster;
 12225                           
 12226                           ;fat_format.c: 143: return 0;
 12227  00E1DE  C020  FFD9         	movff	fatfs_create_boot_sector@fs,fsr2l
 12228  00E1E2  C021  FFDA         	movff	fatfs_create_boot_sector@fs+1,fsr2h
 12229  00E1E6  EE10 F03E          	lfsr	1,62
 12230  00E1EA  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12231  00E1EC  26E1               	addwf	fsr1l,f,c
 12232  00E1EE  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12233  00E1F0  22E2               	addwfc	fsr1h,f,c
 12234  00E1F2  CFDF FFE7          	movff	indf2,indf1
 12235                           
 12236                           ;fat_format.c: 149: if (!is_fat32)
 12237  00E1F6  502D               	movf	fatfs_create_boot_sector@is_fat32+1,w,c
 12238  00E1F8  102C               	iorwf	fatfs_create_boot_sector@is_fat32,w,c
 12239  00E1FA  E108               	bnz	l9917
 12240                           
 12241                           ;fat_format.c: 150: fs->reserved_sectors = 8;
 12242  00E1FC  EE20 F025          	lfsr	2,37
 12243  00E200  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12244  00E202  26D9               	addwf	fsr2l,f,c
 12245  00E204  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12246  00E206  22DA               	addwfc	fsr2h,f,c
 12247  00E208  0E08               	movlw	8
 12248  00E20A  D007               	goto	L31
 12249  00E20C                     l9917:
 12250                           
 12251                           ;fat_format.c: 151: else
 12252                           ;fat_format.c: 152: fs->reserved_sectors = 32;
 12253  00E20C  EE20 F025          	lfsr	2,37
 12254  00E210  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12255  00E212  26D9               	addwf	fsr2l,f,c
 12256  00E214  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12257  00E216  22DA               	addwfc	fsr2h,f,c
 12258  00E218  0E20               	movlw	32
 12259  00E21A                     L31:
 12260  00E21A  6EDE               	movwf	postinc2,c
 12261  00E21C  6ADD               	clrf	postdec2,c
 12262                           
 12263                           ;fat_format.c: 153: fs->currentsector.sector[14] = (fs->reserved_sectors >> 0) & 0xFF;
 12264  00E21E  EE20 F025          	lfsr	2,37
 12265  00E222  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12266  00E224  26D9               	addwf	fsr2l,f,c
 12267  00E226  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12268  00E228  22DA               	addwfc	fsr2h,f,c
 12269  00E22A  EE10 F03F          	lfsr	1,63
 12270  00E22E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12271  00E230  26E1               	addwf	fsr1l,f,c
 12272  00E232  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12273  00E234  22E2               	addwfc	fsr1h,f,c
 12274  00E236  CFDF FFE7          	movff	indf2,indf1
 12275                           
 12276                           ;fat_format.c: 154: fs->currentsector.sector[15] = (fs->reserved_sectors >> 8) & 0xFF;
 12277  00E23A  EE20 F040          	lfsr	2,64
 12278  00E23E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12279  00E240  26D9               	addwf	fsr2l,f,c
 12280  00E242  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12281  00E244  22DA               	addwfc	fsr2h,f,c
 12282  00E246  EE10 F025          	lfsr	1,37
 12283  00E24A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12284  00E24C  26E1               	addwf	fsr1l,f,c
 12285  00E24E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12286  00E250  22E2               	addwfc	fsr1h,f,c
 12287  00E252  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 12288  00E256  CFE5 F02F          	movff	postdec1,??_fatfs_create_boot_sector+1
 12289  00E25A  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 12290  00E25E  6A2F               	clrf	??_fatfs_create_boot_sector+1,c
 12291  00E260  502E               	movf	??_fatfs_create_boot_sector,w,c
 12292  00E262  6EDF               	movwf	indf2,c
 12293                           
 12294                           ;fat_format.c: 157: fs->num_of_fats = 2;
 12295  00E264  EE20 F027          	lfsr	2,39
 12296  00E268  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12297  00E26A  26D9               	addwf	fsr2l,f,c
 12298  00E26C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12299  00E26E  22DA               	addwfc	fsr2h,f,c
 12300  00E270  0E02               	movlw	2
 12301  00E272  6EDF               	movwf	indf2,c
 12302                           
 12303                           ;fat_format.c: 158: fs->currentsector.sector[16] = fs->num_of_fats;
 12304  00E274  EE20 F027          	lfsr	2,39
 12305  00E278  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12306  00E27A  26D9               	addwf	fsr2l,f,c
 12307  00E27C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12308  00E27E  22DA               	addwfc	fsr2h,f,c
 12309  00E280  EE10 F041          	lfsr	1,65
 12310  00E284  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12311  00E286  26E1               	addwf	fsr1l,f,c
 12312  00E288  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12313  00E28A  22E2               	addwfc	fsr1h,f,c
 12314  00E28C  CFDF FFE7          	movff	indf2,indf1
 12315                           
 12316                           ;fat_format.c: 161: if (!is_fat32)
 12317  00E290  502D               	movf	fatfs_create_boot_sector@is_fat32+1,w,c
 12318  00E292  102C               	iorwf	fatfs_create_boot_sector@is_fat32,w,c
 12319  00E294  E12C               	bnz	l9933
 12320                           
 12321                           ;fat_format.c: 162: {
 12322                           ;fat_format.c: 163: fs->root_entry_count = 512;
 12323  00E296  EE20 F023          	lfsr	2,35
 12324  00E29A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12325  00E29C  26D9               	addwf	fsr2l,f,c
 12326  00E29E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12327  00E2A0  22DA               	addwfc	fsr2h,f,c
 12328  00E2A2  6ADE               	clrf	postinc2,c
 12329  00E2A4  0E02               	movlw	2
 12330  00E2A6  6EDD               	movwf	postdec2,c
 12331                           
 12332                           ;fat_format.c: 164: fs->currentsector.sector[17] = (fs->root_entry_count >> 0) & 0xFF;
 12333  00E2A8  EE20 F023          	lfsr	2,35
 12334  00E2AC  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12335  00E2AE  26D9               	addwf	fsr2l,f,c
 12336  00E2B0  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12337  00E2B2  22DA               	addwfc	fsr2h,f,c
 12338  00E2B4  EE10 F042          	lfsr	1,66
 12339  00E2B8  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12340  00E2BA  26E1               	addwf	fsr1l,f,c
 12341  00E2BC  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12342  00E2BE  22E2               	addwfc	fsr1h,f,c
 12343  00E2C0  CFDF FFE7          	movff	indf2,indf1
 12344                           
 12345                           ;fat_format.c: 165: fs->currentsector.sector[18] = (fs->root_entry_count >> 8) & 0xFF;
 12346  00E2C4  EE20 F043          	lfsr	2,67
 12347  00E2C8  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12348  00E2CA  26D9               	addwf	fsr2l,f,c
 12349  00E2CC  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12350  00E2CE  22DA               	addwfc	fsr2h,f,c
 12351  00E2D0  EE10 F023          	lfsr	1,35
 12352  00E2D4  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12353  00E2D6  26E1               	addwf	fsr1l,f,c
 12354  00E2D8  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12355  00E2DA  22E2               	addwfc	fsr1h,f,c
 12356  00E2DC  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 12357  00E2E0  CFE5 F02F          	movff	postdec1,??_fatfs_create_boot_sector+1
 12358  00E2E4  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 12359  00E2E8  6A2F               	clrf	??_fatfs_create_boot_sector+1,c
 12360  00E2EA  502E               	movf	??_fatfs_create_boot_sector,w,c
 12361  00E2EC  D016               	goto	L32
 12362  00E2EE                     l9933:
 12363                           
 12364                           ;fat_format.c: 167: else
 12365                           ;fat_format.c: 168: {
 12366                           ;fat_format.c: 169: fs->root_entry_count = 0;
 12367  00E2EE  EE20 F023          	lfsr	2,35
 12368  00E2F2  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12369  00E2F4  26D9               	addwf	fsr2l,f,c
 12370  00E2F6  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12371  00E2F8  22DA               	addwfc	fsr2h,f,c
 12372  00E2FA  6ADE               	clrf	postinc2,c
 12373  00E2FC  6ADD               	clrf	postdec2,c
 12374                           
 12375                           ;fat_format.c: 170: fs->currentsector.sector[17] = 0;
 12376  00E2FE  EE20 F042          	lfsr	2,66
 12377  00E302  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12378  00E304  26D9               	addwf	fsr2l,f,c
 12379  00E306  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12380  00E308  22DA               	addwfc	fsr2h,f,c
 12381  00E30A  6ADF               	clrf	indf2,c
 12382                           
 12383                           ;fat_format.c: 171: fs->currentsector.sector[18] = 0;
 12384  00E30C  EE20 F043          	lfsr	2,67
 12385  00E310  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12386  00E312  26D9               	addwf	fsr2l,f,c
 12387  00E314  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12388  00E316  22DA               	addwfc	fsr2h,f,c
 12389  00E318  0E00               	movlw	0
 12390  00E31A                     L32:
 12391  00E31A  6EDF               	movwf	indf2,c
 12392                           
 12393                           ;fat_format.c: 172: }
 12394                           ;fat_format.c: 175: fs->currentsector.sector[19] = 0x00;
 12395  00E31C  EE20 F044          	lfsr	2,68
 12396  00E320  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12397  00E322  26D9               	addwf	fsr2l,f,c
 12398  00E324  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12399  00E326  22DA               	addwfc	fsr2h,f,c
 12400  00E328  6ADF               	clrf	indf2,c
 12401                           
 12402                           ;fat_format.c: 176: fs->currentsector.sector[20] = 0x00;
 12403  00E32A  EE20 F045          	lfsr	2,69
 12404  00E32E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12405  00E330  26D9               	addwf	fsr2l,f,c
 12406  00E332  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12407  00E334  22DA               	addwfc	fsr2h,f,c
 12408  00E336  6ADF               	clrf	indf2,c
 12409                           
 12410                           ;fat_format.c: 179: fs->currentsector.sector[21] = 0xF8;
 12411  00E338  EE20 F046          	lfsr	2,70
 12412  00E33C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12413  00E33E  26D9               	addwf	fsr2l,f,c
 12414  00E340  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12415  00E342  22DA               	addwfc	fsr2h,f,c
 12416  00E344  0EF8               	movlw	248
 12417  00E346  6EDF               	movwf	indf2,c
 12418                           
 12419                           ;fat_format.c: 183: if (!is_fat32)
 12420  00E348  502D               	movf	fatfs_create_boot_sector@is_fat32+1,w,c
 12421  00E34A  102C               	iorwf	fatfs_create_boot_sector@is_fat32,w,c
 12422  00E34C  E001 D19E          	bnz	l10001
 12423                           
 12424                           ;fat_format.c: 184: {
 12425                           ;fat_format.c: 186: total_clusters = (vol_sectors / fs->sectors_per_cluster) + 1;
 12426  00E350  C026  F001         	movff	fatfs_create_boot_sector@vol_sectors,___lldiv@dividend
 12427  00E354  C027  F002         	movff	fatfs_create_boot_sector@vol_sectors+1,___lldiv@dividend+1
 12428  00E358  C028  F003         	movff	fatfs_create_boot_sector@vol_sectors+2,___lldiv@dividend+2
 12429  00E35C  C029  F004         	movff	fatfs_create_boot_sector@vol_sectors+3,___lldiv@dividend+3
 12430  00E360  C020  FFD9         	movff	fatfs_create_boot_sector@fs,fsr2l
 12431  00E364  C021  FFDA         	movff	fatfs_create_boot_sector@fs+1,fsr2h
 12432  00E368  50DF               	movf	indf2,w,c
 12433  00E36A  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 12434  00E36C  502E               	movf	??_fatfs_create_boot_sector,w,c
 12435  00E36E  6E05               	movwf	___lldiv@divisor,c
 12436  00E370  6A06               	clrf	___lldiv@divisor+1,c
 12437  00E372  6A07               	clrf	___lldiv@divisor+2,c
 12438  00E374  6A08               	clrf	___lldiv@divisor+3,c
 12439  00E376  EC85  F026         	call	___lldiv	;wreg free
 12440  00E37A  C001  F02F         	movff	?___lldiv,??_fatfs_create_boot_sector+1
 12441  00E37E  C002  F030         	movff	?___lldiv+1,??_fatfs_create_boot_sector+2
 12442  00E382  C003  F031         	movff	?___lldiv+2,??_fatfs_create_boot_sector+3
 12443  00E386  C004  F032         	movff	?___lldiv+3,??_fatfs_create_boot_sector+4
 12444  00E38A  282F               	incf	??_fatfs_create_boot_sector+1,w,c
 12445  00E38C  6E36               	movwf	fatfs_create_boot_sector@total_clusters,c
 12446  00E38E  0E00               	movlw	0
 12447  00E390  2030               	addwfc	??_fatfs_create_boot_sector+2,w,c
 12448  00E392  6E37               	movwf	fatfs_create_boot_sector@total_clusters+1,c
 12449  00E394  0E00               	movlw	0
 12450  00E396  2031               	addwfc	??_fatfs_create_boot_sector+3,w,c
 12451  00E398  6E38               	movwf	fatfs_create_boot_sector@total_clusters+2,c
 12452  00E39A  0E00               	movlw	0
 12453  00E39C  2032               	addwfc	??_fatfs_create_boot_sector+4,w,c
 12454  00E39E  6E39               	movwf	fatfs_create_boot_sector@total_clusters+3,c
 12455                           
 12456                           ;fat_format.c: 187: fs->fat_sectors = (total_clusters/(512/2)) + 1;
 12457  00E3A0  0E01               	movlw	1
 12458  00E3A2  C036  F02E         	movff	fatfs_create_boot_sector@total_clusters,??_fatfs_create_boot_sector
 12459  00E3A6  C037  F02F         	movff	fatfs_create_boot_sector@total_clusters+1,??_fatfs_create_boot_sector+1
 12460  00E3AA  C038  F030         	movff	fatfs_create_boot_sector@total_clusters+2,??_fatfs_create_boot_sector+2
 12461  00E3AE  C039  F031         	movff	fatfs_create_boot_sector@total_clusters+3,??_fatfs_create_boot_sector+3
 12462  00E3B2  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 12463  00E3B6  C030  F02F         	movff	??_fatfs_create_boot_sector+2,??_fatfs_create_boot_sector+1
 12464  00E3BA  C031  F030         	movff	??_fatfs_create_boot_sector+3,??_fatfs_create_boot_sector+2
 12465  00E3BE  6A31               	clrf	??_fatfs_create_boot_sector+3,c
 12466  00E3C0  242E               	addwf	??_fatfs_create_boot_sector,w,c
 12467  00E3C2  6E32               	movwf	(??_fatfs_create_boot_sector+4)& (0+255),c
 12468  00E3C4  0E00               	movlw	0
 12469  00E3C6  202F               	addwfc	??_fatfs_create_boot_sector+1,w,c
 12470  00E3C8  6E33               	movwf	(??_fatfs_create_boot_sector+5)& (0+255),c
 12471  00E3CA  0E00               	movlw	0
 12472  00E3CC  2030               	addwfc	??_fatfs_create_boot_sector+2,w,c
 12473  00E3CE  6E34               	movwf	(??_fatfs_create_boot_sector+6)& (0+255),c
 12474  00E3D0  0E00               	movlw	0
 12475  00E3D2  2031               	addwfc	??_fatfs_create_boot_sector+3,w,c
 12476  00E3D4  6E35               	movwf	(??_fatfs_create_boot_sector+7)& (0+255),c
 12477  00E3D6  EE20 F01B          	lfsr	2,27
 12478  00E3DA  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12479  00E3DC  26D9               	addwf	fsr2l,f,c
 12480  00E3DE  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12481  00E3E0  22DA               	addwfc	fsr2h,f,c
 12482  00E3E2  C032  FFDE         	movff	??_fatfs_create_boot_sector+4,postinc2
 12483  00E3E6  C033  FFDE         	movff	??_fatfs_create_boot_sector+5,postinc2
 12484  00E3EA  C034  FFDE         	movff	??_fatfs_create_boot_sector+6,postinc2
 12485  00E3EE  C035  FFDD         	movff	??_fatfs_create_boot_sector+7,postdec2
 12486  00E3F2  06D9               	decf	fsr2l,f,c
 12487  00E3F4  06D9               	decf	fsr2l,f,c
 12488                           
 12489                           ;fat_format.c: 188: fs->currentsector.sector[22] = (uint8)((fs->fat_sectors >> 0) & 0xFF
      +                          );
 12490  00E3F6  EE20 F01B          	lfsr	2,27
 12491  00E3FA  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12492  00E3FC  26D9               	addwf	fsr2l,f,c
 12493  00E3FE  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12494  00E400  22DA               	addwfc	fsr2h,f,c
 12495  00E402  EE10 F047          	lfsr	1,71
 12496  00E406  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12497  00E408  26E1               	addwf	fsr1l,f,c
 12498  00E40A  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12499  00E40C  22E2               	addwfc	fsr1h,f,c
 12500  00E40E  CFDF FFE7          	movff	indf2,indf1
 12501                           
 12502                           ;fat_format.c: 189: fs->currentsector.sector[23] = (uint8)((fs->fat_sectors >> 8) & 0xFF
      +                          );
 12503  00E412  EE20 F048          	lfsr	2,72
 12504  00E416  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12505  00E418  26D9               	addwf	fsr2l,f,c
 12506  00E41A  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12507  00E41C  22DA               	addwfc	fsr2h,f,c
 12508  00E41E  EE10 F01B          	lfsr	1,27
 12509  00E422  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12510  00E424  26E1               	addwf	fsr1l,f,c
 12511  00E426  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12512  00E428  22E2               	addwfc	fsr1h,f,c
 12513  00E42A  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 12514  00E42E  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 12515  00E432  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 12516  00E436  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 12517  00E43A  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 12518  00E43E  C030  F02F         	movff	??_fatfs_create_boot_sector+2,??_fatfs_create_boot_sector+1
 12519  00E442  C031  F030         	movff	??_fatfs_create_boot_sector+3,??_fatfs_create_boot_sector+2
 12520  00E446  6A31               	clrf	??_fatfs_create_boot_sector+3,c
 12521  00E448  502E               	movf	??_fatfs_create_boot_sector,w,c
 12522  00E44A  6EDF               	movwf	indf2,c
 12523                           
 12524                           ;fat_format.c: 192: fs->currentsector.sector[24] = 0x00;
 12525  00E44C  EE20 F049          	lfsr	2,73
 12526  00E450  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12527  00E452  26D9               	addwf	fsr2l,f,c
 12528  00E454  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12529  00E456  22DA               	addwfc	fsr2h,f,c
 12530  00E458  6ADF               	clrf	indf2,c
 12531                           
 12532                           ;fat_format.c: 193: fs->currentsector.sector[25] = 0x00;
 12533  00E45A  EE20 F04A          	lfsr	2,74
 12534  00E45E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12535  00E460  26D9               	addwf	fsr2l,f,c
 12536  00E462  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12537  00E464  22DA               	addwfc	fsr2h,f,c
 12538  00E466  6ADF               	clrf	indf2,c
 12539                           
 12540                           ;fat_format.c: 196: fs->currentsector.sector[26] = 0x00;
 12541  00E468  EE20 F04B          	lfsr	2,75
 12542  00E46C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12543  00E46E  26D9               	addwf	fsr2l,f,c
 12544  00E470  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12545  00E472  22DA               	addwfc	fsr2h,f,c
 12546  00E474  6ADF               	clrf	indf2,c
 12547                           
 12548                           ;fat_format.c: 197: fs->currentsector.sector[27] = 0x00;
 12549  00E476  EE20 F04C          	lfsr	2,76
 12550  00E47A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12551  00E47C  26D9               	addwf	fsr2l,f,c
 12552  00E47E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12553  00E480  22DA               	addwfc	fsr2h,f,c
 12554  00E482  6ADF               	clrf	indf2,c
 12555                           
 12556                           ;fat_format.c: 200: fs->currentsector.sector[28] = 0x20;
 12557  00E484  EE20 F04D          	lfsr	2,77
 12558  00E488  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12559  00E48A  26D9               	addwf	fsr2l,f,c
 12560  00E48C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12561  00E48E  22DA               	addwfc	fsr2h,f,c
 12562  00E490  0E20               	movlw	32
 12563  00E492  6EDF               	movwf	indf2,c
 12564                           
 12565                           ;fat_format.c: 201: fs->currentsector.sector[29] = 0x00;
 12566  00E494  EE20 F04E          	lfsr	2,78
 12567  00E498  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12568  00E49A  26D9               	addwf	fsr2l,f,c
 12569  00E49C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12570  00E49E  22DA               	addwfc	fsr2h,f,c
 12571  00E4A0  6ADF               	clrf	indf2,c
 12572                           
 12573                           ;fat_format.c: 202: fs->currentsector.sector[30] = 0x00;
 12574  00E4A2  EE20 F04F          	lfsr	2,79
 12575  00E4A6  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12576  00E4A8  26D9               	addwf	fsr2l,f,c
 12577  00E4AA  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12578  00E4AC  22DA               	addwfc	fsr2h,f,c
 12579  00E4AE  6ADF               	clrf	indf2,c
 12580                           
 12581                           ;fat_format.c: 203: fs->currentsector.sector[31] = 0x00;
 12582  00E4B0  EE20 F050          	lfsr	2,80
 12583  00E4B4  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12584  00E4B6  26D9               	addwf	fsr2l,f,c
 12585  00E4B8  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12586  00E4BA  22DA               	addwfc	fsr2h,f,c
 12587  00E4BC  6ADF               	clrf	indf2,c
 12588                           
 12589                           ;fat_format.c: 206: fs->currentsector.sector[32] = (uint8)((vol_sectors>>0)&0xFF);
 12590  00E4BE  EE20 F051          	lfsr	2,81
 12591  00E4C2  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12592  00E4C4  26D9               	addwf	fsr2l,f,c
 12593  00E4C6  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12594  00E4C8  22DA               	addwfc	fsr2h,f,c
 12595  00E4CA  C026  FFDF         	movff	fatfs_create_boot_sector@vol_sectors,indf2
 12596                           
 12597                           ;fat_format.c: 207: fs->currentsector.sector[33] = (uint8)((vol_sectors>>8)&0xFF);
 12598  00E4CE  EE20 F052          	lfsr	2,82
 12599  00E4D2  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12600  00E4D4  26D9               	addwf	fsr2l,f,c
 12601  00E4D6  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12602  00E4D8  22DA               	addwfc	fsr2h,f,c
 12603  00E4DA  C027  FFDF         	movff	fatfs_create_boot_sector@vol_sectors+1,indf2
 12604                           
 12605                           ;fat_format.c: 208: fs->currentsector.sector[34] = (uint8)((vol_sectors>>16)&0xFF);
 12606  00E4DE  EE20 F053          	lfsr	2,83
 12607  00E4E2  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12608  00E4E4  26D9               	addwf	fsr2l,f,c
 12609  00E4E6  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12610  00E4E8  22DA               	addwfc	fsr2h,f,c
 12611  00E4EA  C028  FFDF         	movff	fatfs_create_boot_sector@vol_sectors+2,indf2
 12612                           
 12613                           ;fat_format.c: 209: fs->currentsector.sector[35] = (uint8)((vol_sectors>>24)&0xFF);
 12614  00E4EE  EE20 F054          	lfsr	2,84
 12615  00E4F2  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12616  00E4F4  26D9               	addwf	fsr2l,f,c
 12617  00E4F6  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12618  00E4F8  22DA               	addwfc	fsr2h,f,c
 12619  00E4FA  C029  FFDF         	movff	fatfs_create_boot_sector@vol_sectors+3,indf2
 12620                           
 12621                           ;fat_format.c: 212: fs->currentsector.sector[36] = 0x00;
 12622  00E4FE  EE20 F055          	lfsr	2,85
 12623  00E502  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12624  00E504  26D9               	addwf	fsr2l,f,c
 12625  00E506  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12626  00E508  22DA               	addwfc	fsr2h,f,c
 12627  00E50A  6ADF               	clrf	indf2,c
 12628                           
 12629                           ;fat_format.c: 215: fs->currentsector.sector[37] = 0x00;
 12630  00E50C  EE20 F056          	lfsr	2,86
 12631  00E510  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12632  00E512  26D9               	addwf	fsr2l,f,c
 12633  00E514  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12634  00E516  22DA               	addwfc	fsr2h,f,c
 12635  00E518  6ADF               	clrf	indf2,c
 12636                           
 12637                           ;fat_format.c: 218: fs->currentsector.sector[38] = 0x29;
 12638  00E51A  EE20 F057          	lfsr	2,87
 12639  00E51E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12640  00E520  26D9               	addwf	fsr2l,f,c
 12641  00E522  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12642  00E524  22DA               	addwfc	fsr2h,f,c
 12643  00E526  0E29               	movlw	41
 12644  00E528  6EDF               	movwf	indf2,c
 12645                           
 12646                           ;fat_format.c: 221: fs->currentsector.sector[39] = 0x12;
 12647  00E52A  EE20 F058          	lfsr	2,88
 12648  00E52E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12649  00E530  26D9               	addwf	fsr2l,f,c
 12650  00E532  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12651  00E534  22DA               	addwfc	fsr2h,f,c
 12652  00E536  0E12               	movlw	18
 12653  00E538  6EDF               	movwf	indf2,c
 12654                           
 12655                           ;fat_format.c: 222: fs->currentsector.sector[40] = 0x34;
 12656  00E53A  EE20 F059          	lfsr	2,89
 12657  00E53E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12658  00E540  26D9               	addwf	fsr2l,f,c
 12659  00E542  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12660  00E544  22DA               	addwfc	fsr2h,f,c
 12661  00E546  0E34               	movlw	52
 12662  00E548  6EDF               	movwf	indf2,c
 12663                           
 12664                           ;fat_format.c: 223: fs->currentsector.sector[41] = 0x56;
 12665  00E54A  EE20 F05A          	lfsr	2,90
 12666  00E54E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12667  00E550  26D9               	addwf	fsr2l,f,c
 12668  00E552  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12669  00E554  22DA               	addwfc	fsr2h,f,c
 12670  00E556  0E56               	movlw	86
 12671  00E558  6EDF               	movwf	indf2,c
 12672                           
 12673                           ;fat_format.c: 224: fs->currentsector.sector[42] = 0x78;
 12674  00E55A  EE20 F05B          	lfsr	2,91
 12675  00E55E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12676  00E560  26D9               	addwf	fsr2l,f,c
 12677  00E562  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12678  00E564  22DA               	addwfc	fsr2h,f,c
 12679  00E566  0E78               	movlw	120
 12680  00E568  6EDF               	movwf	indf2,c
 12681                           
 12682                           ;fat_format.c: 227: for (i=0;i<11;i++)
 12683  00E56A  6A3B               	clrf	fatfs_create_boot_sector@i+1,c
 12684  00E56C  6A3A               	clrf	fatfs_create_boot_sector@i,c
 12685  00E56E  503B               	movf	fatfs_create_boot_sector@i+1,w,c
 12686  00E570  0A80               	xorlw	128
 12687  00E572  0F80               	addlw	-128
 12688  00E574  0E0B               	movlw	11
 12689  00E576  B4D8               	btfsc	status,2,c
 12690  00E578  5C3A               	subwf	fatfs_create_boot_sector@i,w,c
 12691  00E57A  E24D               	bc	l9999
 12692                           
 12693                           ;fat_format.c: 228: {
 12694                           ;fat_format.c: 229: if (i < (int)strlen(name))
 12695  00E57C  C02B  F002         	movff	fatfs_create_boot_sector@name+1,strlen@s+1
 12696  00E580  C02A  F001         	movff	fatfs_create_boot_sector@name,strlen@s
 12697  00E584  EC7B  F022         	call	_strlen	;wreg free
 12698  00E588  503B               	movf	fatfs_create_boot_sector@i+1,w,c
 12699  00E58A  0A80               	xorlw	128
 12700  00E58C  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 12701  00E58E  5001               	movf	?_strlen,w,c
 12702  00E590  5C3A               	subwf	fatfs_create_boot_sector@i,w,c
 12703  00E592  5002               	movf	?_strlen+1,w,c
 12704  00E594  0A80               	xorlw	128
 12705  00E596  582E               	subwfb	??_fatfs_create_boot_sector& (0+255),w,c
 12706  00E598  E225               	bc	l9993
 12707                           
 12708                           ;fat_format.c: 230: fs->currentsector.sector[i+43] = name[i];
 12709  00E59A  C02A  F02E         	movff	fatfs_create_boot_sector@name,??_fatfs_create_boot_sector
 12710  00E59E  C02B  F02F         	movff	fatfs_create_boot_sector@name+1,??_fatfs_create_boot_sector+1
 12711  00E5A2  503A               	movf	fatfs_create_boot_sector@i,w,c
 12712  00E5A4  262E               	addwf	??_fatfs_create_boot_sector,f,c
 12713  00E5A6  503B               	movf	fatfs_create_boot_sector@i+1,w,c
 12714  00E5A8  222F               	addwfc	??_fatfs_create_boot_sector+1,f,c
 12715  00E5AA  C02E  FFF6         	movff	??_fatfs_create_boot_sector,tblptrl
 12716  00E5AE  C02F  FFF7         	movff	??_fatfs_create_boot_sector+1,tblptrh
 12717  00E5B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12718  00E5B2  6AF8               	clrf	tblptru,c
 12719  00E5B4                     	endif
 12720  00E5B4                     	if	0	;tblptru may be non-zero
 12721  00E5B4                     	endif
 12722  00E5B4  0E2B               	movlw	43
 12723  00E5B6  243A               	addwf	fatfs_create_boot_sector@i,w,c
 12724  00E5B8  6E30               	movwf	(??_fatfs_create_boot_sector+2)& (0+255),c
 12725  00E5BA  0E00               	movlw	0
 12726  00E5BC  203B               	addwfc	fatfs_create_boot_sector@i+1,w,c
 12727  00E5BE  6E31               	movwf	(??_fatfs_create_boot_sector+3)& (0+255),c
 12728  00E5C0  C020  F032         	movff	fatfs_create_boot_sector@fs,??_fatfs_create_boot_sector+4
 12729  00E5C4  C021  F033         	movff	fatfs_create_boot_sector@fs+1,??_fatfs_create_boot_sector+5
 12730  00E5C8  5030               	movf	??_fatfs_create_boot_sector+2,w,c
 12731  00E5CA  2632               	addwf	??_fatfs_create_boot_sector+4,f,c
 12732  00E5CC  5031               	movf	??_fatfs_create_boot_sector+3,w,c
 12733  00E5CE  2233               	addwfc	??_fatfs_create_boot_sector+5,f,c
 12734  00E5D0  0E31               	movlw	49
 12735  00E5D2  2432               	addwf	??_fatfs_create_boot_sector+4,w,c
 12736  00E5D4  6ED9               	movwf	fsr2l,c
 12737  00E5D6  0E00               	movlw	0
 12738  00E5D8  2033               	addwfc	??_fatfs_create_boot_sector+5,w,c
 12739  00E5DA  6EDA               	movwf	fsr2h,c
 12740  00E5DC  0008               	tblrd		*
 12741  00E5DE  CFF5 FFDF          	movff	tablat,indf2
 12742  00E5E2  D016               	goto	l9995
 12743  00E5E4                     l9993:
 12744                           
 12745                           ;fat_format.c: 231: else
 12746                           ;fat_format.c: 232: fs->currentsector.sector[i+43] = ' ';
 12747  00E5E4  0E2B               	movlw	43
 12748  00E5E6  243A               	addwf	fatfs_create_boot_sector@i,w,c
 12749  00E5E8  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 12750  00E5EA  0E00               	movlw	0
 12751  00E5EC  203B               	addwfc	fatfs_create_boot_sector@i+1,w,c
 12752  00E5EE  6E2F               	movwf	(??_fatfs_create_boot_sector+1)& (0+255),c
 12753  00E5F0  C020  F030         	movff	fatfs_create_boot_sector@fs,??_fatfs_create_boot_sector+2
 12754  00E5F4  C021  F031         	movff	fatfs_create_boot_sector@fs+1,??_fatfs_create_boot_sector+3
 12755  00E5F8  502E               	movf	??_fatfs_create_boot_sector,w,c
 12756  00E5FA  2630               	addwf	??_fatfs_create_boot_sector+2,f,c
 12757  00E5FC  502F               	movf	??_fatfs_create_boot_sector+1,w,c
 12758  00E5FE  2231               	addwfc	??_fatfs_create_boot_sector+3,f,c
 12759  00E600  0E31               	movlw	49
 12760  00E602  2430               	addwf	??_fatfs_create_boot_sector+2,w,c
 12761  00E604  6ED9               	movwf	fsr2l,c
 12762  00E606  0E00               	movlw	0
 12763  00E608  2031               	addwfc	??_fatfs_create_boot_sector+3,w,c
 12764  00E60A  6EDA               	movwf	fsr2h,c
 12765  00E60C  0E20               	movlw	32
 12766  00E60E  6EDF               	movwf	indf2,c
 12767  00E610                     l9995:
 12768  00E610  4A3A               	infsnz	fatfs_create_boot_sector@i,f,c
 12769  00E612  2A3B               	incf	fatfs_create_boot_sector@i+1,f,c
 12770  00E614  D7AC               	goto	L33
 12771  00E616                     l9999:
 12772                           
 12773                           ;fat_format.c: 233: }
 12774                           ;fat_format.c: 236: fs->currentsector.sector[54] = 'F';
 12775  00E616  EE20 F067          	lfsr	2,103
 12776  00E61A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12777  00E61C  26D9               	addwf	fsr2l,f,c
 12778  00E61E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12779  00E620  22DA               	addwfc	fsr2h,f,c
 12780  00E622  0E46               	movlw	70
 12781  00E624  6EDF               	movwf	indf2,c
 12782                           
 12783                           ;fat_format.c: 237: fs->currentsector.sector[55] = 'A';
 12784  00E626  EE20 F068          	lfsr	2,104
 12785  00E62A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12786  00E62C  26D9               	addwf	fsr2l,f,c
 12787  00E62E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12788  00E630  22DA               	addwfc	fsr2h,f,c
 12789  00E632  0E41               	movlw	65
 12790  00E634  6EDF               	movwf	indf2,c
 12791                           
 12792                           ;fat_format.c: 238: fs->currentsector.sector[56] = 'T';
 12793  00E636  EE20 F069          	lfsr	2,105
 12794  00E63A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12795  00E63C  26D9               	addwf	fsr2l,f,c
 12796  00E63E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12797  00E640  22DA               	addwfc	fsr2h,f,c
 12798  00E642  0E54               	movlw	84
 12799  00E644  6EDF               	movwf	indf2,c
 12800                           
 12801                           ;fat_format.c: 239: fs->currentsector.sector[57] = '1';
 12802  00E646  EE20 F06A          	lfsr	2,106
 12803  00E64A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12804  00E64C  26D9               	addwf	fsr2l,f,c
 12805  00E64E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12806  00E650  22DA               	addwfc	fsr2h,f,c
 12807  00E652  0E31               	movlw	49
 12808  00E654  6EDF               	movwf	indf2,c
 12809                           
 12810                           ;fat_format.c: 240: fs->currentsector.sector[58] = '6';
 12811  00E656  EE20 F06B          	lfsr	2,107
 12812  00E65A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12813  00E65C  26D9               	addwf	fsr2l,f,c
 12814  00E65E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12815  00E660  22DA               	addwfc	fsr2h,f,c
 12816  00E662  0E36               	movlw	54
 12817  00E664  6EDF               	movwf	indf2,c
 12818                           
 12819                           ;fat_format.c: 241: fs->currentsector.sector[59] = ' ';
 12820  00E666  EE20 F06C          	lfsr	2,108
 12821  00E66A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12822  00E66C  26D9               	addwf	fsr2l,f,c
 12823  00E66E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12824  00E670  22DA               	addwfc	fsr2h,f,c
 12825  00E672  0E20               	movlw	32
 12826  00E674  6EDF               	movwf	indf2,c
 12827                           
 12828                           ;fat_format.c: 242: fs->currentsector.sector[60] = ' ';
 12829  00E676  EE20 F06D          	lfsr	2,109
 12830  00E67A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12831  00E67C  26D9               	addwf	fsr2l,f,c
 12832  00E67E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12833  00E680  22DA               	addwfc	fsr2h,f,c
 12834  00E682  0E20               	movlw	32
 12835  00E684  6EDF               	movwf	indf2,c
 12836                           
 12837                           ;fat_format.c: 243: fs->currentsector.sector[61] = ' ';
 12838  00E686  EE20 F06E          	lfsr	2,110
 12839  00E68A  D29A               	goto	L34
 12840  00E68C                     l10001:
 12841                           
 12842                           ;fat_format.c: 250: else
 12843                           ;fat_format.c: 251: {
 12844                           ;fat_format.c: 253: fs->currentsector.sector[22] = 0;
 12845  00E68C  EE20 F047          	lfsr	2,71
 12846  00E690  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12847  00E692  26D9               	addwf	fsr2l,f,c
 12848  00E694  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12849  00E696  22DA               	addwfc	fsr2h,f,c
 12850  00E698  6ADF               	clrf	indf2,c
 12851                           
 12852                           ;fat_format.c: 254: fs->currentsector.sector[23] = 0;
 12853  00E69A  EE20 F048          	lfsr	2,72
 12854  00E69E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12855  00E6A0  26D9               	addwf	fsr2l,f,c
 12856  00E6A2  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12857  00E6A4  22DA               	addwfc	fsr2h,f,c
 12858  00E6A6  6ADF               	clrf	indf2,c
 12859                           
 12860                           ;fat_format.c: 257: fs->currentsector.sector[24] = 0x3F;
 12861  00E6A8  EE20 F049          	lfsr	2,73
 12862  00E6AC  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12863  00E6AE  26D9               	addwf	fsr2l,f,c
 12864  00E6B0  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12865  00E6B2  22DA               	addwfc	fsr2h,f,c
 12866  00E6B4  0E3F               	movlw	63
 12867  00E6B6  6EDF               	movwf	indf2,c
 12868                           
 12869                           ;fat_format.c: 258: fs->currentsector.sector[25] = 0x00;
 12870  00E6B8  EE20 F04A          	lfsr	2,74
 12871  00E6BC  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12872  00E6BE  26D9               	addwf	fsr2l,f,c
 12873  00E6C0  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12874  00E6C2  22DA               	addwfc	fsr2h,f,c
 12875  00E6C4  6ADF               	clrf	indf2,c
 12876                           
 12877                           ;fat_format.c: 261: fs->currentsector.sector[26] = 0xFF;
 12878  00E6C6  EE20 F04B          	lfsr	2,75
 12879  00E6CA  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12880  00E6CC  26D9               	addwf	fsr2l,f,c
 12881  00E6CE  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12882  00E6D0  22DA               	addwfc	fsr2h,f,c
 12883  00E6D2  68DF               	setf	indf2,c
 12884                           
 12885                           ;fat_format.c: 262: fs->currentsector.sector[27] = 0x00;
 12886  00E6D4  EE20 F04C          	lfsr	2,76
 12887  00E6D8  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12888  00E6DA  26D9               	addwf	fsr2l,f,c
 12889  00E6DC  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12890  00E6DE  22DA               	addwfc	fsr2h,f,c
 12891  00E6E0  6ADF               	clrf	indf2,c
 12892                           
 12893                           ;fat_format.c: 265: fs->currentsector.sector[28] = 0x00;
 12894  00E6E2  EE20 F04D          	lfsr	2,77
 12895  00E6E6  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12896  00E6E8  26D9               	addwf	fsr2l,f,c
 12897  00E6EA  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12898  00E6EC  22DA               	addwfc	fsr2h,f,c
 12899  00E6EE  6ADF               	clrf	indf2,c
 12900                           
 12901                           ;fat_format.c: 266: fs->currentsector.sector[29] = 0x00;
 12902  00E6F0  EE20 F04E          	lfsr	2,78
 12903  00E6F4  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12904  00E6F6  26D9               	addwf	fsr2l,f,c
 12905  00E6F8  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12906  00E6FA  22DA               	addwfc	fsr2h,f,c
 12907  00E6FC  6ADF               	clrf	indf2,c
 12908                           
 12909                           ;fat_format.c: 267: fs->currentsector.sector[30] = 0x00;
 12910  00E6FE  EE20 F04F          	lfsr	2,79
 12911  00E702  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12912  00E704  26D9               	addwf	fsr2l,f,c
 12913  00E706  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12914  00E708  22DA               	addwfc	fsr2h,f,c
 12915  00E70A  6ADF               	clrf	indf2,c
 12916                           
 12917                           ;fat_format.c: 268: fs->currentsector.sector[31] = 0x00;
 12918  00E70C  EE20 F050          	lfsr	2,80
 12919  00E710  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12920  00E712  26D9               	addwf	fsr2l,f,c
 12921  00E714  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12922  00E716  22DA               	addwfc	fsr2h,f,c
 12923  00E718  6ADF               	clrf	indf2,c
 12924                           
 12925                           ;fat_format.c: 271: fs->currentsector.sector[32] = (uint8)((vol_sectors>>0)&0xFF);
 12926  00E71A  EE20 F051          	lfsr	2,81
 12927  00E71E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12928  00E720  26D9               	addwf	fsr2l,f,c
 12929  00E722  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12930  00E724  22DA               	addwfc	fsr2h,f,c
 12931  00E726  C026  FFDF         	movff	fatfs_create_boot_sector@vol_sectors,indf2
 12932                           
 12933                           ;fat_format.c: 272: fs->currentsector.sector[33] = (uint8)((vol_sectors>>8)&0xFF);
 12934  00E72A  EE20 F052          	lfsr	2,82
 12935  00E72E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12936  00E730  26D9               	addwf	fsr2l,f,c
 12937  00E732  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12938  00E734  22DA               	addwfc	fsr2h,f,c
 12939  00E736  C027  FFDF         	movff	fatfs_create_boot_sector@vol_sectors+1,indf2
 12940                           
 12941                           ;fat_format.c: 273: fs->currentsector.sector[34] = (uint8)((vol_sectors>>16)&0xFF);
 12942  00E73A  EE20 F053          	lfsr	2,83
 12943  00E73E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12944  00E740  26D9               	addwf	fsr2l,f,c
 12945  00E742  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12946  00E744  22DA               	addwfc	fsr2h,f,c
 12947  00E746  C028  FFDF         	movff	fatfs_create_boot_sector@vol_sectors+2,indf2
 12948                           
 12949                           ;fat_format.c: 274: fs->currentsector.sector[35] = (uint8)((vol_sectors>>24)&0xFF);
 12950  00E74A  EE20 F054          	lfsr	2,84
 12951  00E74E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 12952  00E750  26D9               	addwf	fsr2l,f,c
 12953  00E752  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 12954  00E754  22DA               	addwfc	fsr2h,f,c
 12955  00E756  C029  FFDF         	movff	fatfs_create_boot_sector@vol_sectors+3,indf2
 12956                           
 12957                           ;fat_format.c: 276: total_clusters = (vol_sectors / fs->sectors_per_cluster) + 1;
 12958  00E75A  C026  F001         	movff	fatfs_create_boot_sector@vol_sectors,___lldiv@dividend
 12959  00E75E  C027  F002         	movff	fatfs_create_boot_sector@vol_sectors+1,___lldiv@dividend+1
 12960  00E762  C028  F003         	movff	fatfs_create_boot_sector@vol_sectors+2,___lldiv@dividend+2
 12961  00E766  C029  F004         	movff	fatfs_create_boot_sector@vol_sectors+3,___lldiv@dividend+3
 12962  00E76A  C020  FFD9         	movff	fatfs_create_boot_sector@fs,fsr2l
 12963  00E76E  C021  FFDA         	movff	fatfs_create_boot_sector@fs+1,fsr2h
 12964  00E772  50DF               	movf	indf2,w,c
 12965  00E774  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 12966  00E776  502E               	movf	??_fatfs_create_boot_sector,w,c
 12967  00E778  6E05               	movwf	___lldiv@divisor,c
 12968  00E77A  6A06               	clrf	___lldiv@divisor+1,c
 12969  00E77C  6A07               	clrf	___lldiv@divisor+2,c
 12970  00E77E  6A08               	clrf	___lldiv@divisor+3,c
 12971  00E780  EC85  F026         	call	___lldiv	;wreg free
 12972  00E784  C001  F02F         	movff	?___lldiv,??_fatfs_create_boot_sector+1
 12973  00E788  C002  F030         	movff	?___lldiv+1,??_fatfs_create_boot_sector+2
 12974  00E78C  C003  F031         	movff	?___lldiv+2,??_fatfs_create_boot_sector+3
 12975  00E790  C004  F032         	movff	?___lldiv+3,??_fatfs_create_boot_sector+4
 12976  00E794  282F               	incf	??_fatfs_create_boot_sector+1,w,c
 12977  00E796  6E36               	movwf	fatfs_create_boot_sector@total_clusters,c
 12978  00E798  0E00               	movlw	0
 12979  00E79A  2030               	addwfc	??_fatfs_create_boot_sector+2,w,c
 12980  00E79C  6E37               	movwf	fatfs_create_boot_sector@total_clusters+1,c
 12981  00E79E  0E00               	movlw	0
 12982  00E7A0  2031               	addwfc	??_fatfs_create_boot_sector+3,w,c
 12983  00E7A2  6E38               	movwf	fatfs_create_boot_sector@total_clusters+2,c
 12984  00E7A4  0E00               	movlw	0
 12985  00E7A6  2032               	addwfc	??_fatfs_create_boot_sector+4,w,c
 12986  00E7A8  6E39               	movwf	fatfs_create_boot_sector@total_clusters+3,c
 12987                           
 12988                           ;fat_format.c: 277: fs->fat_sectors = (total_clusters/(512/4)) + 1;
 12989  00E7AA  C036  F02E         	movff	fatfs_create_boot_sector@total_clusters,??_fatfs_create_boot_sector
 12990  00E7AE  C037  F02F         	movff	fatfs_create_boot_sector@total_clusters+1,??_fatfs_create_boot_sector+1
 12991  00E7B2  C038  F030         	movff	fatfs_create_boot_sector@total_clusters+2,??_fatfs_create_boot_sector+2
 12992  00E7B6  C039  F031         	movff	fatfs_create_boot_sector@total_clusters+3,??_fatfs_create_boot_sector+3
 12993  00E7BA  0E08               	movlw	8
 12994  00E7BC  D005               	goto	u11140
 12995  00E7BE                     u11145:
 12996  00E7BE  90D8               	bcf	status,0,c
 12997  00E7C0  3231               	rrcf	??_fatfs_create_boot_sector+3,f,c
 12998  00E7C2  3230               	rrcf	??_fatfs_create_boot_sector+2,f,c
 12999  00E7C4  322F               	rrcf	??_fatfs_create_boot_sector+1,f,c
 13000  00E7C6  322E               	rrcf	??_fatfs_create_boot_sector,f,c
 13001  00E7C8                     u11140:
 13002  00E7C8  2EE8               	decfsz	wreg,f,c
 13003  00E7CA  D7F9               	goto	u11145
 13004  00E7CC  282E               	incf	??_fatfs_create_boot_sector,w,c
 13005  00E7CE  6E32               	movwf	(??_fatfs_create_boot_sector+4)& (0+255),c
 13006  00E7D0  0E00               	movlw	0
 13007  00E7D2  202F               	addwfc	??_fatfs_create_boot_sector+1,w,c
 13008  00E7D4  6E33               	movwf	(??_fatfs_create_boot_sector+5)& (0+255),c
 13009  00E7D6  0E00               	movlw	0
 13010  00E7D8  2030               	addwfc	??_fatfs_create_boot_sector+2,w,c
 13011  00E7DA  6E34               	movwf	(??_fatfs_create_boot_sector+6)& (0+255),c
 13012  00E7DC  0E00               	movlw	0
 13013  00E7DE  2031               	addwfc	??_fatfs_create_boot_sector+3,w,c
 13014  00E7E0  6E35               	movwf	(??_fatfs_create_boot_sector+7)& (0+255),c
 13015  00E7E2  EE20 F01B          	lfsr	2,27
 13016  00E7E6  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13017  00E7E8  26D9               	addwf	fsr2l,f,c
 13018  00E7EA  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13019  00E7EC  22DA               	addwfc	fsr2h,f,c
 13020  00E7EE  C032  FFDE         	movff	??_fatfs_create_boot_sector+4,postinc2
 13021  00E7F2  C033  FFDE         	movff	??_fatfs_create_boot_sector+5,postinc2
 13022  00E7F6  C034  FFDE         	movff	??_fatfs_create_boot_sector+6,postinc2
 13023  00E7FA  C035  FFDD         	movff	??_fatfs_create_boot_sector+7,postdec2
 13024  00E7FE  06D9               	decf	fsr2l,f,c
 13025  00E800  06D9               	decf	fsr2l,f,c
 13026                           
 13027                           ;fat_format.c: 280: fs->currentsector.sector[36] = (uint8)((fs->fat_sectors>>0)&0xFF);
 13028  00E802  EE20 F01B          	lfsr	2,27
 13029  00E806  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13030  00E808  26D9               	addwf	fsr2l,f,c
 13031  00E80A  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13032  00E80C  22DA               	addwfc	fsr2h,f,c
 13033  00E80E  EE10 F055          	lfsr	1,85
 13034  00E812  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13035  00E814  26E1               	addwf	fsr1l,f,c
 13036  00E816  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13037  00E818  22E2               	addwfc	fsr1h,f,c
 13038  00E81A  CFDF FFE7          	movff	indf2,indf1
 13039                           
 13040                           ;fat_format.c: 281: fs->currentsector.sector[37] = (uint8)((fs->fat_sectors>>8)&0xFF);
 13041  00E81E  EE20 F056          	lfsr	2,86
 13042  00E822  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13043  00E824  26D9               	addwf	fsr2l,f,c
 13044  00E826  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13045  00E828  22DA               	addwfc	fsr2h,f,c
 13046  00E82A  EE10 F01B          	lfsr	1,27
 13047  00E82E  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13048  00E830  26E1               	addwf	fsr1l,f,c
 13049  00E832  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13050  00E834  22E2               	addwfc	fsr1h,f,c
 13051  00E836  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13052  00E83A  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 13053  00E83E  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 13054  00E842  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 13055  00E846  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 13056  00E84A  C030  F02F         	movff	??_fatfs_create_boot_sector+2,??_fatfs_create_boot_sector+1
 13057  00E84E  C031  F030         	movff	??_fatfs_create_boot_sector+3,??_fatfs_create_boot_sector+2
 13058  00E852  6A31               	clrf	??_fatfs_create_boot_sector+3,c
 13059  00E854  502E               	movf	??_fatfs_create_boot_sector,w,c
 13060  00E856  6EDF               	movwf	indf2,c
 13061                           
 13062                           ;fat_format.c: 282: fs->currentsector.sector[38] = (uint8)((fs->fat_sectors>>16)&0xFF);
 13063  00E858  EE20 F057          	lfsr	2,87
 13064  00E85C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13065  00E85E  26D9               	addwf	fsr2l,f,c
 13066  00E860  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13067  00E862  22DA               	addwfc	fsr2h,f,c
 13068  00E864  EE10 F01B          	lfsr	1,27
 13069  00E868  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13070  00E86A  26E1               	addwf	fsr1l,f,c
 13071  00E86C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13072  00E86E  22E2               	addwfc	fsr1h,f,c
 13073  00E870  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13074  00E874  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 13075  00E878  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 13076  00E87C  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 13077  00E880  0E11               	movlw	17
 13078  00E882  D005               	goto	u11150
 13079  00E884                     u11155:
 13080  00E884  90D8               	bcf	status,0,c
 13081  00E886  3231               	rrcf	??_fatfs_create_boot_sector+3,f,c
 13082  00E888  3230               	rrcf	??_fatfs_create_boot_sector+2,f,c
 13083  00E88A  322F               	rrcf	??_fatfs_create_boot_sector+1,f,c
 13084  00E88C  322E               	rrcf	??_fatfs_create_boot_sector,f,c
 13085  00E88E                     u11150:
 13086  00E88E  2EE8               	decfsz	wreg,f,c
 13087  00E890  D7F9               	goto	u11155
 13088  00E892  502E               	movf	??_fatfs_create_boot_sector,w,c
 13089  00E894  6EDF               	movwf	indf2,c
 13090                           
 13091                           ;fat_format.c: 283: fs->currentsector.sector[39] = (uint8)((fs->fat_sectors>>24)&0xFF);
 13092  00E896  EE20 F058          	lfsr	2,88
 13093  00E89A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13094  00E89C  26D9               	addwf	fsr2l,f,c
 13095  00E89E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13096  00E8A0  22DA               	addwfc	fsr2h,f,c
 13097  00E8A2  EE10 F01B          	lfsr	1,27
 13098  00E8A6  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13099  00E8A8  26E1               	addwf	fsr1l,f,c
 13100  00E8AA  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13101  00E8AC  22E2               	addwfc	fsr1h,f,c
 13102  00E8AE  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13103  00E8B2  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 13104  00E8B6  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 13105  00E8BA  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 13106  00E8BE  0E19               	movlw	25
 13107  00E8C0  D005               	goto	u11160
 13108  00E8C2                     u11165:
 13109  00E8C2  90D8               	bcf	status,0,c
 13110  00E8C4  3231               	rrcf	??_fatfs_create_boot_sector+3,f,c
 13111  00E8C6  3230               	rrcf	??_fatfs_create_boot_sector+2,f,c
 13112  00E8C8  322F               	rrcf	??_fatfs_create_boot_sector+1,f,c
 13113  00E8CA  322E               	rrcf	??_fatfs_create_boot_sector,f,c
 13114  00E8CC                     u11160:
 13115  00E8CC  2EE8               	decfsz	wreg,f,c
 13116  00E8CE  D7F9               	goto	u11165
 13117  00E8D0  502E               	movf	??_fatfs_create_boot_sector,w,c
 13118  00E8D2  6EDF               	movwf	indf2,c
 13119                           
 13120                           ;fat_format.c: 286: fs->currentsector.sector[40] = 0;
 13121  00E8D4  EE20 F059          	lfsr	2,89
 13122  00E8D8  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13123  00E8DA  26D9               	addwf	fsr2l,f,c
 13124  00E8DC  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13125  00E8DE  22DA               	addwfc	fsr2h,f,c
 13126  00E8E0  6ADF               	clrf	indf2,c
 13127                           
 13128                           ;fat_format.c: 287: fs->currentsector.sector[41] = 0;
 13129  00E8E2  EE20 F05A          	lfsr	2,90
 13130  00E8E6  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13131  00E8E8  26D9               	addwf	fsr2l,f,c
 13132  00E8EA  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13133  00E8EC  22DA               	addwfc	fsr2h,f,c
 13134  00E8EE  6ADF               	clrf	indf2,c
 13135                           
 13136                           ;fat_format.c: 290: fs->currentsector.sector[42] = 0;
 13137  00E8F0  EE20 F05B          	lfsr	2,91
 13138  00E8F4  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13139  00E8F6  26D9               	addwf	fsr2l,f,c
 13140  00E8F8  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13141  00E8FA  22DA               	addwfc	fsr2h,f,c
 13142  00E8FC  6ADF               	clrf	indf2,c
 13143                           
 13144                           ;fat_format.c: 291: fs->currentsector.sector[43] = 0;
 13145  00E8FE  EE20 F05C          	lfsr	2,92
 13146  00E902  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13147  00E904  26D9               	addwf	fsr2l,f,c
 13148  00E906  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13149  00E908  22DA               	addwfc	fsr2h,f,c
 13150  00E90A  6ADF               	clrf	indf2,c
 13151                           
 13152                           ;fat_format.c: 294: fs->currentsector.sector[44] = (uint8)((fs->rootdir_first_cluster>>0
      +                          )&0xFF);
 13153  00E90C  EE20 F005          	lfsr	2,5
 13154  00E910  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13155  00E912  26D9               	addwf	fsr2l,f,c
 13156  00E914  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13157  00E916  22DA               	addwfc	fsr2h,f,c
 13158  00E918  EE10 F05D          	lfsr	1,93
 13159  00E91C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13160  00E91E  26E1               	addwf	fsr1l,f,c
 13161  00E920  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13162  00E922  22E2               	addwfc	fsr1h,f,c
 13163  00E924  CFDF FFE7          	movff	indf2,indf1
 13164                           
 13165                           ;fat_format.c: 295: fs->currentsector.sector[45] = (uint8)((fs->rootdir_first_cluster>>8
      +                          )&0xFF);
 13166  00E928  EE20 F05E          	lfsr	2,94
 13167  00E92C  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13168  00E92E  26D9               	addwf	fsr2l,f,c
 13169  00E930  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13170  00E932  22DA               	addwfc	fsr2h,f,c
 13171  00E934  EE10 F005          	lfsr	1,5
 13172  00E938  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13173  00E93A  26E1               	addwf	fsr1l,f,c
 13174  00E93C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13175  00E93E  22E2               	addwfc	fsr1h,f,c
 13176  00E940  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13177  00E944  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 13178  00E948  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 13179  00E94C  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 13180  00E950  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 13181  00E954  C030  F02F         	movff	??_fatfs_create_boot_sector+2,??_fatfs_create_boot_sector+1
 13182  00E958  C031  F030         	movff	??_fatfs_create_boot_sector+3,??_fatfs_create_boot_sector+2
 13183  00E95C  6A31               	clrf	??_fatfs_create_boot_sector+3,c
 13184  00E95E  502E               	movf	??_fatfs_create_boot_sector,w,c
 13185  00E960  6EDF               	movwf	indf2,c
 13186                           
 13187                           ;fat_format.c: 296: fs->currentsector.sector[46] = (uint8)((fs->rootdir_first_cluster>>1
      +                          6)&0xFF);
 13188  00E962  EE20 F05F          	lfsr	2,95
 13189  00E966  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13190  00E968  26D9               	addwf	fsr2l,f,c
 13191  00E96A  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13192  00E96C  22DA               	addwfc	fsr2h,f,c
 13193  00E96E  EE10 F005          	lfsr	1,5
 13194  00E972  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13195  00E974  26E1               	addwf	fsr1l,f,c
 13196  00E976  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13197  00E978  22E2               	addwfc	fsr1h,f,c
 13198  00E97A  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13199  00E97E  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 13200  00E982  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 13201  00E986  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 13202  00E98A  0E11               	movlw	17
 13203  00E98C  D005               	goto	u11170
 13204  00E98E                     u11175:
 13205  00E98E  90D8               	bcf	status,0,c
 13206  00E990  3231               	rrcf	??_fatfs_create_boot_sector+3,f,c
 13207  00E992  3230               	rrcf	??_fatfs_create_boot_sector+2,f,c
 13208  00E994  322F               	rrcf	??_fatfs_create_boot_sector+1,f,c
 13209  00E996  322E               	rrcf	??_fatfs_create_boot_sector,f,c
 13210  00E998                     u11170:
 13211  00E998  2EE8               	decfsz	wreg,f,c
 13212  00E99A  D7F9               	goto	u11175
 13213  00E99C  502E               	movf	??_fatfs_create_boot_sector,w,c
 13214  00E99E  6EDF               	movwf	indf2,c
 13215                           
 13216                           ;fat_format.c: 297: fs->currentsector.sector[47] = (uint8)((fs->rootdir_first_cluster>>2
      +                          4)&0xFF);
 13217  00E9A0  EE20 F060          	lfsr	2,96
 13218  00E9A4  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13219  00E9A6  26D9               	addwf	fsr2l,f,c
 13220  00E9A8  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13221  00E9AA  22DA               	addwfc	fsr2h,f,c
 13222  00E9AC  EE10 F005          	lfsr	1,5
 13223  00E9B0  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13224  00E9B2  26E1               	addwf	fsr1l,f,c
 13225  00E9B4  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13226  00E9B6  22E2               	addwfc	fsr1h,f,c
 13227  00E9B8  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13228  00E9BC  CFE6 F02F          	movff	postinc1,??_fatfs_create_boot_sector+1
 13229  00E9C0  CFE6 F030          	movff	postinc1,??_fatfs_create_boot_sector+2
 13230  00E9C4  CFE6 F031          	movff	postinc1,??_fatfs_create_boot_sector+3
 13231  00E9C8  0E19               	movlw	25
 13232  00E9CA  D005               	goto	u11180
 13233  00E9CC                     u11185:
 13234  00E9CC  90D8               	bcf	status,0,c
 13235  00E9CE  3231               	rrcf	??_fatfs_create_boot_sector+3,f,c
 13236  00E9D0  3230               	rrcf	??_fatfs_create_boot_sector+2,f,c
 13237  00E9D2  322F               	rrcf	??_fatfs_create_boot_sector+1,f,c
 13238  00E9D4  322E               	rrcf	??_fatfs_create_boot_sector,f,c
 13239  00E9D6                     u11180:
 13240  00E9D6  2EE8               	decfsz	wreg,f,c
 13241  00E9D8  D7F9               	goto	u11185
 13242  00E9DA  502E               	movf	??_fatfs_create_boot_sector,w,c
 13243  00E9DC  6EDF               	movwf	indf2,c
 13244                           
 13245                           ;fat_format.c: 300: fs->currentsector.sector[48] = (uint8)((fs->fs_info_sector>>0)&0xFF)
      +                          ;
 13246  00E9DE  EE20 F015          	lfsr	2,21
 13247  00E9E2  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13248  00E9E4  26D9               	addwf	fsr2l,f,c
 13249  00E9E6  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13250  00E9E8  22DA               	addwfc	fsr2h,f,c
 13251  00E9EA  EE10 F061          	lfsr	1,97
 13252  00E9EE  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13253  00E9F0  26E1               	addwf	fsr1l,f,c
 13254  00E9F2  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13255  00E9F4  22E2               	addwfc	fsr1h,f,c
 13256  00E9F6  CFDF FFE7          	movff	indf2,indf1
 13257                           
 13258                           ;fat_format.c: 301: fs->currentsector.sector[49] = (uint8)((fs->fs_info_sector>>8)&0xFF)
      +                          ;
 13259  00E9FA  EE20 F062          	lfsr	2,98
 13260  00E9FE  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13261  00EA00  26D9               	addwf	fsr2l,f,c
 13262  00EA02  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13263  00EA04  22DA               	addwfc	fsr2h,f,c
 13264  00EA06  EE10 F015          	lfsr	1,21
 13265  00EA0A  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13266  00EA0C  26E1               	addwf	fsr1l,f,c
 13267  00EA0E  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13268  00EA10  22E2               	addwfc	fsr1h,f,c
 13269  00EA12  CFE6 F02E          	movff	postinc1,??_fatfs_create_boot_sector
 13270  00EA16  CFE5 F02F          	movff	postdec1,??_fatfs_create_boot_sector+1
 13271  00EA1A  C02F  F02E         	movff	??_fatfs_create_boot_sector+1,??_fatfs_create_boot_sector
 13272  00EA1E  6A2F               	clrf	??_fatfs_create_boot_sector+1,c
 13273  00EA20  502E               	movf	??_fatfs_create_boot_sector,w,c
 13274  00EA22  6EDF               	movwf	indf2,c
 13275                           
 13276                           ;fat_format.c: 304: fs->currentsector.sector[50] = 6;
 13277  00EA24  EE20 F063          	lfsr	2,99
 13278  00EA28  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13279  00EA2A  26D9               	addwf	fsr2l,f,c
 13280  00EA2C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13281  00EA2E  22DA               	addwfc	fsr2h,f,c
 13282  00EA30  0E06               	movlw	6
 13283  00EA32  6EDF               	movwf	indf2,c
 13284                           
 13285                           ;fat_format.c: 305: fs->currentsector.sector[51] = 0;
 13286  00EA34  EE20 F064          	lfsr	2,100
 13287  00EA38  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13288  00EA3A  26D9               	addwf	fsr2l,f,c
 13289  00EA3C  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13290  00EA3E  22DA               	addwfc	fsr2h,f,c
 13291  00EA40  6ADF               	clrf	indf2,c
 13292                           
 13293                           ;fat_format.c: 308: fs->currentsector.sector[64] = 0x00;
 13294  00EA42  EE20 F071          	lfsr	2,113
 13295  00EA46  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13296  00EA48  26D9               	addwf	fsr2l,f,c
 13297  00EA4A  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13298  00EA4C  22DA               	addwfc	fsr2h,f,c
 13299  00EA4E  6ADF               	clrf	indf2,c
 13300                           
 13301                           ;fat_format.c: 311: fs->currentsector.sector[66] = 0x29;
 13302  00EA50  EE20 F073          	lfsr	2,115
 13303  00EA54  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13304  00EA56  26D9               	addwf	fsr2l,f,c
 13305  00EA58  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13306  00EA5A  22DA               	addwfc	fsr2h,f,c
 13307  00EA5C  0E29               	movlw	41
 13308  00EA5E  6EDF               	movwf	indf2,c
 13309                           
 13310                           ;fat_format.c: 314: fs->currentsector.sector[67] = 0x12;
 13311  00EA60  EE20 F074          	lfsr	2,116
 13312  00EA64  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13313  00EA66  26D9               	addwf	fsr2l,f,c
 13314  00EA68  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13315  00EA6A  22DA               	addwfc	fsr2h,f,c
 13316  00EA6C  0E12               	movlw	18
 13317  00EA6E  6EDF               	movwf	indf2,c
 13318                           
 13319                           ;fat_format.c: 315: fs->currentsector.sector[68] = 0x34;
 13320  00EA70  EE20 F075          	lfsr	2,117
 13321  00EA74  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13322  00EA76  26D9               	addwf	fsr2l,f,c
 13323  00EA78  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13324  00EA7A  22DA               	addwfc	fsr2h,f,c
 13325  00EA7C  0E34               	movlw	52
 13326  00EA7E  6EDF               	movwf	indf2,c
 13327                           
 13328                           ;fat_format.c: 316: fs->currentsector.sector[69] = 0x56;
 13329  00EA80  EE20 F076          	lfsr	2,118
 13330  00EA84  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13331  00EA86  26D9               	addwf	fsr2l,f,c
 13332  00EA88  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13333  00EA8A  22DA               	addwfc	fsr2h,f,c
 13334  00EA8C  0E56               	movlw	86
 13335  00EA8E  6EDF               	movwf	indf2,c
 13336                           
 13337                           ;fat_format.c: 317: fs->currentsector.sector[70] = 0x78;
 13338  00EA90  EE20 F077          	lfsr	2,119
 13339  00EA94  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13340  00EA96  26D9               	addwf	fsr2l,f,c
 13341  00EA98  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13342  00EA9A  22DA               	addwfc	fsr2h,f,c
 13343  00EA9C  0E78               	movlw	120
 13344  00EA9E  6EDF               	movwf	indf2,c
 13345                           
 13346                           ;fat_format.c: 320: for (i=0;i<11;i++)
 13347  00EAA0  6A3B               	clrf	fatfs_create_boot_sector@i+1,c
 13348  00EAA2  6A3A               	clrf	fatfs_create_boot_sector@i,c
 13349  00EAA4  503B               	movf	fatfs_create_boot_sector@i+1,w,c
 13350  00EAA6  0A80               	xorlw	128
 13351  00EAA8  0F80               	addlw	-128
 13352  00EAAA  0E0B               	movlw	11
 13353  00EAAC  B4D8               	btfsc	status,2,c
 13354  00EAAE  5C3A               	subwf	fatfs_create_boot_sector@i,w,c
 13355  00EAB0  E24D               	bc	l10067
 13356                           
 13357                           ;fat_format.c: 321: {
 13358                           ;fat_format.c: 322: if (i < (int)strlen(name))
 13359  00EAB2  C02B  F002         	movff	fatfs_create_boot_sector@name+1,strlen@s+1
 13360  00EAB6  C02A  F001         	movff	fatfs_create_boot_sector@name,strlen@s
 13361  00EABA  EC7B  F022         	call	_strlen	;wreg free
 13362  00EABE  503B               	movf	fatfs_create_boot_sector@i+1,w,c
 13363  00EAC0  0A80               	xorlw	128
 13364  00EAC2  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 13365  00EAC4  5001               	movf	?_strlen,w,c
 13366  00EAC6  5C3A               	subwf	fatfs_create_boot_sector@i,w,c
 13367  00EAC8  5002               	movf	?_strlen+1,w,c
 13368  00EACA  0A80               	xorlw	128
 13369  00EACC  582E               	subwfb	??_fatfs_create_boot_sector& (0+255),w,c
 13370  00EACE  E225               	bc	l10061
 13371                           
 13372                           ;fat_format.c: 323: fs->currentsector.sector[i+71] = name[i];
 13373  00EAD0  C02A  F02E         	movff	fatfs_create_boot_sector@name,??_fatfs_create_boot_sector
 13374  00EAD4  C02B  F02F         	movff	fatfs_create_boot_sector@name+1,??_fatfs_create_boot_sector+1
 13375  00EAD8  503A               	movf	fatfs_create_boot_sector@i,w,c
 13376  00EADA  262E               	addwf	??_fatfs_create_boot_sector,f,c
 13377  00EADC  503B               	movf	fatfs_create_boot_sector@i+1,w,c
 13378  00EADE  222F               	addwfc	??_fatfs_create_boot_sector+1,f,c
 13379  00EAE0  C02E  FFF6         	movff	??_fatfs_create_boot_sector,tblptrl
 13380  00EAE4  C02F  FFF7         	movff	??_fatfs_create_boot_sector+1,tblptrh
 13381  00EAE8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13382  00EAE8  6AF8               	clrf	tblptru,c
 13383  00EAEA                     	endif
 13384  00EAEA                     	if	0	;tblptru may be non-zero
 13385  00EAEA                     	endif
 13386  00EAEA  0E47               	movlw	71
 13387  00EAEC  243A               	addwf	fatfs_create_boot_sector@i,w,c
 13388  00EAEE  6E30               	movwf	(??_fatfs_create_boot_sector+2)& (0+255),c
 13389  00EAF0  0E00               	movlw	0
 13390  00EAF2  203B               	addwfc	fatfs_create_boot_sector@i+1,w,c
 13391  00EAF4  6E31               	movwf	(??_fatfs_create_boot_sector+3)& (0+255),c
 13392  00EAF6  C020  F032         	movff	fatfs_create_boot_sector@fs,??_fatfs_create_boot_sector+4
 13393  00EAFA  C021  F033         	movff	fatfs_create_boot_sector@fs+1,??_fatfs_create_boot_sector+5
 13394  00EAFE  5030               	movf	??_fatfs_create_boot_sector+2,w,c
 13395  00EB00  2632               	addwf	??_fatfs_create_boot_sector+4,f,c
 13396  00EB02  5031               	movf	??_fatfs_create_boot_sector+3,w,c
 13397  00EB04  2233               	addwfc	??_fatfs_create_boot_sector+5,f,c
 13398  00EB06  0E31               	movlw	49
 13399  00EB08  2432               	addwf	??_fatfs_create_boot_sector+4,w,c
 13400  00EB0A  6ED9               	movwf	fsr2l,c
 13401  00EB0C  0E00               	movlw	0
 13402  00EB0E  2033               	addwfc	??_fatfs_create_boot_sector+5,w,c
 13403  00EB10  6EDA               	movwf	fsr2h,c
 13404  00EB12  0008               	tblrd		*
 13405  00EB14  CFF5 FFDF          	movff	tablat,indf2
 13406  00EB18  D016               	goto	l10063
 13407  00EB1A                     l10061:
 13408                           
 13409                           ;fat_format.c: 324: else
 13410                           ;fat_format.c: 325: fs->currentsector.sector[i+71] = ' ';
 13411  00EB1A  0E47               	movlw	71
 13412  00EB1C  243A               	addwf	fatfs_create_boot_sector@i,w,c
 13413  00EB1E  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 13414  00EB20  0E00               	movlw	0
 13415  00EB22  203B               	addwfc	fatfs_create_boot_sector@i+1,w,c
 13416  00EB24  6E2F               	movwf	(??_fatfs_create_boot_sector+1)& (0+255),c
 13417  00EB26  C020  F030         	movff	fatfs_create_boot_sector@fs,??_fatfs_create_boot_sector+2
 13418  00EB2A  C021  F031         	movff	fatfs_create_boot_sector@fs+1,??_fatfs_create_boot_sector+3
 13419  00EB2E  502E               	movf	??_fatfs_create_boot_sector,w,c
 13420  00EB30  2630               	addwf	??_fatfs_create_boot_sector+2,f,c
 13421  00EB32  502F               	movf	??_fatfs_create_boot_sector+1,w,c
 13422  00EB34  2231               	addwfc	??_fatfs_create_boot_sector+3,f,c
 13423  00EB36  0E31               	movlw	49
 13424  00EB38  2430               	addwf	??_fatfs_create_boot_sector+2,w,c
 13425  00EB3A  6ED9               	movwf	fsr2l,c
 13426  00EB3C  0E00               	movlw	0
 13427  00EB3E  2031               	addwfc	??_fatfs_create_boot_sector+3,w,c
 13428  00EB40  6EDA               	movwf	fsr2h,c
 13429  00EB42  0E20               	movlw	32
 13430  00EB44  6EDF               	movwf	indf2,c
 13431  00EB46                     l10063:
 13432  00EB46  4A3A               	infsnz	fatfs_create_boot_sector@i,f,c
 13433  00EB48  2A3B               	incf	fatfs_create_boot_sector@i+1,f,c
 13434  00EB4A  D7AC               	goto	L35
 13435  00EB4C                     l10067:
 13436                           
 13437                           ;fat_format.c: 326: }
 13438                           ;fat_format.c: 329: fs->currentsector.sector[82] = 'F';
 13439  00EB4C  EE20 F083          	lfsr	2,131
 13440  00EB50  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13441  00EB52  26D9               	addwf	fsr2l,f,c
 13442  00EB54  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13443  00EB56  22DA               	addwfc	fsr2h,f,c
 13444  00EB58  0E46               	movlw	70
 13445  00EB5A  6EDF               	movwf	indf2,c
 13446                           
 13447                           ;fat_format.c: 330: fs->currentsector.sector[83] = 'A';
 13448  00EB5C  EE20 F084          	lfsr	2,132
 13449  00EB60  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13450  00EB62  26D9               	addwf	fsr2l,f,c
 13451  00EB64  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13452  00EB66  22DA               	addwfc	fsr2h,f,c
 13453  00EB68  0E41               	movlw	65
 13454  00EB6A  6EDF               	movwf	indf2,c
 13455                           
 13456                           ;fat_format.c: 331: fs->currentsector.sector[84] = 'T';
 13457  00EB6C  EE20 F085          	lfsr	2,133
 13458  00EB70  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13459  00EB72  26D9               	addwf	fsr2l,f,c
 13460  00EB74  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13461  00EB76  22DA               	addwfc	fsr2h,f,c
 13462  00EB78  0E54               	movlw	84
 13463  00EB7A  6EDF               	movwf	indf2,c
 13464                           
 13465                           ;fat_format.c: 332: fs->currentsector.sector[85] = '3';
 13466  00EB7C  EE20 F086          	lfsr	2,134
 13467  00EB80  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13468  00EB82  26D9               	addwf	fsr2l,f,c
 13469  00EB84  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13470  00EB86  22DA               	addwfc	fsr2h,f,c
 13471  00EB88  0E33               	movlw	51
 13472  00EB8A  6EDF               	movwf	indf2,c
 13473                           
 13474                           ;fat_format.c: 333: fs->currentsector.sector[86] = '2';
 13475  00EB8C  EE20 F087          	lfsr	2,135
 13476  00EB90  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13477  00EB92  26D9               	addwf	fsr2l,f,c
 13478  00EB94  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13479  00EB96  22DA               	addwfc	fsr2h,f,c
 13480  00EB98  0E32               	movlw	50
 13481  00EB9A  6EDF               	movwf	indf2,c
 13482                           
 13483                           ;fat_format.c: 334: fs->currentsector.sector[87] = ' ';
 13484  00EB9C  EE20 F088          	lfsr	2,136
 13485  00EBA0  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13486  00EBA2  26D9               	addwf	fsr2l,f,c
 13487  00EBA4  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13488  00EBA6  22DA               	addwfc	fsr2h,f,c
 13489  00EBA8  0E20               	movlw	32
 13490  00EBAA  6EDF               	movwf	indf2,c
 13491                           
 13492                           ;fat_format.c: 335: fs->currentsector.sector[88] = ' ';
 13493  00EBAC  EE20 F089          	lfsr	2,137
 13494  00EBB0  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13495  00EBB2  26D9               	addwf	fsr2l,f,c
 13496  00EBB4  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13497  00EBB6  22DA               	addwfc	fsr2h,f,c
 13498  00EBB8  0E20               	movlw	32
 13499  00EBBA  6EDF               	movwf	indf2,c
 13500                           
 13501                           ;fat_format.c: 336: fs->currentsector.sector[89] = ' ';
 13502  00EBBC  EE20 F08A          	lfsr	2,138
 13503  00EBC0                     L34:
 13504  00EBC0  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13505  00EBC2  26D9               	addwf	fsr2l,f,c
 13506  00EBC4  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13507  00EBC6  22DA               	addwfc	fsr2h,f,c
 13508  00EBC8  0E20               	movlw	32
 13509  00EBCA  6EDF               	movwf	indf2,c
 13510                           
 13511                           ;fat_format.c: 339: fs->currentsector.sector[510] = 0x55;
 13512  00EBCC  EE22 F02F          	lfsr	2,559
 13513  00EBD0  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13514  00EBD2  26D9               	addwf	fsr2l,f,c
 13515  00EBD4  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13516  00EBD6  22DA               	addwfc	fsr2h,f,c
 13517  00EBD8  0E55               	movlw	85
 13518  00EBDA  6EDF               	movwf	indf2,c
 13519                           
 13520                           ;fat_format.c: 340: fs->currentsector.sector[511] = 0xAA;
 13521  00EBDC  EE22 F030          	lfsr	2,560
 13522  00EBE0  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13523  00EBE2  26D9               	addwf	fsr2l,f,c
 13524  00EBE4  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13525  00EBE6  22DA               	addwfc	fsr2h,f,c
 13526  00EBE8  0EAA               	movlw	170
 13527  00EBEA  6EDF               	movwf	indf2,c
 13528                           
 13529                           ;fat_format.c: 341: }
 13530                           ;fat_format.c: 343: if (fs->disk_io.write_media(boot_sector_lba, fs->currentsector.secto
      +                          r, 1))
 13531  00EBEC  C022  F009         	movff	fatfs_create_boot_sector@boot_sector_lba,media_write@sector
 13532  00EBF0  C023  F00A         	movff	fatfs_create_boot_sector@boot_sector_lba+1,media_write@sector+1
 13533  00EBF4  C024  F00B         	movff	fatfs_create_boot_sector@boot_sector_lba+2,media_write@sector+2
 13534  00EBF8  C025  F00C         	movff	fatfs_create_boot_sector@boot_sector_lba+3,media_write@sector+3
 13535  00EBFC  0E31               	movlw	49
 13536  00EBFE  2420               	addwf	fatfs_create_boot_sector@fs,w,c
 13537  00EC00  6E2E               	movwf	??_fatfs_create_boot_sector& (0+255),c
 13538  00EC02  0E00               	movlw	0
 13539  00EC04  2021               	addwfc	fatfs_create_boot_sector@fs+1,w,c
 13540  00EC06  6E2F               	movwf	(??_fatfs_create_boot_sector+1)& (0+255),c
 13541  00EC08  0E20               	movlw	32
 13542  00EC0A  6E0F               	movwf	media_write@buffer+2,c
 13543  00EC0C  C02F  F00E         	movff	??_fatfs_create_boot_sector+1,media_write@buffer+1
 13544  00EC10  C02E  F00D         	movff	??_fatfs_create_boot_sector,media_write@buffer
 13545  00EC14  0E01               	movlw	1
 13546  00EC16  6E10               	movwf	media_write@sector_count,c
 13547  00EC18  6A11               	clrf	media_write@sector_count+1,c
 13548  00EC1A  6A12               	clrf	media_write@sector_count+2,c
 13549  00EC1C  6A13               	clrf	media_write@sector_count+3,c
 13550  00EC1E  EE20 F02B          	lfsr	2,43
 13551  00EC22  5020               	movf	fatfs_create_boot_sector@fs,w,c
 13552  00EC24  26D9               	addwf	fsr2l,f,c
 13553  00EC26  5021               	movf	fatfs_create_boot_sector@fs+1,w,c
 13554  00EC28  22DA               	addwfc	fsr2h,f,c
 13555  00EC2A  CFDE F030          	movff	postinc2,??_fatfs_create_boot_sector+2
 13556  00EC2E  CFDD F031          	movff	postdec2,??_fatfs_create_boot_sector+3
 13557  00EC32  D801               	call	u11228
 13558  00EC34  D009               	goto	u11229
 13559  00EC36                     u11228:
 13560  00EC36  0005               	push	
 13561  00EC38  6EFA               	movwf	pclath,c
 13562  00EC3A  5030               	movf	??_fatfs_create_boot_sector+2,w,c
 13563  00EC3C  6EFD               	movwf	tosl,c
 13564  00EC3E  5031               	movf	??_fatfs_create_boot_sector+3,w,c
 13565  00EC40  6EFE               	movwf	tosh,c
 13566  00EC42  6AFF               	clrf	tosu,c
 13567  00EC44  50FA               	movf	pclath,w,c
 13568  00EC46  0012               	return		;indir
 13569  00EC48                     u11229:
 13570  00EC48  500A               	movf	?_media_write+1,w,c
 13571  00EC4A  1009               	iorwf	?_media_write,w,c
 13572  00EC4C  E004               	bz	l10077
 13573                           
 13574                           ;fat_format.c: 344: return 1;
 13575  00EC4E  0E00               	movlw	0
 13576  00EC50  6E21               	movwf	?_fatfs_create_boot_sector+1,c
 13577  00EC52  0E01               	movlw	1
 13578  00EC54  D002               	goto	L36
 13579  00EC56                     l10077:
 13580                           
 13581                           ;fat_format.c: 345: else
 13582                           ;fat_format.c: 346: return 0;
 13583  00EC56  0E00               	movlw	0
 13584  00EC58  6E21               	movwf	?_fatfs_create_boot_sector+1,c
 13585  00EC5A                     L36:
 13586  00EC5A  6E20               	movwf	?_fatfs_create_boot_sector,c
 13587  00EC5C  0012               	return	
 13588  00EC5E                     __end_of_fatfs_create_boot_sector:
 13589                           	opt stack 0
 13590                           tosu	equ	0xFFF
 13591                           tosh	equ	0xFFE
 13592                           tosl	equ	0xFFD
 13593                           pclath	equ	0xFFA
 13594                           tblptru	equ	0xFF8
 13595                           tblptrh	equ	0xFF7
 13596                           tblptrl	equ	0xFF6
 13597                           tablat	equ	0xFF5
 13598                           prodh	equ	0xFF4
 13599                           prodl	equ	0xFF3
 13600                           indf0	equ	0xFEF
 13601                           postinc0	equ	0xFEE
 13602                           fsr0h	equ	0xFEA
 13603                           fsr0l	equ	0xFE9
 13604                           wreg	equ	0xFE8
 13605                           indf1	equ	0xFE7
 13606                           postinc1	equ	0xFE6
 13607                           postdec1	equ	0xFE5
 13608                           fsr1h	equ	0xFE2
 13609                           fsr1l	equ	0xFE1
 13610                           indf2	equ	0xFDF
 13611                           postinc2	equ	0xFDE
 13612                           postdec2	equ	0xFDD
 13613                           fsr2h	equ	0xFDA
 13614                           fsr2l	equ	0xFD9
 13615                           status	equ	0xFD8
 13616                           
 13617 ;; *************** function _fatfs_calc_cluster_size *****************
 13618 ;; Defined at:
 13619 ;;		line 77 in file "fat_format.c"
 13620 ;; Parameters:    Size  Location     Type
 13621 ;;  sectors         4    0[COMRAM] unsigned long 
 13622 ;;  is_fat32        2    4[COMRAM] int 
 13623 ;; Auto vars:     Size  Location     Type
 13624 ;;  i               2   12[COMRAM] int 
 13625 ;; Return value:  Size  Location     Type
 13626 ;;                  1    wreg      unsigned char 
 13627 ;; Registers used:
 13628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/0
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13634 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13636 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13637 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13638 ;;Total ram usage:       14 bytes
 13639 ;; Hardware stack levels used:    1
 13640 ;; This function calls:
 13641 ;;		Nothing
 13642 ;; This function is called by:
 13643 ;;		_fatfs_create_boot_sector
 13644 ;; This function uses a non-reentrant model
 13645 ;;
 13646                           
 13647                           	psect	text31
 13648  006968                     __ptext31:
 13649                           	opt stack 0
 13650  006968                     _fatfs_calc_cluster_size:
 13651                           	opt stack 23
 13652                           
 13653                           ;fat_format.c: 79: int i;
 13654                           ;fat_format.c: 81: if (!is_fat32)
 13655                           
 13656                           ;incstack = 0
 13657  006968  5006               	movf	fatfs_calc_cluster_size@is_fat32+1,w,c
 13658  00696A  1005               	iorwf	fatfs_calc_cluster_size@is_fat32,w,c
 13659  00696C  E14F               	bnz	l9413
 13660                           
 13661                           ;fat_format.c: 82: {
 13662                           ;fat_format.c: 83: for (i=0; _cluster_size_table16[i].sectors_per_cluster != 0;i++)
 13663  00696E  6A0E               	clrf	fatfs_calc_cluster_size@i+1,c
 13664  006970  6A0D               	clrf	fatfs_calc_cluster_size@i,c
 13665  006972  D035               	goto	l9411
 13666  006974                     l9403:
 13667                           
 13668                           ;fat_format.c: 84: if (sectors <= _cluster_size_table16[i].sectors)
 13669  006974  0E05               	movlw	5
 13670  006976  020D               	mulwf	fatfs_calc_cluster_size@i,c
 13671  006978  CFF3 F007          	movff	prodl,??_fatfs_calc_cluster_size
 13672  00697C  CFF4 F008          	movff	prodh,??_fatfs_calc_cluster_size+1
 13673  006980  020E               	mulwf	fatfs_calc_cluster_size@i+1,c
 13674  006982  50F3               	movf	243,w,c
 13675  006984  2608               	addwf	(??_fatfs_calc_cluster_size+1)& (0+255),f,c
 13676  006986  0E00               	movlw	low __cluster_size_table16
 13677  006988  2407               	addwf	??_fatfs_calc_cluster_size,w,c
 13678  00698A  6ED9               	movwf	fsr2l,c
 13679  00698C  0E02               	movlw	high __cluster_size_table16
 13680  00698E  2008               	addwfc	??_fatfs_calc_cluster_size+1,w,c
 13681  006990  6EDA               	movwf	fsr2h,c
 13682  006992  CFDE F009          	movff	postinc2,??_fatfs_calc_cluster_size+2
 13683  006996  CFDE F00A          	movff	postinc2,??_fatfs_calc_cluster_size+3
 13684  00699A  CFDE F00B          	movff	postinc2,??_fatfs_calc_cluster_size+4
 13685  00699E  CFDE F00C          	movff	postinc2,??_fatfs_calc_cluster_size+5
 13686  0069A2  5001               	movf	fatfs_calc_cluster_size@sectors,w,c
 13687  0069A4  5C09               	subwf	??_fatfs_calc_cluster_size+2,w,c
 13688  0069A6  5002               	movf	fatfs_calc_cluster_size@sectors+1,w,c
 13689  0069A8  580A               	subwfb	??_fatfs_calc_cluster_size+3,w,c
 13690  0069AA  5003               	movf	fatfs_calc_cluster_size@sectors+2,w,c
 13691  0069AC  580B               	subwfb	??_fatfs_calc_cluster_size+4,w,c
 13692  0069AE  5004               	movf	fatfs_calc_cluster_size@sectors+3,w,c
 13693  0069B0  580C               	subwfb	??_fatfs_calc_cluster_size+5,w,c
 13694  0069B2  E313               	bnc	l9409
 13695                           
 13696                           ; BSR set to: 2
 13697                           ;fat_format.c: 85: return _cluster_size_table16[i].sectors_per_cluster;
 13698  0069B4  0E05               	movlw	5
 13699  0069B6  020D               	mulwf	fatfs_calc_cluster_size@i,c
 13700  0069B8  CFF3 F007          	movff	prodl,??_fatfs_calc_cluster_size
 13701  0069BC  CFF4 F008          	movff	prodh,??_fatfs_calc_cluster_size+1
 13702  0069C0  020E               	mulwf	fatfs_calc_cluster_size@i+1,c
 13703  0069C2  50F3               	movf	243,w,c
 13704  0069C4  2608               	addwf	(??_fatfs_calc_cluster_size+1)& (0+255),f,c
 13705  0069C6  0E04               	movlw	4
 13706  0069C8  2607               	addwf	??_fatfs_calc_cluster_size,f,c
 13707  0069CA  0E00               	movlw	0
 13708  0069CC  2208               	addwfc	??_fatfs_calc_cluster_size+1,f,c
 13709  0069CE  0E00               	movlw	low __cluster_size_table16
 13710  0069D0  2407               	addwf	??_fatfs_calc_cluster_size,w,c
 13711  0069D2  6ED9               	movwf	fsr2l,c
 13712  0069D4  0102               	movlb	2	; () banked
 13713  0069D6  0E02               	movlw	high __cluster_size_table16
 13714  0069D8  D04E               	goto	L37
 13715  0069DA                     l9409:
 13716                           
 13717                           ; BSR set to: 2
 13718  0069DA  4A0D               	infsnz	fatfs_calc_cluster_size@i,f,c
 13719  0069DC  2A0E               	incf	fatfs_calc_cluster_size@i+1,f,c
 13720  0069DE                     l9411:
 13721  0069DE  0E05               	movlw	5
 13722  0069E0  020D               	mulwf	fatfs_calc_cluster_size@i,c
 13723  0069E2  CFF3 F007          	movff	prodl,??_fatfs_calc_cluster_size
 13724  0069E6  CFF4 F008          	movff	prodh,??_fatfs_calc_cluster_size+1
 13725  0069EA  020E               	mulwf	fatfs_calc_cluster_size@i+1,c
 13726  0069EC  50F3               	movf	243,w,c
 13727  0069EE  2608               	addwf	(??_fatfs_calc_cluster_size+1)& (0+255),f,c
 13728  0069F0  0E04               	movlw	4
 13729  0069F2  2607               	addwf	??_fatfs_calc_cluster_size,f,c
 13730  0069F4  0E00               	movlw	0
 13731  0069F6  2208               	addwfc	??_fatfs_calc_cluster_size+1,f,c
 13732  0069F8  0E00               	movlw	low __cluster_size_table16
 13733  0069FA  2407               	addwf	??_fatfs_calc_cluster_size,w,c
 13734  0069FC  6ED9               	movwf	fsr2l,c
 13735  0069FE  0102               	movlb	2	; () banked
 13736  006A00  0E02               	movlw	high __cluster_size_table16
 13737  006A02  2008               	addwfc	??_fatfs_calc_cluster_size+1,w,c
 13738  006A04  6EDA               	movwf	fsr2h,c
 13739  006A06  50DF               	movf	indf2,w,c
 13740  006A08  E052               	bz	l9425
 13741  006A0A  D7B4               	goto	l9403
 13742  006A0C                     l9413:
 13743                           
 13744                           ;fat_format.c: 87: else
 13745                           ;fat_format.c: 88: {
 13746                           ;fat_format.c: 89: for (i=0; _cluster_size_table32[i].sectors_per_cluster != 0;i++)
 13747  006A0C  6A0E               	clrf	fatfs_calc_cluster_size@i+1,c
 13748  006A0E  6A0D               	clrf	fatfs_calc_cluster_size@i,c
 13749  006A10  D038               	goto	l9423
 13750  006A12                     l9415:
 13751                           
 13752                           ;fat_format.c: 90: if (sectors <= _cluster_size_table32[i].sectors)
 13753  006A12  0E05               	movlw	5
 13754  006A14  020D               	mulwf	fatfs_calc_cluster_size@i,c
 13755  006A16  CFF3 F007          	movff	prodl,??_fatfs_calc_cluster_size
 13756  006A1A  CFF4 F008          	movff	prodh,??_fatfs_calc_cluster_size+1
 13757  006A1E  020E               	mulwf	fatfs_calc_cluster_size@i+1,c
 13758  006A20  50F3               	movf	243,w,c
 13759  006A22  2608               	addwf	(??_fatfs_calc_cluster_size+1)& (0+255),f,c
 13760  006A24  0E28               	movlw	low __cluster_size_table32
 13761  006A26  2407               	addwf	??_fatfs_calc_cluster_size,w,c
 13762  006A28  6ED9               	movwf	fsr2l,c
 13763  006A2A  0E02               	movlw	high __cluster_size_table32
 13764  006A2C  2008               	addwfc	??_fatfs_calc_cluster_size+1,w,c
 13765  006A2E  6EDA               	movwf	fsr2h,c
 13766  006A30  CFDE F009          	movff	postinc2,??_fatfs_calc_cluster_size+2
 13767  006A34  CFDE F00A          	movff	postinc2,??_fatfs_calc_cluster_size+3
 13768  006A38  CFDE F00B          	movff	postinc2,??_fatfs_calc_cluster_size+4
 13769  006A3C  CFDE F00C          	movff	postinc2,??_fatfs_calc_cluster_size+5
 13770  006A40  5001               	movf	fatfs_calc_cluster_size@sectors,w,c
 13771  006A42  5C09               	subwf	??_fatfs_calc_cluster_size+2,w,c
 13772  006A44  5002               	movf	fatfs_calc_cluster_size@sectors+1,w,c
 13773  006A46  580A               	subwfb	??_fatfs_calc_cluster_size+3,w,c
 13774  006A48  5003               	movf	fatfs_calc_cluster_size@sectors+2,w,c
 13775  006A4A  580B               	subwfb	??_fatfs_calc_cluster_size+4,w,c
 13776  006A4C  5004               	movf	fatfs_calc_cluster_size@sectors+3,w,c
 13777  006A4E  580C               	subwfb	??_fatfs_calc_cluster_size+5,w,c
 13778  006A50  E316               	bnc	l9421
 13779                           
 13780                           ; BSR set to: 2
 13781                           ;fat_format.c: 91: return _cluster_size_table32[i].sectors_per_cluster;
 13782  006A52  0E05               	movlw	5
 13783  006A54  020D               	mulwf	fatfs_calc_cluster_size@i,c
 13784  006A56  CFF3 F007          	movff	prodl,??_fatfs_calc_cluster_size
 13785  006A5A  CFF4 F008          	movff	prodh,??_fatfs_calc_cluster_size+1
 13786  006A5E  020E               	mulwf	fatfs_calc_cluster_size@i+1,c
 13787  006A60  50F3               	movf	243,w,c
 13788  006A62  2608               	addwf	(??_fatfs_calc_cluster_size+1)& (0+255),f,c
 13789  006A64  0E04               	movlw	4
 13790  006A66  2607               	addwf	??_fatfs_calc_cluster_size,f,c
 13791  006A68  0E00               	movlw	0
 13792  006A6A  2208               	addwfc	??_fatfs_calc_cluster_size+1,f,c
 13793  006A6C  0E28               	movlw	low __cluster_size_table32
 13794  006A6E  2407               	addwf	??_fatfs_calc_cluster_size,w,c
 13795  006A70  6ED9               	movwf	fsr2l,c
 13796  006A72  0102               	movlb	2	; () banked
 13797  006A74  0E02               	movlw	high __cluster_size_table32
 13798  006A76                     L37:
 13799  006A76  2008               	addwfc	??_fatfs_calc_cluster_size+1,w,c
 13800  006A78  6EDA               	movwf	fsr2h,c
 13801  006A7A  50DF               	movf	indf2,w,c
 13802  006A7C  D019               	goto	l850
 13803  006A7E                     l9421:
 13804                           
 13805                           ; BSR set to: 2
 13806  006A7E  4A0D               	infsnz	fatfs_calc_cluster_size@i,f,c
 13807  006A80  2A0E               	incf	fatfs_calc_cluster_size@i+1,f,c
 13808  006A82                     l9423:
 13809  006A82  0E05               	movlw	5
 13810  006A84  020D               	mulwf	fatfs_calc_cluster_size@i,c
 13811  006A86  CFF3 F007          	movff	prodl,??_fatfs_calc_cluster_size
 13812  006A8A  CFF4 F008          	movff	prodh,??_fatfs_calc_cluster_size+1
 13813  006A8E  020E               	mulwf	fatfs_calc_cluster_size@i+1,c
 13814  006A90  50F3               	movf	243,w,c
 13815  006A92  2608               	addwf	(??_fatfs_calc_cluster_size+1)& (0+255),f,c
 13816  006A94  0E04               	movlw	4
 13817  006A96  2607               	addwf	??_fatfs_calc_cluster_size,f,c
 13818  006A98  0E00               	movlw	0
 13819  006A9A  2208               	addwfc	??_fatfs_calc_cluster_size+1,f,c
 13820  006A9C  0E28               	movlw	low __cluster_size_table32
 13821  006A9E  2407               	addwf	??_fatfs_calc_cluster_size,w,c
 13822  006AA0  6ED9               	movwf	fsr2l,c
 13823  006AA2  0102               	movlb	2	; () banked
 13824  006AA4  0E02               	movlw	high __cluster_size_table32
 13825  006AA6  2008               	addwfc	??_fatfs_calc_cluster_size+1,w,c
 13826  006AA8  6EDA               	movwf	fsr2h,c
 13827  006AAA  50DF               	movf	indf2,w,c
 13828  006AAC  E1B2               	bnz	l9415
 13829  006AAE                     l9425:
 13830                           
 13831                           ; BSR set to: 2
 13832                           ;fat_format.c: 92: }
 13833                           ;fat_format.c: 94: return 0;
 13834  006AAE  0E00               	movlw	0
 13835  006AB0                     l850:
 13836                           
 13837                           ; BSR set to: 2
 13838  006AB0  0012               	return	
 13839  006AB2                     __end_of_fatfs_calc_cluster_size:
 13840                           	opt stack 0
 13841                           tosu	equ	0xFFF
 13842                           tosh	equ	0xFFE
 13843                           tosl	equ	0xFFD
 13844                           pclath	equ	0xFFA
 13845                           tblptru	equ	0xFF8
 13846                           tblptrh	equ	0xFF7
 13847                           tblptrl	equ	0xFF6
 13848                           tablat	equ	0xFF5
 13849                           prodh	equ	0xFF4
 13850                           prodl	equ	0xFF3
 13851                           indf0	equ	0xFEF
 13852                           postinc0	equ	0xFEE
 13853                           fsr0h	equ	0xFEA
 13854                           fsr0l	equ	0xFE9
 13855                           wreg	equ	0xFE8
 13856                           indf1	equ	0xFE7
 13857                           postinc1	equ	0xFE6
 13858                           postdec1	equ	0xFE5
 13859                           fsr1h	equ	0xFE2
 13860                           fsr1l	equ	0xFE1
 13861                           indf2	equ	0xFDF
 13862                           postinc2	equ	0xFDE
 13863                           postdec2	equ	0xFDD
 13864                           fsr2h	equ	0xFDA
 13865                           fsr2l	equ	0xFD9
 13866                           status	equ	0xFD8
 13867                           
 13868 ;; *************** function _File_write *****************
 13869 ;; Defined at:
 13870 ;;		line 370 in file "main.c"
 13871 ;; Parameters:    Size  Location     Type
 13872 ;;		None
 13873 ;; Auto vars:     Size  Location     Type
 13874 ;;		None
 13875 ;; Return value:  Size  Location     Type
 13876 ;;		None               void
 13877 ;; Registers used:
 13878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 13879 ;; Tracked objects:
 13880 ;;		On entry : 0/0
 13881 ;;		On exit  : 0/0
 13882 ;;		Unchanged: 0/0
 13883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13886 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13887 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13888 ;;Total ram usage:        1 bytes
 13889 ;; Hardware stack levels used:    1
 13890 ;; Hardware stack levels required when called:   12
 13891 ;; This function calls:
 13892 ;;		_Clr_str
 13893 ;;		_ReadUART
 13894 ;;		_Read_str
 13895 ;;		_Switch
 13896 ;;		_Write
 13897 ;;		_Write_str
 13898 ;;		_fl_fclose
 13899 ;;		_fl_fopen
 13900 ;;		_fl_fwrite
 13901 ;;		_fl_remove
 13902 ;; This function is called by:
 13903 ;;		_File_IO
 13904 ;; This function uses a non-reentrant model
 13905 ;;
 13906                           
 13907                           	psect	text32
 13908  007CA0                     __ptext32:
 13909                           	opt stack 0
 13910  007CA0                     _File_write:
 13911                           	opt stack 17
 13912                           
 13913                           ;main.c: 372: flag_1 = 0;
 13914                           
 13915                           ; BSR set to: 2
 13916                           ;incstack = 0
 13917  007CA0  0101               	movlb	1	; () banked
 13918  007CA2  6BAA               	clrf	_flag_1& (0+255),b
 13919  007CA4                     l12667:
 13920                           
 13921                           ; BSR set to: 1
 13922                           ;main.c: 374: {
 13923                           ;main.c: 375: Write_str("\n\rEnter the file name/ path?\n\r5 characters with file extens
      +                          ion .txt or .bin\n\r");
 13924  007CA4  0EFA               	movlw	high STR_17
 13925  007CA6  6E07               	movwf	Write_str@str+1,c
 13926  007CA8  0EFE               	movlw	low STR_17
 13927  007CAA  6E06               	movwf	Write_str@str,c
 13928  007CAC  EC3C  F01F         	call	_Write_str	;wreg free
 13929                           
 13930                           ;main.c: 376: Clr_str(string);
 13931  007CB0  0E01               	movlw	high _string
 13932  007CB2  6E02               	movwf	Clr_str@buffer+1,c
 13933  007CB4  0101               	movlb	1	; () banked
 13934  007CB6  0EAF               	movlw	low _string
 13935  007CB8  6E01               	movwf	Clr_str@buffer,c
 13936  007CBA  EC9F  F01F         	call	_Clr_str	;wreg free
 13937                           
 13938                           ;main.c: 377: Read_str(string);
 13939  007CBE  0E01               	movlw	high _string
 13940  007CC0  6E03               	movwf	Read_str@buffer+1,c
 13941  007CC2  0101               	movlb	1	; () banked
 13942  007CC4  0EAF               	movlw	low _string
 13943  007CC6  6E02               	movwf	Read_str@buffer,c
 13944  007CC8  EC2C  F021         	call	_Read_str	;wreg free
 13945                           
 13946                           ;main.c: 378: if(Switch('w')==2)
 13947  007CCC  0E77               	movlw	119
 13948  007CCE  ECB7  F030         	call	_Switch
 13949  007CD2  0A02               	xorlw	2
 13950  007CD4  E102               	bnz	l12679
 13951                           
 13952                           ;main.c: 379: {
 13953                           ;main.c: 380: flag_1 = 0;
 13954  007CD6  0E00               	movlw	0
 13955  007CD8  D008               	goto	L38
 13956  007CDA                     l12679:
 13957                           
 13958                           ;main.c: 383: else if(Switch('w')==1)
 13959  007CDA  0E77               	movlw	119
 13960  007CDC  ECB7  F030         	call	_Switch
 13961  007CE0  0101               	movlb	1	; () banked
 13962  007CE2  6F89               	movwf	??_File_write& (0+255),b
 13963  007CE4  0589               	decf	??_File_write& (0+255),w,b
 13964  007CE6  E104               	bnz	l12683
 13965                           
 13966                           ; BSR set to: 1
 13967                           ;main.c: 384: {
 13968                           ;main.c: 385: flag_1 = 1;
 13969  007CE8  0E01               	movlw	1
 13970  007CEA                     L38:
 13971  007CEA  0101               	movlb	1	; () banked
 13972  007CEC  6FAA               	movwf	_flag_1& (0+255),b
 13973                           
 13974                           ;main.c: 386: break;
 13975  007CEE  D003               	goto	l12685
 13976  007CF0                     l12683:
 13977                           
 13978                           ; BSR set to: 1
 13979                           ;main.c: 387: }
 13980                           ;main.c: 388: }while(flag_1==0);
 13981  007CF0  0101               	movlb	1	; () banked
 13982  007CF2  51AA               	movf	_flag_1& (0+255),w,b
 13983  007CF4  E0D7               	bz	l12667
 13984  007CF6                     l12685:
 13985                           
 13986                           ; BSR set to: 1
 13987                           ;main.c: 391: if(flag_1)
 13988  007CF6  0101               	movlb	1	; () banked
 13989  007CF8  51AA               	movf	_flag_1& (0+255),w,b
 13990  007CFA  E101 D0CC          	bz	l1720
 13991                           
 13992                           ; BSR set to: 1
 13993                           ;main.c: 392: {
 13994                           ;main.c: 393: Switch('r');
 13995  007CFE  0E72               	movlw	114
 13996  007D00  ECB7  F030         	call	_Switch
 13997                           
 13998                           ;main.c: 394: file = fl_fopen(m,"r");
 13999  007D04  0E02               	movlw	high _m
 14000  007D06  0100               	movlb	0	; () banked
 14001  007D08  6FFD               	movwf	(fl_fopen@path+1)& (0+255),b
 14002  007D0A  0E89               	movlw	low _m
 14003  007D0C  6FFC               	movwf	fl_fopen@path& (0+255),b
 14004  007D0E  0EFF               	movlw	high STR_10
 14005  007D10  6FFF               	movwf	(fl_fopen@mode+1)& (0+255),b
 14006  007D12  0EFD               	movlw	low STR_10
 14007  007D14  6FFE               	movwf	fl_fopen@mode& (0+255),b
 14008  007D16  ECAE  F036         	call	_fl_fopen	;wreg free
 14009  007D1A  C0FC  F197         	movff	?_fl_fopen,_file
 14010  007D1E  C0FD  F198         	movff	?_fl_fopen+1,_file+1
 14011                           
 14012                           ; BSR set to: 0
 14013                           ;main.c: 395: if( file)
 14014  007D22  0101               	movlb	1	; () banked
 14015  007D24  5198               	movf	(_file+1)& (0+255),w,b
 14016  007D26  1197               	iorwf	_file& (0+255),w,b
 14017  007D28  E058               	bz	l12727
 14018                           
 14019                           ; BSR set to: 1
 14020                           ;main.c: 396: {
 14021                           ;main.c: 397: fl_fclose(file);
 14022  007D2A  C198  F0DF         	movff	_file+1,fl_fclose@f+1
 14023  007D2E  0100               	movlb	0	; () banked
 14024  007D30  C197  F0DE         	movff	_file,fl_fclose@f
 14025  007D34  EC3D  F032         	call	_fl_fclose	;wreg free
 14026                           
 14027                           ;main.c: 398: Write_str("\n\rFile already exists..!\n\rDo you want to replace? y/n");
 14028  007D38  0EFB               	movlw	high STR_19
 14029  007D3A  6E07               	movwf	Write_str@str+1,c
 14030  007D3C  0E4C               	movlw	low STR_19
 14031  007D3E  6E06               	movwf	Write_str@str,c
 14032  007D40  EC3C  F01F         	call	_Write_str	;wreg free
 14033  007D44                     l12697:
 14034                           
 14035                           ;main.c: 400: {
 14036                           ;main.c: 401: c = ReadUART();
 14037  007D44  EC24  F01F         	call	_ReadUART	;wreg free
 14038  007D48  0101               	movlb	1	; () banked
 14039  007D4A  6FA6               	movwf	_c& (0+255),b
 14040                           
 14041                           ; BSR set to: 1
 14042                           ;main.c: 402: if(c== 'y')
 14043  007D4C  51A6               	movf	_c& (0+255),w,b
 14044  007D4E  0A79               	xorlw	121
 14045  007D50  E131               	bnz	l12715
 14046  007D52                     l12701:
 14047                           
 14048                           ; BSR set to: 1
 14049                           ;main.c: 405: if (!(fl_remove(m) < 0))
 14050  007D52  0E02               	movlw	high _m
 14051  007D54  0101               	movlb	1	; () banked
 14052  007D56  6F84               	movwf	(fl_remove@filename+1)& (0+255),b
 14053  007D58  0E89               	movlw	low _m
 14054  007D5A  6F83               	movwf	fl_remove@filename& (0+255),b
 14055  007D5C  EC49  F02D         	call	_fl_remove	;wreg free
 14056  007D60  0101               	movlb	1	; () banked
 14057  007D62  BF84               	btfsc	(?_fl_remove+1)& (0+255),7,b
 14058  007D64  D006               	goto	l12705
 14059                           
 14060                           ; BSR set to: 1
 14061                           ;main.c: 406: {
 14062                           ;main.c: 407: Write_str("\n\rFile replaced..!\n\r");
 14063  007D66  0EFE               	movlw	high STR_20
 14064  007D68  6E07               	movwf	Write_str@str+1,c
 14065  007D6A  0EC6               	movlw	low STR_20
 14066  007D6C  6E06               	movwf	Write_str@str,c
 14067  007D6E  EC3C  F01F         	call	_Write_str	;wreg free
 14068  007D72                     l12705:
 14069                           
 14070                           ;main.c: 408: }
 14071                           ;main.c: 409: file = fl_fopen(m, "r");
 14072  007D72  0E02               	movlw	high _m
 14073  007D74  0100               	movlb	0	; () banked
 14074  007D76  6FFD               	movwf	(fl_fopen@path+1)& (0+255),b
 14075  007D78  0E89               	movlw	low _m
 14076  007D7A  6FFC               	movwf	fl_fopen@path& (0+255),b
 14077  007D7C  0EFF               	movlw	high STR_10
 14078  007D7E  6FFF               	movwf	(fl_fopen@mode+1)& (0+255),b
 14079  007D80  0EFD               	movlw	low STR_10
 14080  007D82  6FFE               	movwf	fl_fopen@mode& (0+255),b
 14081  007D84  ECAE  F036         	call	_fl_fopen	;wreg free
 14082  007D88  C0FC  F197         	movff	?_fl_fopen,_file
 14083  007D8C  C0FD  F198         	movff	?_fl_fopen+1,_file+1
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;main.c: 410: if( file)
 14087  007D90  0101               	movlb	1	; () banked
 14088  007D92  5198               	movf	(_file+1)& (0+255),w,b
 14089  007D94  1197               	iorwf	_file& (0+255),w,b
 14090  007D96  E007               	bz	l12711
 14091                           
 14092                           ; BSR set to: 1
 14093                           ;main.c: 411: {
 14094                           ;main.c: 412: fl_fclose(file);
 14095  007D98  C198  F0DF         	movff	_file+1,fl_fclose@f+1
 14096  007D9C  0100               	movlb	0	; () banked
 14097  007D9E  C197  F0DE         	movff	_file,fl_fclose@f
 14098  007DA2  EC3D  F032         	call	_fl_fclose	;wreg free
 14099  007DA6                     l12711:
 14100                           
 14101                           ;main.c: 413: }
 14102                           ;main.c: 414: }while(file);
 14103  007DA6  0101               	movlb	1	; () banked
 14104  007DA8  5198               	movf	(_file+1)& (0+255),w,b
 14105  007DAA  1197               	iorwf	_file& (0+255),w,b
 14106  007DAC  E1D2               	bnz	l12701
 14107                           
 14108                           ; BSR set to: 1
 14109                           ;main.c: 415: flag_1 = 1;
 14110                           
 14111                           ; BSR set to: 1
 14112  007DAE  0E01               	movlw	1
 14113  007DB0  6FAA               	movwf	_flag_1& (0+255),b
 14114                           
 14115                           ;main.c: 416: }
 14116  007DB2  D00C               	goto	l12723
 14117  007DB4                     l12715:
 14118                           
 14119                           ; BSR set to: 1
 14120                           ;main.c: 417: else if(c=='n')
 14121  007DB4  0101               	movlb	1	; () banked
 14122  007DB6  51A6               	movf	_c& (0+255),w,b
 14123  007DB8  0A6E               	xorlw	110
 14124  007DBA  E102               	bnz	l12721
 14125                           
 14126                           ; BSR set to: 1
 14127                           ;main.c: 418: {
 14128                           ;main.c: 419: flag_1 = 0;
 14129  007DBC  6BAA               	clrf	_flag_1& (0+255),b
 14130                           
 14131                           ;main.c: 420: break;
 14132  007DBE  D00D               	goto	l12727
 14133  007DC0                     l12721:
 14134                           
 14135                           ; BSR set to: 1
 14136                           ;main.c: 422: else
 14137                           ;main.c: 423: Write_str("\n\rPlease enter y/n?");
 14138  007DC0  0EFF               	movlw	high STR_22
 14139  007DC2  6E07               	movwf	Write_str@str+1,c
 14140  007DC4  0E04               	movlw	low STR_22
 14141  007DC6  6E06               	movwf	Write_str@str,c
 14142  007DC8  EC3C  F01F         	call	_Write_str	;wreg free
 14143  007DCC                     l12723:
 14144                           
 14145                           ;main.c: 424: }while((c!= 'n') && (c!='y'));
 14146  007DCC  0101               	movlb	1	; () banked
 14147  007DCE  51A6               	movf	_c& (0+255),w,b
 14148  007DD0  0A6E               	xorlw	110
 14149  007DD2  E003               	bz	l12727
 14150                           
 14151                           ; BSR set to: 1
 14152  007DD4  51A6               	movf	_c& (0+255),w,b
 14153  007DD6  0A79               	xorlw	121
 14154  007DD8  E1B5               	bnz	l12697
 14155  007DDA                     l12727:
 14156                           
 14157                           ; BSR set to: 1
 14158                           ;main.c: 425: }
 14159                           ;main.c: 426: Switch('w');
 14160  007DDA  0E77               	movlw	119
 14161  007DDC  ECB7  F030         	call	_Switch
 14162                           
 14163                           ;main.c: 427: file = fl_fopen(m,"w");
 14164  007DE0  0E02               	movlw	high _m
 14165  007DE2  0100               	movlb	0	; () banked
 14166  007DE4  6FFD               	movwf	(fl_fopen@path+1)& (0+255),b
 14167  007DE6  0E89               	movlw	low _m
 14168  007DE8  6FFC               	movwf	fl_fopen@path& (0+255),b
 14169  007DEA  0EFF               	movlw	high STR_23
 14170  007DEC  6FFF               	movwf	(fl_fopen@mode+1)& (0+255),b
 14171  007DEE  0EFB               	movlw	low STR_23
 14172  007DF0  6FFE               	movwf	fl_fopen@mode& (0+255),b
 14173  007DF2  ECAE  F036         	call	_fl_fopen	;wreg free
 14174  007DF6  C0FC  F197         	movff	?_fl_fopen,_file
 14175  007DFA  C0FD  F198         	movff	?_fl_fopen+1,_file+1
 14176                           
 14177                           ; BSR set to: 0
 14178                           ;main.c: 428: flag_1 = 0;
 14179  007DFE  0101               	movlb	1	; () banked
 14180  007E00  6BAA               	clrf	_flag_1& (0+255),b
 14181                           
 14182                           ; BSR set to: 1
 14183                           ;main.c: 429: Write_str("\n\rEnter the data..(ctrl+s to save)\n\r");
 14184  007E02  0EFC               	movlw	high STR_24
 14185  007E04  6E07               	movwf	Write_str@str+1,c
 14186  007E06  0E8B               	movlw	low STR_24
 14187  007E08  6E06               	movwf	Write_str@str,c
 14188  007E0A  EC3C  F01F         	call	_Write_str	;wreg free
 14189                           
 14190                           ;main.c: 431: if(file)
 14191  007E0E  0101               	movlb	1	; () banked
 14192  007E10  5198               	movf	(_file+1)& (0+255),w,b
 14193  007E12  1197               	iorwf	_file& (0+255),w,b
 14194  007E14  E033               	bz	l12755
 14195  007E16                     l12737:
 14196                           
 14197                           ;main.c: 435: data = ReadUART();
 14198  007E16  EC24  F01F         	call	_ReadUART	;wreg free
 14199  007E1A  0101               	movlb	1	; () banked
 14200  007E1C  6FF7               	movwf	_data& (0+255),b
 14201                           
 14202                           ;main.c: 436: Write(data);
 14203  007E1E  51F7               	movf	_data& (0+255),w,b
 14204  007E20  EC0F  F020         	call	_Write
 14205                           
 14206                           ;main.c: 444: if(data==0x13)
 14207  007E24  0101               	movlb	1	; () banked
 14208  007E26  51F7               	movf	_data& (0+255),w,b
 14209  007E28  0A13               	xorlw	19
 14210  007E2A  E10E               	bnz	l12751
 14211                           
 14212                           ; BSR set to: 1
 14213                           ;main.c: 445: {
 14214                           ;main.c: 446: Write_str("\n\rSave data? y/n?");
 14215  007E2C  0EFF               	movlw	high STR_25
 14216  007E2E  6E07               	movwf	Write_str@str+1,c
 14217  007E30  0E64               	movlw	low STR_25
 14218  007E32  6E06               	movwf	Write_str@str,c
 14219  007E34  EC3C  F01F         	call	_Write_str	;wreg free
 14220                           
 14221                           ;main.c: 447: data = ReadUART();
 14222  007E38  EC24  F01F         	call	_ReadUART	;wreg free
 14223  007E3C  0101               	movlb	1	; () banked
 14224  007E3E  6FF7               	movwf	_data& (0+255),b
 14225                           
 14226                           ; BSR set to: 1
 14227                           ;main.c: 448: if(data=='y')
 14228  007E40  51F7               	movf	_data& (0+255),w,b
 14229  007E42  0A79               	xorlw	121
 14230  007E44  E014               	bz	l12753
 14231  007E46  D7E7               	goto	l12737
 14232  007E48                     l12751:
 14233                           
 14234                           ; BSR set to: 1
 14235                           ;main.c: 452: }
 14236                           ;main.c: 453: fl_fwrite(&data, 1, 1, file);
 14237  007E48  0E20               	movlw	32
 14238  007E4A  0100               	movlb	0	; () banked
 14239  007E4C  6FE0               	movwf	(fl_fwrite@data+2)& (0+255),b
 14240  007E4E  0E01               	movlw	high _data
 14241  007E50  6FDF               	movwf	(fl_fwrite@data+1)& (0+255),b
 14242  007E52  0EF7               	movlw	low _data
 14243  007E54  6FDE               	movwf	fl_fwrite@data& (0+255),b
 14244  007E56  6BE2               	clrf	(fl_fwrite@size+1)& (0+255),b
 14245  007E58  0E01               	movlw	1
 14246  007E5A  6FE1               	movwf	fl_fwrite@size& (0+255),b
 14247  007E5C  6BE4               	clrf	(fl_fwrite@count+1)& (0+255),b
 14248  007E5E  6FE3               	movwf	fl_fwrite@count& (0+255),b
 14249  007E60  C198  F0E6         	movff	_file+1,fl_fwrite@f+1
 14250  007E64  C197  F0E5         	movff	_file,fl_fwrite@f
 14251  007E68  ECEE  F06C         	call	_fl_fwrite	;wreg free
 14252  007E6C  D7D4               	goto	l12737
 14253  007E6E                     l12753:
 14254                           
 14255                           ;main.c: 455: Write_str("\n\r\n\rFile write completed..!");
 14256  007E6E  0EFD               	movlw	high STR_26
 14257  007E70  6E07               	movwf	Write_str@str+1,c
 14258  007E72  0EB2               	movlw	low STR_26
 14259  007E74  6E06               	movwf	Write_str@str,c
 14260  007E76  EC3C  F01F         	call	_Write_str	;wreg free
 14261                           
 14262                           ;main.c: 456: }
 14263  007E7A  D006               	goto	l12757
 14264  007E7C                     l12755:
 14265                           
 14266                           ;main.c: 457: else
 14267                           ;main.c: 458: Write_str("\n\rFile write failed/ Invalid Directory");
 14268  007E7C  0EFC               	movlw	high STR_27
 14269  007E7E  6E07               	movwf	Write_str@str+1,c
 14270  007E80  0E3E               	movlw	low STR_27
 14271  007E82  6E06               	movwf	Write_str@str,c
 14272  007E84  EC3C  F01F         	call	_Write_str	;wreg free
 14273  007E88                     l12757:
 14274                           
 14275                           ;main.c: 459: fl_fclose(file);
 14276  007E88  C198  F0DF         	movff	_file+1,fl_fclose@f+1
 14277  007E8C  0100               	movlb	0	; () banked
 14278  007E8E  C197  F0DE         	movff	_file,fl_fclose@f
 14279  007E92  EC3D  F032         	call	_fl_fclose	;wreg free
 14280  007E96                     l1720:
 14281  007E96  0012               	return	
 14282  007E98                     __end_of_File_write:
 14283                           	opt stack 0
 14284                           tosu	equ	0xFFF
 14285                           tosh	equ	0xFFE
 14286                           tosl	equ	0xFFD
 14287                           pclath	equ	0xFFA
 14288                           tblptru	equ	0xFF8
 14289                           tblptrh	equ	0xFF7
 14290                           tblptrl	equ	0xFF6
 14291                           tablat	equ	0xFF5
 14292                           prodh	equ	0xFF4
 14293                           prodl	equ	0xFF3
 14294                           indf0	equ	0xFEF
 14295                           postinc0	equ	0xFEE
 14296                           fsr0h	equ	0xFEA
 14297                           fsr0l	equ	0xFE9
 14298                           wreg	equ	0xFE8
 14299                           indf1	equ	0xFE7
 14300                           postinc1	equ	0xFE6
 14301                           postdec1	equ	0xFE5
 14302                           fsr1h	equ	0xFE2
 14303                           fsr1l	equ	0xFE1
 14304                           indf2	equ	0xFDF
 14305                           postinc2	equ	0xFDE
 14306                           postdec2	equ	0xFDD
 14307                           fsr2h	equ	0xFDA
 14308                           fsr2l	equ	0xFD9
 14309                           status	equ	0xFD8
 14310                           
 14311 ;; *************** function _File_read *****************
 14312 ;; Defined at:
 14313 ;;		line 651 in file "main.c"
 14314 ;; Parameters:    Size  Location     Type
 14315 ;;		None
 14316 ;; Auto vars:     Size  Location     Type
 14317 ;;		None
 14318 ;; Return value:  Size  Location     Type
 14319 ;;		None               void
 14320 ;; Registers used:
 14321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14322 ;; Tracked objects:
 14323 ;;		On entry : 0/0
 14324 ;;		On exit  : 0/0
 14325 ;;		Unchanged: 0/0
 14326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14331 ;;Total ram usage:        0 bytes
 14332 ;; Hardware stack levels used:    1
 14333 ;; Hardware stack levels required when called:   11
 14334 ;; This function calls:
 14335 ;;		_Clr_str
 14336 ;;		_Draw_Line
 14337 ;;		_Read_str
 14338 ;;		_Switch
 14339 ;;		_Write
 14340 ;;		_Write_str
 14341 ;;		_fl_fclose
 14342 ;;		_fl_feof
 14343 ;;		_fl_fgetc
 14344 ;;		_fl_fopen
 14345 ;; This function is called by:
 14346 ;;		_File_IO
 14347 ;; This function uses a non-reentrant model
 14348 ;;
 14349                           
 14350                           	psect	text33
 14351  006076                     __ptext33:
 14352                           	opt stack 0
 14353  006076                     _File_read:
 14354                           	opt stack 18
 14355                           
 14356                           ;main.c: 653: Write_str("\n\rEnter the file Name? 5 characters\n\r");
 14357                           
 14358                           ;incstack = 0
 14359  006076  0EFC               	movlw	high STR_28
 14360  006078  6E07               	movwf	Write_str@str+1,c
 14361  00607A  0E65               	movlw	low STR_28
 14362  00607C  6E06               	movwf	Write_str@str,c
 14363  00607E  EC3C  F01F         	call	_Write_str	;wreg free
 14364                           
 14365                           ;main.c: 654: Clr_str(string);
 14366  006082  0E01               	movlw	high _string
 14367  006084  6E02               	movwf	Clr_str@buffer+1,c
 14368  006086  0101               	movlb	1	; () banked
 14369  006088  0EAF               	movlw	low _string
 14370  00608A  6E01               	movwf	Clr_str@buffer,c
 14371  00608C  EC9F  F01F         	call	_Clr_str	;wreg free
 14372                           
 14373                           ;main.c: 655: Read_str(string);
 14374  006090  0E01               	movlw	high _string
 14375  006092  6E03               	movwf	Read_str@buffer+1,c
 14376  006094  0101               	movlb	1	; () banked
 14377  006096  0EAF               	movlw	low _string
 14378  006098  6E02               	movwf	Read_str@buffer,c
 14379  00609A  EC2C  F021         	call	_Read_str	;wreg free
 14380                           
 14381                           ;main.c: 656: Switch('r');
 14382  00609E  0E72               	movlw	114
 14383  0060A0  ECB7  F030         	call	_Switch
 14384                           
 14385                           ;main.c: 657: file = fl_fopen(m,"r");
 14386  0060A4  0E02               	movlw	high _m
 14387  0060A6  0100               	movlb	0	; () banked
 14388  0060A8  6FFD               	movwf	(fl_fopen@path+1)& (0+255),b
 14389  0060AA  0E89               	movlw	low _m
 14390  0060AC  6FFC               	movwf	fl_fopen@path& (0+255),b
 14391  0060AE  0EFF               	movlw	high STR_10
 14392  0060B0  6FFF               	movwf	(fl_fopen@mode+1)& (0+255),b
 14393  0060B2  0EFD               	movlw	low STR_10
 14394  0060B4  6FFE               	movwf	fl_fopen@mode& (0+255),b
 14395  0060B6  ECAE  F036         	call	_fl_fopen	;wreg free
 14396  0060BA  C0FC  F197         	movff	?_fl_fopen,_file
 14397  0060BE  C0FD  F198         	movff	?_fl_fopen+1,_file+1
 14398                           
 14399                           ; BSR set to: 0
 14400                           ;main.c: 658: fptr = file;
 14401  0060C2  C198  F19A         	movff	_file+1,_fptr+1
 14402  0060C6  C197  F199         	movff	_file,_fptr
 14403                           
 14404                           ; BSR set to: 1
 14405                           ;main.c: 659: if(file)
 14406  0060CA  0101               	movlb	1	; () banked
 14407  0060CC  5198               	movf	(_file+1)& (0+255),w,b
 14408  0060CE  1197               	iorwf	_file& (0+255),w,b
 14409  0060D0  E042               	bz	l12871
 14410                           
 14411                           ; BSR set to: 1
 14412                           ;main.c: 660: {
 14413                           ;main.c: 661: Write_str("\n\rFile open success..!\n\r");
 14414  0060D2  0EFE               	movlw	high STR_37
 14415  0060D4  6E07               	movwf	Write_str@str+1,c
 14416  0060D6  0E22               	movlw	low STR_37
 14417  0060D8  6E06               	movwf	Write_str@str,c
 14418  0060DA  EC3C  F01F         	call	_Write_str	;wreg free
 14419                           
 14420                           ;main.c: 662: Draw_Line('s', 80);
 14421  0060DE  0E50               	movlw	80
 14422  0060E0  6E03               	movwf	Draw_Line@length,c
 14423  0060E2  0E73               	movlw	115
 14424  0060E4  ECD8  F025         	call	_Draw_Line
 14425                           
 14426                           ;main.c: 663: Write_str("File name\t:\t");
 14427  0060E8  0EFF               	movlw	high STR_38
 14428  0060EA  6E07               	movwf	Write_str@str+1,c
 14429  0060EC  0EB7               	movlw	low STR_38
 14430  0060EE  6E06               	movwf	Write_str@str,c
 14431  0060F0  EC3C  F01F         	call	_Write_str	;wreg free
 14432                           
 14433                           ;main.c: 664: Write_str(string);
 14434  0060F4  0E01               	movlw	high _string
 14435  0060F6  6E07               	movwf	Write_str@str+1,c
 14436  0060F8  0101               	movlb	1	; () banked
 14437  0060FA  0EAF               	movlw	low _string
 14438  0060FC  6E06               	movwf	Write_str@str,c
 14439  0060FE  EC3C  F01F         	call	_Write_str	;wreg free
 14440                           
 14441                           ;main.c: 665: Write('\r');
 14442  006102  0E0D               	movlw	13
 14443  006104  EC0F  F020         	call	_Write
 14444                           
 14445                           ;main.c: 666: Draw_Line('s',80);
 14446  006108  0E50               	movlw	80
 14447  00610A  6E03               	movwf	Draw_Line@length,c
 14448  00610C  0E73               	movlw	115
 14449  00610E  ECD8  F025         	call	_Draw_Line
 14450  006112                     l12863:
 14451                           
 14452                           ;main.c: 668: data = fl_fgetc(file);
 14453  006112  C198  F0F7         	movff	_file+1,fl_fgetc@f+1
 14454  006116  0100               	movlb	0	; () banked
 14455  006118  C197  F0F6         	movff	_file,fl_fgetc@f
 14456  00611C  EC6E  F021         	call	_fl_fgetc	;wreg free
 14457  006120  0100               	movlb	0	; () banked
 14458  006122  51F6               	movf	?_fl_fgetc& (0+255),w,b
 14459  006124  0101               	movlb	1	; () banked
 14460  006126  6FF7               	movwf	_data& (0+255),b
 14461                           
 14462                           ; BSR set to: 1
 14463                           ;main.c: 669: Write(data);
 14464  006128  51F7               	movf	_data& (0+255),w,b
 14465  00612A  EC0F  F020         	call	_Write
 14466                           
 14467                           ;main.c: 670: }while(fl_feof(file) != (-1) );
 14468  00612E  C198  F002         	movff	_file+1,fl_feof@f+1
 14469  006132  0101               	movlb	1	; () banked
 14470  006134  C197  F001         	movff	_file,fl_feof@f
 14471  006138  EC39  F027         	call	_fl_feof	;wreg free
 14472  00613C  2801               	incf	?_fl_feof,w,c
 14473  00613E  B4D8               	btfsc	status,2,c
 14474  006140  2802               	incf	?_fl_feof+1,w,c
 14475  006142  E1E7               	bnz	l12863
 14476                           
 14477                           ;main.c: 671: Write('\r');
 14478  006144  0E0D               	movlw	13
 14479  006146  EC0F  F020         	call	_Write
 14480                           
 14481                           ;main.c: 672: Draw_Line('s',80);
 14482  00614A  0E50               	movlw	80
 14483  00614C  6E03               	movwf	Draw_Line@length,c
 14484  00614E  0E73               	movlw	115
 14485  006150  ECD8  F025         	call	_Draw_Line
 14486                           
 14487                           ;main.c: 674: }
 14488  006154  D006               	goto	l12873
 14489  006156                     l12871:
 14490                           
 14491                           ;main.c: 675: else
 14492                           ;main.c: 676: Write_str("\n\rfile not found..!");
 14493  006156  0EFE               	movlw	high STR_40
 14494  006158  6E07               	movwf	Write_str@str+1,c
 14495  00615A  0EF0               	movlw	low STR_40
 14496  00615C  6E06               	movwf	Write_str@str,c
 14497  00615E  EC3C  F01F         	call	_Write_str	;wreg free
 14498  006162                     l12873:
 14499                           
 14500                           ;main.c: 677: fl_fclose(file);
 14501  006162  C198  F0DF         	movff	_file+1,fl_fclose@f+1
 14502  006166  C197  F0DE         	movff	_file,fl_fclose@f
 14503  00616A  EF3D  F032         	goto	_fl_fclose	;wreg free
 14504  00616E                     __end_of_File_read:
 14505                           	opt stack 0
 14506                           tosu	equ	0xFFF
 14507                           tosh	equ	0xFFE
 14508                           tosl	equ	0xFFD
 14509                           pclath	equ	0xFFA
 14510                           tblptru	equ	0xFF8
 14511                           tblptrh	equ	0xFF7
 14512                           tblptrl	equ	0xFF6
 14513                           tablat	equ	0xFF5
 14514                           prodh	equ	0xFF4
 14515                           prodl	equ	0xFF3
 14516                           indf0	equ	0xFEF
 14517                           postinc0	equ	0xFEE
 14518                           fsr0h	equ	0xFEA
 14519                           fsr0l	equ	0xFE9
 14520                           wreg	equ	0xFE8
 14521                           indf1	equ	0xFE7
 14522                           postinc1	equ	0xFE6
 14523                           postdec1	equ	0xFE5
 14524                           fsr1h	equ	0xFE2
 14525                           fsr1l	equ	0xFE1
 14526                           indf2	equ	0xFDF
 14527                           postinc2	equ	0xFDE
 14528                           postdec2	equ	0xFDD
 14529                           fsr2h	equ	0xFDA
 14530                           fsr2l	equ	0xFD9
 14531                           status	equ	0xFD8
 14532                           
 14533 ;; *************** function _fl_fgetc *****************
 14534 ;; Defined at:
 14535 ;;		line 966 in file "fat_filelib.c"
 14536 ;; Parameters:    Size  Location     Type
 14537 ;;  f               2  118[BANK0 ] PTR void 
 14538 ;;		 -> RAM(3967), NULL(0), 
 14539 ;; Auto vars:     Size  Location     Type
 14540 ;;  res             2  120[BANK0 ] int 
 14541 ;;  data            1  122[BANK0 ] unsigned char 
 14542 ;; Return value:  Size  Location     Type
 14543 ;;                  2  118[BANK0 ] int 
 14544 ;; Registers used:
 14545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14546 ;; Tracked objects:
 14547 ;;		On entry : 0/0
 14548 ;;		On exit  : 0/0
 14549 ;;		Unchanged: 0/0
 14550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14552 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14554 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14555 ;;Total ram usage:        5 bytes
 14556 ;; Hardware stack levels used:    1
 14557 ;; Hardware stack levels required when called:   10
 14558 ;; This function calls:
 14559 ;;		_fl_fread
 14560 ;; This function is called by:
 14561 ;;		_File_read
 14562 ;;		_fl_fgets
 14563 ;;		_File_read_
 14564 ;; This function uses a non-reentrant model
 14565 ;;
 14566                           
 14567                           	psect	text34
 14568  0042DC                     __ptext34:
 14569                           	opt stack 0
 14570  0042DC                     _fl_fgetc:
 14571                           	opt stack 18
 14572                           
 14573                           ;fat_filelib.c: 968: int res;
 14574                           ;fat_filelib.c: 969: uint8 data = 0;
 14575                           
 14576                           ;incstack = 0
 14577  0042DC  0100               	movlb	0	; () banked
 14578  0042DE  6BFA               	clrf	fl_fgetc@data& (0+255),b
 14579                           
 14580                           ; BSR set to: 0
 14581                           ;fat_filelib.c: 971: res = fl_fread(&data, 1, 1, f);
 14582  0042E0  0E00               	movlw	high fl_fgetc@data
 14583  0042E2  6FDF               	movwf	(fl_fread@buffer+1)& (0+255),b
 14584  0042E4  0EFA               	movlw	low fl_fgetc@data
 14585  0042E6  6FDE               	movwf	fl_fread@buffer& (0+255),b
 14586  0042E8  6BE1               	clrf	(fl_fread@size+1)& (0+255),b
 14587  0042EA  0E01               	movlw	1
 14588  0042EC  6FE0               	movwf	fl_fread@size& (0+255),b
 14589  0042EE  6BE3               	clrf	(fl_fread@length+1)& (0+255),b
 14590  0042F0  6FE2               	movwf	fl_fread@length& (0+255),b
 14591  0042F2  C0F7  F0E5         	movff	fl_fgetc@f+1,fl_fread@f+1
 14592  0042F6  C0F6  F0E4         	movff	fl_fgetc@f,fl_fread@f
 14593  0042FA  EC0E  F065         	call	_fl_fread	;wreg free
 14594  0042FE  C0DE  F0F8         	movff	?_fl_fread,fl_fgetc@res
 14595  004302  C0DF  F0F9         	movff	?_fl_fread+1,fl_fgetc@res+1
 14596                           
 14597                           ; BSR set to: 0
 14598                           ;fat_filelib.c: 972: if (res == 1)
 14599  004306  0100               	movlb	0	; () banked
 14600  004308  05F8               	decf	fl_fgetc@res& (0+255),w,b
 14601  00430A  11F9               	iorwf	(fl_fgetc@res+1)& (0+255),w,b
 14602  00430C  E104               	bnz	l625
 14603                           
 14604                           ; BSR set to: 0
 14605                           ;fat_filelib.c: 973: return (int)data;
 14606  00430E  C0FA  F0F6         	movff	fl_fgetc@data,?_fl_fgetc
 14607  004312  6BF7               	clrf	(?_fl_fgetc+1)& (0+255),b
 14608  004314  D004               	goto	l626
 14609  004316                     l625:
 14610                           
 14611                           ; BSR set to: 0
 14612                           ;fat_filelib.c: 974: else
 14613                           ;fat_filelib.c: 975: return res;
 14614  004316  C0F8  F0F6         	movff	fl_fgetc@res,?_fl_fgetc
 14615  00431A  C0F9  F0F7         	movff	fl_fgetc@res+1,?_fl_fgetc+1
 14616  00431E                     l626:
 14617                           
 14618                           ; BSR set to: 0
 14619  00431E  0012               	return	
 14620  004320                     __end_of_fl_fgetc:
 14621                           	opt stack 0
 14622                           tosu	equ	0xFFF
 14623                           tosh	equ	0xFFE
 14624                           tosl	equ	0xFFD
 14625                           pclath	equ	0xFFA
 14626                           tblptru	equ	0xFF8
 14627                           tblptrh	equ	0xFF7
 14628                           tblptrl	equ	0xFF6
 14629                           tablat	equ	0xFF5
 14630                           prodh	equ	0xFF4
 14631                           prodl	equ	0xFF3
 14632                           indf0	equ	0xFEF
 14633                           postinc0	equ	0xFEE
 14634                           fsr0h	equ	0xFEA
 14635                           fsr0l	equ	0xFE9
 14636                           wreg	equ	0xFE8
 14637                           indf1	equ	0xFE7
 14638                           postinc1	equ	0xFE6
 14639                           postdec1	equ	0xFE5
 14640                           fsr1h	equ	0xFE2
 14641                           fsr1l	equ	0xFE1
 14642                           indf2	equ	0xFDF
 14643                           postinc2	equ	0xFDE
 14644                           postdec2	equ	0xFDD
 14645                           fsr2h	equ	0xFDA
 14646                           fsr2l	equ	0xFD9
 14647                           status	equ	0xFD8
 14648                           
 14649 ;; *************** function _fl_feof *****************
 14650 ;; Defined at:
 14651 ;;		line 1214 in file "fat_filelib.c"
 14652 ;; Parameters:    Size  Location     Type
 14653 ;;  f               2    0[COMRAM] PTR void 
 14654 ;;		 -> RAM(3967), NULL(0), 
 14655 ;; Auto vars:     Size  Location     Type
 14656 ;;  file            2   12[COMRAM] PTR struct sFL_FILE
 14657 ;;		 -> RAM(3967), NULL(0), 
 14658 ;;  res             2   10[COMRAM] int 
 14659 ;; Return value:  Size  Location     Type
 14660 ;;                  2    0[COMRAM] int 
 14661 ;; Registers used:
 14662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14663 ;; Tracked objects:
 14664 ;;		On entry : 0/0
 14665 ;;		On exit  : 0/0
 14666 ;;		Unchanged: 0/0
 14667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14669 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14670 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14671 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14672 ;;Total ram usage:       14 bytes
 14673 ;; Hardware stack levels used:    1
 14674 ;; This function calls:
 14675 ;;		Nothing
 14676 ;; This function is called by:
 14677 ;;		_File_read
 14678 ;;		_File_read_
 14679 ;; This function uses a non-reentrant model
 14680 ;;
 14681                           
 14682                           	psect	text35
 14683  004E72                     __ptext35:
 14684                           	opt stack 0
 14685  004E72                     _fl_feof:
 14686                           	opt stack 28
 14687                           
 14688                           ;fat_filelib.c: 1216: FL_FILE *file = (FL_FILE *)f;
 14689                           
 14690                           ; BSR set to: 0
 14691                           ;incstack = 0
 14692  004E72  C002  F00E         	movff	fl_feof@f+1,fl_feof@file+1
 14693  004E76  C001  F00D         	movff	fl_feof@f,fl_feof@file
 14694                           
 14695                           ;fat_filelib.c: 1217: int res;
 14696                           ;fat_filelib.c: 1219: if (!file)
 14697  004E7A  500E               	movf	fl_feof@file+1,w,c
 14698  004E7C  100D               	iorwf	fl_feof@file,w,c
 14699  004E7E  E103               	bnz	l12221
 14700                           
 14701                           ;fat_filelib.c: 1220: return -1;
 14702  004E80  6801               	setf	?_fl_feof,c
 14703  004E82  6802               	setf	?_fl_feof+1,c
 14704  004E84  D032               	goto	l704
 14705  004E86                     l12221:
 14706                           
 14707                           ;fat_filelib.c: 1224: if (file->bytenum == file->filelength)
 14708  004E86  EE20 F00C          	lfsr	2,12
 14709  004E8A  500D               	movf	fl_feof@file,w,c
 14710  004E8C  26D9               	addwf	fsr2l,f,c
 14711  004E8E  500E               	movf	fl_feof@file+1,w,c
 14712  004E90  22DA               	addwfc	fsr2h,f,c
 14713  004E92  CFDE F003          	movff	postinc2,??_fl_feof
 14714  004E96  CFDE F004          	movff	postinc2,??_fl_feof+1
 14715  004E9A  CFDE F005          	movff	postinc2,??_fl_feof+2
 14716  004E9E  CFDE F006          	movff	postinc2,??_fl_feof+3
 14717  004EA2  EE20 F008          	lfsr	2,8
 14718  004EA6  500D               	movf	fl_feof@file,w,c
 14719  004EA8  26D9               	addwf	fsr2l,f,c
 14720  004EAA  500E               	movf	fl_feof@file+1,w,c
 14721  004EAC  22DA               	addwfc	fsr2h,f,c
 14722  004EAE  CFDE F007          	movff	postinc2,??_fl_feof+4
 14723  004EB2  CFDE F008          	movff	postinc2,??_fl_feof+5
 14724  004EB6  CFDE F009          	movff	postinc2,??_fl_feof+6
 14725  004EBA  CFDE F00A          	movff	postinc2,??_fl_feof+7
 14726  004EBE  5006               	movf	??_fl_feof+3,w,c
 14727  004EC0  180A               	xorwf	??_fl_feof+7,w,c
 14728  004EC2  E108               	bnz	u14545
 14729  004EC4  5005               	movf	??_fl_feof+2,w,c
 14730  004EC6  1809               	xorwf	??_fl_feof+6,w,c
 14731  004EC8  E105               	bnz	u14545
 14732  004ECA  5004               	movf	??_fl_feof+1,w,c
 14733  004ECC  1808               	xorwf	??_fl_feof+5,w,c
 14734  004ECE  E102               	bnz	u14545
 14735  004ED0  5003               	movf	??_fl_feof,w,c
 14736  004ED2  1807               	xorwf	??_fl_feof+4,w,c
 14737  004ED4                     u14545:
 14738  004ED4  E103               	bnz	l12225
 14739                           
 14740                           ;fat_filelib.c: 1225: res = (-1);
 14741  004ED6  680B               	setf	fl_feof@res,c
 14742  004ED8  680C               	setf	fl_feof@res+1,c
 14743  004EDA  D003               	goto	l712
 14744  004EDC                     l12225:
 14745                           
 14746                           ;fat_filelib.c: 1226: else
 14747                           ;fat_filelib.c: 1227: res = 0;
 14748  004EDC  0E00               	movlw	0
 14749  004EDE  6E0C               	movwf	fl_feof@res+1,c
 14750  004EE0  6E0B               	movwf	fl_feof@res,c
 14751  004EE2                     l712:
 14752                           
 14753                           ;fat_filelib.c: 1231: return res;
 14754  004EE2  C00B  F001         	movff	fl_feof@res,?_fl_feof
 14755  004EE6  C00C  F002         	movff	fl_feof@res+1,?_fl_feof+1
 14756  004EEA                     l704:
 14757  004EEA  0012               	return	
 14758  004EEC                     __end_of_fl_feof:
 14759                           	opt stack 0
 14760                           tosu	equ	0xFFF
 14761                           tosh	equ	0xFFE
 14762                           tosl	equ	0xFFD
 14763                           pclath	equ	0xFFA
 14764                           tblptru	equ	0xFF8
 14765                           tblptrh	equ	0xFF7
 14766                           tblptrl	equ	0xFF6
 14767                           tablat	equ	0xFF5
 14768                           prodh	equ	0xFF4
 14769                           prodl	equ	0xFF3
 14770                           indf0	equ	0xFEF
 14771                           postinc0	equ	0xFEE
 14772                           fsr0h	equ	0xFEA
 14773                           fsr0l	equ	0xFE9
 14774                           wreg	equ	0xFE8
 14775                           indf1	equ	0xFE7
 14776                           postinc1	equ	0xFE6
 14777                           postdec1	equ	0xFE5
 14778                           fsr1h	equ	0xFE2
 14779                           fsr1l	equ	0xFE1
 14780                           indf2	equ	0xFDF
 14781                           postinc2	equ	0xFDE
 14782                           postdec2	equ	0xFDD
 14783                           fsr2h	equ	0xFDA
 14784                           fsr2l	equ	0xFD9
 14785                           status	equ	0xFD8
 14786                           
 14787 ;; *************** function _Draw_Line *****************
 14788 ;; Defined at:
 14789 ;;		line 271 in file "main.c"
 14790 ;; Parameters:    Size  Location     Type
 14791 ;;  line            1    wreg     unsigned char 
 14792 ;;  length          1    2[COMRAM] unsigned char 
 14793 ;; Auto vars:     Size  Location     Type
 14794 ;;  line            1    6[COMRAM] unsigned char 
 14795 ;; Return value:  Size  Location     Type
 14796 ;;		None               void
 14797 ;; Registers used:
 14798 ;;		wreg, status,2, status,0, cstack
 14799 ;; Tracked objects:
 14800 ;;		On entry : 0/0
 14801 ;;		On exit  : 0/0
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14804 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14806 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14807 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14808 ;;Total ram usage:        5 bytes
 14809 ;; Hardware stack levels used:    1
 14810 ;; Hardware stack levels required when called:    2
 14811 ;; This function calls:
 14812 ;;		_Write
 14813 ;; This function is called by:
 14814 ;;		_File_read
 14815 ;;		_File_read_
 14816 ;; This function uses a non-reentrant model
 14817 ;;
 14818                           
 14819                           	psect	text36
 14820  004BB0                     __ptext36:
 14821                           	opt stack 0
 14822  004BB0                     _Draw_Line:
 14823                           	opt stack 26
 14824                           
 14825                           ;incstack = 0
 14826                           ;Draw_Line@line stored from wreg
 14827  004BB0  6E07               	movwf	Draw_Line@line,c
 14828                           
 14829                           ;main.c: 273: switch(line)
 14830  004BB2  D030               	goto	l12413
 14831  004BB4                     l12395:
 14832  004BB4  0101               	movlb	1	; () banked
 14833  004BB6  6B9C               	clrf	(_i+1)& (0+255),b
 14834  004BB8  6B9B               	clrf	_i& (0+255),b
 14835  004BBA  D006               	goto	l12401
 14836  004BBC                     l12397:
 14837                           
 14838                           ; BSR set to: 1
 14839                           ;main.c: 276: Write('-');
 14840  004BBC  0E2D               	movlw	45
 14841  004BBE  EC0F  F020         	call	_Write
 14842  004BC2  0101               	movlb	1	; () banked
 14843  004BC4  4B9B               	infsnz	_i& (0+255),f,b
 14844  004BC6  2B9C               	incf	(_i+1)& (0+255),f,b
 14845  004BC8                     l12401:
 14846                           
 14847                           ; BSR set to: 1
 14848  004BC8  5003               	movf	Draw_Line@length,w,c
 14849  004BCA  6E04               	movwf	??_Draw_Line& (0+255),c
 14850  004BCC  6A05               	clrf	(??_Draw_Line+1)& (0+255),c
 14851  004BCE  0101               	movlb	1	; () banked
 14852  004BD0  519C               	movf	(_i+1)& (0+255),w,b
 14853  004BD2  0A80               	xorlw	128
 14854  004BD4  6E06               	movwf	(??_Draw_Line+2)& (0+255),c
 14855  004BD6  5004               	movf	??_Draw_Line,w,c
 14856  004BD8  5D9B               	subwf	_i& (0+255),w,b
 14857  004BDA  5005               	movf	??_Draw_Line+1,w,c
 14858  004BDC  0A80               	xorlw	128
 14859  004BDE  5806               	subwfb	(??_Draw_Line+2)& (0+255),w,c
 14860  004BE0  E21D               	bc	l12415
 14861  004BE2  D7EC               	goto	l12397
 14862  004BE4                     l12403:
 14863  004BE4  0101               	movlb	1	; () banked
 14864  004BE6  6B9C               	clrf	(_i+1)& (0+255),b
 14865  004BE8  6B9B               	clrf	_i& (0+255),b
 14866  004BEA  D006               	goto	l12409
 14867  004BEC                     l12405:
 14868                           
 14869                           ; BSR set to: 1
 14870                           ;main.c: 279: Write('_');
 14871  004BEC  0E5F               	movlw	95
 14872  004BEE  EC0F  F020         	call	_Write
 14873  004BF2  0101               	movlb	1	; () banked
 14874  004BF4  4B9B               	infsnz	_i& (0+255),f,b
 14875  004BF6  2B9C               	incf	(_i+1)& (0+255),f,b
 14876  004BF8                     l12409:
 14877                           
 14878                           ; BSR set to: 1
 14879  004BF8  5003               	movf	Draw_Line@length,w,c
 14880  004BFA  6E04               	movwf	??_Draw_Line& (0+255),c
 14881  004BFC  6A05               	clrf	(??_Draw_Line+1)& (0+255),c
 14882  004BFE  0101               	movlb	1	; () banked
 14883  004C00  519C               	movf	(_i+1)& (0+255),w,b
 14884  004C02  0A80               	xorlw	128
 14885  004C04  6E06               	movwf	(??_Draw_Line+2)& (0+255),c
 14886  004C06  5004               	movf	??_Draw_Line,w,c
 14887  004C08  5D9B               	subwf	_i& (0+255),w,b
 14888  004C0A  5005               	movf	??_Draw_Line+1,w,c
 14889  004C0C  0A80               	xorlw	128
 14890  004C0E  5806               	subwfb	(??_Draw_Line+2)& (0+255),w,c
 14891  004C10  E205               	bc	l12415
 14892  004C12  D7EC               	goto	l12405
 14893  004C14                     l12413:
 14894  004C14  5007               	movf	Draw_Line@line,w,c
 14895                           
 14896                           ; Switch size 1, requested type "speed"
 14897                           ; Number of cases is 1, Range of values is 98 to 98
 14898                           ; switch strategies available:
 14899                           ; Name         Instructions Cycles
 14900                           ; simple_byte            4     3 (average)
 14901                           ;	Chosen strategy is simple_byte
 14902  004C16  0A62               	xorlw	98	; case 98
 14903  004C18  E0CD               	bz	l12395
 14904  004C1A  D7E4               	goto	l12403
 14905  004C1C                     l12415:
 14906                           
 14907                           ;main.c: 282: Write('\r');
 14908  004C1C  0E0D               	movlw	13
 14909  004C1E  EF0F  F020         	goto	_Write
 14910  004C22                     __end_of_Draw_Line:
 14911                           	opt stack 0
 14912                           tosu	equ	0xFFF
 14913                           tosh	equ	0xFFE
 14914                           tosl	equ	0xFFD
 14915                           pclath	equ	0xFFA
 14916                           tblptru	equ	0xFF8
 14917                           tblptrh	equ	0xFF7
 14918                           tblptrl	equ	0xFF6
 14919                           tablat	equ	0xFF5
 14920                           prodh	equ	0xFF4
 14921                           prodl	equ	0xFF3
 14922                           indf0	equ	0xFEF
 14923                           postinc0	equ	0xFEE
 14924                           fsr0h	equ	0xFEA
 14925                           fsr0l	equ	0xFE9
 14926                           wreg	equ	0xFE8
 14927                           indf1	equ	0xFE7
 14928                           postinc1	equ	0xFE6
 14929                           postdec1	equ	0xFE5
 14930                           fsr1h	equ	0xFE2
 14931                           fsr1l	equ	0xFE1
 14932                           indf2	equ	0xFDF
 14933                           postinc2	equ	0xFDE
 14934                           postdec2	equ	0xFDD
 14935                           fsr2h	equ	0xFDA
 14936                           fsr2l	equ	0xFD9
 14937                           status	equ	0xFD8
 14938                           
 14939 ;; *************** function _File_delete *****************
 14940 ;; Defined at:
 14941 ;;		line 682 in file "main.c"
 14942 ;; Parameters:    Size  Location     Type
 14943 ;;		None
 14944 ;; Auto vars:     Size  Location     Type
 14945 ;;		None
 14946 ;; Return value:  Size  Location     Type
 14947 ;;		None               void
 14948 ;; Registers used:
 14949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14950 ;; Tracked objects:
 14951 ;;		On entry : 0/0
 14952 ;;		On exit  : 0/0
 14953 ;;		Unchanged: 0/0
 14954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14959 ;;Total ram usage:        0 bytes
 14960 ;; Hardware stack levels used:    1
 14961 ;; Hardware stack levels required when called:   12
 14962 ;; This function calls:
 14963 ;;		_Clr_str
 14964 ;;		_Read_str
 14965 ;;		_Switch
 14966 ;;		_Write_str
 14967 ;;		_fl_remove
 14968 ;; This function is called by:
 14969 ;;		_File_IO
 14970 ;; This function uses a non-reentrant model
 14971 ;;
 14972                           
 14973                           	psect	text37
 14974  004FE6                     __ptext37:
 14975                           	opt stack 0
 14976  004FE6                     _File_delete:
 14977                           	opt stack 17
 14978                           
 14979                           ;main.c: 684: {
 14980                           ;main.c: 685: Write_str("\n\rEnter the file Name/path? 5 characters\n\r");
 14981                           
 14982                           ;incstack = 0
 14983  004FE6  0EFC               	movlw	high STR_47
 14984  004FE8  6E07               	movwf	Write_str@str+1,c
 14985  004FEA  0E13               	movlw	low STR_47
 14986  004FEC  6E06               	movwf	Write_str@str,c
 14987  004FEE  EC3C  F01F         	call	_Write_str	;wreg free
 14988                           
 14989                           ;main.c: 686: Clr_str(string);
 14990  004FF2  0E01               	movlw	high _string
 14991  004FF4  6E02               	movwf	Clr_str@buffer+1,c
 14992  004FF6  0101               	movlb	1	; () banked
 14993  004FF8  0EAF               	movlw	low _string
 14994  004FFA  6E01               	movwf	Clr_str@buffer,c
 14995  004FFC  EC9F  F01F         	call	_Clr_str	;wreg free
 14996                           
 14997                           ;main.c: 687: Clr_str(m);
 14998  005000  0E02               	movlw	high _m
 14999  005002  6E02               	movwf	Clr_str@buffer+1,c
 15000  005004  0102               	movlb	2	; () banked
 15001  005006  0E89               	movlw	low _m
 15002  005008  6E01               	movwf	Clr_str@buffer,c
 15003  00500A  EC9F  F01F         	call	_Clr_str	;wreg free
 15004                           
 15005                           ;main.c: 688: Read_str(string);
 15006  00500E  0E01               	movlw	high _string
 15007  005010  6E03               	movwf	Read_str@buffer+1,c
 15008  005012  0101               	movlb	1	; () banked
 15009  005014  0EAF               	movlw	low _string
 15010  005016  6E02               	movwf	Read_str@buffer,c
 15011  005018  EC2C  F021         	call	_Read_str	;wreg free
 15012                           
 15013                           ;main.c: 689: Switch('r');
 15014  00501C  0E72               	movlw	114
 15015  00501E  ECB7  F030         	call	_Switch
 15016                           
 15017                           ;main.c: 690: if (fl_remove(m) < 0)
 15018  005022  0E02               	movlw	high _m
 15019  005024  0101               	movlb	1	; () banked
 15020  005026  6F84               	movwf	(fl_remove@filename+1)& (0+255),b
 15021  005028  0E89               	movlw	low _m
 15022  00502A  6F83               	movwf	fl_remove@filename& (0+255),b
 15023  00502C  EC49  F02D         	call	_fl_remove	;wreg free
 15024  005030  0101               	movlb	1	; () banked
 15025  005032  5184               	movf	(?_fl_remove+1)& (0+255),w,b
 15026  005034  0A80               	xorlw	128
 15027  005036  6EF3               	movwf	prodl,c
 15028  005038  0E80               	movlw	128
 15029  00503A  5CF3               	subwf	prodl,w,c
 15030  00503C  0E00               	movlw	0
 15031  00503E  B4D8               	btfsc	status,2,c
 15032  005040  0101               	movlb	1	; () banked
 15033  005042  5D83               	subwf	?_fl_remove& (0+255),w,b
 15034  005044  E20A               	bc	l12891
 15035                           
 15036                           ; BSR set to: 1
 15037                           ;main.c: 691: {
 15038                           ;main.c: 692: Write_str("\n\rERROR: Delete file failed");
 15039  005046  0EFD               	movlw	high STR_48
 15040  005048  6E07               	movwf	Write_str@str+1,c
 15041  00504A  0ECE               	movlw	low STR_48
 15042  00504C  6E06               	movwf	Write_str@str,c
 15043  00504E  EC3C  F01F         	call	_Write_str	;wreg free
 15044                           
 15045                           ;main.c: 693: flag = 1;
 15046  005052  0E01               	movlw	1
 15047  005054  0101               	movlb	1	; () banked
 15048  005056  6FA9               	movwf	_flag& (0+255),b
 15049                           
 15050                           ;main.c: 694: }
 15051  005058  D006               	goto	l1778
 15052  00505A                     l12891:
 15053                           
 15054                           ; BSR set to: 1
 15055                           ;main.c: 695: else
 15056                           ;main.c: 696: {
 15057                           ;main.c: 697: Write_str("\n\rDelete file was successful..!\n");
 15058  00505A  0EFC               	movlw	high STR_49
 15059  00505C  6E07               	movwf	Write_str@str+1,c
 15060  00505E  0EF6               	movlw	low STR_49
 15061  005060  6E06               	movwf	Write_str@str,c
 15062  005062  EC3C  F01F         	call	_Write_str	;wreg free
 15063  005066                     l1778:
 15064  005066  0012               	return	
 15065  005068                     __end_of_File_delete:
 15066                           	opt stack 0
 15067                           tosu	equ	0xFFF
 15068                           tosh	equ	0xFFE
 15069                           tosl	equ	0xFFD
 15070                           pclath	equ	0xFFA
 15071                           tblptru	equ	0xFF8
 15072                           tblptrh	equ	0xFF7
 15073                           tblptrl	equ	0xFF6
 15074                           tablat	equ	0xFF5
 15075                           prodh	equ	0xFF4
 15076                           prodl	equ	0xFF3
 15077                           indf0	equ	0xFEF
 15078                           postinc0	equ	0xFEE
 15079                           fsr0h	equ	0xFEA
 15080                           fsr0l	equ	0xFE9
 15081                           wreg	equ	0xFE8
 15082                           indf1	equ	0xFE7
 15083                           postinc1	equ	0xFE6
 15084                           postdec1	equ	0xFE5
 15085                           fsr1h	equ	0xFE2
 15086                           fsr1l	equ	0xFE1
 15087                           indf2	equ	0xFDF
 15088                           postinc2	equ	0xFDE
 15089                           postdec2	equ	0xFDD
 15090                           fsr2h	equ	0xFDA
 15091                           fsr2l	equ	0xFD9
 15092                           status	equ	0xFD8
 15093                           
 15094 ;; *************** function _fl_remove *****************
 15095 ;; Defined at:
 15096 ;;		line 1415 in file "fat_filelib.c"
 15097 ;; Parameters:    Size  Location     Type
 15098 ;;  filename        2  131[BANK1 ] PTR const unsigned char 
 15099 ;;		 -> m(30), 
 15100 ;; Auto vars:     Size  Location     Type
 15101 ;;  file            2  135[BANK1 ] PTR struct sFL_FILE
 15102 ;;		 -> RAM(3967), NULL(0), 
 15103 ;;  res             2  133[BANK1 ] int 
 15104 ;; Return value:  Size  Location     Type
 15105 ;;                  2  131[BANK1 ] int 
 15106 ;; Registers used:
 15107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15108 ;; Tracked objects:
 15109 ;;		On entry : 0/0
 15110 ;;		On exit  : 0/0
 15111 ;;		Unchanged: 0/0
 15112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15113 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15114 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15116 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15117 ;;Total ram usage:        6 bytes
 15118 ;; Hardware stack levels used:    1
 15119 ;; Hardware stack levels required when called:   11
 15120 ;; This function calls:
 15121 ;;		_fatfs_free_cluster_chain
 15122 ;;		_fatfs_mark_file_deleted
 15123 ;;		_fl_fclose
 15124 ;;		_fl_fopen
 15125 ;; This function is called by:
 15126 ;;		_File_write
 15127 ;;		_File_delete
 15128 ;; This function uses a non-reentrant model
 15129 ;;
 15130                           
 15131                           	psect	text38
 15132  005A92                     __ptext38:
 15133                           	opt stack 0
 15134  005A92                     _fl_remove:
 15135                           	opt stack 17
 15136                           
 15137                           ;fat_filelib.c: 1417: FL_FILE* file;
 15138                           ;fat_filelib.c: 1418: int res = -1;
 15139                           
 15140                           ;incstack = 0
 15141  005A92  0101               	movlb	1	; () banked
 15142  005A94  6985               	setf	fl_remove@res& (0+255),b
 15143  005A96  6986               	setf	(fl_remove@res+1)& (0+255),b
 15144                           
 15145                           ; BSR set to: 1
 15146                           ;fat_filelib.c: 1423: file = fl_fopen((char*)filename, "r");
 15147                           
 15148                           ; BSR set to: 1
 15149                           
 15150                           ; BSR set to: 1
 15151                           
 15152                           ; BSR set to: 1
 15153                           
 15154                           ; BSR set to: 1
 15155                           
 15156                           ;fat_filelib.c: 1420: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
 15157  005A98  C184  F0FD         	movff	fl_remove@filename+1,fl_fopen@path+1
 15158  005A9C  C183  F0FC         	movff	fl_remove@filename,fl_fopen@path
 15159  005AA0  0EFF               	movlw	high STR_10
 15160  005AA2  0100               	movlb	0	; () banked
 15161  005AA4  6FFF               	movwf	(fl_fopen@mode+1)& (0+255),b
 15162  005AA6  0EFD               	movlw	low STR_10
 15163  005AA8  6FFE               	movwf	fl_fopen@mode& (0+255),b
 15164  005AAA  ECAE  F036         	call	_fl_fopen	;wreg free
 15165  005AAE  C0FC  F187         	movff	?_fl_fopen,fl_remove@file
 15166  005AB2  C0FD  F188         	movff	?_fl_fopen+1,fl_remove@file+1
 15167                           
 15168                           ; BSR set to: 0
 15169                           ;fat_filelib.c: 1424: if (file)
 15170  005AB6  0101               	movlb	1	; () banked
 15171  005AB8  5188               	movf	(fl_remove@file+1)& (0+255),w,b
 15172  005ABA  1187               	iorwf	fl_remove@file& (0+255),w,b
 15173  005ABC  E045               	bz	l763
 15174                           
 15175                           ; BSR set to: 1
 15176                           ;fat_filelib.c: 1425: {
 15177                           ;fat_filelib.c: 1427: if (fatfs_free_cluster_chain(&_fs, file->startcluster))
 15178  005ABE  0E09               	movlw	high __fs
 15179  005AC0  0100               	movlb	0	; () banked
 15180  005AC2  6F81               	movwf	(fatfs_free_cluster_chain@fs+1)& (0+255),b
 15181  005AC4  0E78               	movlw	low __fs
 15182  005AC6  6F80               	movwf	fatfs_free_cluster_chain@fs& (0+255),b
 15183  005AC8  EE20 F004          	lfsr	2,4
 15184  005ACC  0101               	movlb	1	; () banked
 15185  005ACE  5187               	movf	fl_remove@file& (0+255),w,b
 15186  005AD0  26D9               	addwf	fsr2l,f,c
 15187  005AD2  5188               	movf	(fl_remove@file+1)& (0+255),w,b
 15188  005AD4  22DA               	addwfc	fsr2h,f,c
 15189  005AD6  CFDE F082          	movff	postinc2,fatfs_free_cluster_chain@start_cluster
 15190  005ADA  CFDE F083          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+1
 15191  005ADE  CFDE F084          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+2
 15192  005AE2  0100               	movlb	0	; () banked
 15193  005AE4  CFDE F085          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+3
 15194  005AE8  EC9A  F02B         	call	_fatfs_free_cluster_chain	;wreg free
 15195  005AEC  0100               	movlb	0	; () banked
 15196  005AEE  5181               	movf	(?_fatfs_free_cluster_chain+1)& (0+255),w,b
 15197  005AF0  1180               	iorwf	?_fatfs_free_cluster_chain& (0+255),w,b
 15198  005AF2  E02A               	bz	l763
 15199                           
 15200                           ; BSR set to: 0
 15201                           ;fat_filelib.c: 1428: {
 15202                           ;fat_filelib.c: 1430: if (fatfs_mark_file_deleted(&_fs, file->parentcluster, (char*)file
      +                          ->shortfilename))
 15203  005AF4  0E09               	movlw	high __fs
 15204  005AF6  6FAD               	movwf	(fatfs_mark_file_deleted@fs+1)& (0+255),b
 15205  005AF8  0E78               	movlw	low __fs
 15206  005AFA  6FAC               	movwf	fatfs_mark_file_deleted@fs& (0+255),b
 15207  005AFC  C187  FFD9         	movff	fl_remove@file,fsr2l
 15208  005B00  C188  FFDA         	movff	fl_remove@file+1,fsr2h
 15209  005B04  CFDE F0AE          	movff	postinc2,fatfs_mark_file_deleted@Cluster
 15210  005B08  CFDE F0AF          	movff	postinc2,fatfs_mark_file_deleted@Cluster+1
 15211  005B0C  CFDE F0B0          	movff	postinc2,fatfs_mark_file_deleted@Cluster+2
 15212  005B10  CFDE F0B1          	movff	postinc2,fatfs_mark_file_deleted@Cluster+3
 15213  005B14  0E26               	movlw	38
 15214  005B16  0101               	movlb	1	; () banked
 15215  005B18  2587               	addwf	fl_remove@file& (0+255),w,b
 15216  005B1A  0100               	movlb	0	; () banked
 15217  005B1C  6FB2               	movwf	fatfs_mark_file_deleted@shortname& (0+255),b
 15218  005B1E  0E00               	movlw	0
 15219  005B20  0101               	movlb	1	; () banked
 15220  005B22  2188               	addwfc	(fl_remove@file+1)& (0+255),w,b
 15221  005B24  0100               	movlb	0	; () banked
 15222  005B26  6FB3               	movwf	(fatfs_mark_file_deleted@shortname+1)& (0+255),b
 15223  005B28  EC98  F03B         	call	_fatfs_mark_file_deleted	;wreg free
 15224  005B2C  0100               	movlb	0	; () banked
 15225  005B2E  51AD               	movf	(?_fatfs_mark_file_deleted+1)& (0+255),w,b
 15226  005B30  11AC               	iorwf	?_fatfs_mark_file_deleted& (0+255),w,b
 15227  005B32  E00A               	bz	l763
 15228                           
 15229                           ; BSR set to: 0
 15230                           ;fat_filelib.c: 1431: {
 15231                           ;fat_filelib.c: 1434: fl_fclose(file);
 15232  005B34  C188  F0DF         	movff	fl_remove@file+1,fl_fclose@f+1
 15233  005B38  C187  F0DE         	movff	fl_remove@file,fl_fclose@f
 15234  005B3C  EC3D  F032         	call	_fl_fclose	;wreg free
 15235                           
 15236                           ;fat_filelib.c: 1436: res = 0;
 15237  005B40  0E00               	movlw	0
 15238  005B42  0101               	movlb	1	; () banked
 15239  005B44  6F86               	movwf	(fl_remove@res+1)& (0+255),b
 15240  005B46  6F85               	movwf	fl_remove@res& (0+255),b
 15241  005B48                     l763:
 15242                           
 15243                           ;fat_filelib.c: 1443: return res;
 15244  005B48  C185  F183         	movff	fl_remove@res,?_fl_remove
 15245  005B4C  C186  F184         	movff	fl_remove@res+1,?_fl_remove+1
 15246  005B50  0012               	return	
 15247  005B52                     __end_of_fl_remove:
 15248                           	opt stack 0
 15249                           tosu	equ	0xFFF
 15250                           tosh	equ	0xFFE
 15251                           tosl	equ	0xFFD
 15252                           pclath	equ	0xFFA
 15253                           tblptru	equ	0xFF8
 15254                           tblptrh	equ	0xFF7
 15255                           tblptrl	equ	0xFF6
 15256                           tablat	equ	0xFF5
 15257                           prodh	equ	0xFF4
 15258                           prodl	equ	0xFF3
 15259                           indf0	equ	0xFEF
 15260                           postinc0	equ	0xFEE
 15261                           fsr0h	equ	0xFEA
 15262                           fsr0l	equ	0xFE9
 15263                           wreg	equ	0xFE8
 15264                           indf1	equ	0xFE7
 15265                           postinc1	equ	0xFE6
 15266                           postdec1	equ	0xFE5
 15267                           fsr1h	equ	0xFE2
 15268                           fsr1l	equ	0xFE1
 15269                           indf2	equ	0xFDF
 15270                           postinc2	equ	0xFDE
 15271                           postdec2	equ	0xFDD
 15272                           fsr2h	equ	0xFDA
 15273                           fsr2l	equ	0xFD9
 15274                           status	equ	0xFD8
 15275                           
 15276 ;; *************** function _fatfs_mark_file_deleted *****************
 15277 ;; Defined at:
 15278 ;;		line 685 in file "fat_access.c"
 15279 ;; Parameters:    Size  Location     Type
 15280 ;;  fs              2   44[BANK0 ] PTR struct fatfs
 15281 ;;		 -> _fs(1095), 
 15282 ;;  Cluster         4   46[BANK0 ] unsigned long 
 15283 ;;  shortname       2   50[BANK0 ] PTR unsigned char 
 15284 ;;		 -> RAM(3967), NULL(0), 
 15285 ;; Auto vars:     Size  Location     Type
 15286 ;;  directoryEnt    2   61[BANK0 ] PTR struct fat_dir_entry
 15287 ;;		 -> _fs.currentsector.sector(512), 
 15288 ;;  recordoffset    2   58[BANK0 ] unsigned short 
 15289 ;;  x               2   56[BANK0 ] int 
 15290 ;;  item            1   60[BANK0 ] unsigned char 
 15291 ;; Return value:  Size  Location     Type
 15292 ;;                  2   44[BANK0 ] int 
 15293 ;; Registers used:
 15294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15295 ;; Tracked objects:
 15296 ;;		On entry : 0/0
 15297 ;;		On exit  : 0/0
 15298 ;;		Unchanged: 0/0
 15299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15300 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15301 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15302 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15303 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15304 ;;Total ram usage:       19 bytes
 15305 ;; Hardware stack levels used:    1
 15306 ;; Hardware stack levels required when called:    7
 15307 ;; This function calls:
 15308 ;;		_fatfs_entry_lfn_invalid
 15309 ;;		_fatfs_entry_lfn_text
 15310 ;;		_fatfs_entry_sfn_only
 15311 ;;		_fatfs_sector_reader
 15312 ;;		_media_write
 15313 ;;		_memcpy
 15314 ;;		_strncmp
 15315 ;; This function is called by:
 15316 ;;		_fl_remove
 15317 ;; This function uses a non-reentrant model
 15318 ;;
 15319                           
 15320                           	psect	text39
 15321  007730                     __ptext39:
 15322                           	opt stack 0
 15323  007730                     _fatfs_mark_file_deleted:
 15324                           	opt stack 20
 15325                           
 15326                           ;fat_access.c: 687: uint8 item=0;
 15327                           
 15328                           ;incstack = 0
 15329  007730  0100               	movlb	0	; () banked
 15330  007732  6BBC               	clrf	fatfs_mark_file_deleted@item& (0+255),b
 15331                           
 15332                           ;fat_access.c: 688: uint16 recordoffset = 0;
 15333  007734  6BBB               	clrf	(fatfs_mark_file_deleted@recordoffset+1)& (0+255),b
 15334  007736  6BBA               	clrf	fatfs_mark_file_deleted@recordoffset& (0+255),b
 15335                           
 15336                           ;fat_access.c: 689: int x=0;
 15337  007738  6BB9               	clrf	(fatfs_mark_file_deleted@x+1)& (0+255),b
 15338  00773A  6BB8               	clrf	fatfs_mark_file_deleted@x& (0+255),b
 15339                           
 15340                           ; BSR set to: 0
 15341                           ;fat_access.c: 690: struct fat_dir_entry *directoryEntry;
 15342                           ;fat_access.c: 693: if (!fs->disk_io.write_media)
 15343  00773C  EE20 F02B          	lfsr	2,43
 15344  007740  51AC               	movf	fatfs_mark_file_deleted@fs& (0+255),w,b
 15345  007742  26D9               	addwf	fsr2l,f,c
 15346  007744  51AD               	movf	(fatfs_mark_file_deleted@fs+1)& (0+255),w,b
 15347  007746  22DA               	addwfc	fsr2h,f,c
 15348  007748  50DE               	movf	postinc2,w,c
 15349  00774A  10DD               	iorwf	postdec2,w,c
 15350  00774C  E101 D0CF          	bz	l11657
 15351  007750                     l11621:
 15352                           
 15353                           ; BSR set to: 0
 15354                           ;fat_access.c: 698: {
 15355                           ;fat_access.c: 700: if (fatfs_sector_reader(fs, Cluster, x++, 0))
 15356  007750  C0AD  F081         	movff	fatfs_mark_file_deleted@fs+1,fatfs_sector_reader@fs+1
 15357  007754  C0AC  F080         	movff	fatfs_mark_file_deleted@fs,fatfs_sector_reader@fs
 15358  007758  C0AE  F082         	movff	fatfs_mark_file_deleted@Cluster,fatfs_sector_reader@start_cluster
 15359  00775C  C0AF  F083         	movff	fatfs_mark_file_deleted@Cluster+1,fatfs_sector_reader@start_cluster+1
 15360  007760  C0B0  F084         	movff	fatfs_mark_file_deleted@Cluster+2,fatfs_sector_reader@start_cluster+2
 15361  007764  C0B1  F085         	movff	fatfs_mark_file_deleted@Cluster+3,fatfs_sector_reader@start_cluster+3
 15362  007768  0100               	movlb	0	; () banked
 15363  00776A  51B8               	movf	fatfs_mark_file_deleted@x& (0+255),w,b
 15364  00776C  6FB4               	movwf	??_fatfs_mark_file_deleted& (0+255),b
 15365  00776E  51B9               	movf	(fatfs_mark_file_deleted@x+1)& (0+255),w,b
 15366  007770  6FB5               	movwf	(??_fatfs_mark_file_deleted+1)& (0+255),b
 15367  007772  4BB8               	infsnz	fatfs_mark_file_deleted@x& (0+255),f,b
 15368  007774  2BB9               	incf	(fatfs_mark_file_deleted@x+1)& (0+255),f,b
 15369  007776  C0B4  F086         	movff	??_fatfs_mark_file_deleted,fatfs_sector_reader@offset
 15370  00777A  C0B5  F087         	movff	??_fatfs_mark_file_deleted+1,fatfs_sector_reader@offset+1
 15371  00777E  0E00               	movlw	0
 15372  007780  BF87               	btfsc	(fatfs_sector_reader@offset+1)& (0+255),7,b
 15373  007782  0EFF               	movlw	-1
 15374  007784  6F88               	movwf	(fatfs_sector_reader@offset+2)& (0+255),b
 15375  007786  6F89               	movwf	(fatfs_sector_reader@offset+3)& (0+255),b
 15376  007788  0E00               	movlw	0
 15377  00778A  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
 15378  00778C  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
 15379  00778E  ECD6  F052         	call	_fatfs_sector_reader	;wreg free
 15380  007792  0100               	movlb	0	; () banked
 15381  007794  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
 15382  007796  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
 15383  007798  E101 D0A9          	bz	l11657
 15384                           
 15385                           ; BSR set to: 0
 15386                           ;fat_access.c: 701: {
 15387                           ;fat_access.c: 703: for (item = 0; item < (512 / 32); item++)
 15388  00779C  6BBC               	clrf	fatfs_mark_file_deleted@item& (0+255),b
 15389                           
 15390                           ; BSR set to: 0
 15391  00779E  0E0F               	movlw	15
 15392  0077A0  65BC               	cpfsgt	fatfs_mark_file_deleted@item& (0+255),b
 15393  0077A2  D001               	goto	l11629
 15394  0077A4  D7D5               	goto	l11621
 15395  0077A6                     l11629:
 15396                           
 15397                           ; BSR set to: 0
 15398                           ;fat_access.c: 704: {
 15399                           ;fat_access.c: 706: recordoffset = 32 * item;
 15400  0077A6  0100               	movlb	0	; () banked
 15401  0077A8  51BC               	movf	fatfs_mark_file_deleted@item& (0+255),w,b
 15402  0077AA  0D20               	mullw	32
 15403  0077AC  CFF3 F0BA          	movff	prodl,fatfs_mark_file_deleted@recordoffset
 15404  0077B0  CFF4 F0BB          	movff	prodh,fatfs_mark_file_deleted@recordoffset+1
 15405                           
 15406                           ; BSR set to: 0
 15407                           ;fat_access.c: 709: directoryEntry = (struct fat_dir_entry*)(fs->currentsector.sector+re
      +                          cordoffset);
 15408  0077B4  C0AC  F0B4         	movff	fatfs_mark_file_deleted@fs,??_fatfs_mark_file_deleted
 15409  0077B8  C0AD  F0B5         	movff	fatfs_mark_file_deleted@fs+1,??_fatfs_mark_file_deleted+1
 15410  0077BC  51BA               	movf	fatfs_mark_file_deleted@recordoffset& (0+255),w,b
 15411  0077BE  27B4               	addwf	??_fatfs_mark_file_deleted& (0+255),f,b
 15412  0077C0  51BB               	movf	(fatfs_mark_file_deleted@recordoffset+1)& (0+255),w,b
 15413  0077C2  23B5               	addwfc	(??_fatfs_mark_file_deleted+1)& (0+255),f,b
 15414  0077C4  0E31               	movlw	49
 15415  0077C6  25B4               	addwf	??_fatfs_mark_file_deleted& (0+255),w,b
 15416  0077C8  6FBD               	movwf	fatfs_mark_file_deleted@directoryEntry& (0+255),b
 15417  0077CA  0E00               	movlw	0
 15418  0077CC  21B5               	addwfc	(??_fatfs_mark_file_deleted+1)& (0+255),w,b
 15419  0077CE  6FBE               	movwf	(fatfs_mark_file_deleted@directoryEntry+1)& (0+255),b
 15420                           
 15421                           ; BSR set to: 0
 15422                           ;fat_access.c: 713: if (fatfs_entry_lfn_text(directoryEntry) )
 15423  0077D0  C0BE  F002         	movff	fatfs_mark_file_deleted@directoryEntry+1,fatfs_entry_lfn_text@entry+1
 15424  0077D4  C0BD  F001         	movff	fatfs_mark_file_deleted@directoryEntry,fatfs_entry_lfn_text@entry
 15425  0077D8  ECFA  F01F         	call	_fatfs_entry_lfn_text	;wreg free
 15426  0077DC  5002               	movf	?_fatfs_entry_lfn_text+1,w,c
 15427  0077DE  1001               	iorwf	?_fatfs_entry_lfn_text,w,c
 15428  0077E0  E001 D07F          	bnz	l11653
 15429                           
 15430                           ;fat_access.c: 717: else if (fatfs_entry_lfn_invalid(directoryEntry) )
 15431                           
 15432                           ;fat_access.c: 714: ;
 15433  0077E4  C0BE  F002         	movff	fatfs_mark_file_deleted@directoryEntry+1,fatfs_entry_lfn_invalid@entry+1
 15434  0077E8  0100               	movlb	0	; () banked
 15435  0077EA  C0BD  F001         	movff	fatfs_mark_file_deleted@directoryEntry,fatfs_entry_lfn_invalid@entry
 15436  0077EE  ECA4  F022         	call	_fatfs_entry_lfn_invalid	;wreg free
 15437  0077F2  5002               	movf	?_fatfs_entry_lfn_invalid+1,w,c
 15438  0077F4  1001               	iorwf	?_fatfs_entry_lfn_invalid,w,c
 15439  0077F6  E175               	bnz	l11653
 15440                           
 15441                           ;fat_access.c: 721: else
 15442                           ;fat_access.c: 723: if (fatfs_entry_sfn_only(directoryEntry) )
 15443                           
 15444                           ;fat_access.c: 718: ;
 15445  0077F8  C0BE  F002         	movff	fatfs_mark_file_deleted@directoryEntry+1,fatfs_entry_sfn_only@entry+1
 15446  0077FC  0100               	movlb	0	; () banked
 15447  0077FE  C0BD  F001         	movff	fatfs_mark_file_deleted@directoryEntry,fatfs_entry_sfn_only@entry
 15448  007802  ECD0  F024         	call	_fatfs_entry_sfn_only	;wreg free
 15449  007806  5002               	movf	?_fatfs_entry_sfn_only+1,w,c
 15450  007808  1001               	iorwf	?_fatfs_entry_sfn_only,w,c
 15451  00780A  E06B               	bz	l11653
 15452                           
 15453                           ;fat_access.c: 724: {
 15454                           ;fat_access.c: 725: if (strncmp((const char *)directoryEntry->Name, shortname, 11)==0)
 15455  00780C  C0BE  F002         	movff	fatfs_mark_file_deleted@directoryEntry+1,strncmp@s1+1
 15456  007810  C0BD  F001         	movff	fatfs_mark_file_deleted@directoryEntry,strncmp@s1
 15457  007814  C0B3  F004         	movff	fatfs_mark_file_deleted@shortname+1,strncmp@s2+1
 15458  007818  0100               	movlb	0	; () banked
 15459  00781A  C0B2  F003         	movff	fatfs_mark_file_deleted@shortname,strncmp@s2
 15460  00781E  6A06               	clrf	strncmp@len+1,c
 15461  007820  0E0B               	movlw	11
 15462  007822  6E05               	movwf	strncmp@len,c
 15463  007824  EC11  F026         	call	_strncmp	;wreg free
 15464  007828  5002               	movf	?_strncmp+1,w,c
 15465  00782A  1001               	iorwf	?_strncmp,w,c
 15466  00782C  E15A               	bnz	l11653
 15467                           
 15468                           ;fat_access.c: 726: {
 15469                           ;fat_access.c: 728: directoryEntry->Name[0] = 0xE5;
 15470  00782E  C0BD  FFD9         	movff	fatfs_mark_file_deleted@directoryEntry,fsr2l
 15471  007832  C0BE  FFDA         	movff	fatfs_mark_file_deleted@directoryEntry+1,fsr2h
 15472  007836  0EE5               	movlw	229
 15473  007838  6EDF               	movwf	indf2,c
 15474                           
 15475                           ;fat_access.c: 736: memcpy((uint8*)(fs->currentsector.sector+recordoffset), (uint8*)dire
      +                          ctoryEntry, sizeof(struct fat_dir_entry));
 15476  00783A  C0AC  F0B4         	movff	fatfs_mark_file_deleted@fs,??_fatfs_mark_file_deleted
 15477  00783E  C0AD  F0B5         	movff	fatfs_mark_file_deleted@fs+1,??_fatfs_mark_file_deleted+1
 15478  007842  0100               	movlb	0	; () banked
 15479  007844  51BA               	movf	fatfs_mark_file_deleted@recordoffset& (0+255),w,b
 15480  007846  27B4               	addwf	??_fatfs_mark_file_deleted& (0+255),f,b
 15481  007848  51BB               	movf	(fatfs_mark_file_deleted@recordoffset+1)& (0+255),w,b
 15482  00784A  23B5               	addwfc	(??_fatfs_mark_file_deleted+1)& (0+255),f,b
 15483  00784C  0E31               	movlw	49
 15484  00784E  25B4               	addwf	??_fatfs_mark_file_deleted& (0+255),w,b
 15485  007850  6E01               	movwf	memcpy@d1,c
 15486  007852  0E00               	movlw	0
 15487  007854  21B5               	addwfc	(??_fatfs_mark_file_deleted+1)& (0+255),w,b
 15488  007856  6E02               	movwf	memcpy@d1+1,c
 15489  007858  0E20               	movlw	32
 15490  00785A  6E05               	movwf	memcpy@s1+2,c
 15491  00785C  C0BE  F004         	movff	fatfs_mark_file_deleted@directoryEntry+1,memcpy@s1+1
 15492  007860  C0BD  F003         	movff	fatfs_mark_file_deleted@directoryEntry,memcpy@s1
 15493  007864  6A07               	clrf	memcpy@n+1,c
 15494  007866  6E06               	movwf	memcpy@n,c
 15495  007868  ECAE  F023         	call	_memcpy	;wreg free
 15496                           
 15497                           ;fat_access.c: 739: return fs->disk_io.write_media(fs->currentsector.address, fs->curren
      +                          tsector.sector, 1);
 15498  00786C  EE22 F031          	lfsr	2,561
 15499  007870  0100               	movlb	0	; () banked
 15500  007872  51AC               	movf	fatfs_mark_file_deleted@fs& (0+255),w,b
 15501  007874  26D9               	addwf	fsr2l,f,c
 15502  007876  51AD               	movf	(fatfs_mark_file_deleted@fs+1)& (0+255),w,b
 15503  007878  22DA               	addwfc	fsr2h,f,c
 15504  00787A  CFDE F009          	movff	postinc2,media_write@sector
 15505  00787E  CFDE F00A          	movff	postinc2,media_write@sector+1
 15506  007882  CFDE F00B          	movff	postinc2,media_write@sector+2
 15507  007886  CFDE F00C          	movff	postinc2,media_write@sector+3
 15508  00788A  0E31               	movlw	49
 15509  00788C  25AC               	addwf	fatfs_mark_file_deleted@fs& (0+255),w,b
 15510  00788E  6FB4               	movwf	??_fatfs_mark_file_deleted& (0+255),b
 15511  007890  0E00               	movlw	0
 15512  007892  21AD               	addwfc	(fatfs_mark_file_deleted@fs+1)& (0+255),w,b
 15513  007894  6FB5               	movwf	(??_fatfs_mark_file_deleted+1)& (0+255),b
 15514  007896  0E20               	movlw	32
 15515  007898  6E0F               	movwf	media_write@buffer+2,c
 15516  00789A  C0B5  F00E         	movff	??_fatfs_mark_file_deleted+1,media_write@buffer+1
 15517  00789E  C0B4  F00D         	movff	??_fatfs_mark_file_deleted,media_write@buffer
 15518  0078A2  0E01               	movlw	1
 15519  0078A4  6E10               	movwf	media_write@sector_count,c
 15520  0078A6  6A11               	clrf	media_write@sector_count+1,c
 15521  0078A8  6A12               	clrf	media_write@sector_count+2,c
 15522  0078AA  6A13               	clrf	media_write@sector_count+3,c
 15523  0078AC  EE20 F02B          	lfsr	2,43
 15524  0078B0  51AC               	movf	fatfs_mark_file_deleted@fs& (0+255),w,b
 15525  0078B2  26D9               	addwf	fsr2l,f,c
 15526  0078B4  51AD               	movf	(fatfs_mark_file_deleted@fs+1)& (0+255),w,b
 15527  0078B6  22DA               	addwfc	fsr2h,f,c
 15528  0078B8  CFDE F0B6          	movff	postinc2,??_fatfs_mark_file_deleted+2
 15529  0078BC  CFDD F0B7          	movff	postdec2,??_fatfs_mark_file_deleted+3
 15530  0078C0  D801               	call	u13648
 15531  0078C2  D00A               	goto	u13649
 15532  0078C4                     u13648:
 15533  0078C4  0005               	push	
 15534  0078C6  6EFA               	movwf	pclath,c
 15535  0078C8  0100               	movlb	0	; () banked
 15536  0078CA  51B6               	movf	(??_fatfs_mark_file_deleted+2)& (0+255),w,b
 15537  0078CC  6EFD               	movwf	tosl,c
 15538  0078CE  51B7               	movf	(??_fatfs_mark_file_deleted+3)& (0+255),w,b
 15539  0078D0  6EFE               	movwf	tosh,c
 15540  0078D2  6AFF               	clrf	tosu,c
 15541  0078D4  50FA               	movf	pclath,w,c
 15542  0078D6  0012               	return		;indir
 15543  0078D8                     u13649:
 15544  0078D8  C009  F0AC         	movff	?_media_write,?_fatfs_mark_file_deleted
 15545  0078DC  C00A  F0AD         	movff	?_media_write+1,?_fatfs_mark_file_deleted+1
 15546  0078E0  D00A               	goto	l196
 15547  0078E2                     l11653:
 15548  0078E2  0100               	movlb	0	; () banked
 15549  0078E4  2BBC               	incf	fatfs_mark_file_deleted@item& (0+255),f,b
 15550                           
 15551                           ; BSR set to: 0
 15552  0078E6  0E0F               	movlw	15
 15553  0078E8  65BC               	cpfsgt	fatfs_mark_file_deleted@item& (0+255),b
 15554  0078EA  D75D               	goto	l11629
 15555  0078EC  D731               	goto	l11621
 15556  0078EE                     l11657:
 15557                           
 15558                           ; BSR set to: 0
 15559                           ;fat_access.c: 746: }
 15560                           ;fat_access.c: 748: return 0;
 15561  0078EE  0E00               	movlw	0
 15562  0078F0  0100               	movlb	0	; () banked
 15563  0078F2  6FAD               	movwf	(?_fatfs_mark_file_deleted+1)& (0+255),b
 15564  0078F4  6FAC               	movwf	?_fatfs_mark_file_deleted& (0+255),b
 15565  0078F6                     l196:
 15566  0078F6  0012               	return	
 15567  0078F8                     __end_of_fatfs_mark_file_deleted:
 15568                           	opt stack 0
 15569                           tosu	equ	0xFFF
 15570                           tosh	equ	0xFFE
 15571                           tosl	equ	0xFFD
 15572                           pclath	equ	0xFFA
 15573                           tblptru	equ	0xFF8
 15574                           tblptrh	equ	0xFF7
 15575                           tblptrl	equ	0xFF6
 15576                           tablat	equ	0xFF5
 15577                           prodh	equ	0xFF4
 15578                           prodl	equ	0xFF3
 15579                           indf0	equ	0xFEF
 15580                           postinc0	equ	0xFEE
 15581                           fsr0h	equ	0xFEA
 15582                           fsr0l	equ	0xFE9
 15583                           wreg	equ	0xFE8
 15584                           indf1	equ	0xFE7
 15585                           postinc1	equ	0xFE6
 15586                           postdec1	equ	0xFE5
 15587                           fsr1h	equ	0xFE2
 15588                           fsr1l	equ	0xFE1
 15589                           indf2	equ	0xFDF
 15590                           postinc2	equ	0xFDE
 15591                           postdec2	equ	0xFDD
 15592                           fsr2h	equ	0xFDA
 15593                           fsr2l	equ	0xFD9
 15594                           status	equ	0xFD8
 15595                           
 15596 ;; *************** function _File_append *****************
 15597 ;; Defined at:
 15598 ;;		line 465 in file "main.c"
 15599 ;; Parameters:    Size  Location     Type
 15600 ;;		None
 15601 ;; Auto vars:     Size  Location     Type
 15602 ;;		None
 15603 ;; Return value:  Size  Location     Type
 15604 ;;		None               void
 15605 ;; Registers used:
 15606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15607 ;; Tracked objects:
 15608 ;;		On entry : 0/0
 15609 ;;		On exit  : 0/0
 15610 ;;		Unchanged: 0/0
 15611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15614 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15615 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15616 ;;Total ram usage:        4 bytes
 15617 ;; Hardware stack levels used:    1
 15618 ;; Hardware stack levels required when called:   11
 15619 ;; This function calls:
 15620 ;;		_Clr_str
 15621 ;;		_ReadUART
 15622 ;;		_Read_str
 15623 ;;		_Switch
 15624 ;;		_Write
 15625 ;;		_Write_str
 15626 ;;		_fl_fclose
 15627 ;;		_fl_fopen
 15628 ;;		_fl_fread
 15629 ;;		_fl_fseek
 15630 ;;		_fl_ftell
 15631 ;;		_fl_fwrite
 15632 ;; This function is called by:
 15633 ;;		_File_IO
 15634 ;; This function uses a non-reentrant model
 15635 ;;
 15636                           
 15637                           	psect	text40
 15638  0082AC                     __ptext40:
 15639                           	opt stack 0
 15640  0082AC                     _File_append:
 15641                           	opt stack 18
 15642                           
 15643                           ;main.c: 467: Write_str("\n\rEnter the file Name? 5 characters\n\r");
 15644                           
 15645                           ;incstack = 0
 15646  0082AC  0EFC               	movlw	high STR_28
 15647  0082AE  6E07               	movwf	Write_str@str+1,c
 15648  0082B0  0E65               	movlw	low STR_28
 15649  0082B2  6E06               	movwf	Write_str@str,c
 15650  0082B4  EC3C  F01F         	call	_Write_str	;wreg free
 15651                           
 15652                           ;main.c: 468: Clr_str(string);
 15653  0082B8  0E01               	movlw	high _string
 15654  0082BA  6E02               	movwf	Clr_str@buffer+1,c
 15655  0082BC  0101               	movlb	1	; () banked
 15656  0082BE  0EAF               	movlw	low _string
 15657  0082C0  6E01               	movwf	Clr_str@buffer,c
 15658  0082C2  EC9F  F01F         	call	_Clr_str	;wreg free
 15659                           
 15660                           ;main.c: 469: Read_str(string);
 15661  0082C6  0E01               	movlw	high _string
 15662  0082C8  6E03               	movwf	Read_str@buffer+1,c
 15663  0082CA  0101               	movlb	1	; () banked
 15664  0082CC  0EAF               	movlw	low _string
 15665  0082CE  6E02               	movwf	Read_str@buffer,c
 15666  0082D0  EC2C  F021         	call	_Read_str	;wreg free
 15667                           
 15668                           ;main.c: 470: Switch('w');
 15669  0082D4  0E77               	movlw	119
 15670  0082D6  ECB7  F030         	call	_Switch
 15671                           
 15672                           ;main.c: 471: file = fl_fopen(s,"a");
 15673  0082DA  0E02               	movlw	high _s
 15674  0082DC  0100               	movlb	0	; () banked
 15675  0082DE  6FFD               	movwf	(fl_fopen@path+1)& (0+255),b
 15676  0082E0  0EA7               	movlw	low _s
 15677  0082E2  6FFC               	movwf	fl_fopen@path& (0+255),b
 15678  0082E4  0EFF               	movlw	high STR_29
 15679  0082E6  6FFF               	movwf	(fl_fopen@mode+1)& (0+255),b
 15680  0082E8  0EF9               	movlw	low STR_29
 15681  0082EA  6FFE               	movwf	fl_fopen@mode& (0+255),b
 15682  0082EC  ECAE  F036         	call	_fl_fopen	;wreg free
 15683  0082F0  C0FC  F197         	movff	?_fl_fopen,_file
 15684  0082F4  C0FD  F198         	movff	?_fl_fopen+1,_file+1
 15685                           
 15686                           ; BSR set to: 0
 15687                           ;main.c: 472: fptr = file;
 15688  0082F8  C198  F19A         	movff	_file+1,_fptr+1
 15689  0082FC  C197  F199         	movff	_file,_fptr
 15690                           
 15691                           ; BSR set to: 1
 15692                           ;main.c: 473: if(file)
 15693  008300  0101               	movlb	1	; () banked
 15694  008302  5198               	movf	(_file+1)& (0+255),w,b
 15695  008304  1197               	iorwf	_file& (0+255),w,b
 15696  008306  E101 D0DB          	bz	l12833
 15697                           
 15698                           ; BSR set to: 1
 15699                           ;main.c: 474: {
 15700                           ;main.c: 475: Write_str("\n\rEnter the data to be appended to the file..\n\r");
 15701  00830A  0EFB               	movlw	high STR_30
 15702  00830C  6E07               	movwf	Write_str@str+1,c
 15703  00830E  0EB3               	movlw	low STR_30
 15704  008310  6E06               	movwf	Write_str@str,c
 15705  008312  EC3C  F01F         	call	_Write_str	;wreg free
 15706  008316                     l12775:
 15707                           
 15708                           ;main.c: 477: data = ReadUART();
 15709  008316  EC24  F01F         	call	_ReadUART	;wreg free
 15710  00831A  0101               	movlb	1	; () banked
 15711  00831C  6FF7               	movwf	_data& (0+255),b
 15712                           
 15713                           ; BSR set to: 1
 15714                           ;main.c: 478: if(data == '#')
 15715  00831E  51F7               	movf	_data& (0+255),w,b
 15716  008320  0A23               	xorlw	35
 15717  008322  E14E               	bnz	l12807
 15718                           
 15719                           ; BSR set to: 1
 15720                           ;main.c: 479: {
 15721                           ;main.c: 480: Write_str("\n\rEnter the line No. to Delete\n\r");
 15722  008324  0EFD               	movlw	high STR_31
 15723  008326  6E07               	movwf	Write_str@str+1,c
 15724  008328  0E17               	movlw	low STR_31
 15725  00832A  6E06               	movwf	Write_str@str,c
 15726  00832C  EC3C  F01F         	call	_Write_str	;wreg free
 15727                           
 15728                           ;main.c: 481: z = ReadUART();
 15729  008330  EC24  F01F         	call	_ReadUART	;wreg free
 15730  008334  0101               	movlb	1	; () banked
 15731  008336  6FAE               	movwf	_z& (0+255),b
 15732                           
 15733                           ; BSR set to: 1
 15734                           ;main.c: 482: t=0;
 15735  008338  6BAC               	clrf	_t& (0+255),b
 15736  00833A                     l12785:
 15737                           
 15738                           ; BSR set to: 1
 15739                           ;main.c: 484: fl_fread(&data, 1, 1, file);
 15740  00833A  0E01               	movlw	high _data
 15741  00833C  0100               	movlb	0	; () banked
 15742  00833E  6FDF               	movwf	(fl_fread@buffer+1)& (0+255),b
 15743  008340  0EF7               	movlw	low _data
 15744  008342  6FDE               	movwf	fl_fread@buffer& (0+255),b
 15745  008344  6BE1               	clrf	(fl_fread@size+1)& (0+255),b
 15746  008346  0E01               	movlw	1
 15747  008348  6FE0               	movwf	fl_fread@size& (0+255),b
 15748  00834A  6BE3               	clrf	(fl_fread@length+1)& (0+255),b
 15749  00834C  6FE2               	movwf	fl_fread@length& (0+255),b
 15750  00834E  C198  F0E5         	movff	_file+1,fl_fread@f+1
 15751  008352  C197  F0E4         	movff	_file,fl_fread@f
 15752  008356  EC0E  F065         	call	_fl_fread	;wreg free
 15753                           
 15754                           ;main.c: 485: if(data=='\r')
 15755  00835A  0101               	movlb	1	; () banked
 15756  00835C  51F7               	movf	_data& (0+255),w,b
 15757  00835E  0A0D               	xorlw	13
 15758  008360  E105               	bnz	l12793
 15759                           
 15760                           ; BSR set to: 1
 15761                           ;main.c: 486: {
 15762                           ;main.c: 487: Write('S');
 15763  008362  0E53               	movlw	83
 15764  008364  EC0F  F020         	call	_Write
 15765                           
 15766                           ;main.c: 488: t = t+1;
 15767  008368  0101               	movlb	1	; () banked
 15768  00836A  2BAC               	incf	_t& (0+255),f,b
 15769  00836C                     l12793:
 15770                           
 15771                           ; BSR set to: 1
 15772                           ;main.c: 490: }
 15773                           ;main.c: 491: }while(t!= z);
 15774  00836C  0101               	movlb	1	; () banked
 15775  00836E  51AE               	movf	_z& (0+255),w,b
 15776  008370  63AC               	cpfseq	_t& (0+255),b
 15777  008372  D7E3               	goto	l12785
 15778  008374                     l12795:
 15779                           
 15780                           ;main.c: 494: fl_fread(&data, 1, 1, file);
 15781  008374  0E01               	movlw	high _data
 15782  008376  0100               	movlb	0	; () banked
 15783  008378  6FDF               	movwf	(fl_fread@buffer+1)& (0+255),b
 15784  00837A  0EF7               	movlw	low _data
 15785  00837C  6FDE               	movwf	fl_fread@buffer& (0+255),b
 15786  00837E  6BE1               	clrf	(fl_fread@size+1)& (0+255),b
 15787  008380  0E01               	movlw	1
 15788  008382  6FE0               	movwf	fl_fread@size& (0+255),b
 15789  008384  6BE3               	clrf	(fl_fread@length+1)& (0+255),b
 15790  008386  6FE2               	movwf	fl_fread@length& (0+255),b
 15791  008388  C198  F0E5         	movff	_file+1,fl_fread@f+1
 15792  00838C  C197  F0E4         	movff	_file,fl_fread@f
 15793  008390  EC0E  F065         	call	_fl_fread	;wreg free
 15794                           
 15795                           ;main.c: 495: if(data=='\r')
 15796  008394  0101               	movlb	1	; () banked
 15797  008396  51F7               	movf	_data& (0+255),w,b
 15798  008398  0A0D               	xorlw	13
 15799  00839A  E101 D08A          	bz	l12831
 15800                           
 15801                           ; BSR set to: 1
 15802                           ;main.c: 497: else
 15803                           ;main.c: 498: {
 15804                           ;main.c: 499: fl_fwrite(' ', 1, 1, file);
 15805                           
 15806                           ; BSR set to: 1
 15807                           
 15808                           ; BSR set to: 1
 15809                           
 15810                           ; BSR set to: 1
 15811                           ;main.c: 496: break;
 15812  00839E  0100               	movlb	0	; () banked
 15813  0083A0  6BE0               	clrf	(fl_fwrite@data+2)& (0+255),b
 15814  0083A2  6BDF               	clrf	(fl_fwrite@data+1)& (0+255),b
 15815  0083A4  0E20               	movlw	32
 15816  0083A6  6FDE               	movwf	fl_fwrite@data& (0+255),b
 15817  0083A8  6BE2               	clrf	(fl_fwrite@size+1)& (0+255),b
 15818  0083AA  0E01               	movlw	1
 15819  0083AC  6FE1               	movwf	fl_fwrite@size& (0+255),b
 15820  0083AE  6BE4               	clrf	(fl_fwrite@count+1)& (0+255),b
 15821  0083B0  6FE3               	movwf	fl_fwrite@count& (0+255),b
 15822  0083B2  C198  F0E6         	movff	_file+1,fl_fwrite@f+1
 15823  0083B6  C197  F0E5         	movff	_file,fl_fwrite@f
 15824  0083BA  ECEE  F06C         	call	_fl_fwrite	;wreg free
 15825  0083BE  D7DA               	goto	l12795
 15826  0083C0                     l12807:
 15827                           
 15828                           ;main.c: 504: else if(data == 0x7F)
 15829  0083C0  0101               	movlb	1	; () banked
 15830  0083C2  51F7               	movf	_data& (0+255),w,b
 15831  0083C4  0A7F               	xorlw	127
 15832  0083C6  E150               	bnz	l12817
 15833                           
 15834                           ; BSR set to: 1
 15835                           ;main.c: 505: {
 15836                           ;main.c: 506: Write('s');
 15837  0083C8  0E73               	movlw	115
 15838  0083CA  EC0F  F020         	call	_Write
 15839                           
 15840                           ;main.c: 507: fl_fseek(file, -1, (fl_ftell(file)));
 15841  0083CE  C198  F018         	movff	_file+1,fl_fseek@f+1
 15842  0083D2  C197  F017         	movff	_file,fl_fseek@f
 15843  0083D6  0EFF               	movlw	255
 15844  0083D8  6819               	setf	fl_fseek@offset,c
 15845  0083DA  681A               	setf	fl_fseek@offset+1,c
 15846  0083DC  681B               	setf	fl_fseek@offset+2,c
 15847  0083DE  681C               	setf	fl_fseek@offset+3,c
 15848  0083E0  C198  F008         	movff	_file+1,fl_ftell@f+1
 15849  0083E4  0101               	movlb	1	; () banked
 15850  0083E6  C197  F007         	movff	_file,fl_ftell@f
 15851  0083EA  EC51  F020         	call	_fl_ftell	;wreg free
 15852  0083EE  C007  F183         	movff	?_fl_ftell,??_File_append
 15853  0083F2  C008  F184         	movff	?_fl_ftell+1,??_File_append+1
 15854  0083F6  C009  F185         	movff	?_fl_ftell+2,??_File_append+2
 15855  0083FA  C00A  F186         	movff	?_fl_ftell+3,??_File_append+3
 15856  0083FE  C183  F01D         	movff	??_File_append,fl_fseek@origin
 15857  008402  C184  F01E         	movff	??_File_append+1,fl_fseek@origin+1
 15858  008406  EC0D  F039         	call	_fl_fseek	;wreg free
 15859                           
 15860                           ;main.c: 508: fl_fwrite(' ', 1, 1, file);
 15861  00840A  0100               	movlb	0	; () banked
 15862  00840C  6BE0               	clrf	(fl_fwrite@data+2)& (0+255),b
 15863  00840E  6BDF               	clrf	(fl_fwrite@data+1)& (0+255),b
 15864  008410  0E20               	movlw	32
 15865  008412  6FDE               	movwf	fl_fwrite@data& (0+255),b
 15866  008414  6BE2               	clrf	(fl_fwrite@size+1)& (0+255),b
 15867  008416  0E01               	movlw	1
 15868  008418  6FE1               	movwf	fl_fwrite@size& (0+255),b
 15869  00841A  6BE4               	clrf	(fl_fwrite@count+1)& (0+255),b
 15870  00841C  6FE3               	movwf	fl_fwrite@count& (0+255),b
 15871  00841E  C198  F0E6         	movff	_file+1,fl_fwrite@f+1
 15872  008422  C197  F0E5         	movff	_file,fl_fwrite@f
 15873  008426  ECEE  F06C         	call	_fl_fwrite	;wreg free
 15874                           
 15875                           ;main.c: 509: fl_fseek(file, -1, (fl_ftell(file)));
 15876  00842A  C198  F018         	movff	_file+1,fl_fseek@f+1
 15877  00842E  C197  F017         	movff	_file,fl_fseek@f
 15878  008432  0EFF               	movlw	255
 15879  008434  6819               	setf	fl_fseek@offset,c
 15880  008436  681A               	setf	fl_fseek@offset+1,c
 15881  008438  681B               	setf	fl_fseek@offset+2,c
 15882  00843A  681C               	setf	fl_fseek@offset+3,c
 15883  00843C  C198  F008         	movff	_file+1,fl_ftell@f+1
 15884  008440  0101               	movlb	1	; () banked
 15885  008442  C197  F007         	movff	_file,fl_ftell@f
 15886  008446  EC51  F020         	call	_fl_ftell	;wreg free
 15887  00844A  C007  F183         	movff	?_fl_ftell,??_File_append
 15888  00844E  C008  F184         	movff	?_fl_ftell+1,??_File_append+1
 15889  008452  C009  F185         	movff	?_fl_ftell+2,??_File_append+2
 15890  008456  C00A  F186         	movff	?_fl_ftell+3,??_File_append+3
 15891  00845A  C183  F01D         	movff	??_File_append,fl_fseek@origin
 15892  00845E  C184  F01E         	movff	??_File_append+1,fl_fseek@origin+1
 15893  008462  EC0D  F039         	call	_fl_fseek	;wreg free
 15894                           
 15895                           ;main.c: 510: }
 15896  008466  D012               	goto	l12829
 15897  008468                     l12817:
 15898                           
 15899                           ;main.c: 511: else if(data==0x13)
 15900  008468  0101               	movlb	1	; () banked
 15901  00846A  51F7               	movf	_data& (0+255),w,b
 15902  00846C  0A13               	xorlw	19
 15903  00846E  E10E               	bnz	l12829
 15904                           
 15905                           ; BSR set to: 1
 15906                           ;main.c: 512: {
 15907                           ;main.c: 513: Write_str("\n\rSave the data? y/n?");
 15908  008470  0EFE               	movlw	high STR_32
 15909  008472  6E07               	movwf	Write_str@str+1,c
 15910  008474  0EB0               	movlw	low STR_32
 15911  008476  6E06               	movwf	Write_str@str,c
 15912  008478  EC3C  F01F         	call	_Write_str	;wreg free
 15913                           
 15914                           ;main.c: 514: data = ReadUART();
 15915  00847C  EC24  F01F         	call	_ReadUART	;wreg free
 15916  008480  0101               	movlb	1	; () banked
 15917  008482  6FF7               	movwf	_data& (0+255),b
 15918                           
 15919                           ; BSR set to: 1
 15920                           ;main.c: 515: if(data=='y')
 15921  008484  51F7               	movf	_data& (0+255),w,b
 15922  008486  0A79               	xorlw	121
 15923  008488  E014               	bz	l12831
 15924  00848A  D745               	goto	l12775
 15925  00848C                     l12829:
 15926                           
 15927                           ;main.c: 519: }
 15928                           ;main.c: 520: fl_fwrite(&data, 1, 1, file);
 15929  00848C  0E20               	movlw	32
 15930  00848E  0100               	movlb	0	; () banked
 15931  008490  6FE0               	movwf	(fl_fwrite@data+2)& (0+255),b
 15932  008492  0E01               	movlw	high _data
 15933  008494  6FDF               	movwf	(fl_fwrite@data+1)& (0+255),b
 15934  008496  0EF7               	movlw	low _data
 15935  008498  6FDE               	movwf	fl_fwrite@data& (0+255),b
 15936  00849A  6BE2               	clrf	(fl_fwrite@size+1)& (0+255),b
 15937  00849C  0E01               	movlw	1
 15938  00849E  6FE1               	movwf	fl_fwrite@size& (0+255),b
 15939  0084A0  6BE4               	clrf	(fl_fwrite@count+1)& (0+255),b
 15940  0084A2  6FE3               	movwf	fl_fwrite@count& (0+255),b
 15941  0084A4  C198  F0E6         	movff	_file+1,fl_fwrite@f+1
 15942  0084A8  C197  F0E5         	movff	_file,fl_fwrite@f
 15943  0084AC  ECEE  F06C         	call	_fl_fwrite	;wreg free
 15944  0084B0  D732               	goto	l12775
 15945  0084B2                     l12831:
 15946                           
 15947                           ;main.c: 522: Write_str("\n\rFile write completed..!");
 15948  0084B2  0EFD               	movlw	high (STR_26+2)
 15949  0084B4  6E07               	movwf	Write_str@str+1,c
 15950  0084B6  0EB4               	movlw	low (STR_26+2)
 15951  0084B8  6E06               	movwf	Write_str@str,c
 15952  0084BA  EC3C  F01F         	call	_Write_str	;wreg free
 15953                           
 15954                           ;main.c: 523: }
 15955  0084BE  D006               	goto	l12835
 15956  0084C0                     l12833:
 15957                           
 15958                           ;main.c: 524: else
 15959                           ;main.c: 525: Write_str("\n\rFile open failed");
 15960  0084C0  0EFF               	movlw	high STR_34
 15961  0084C2  6E07               	movwf	Write_str@str+1,c
 15962  0084C4  0E51               	movlw	low STR_34
 15963  0084C6  6E06               	movwf	Write_str@str,c
 15964  0084C8  EC3C  F01F         	call	_Write_str	;wreg free
 15965  0084CC                     l12835:
 15966                           
 15967                           ;main.c: 526: fl_fclose(file);
 15968  0084CC  C198  F0DF         	movff	_file+1,fl_fclose@f+1
 15969  0084D0  C197  F0DE         	movff	_file,fl_fclose@f
 15970  0084D4  EF3D  F032         	goto	_fl_fclose	;wreg free
 15971  0084D8                     __end_of_File_append:
 15972                           	opt stack 0
 15973                           tosu	equ	0xFFF
 15974                           tosh	equ	0xFFE
 15975                           tosl	equ	0xFFD
 15976                           pclath	equ	0xFFA
 15977                           tblptru	equ	0xFF8
 15978                           tblptrh	equ	0xFF7
 15979                           tblptrl	equ	0xFF6
 15980                           tablat	equ	0xFF5
 15981                           prodh	equ	0xFF4
 15982                           prodl	equ	0xFF3
 15983                           indf0	equ	0xFEF
 15984                           postinc0	equ	0xFEE
 15985                           fsr0h	equ	0xFEA
 15986                           fsr0l	equ	0xFE9
 15987                           wreg	equ	0xFE8
 15988                           indf1	equ	0xFE7
 15989                           postinc1	equ	0xFE6
 15990                           postdec1	equ	0xFE5
 15991                           fsr1h	equ	0xFE2
 15992                           fsr1l	equ	0xFE1
 15993                           indf2	equ	0xFDF
 15994                           postinc2	equ	0xFDE
 15995                           postdec2	equ	0xFDD
 15996                           fsr2h	equ	0xFDA
 15997                           fsr2l	equ	0xFD9
 15998                           status	equ	0xFD8
 15999                           
 16000 ;; *************** function _fl_fwrite *****************
 16001 ;; Defined at:
 16002 ;;		line 1253 in file "fat_filelib.c"
 16003 ;; Parameters:    Size  Location     Type
 16004 ;;  data            3   94[BANK0 ] PTR const void 
 16005 ;;		 -> w(1), str_0(26), data(1), fl_fputc@data(1), 
 16006 ;;		 -> ROM(65535), 
 16007 ;;  size            2   97[BANK0 ] int 
 16008 ;;  count           2   99[BANK0 ] int 
 16009 ;;  f               2  101[BANK0 ] PTR void 
 16010 ;;		 -> RAM(3967), NULL(0), 
 16011 ;; Auto vars:     Size  Location     Type
 16012 ;;  sectorsWrote    4    3[BANK1 ] unsigned long 
 16013 ;;  copyCount       4   23[BANK1 ] unsigned long 
 16014 ;;  bytesWritten    4   19[BANK1 ] unsigned long 
 16015 ;;  length          4   15[BANK1 ] unsigned long 
 16016 ;;  sector          4   11[BANK1 ] unsigned long 
 16017 ;;  offset          4    7[BANK1 ] unsigned long 
 16018 ;;  buffer          3    0[BANK1 ] PTR unsigned char 
 16019 ;;		 -> w(1), str_0(26), data(1), fl_fputc@data(1), 
 16020 ;;		 -> ROM(65535), 
 16021 ;;  file            2   27[BANK1 ] PTR struct sFL_FILE
 16022 ;;		 -> RAM(3967), NULL(0), 
 16023 ;; Return value:  Size  Location     Type
 16024 ;;                  2   94[BANK0 ] int 
 16025 ;; Registers used:
 16026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16027 ;; Tracked objects:
 16028 ;;		On entry : 0/0
 16029 ;;		On exit  : 0/0
 16030 ;;		Unchanged: 0/0
 16031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16032 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16033 ;;      Locals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16034 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16035 ;;      Totals:         0      17      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16036 ;;Total ram usage:       46 bytes
 16037 ;; Hardware stack levels used:    1
 16038 ;; Hardware stack levels required when called:    9
 16039 ;; This function calls:
 16040 ;;		__read_sectors
 16041 ;;		__write_sectors
 16042 ;;		_fl_fflush
 16043 ;;		_fl_init
 16044 ;;		_memcpy
 16045 ;;		_memset
 16046 ;; This function is called by:
 16047 ;;		_File_write
 16048 ;;		_File_append
 16049 ;;		_fl_fputc
 16050 ;;		_fl_fputs
 16051 ;;		_File_read_
 16052 ;; This function uses a non-reentrant model
 16053 ;;
 16054                           
 16055                           	psect	text41
 16056  00D9DC                     __ptext41:
 16057                           	opt stack 0
 16058  00D9DC                     _fl_fwrite:
 16059                           	opt stack 19
 16060                           
 16061                           ;fat_filelib.c: 1255: FL_FILE *file = (FL_FILE *)f;
 16062                           
 16063                           ;incstack = 0
 16064  00D9DC  C0E6  F11C         	movff	fl_fwrite@f+1,fl_fwrite@file+1
 16065  00D9E0  C0E5  F11B         	movff	fl_fwrite@f,fl_fwrite@file
 16066                           
 16067                           ; BSR set to: 1
 16068                           ;fat_filelib.c: 1256: uint32 sector;
 16069                           ;fat_filelib.c: 1257: uint32 offset;
 16070                           ;fat_filelib.c: 1258: uint32 length = (size*count);
 16071  00D9E4  0100               	movlb	0	; () banked
 16072  00D9E6  51E3               	movf	fl_fwrite@count& (0+255),w,b
 16073  00D9E8  03E1               	mulwf	fl_fwrite@size& (0+255),b
 16074  00D9EA  CFF3 F0E7          	movff	prodl,??_fl_fwrite
 16075  00D9EE  CFF4 F0E8          	movff	prodh,??_fl_fwrite+1
 16076  00D9F2  03E2               	mulwf	(fl_fwrite@size+1)& (0+255),b
 16077  00D9F4  50F3               	movf	243,w,c
 16078  00D9F6  27E8               	addwf	(??_fl_fwrite+1)& (0+255),f,b
 16079  00D9F8  51E4               	movf	(fl_fwrite@count+1)& (0+255),w,b
 16080  00D9FA  03E1               	mulwf	fl_fwrite@size& (0+255),b
 16081  00D9FC  50F3               	movf	243,w,c
 16082  00D9FE  27E8               	addwf	(??_fl_fwrite+1)& (0+255),f,b
 16083  00DA00  C0E7  F10F         	movff	??_fl_fwrite,fl_fwrite@length
 16084  00DA04  C0E8  F110         	movff	??_fl_fwrite+1,fl_fwrite@length+1
 16085  00DA08  0E00               	movlw	0
 16086  00DA0A  0101               	movlb	1	; () banked
 16087  00DA0C  BF10               	btfsc	(fl_fwrite@length+1)& (0+255),7,b
 16088  00DA0E  0EFF               	movlw	-1
 16089  00DA10  6F11               	movwf	(fl_fwrite@length+2)& (0+255),b
 16090  00DA12  6F12               	movwf	(fl_fwrite@length+3)& (0+255),b
 16091                           
 16092                           ; BSR set to: 1
 16093                           ;fat_filelib.c: 1259: uint8 *buffer = (uint8 *)data;
 16094  00DA14  C0E0  F102         	movff	fl_fwrite@data+2,fl_fwrite@buffer+2
 16095  00DA18  C0DF  F101         	movff	fl_fwrite@data+1,fl_fwrite@buffer+1
 16096  00DA1C  C0DE  F100         	movff	fl_fwrite@data,fl_fwrite@buffer
 16097                           
 16098                           ; BSR set to: 1
 16099                           ;fat_filelib.c: 1260: uint32 bytesWritten = 0;
 16100  00DA20  6B13               	clrf	fl_fwrite@bytesWritten& (0+255),b
 16101  00DA22  6B14               	clrf	(fl_fwrite@bytesWritten+1)& (0+255),b
 16102  00DA24  6B15               	clrf	(fl_fwrite@bytesWritten+2)& (0+255),b
 16103  00DA26  6B16               	clrf	(fl_fwrite@bytesWritten+3)& (0+255),b
 16104                           
 16105                           ; BSR set to: 1
 16106                           ;fat_filelib.c: 1261: uint32 copyCount;
 16107                           ;fat_filelib.c: 1264: { if (_filelib_init==0) fl_init(); };
 16108  00DA28  5192               	movf	(__filelib_init+1)& (0+255),w,b
 16109  00DA2A  1191               	iorwf	__filelib_init& (0+255),w,b
 16110  00DA2C  B4D8               	btfsc	status,2,c
 16111                           
 16112                           ; BSR set to: 1
 16113  00DA2E  EC44  F029         	call	_fl_init	;wreg free
 16114                           
 16115                           ;fat_filelib.c: 1266: if (!file)
 16116  00DA32  0101               	movlb	1	; () banked
 16117  00DA34  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16118  00DA36  111B               	iorwf	fl_fwrite@file& (0+255),w,b
 16119  00DA38  E00B               	bz	l729
 16120                           
 16121                           ;fat_filelib.c: 1272: if (!(file->flags & (1 << 1)))
 16122                           
 16123                           ; BSR set to: 0
 16124                           
 16125                           ; BSR set to: 0
 16126                           
 16127                           ; BSR set to: 0
 16128                           
 16129                           ; BSR set to: 0
 16130                           
 16131                           ;fat_filelib.c: 1269: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
 16132                           
 16133                           ; BSR set to: 0
 16134                           
 16135                           ; BSR set to: 1
 16136                           ;fat_filelib.c: 1267: return -1;
 16137  00DA3A  EE22 F03F          	lfsr	2,575
 16138  00DA3E  511B               	movf	fl_fwrite@file& (0+255),w,b
 16139  00DA40  26D9               	addwf	fsr2l,f,c
 16140  00DA42  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16141  00DA44  22DA               	addwfc	fsr2h,f,c
 16142  00DA46  50DF               	movf	indf2,w,c
 16143  00DA48  0100               	movlb	0	; () banked
 16144  00DA4A  6FE7               	movwf	??_fl_fwrite& (0+255),b
 16145  00DA4C  B3E7               	btfsc	??_fl_fwrite& (0+255),1,b
 16146  00DA4E  D004               	goto	l12251
 16147  00DA50                     l729:
 16148                           
 16149                           ; BSR set to: 0
 16150                           ;fat_filelib.c: 1275: return -1;
 16151  00DA50  0100               	movlb	0	; () banked
 16152  00DA52  69DE               	setf	?_fl_fwrite& (0+255),b
 16153  00DA54  69DF               	setf	(?_fl_fwrite+1)& (0+255),b
 16154  00DA56  D332               	goto	l722
 16155  00DA58                     l12251:
 16156                           
 16157                           ; BSR set to: 0
 16158                           ;fat_filelib.c: 1276: }
 16159                           ;fat_filelib.c: 1279: if (file->flags & (1 << 2))
 16160  00DA58  EE22 F03F          	lfsr	2,575
 16161  00DA5C  0101               	movlb	1	; () banked
 16162  00DA5E  511B               	movf	fl_fwrite@file& (0+255),w,b
 16163  00DA60  26D9               	addwf	fsr2l,f,c
 16164  00DA62  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16165  00DA64  22DA               	addwfc	fsr2h,f,c
 16166  00DA66  50DF               	movf	indf2,w,c
 16167  00DA68  0100               	movlb	0	; () banked
 16168  00DA6A  6FE7               	movwf	??_fl_fwrite& (0+255),b
 16169  00DA6C  A5E7               	btfss	??_fl_fwrite& (0+255),2,b
 16170  00DA6E  D017               	goto	l12255
 16171                           
 16172                           ; BSR set to: 0
 16173                           ;fat_filelib.c: 1280: file->bytenum = file->filelength;
 16174  00DA70  EE20 F00C          	lfsr	2,12
 16175  00DA74  0101               	movlb	1	; () banked
 16176  00DA76  511B               	movf	fl_fwrite@file& (0+255),w,b
 16177  00DA78  26D9               	addwf	fsr2l,f,c
 16178  00DA7A  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16179  00DA7C  22DA               	addwfc	fsr2h,f,c
 16180  00DA7E  EE10 F008          	lfsr	1,8
 16181  00DA82  511B               	movf	fl_fwrite@file& (0+255),w,b
 16182  00DA84  26E1               	addwf	fsr1l,f,c
 16183  00DA86  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16184  00DA88  22E2               	addwfc	fsr1h,f,c
 16185  00DA8A  CFDE FFE6          	movff	postinc2,postinc1
 16186  00DA8E  CFDE FFE6          	movff	postinc2,postinc1
 16187  00DA92  CFDE FFE6          	movff	postinc2,postinc1
 16188  00DA96  CFDD FFE5          	movff	postdec2,postdec1
 16189  00DA9A  52E5               	movf	postdec1,f,c
 16190  00DA9C  52E5               	movf	postdec1,f,c
 16191  00DA9E                     l12255:
 16192                           
 16193                           ;fat_filelib.c: 1284: sector = file->bytenum / 512;
 16194  00DA9E  EE20 F008          	lfsr	2,8
 16195  00DAA2  0101               	movlb	1	; () banked
 16196  00DAA4  511B               	movf	fl_fwrite@file& (0+255),w,b
 16197  00DAA6  26D9               	addwf	fsr2l,f,c
 16198  00DAA8  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16199  00DAAA  22DA               	addwfc	fsr2h,f,c
 16200  00DAAC  CFDE F0E7          	movff	postinc2,??_fl_fwrite
 16201  00DAB0  CFDE F0E8          	movff	postinc2,??_fl_fwrite+1
 16202  00DAB4  CFDE F0E9          	movff	postinc2,??_fl_fwrite+2
 16203  00DAB8  CFDE F0EA          	movff	postinc2,??_fl_fwrite+3
 16204  00DABC  0E0A               	movlw	10
 16205  00DABE  D006               	goto	u14590
 16206  00DAC0                     u14595:
 16207  00DAC0  0100               	movlb	0	; () banked
 16208  00DAC2  90D8               	bcf	status,0,c
 16209  00DAC4  33EA               	rrcf	(??_fl_fwrite+3)& (0+255),f,b
 16210  00DAC6  33E9               	rrcf	(??_fl_fwrite+2)& (0+255),f,b
 16211  00DAC8  33E8               	rrcf	(??_fl_fwrite+1)& (0+255),f,b
 16212  00DACA  33E7               	rrcf	??_fl_fwrite& (0+255),f,b
 16213  00DACC                     u14590:
 16214  00DACC  2EE8               	decfsz	wreg,f,c
 16215  00DACE  D7F8               	goto	u14595
 16216  00DAD0  C0E7  F10B         	movff	??_fl_fwrite,fl_fwrite@sector
 16217  00DAD4  C0E8  F10C         	movff	??_fl_fwrite+1,fl_fwrite@sector+1
 16218  00DAD8  C0E9  F10D         	movff	??_fl_fwrite+2,fl_fwrite@sector+2
 16219  00DADC  C0EA  F10E         	movff	??_fl_fwrite+3,fl_fwrite@sector+3
 16220                           
 16221                           ; BSR set to: 0
 16222                           ;fat_filelib.c: 1287: offset = file->bytenum % 512;
 16223  00DAE0  EE20 F008          	lfsr	2,8
 16224  00DAE4  0101               	movlb	1	; () banked
 16225  00DAE6  511B               	movf	fl_fwrite@file& (0+255),w,b
 16226  00DAE8  26D9               	addwf	fsr2l,f,c
 16227  00DAEA  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16228  00DAEC  22DA               	addwfc	fsr2h,f,c
 16229  00DAEE  0EFF               	movlw	255
 16230  00DAF0  14DE               	andwf	postinc2,w,c
 16231  00DAF2  6F07               	movwf	fl_fwrite@offset& (0+255),b
 16232  00DAF4  0E01               	movlw	1
 16233  00DAF6  14DE               	andwf	postinc2,w,c
 16234  00DAF8  6F08               	movwf	(fl_fwrite@offset+1)& (0+255),b
 16235  00DAFA  0E00               	movlw	0
 16236  00DAFC  14DE               	andwf	postinc2,w,c
 16237  00DAFE  6F09               	movwf	(fl_fwrite@offset+2)& (0+255),b
 16238  00DB00  0E00               	movlw	0
 16239  00DB02  14DE               	andwf	postinc2,w,c
 16240  00DB04  D277               	goto	L39
 16241  00DB06                     l12259:
 16242                           
 16243                           ; BSR set to: 1
 16244                           ;fat_filelib.c: 1290: {
 16245                           ;fat_filelib.c: 1292: if ((offset == 0) && ((length - bytesWritten) >= 512))
 16246  00DB06  0101               	movlb	1	; () banked
 16247  00DB08  510A               	movf	(fl_fwrite@offset+3)& (0+255),w,b
 16248  00DB0A  1107               	iorwf	fl_fwrite@offset& (0+255),w,b
 16249  00DB0C  1108               	iorwf	(fl_fwrite@offset+1)& (0+255),w,b
 16250  00DB0E  1109               	iorwf	(fl_fwrite@offset+2)& (0+255),w,b
 16251  00DB10  E001 D10D          	bnz	l12287
 16252                           
 16253                           ; BSR set to: 1
 16254  00DB14  C113  F0E7         	movff	fl_fwrite@bytesWritten,??_fl_fwrite
 16255  00DB18  C114  F0E8         	movff	fl_fwrite@bytesWritten+1,??_fl_fwrite+1
 16256  00DB1C  C115  F0E9         	movff	fl_fwrite@bytesWritten+2,??_fl_fwrite+2
 16257  00DB20  C116  F0EA         	movff	fl_fwrite@bytesWritten+3,??_fl_fwrite+3
 16258  00DB24  0100               	movlb	0	; () banked
 16259  00DB26  1FE7               	comf	??_fl_fwrite& (0+255),f,b
 16260  00DB28  1FE8               	comf	(??_fl_fwrite+1)& (0+255),f,b
 16261  00DB2A  1FE9               	comf	(??_fl_fwrite+2)& (0+255),f,b
 16262  00DB2C  1FEA               	comf	(??_fl_fwrite+3)& (0+255),f,b
 16263  00DB2E  2BE7               	incf	??_fl_fwrite& (0+255),f,b
 16264  00DB30  0E00               	movlw	0
 16265  00DB32  23E8               	addwfc	(??_fl_fwrite+1)& (0+255),f,b
 16266  00DB34  23E9               	addwfc	(??_fl_fwrite+2)& (0+255),f,b
 16267  00DB36  23EA               	addwfc	(??_fl_fwrite+3)& (0+255),f,b
 16268  00DB38  0101               	movlb	1	; () banked
 16269  00DB3A  510F               	movf	fl_fwrite@length& (0+255),w,b
 16270  00DB3C  0100               	movlb	0	; () banked
 16271  00DB3E  25E7               	addwf	??_fl_fwrite& (0+255),w,b
 16272  00DB40  6FEB               	movwf	(??_fl_fwrite+4)& (0+255),b
 16273  00DB42  0101               	movlb	1	; () banked
 16274  00DB44  5110               	movf	(fl_fwrite@length+1)& (0+255),w,b
 16275  00DB46  0100               	movlb	0	; () banked
 16276  00DB48  21E8               	addwfc	(??_fl_fwrite+1)& (0+255),w,b
 16277  00DB4A  6FEC               	movwf	(??_fl_fwrite+5)& (0+255),b
 16278  00DB4C  0101               	movlb	1	; () banked
 16279  00DB4E  5111               	movf	(fl_fwrite@length+2)& (0+255),w,b
 16280  00DB50  0100               	movlb	0	; () banked
 16281  00DB52  21E9               	addwfc	(??_fl_fwrite+2)& (0+255),w,b
 16282  00DB54  6FED               	movwf	(??_fl_fwrite+6)& (0+255),b
 16283  00DB56  0101               	movlb	1	; () banked
 16284  00DB58  5112               	movf	(fl_fwrite@length+3)& (0+255),w,b
 16285  00DB5A  0100               	movlb	0	; () banked
 16286  00DB5C  21EA               	addwfc	(??_fl_fwrite+3)& (0+255),w,b
 16287  00DB5E  6FEE               	movwf	(??_fl_fwrite+7)& (0+255),b
 16288  00DB60  0E00               	movlw	0
 16289  00DB62  5DEB               	subwf	(??_fl_fwrite+4)& (0+255),w,b
 16290  00DB64  0E02               	movlw	2
 16291  00DB66  59EC               	subwfb	(??_fl_fwrite+5)& (0+255),w,b
 16292  00DB68  0E00               	movlw	0
 16293  00DB6A  59ED               	subwfb	(??_fl_fwrite+6)& (0+255),w,b
 16294  00DB6C  0E00               	movlw	0
 16295  00DB6E  59EE               	subwfb	(??_fl_fwrite+7)& (0+255),w,b
 16296  00DB70  E201 D0DD          	bnc	l12287
 16297                           
 16298                           ; BSR set to: 0
 16299                           ;fat_filelib.c: 1293: {
 16300                           ;fat_filelib.c: 1294: uint32 sectorsWrote;
 16301                           ;fat_filelib.c: 1297: if (file->file_data_address != 0xFFFFFFFF)
 16302  00DB74  EE22 F039          	lfsr	2,569
 16303  00DB78  0101               	movlb	1	; () banked
 16304  00DB7A  511B               	movf	fl_fwrite@file& (0+255),w,b
 16305  00DB7C  26D9               	addwf	fsr2l,f,c
 16306  00DB7E  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16307  00DB80  22DA               	addwfc	fsr2h,f,c
 16308  00DB82  CFDE F0E7          	movff	postinc2,??_fl_fwrite
 16309  00DB86  CFDE F0E8          	movff	postinc2,??_fl_fwrite+1
 16310  00DB8A  CFDE F0E9          	movff	postinc2,??_fl_fwrite+2
 16311  00DB8E  CFDE F0EA          	movff	postinc2,??_fl_fwrite+3
 16312  00DB92  0100               	movlb	0	; () banked
 16313  00DB94  29E7               	incf	??_fl_fwrite& (0+255),w,b
 16314  00DB96  B4D8               	btfsc	status,2,c
 16315  00DB98  29E8               	incf	(??_fl_fwrite+1)& (0+255),w,b
 16316  00DB9A  B4D8               	btfsc	status,2,c
 16317  00DB9C  29E9               	incf	(??_fl_fwrite+2)& (0+255),w,b
 16318  00DB9E  B4D8               	btfsc	status,2,c
 16319  00DBA0  29EA               	incf	(??_fl_fwrite+3)& (0+255),w,b
 16320  00DBA2  E024               	bz	l734
 16321                           
 16322                           ; BSR set to: 0
 16323                           ;fat_filelib.c: 1298: {
 16324                           ;fat_filelib.c: 1300: if (file->file_data_dirty)
 16325  00DBA4  EE22 F03D          	lfsr	2,573
 16326  00DBA8  0101               	movlb	1	; () banked
 16327  00DBAA  511B               	movf	fl_fwrite@file& (0+255),w,b
 16328  00DBAC  26D9               	addwf	fsr2l,f,c
 16329  00DBAE  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16330  00DBB0  22DA               	addwfc	fsr2h,f,c
 16331  00DBB2  50DE               	movf	postinc2,w,c
 16332  00DBB4  10DD               	iorwf	postdec2,w,c
 16333  00DBB6  E007               	bz	l12269
 16334                           
 16335                           ; BSR set to: 1
 16336                           ;fat_filelib.c: 1301: fl_fflush(file);
 16337  00DBB8  C11C  F0D5         	movff	fl_fwrite@file+1,fl_fflush@f+1
 16338  00DBBC  0100               	movlb	0	; () banked
 16339  00DBBE  C11B  F0D4         	movff	fl_fwrite@file,fl_fflush@f
 16340  00DBC2  EC3F  F02C         	call	_fl_fflush	;wreg free
 16341  00DBC6                     l12269:
 16342                           
 16343                           ;fat_filelib.c: 1303: file->file_data_address = 0xFFFFFFFF;
 16344  00DBC6  EE22 F039          	lfsr	2,569
 16345  00DBCA  0101               	movlb	1	; () banked
 16346  00DBCC  511B               	movf	fl_fwrite@file& (0+255),w,b
 16347  00DBCE  26D9               	addwf	fsr2l,f,c
 16348  00DBD0  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16349  00DBD2  22DA               	addwfc	fsr2h,f,c
 16350  00DBD4  68DE               	setf	postinc2,c
 16351  00DBD6  68DE               	setf	postinc2,c
 16352  00DBD8  68DE               	setf	postinc2,c
 16353  00DBDA  68DD               	setf	postdec2,c
 16354                           
 16355                           ; BSR set to: 1
 16356                           ;fat_filelib.c: 1304: file->file_data_dirty = 0;
 16357  00DBDC  EE22 F03D          	lfsr	2,573
 16358  00DBE0  511B               	movf	fl_fwrite@file& (0+255),w,b
 16359  00DBE2  26D9               	addwf	fsr2l,f,c
 16360  00DBE4  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16361  00DBE6  22DA               	addwfc	fsr2h,f,c
 16362  00DBE8  6ADE               	clrf	postinc2,c
 16363  00DBEA  6ADD               	clrf	postdec2,c
 16364  00DBEC                     l734:
 16365                           
 16366                           ;fat_filelib.c: 1305: }
 16367                           ;fat_filelib.c: 1308: sectorsWrote = _write_sectors(file, sector, (uint8*)(buffer + byte
      +                          sWritten), (length - bytesWritten) / 512);
 16368  00DBEC  C11C  F09F         	movff	fl_fwrite@file+1,__write_sectors@file+1
 16369  00DBF0  C11B  F09E         	movff	fl_fwrite@file,__write_sectors@file
 16370  00DBF4  C10B  F0A0         	movff	fl_fwrite@sector,__write_sectors@offset
 16371  00DBF8  C10C  F0A1         	movff	fl_fwrite@sector+1,__write_sectors@offset+1
 16372  00DBFC  C10D  F0A2         	movff	fl_fwrite@sector+2,__write_sectors@offset+2
 16373  00DC00  C10E  F0A3         	movff	fl_fwrite@sector+3,__write_sectors@offset+3
 16374  00DC04  0101               	movlb	1	; () banked
 16375  00DC06  5113               	movf	fl_fwrite@bytesWritten& (0+255),w,b
 16376  00DC08  2500               	addwf	fl_fwrite@buffer& (0+255),w,b
 16377  00DC0A  0100               	movlb	0	; () banked
 16378  00DC0C  6FA4               	movwf	__write_sectors@buf& (0+255),b
 16379  00DC0E  0101               	movlb	1	; () banked
 16380  00DC10  5114               	movf	(fl_fwrite@bytesWritten+1)& (0+255),w,b
 16381  00DC12  2101               	addwfc	(fl_fwrite@buffer+1)& (0+255),w,b
 16382  00DC14  0100               	movlb	0	; () banked
 16383  00DC16  6FA5               	movwf	(__write_sectors@buf+1)& (0+255),b
 16384  00DC18  0E00               	movlw	0
 16385  00DC1A  0101               	movlb	1	; () banked
 16386  00DC1C  2102               	addwfc	(fl_fwrite@buffer+2)& (0+255),w,b
 16387  00DC1E  0100               	movlb	0	; () banked
 16388  00DC20  6FA6               	movwf	(__write_sectors@buf+2)& (0+255),b
 16389  00DC22  C113  F0E7         	movff	fl_fwrite@bytesWritten,??_fl_fwrite
 16390  00DC26  C114  F0E8         	movff	fl_fwrite@bytesWritten+1,??_fl_fwrite+1
 16391  00DC2A  C115  F0E9         	movff	fl_fwrite@bytesWritten+2,??_fl_fwrite+2
 16392  00DC2E  C116  F0EA         	movff	fl_fwrite@bytesWritten+3,??_fl_fwrite+3
 16393  00DC32  1FE7               	comf	??_fl_fwrite& (0+255),f,b
 16394  00DC34  1FE8               	comf	(??_fl_fwrite+1)& (0+255),f,b
 16395  00DC36  1FE9               	comf	(??_fl_fwrite+2)& (0+255),f,b
 16396  00DC38  1FEA               	comf	(??_fl_fwrite+3)& (0+255),f,b
 16397  00DC3A  2BE7               	incf	??_fl_fwrite& (0+255),f,b
 16398  00DC3C  0E00               	movlw	0
 16399  00DC3E  23E8               	addwfc	(??_fl_fwrite+1)& (0+255),f,b
 16400  00DC40  23E9               	addwfc	(??_fl_fwrite+2)& (0+255),f,b
 16401  00DC42  23EA               	addwfc	(??_fl_fwrite+3)& (0+255),f,b
 16402  00DC44  0101               	movlb	1	; () banked
 16403  00DC46  510F               	movf	fl_fwrite@length& (0+255),w,b
 16404  00DC48  0100               	movlb	0	; () banked
 16405  00DC4A  25E7               	addwf	??_fl_fwrite& (0+255),w,b
 16406  00DC4C  6FEB               	movwf	(??_fl_fwrite+4)& (0+255),b
 16407  00DC4E  0101               	movlb	1	; () banked
 16408  00DC50  5110               	movf	(fl_fwrite@length+1)& (0+255),w,b
 16409  00DC52  0100               	movlb	0	; () banked
 16410  00DC54  21E8               	addwfc	(??_fl_fwrite+1)& (0+255),w,b
 16411  00DC56  6FEC               	movwf	(??_fl_fwrite+5)& (0+255),b
 16412  00DC58  0101               	movlb	1	; () banked
 16413  00DC5A  5111               	movf	(fl_fwrite@length+2)& (0+255),w,b
 16414  00DC5C  0100               	movlb	0	; () banked
 16415  00DC5E  21E9               	addwfc	(??_fl_fwrite+2)& (0+255),w,b
 16416  00DC60  6FED               	movwf	(??_fl_fwrite+6)& (0+255),b
 16417  00DC62  0101               	movlb	1	; () banked
 16418  00DC64  5112               	movf	(fl_fwrite@length+3)& (0+255),w,b
 16419  00DC66  0100               	movlb	0	; () banked
 16420  00DC68  21EA               	addwfc	(??_fl_fwrite+3)& (0+255),w,b
 16421  00DC6A  6FEE               	movwf	(??_fl_fwrite+7)& (0+255),b
 16422  00DC6C  0E0A               	movlw	10
 16423  00DC6E  D006               	goto	u14640
 16424  00DC70                     u14645:
 16425  00DC70  0100               	movlb	0	; () banked
 16426  00DC72  90D8               	bcf	status,0,c
 16427  00DC74  33EE               	rrcf	(??_fl_fwrite+7)& (0+255),f,b
 16428  00DC76  33ED               	rrcf	(??_fl_fwrite+6)& (0+255),f,b
 16429  00DC78  33EC               	rrcf	(??_fl_fwrite+5)& (0+255),f,b
 16430  00DC7A  33EB               	rrcf	(??_fl_fwrite+4)& (0+255),f,b
 16431  00DC7C                     u14640:
 16432  00DC7C  2EE8               	decfsz	wreg,f,c
 16433  00DC7E  D7F8               	goto	u14645
 16434  00DC80  C0EB  F0A7         	movff	??_fl_fwrite+4,__write_sectors@count
 16435  00DC84  C0EC  F0A8         	movff	??_fl_fwrite+5,__write_sectors@count+1
 16436  00DC88  C0ED  F0A9         	movff	??_fl_fwrite+6,__write_sectors@count+2
 16437  00DC8C  C0EE  F0AA         	movff	??_fl_fwrite+7,__write_sectors@count+3
 16438  00DC90  ECA4  F062         	call	__write_sectors	;wreg free
 16439  00DC94  C09E  F103         	movff	?__write_sectors,fl_fwrite@sectorsWrote
 16440  00DC98  C09F  F104         	movff	?__write_sectors+1,fl_fwrite@sectorsWrote+1
 16441  00DC9C  C0A0  F105         	movff	?__write_sectors+2,fl_fwrite@sectorsWrote+2
 16442  00DCA0  C0A1  F106         	movff	?__write_sectors+3,fl_fwrite@sectorsWrote+3
 16443                           
 16444                           ;fat_filelib.c: 1309: copyCount = 512 * sectorsWrote;
 16445  00DCA4  C103  F0E7         	movff	fl_fwrite@sectorsWrote,??_fl_fwrite
 16446  00DCA8  C104  F0E8         	movff	fl_fwrite@sectorsWrote+1,??_fl_fwrite+1
 16447  00DCAC  C105  F0E9         	movff	fl_fwrite@sectorsWrote+2,??_fl_fwrite+2
 16448  00DCB0  C106  F0EA         	movff	fl_fwrite@sectorsWrote+3,??_fl_fwrite+3
 16449  00DCB4  0E09               	movlw	9
 16450  00DCB6                     u14655:
 16451  00DCB6  90D8               	bcf	status,0,c
 16452  00DCB8  0100               	movlb	0	; () banked
 16453  00DCBA  37E7               	rlcf	??_fl_fwrite& (0+255),f,b
 16454  00DCBC  37E8               	rlcf	(??_fl_fwrite+1)& (0+255),f,b
 16455  00DCBE  37E9               	rlcf	(??_fl_fwrite+2)& (0+255),f,b
 16456  00DCC0  37EA               	rlcf	(??_fl_fwrite+3)& (0+255),f,b
 16457  00DCC2  2EE8               	decfsz	wreg,f,c
 16458  00DCC4  D7F8               	goto	u14655
 16459  00DCC6  C0E7  F117         	movff	??_fl_fwrite,fl_fwrite@copyCount
 16460  00DCCA  C0E8  F118         	movff	??_fl_fwrite+1,fl_fwrite@copyCount+1
 16461  00DCCE  C0E9  F119         	movff	??_fl_fwrite+2,fl_fwrite@copyCount+2
 16462  00DCD2  C0EA  F11A         	movff	??_fl_fwrite+3,fl_fwrite@copyCount+3
 16463                           
 16464                           ; BSR set to: 0
 16465                           ;fat_filelib.c: 1312: bytesWritten += copyCount;
 16466  00DCD6  0101               	movlb	1	; () banked
 16467  00DCD8  5117               	movf	fl_fwrite@copyCount& (0+255),w,b
 16468  00DCDA  2713               	addwf	fl_fwrite@bytesWritten& (0+255),f,b
 16469  00DCDC  5118               	movf	(fl_fwrite@copyCount+1)& (0+255),w,b
 16470  00DCDE  2314               	addwfc	(fl_fwrite@bytesWritten+1)& (0+255),f,b
 16471  00DCE0  5119               	movf	(fl_fwrite@copyCount+2)& (0+255),w,b
 16472  00DCE2  2315               	addwfc	(fl_fwrite@bytesWritten+2)& (0+255),f,b
 16473  00DCE4  511A               	movf	(fl_fwrite@copyCount+3)& (0+255),w,b
 16474  00DCE6  2316               	addwfc	(fl_fwrite@bytesWritten+3)& (0+255),f,b
 16475                           
 16476                           ; BSR set to: 1
 16477                           ;fat_filelib.c: 1315: file->bytenum += copyCount;
 16478  00DCE8  EE20 F008          	lfsr	2,8
 16479  00DCEC  511B               	movf	fl_fwrite@file& (0+255),w,b
 16480  00DCEE  26D9               	addwf	fsr2l,f,c
 16481  00DCF0  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16482  00DCF2  22DA               	addwfc	fsr2h,f,c
 16483  00DCF4  5117               	movf	fl_fwrite@copyCount& (0+255),w,b
 16484  00DCF6  26DE               	addwf	postinc2,f,c
 16485  00DCF8  5118               	movf	(fl_fwrite@copyCount+1)& (0+255),w,b
 16486  00DCFA  22DE               	addwfc	postinc2,f,c
 16487  00DCFC  5119               	movf	(fl_fwrite@copyCount+2)& (0+255),w,b
 16488  00DCFE  22DE               	addwfc	postinc2,f,c
 16489  00DD00  511A               	movf	(fl_fwrite@copyCount+3)& (0+255),w,b
 16490  00DD02  22DD               	addwfc	postdec2,f,c
 16491  00DD04  52DD               	movf	postdec2,f,c
 16492  00DD06  52DD               	movf	postdec2,f,c
 16493                           
 16494                           ; BSR set to: 1
 16495                           ;fat_filelib.c: 1318: sector+= sectorsWrote;
 16496  00DD08  5103               	movf	fl_fwrite@sectorsWrote& (0+255),w,b
 16497  00DD0A  270B               	addwf	fl_fwrite@sector& (0+255),f,b
 16498  00DD0C  5104               	movf	(fl_fwrite@sectorsWrote+1)& (0+255),w,b
 16499  00DD0E  230C               	addwfc	(fl_fwrite@sector+1)& (0+255),f,b
 16500  00DD10  5105               	movf	(fl_fwrite@sectorsWrote+2)& (0+255),w,b
 16501  00DD12  230D               	addwfc	(fl_fwrite@sector+2)& (0+255),f,b
 16502  00DD14  5106               	movf	(fl_fwrite@sectorsWrote+3)& (0+255),w,b
 16503  00DD16  230E               	addwfc	(fl_fwrite@sector+3)& (0+255),f,b
 16504                           
 16505                           ; BSR set to: 1
 16506                           ;fat_filelib.c: 1319: offset = 0;
 16507  00DD18  6B07               	clrf	fl_fwrite@offset& (0+255),b
 16508  00DD1A  6B08               	clrf	(fl_fwrite@offset+1)& (0+255),b
 16509  00DD1C  6B09               	clrf	(fl_fwrite@offset+2)& (0+255),b
 16510  00DD1E  6B0A               	clrf	(fl_fwrite@offset+3)& (0+255),b
 16511                           
 16512                           ; BSR set to: 1
 16513                           ;fat_filelib.c: 1321: if (!sectorsWrote)
 16514  00DD20  5106               	movf	(fl_fwrite@sectorsWrote+3)& (0+255),w,b
 16515  00DD22  1103               	iorwf	fl_fwrite@sectorsWrote& (0+255),w,b
 16516  00DD24  1104               	iorwf	(fl_fwrite@sectorsWrote+1)& (0+255),w,b
 16517  00DD26  1105               	iorwf	(fl_fwrite@sectorsWrote+2)& (0+255),w,b
 16518  00DD28  E101 D171          	bz	l12321
 16519  00DD2C  D165               	goto	l12319
 16520  00DD2E                     l12287:
 16521                           
 16522                           ;fat_filelib.c: 1324: else
 16523                           ;fat_filelib.c: 1325: {
 16524                           ;fat_filelib.c: 1327: copyCount = 512 - offset;
 16525  00DD2E  C107  F0E7         	movff	fl_fwrite@offset,??_fl_fwrite
 16526  00DD32  C108  F0E8         	movff	fl_fwrite@offset+1,??_fl_fwrite+1
 16527  00DD36  C109  F0E9         	movff	fl_fwrite@offset+2,??_fl_fwrite+2
 16528  00DD3A  C10A  F0EA         	movff	fl_fwrite@offset+3,??_fl_fwrite+3
 16529  00DD3E  0100               	movlb	0	; () banked
 16530  00DD40  1FE7               	comf	??_fl_fwrite& (0+255),f,b
 16531  00DD42  1FE8               	comf	(??_fl_fwrite+1)& (0+255),f,b
 16532  00DD44  1FE9               	comf	(??_fl_fwrite+2)& (0+255),f,b
 16533  00DD46  1FEA               	comf	(??_fl_fwrite+3)& (0+255),f,b
 16534  00DD48  2BE7               	incf	??_fl_fwrite& (0+255),f,b
 16535  00DD4A  0E00               	movlw	0
 16536  00DD4C  23E8               	addwfc	(??_fl_fwrite+1)& (0+255),f,b
 16537  00DD4E  23E9               	addwfc	(??_fl_fwrite+2)& (0+255),f,b
 16538  00DD50  23EA               	addwfc	(??_fl_fwrite+3)& (0+255),f,b
 16539  00DD52  25E7               	addwf	??_fl_fwrite& (0+255),w,b
 16540  00DD54  0101               	movlb	1	; () banked
 16541  00DD56  6F17               	movwf	fl_fwrite@copyCount& (0+255),b
 16542  00DD58  0E02               	movlw	2
 16543  00DD5A  0100               	movlb	0	; () banked
 16544  00DD5C  21E8               	addwfc	(??_fl_fwrite+1)& (0+255),w,b
 16545  00DD5E  0101               	movlb	1	; () banked
 16546  00DD60  6F18               	movwf	(fl_fwrite@copyCount+1)& (0+255),b
 16547  00DD62  0E00               	movlw	0
 16548  00DD64  0100               	movlb	0	; () banked
 16549  00DD66  21E9               	addwfc	(??_fl_fwrite+2)& (0+255),w,b
 16550  00DD68  0101               	movlb	1	; () banked
 16551  00DD6A  6F19               	movwf	(fl_fwrite@copyCount+2)& (0+255),b
 16552  00DD6C  0E00               	movlw	0
 16553  00DD6E  0100               	movlb	0	; () banked
 16554  00DD70  21EA               	addwfc	(??_fl_fwrite+3)& (0+255),w,b
 16555  00DD72  0101               	movlb	1	; () banked
 16556  00DD74  6F1A               	movwf	(fl_fwrite@copyCount+3)& (0+255),b
 16557                           
 16558                           ;fat_filelib.c: 1330: if (copyCount > (length - bytesWritten))
 16559  00DD76  C113  F0E7         	movff	fl_fwrite@bytesWritten,??_fl_fwrite
 16560  00DD7A  C114  F0E8         	movff	fl_fwrite@bytesWritten+1,??_fl_fwrite+1
 16561  00DD7E  C115  F0E9         	movff	fl_fwrite@bytesWritten+2,??_fl_fwrite+2
 16562  00DD82  C116  F0EA         	movff	fl_fwrite@bytesWritten+3,??_fl_fwrite+3
 16563  00DD86  0100               	movlb	0	; () banked
 16564  00DD88  1FE7               	comf	??_fl_fwrite& (0+255),f,b
 16565  00DD8A  1FE8               	comf	(??_fl_fwrite+1)& (0+255),f,b
 16566  00DD8C  1FE9               	comf	(??_fl_fwrite+2)& (0+255),f,b
 16567  00DD8E  1FEA               	comf	(??_fl_fwrite+3)& (0+255),f,b
 16568  00DD90  2BE7               	incf	??_fl_fwrite& (0+255),f,b
 16569  00DD92  0E00               	movlw	0
 16570  00DD94  23E8               	addwfc	(??_fl_fwrite+1)& (0+255),f,b
 16571  00DD96  23E9               	addwfc	(??_fl_fwrite+2)& (0+255),f,b
 16572  00DD98  23EA               	addwfc	(??_fl_fwrite+3)& (0+255),f,b
 16573  00DD9A  0101               	movlb	1	; () banked
 16574  00DD9C  510F               	movf	fl_fwrite@length& (0+255),w,b
 16575  00DD9E  0100               	movlb	0	; () banked
 16576  00DDA0  25E7               	addwf	??_fl_fwrite& (0+255),w,b
 16577  00DDA2  6FEB               	movwf	(??_fl_fwrite+4)& (0+255),b
 16578  00DDA4  0101               	movlb	1	; () banked
 16579  00DDA6  5110               	movf	(fl_fwrite@length+1)& (0+255),w,b
 16580  00DDA8  0100               	movlb	0	; () banked
 16581  00DDAA  21E8               	addwfc	(??_fl_fwrite+1)& (0+255),w,b
 16582  00DDAC  6FEC               	movwf	(??_fl_fwrite+5)& (0+255),b
 16583  00DDAE  0101               	movlb	1	; () banked
 16584  00DDB0  5111               	movf	(fl_fwrite@length+2)& (0+255),w,b
 16585  00DDB2  0100               	movlb	0	; () banked
 16586  00DDB4  21E9               	addwfc	(??_fl_fwrite+2)& (0+255),w,b
 16587  00DDB6  6FED               	movwf	(??_fl_fwrite+6)& (0+255),b
 16588  00DDB8  0101               	movlb	1	; () banked
 16589  00DDBA  5112               	movf	(fl_fwrite@length+3)& (0+255),w,b
 16590  00DDBC  0100               	movlb	0	; () banked
 16591  00DDBE  21EA               	addwfc	(??_fl_fwrite+3)& (0+255),w,b
 16592  00DDC0  6FEE               	movwf	(??_fl_fwrite+7)& (0+255),b
 16593  00DDC2  0101               	movlb	1	; () banked
 16594  00DDC4  5117               	movf	fl_fwrite@copyCount& (0+255),w,b
 16595  00DDC6  0100               	movlb	0	; () banked
 16596  00DDC8  5DEB               	subwf	(??_fl_fwrite+4)& (0+255),w,b
 16597  00DDCA  0101               	movlb	1	; () banked
 16598  00DDCC  5118               	movf	(fl_fwrite@copyCount+1)& (0+255),w,b
 16599  00DDCE  0100               	movlb	0	; () banked
 16600  00DDD0  59EC               	subwfb	(??_fl_fwrite+5)& (0+255),w,b
 16601  00DDD2  0101               	movlb	1	; () banked
 16602  00DDD4  5119               	movf	(fl_fwrite@copyCount+2)& (0+255),w,b
 16603  00DDD6  0100               	movlb	0	; () banked
 16604  00DDD8  59ED               	subwfb	(??_fl_fwrite+6)& (0+255),w,b
 16605  00DDDA  0101               	movlb	1	; () banked
 16606  00DDDC  511A               	movf	(fl_fwrite@copyCount+3)& (0+255),w,b
 16607  00DDDE  0100               	movlb	0	; () banked
 16608  00DDE0  59EE               	subwfb	(??_fl_fwrite+7)& (0+255),w,b
 16609  00DDE2  E226               	bc	l12291
 16610                           
 16611                           ; BSR set to: 0
 16612                           ;fat_filelib.c: 1331: copyCount = (length - bytesWritten);
 16613  00DDE4  C113  F0E7         	movff	fl_fwrite@bytesWritten,??_fl_fwrite
 16614  00DDE8  C114  F0E8         	movff	fl_fwrite@bytesWritten+1,??_fl_fwrite+1
 16615  00DDEC  C115  F0E9         	movff	fl_fwrite@bytesWritten+2,??_fl_fwrite+2
 16616  00DDF0  C116  F0EA         	movff	fl_fwrite@bytesWritten+3,??_fl_fwrite+3
 16617  00DDF4  1FE7               	comf	??_fl_fwrite& (0+255),f,b
 16618  00DDF6  1FE8               	comf	(??_fl_fwrite+1)& (0+255),f,b
 16619  00DDF8  1FE9               	comf	(??_fl_fwrite+2)& (0+255),f,b
 16620  00DDFA  1FEA               	comf	(??_fl_fwrite+3)& (0+255),f,b
 16621  00DDFC  2BE7               	incf	??_fl_fwrite& (0+255),f,b
 16622  00DDFE  0E00               	movlw	0
 16623  00DE00  23E8               	addwfc	(??_fl_fwrite+1)& (0+255),f,b
 16624  00DE02  23E9               	addwfc	(??_fl_fwrite+2)& (0+255),f,b
 16625  00DE04  23EA               	addwfc	(??_fl_fwrite+3)& (0+255),f,b
 16626  00DE06  0101               	movlb	1	; () banked
 16627  00DE08  510F               	movf	fl_fwrite@length& (0+255),w,b
 16628  00DE0A  0100               	movlb	0	; () banked
 16629  00DE0C  25E7               	addwf	??_fl_fwrite& (0+255),w,b
 16630  00DE0E  0101               	movlb	1	; () banked
 16631  00DE10  6F17               	movwf	fl_fwrite@copyCount& (0+255),b
 16632  00DE12  5110               	movf	(fl_fwrite@length+1)& (0+255),w,b
 16633  00DE14  0100               	movlb	0	; () banked
 16634  00DE16  21E8               	addwfc	(??_fl_fwrite+1)& (0+255),w,b
 16635  00DE18  0101               	movlb	1	; () banked
 16636  00DE1A  6F18               	movwf	(fl_fwrite@copyCount+1)& (0+255),b
 16637  00DE1C  5111               	movf	(fl_fwrite@length+2)& (0+255),w,b
 16638  00DE1E  0100               	movlb	0	; () banked
 16639  00DE20  21E9               	addwfc	(??_fl_fwrite+2)& (0+255),w,b
 16640  00DE22  0101               	movlb	1	; () banked
 16641  00DE24  6F19               	movwf	(fl_fwrite@copyCount+2)& (0+255),b
 16642  00DE26  5112               	movf	(fl_fwrite@length+3)& (0+255),w,b
 16643  00DE28  0100               	movlb	0	; () banked
 16644  00DE2A  21EA               	addwfc	(??_fl_fwrite+3)& (0+255),w,b
 16645  00DE2C  0101               	movlb	1	; () banked
 16646  00DE2E  6F1A               	movwf	(fl_fwrite@copyCount+3)& (0+255),b
 16647  00DE30                     l12291:
 16648                           
 16649                           ;fat_filelib.c: 1334: if (file->file_data_address != sector)
 16650  00DE30  EE22 F039          	lfsr	2,569
 16651  00DE34  0101               	movlb	1	; () banked
 16652  00DE36  511B               	movf	fl_fwrite@file& (0+255),w,b
 16653  00DE38  26D9               	addwf	fsr2l,f,c
 16654  00DE3A  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16655  00DE3C  22DA               	addwfc	fsr2h,f,c
 16656  00DE3E  CFDE F0E7          	movff	postinc2,??_fl_fwrite
 16657  00DE42  CFDE F0E8          	movff	postinc2,??_fl_fwrite+1
 16658  00DE46  CFDE F0E9          	movff	postinc2,??_fl_fwrite+2
 16659  00DE4A  CFDE F0EA          	movff	postinc2,??_fl_fwrite+3
 16660  00DE4E  510E               	movf	(fl_fwrite@sector+3)& (0+255),w,b
 16661  00DE50  0100               	movlb	0	; () banked
 16662  00DE52  19EA               	xorwf	(??_fl_fwrite+3)& (0+255),w,b
 16663  00DE54  E10E               	bnz	u14685
 16664  00DE56  0101               	movlb	1	; () banked
 16665  00DE58  510D               	movf	(fl_fwrite@sector+2)& (0+255),w,b
 16666  00DE5A  0100               	movlb	0	; () banked
 16667  00DE5C  19E9               	xorwf	(??_fl_fwrite+2)& (0+255),w,b
 16668  00DE5E  E109               	bnz	u14685
 16669  00DE60  0101               	movlb	1	; () banked
 16670  00DE62  510C               	movf	(fl_fwrite@sector+1)& (0+255),w,b
 16671  00DE64  0100               	movlb	0	; () banked
 16672  00DE66  19E8               	xorwf	(??_fl_fwrite+1)& (0+255),w,b
 16673  00DE68  E104               	bnz	u14685
 16674  00DE6A  0101               	movlb	1	; () banked
 16675  00DE6C  510B               	movf	fl_fwrite@sector& (0+255),w,b
 16676  00DE6E  0100               	movlb	0	; () banked
 16677  00DE70  19E7               	xorwf	??_fl_fwrite& (0+255),w,b
 16678  00DE72                     u14685:
 16679  00DE72  E069               	bz	l12307
 16680                           
 16681                           ; BSR set to: 0
 16682                           ;fat_filelib.c: 1335: {
 16683                           ;fat_filelib.c: 1337: if (file->file_data_dirty)
 16684  00DE74  EE22 F03D          	lfsr	2,573
 16685  00DE78  0101               	movlb	1	; () banked
 16686  00DE7A  511B               	movf	fl_fwrite@file& (0+255),w,b
 16687  00DE7C  26D9               	addwf	fsr2l,f,c
 16688  00DE7E  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16689  00DE80  22DA               	addwfc	fsr2h,f,c
 16690  00DE82  50DE               	movf	postinc2,w,c
 16691  00DE84  10DD               	iorwf	postdec2,w,c
 16692  00DE86  E007               	bz	l12297
 16693                           
 16694                           ; BSR set to: 1
 16695                           ;fat_filelib.c: 1338: fl_fflush(file);
 16696  00DE88  C11C  F0D5         	movff	fl_fwrite@file+1,fl_fflush@f+1
 16697  00DE8C  0100               	movlb	0	; () banked
 16698  00DE8E  C11B  F0D4         	movff	fl_fwrite@file,fl_fflush@f
 16699  00DE92  EC3F  F02C         	call	_fl_fflush	;wreg free
 16700  00DE96                     l12297:
 16701                           
 16702                           ;fat_filelib.c: 1341: if (copyCount != 512)
 16703  00DE96  0101               	movlb	1	; () banked
 16704  00DE98  5118               	movf	(fl_fwrite@copyCount+1)& (0+255),w,b
 16705  00DE9A  0A02               	xorlw	2
 16706  00DE9C  1117               	iorwf	fl_fwrite@copyCount& (0+255),w,b
 16707  00DE9E  1119               	iorwf	(fl_fwrite@copyCount+2)& (0+255),w,b
 16708  00DEA0  111A               	iorwf	(fl_fwrite@copyCount+3)& (0+255),w,b
 16709  00DEA2  E03A               	bz	l12303
 16710                           
 16711                           ; BSR set to: 1
 16712                           ;fat_filelib.c: 1342: {
 16713                           ;fat_filelib.c: 1348: if (!_read_sectors(file, sector, file->file_data_sector, 1))
 16714  00DEA4  C11C  F081         	movff	fl_fwrite@file+1,__read_sectors@file+1
 16715  00DEA8  C11B  F080         	movff	fl_fwrite@file,__read_sectors@file
 16716  00DEAC  C10B  F082         	movff	fl_fwrite@sector,__read_sectors@offset
 16717  00DEB0  C10C  F083         	movff	fl_fwrite@sector+1,__read_sectors@offset+1
 16718  00DEB4  C10D  F084         	movff	fl_fwrite@sector+2,__read_sectors@offset+2
 16719  00DEB8  C10E  F085         	movff	fl_fwrite@sector+3,__read_sectors@offset+3
 16720  00DEBC  0E39               	movlw	57
 16721  00DEBE  251B               	addwf	fl_fwrite@file& (0+255),w,b
 16722  00DEC0  0100               	movlb	0	; () banked
 16723  00DEC2  6F86               	movwf	__read_sectors@buffer& (0+255),b
 16724  00DEC4  0E00               	movlw	0
 16725  00DEC6  0101               	movlb	1	; () banked
 16726  00DEC8  211C               	addwfc	(fl_fwrite@file+1)& (0+255),w,b
 16727  00DECA  0100               	movlb	0	; () banked
 16728  00DECC  6F87               	movwf	(__read_sectors@buffer+1)& (0+255),b
 16729  00DECE  0E01               	movlw	1
 16730  00DED0  6F88               	movwf	__read_sectors@count& (0+255),b
 16731  00DED2  0E00               	movlw	0
 16732  00DED4  6B89               	clrf	(__read_sectors@count+1)& (0+255),b
 16733  00DED6  6B8A               	clrf	(__read_sectors@count+2)& (0+255),b
 16734  00DED8  6B8B               	clrf	(__read_sectors@count+3)& (0+255),b
 16735  00DEDA  EC07  F05C         	call	__read_sectors	;wreg free
 16736  00DEDE  C080  F0E7         	movff	?__read_sectors,??_fl_fwrite
 16737  00DEE2  C081  F0E8         	movff	?__read_sectors+1,??_fl_fwrite+1
 16738  00DEE6  C082  F0E9         	movff	?__read_sectors+2,??_fl_fwrite+2
 16739  00DEEA  C083  F0EA         	movff	?__read_sectors+3,??_fl_fwrite+3
 16740  00DEEE  0100               	movlb	0	; () banked
 16741  00DEF0  51EA               	movf	(??_fl_fwrite+3)& (0+255),w,b
 16742  00DEF2  11E7               	iorwf	??_fl_fwrite& (0+255),w,b
 16743  00DEF4  11E8               	iorwf	(??_fl_fwrite+1)& (0+255),w,b
 16744  00DEF6  11E9               	iorwf	(??_fl_fwrite+2)& (0+255),w,b
 16745  00DEF8  E10F               	bnz	l12303
 16746                           
 16747                           ; BSR set to: 0
 16748                           ;fat_filelib.c: 1349: memset(file->file_data_sector, 0x00, 512);
 16749  00DEFA  0E39               	movlw	57
 16750  00DEFC  0101               	movlb	1	; () banked
 16751  00DEFE  251B               	addwf	fl_fwrite@file& (0+255),w,b
 16752  00DF00  6E01               	movwf	memset@p1,c
 16753  00DF02  0E00               	movlw	0
 16754  00DF04  211C               	addwfc	(fl_fwrite@file+1)& (0+255),w,b
 16755  00DF06  6E02               	movwf	memset@p1+1,c
 16756  00DF08  6A04               	clrf	memset@c+1,c
 16757  00DF0A  6A03               	clrf	memset@c,c
 16758  00DF0C  0E02               	movlw	2
 16759  00DF0E  6E06               	movwf	memset@n+1,c
 16760  00DF10  0E00               	movlw	0
 16761  00DF12  6A05               	clrf	memset@n,c
 16762  00DF14  EC24  F020         	call	_memset	;wreg free
 16763  00DF18                     l12303:
 16764                           
 16765                           ;fat_filelib.c: 1350: }
 16766                           ;fat_filelib.c: 1352: file->file_data_address = sector;
 16767  00DF18  EE22 F039          	lfsr	2,569
 16768  00DF1C  0101               	movlb	1	; () banked
 16769  00DF1E  511B               	movf	fl_fwrite@file& (0+255),w,b
 16770  00DF20  26D9               	addwf	fsr2l,f,c
 16771  00DF22  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16772  00DF24  22DA               	addwfc	fsr2h,f,c
 16773  00DF26  C10B  FFDE         	movff	fl_fwrite@sector,postinc2
 16774  00DF2A  C10C  FFDE         	movff	fl_fwrite@sector+1,postinc2
 16775  00DF2E  C10D  FFDE         	movff	fl_fwrite@sector+2,postinc2
 16776  00DF32  C10E  FFDE         	movff	fl_fwrite@sector+3,postinc2
 16777                           
 16778                           ; BSR set to: 1
 16779                           ;fat_filelib.c: 1353: file->file_data_dirty = 0;
 16780  00DF36  EE22 F03D          	lfsr	2,573
 16781  00DF3A  511B               	movf	fl_fwrite@file& (0+255),w,b
 16782  00DF3C  26D9               	addwf	fsr2l,f,c
 16783  00DF3E  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16784  00DF40  22DA               	addwfc	fsr2h,f,c
 16785  00DF42  6ADE               	clrf	postinc2,c
 16786  00DF44  6ADD               	clrf	postdec2,c
 16787  00DF46                     l12307:
 16788                           
 16789                           ;fat_filelib.c: 1354: }
 16790                           ;fat_filelib.c: 1357: memcpy((uint8*)(file->file_data_sector + offset), (uint8*)(buffer 
      +                          + bytesWritten), copyCount);
 16791  00DF46  0E39               	movlw	57
 16792  00DF48  0101               	movlb	1	; () banked
 16793  00DF4A  2507               	addwf	fl_fwrite@offset& (0+255),w,b
 16794  00DF4C  0100               	movlb	0	; () banked
 16795  00DF4E  6FE7               	movwf	??_fl_fwrite& (0+255),b
 16796  00DF50  0E00               	movlw	0
 16797  00DF52  0101               	movlb	1	; () banked
 16798  00DF54  2108               	addwfc	(fl_fwrite@offset+1)& (0+255),w,b
 16799  00DF56  0100               	movlb	0	; () banked
 16800  00DF58  6FE8               	movwf	(??_fl_fwrite+1)& (0+255),b
 16801  00DF5A  51E7               	movf	??_fl_fwrite& (0+255),w,b
 16802  00DF5C  0101               	movlb	1	; () banked
 16803  00DF5E  251B               	addwf	fl_fwrite@file& (0+255),w,b
 16804  00DF60  6E01               	movwf	memcpy@d1,c
 16805  00DF62  0100               	movlb	0	; () banked
 16806  00DF64  51E8               	movf	(??_fl_fwrite+1)& (0+255),w,b
 16807  00DF66  0101               	movlb	1	; () banked
 16808  00DF68  211C               	addwfc	(fl_fwrite@file+1)& (0+255),w,b
 16809  00DF6A  6E02               	movwf	memcpy@d1+1,c
 16810  00DF6C  5113               	movf	fl_fwrite@bytesWritten& (0+255),w,b
 16811  00DF6E  2500               	addwf	fl_fwrite@buffer& (0+255),w,b
 16812  00DF70  0100               	movlb	0	; () banked
 16813  00DF72  6FE9               	movwf	(??_fl_fwrite+2)& (0+255),b
 16814  00DF74  0101               	movlb	1	; () banked
 16815  00DF76  5114               	movf	(fl_fwrite@bytesWritten+1)& (0+255),w,b
 16816  00DF78  2101               	addwfc	(fl_fwrite@buffer+1)& (0+255),w,b
 16817  00DF7A  0100               	movlb	0	; () banked
 16818  00DF7C  6FEA               	movwf	(??_fl_fwrite+3)& (0+255),b
 16819  00DF7E  0E00               	movlw	0
 16820  00DF80  0101               	movlb	1	; () banked
 16821  00DF82  2102               	addwfc	(fl_fwrite@buffer+2)& (0+255),w,b
 16822  00DF84  0100               	movlb	0	; () banked
 16823  00DF86  6FEB               	movwf	(??_fl_fwrite+4)& (0+255),b
 16824  00DF88  C0E9  F003         	movff	??_fl_fwrite+2,memcpy@s1
 16825  00DF8C  C0EA  F004         	movff	??_fl_fwrite+3,memcpy@s1+1
 16826  00DF90  C0EB  F005         	movff	??_fl_fwrite+4,memcpy@s1+2
 16827  00DF94  C117  F006         	movff	fl_fwrite@copyCount,memcpy@n
 16828  00DF98  C118  F007         	movff	fl_fwrite@copyCount+1,memcpy@n+1
 16829  00DF9C  ECAE  F023         	call	_memcpy	;wreg free
 16830                           
 16831                           ;fat_filelib.c: 1360: file->file_data_dirty = 1;
 16832  00DFA0  EE22 F03D          	lfsr	2,573
 16833  00DFA4  0101               	movlb	1	; () banked
 16834  00DFA6  511B               	movf	fl_fwrite@file& (0+255),w,b
 16835  00DFA8  26D9               	addwf	fsr2l,f,c
 16836  00DFAA  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16837  00DFAC  22DA               	addwfc	fsr2h,f,c
 16838  00DFAE  0E01               	movlw	1
 16839  00DFB0  6EDE               	movwf	postinc2,c
 16840  00DFB2  6ADD               	clrf	postdec2,c
 16841                           
 16842                           ; BSR set to: 1
 16843                           ;fat_filelib.c: 1363: bytesWritten += copyCount;
 16844  00DFB4  5117               	movf	fl_fwrite@copyCount& (0+255),w,b
 16845  00DFB6  2713               	addwf	fl_fwrite@bytesWritten& (0+255),f,b
 16846  00DFB8  5118               	movf	(fl_fwrite@copyCount+1)& (0+255),w,b
 16847  00DFBA  2314               	addwfc	(fl_fwrite@bytesWritten+1)& (0+255),f,b
 16848  00DFBC  5119               	movf	(fl_fwrite@copyCount+2)& (0+255),w,b
 16849  00DFBE  2315               	addwfc	(fl_fwrite@bytesWritten+2)& (0+255),f,b
 16850  00DFC0  511A               	movf	(fl_fwrite@copyCount+3)& (0+255),w,b
 16851  00DFC2  2316               	addwfc	(fl_fwrite@bytesWritten+3)& (0+255),f,b
 16852                           
 16853                           ; BSR set to: 1
 16854                           ;fat_filelib.c: 1366: file->bytenum += copyCount;
 16855  00DFC4  EE20 F008          	lfsr	2,8
 16856  00DFC8  511B               	movf	fl_fwrite@file& (0+255),w,b
 16857  00DFCA  26D9               	addwf	fsr2l,f,c
 16858  00DFCC  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16859  00DFCE  22DA               	addwfc	fsr2h,f,c
 16860  00DFD0  5117               	movf	fl_fwrite@copyCount& (0+255),w,b
 16861  00DFD2  26DE               	addwf	postinc2,f,c
 16862  00DFD4  5118               	movf	(fl_fwrite@copyCount+1)& (0+255),w,b
 16863  00DFD6  22DE               	addwfc	postinc2,f,c
 16864  00DFD8  5119               	movf	(fl_fwrite@copyCount+2)& (0+255),w,b
 16865  00DFDA  22DE               	addwfc	postinc2,f,c
 16866  00DFDC  511A               	movf	(fl_fwrite@copyCount+3)& (0+255),w,b
 16867  00DFDE  22DD               	addwfc	postdec2,f,c
 16868  00DFE0  52DD               	movf	postdec2,f,c
 16869  00DFE2  52DD               	movf	postdec2,f,c
 16870                           
 16871                           ; BSR set to: 1
 16872                           ;fat_filelib.c: 1369: sector++;
 16873  00DFE4  2B0B               	incf	fl_fwrite@sector& (0+255),f,b
 16874  00DFE6  0E00               	movlw	0
 16875  00DFE8  230C               	addwfc	(fl_fwrite@sector+1)& (0+255),f,b
 16876  00DFEA  230D               	addwfc	(fl_fwrite@sector+2)& (0+255),f,b
 16877  00DFEC  230E               	addwfc	(fl_fwrite@sector+3)& (0+255),f,b
 16878                           
 16879                           ; BSR set to: 1
 16880                           ;fat_filelib.c: 1370: offset = 0;
 16881  00DFEE  6B07               	clrf	fl_fwrite@offset& (0+255),b
 16882  00DFF0  6B08               	clrf	(fl_fwrite@offset+1)& (0+255),b
 16883  00DFF2  6B09               	clrf	(fl_fwrite@offset+2)& (0+255),b
 16884  00DFF4                     L39:
 16885  00DFF4  0101               	movlb	1	; () banked
 16886  00DFF6  6F0A               	movwf	(fl_fwrite@offset+3)& (0+255),b
 16887  00DFF8                     l12319:
 16888                           
 16889                           ; BSR set to: 1
 16890  00DFF8  0101               	movlb	1	; () banked
 16891  00DFFA  510F               	movf	fl_fwrite@length& (0+255),w,b
 16892  00DFFC  5D13               	subwf	fl_fwrite@bytesWritten& (0+255),w,b
 16893  00DFFE  5110               	movf	(fl_fwrite@length+1)& (0+255),w,b
 16894  00E000  5914               	subwfb	(fl_fwrite@bytesWritten+1)& (0+255),w,b
 16895  00E002  5111               	movf	(fl_fwrite@length+2)& (0+255),w,b
 16896  00E004  5915               	subwfb	(fl_fwrite@bytesWritten+2)& (0+255),w,b
 16897  00E006  5112               	movf	(fl_fwrite@length+3)& (0+255),w,b
 16898  00E008  5916               	subwfb	(fl_fwrite@bytesWritten+3)& (0+255),w,b
 16899  00E00A  E201 D57C          	bnc	l12259
 16900  00E00E                     l12321:
 16901                           
 16902                           ; BSR set to: 1
 16903                           ;fat_filelib.c: 1371: }
 16904                           ;fat_filelib.c: 1372: }
 16905                           ;fat_filelib.c: 1375: if (file->bytenum > file->filelength)
 16906  00E00E  EE20 F008          	lfsr	2,8
 16907  00E012  0101               	movlb	1	; () banked
 16908  00E014  511B               	movf	fl_fwrite@file& (0+255),w,b
 16909  00E016  26D9               	addwf	fsr2l,f,c
 16910  00E018  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16911  00E01A  22DA               	addwfc	fsr2h,f,c
 16912  00E01C  CFDE F0E7          	movff	postinc2,??_fl_fwrite
 16913  00E020  CFDE F0E8          	movff	postinc2,??_fl_fwrite+1
 16914  00E024  CFDE F0E9          	movff	postinc2,??_fl_fwrite+2
 16915  00E028  CFDE F0EA          	movff	postinc2,??_fl_fwrite+3
 16916  00E02C  EE20 F00C          	lfsr	2,12
 16917  00E030  511B               	movf	fl_fwrite@file& (0+255),w,b
 16918  00E032  26D9               	addwf	fsr2l,f,c
 16919  00E034  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16920  00E036  22DA               	addwfc	fsr2h,f,c
 16921  00E038  CFDE F0EB          	movff	postinc2,??_fl_fwrite+4
 16922  00E03C  CFDE F0EC          	movff	postinc2,??_fl_fwrite+5
 16923  00E040  CFDE F0ED          	movff	postinc2,??_fl_fwrite+6
 16924  00E044  CFDE F0EE          	movff	postinc2,??_fl_fwrite+7
 16925  00E048  0100               	movlb	0	; () banked
 16926  00E04A  51E7               	movf	??_fl_fwrite& (0+255),w,b
 16927  00E04C  5DEB               	subwf	(??_fl_fwrite+4)& (0+255),w,b
 16928  00E04E  51E8               	movf	(??_fl_fwrite+1)& (0+255),w,b
 16929  00E050  59EC               	subwfb	(??_fl_fwrite+5)& (0+255),w,b
 16930  00E052  51E9               	movf	(??_fl_fwrite+2)& (0+255),w,b
 16931  00E054  59ED               	subwfb	(??_fl_fwrite+6)& (0+255),w,b
 16932  00E056  51EA               	movf	(??_fl_fwrite+3)& (0+255),w,b
 16933  00E058  59EE               	subwfb	(??_fl_fwrite+7)& (0+255),w,b
 16934  00E05A  E21E               	bc	l12329
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;fat_filelib.c: 1376: {
 16938                           ;fat_filelib.c: 1378: file->filelength = file->bytenum;
 16939  00E05C  EE20 F008          	lfsr	2,8
 16940  00E060  0101               	movlb	1	; () banked
 16941  00E062  511B               	movf	fl_fwrite@file& (0+255),w,b
 16942  00E064  26D9               	addwf	fsr2l,f,c
 16943  00E066  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16944  00E068  22DA               	addwfc	fsr2h,f,c
 16945  00E06A  EE10 F00C          	lfsr	1,12
 16946  00E06E  511B               	movf	fl_fwrite@file& (0+255),w,b
 16947  00E070  26E1               	addwf	fsr1l,f,c
 16948  00E072  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16949  00E074  22E2               	addwfc	fsr1h,f,c
 16950  00E076  CFDE FFE6          	movff	postinc2,postinc1
 16951  00E07A  CFDE FFE6          	movff	postinc2,postinc1
 16952  00E07E  CFDE FFE6          	movff	postinc2,postinc1
 16953  00E082  CFDD FFE5          	movff	postdec2,postdec1
 16954                           
 16955                           ; BSR set to: 1
 16956                           ;fat_filelib.c: 1382: file->filelength_changed = 1;
 16957  00E086  EE20 F010          	lfsr	2,16
 16958  00E08A  511B               	movf	fl_fwrite@file& (0+255),w,b
 16959  00E08C  26D9               	addwf	fsr2l,f,c
 16960  00E08E  511C               	movf	(fl_fwrite@file+1)& (0+255),w,b
 16961  00E090  22DA               	addwfc	fsr2h,f,c
 16962  00E092  0E01               	movlw	1
 16963  00E094  6EDE               	movwf	postinc2,c
 16964  00E096  6ADD               	clrf	postdec2,c
 16965  00E098                     l12329:
 16966                           
 16967                           ;fat_filelib.c: 1393: return (size*count);
 16968  00E098  0100               	movlb	0	; () banked
 16969  00E09A  51E3               	movf	fl_fwrite@count& (0+255),w,b
 16970  00E09C  03E1               	mulwf	fl_fwrite@size& (0+255),b
 16971  00E09E  CFF3 F0E7          	movff	prodl,??_fl_fwrite
 16972  00E0A2  CFF4 F0E8          	movff	prodh,??_fl_fwrite+1
 16973  00E0A6  03E2               	mulwf	(fl_fwrite@size+1)& (0+255),b
 16974  00E0A8  50F3               	movf	243,w,c
 16975  00E0AA  27E8               	addwf	(??_fl_fwrite+1)& (0+255),f,b
 16976  00E0AC  51E4               	movf	(fl_fwrite@count+1)& (0+255),w,b
 16977  00E0AE  03E1               	mulwf	fl_fwrite@size& (0+255),b
 16978  00E0B0  50F3               	movf	243,w,c
 16979  00E0B2  27E8               	addwf	(??_fl_fwrite+1)& (0+255),f,b
 16980  00E0B4  C0E7  F0DE         	movff	??_fl_fwrite,?_fl_fwrite
 16981  00E0B8  C0E8  F0DF         	movff	??_fl_fwrite+1,?_fl_fwrite+1
 16982  00E0BC                     l722:
 16983                           
 16984                           ; BSR set to: 0
 16985  00E0BC  0012               	return	
 16986  00E0BE                     __end_of_fl_fwrite:
 16987                           	opt stack 0
 16988                           tosu	equ	0xFFF
 16989                           tosh	equ	0xFFE
 16990                           tosl	equ	0xFFD
 16991                           pclath	equ	0xFFA
 16992                           tblptru	equ	0xFF8
 16993                           tblptrh	equ	0xFF7
 16994                           tblptrl	equ	0xFF6
 16995                           tablat	equ	0xFF5
 16996                           prodh	equ	0xFF4
 16997                           prodl	equ	0xFF3
 16998                           indf0	equ	0xFEF
 16999                           postinc0	equ	0xFEE
 17000                           fsr0h	equ	0xFEA
 17001                           fsr0l	equ	0xFE9
 17002                           wreg	equ	0xFE8
 17003                           indf1	equ	0xFE7
 17004                           postinc1	equ	0xFE6
 17005                           postdec1	equ	0xFE5
 17006                           fsr1h	equ	0xFE2
 17007                           fsr1l	equ	0xFE1
 17008                           indf2	equ	0xFDF
 17009                           postinc2	equ	0xFDE
 17010                           postdec2	equ	0xFDD
 17011                           fsr2h	equ	0xFDA
 17012                           fsr2l	equ	0xFD9
 17013                           status	equ	0xFD8
 17014                           
 17015 ;; *************** function _fl_ftell *****************
 17016 ;; Defined at:
 17017 ;;		line 1203 in file "fat_filelib.c"
 17018 ;; Parameters:    Size  Location     Type
 17019 ;;  f               2    6[COMRAM] PTR void 
 17020 ;;		 -> RAM(3967), NULL(0), 
 17021 ;; Auto vars:     Size  Location     Type
 17022 ;;  pos             4   10[COMRAM] unsigned long 
 17023 ;; Return value:  Size  Location     Type
 17024 ;;                  4    6[COMRAM] long 
 17025 ;; Registers used:
 17026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17027 ;; Tracked objects:
 17028 ;;		On entry : 0/0
 17029 ;;		On exit  : 0/0
 17030 ;;		Unchanged: 0/0
 17031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17032 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17033 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17035 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17036 ;;Total ram usage:        8 bytes
 17037 ;; Hardware stack levels used:    1
 17038 ;; Hardware stack levels required when called:    1
 17039 ;; This function calls:
 17040 ;;		_fl_fgetpos
 17041 ;; This function is called by:
 17042 ;;		_File_append
 17043 ;; This function uses a non-reentrant model
 17044 ;;
 17045                           
 17046                           	psect	text42
 17047  0040A2                     __ptext42:
 17048                           	opt stack 0
 17049  0040A2                     _fl_ftell:
 17050                           	opt stack 27
 17051                           
 17052                           ;fat_filelib.c: 1205: uint32 pos = 0;
 17053                           
 17054                           ; BSR set to: 0
 17055                           ;incstack = 0
 17056  0040A2  6A0B               	clrf	fl_ftell@pos,c
 17057  0040A4  6A0C               	clrf	fl_ftell@pos+1,c
 17058  0040A6  6A0D               	clrf	fl_ftell@pos+2,c
 17059  0040A8  6A0E               	clrf	fl_ftell@pos+3,c
 17060                           
 17061                           ;fat_filelib.c: 1207: fl_fgetpos(f, &pos);
 17062  0040AA  C008  F002         	movff	fl_ftell@f+1,fl_fgetpos@f+1
 17063  0040AE  C007  F001         	movff	fl_ftell@f,fl_fgetpos@f
 17064  0040B2  0E00               	movlw	high fl_ftell@pos
 17065  0040B4  6E04               	movwf	fl_fgetpos@position+1,c
 17066  0040B6  0E0B               	movlw	low fl_ftell@pos
 17067  0040B8  6E03               	movwf	fl_fgetpos@position,c
 17068  0040BA  ECB3  F020         	call	_fl_fgetpos	;wreg free
 17069                           
 17070                           ;fat_filelib.c: 1209: return (long)pos;
 17071  0040BE  C00B  F007         	movff	fl_ftell@pos,?_fl_ftell
 17072  0040C2  C00C  F008         	movff	fl_ftell@pos+1,?_fl_ftell+1
 17073  0040C6  C00D  F009         	movff	fl_ftell@pos+2,?_fl_ftell+2
 17074  0040CA  C00E  F00A         	movff	fl_ftell@pos+3,?_fl_ftell+3
 17075  0040CE  0012               	return	
 17076  0040D0                     __end_of_fl_ftell:
 17077                           	opt stack 0
 17078                           tosu	equ	0xFFF
 17079                           tosh	equ	0xFFE
 17080                           tosl	equ	0xFFD
 17081                           pclath	equ	0xFFA
 17082                           tblptru	equ	0xFF8
 17083                           tblptrh	equ	0xFF7
 17084                           tblptrl	equ	0xFF6
 17085                           tablat	equ	0xFF5
 17086                           prodh	equ	0xFF4
 17087                           prodl	equ	0xFF3
 17088                           indf0	equ	0xFEF
 17089                           postinc0	equ	0xFEE
 17090                           fsr0h	equ	0xFEA
 17091                           fsr0l	equ	0xFE9
 17092                           wreg	equ	0xFE8
 17093                           indf1	equ	0xFE7
 17094                           postinc1	equ	0xFE6
 17095                           postdec1	equ	0xFE5
 17096                           fsr1h	equ	0xFE2
 17097                           fsr1l	equ	0xFE1
 17098                           indf2	equ	0xFDF
 17099                           postinc2	equ	0xFDE
 17100                           postdec2	equ	0xFDD
 17101                           fsr2h	equ	0xFDA
 17102                           fsr2l	equ	0xFD9
 17103                           status	equ	0xFD8
 17104                           
 17105 ;; *************** function _fl_fgetpos *****************
 17106 ;; Defined at:
 17107 ;;		line 1184 in file "fat_filelib.c"
 17108 ;; Parameters:    Size  Location     Type
 17109 ;;  f               2    0[COMRAM] PTR void 
 17110 ;;		 -> RAM(3967), NULL(0), 
 17111 ;;  position        2    2[COMRAM] PTR unsigned long 
 17112 ;;		 -> fl_ftell@pos(4), 
 17113 ;; Auto vars:     Size  Location     Type
 17114 ;;  file            2    4[COMRAM] PTR struct sFL_FILE
 17115 ;;		 -> RAM(3967), NULL(0), 
 17116 ;; Return value:  Size  Location     Type
 17117 ;;                  2    0[COMRAM] int 
 17118 ;; Registers used:
 17119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17120 ;; Tracked objects:
 17121 ;;		On entry : 0/0
 17122 ;;		On exit  : 0/0
 17123 ;;		Unchanged: 0/0
 17124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17126 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17128 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17129 ;;Total ram usage:        6 bytes
 17130 ;; Hardware stack levels used:    1
 17131 ;; This function calls:
 17132 ;;		Nothing
 17133 ;; This function is called by:
 17134 ;;		_fl_ftell
 17135 ;; This function uses a non-reentrant model
 17136 ;;
 17137                           
 17138                           	psect	text43
 17139  004166                     __ptext43:
 17140                           	opt stack 0
 17141  004166                     _fl_fgetpos:
 17142                           	opt stack 27
 17143                           
 17144                           ;fat_filelib.c: 1186: FL_FILE *file = (FL_FILE *)f;
 17145                           
 17146                           ;incstack = 0
 17147  004166  C002  F006         	movff	fl_fgetpos@f+1,fl_fgetpos@file+1
 17148  00416A  C001  F005         	movff	fl_fgetpos@f,fl_fgetpos@file
 17149                           
 17150                           ;fat_filelib.c: 1188: if (!file)
 17151  00416E  5006               	movf	fl_fgetpos@file+1,w,c
 17152  004170  1005               	iorwf	fl_fgetpos@file,w,c
 17153  004172  E014               	bz	l691
 17154                           
 17155                           ;fat_filelib.c: 1194: *position = file->bytenum;
 17156                           
 17157                           ;fat_filelib.c: 1191: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
 17158                           
 17159                           ;fat_filelib.c: 1189: return -1;
 17160                           ;	Return value of _fl_fgetpos is never used
 17161  004174  EE20 F008          	lfsr	2,8
 17162  004178  5005               	movf	fl_fgetpos@file,w,c
 17163  00417A  26D9               	addwf	fsr2l,f,c
 17164  00417C  5006               	movf	fl_fgetpos@file+1,w,c
 17165  00417E  22DA               	addwfc	fsr2h,f,c
 17166  004180  C003  FFE1         	movff	fl_fgetpos@position,fsr1l
 17167  004184  C004  FFE2         	movff	fl_fgetpos@position+1,fsr1h
 17168  004188  CFDE FFE6          	movff	postinc2,postinc1
 17169  00418C  CFDE FFE6          	movff	postinc2,postinc1
 17170  004190  CFDE FFE6          	movff	postinc2,postinc1
 17171  004194  CFDD FFE5          	movff	postdec2,postdec1
 17172  004198  52E5               	movf	postdec1,f,c
 17173  00419A  52E5               	movf	postdec1,f,c
 17174  00419C                     l691:
 17175  00419C  0012               	return	
 17176  00419E                     __end_of_fl_fgetpos:
 17177                           	opt stack 0
 17178                           tosu	equ	0xFFF
 17179                           tosh	equ	0xFFE
 17180                           tosl	equ	0xFFD
 17181                           pclath	equ	0xFFA
 17182                           tblptru	equ	0xFF8
 17183                           tblptrh	equ	0xFF7
 17184                           tblptrl	equ	0xFF6
 17185                           tablat	equ	0xFF5
 17186                           prodh	equ	0xFF4
 17187                           prodl	equ	0xFF3
 17188                           indf0	equ	0xFEF
 17189                           postinc0	equ	0xFEE
 17190                           fsr0h	equ	0xFEA
 17191                           fsr0l	equ	0xFE9
 17192                           wreg	equ	0xFE8
 17193                           indf1	equ	0xFE7
 17194                           postinc1	equ	0xFE6
 17195                           postdec1	equ	0xFE5
 17196                           fsr1h	equ	0xFE2
 17197                           fsr1l	equ	0xFE1
 17198                           indf2	equ	0xFDF
 17199                           postinc2	equ	0xFDE
 17200                           postdec2	equ	0xFDD
 17201                           fsr2h	equ	0xFDA
 17202                           fsr2l	equ	0xFD9
 17203                           status	equ	0xFD8
 17204                           
 17205 ;; *************** function _fl_fseek *****************
 17206 ;; Defined at:
 17207 ;;		line 1115 in file "fat_filelib.c"
 17208 ;; Parameters:    Size  Location     Type
 17209 ;;  f               2   22[COMRAM] PTR void 
 17210 ;;		 -> RAM(3967), NULL(0), 
 17211 ;;  offset          4   24[COMRAM] long 
 17212 ;;  origin          2   28[COMRAM] int 
 17213 ;; Auto vars:     Size  Location     Type
 17214 ;;  file            2   40[COMRAM] PTR struct sFL_FILE
 17215 ;;		 -> RAM(3967), NULL(0), 
 17216 ;;  res             2   38[COMRAM] int 
 17217 ;; Return value:  Size  Location     Type
 17218 ;;                  2   22[COMRAM] int 
 17219 ;; Registers used:
 17220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17221 ;; Tracked objects:
 17222 ;;		On entry : 0/0
 17223 ;;		On exit  : 0/0
 17224 ;;		Unchanged: 0/0
 17225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17226 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17227 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17228 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17229 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17230 ;;Total ram usage:       20 bytes
 17231 ;; Hardware stack levels used:    1
 17232 ;; Hardware stack levels required when called:    4
 17233 ;; This function calls:
 17234 ;;		_fl_init
 17235 ;; This function is called by:
 17236 ;;		_File_append
 17237 ;;		_File_read_
 17238 ;; This function uses a non-reentrant model
 17239 ;;
 17240                           
 17241                           	psect	text44
 17242  00721A                     __ptext44:
 17243                           	opt stack 0
 17244  00721A                     _fl_fseek:
 17245                           	opt stack 24
 17246                           
 17247                           ;fat_filelib.c: 1117: FL_FILE *file = (FL_FILE *)f;
 17248                           
 17249                           ;incstack = 0
 17250  00721A  C018  F02A         	movff	fl_fseek@f+1,fl_fseek@file+1
 17251  00721E  C017  F029         	movff	fl_fseek@f,fl_fseek@file
 17252                           
 17253                           ;fat_filelib.c: 1118: int res = -1;
 17254  007222  6827               	setf	fl_fseek@res,c
 17255  007224  6828               	setf	fl_fseek@res+1,c
 17256                           
 17257                           ;fat_filelib.c: 1121: { if (_filelib_init==0) fl_init(); };
 17258  007226  0101               	movlb	1	; () banked
 17259  007228  5192               	movf	(__filelib_init+1)& (0+255),w,b
 17260  00722A  1191               	iorwf	__filelib_init& (0+255),w,b
 17261  00722C  B4D8               	btfsc	status,2,c
 17262                           
 17263                           ; BSR set to: 1
 17264  00722E  EC44  F029         	call	_fl_init	;wreg free
 17265                           
 17266                           ;fat_filelib.c: 1123: if (!file)
 17267  007232  502A               	movf	fl_fseek@file+1,w,c
 17268  007234  1029               	iorwf	fl_fseek@file,w,c
 17269  007236  E101 D0C2          	bz	l668
 17270                           
 17271                           ;fat_filelib.c: 1126: if (origin == 2 && offset != 0)
 17272                           
 17273                           ;fat_filelib.c: 1124: return -1;
 17274                           ;	Return value of _fl_fseek is never used
 17275  00723A  501D               	movf	fl_fseek@origin,w,c
 17276  00723C  0A02               	xorlw	2
 17277  00723E  101E               	iorwf	fl_fseek@origin+1,w,c
 17278  007240  E106               	bnz	l12171
 17279  007242  501C               	movf	fl_fseek@offset+3,w,c
 17280  007244  1019               	iorwf	fl_fseek@offset,w,c
 17281  007246  101A               	iorwf	fl_fseek@offset+1,w,c
 17282  007248  101B               	iorwf	fl_fseek@offset+2,w,c
 17283  00724A  E001 D0B8          	bnz	l668
 17284  00724E                     l12171:
 17285                           
 17286                           ;fat_filelib.c: 1132: file->file_data_address = 0xFFFFFFFF;
 17287  00724E  EE22 F039          	lfsr	2,569
 17288  007252  5029               	movf	fl_fseek@file,w,c
 17289  007254  26D9               	addwf	fsr2l,f,c
 17290  007256  502A               	movf	fl_fseek@file+1,w,c
 17291  007258  22DA               	addwfc	fsr2h,f,c
 17292  00725A  68DE               	setf	postinc2,c
 17293  00725C  68DE               	setf	postinc2,c
 17294  00725E  68DE               	setf	postinc2,c
 17295  007260  68DD               	setf	postdec2,c
 17296                           
 17297                           ;fat_filelib.c: 1133: file->file_data_dirty = 0;
 17298  007262  EE22 F03D          	lfsr	2,573
 17299  007266  5029               	movf	fl_fseek@file,w,c
 17300  007268  26D9               	addwf	fsr2l,f,c
 17301  00726A  502A               	movf	fl_fseek@file+1,w,c
 17302  00726C  22DA               	addwfc	fsr2h,f,c
 17303  00726E  6ADE               	clrf	postinc2,c
 17304  007270  6ADD               	clrf	postdec2,c
 17305                           
 17306                           ;fat_filelib.c: 1135: if (origin == 0)
 17307  007272  501E               	movf	fl_fseek@origin+1,w,c
 17308  007274  101D               	iorwf	fl_fseek@origin,w,c
 17309  007276  E10F               	bnz	l12181
 17310                           
 17311                           ;fat_filelib.c: 1136: {
 17312                           ;fat_filelib.c: 1137: file->bytenum = (uint32)offset;
 17313  007278  EE20 F008          	lfsr	2,8
 17314  00727C  5029               	movf	fl_fseek@file,w,c
 17315  00727E  26D9               	addwf	fsr2l,f,c
 17316  007280  502A               	movf	fl_fseek@file+1,w,c
 17317  007282  22DA               	addwfc	fsr2h,f,c
 17318  007284  C019  FFDE         	movff	fl_fseek@offset,postinc2
 17319  007288  C01A  FFDE         	movff	fl_fseek@offset+1,postinc2
 17320  00728C  C01B  FFDE         	movff	fl_fseek@offset+2,postinc2
 17321  007290  C01C  FFDE         	movff	fl_fseek@offset+3,postinc2
 17322  007294  D013               	goto	L42
 17323  007296                     l12181:
 17324                           
 17325                           ;fat_filelib.c: 1144: else if (origin == 1)
 17326  007296  041D               	decf	fl_fseek@origin,w,c
 17327  007298  101E               	iorwf	fl_fseek@origin+1,w,c
 17328  00729A  E171               	bnz	l12199
 17329                           
 17330                           ;fat_filelib.c: 1145: {
 17331                           ;fat_filelib.c: 1147: if (offset >= 0)
 17332  00729C  BE1C               	btfsc	fl_fseek@offset+3,7,c
 17333  00729E  D034               	goto	l12189
 17334                           
 17335                           ;fat_filelib.c: 1148: {
 17336                           ;fat_filelib.c: 1149: file->bytenum += offset;
 17337  0072A0  EE20 F008          	lfsr	2,8
 17338  0072A4  5029               	movf	fl_fseek@file,w,c
 17339  0072A6  26D9               	addwf	fsr2l,f,c
 17340  0072A8  502A               	movf	fl_fseek@file+1,w,c
 17341  0072AA  22DA               	addwfc	fsr2h,f,c
 17342  0072AC  5019               	movf	fl_fseek@offset,w,c
 17343  0072AE  26DE               	addwf	postinc2,f,c
 17344  0072B0  501A               	movf	fl_fseek@offset+1,w,c
 17345  0072B2  22DE               	addwfc	postinc2,f,c
 17346  0072B4  501B               	movf	fl_fseek@offset+2,w,c
 17347  0072B6  22DE               	addwfc	postinc2,f,c
 17348  0072B8  501C               	movf	fl_fseek@offset+3,w,c
 17349  0072BA  22DD               	addwfc	postdec2,f,c
 17350  0072BC                     L42:
 17351                           
 17352                           ;fat_filelib.c: 1151: if (file->bytenum > file->filelength)
 17353  0072BC  EE20 F008          	lfsr	2,8
 17354  0072C0  5029               	movf	fl_fseek@file,w,c
 17355  0072C2  26D9               	addwf	fsr2l,f,c
 17356  0072C4  502A               	movf	fl_fseek@file+1,w,c
 17357  0072C6  22DA               	addwfc	fsr2h,f,c
 17358  0072C8  CFDE F01F          	movff	postinc2,??_fl_fseek
 17359  0072CC  CFDE F020          	movff	postinc2,??_fl_fseek+1
 17360  0072D0  CFDE F021          	movff	postinc2,??_fl_fseek+2
 17361  0072D4  CFDE F022          	movff	postinc2,??_fl_fseek+3
 17362  0072D8  EE20 F00C          	lfsr	2,12
 17363  0072DC  5029               	movf	fl_fseek@file,w,c
 17364  0072DE  26D9               	addwf	fsr2l,f,c
 17365  0072E0  502A               	movf	fl_fseek@file+1,w,c
 17366  0072E2  22DA               	addwfc	fsr2h,f,c
 17367  0072E4  CFDE F023          	movff	postinc2,??_fl_fseek+4
 17368  0072E8  CFDE F024          	movff	postinc2,??_fl_fseek+5
 17369  0072EC  CFDE F025          	movff	postinc2,??_fl_fseek+6
 17370  0072F0  CFDE F026          	movff	postinc2,??_fl_fseek+7
 17371  0072F4  501F               	movf	??_fl_fseek,w,c
 17372  0072F6  5C23               	subwf	??_fl_fseek+4,w,c
 17373  0072F8  5020               	movf	??_fl_fseek+1,w,c
 17374  0072FA  5824               	subwfb	??_fl_fseek+5,w,c
 17375  0072FC  5021               	movf	??_fl_fseek+2,w,c
 17376  0072FE  5825               	subwfb	??_fl_fseek+6,w,c
 17377  007300  5022               	movf	??_fl_fseek+3,w,c
 17378  007302  5826               	subwfb	??_fl_fseek+7,w,c
 17379  007304  E256               	bc	L40
 17380  007306  D03F               	goto	L41
 17381  007308                     l12189:
 17382                           
 17383                           ;fat_filelib.c: 1155: else
 17384                           ;fat_filelib.c: 1156: {
 17385                           ;fat_filelib.c: 1158: offset = -offset;
 17386  007308  1E1C               	comf	fl_fseek@offset+3,f,c
 17387  00730A  1E1B               	comf	fl_fseek@offset+2,f,c
 17388  00730C  1E1A               	comf	fl_fseek@offset+1,f,c
 17389  00730E  6C19               	negf	fl_fseek@offset,c
 17390  007310  0E00               	movlw	0
 17391  007312  221A               	addwfc	fl_fseek@offset+1,f,c
 17392  007314  221B               	addwfc	fl_fseek@offset+2,f,c
 17393  007316  221C               	addwfc	fl_fseek@offset+3,f,c
 17394                           
 17395                           ;fat_filelib.c: 1161: if ((uint32)offset > file->bytenum)
 17396  007318  EE20 F008          	lfsr	2,8
 17397  00731C  5029               	movf	fl_fseek@file,w,c
 17398  00731E  26D9               	addwf	fsr2l,f,c
 17399  007320  502A               	movf	fl_fseek@file+1,w,c
 17400  007322  22DA               	addwfc	fsr2h,f,c
 17401  007324  CFDE F01F          	movff	postinc2,??_fl_fseek
 17402  007328  CFDE F020          	movff	postinc2,??_fl_fseek+1
 17403  00732C  CFDE F021          	movff	postinc2,??_fl_fseek+2
 17404  007330  CFDE F022          	movff	postinc2,??_fl_fseek+3
 17405  007334  5019               	movf	fl_fseek@offset,w,c
 17406  007336  5C1F               	subwf	??_fl_fseek,w,c
 17407  007338  501A               	movf	fl_fseek@offset+1,w,c
 17408  00733A  5820               	subwfb	??_fl_fseek+1,w,c
 17409  00733C  501B               	movf	fl_fseek@offset+2,w,c
 17410  00733E  5821               	subwfb	??_fl_fseek+2,w,c
 17411  007340  501C               	movf	fl_fseek@offset+3,w,c
 17412  007342  5822               	subwfb	??_fl_fseek+3,w,c
 17413  007344  E20B               	bc	l12195
 17414                           
 17415                           ;fat_filelib.c: 1162: file->bytenum = 0;
 17416  007346  EE20 F008          	lfsr	2,8
 17417  00734A  5029               	movf	fl_fseek@file,w,c
 17418  00734C  26D9               	addwf	fsr2l,f,c
 17419  00734E  502A               	movf	fl_fseek@file+1,w,c
 17420  007350  22DA               	addwfc	fsr2h,f,c
 17421  007352  6ADE               	clrf	postinc2,c
 17422  007354  6ADE               	clrf	postinc2,c
 17423  007356  6ADE               	clrf	postinc2,c
 17424  007358  6ADD               	clrf	postdec2,c
 17425  00735A  D02B               	goto	L40
 17426  00735C                     l12195:
 17427                           
 17428                           ;fat_filelib.c: 1163: else
 17429                           ;fat_filelib.c: 1164: file->bytenum-= offset;
 17430  00735C  EE20 F008          	lfsr	2,8
 17431  007360  5029               	movf	fl_fseek@file,w,c
 17432  007362  26D9               	addwf	fsr2l,f,c
 17433  007364  502A               	movf	fl_fseek@file+1,w,c
 17434  007366  22DA               	addwfc	fsr2h,f,c
 17435  007368  5019               	movf	fl_fseek@offset,w,c
 17436  00736A  5EDE               	subwf	postinc2,f,c
 17437  00736C  501A               	movf	fl_fseek@offset+1,w,c
 17438  00736E  5ADE               	subwfb	postinc2,f,c
 17439  007370  501B               	movf	fl_fseek@offset+2,w,c
 17440  007372  5ADE               	subwfb	postinc2,f,c
 17441  007374  501C               	movf	fl_fseek@offset+3,w,c
 17442  007376  5ADD               	subwfb	postdec2,f,c
 17443  007378  52DD               	movf	postdec2,f,c
 17444  00737A  52DD               	movf	postdec2,f,c
 17445  00737C  D01A               	goto	L40
 17446  00737E                     l12199:
 17447                           
 17448                           ;fat_filelib.c: 1169: else if (origin == 2)
 17449  00737E  501D               	movf	fl_fseek@origin,w,c
 17450  007380  0A02               	xorlw	2
 17451  007382  101E               	iorwf	fl_fseek@origin+1,w,c
 17452  007384  E11A               	bnz	l683
 17453  007386                     L41:
 17454                           
 17455                           ;fat_filelib.c: 1170: {
 17456                           ;fat_filelib.c: 1171: file->bytenum = file->filelength;
 17457  007386  EE20 F00C          	lfsr	2,12
 17458  00738A  5029               	movf	fl_fseek@file,w,c
 17459  00738C  26D9               	addwf	fsr2l,f,c
 17460  00738E  502A               	movf	fl_fseek@file+1,w,c
 17461  007390  22DA               	addwfc	fsr2h,f,c
 17462  007392  EE10 F008          	lfsr	1,8
 17463  007396  5029               	movf	fl_fseek@file,w,c
 17464  007398  26E1               	addwf	fsr1l,f,c
 17465  00739A  502A               	movf	fl_fseek@file+1,w,c
 17466  00739C  22E2               	addwfc	fsr1h,f,c
 17467  00739E  CFDE FFE6          	movff	postinc2,postinc1
 17468  0073A2  CFDE FFE6          	movff	postinc2,postinc1
 17469  0073A6  CFDE FFE6          	movff	postinc2,postinc1
 17470  0073AA  CFDD FFE5          	movff	postdec2,postdec1
 17471  0073AE  52E5               	movf	postdec1,f,c
 17472  0073B0  52E5               	movf	postdec1,f,c
 17473  0073B2                     L40:
 17474                           
 17475                           ;fat_filelib.c: 1172: res = 0;
 17476  0073B2  0E00               	movlw	0
 17477  0073B4  6E28               	movwf	fl_fseek@res+1,c
 17478  0073B6  6E27               	movwf	fl_fseek@res,c
 17479                           
 17480                           ;fat_filelib.c: 1173: }
 17481  0073B8  D002               	goto	l668
 17482  0073BA                     l683:
 17483                           
 17484                           ;fat_filelib.c: 1174: else
 17485                           ;fat_filelib.c: 1175: res = -1;
 17486  0073BA  6827               	setf	fl_fseek@res,c
 17487  0073BC  6828               	setf	fl_fseek@res+1,c
 17488  0073BE                     l668:
 17489  0073BE  0012               	return	
 17490  0073C0                     __end_of_fl_fseek:
 17491                           	opt stack 0
 17492                           tosu	equ	0xFFF
 17493                           tosh	equ	0xFFE
 17494                           tosl	equ	0xFFD
 17495                           pclath	equ	0xFFA
 17496                           tblptru	equ	0xFF8
 17497                           tblptrh	equ	0xFF7
 17498                           tblptrl	equ	0xFF6
 17499                           tablat	equ	0xFF5
 17500                           prodh	equ	0xFF4
 17501                           prodl	equ	0xFF3
 17502                           indf0	equ	0xFEF
 17503                           postinc0	equ	0xFEE
 17504                           fsr0h	equ	0xFEA
 17505                           fsr0l	equ	0xFE9
 17506                           wreg	equ	0xFE8
 17507                           indf1	equ	0xFE7
 17508                           postinc1	equ	0xFE6
 17509                           postdec1	equ	0xFE5
 17510                           fsr1h	equ	0xFE2
 17511                           fsr1l	equ	0xFE1
 17512                           indf2	equ	0xFDF
 17513                           postinc2	equ	0xFDE
 17514                           postdec2	equ	0xFDD
 17515                           fsr2h	equ	0xFDA
 17516                           fsr2l	equ	0xFD9
 17517                           status	equ	0xFD8
 17518                           
 17519 ;; *************** function _fl_fread *****************
 17520 ;; Defined at:
 17521 ;;		line 1013 in file "fat_filelib.c"
 17522 ;; Parameters:    Size  Location     Type
 17523 ;;  buffer          2   94[BANK0 ] PTR void 
 17524 ;;		 -> data(1), fl_fgetc@data(1), 
 17525 ;;  size            2   96[BANK0 ] int 
 17526 ;;  length          2   98[BANK0 ] int 
 17527 ;;  f               2  100[BANK0 ] PTR void 
 17528 ;;		 -> RAM(3967), NULL(0), 
 17529 ;; Auto vars:     Size  Location     Type
 17530 ;;  sectorsRead     4    0[BANK1 ] unsigned long 
 17531 ;;  sector          4    8[BANK1 ] unsigned long 
 17532 ;;  offset          4    4[BANK1 ] unsigned long 
 17533 ;;  file            2   18[BANK1 ] PTR struct sFL_FILE
 17534 ;;		 -> RAM(3967), NULL(0), 
 17535 ;;  bytesRead       2   16[BANK1 ] int 
 17536 ;;  count           2   14[BANK1 ] int 
 17537 ;;  copyCount       2   12[BANK1 ] int 
 17538 ;; Return value:  Size  Location     Type
 17539 ;;                  2   94[BANK0 ] int 
 17540 ;; Registers used:
 17541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17542 ;; Tracked objects:
 17543 ;;		On entry : 0/0
 17544 ;;		On exit  : 0/0
 17545 ;;		Unchanged: 0/0
 17546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17547 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17548 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17549 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17550 ;;      Totals:         0      24      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17551 ;;Total ram usage:       44 bytes
 17552 ;; Hardware stack levels used:    1
 17553 ;; Hardware stack levels required when called:    9
 17554 ;; This function calls:
 17555 ;;		___awdiv
 17556 ;;		__read_sectors
 17557 ;;		_fl_fflush
 17558 ;;		_fl_init
 17559 ;;		_memcpy
 17560 ;; This function is called by:
 17561 ;;		_fl_fgetc
 17562 ;;		_File_append
 17563 ;;		_File_read_
 17564 ;; This function uses a non-reentrant model
 17565 ;;
 17566                           
 17567                           	psect	text45
 17568  00CA1C                     __ptext45:
 17569                           	opt stack 0
 17570  00CA1C                     _fl_fread:
 17571                           	opt stack 18
 17572                           
 17573                           ;fat_filelib.c: 1015: uint32 sector;
 17574                           ;fat_filelib.c: 1016: uint32 offset;
 17575                           ;fat_filelib.c: 1017: int copyCount;
 17576                           ;fat_filelib.c: 1018: int count = size * length;
 17577                           
 17578                           ;incstack = 0
 17579  00CA1C  0100               	movlb	0	; () banked
 17580  00CA1E  51E2               	movf	fl_fread@length& (0+255),w,b
 17581  00CA20  03E0               	mulwf	fl_fread@size& (0+255),b
 17582  00CA22  CFF3 F0E6          	movff	prodl,??_fl_fread
 17583  00CA26  CFF4 F0E7          	movff	prodh,??_fl_fread+1
 17584  00CA2A  03E1               	mulwf	(fl_fread@size+1)& (0+255),b
 17585  00CA2C  50F3               	movf	243,w,c
 17586  00CA2E  27E7               	addwf	(??_fl_fread+1)& (0+255),f,b
 17587  00CA30  51E3               	movf	(fl_fread@length+1)& (0+255),w,b
 17588  00CA32  03E0               	mulwf	fl_fread@size& (0+255),b
 17589  00CA34  50F3               	movf	243,w,c
 17590  00CA36  27E7               	addwf	(??_fl_fread+1)& (0+255),f,b
 17591  00CA38  C0E6  F10E         	movff	??_fl_fread,fl_fread@count
 17592  00CA3C  C0E7  F10F         	movff	??_fl_fread+1,fl_fread@count+1
 17593                           
 17594                           ; BSR set to: 0
 17595                           ;fat_filelib.c: 1019: int bytesRead = 0;
 17596  00CA40  0101               	movlb	1	; () banked
 17597  00CA42  6B11               	clrf	(fl_fread@bytesRead+1)& (0+255),b
 17598  00CA44  6B10               	clrf	fl_fread@bytesRead& (0+255),b
 17599                           
 17600                           ; BSR set to: 1
 17601                           ;fat_filelib.c: 1021: FL_FILE *file = (FL_FILE *)f;
 17602  00CA46  C0E5  F113         	movff	fl_fread@f+1,fl_fread@file+1
 17603  00CA4A  C0E4  F112         	movff	fl_fread@f,fl_fread@file
 17604                           
 17605                           ; BSR set to: 1
 17606                           ;fat_filelib.c: 1024: { if (_filelib_init==0) fl_init(); };
 17607  00CA4E  5192               	movf	(__filelib_init+1)& (0+255),w,b
 17608  00CA50  1191               	iorwf	__filelib_init& (0+255),w,b
 17609  00CA52  B4D8               	btfsc	status,2,c
 17610                           
 17611                           ; BSR set to: 1
 17612  00CA54  EC44  F029         	call	_fl_init	;wreg free
 17613                           
 17614                           ;fat_filelib.c: 1026: if (buffer==(0) || file==(0))
 17615  00CA58  0100               	movlb	0	; () banked
 17616  00CA5A  51DF               	movf	(fl_fread@buffer+1)& (0+255),w,b
 17617  00CA5C  11DE               	iorwf	fl_fread@buffer& (0+255),w,b
 17618  00CA5E  E03F               	bz	u14050
 17619                           
 17620                           ; BSR set to: 0
 17621  00CA60  0101               	movlb	1	; () banked
 17622  00CA62  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17623  00CA64  1112               	iorwf	fl_fread@file& (0+255),w,b
 17624  00CA66  E03B               	bz	u14050
 17625                           
 17626                           ;fat_filelib.c: 1030: if (!(file->flags & (1 << 0)))
 17627                           
 17628                           ; BSR set to: 0
 17629                           
 17630                           ;fat_filelib.c: 1027: return -1;
 17631  00CA68  EE22 F03F          	lfsr	2,575
 17632  00CA6C  5112               	movf	fl_fread@file& (0+255),w,b
 17633  00CA6E  26D9               	addwf	fsr2l,f,c
 17634  00CA70  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17635  00CA72  22DA               	addwfc	fsr2h,f,c
 17636  00CA74  50DF               	movf	indf2,w,c
 17637  00CA76  0100               	movlb	0	; () banked
 17638  00CA78  6FE6               	movwf	??_fl_fread& (0+255),b
 17639  00CA7A  A1E6               	btfss	??_fl_fread& (0+255),0,b
 17640  00CA7C  D030               	goto	u14050
 17641                           
 17642                           ; BSR set to: 0
 17643                           ;fat_filelib.c: 1034: if (!count)
 17644                           
 17645                           ; BSR set to: 0
 17646                           
 17647                           ; BSR set to: 0
 17648                           ;fat_filelib.c: 1031: return -1;
 17649  00CA7E  0101               	movlb	1	; () banked
 17650  00CA80  510F               	movf	(fl_fread@count+1)& (0+255),w,b
 17651  00CA82  110E               	iorwf	fl_fread@count& (0+255),w,b
 17652  00CA84  E105               	bnz	l11919
 17653                           
 17654                           ; BSR set to: 1
 17655                           ;fat_filelib.c: 1035: return 0;
 17656  00CA86  0E00               	movlw	0
 17657  00CA88  0100               	movlb	0	; () banked
 17658  00CA8A  6FDF               	movwf	(?_fl_fread+1)& (0+255),b
 17659  00CA8C  6FDE               	movwf	?_fl_fread& (0+255),b
 17660  00CA8E  D254               	goto	l648
 17661  00CA90                     l11919:
 17662                           
 17663                           ;fat_filelib.c: 1038: if (file->bytenum >= file->filelength)
 17664  00CA90  EE20 F00C          	lfsr	2,12
 17665  00CA94  0101               	movlb	1	; () banked
 17666  00CA96  5112               	movf	fl_fread@file& (0+255),w,b
 17667  00CA98  26D9               	addwf	fsr2l,f,c
 17668  00CA9A  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17669  00CA9C  22DA               	addwfc	fsr2h,f,c
 17670  00CA9E  CFDE F0E6          	movff	postinc2,??_fl_fread
 17671  00CAA2  CFDE F0E7          	movff	postinc2,??_fl_fread+1
 17672  00CAA6  CFDE F0E8          	movff	postinc2,??_fl_fread+2
 17673  00CAAA  CFDE F0E9          	movff	postinc2,??_fl_fread+3
 17674  00CAAE  EE20 F008          	lfsr	2,8
 17675  00CAB2  5112               	movf	fl_fread@file& (0+255),w,b
 17676  00CAB4  26D9               	addwf	fsr2l,f,c
 17677  00CAB6  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17678  00CAB8  22DA               	addwfc	fsr2h,f,c
 17679  00CABA  CFDE F0EA          	movff	postinc2,??_fl_fread+4
 17680  00CABE  CFDE F0EB          	movff	postinc2,??_fl_fread+5
 17681  00CAC2  CFDE F0EC          	movff	postinc2,??_fl_fread+6
 17682  00CAC6  CFDE F0ED          	movff	postinc2,??_fl_fread+7
 17683  00CACA  0100               	movlb	0	; () banked
 17684  00CACC  51E6               	movf	??_fl_fread& (0+255),w,b
 17685  00CACE  5DEA               	subwf	(??_fl_fread+4)& (0+255),w,b
 17686  00CAD0  51E7               	movf	(??_fl_fread+1)& (0+255),w,b
 17687  00CAD2  59EB               	subwfb	(??_fl_fread+5)& (0+255),w,b
 17688  00CAD4  51E8               	movf	(??_fl_fread+2)& (0+255),w,b
 17689  00CAD6  59EC               	subwfb	(??_fl_fread+6)& (0+255),w,b
 17690  00CAD8  51E9               	movf	(??_fl_fread+3)& (0+255),w,b
 17691  00CADA  59ED               	subwfb	(??_fl_fread+7)& (0+255),w,b
 17692  00CADC  E304               	bnc	l11923
 17693  00CADE                     u14050:
 17694                           
 17695                           ; BSR set to: 0
 17696                           ;fat_filelib.c: 1039: return -1;
 17697  00CADE  0100               	movlb	0	; () banked
 17698  00CAE0  69DE               	setf	?_fl_fread& (0+255),b
 17699  00CAE2  69DF               	setf	(?_fl_fread+1)& (0+255),b
 17700  00CAE4  D229               	goto	l648
 17701  00CAE6                     l11923:
 17702                           
 17703                           ; BSR set to: 0
 17704                           ;fat_filelib.c: 1042: if ( (file->bytenum + count) > file->filelength )
 17705  00CAE6  EE20 F008          	lfsr	2,8
 17706  00CAEA  0101               	movlb	1	; () banked
 17707  00CAEC  5112               	movf	fl_fread@file& (0+255),w,b
 17708  00CAEE  26D9               	addwf	fsr2l,f,c
 17709  00CAF0  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17710  00CAF2  22DA               	addwfc	fsr2h,f,c
 17711  00CAF4  CFDE F0E6          	movff	postinc2,??_fl_fread
 17712  00CAF8  CFDE F0E7          	movff	postinc2,??_fl_fread+1
 17713  00CAFC  CFDE F0E8          	movff	postinc2,??_fl_fread+2
 17714  00CB00  CFDE F0E9          	movff	postinc2,??_fl_fread+3
 17715  00CB04  C10E  F0EA         	movff	fl_fread@count,??_fl_fread+4
 17716  00CB08  C10F  F0EB         	movff	fl_fread@count+1,??_fl_fread+5
 17717  00CB0C  0E00               	movlw	0
 17718  00CB0E  0100               	movlb	0	; () banked
 17719  00CB10  BFEB               	btfsc	(??_fl_fread+5)& (0+255),7,b
 17720  00CB12  0EFF               	movlw	255
 17721  00CB14  6FEC               	movwf	(??_fl_fread+6)& (0+255),b
 17722  00CB16  6FED               	movwf	(??_fl_fread+7)& (0+255),b
 17723  00CB18  51E6               	movf	??_fl_fread& (0+255),w,b
 17724  00CB1A  25EA               	addwf	(??_fl_fread+4)& (0+255),w,b
 17725  00CB1C  6FEE               	movwf	(??_fl_fread+8)& (0+255),b
 17726  00CB1E  51E7               	movf	(??_fl_fread+1)& (0+255),w,b
 17727  00CB20  21EB               	addwfc	(??_fl_fread+5)& (0+255),w,b
 17728  00CB22  6FEF               	movwf	(??_fl_fread+9)& (0+255),b
 17729  00CB24  51E8               	movf	(??_fl_fread+2)& (0+255),w,b
 17730  00CB26  21EC               	addwfc	(??_fl_fread+6)& (0+255),w,b
 17731  00CB28  6FF0               	movwf	(??_fl_fread+10)& (0+255),b
 17732  00CB2A  51E9               	movf	(??_fl_fread+3)& (0+255),w,b
 17733  00CB2C  21ED               	addwfc	(??_fl_fread+7)& (0+255),w,b
 17734  00CB2E  6FF1               	movwf	(??_fl_fread+11)& (0+255),b
 17735  00CB30  EE20 F00C          	lfsr	2,12
 17736  00CB34  0101               	movlb	1	; () banked
 17737  00CB36  5112               	movf	fl_fread@file& (0+255),w,b
 17738  00CB38  26D9               	addwf	fsr2l,f,c
 17739  00CB3A  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17740  00CB3C  22DA               	addwfc	fsr2h,f,c
 17741  00CB3E  CFDE F0F2          	movff	postinc2,??_fl_fread+12
 17742  00CB42  CFDE F0F3          	movff	postinc2,??_fl_fread+13
 17743  00CB46  CFDE F0F4          	movff	postinc2,??_fl_fread+14
 17744  00CB4A  CFDE F0F5          	movff	postinc2,??_fl_fread+15
 17745  00CB4E  0100               	movlb	0	; () banked
 17746  00CB50  51EE               	movf	(??_fl_fread+8)& (0+255),w,b
 17747  00CB52  5DF2               	subwf	(??_fl_fread+12)& (0+255),w,b
 17748  00CB54  51EF               	movf	(??_fl_fread+9)& (0+255),w,b
 17749  00CB56  59F3               	subwfb	(??_fl_fread+13)& (0+255),w,b
 17750  00CB58  51F0               	movf	(??_fl_fread+10)& (0+255),w,b
 17751  00CB5A  59F4               	subwfb	(??_fl_fread+14)& (0+255),w,b
 17752  00CB5C  51F1               	movf	(??_fl_fread+11)& (0+255),w,b
 17753  00CB5E  59F5               	subwfb	(??_fl_fread+15)& (0+255),w,b
 17754  00CB60  E223               	bc	l652
 17755                           
 17756                           ; BSR set to: 0
 17757                           ;fat_filelib.c: 1043: count = file->filelength - file->bytenum;
 17758  00CB62  EE20 F00C          	lfsr	2,12
 17759  00CB66  0101               	movlb	1	; () banked
 17760  00CB68  5112               	movf	fl_fread@file& (0+255),w,b
 17761  00CB6A  26D9               	addwf	fsr2l,f,c
 17762  00CB6C  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17763  00CB6E  22DA               	addwfc	fsr2h,f,c
 17764  00CB70  CFDE F0E6          	movff	postinc2,??_fl_fread
 17765  00CB74  CFDD F0E7          	movff	postdec2,??_fl_fread+1
 17766  00CB78  EE20 F008          	lfsr	2,8
 17767  00CB7C  5112               	movf	fl_fread@file& (0+255),w,b
 17768  00CB7E  26D9               	addwf	fsr2l,f,c
 17769  00CB80  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17770  00CB82  22DA               	addwfc	fsr2h,f,c
 17771  00CB84  CFDE F0E8          	movff	postinc2,??_fl_fread+2
 17772  00CB88  CFDD F0E9          	movff	postdec2,??_fl_fread+3
 17773  00CB8C  0100               	movlb	0	; () banked
 17774  00CB8E  1FE8               	comf	(??_fl_fread+2)& (0+255),f,b
 17775  00CB90  1FE9               	comf	(??_fl_fread+3)& (0+255),f,b
 17776  00CB92  4BE8               	infsnz	(??_fl_fread+2)& (0+255),f,b
 17777  00CB94  2BE9               	incf	(??_fl_fread+3)& (0+255),f,b
 17778  00CB96  51E6               	movf	??_fl_fread& (0+255),w,b
 17779  00CB98  25E8               	addwf	(??_fl_fread+2)& (0+255),w,b
 17780  00CB9A  0101               	movlb	1	; () banked
 17781  00CB9C  6F0E               	movwf	fl_fread@count& (0+255),b
 17782  00CB9E  0100               	movlb	0	; () banked
 17783  00CBA0  51E7               	movf	(??_fl_fread+1)& (0+255),w,b
 17784  00CBA2  21E9               	addwfc	(??_fl_fread+3)& (0+255),w,b
 17785  00CBA4  0101               	movlb	1	; () banked
 17786  00CBA6  6F0F               	movwf	(fl_fread@count+1)& (0+255),b
 17787  00CBA8                     l652:
 17788                           
 17789                           ;fat_filelib.c: 1046: sector = file->bytenum / 512;
 17790  00CBA8  EE20 F008          	lfsr	2,8
 17791  00CBAC  0101               	movlb	1	; () banked
 17792  00CBAE  5112               	movf	fl_fread@file& (0+255),w,b
 17793  00CBB0  26D9               	addwf	fsr2l,f,c
 17794  00CBB2  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17795  00CBB4  22DA               	addwfc	fsr2h,f,c
 17796  00CBB6  CFDE F0E6          	movff	postinc2,??_fl_fread
 17797  00CBBA  CFDE F0E7          	movff	postinc2,??_fl_fread+1
 17798  00CBBE  CFDE F0E8          	movff	postinc2,??_fl_fread+2
 17799  00CBC2  CFDE F0E9          	movff	postinc2,??_fl_fread+3
 17800  00CBC6  0E0A               	movlw	10
 17801  00CBC8  D006               	goto	u14070
 17802  00CBCA                     u14075:
 17803  00CBCA  0100               	movlb	0	; () banked
 17804  00CBCC  90D8               	bcf	status,0,c
 17805  00CBCE  33E9               	rrcf	(??_fl_fread+3)& (0+255),f,b
 17806  00CBD0  33E8               	rrcf	(??_fl_fread+2)& (0+255),f,b
 17807  00CBD2  33E7               	rrcf	(??_fl_fread+1)& (0+255),f,b
 17808  00CBD4  33E6               	rrcf	??_fl_fread& (0+255),f,b
 17809  00CBD6                     u14070:
 17810  00CBD6  2EE8               	decfsz	wreg,f,c
 17811  00CBD8  D7F8               	goto	u14075
 17812  00CBDA  C0E6  F108         	movff	??_fl_fread,fl_fread@sector
 17813  00CBDE  C0E7  F109         	movff	??_fl_fread+1,fl_fread@sector+1
 17814  00CBE2  C0E8  F10A         	movff	??_fl_fread+2,fl_fread@sector+2
 17815  00CBE6  C0E9  F10B         	movff	??_fl_fread+3,fl_fread@sector+3
 17816                           
 17817                           ;fat_filelib.c: 1049: offset = file->bytenum % 512;
 17818  00CBEA  EE20 F008          	lfsr	2,8
 17819  00CBEE  0101               	movlb	1	; () banked
 17820  00CBF0  5112               	movf	fl_fread@file& (0+255),w,b
 17821  00CBF2  26D9               	addwf	fsr2l,f,c
 17822  00CBF4  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17823  00CBF6  22DA               	addwfc	fsr2h,f,c
 17824  00CBF8  0EFF               	movlw	255
 17825  00CBFA  14DE               	andwf	postinc2,w,c
 17826  00CBFC  6F04               	movwf	fl_fread@offset& (0+255),b
 17827  00CBFE  0E01               	movlw	1
 17828  00CC00  14DE               	andwf	postinc2,w,c
 17829  00CC02  6F05               	movwf	(fl_fread@offset+1)& (0+255),b
 17830  00CC04  0E00               	movlw	0
 17831  00CC06  14DE               	andwf	postinc2,w,c
 17832  00CC08  6F06               	movwf	(fl_fread@offset+2)& (0+255),b
 17833  00CC0A  0E00               	movlw	0
 17834  00CC0C  14DE               	andwf	postinc2,w,c
 17835  00CC0E  6F07               	movwf	(fl_fread@offset+3)& (0+255),b
 17836                           
 17837                           ;fat_filelib.c: 1051: while (bytesRead < count)
 17838  00CC10  D181               	goto	l11965
 17839  00CC12                     l11927:
 17840                           
 17841                           ;fat_filelib.c: 1052: {
 17842                           ;fat_filelib.c: 1054: if ((offset == 0) && ((count - bytesRead) >= 512))
 17843  00CC12  0101               	movlb	1	; () banked
 17844  00CC14  5107               	movf	(fl_fread@offset+3)& (0+255),w,b
 17845  00CC16  1104               	iorwf	fl_fread@offset& (0+255),w,b
 17846  00CC18  1105               	iorwf	(fl_fread@offset+1)& (0+255),w,b
 17847  00CC1A  1106               	iorwf	(fl_fread@offset+2)& (0+255),w,b
 17848  00CC1C  E179               	bnz	l11939
 17849                           
 17850                           ; BSR set to: 1
 17851  00CC1E  C110  F0E6         	movff	fl_fread@bytesRead,??_fl_fread
 17852  00CC22  C111  F0E7         	movff	fl_fread@bytesRead+1,??_fl_fread+1
 17853  00CC26  0100               	movlb	0	; () banked
 17854  00CC28  1FE6               	comf	??_fl_fread& (0+255),f,b
 17855  00CC2A  1FE7               	comf	(??_fl_fread+1)& (0+255),f,b
 17856  00CC2C  4BE6               	infsnz	??_fl_fread& (0+255),f,b
 17857  00CC2E  2BE7               	incf	(??_fl_fread+1)& (0+255),f,b
 17858  00CC30  0101               	movlb	1	; () banked
 17859  00CC32  510E               	movf	fl_fread@count& (0+255),w,b
 17860  00CC34  0100               	movlb	0	; () banked
 17861  00CC36  27E6               	addwf	??_fl_fread& (0+255),f,b
 17862  00CC38  0101               	movlb	1	; () banked
 17863  00CC3A  510F               	movf	(fl_fread@count+1)& (0+255),w,b
 17864  00CC3C  0100               	movlb	0	; () banked
 17865  00CC3E  23E7               	addwfc	(??_fl_fread+1)& (0+255),f,b
 17866  00CC40  51E7               	movf	(??_fl_fread+1)& (0+255),w,b
 17867  00CC42  0A80               	xorlw	128
 17868  00CC44  0F7E               	addlw	-130
 17869  00CC46  0E00               	movlw	0
 17870  00CC48  B4D8               	btfsc	status,2,c
 17871  00CC4A  5DE6               	subwf	??_fl_fread& (0+255),w,b
 17872  00CC4C  E361               	bnc	l11939
 17873                           
 17874                           ; BSR set to: 0
 17875                           ;fat_filelib.c: 1055: {
 17876                           ;fat_filelib.c: 1057: uint32 sectorsRead = _read_sectors(file, sector, (uint8*)((uint8*)
      +                          buffer + bytesRead), (count - bytesRead) / 512);
 17877  00CC4E  C113  F081         	movff	fl_fread@file+1,__read_sectors@file+1
 17878  00CC52  C112  F080         	movff	fl_fread@file,__read_sectors@file
 17879  00CC56  C108  F082         	movff	fl_fread@sector,__read_sectors@offset
 17880  00CC5A  C109  F083         	movff	fl_fread@sector+1,__read_sectors@offset+1
 17881  00CC5E  C10A  F084         	movff	fl_fread@sector+2,__read_sectors@offset+2
 17882  00CC62  C10B  F085         	movff	fl_fread@sector+3,__read_sectors@offset+3
 17883  00CC66  0101               	movlb	1	; () banked
 17884  00CC68  5110               	movf	fl_fread@bytesRead& (0+255),w,b
 17885  00CC6A  0100               	movlb	0	; () banked
 17886  00CC6C  25DE               	addwf	fl_fread@buffer& (0+255),w,b
 17887  00CC6E  6F86               	movwf	__read_sectors@buffer& (0+255),b
 17888  00CC70  0101               	movlb	1	; () banked
 17889  00CC72  5111               	movf	(fl_fread@bytesRead+1)& (0+255),w,b
 17890  00CC74  0100               	movlb	0	; () banked
 17891  00CC76  21DF               	addwfc	(fl_fread@buffer+1)& (0+255),w,b
 17892  00CC78  6F87               	movwf	(__read_sectors@buffer+1)& (0+255),b
 17893  00CC7A  C110  F0E6         	movff	fl_fread@bytesRead,??_fl_fread
 17894  00CC7E  C111  F0E7         	movff	fl_fread@bytesRead+1,??_fl_fread+1
 17895  00CC82  1FE6               	comf	??_fl_fread& (0+255),f,b
 17896  00CC84  1FE7               	comf	(??_fl_fread+1)& (0+255),f,b
 17897  00CC86  4BE6               	infsnz	??_fl_fread& (0+255),f,b
 17898  00CC88  2BE7               	incf	(??_fl_fread+1)& (0+255),f,b
 17899  00CC8A  0101               	movlb	1	; () banked
 17900  00CC8C  510E               	movf	fl_fread@count& (0+255),w,b
 17901  00CC8E  0100               	movlb	0	; () banked
 17902  00CC90  25E6               	addwf	??_fl_fread& (0+255),w,b
 17903  00CC92  6E01               	movwf	___awdiv@dividend,c
 17904  00CC94  0101               	movlb	1	; () banked
 17905  00CC96  510F               	movf	(fl_fread@count+1)& (0+255),w,b
 17906  00CC98  0100               	movlb	0	; () banked
 17907  00CC9A  21E7               	addwfc	(??_fl_fread+1)& (0+255),w,b
 17908  00CC9C  6E02               	movwf	___awdiv@dividend+1,c
 17909  00CC9E  0E02               	movlw	2
 17910  00CCA0  6E04               	movwf	___awdiv@divisor+1,c
 17911  00CCA2  0E00               	movlw	0
 17912  00CCA4  6A03               	clrf	___awdiv@divisor,c
 17913  00CCA6  EC1A  F02A         	call	___awdiv	;wreg free
 17914  00CCAA  C001  F088         	movff	?___awdiv,__read_sectors@count
 17915  00CCAE  C002  F089         	movff	?___awdiv+1,__read_sectors@count+1
 17916  00CCB2  0E00               	movlw	0
 17917  00CCB4  0100               	movlb	0	; () banked
 17918  00CCB6  BF89               	btfsc	(__read_sectors@count+1)& (0+255),7,b
 17919  00CCB8  0EFF               	movlw	-1
 17920  00CCBA  6F8A               	movwf	(__read_sectors@count+2)& (0+255),b
 17921  00CCBC  6F8B               	movwf	(__read_sectors@count+3)& (0+255),b
 17922  00CCBE  EC07  F05C         	call	__read_sectors	;wreg free
 17923  00CCC2  C080  F100         	movff	?__read_sectors,fl_fread@sectorsRead
 17924  00CCC6  C081  F101         	movff	?__read_sectors+1,fl_fread@sectorsRead+1
 17925  00CCCA  C082  F102         	movff	?__read_sectors+2,fl_fread@sectorsRead+2
 17926  00CCCE  C083  F103         	movff	?__read_sectors+3,fl_fread@sectorsRead+3
 17927                           
 17928                           ;fat_filelib.c: 1058: if (sectorsRead)
 17929  00CCD2  0101               	movlb	1	; () banked
 17930  00CCD4  5103               	movf	(fl_fread@sectorsRead+3)& (0+255),w,b
 17931  00CCD6  1100               	iorwf	fl_fread@sectorsRead& (0+255),w,b
 17932  00CCD8  1101               	iorwf	(fl_fread@sectorsRead+1)& (0+255),w,b
 17933  00CCDA  1102               	iorwf	(fl_fread@sectorsRead+2)& (0+255),w,b
 17934  00CCDC  E101 D128          	bz	l658
 17935                           
 17936                           ; BSR set to: 1
 17937                           ;fat_filelib.c: 1059: {
 17938                           ;fat_filelib.c: 1061: copyCount = 512 * sectorsRead;
 17939  00CCE0  C100  F0E6         	movff	fl_fread@sectorsRead,??_fl_fread
 17940  00CCE4  C101  F0E7         	movff	fl_fread@sectorsRead+1,??_fl_fread+1
 17941  00CCE8  0E09               	movlw	9
 17942  00CCEA                     u14115:
 17943  00CCEA  90D8               	bcf	status,0,c
 17944  00CCEC  0100               	movlb	0	; () banked
 17945  00CCEE  37E6               	rlcf	??_fl_fread& (0+255),f,b
 17946  00CCF0  37E7               	rlcf	(??_fl_fread+1)& (0+255),f,b
 17947  00CCF2  2EE8               	decfsz	wreg,f,c
 17948  00CCF4  D7FA               	goto	u14115
 17949  00CCF6  C0E6  F10C         	movff	??_fl_fread,fl_fread@copyCount
 17950  00CCFA  C0E7  F10D         	movff	??_fl_fread+1,fl_fread@copyCount+1
 17951                           
 17952                           ;fat_filelib.c: 1064: sector+= sectorsRead;
 17953  00CCFE  0101               	movlb	1	; () banked
 17954  00CD00  5100               	movf	fl_fread@sectorsRead& (0+255),w,b
 17955  00CD02  2708               	addwf	fl_fread@sector& (0+255),f,b
 17956  00CD04  5101               	movf	(fl_fread@sectorsRead+1)& (0+255),w,b
 17957  00CD06  2309               	addwfc	(fl_fread@sector+1)& (0+255),f,b
 17958  00CD08  5102               	movf	(fl_fread@sectorsRead+2)& (0+255),w,b
 17959  00CD0A  230A               	addwfc	(fl_fread@sector+2)& (0+255),f,b
 17960  00CD0C  5103               	movf	(fl_fread@sectorsRead+3)& (0+255),w,b
 17961  00CD0E  D0E7               	goto	L43
 17962  00CD10                     l11939:
 17963                           
 17964                           ;fat_filelib.c: 1070: else
 17965                           ;fat_filelib.c: 1071: {
 17966                           ;fat_filelib.c: 1073: if (file->file_data_address != sector)
 17967  00CD10  EE22 F039          	lfsr	2,569
 17968  00CD14  0101               	movlb	1	; () banked
 17969  00CD16  5112               	movf	fl_fread@file& (0+255),w,b
 17970  00CD18  26D9               	addwf	fsr2l,f,c
 17971  00CD1A  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 17972  00CD1C  22DA               	addwfc	fsr2h,f,c
 17973  00CD1E  CFDE F0E6          	movff	postinc2,??_fl_fread
 17974  00CD22  CFDE F0E7          	movff	postinc2,??_fl_fread+1
 17975  00CD26  CFDE F0E8          	movff	postinc2,??_fl_fread+2
 17976  00CD2A  CFDE F0E9          	movff	postinc2,??_fl_fread+3
 17977  00CD2E  510B               	movf	(fl_fread@sector+3)& (0+255),w,b
 17978  00CD30  0100               	movlb	0	; () banked
 17979  00CD32  19E9               	xorwf	(??_fl_fread+3)& (0+255),w,b
 17980  00CD34  E10E               	bnz	u14125
 17981  00CD36  0101               	movlb	1	; () banked
 17982  00CD38  510A               	movf	(fl_fread@sector+2)& (0+255),w,b
 17983  00CD3A  0100               	movlb	0	; () banked
 17984  00CD3C  19E8               	xorwf	(??_fl_fread+2)& (0+255),w,b
 17985  00CD3E  E109               	bnz	u14125
 17986  00CD40  0101               	movlb	1	; () banked
 17987  00CD42  5109               	movf	(fl_fread@sector+1)& (0+255),w,b
 17988  00CD44  0100               	movlb	0	; () banked
 17989  00CD46  19E7               	xorwf	(??_fl_fread+1)& (0+255),w,b
 17990  00CD48  E104               	bnz	u14125
 17991  00CD4A  0101               	movlb	1	; () banked
 17992  00CD4C  5108               	movf	fl_fread@sector& (0+255),w,b
 17993  00CD4E  0100               	movlb	0	; () banked
 17994  00CD50  19E6               	xorwf	??_fl_fread& (0+255),w,b
 17995  00CD52                     u14125:
 17996  00CD52  E055               	bz	l11949
 17997                           
 17998                           ; BSR set to: 0
 17999                           ;fat_filelib.c: 1074: {
 18000                           ;fat_filelib.c: 1076: if (file->file_data_dirty)
 18001  00CD54  EE22 F03D          	lfsr	2,573
 18002  00CD58  0101               	movlb	1	; () banked
 18003  00CD5A  5112               	movf	fl_fread@file& (0+255),w,b
 18004  00CD5C  26D9               	addwf	fsr2l,f,c
 18005  00CD5E  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 18006  00CD60  22DA               	addwfc	fsr2h,f,c
 18007  00CD62  50DE               	movf	postinc2,w,c
 18008  00CD64  10DD               	iorwf	postdec2,w,c
 18009  00CD66  E007               	bz	l661
 18010                           
 18011                           ; BSR set to: 1
 18012                           ;fat_filelib.c: 1077: fl_fflush(file);
 18013  00CD68  C113  F0D5         	movff	fl_fread@file+1,fl_fflush@f+1
 18014  00CD6C  0100               	movlb	0	; () banked
 18015  00CD6E  C112  F0D4         	movff	fl_fread@file,fl_fflush@f
 18016  00CD72  EC3F  F02C         	call	_fl_fflush	;wreg free
 18017  00CD76                     l661:
 18018                           
 18019                           ;fat_filelib.c: 1080: if (!_read_sectors(file, sector, file->file_data_sector, 1))
 18020  00CD76  C113  F081         	movff	fl_fread@file+1,__read_sectors@file+1
 18021  00CD7A  C112  F080         	movff	fl_fread@file,__read_sectors@file
 18022  00CD7E  C108  F082         	movff	fl_fread@sector,__read_sectors@offset
 18023  00CD82  C109  F083         	movff	fl_fread@sector+1,__read_sectors@offset+1
 18024  00CD86  C10A  F084         	movff	fl_fread@sector+2,__read_sectors@offset+2
 18025  00CD8A  C10B  F085         	movff	fl_fread@sector+3,__read_sectors@offset+3
 18026  00CD8E  0E39               	movlw	57
 18027  00CD90  0101               	movlb	1	; () banked
 18028  00CD92  2512               	addwf	fl_fread@file& (0+255),w,b
 18029  00CD94  0100               	movlb	0	; () banked
 18030  00CD96  6F86               	movwf	__read_sectors@buffer& (0+255),b
 18031  00CD98  0E00               	movlw	0
 18032  00CD9A  0101               	movlb	1	; () banked
 18033  00CD9C  2113               	addwfc	(fl_fread@file+1)& (0+255),w,b
 18034  00CD9E  0100               	movlb	0	; () banked
 18035  00CDA0  6F87               	movwf	(__read_sectors@buffer+1)& (0+255),b
 18036  00CDA2  0E01               	movlw	1
 18037  00CDA4  6F88               	movwf	__read_sectors@count& (0+255),b
 18038  00CDA6  0E00               	movlw	0
 18039  00CDA8  6B89               	clrf	(__read_sectors@count+1)& (0+255),b
 18040  00CDAA  6B8A               	clrf	(__read_sectors@count+2)& (0+255),b
 18041  00CDAC  6B8B               	clrf	(__read_sectors@count+3)& (0+255),b
 18042  00CDAE  EC07  F05C         	call	__read_sectors	;wreg free
 18043  00CDB2  C080  F0E6         	movff	?__read_sectors,??_fl_fread
 18044  00CDB6  C081  F0E7         	movff	?__read_sectors+1,??_fl_fread+1
 18045  00CDBA  C082  F0E8         	movff	?__read_sectors+2,??_fl_fread+2
 18046  00CDBE  C083  F0E9         	movff	?__read_sectors+3,??_fl_fread+3
 18047  00CDC2  0100               	movlb	0	; () banked
 18048  00CDC4  51E9               	movf	(??_fl_fread+3)& (0+255),w,b
 18049  00CDC6  11E6               	iorwf	??_fl_fread& (0+255),w,b
 18050  00CDC8  11E7               	iorwf	(??_fl_fread+1)& (0+255),w,b
 18051  00CDCA  11E8               	iorwf	(??_fl_fread+2)& (0+255),w,b
 18052  00CDCC  E101 D0B0          	bz	l658
 18053                           
 18054                           ; BSR set to: 0
 18055                           ;fat_filelib.c: 1084: file->file_data_address = sector;
 18056                           
 18057                           ; BSR set to: 0
 18058                           
 18059                           ; BSR set to: 0
 18060                           ;fat_filelib.c: 1082: break;
 18061  00CDD0  EE22 F039          	lfsr	2,569
 18062  00CDD4  0101               	movlb	1	; () banked
 18063  00CDD6  5112               	movf	fl_fread@file& (0+255),w,b
 18064  00CDD8  26D9               	addwf	fsr2l,f,c
 18065  00CDDA  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 18066  00CDDC  22DA               	addwfc	fsr2h,f,c
 18067  00CDDE  C108  FFDE         	movff	fl_fread@sector,postinc2
 18068  00CDE2  C109  FFDE         	movff	fl_fread@sector+1,postinc2
 18069  00CDE6  C10A  FFDE         	movff	fl_fread@sector+2,postinc2
 18070  00CDEA  C10B  FFDE         	movff	fl_fread@sector+3,postinc2
 18071                           
 18072                           ;fat_filelib.c: 1085: file->file_data_dirty = 0;
 18073  00CDEE  EE22 F03D          	lfsr	2,573
 18074  00CDF2  5112               	movf	fl_fread@file& (0+255),w,b
 18075  00CDF4  26D9               	addwf	fsr2l,f,c
 18076  00CDF6  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 18077  00CDF8  22DA               	addwfc	fsr2h,f,c
 18078  00CDFA  6ADE               	clrf	postinc2,c
 18079  00CDFC  6ADD               	clrf	postdec2,c
 18080  00CDFE                     l11949:
 18081                           
 18082                           ;fat_filelib.c: 1086: }
 18083                           ;fat_filelib.c: 1089: copyCount = 512 - offset;
 18084  00CDFE  C104  F0E6         	movff	fl_fread@offset,??_fl_fread
 18085  00CE02  C105  F0E7         	movff	fl_fread@offset+1,??_fl_fread+1
 18086  00CE06  0100               	movlb	0	; () banked
 18087  00CE08  1FE6               	comf	??_fl_fread& (0+255),f,b
 18088  00CE0A  1FE7               	comf	(??_fl_fread+1)& (0+255),f,b
 18089  00CE0C  4BE6               	infsnz	??_fl_fread& (0+255),f,b
 18090  00CE0E  2BE7               	incf	(??_fl_fread+1)& (0+255),f,b
 18091  00CE10  0E00               	movlw	0
 18092  00CE12  25E6               	addwf	??_fl_fread& (0+255),w,b
 18093  00CE14  0101               	movlb	1	; () banked
 18094  00CE16  6F0C               	movwf	fl_fread@copyCount& (0+255),b
 18095  00CE18  0E02               	movlw	2
 18096  00CE1A  0100               	movlb	0	; () banked
 18097  00CE1C  21E7               	addwfc	(??_fl_fread+1)& (0+255),w,b
 18098  00CE1E  0101               	movlb	1	; () banked
 18099  00CE20  6F0D               	movwf	(fl_fread@copyCount+1)& (0+255),b
 18100                           
 18101                           ; BSR set to: 1
 18102                           ;fat_filelib.c: 1092: if (copyCount > (count - bytesRead))
 18103  00CE22  C110  F0E6         	movff	fl_fread@bytesRead,??_fl_fread
 18104  00CE26  C111  F0E7         	movff	fl_fread@bytesRead+1,??_fl_fread+1
 18105  00CE2A  0100               	movlb	0	; () banked
 18106  00CE2C  1FE6               	comf	??_fl_fread& (0+255),f,b
 18107  00CE2E  1FE7               	comf	(??_fl_fread+1)& (0+255),f,b
 18108  00CE30  4BE6               	infsnz	??_fl_fread& (0+255),f,b
 18109  00CE32  2BE7               	incf	(??_fl_fread+1)& (0+255),f,b
 18110  00CE34  0101               	movlb	1	; () banked
 18111  00CE36  510E               	movf	fl_fread@count& (0+255),w,b
 18112  00CE38  0100               	movlb	0	; () banked
 18113  00CE3A  27E6               	addwf	??_fl_fread& (0+255),f,b
 18114  00CE3C  0101               	movlb	1	; () banked
 18115  00CE3E  510F               	movf	(fl_fread@count+1)& (0+255),w,b
 18116  00CE40  0100               	movlb	0	; () banked
 18117  00CE42  23E7               	addwfc	(??_fl_fread+1)& (0+255),f,b
 18118  00CE44  51E7               	movf	(??_fl_fread+1)& (0+255),w,b
 18119  00CE46  0A80               	xorlw	128
 18120  00CE48  6FE8               	movwf	(??_fl_fread+2)& (0+255),b
 18121  00CE4A  0101               	movlb	1	; () banked
 18122  00CE4C  510C               	movf	fl_fread@copyCount& (0+255),w,b
 18123  00CE4E  0100               	movlb	0	; () banked
 18124  00CE50  5DE6               	subwf	??_fl_fread& (0+255),w,b
 18125  00CE52  0101               	movlb	1	; () banked
 18126  00CE54  510D               	movf	(fl_fread@copyCount+1)& (0+255),w,b
 18127  00CE56  0A80               	xorlw	128
 18128  00CE58  0100               	movlb	0	; () banked
 18129  00CE5A  59E8               	subwfb	(??_fl_fread+2)& (0+255),w,b
 18130  00CE5C  E213               	bc	l11955
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;fat_filelib.c: 1093: copyCount = (count - bytesRead);
 18134  00CE5E  C110  F0E6         	movff	fl_fread@bytesRead,??_fl_fread
 18135  00CE62  C111  F0E7         	movff	fl_fread@bytesRead+1,??_fl_fread+1
 18136  00CE66  1FE6               	comf	??_fl_fread& (0+255),f,b
 18137  00CE68  1FE7               	comf	(??_fl_fread+1)& (0+255),f,b
 18138  00CE6A  4BE6               	infsnz	??_fl_fread& (0+255),f,b
 18139  00CE6C  2BE7               	incf	(??_fl_fread+1)& (0+255),f,b
 18140  00CE6E  0101               	movlb	1	; () banked
 18141  00CE70  510E               	movf	fl_fread@count& (0+255),w,b
 18142  00CE72  0100               	movlb	0	; () banked
 18143  00CE74  25E6               	addwf	??_fl_fread& (0+255),w,b
 18144  00CE76  0101               	movlb	1	; () banked
 18145  00CE78  6F0C               	movwf	fl_fread@copyCount& (0+255),b
 18146  00CE7A  510F               	movf	(fl_fread@count+1)& (0+255),w,b
 18147  00CE7C  0100               	movlb	0	; () banked
 18148  00CE7E  21E7               	addwfc	(??_fl_fread+1)& (0+255),w,b
 18149  00CE80  0101               	movlb	1	; () banked
 18150  00CE82  6F0D               	movwf	(fl_fread@copyCount+1)& (0+255),b
 18151  00CE84                     l11955:
 18152                           
 18153                           ;fat_filelib.c: 1096: memcpy( (uint8*)((uint8*)buffer + bytesRead), (uint8*)(file->file_
      +                          data_sector + offset), copyCount);
 18154  00CE84  0101               	movlb	1	; () banked
 18155  00CE86  5110               	movf	fl_fread@bytesRead& (0+255),w,b
 18156  00CE88  0100               	movlb	0	; () banked
 18157  00CE8A  25DE               	addwf	fl_fread@buffer& (0+255),w,b
 18158  00CE8C  6E01               	movwf	memcpy@d1,c
 18159  00CE8E  0101               	movlb	1	; () banked
 18160  00CE90  5111               	movf	(fl_fread@bytesRead+1)& (0+255),w,b
 18161  00CE92  0100               	movlb	0	; () banked
 18162  00CE94  21DF               	addwfc	(fl_fread@buffer+1)& (0+255),w,b
 18163  00CE96  6E02               	movwf	memcpy@d1+1,c
 18164  00CE98  0E39               	movlw	57
 18165  00CE9A  0101               	movlb	1	; () banked
 18166  00CE9C  2504               	addwf	fl_fread@offset& (0+255),w,b
 18167  00CE9E  0100               	movlb	0	; () banked
 18168  00CEA0  6FE6               	movwf	??_fl_fread& (0+255),b
 18169  00CEA2  0E00               	movlw	0
 18170  00CEA4  0101               	movlb	1	; () banked
 18171  00CEA6  2105               	addwfc	(fl_fread@offset+1)& (0+255),w,b
 18172  00CEA8  0100               	movlb	0	; () banked
 18173  00CEAA  6FE7               	movwf	(??_fl_fread+1)& (0+255),b
 18174  00CEAC  C112  F0E8         	movff	fl_fread@file,??_fl_fread+2
 18175  00CEB0  C113  F0E9         	movff	fl_fread@file+1,??_fl_fread+3
 18176  00CEB4  51E6               	movf	??_fl_fread& (0+255),w,b
 18177  00CEB6  27E8               	addwf	(??_fl_fread+2)& (0+255),f,b
 18178  00CEB8  51E7               	movf	(??_fl_fread+1)& (0+255),w,b
 18179  00CEBA  23E9               	addwfc	(??_fl_fread+3)& (0+255),f,b
 18180  00CEBC  0E20               	movlw	32
 18181  00CEBE  6E05               	movwf	memcpy@s1+2,c
 18182  00CEC0  C0E9  F004         	movff	??_fl_fread+3,memcpy@s1+1
 18183  00CEC4  C0E8  F003         	movff	??_fl_fread+2,memcpy@s1
 18184  00CEC8  C10C  F006         	movff	fl_fread@copyCount,memcpy@n
 18185  00CECC  C10D  F007         	movff	fl_fread@copyCount+1,memcpy@n+1
 18186  00CED0  ECAE  F023         	call	_memcpy	;wreg free
 18187                           
 18188                           ;fat_filelib.c: 1099: sector++;
 18189  00CED4  0101               	movlb	1	; () banked
 18190  00CED6  2B08               	incf	fl_fread@sector& (0+255),f,b
 18191  00CED8  0E00               	movlw	0
 18192  00CEDA  2309               	addwfc	(fl_fread@sector+1)& (0+255),f,b
 18193  00CEDC  230A               	addwfc	(fl_fread@sector+2)& (0+255),f,b
 18194  00CEDE                     L43:
 18195  00CEDE  0101               	movlb	1	; () banked
 18196  00CEE0  230B               	addwfc	(fl_fread@sector+3)& (0+255),f,b
 18197                           
 18198                           ; BSR set to: 1
 18199                           ;fat_filelib.c: 1100: offset = 0;
 18200  00CEE2  6B04               	clrf	fl_fread@offset& (0+255),b
 18201  00CEE4  6B05               	clrf	(fl_fread@offset+1)& (0+255),b
 18202  00CEE6  6B06               	clrf	(fl_fread@offset+2)& (0+255),b
 18203  00CEE8  6B07               	clrf	(fl_fread@offset+3)& (0+255),b
 18204                           
 18205                           ; BSR set to: 1
 18206                           ;fat_filelib.c: 1101: }
 18207                           ;fat_filelib.c: 1104: bytesRead += copyCount;
 18208                           
 18209                           ; BSR set to: 1
 18210  00CEEA  510C               	movf	fl_fread@copyCount& (0+255),w,b
 18211  00CEEC  2710               	addwf	fl_fread@bytesRead& (0+255),f,b
 18212  00CEEE  510D               	movf	(fl_fread@copyCount+1)& (0+255),w,b
 18213  00CEF0  2311               	addwfc	(fl_fread@bytesRead+1)& (0+255),f,b
 18214                           
 18215                           ; BSR set to: 1
 18216                           ;fat_filelib.c: 1107: file->bytenum += copyCount;
 18217  00CEF2  EE20 F008          	lfsr	2,8
 18218  00CEF6  5112               	movf	fl_fread@file& (0+255),w,b
 18219  00CEF8  26D9               	addwf	fsr2l,f,c
 18220  00CEFA  5113               	movf	(fl_fread@file+1)& (0+255),w,b
 18221  00CEFC  22DA               	addwfc	fsr2h,f,c
 18222  00CEFE  510C               	movf	fl_fread@copyCount& (0+255),w,b
 18223  00CF00  26DE               	addwf	postinc2,f,c
 18224  00CF02  510D               	movf	(fl_fread@copyCount+1)& (0+255),w,b
 18225  00CF04  22DE               	addwfc	postinc2,f,c
 18226  00CF06  0E00               	movlw	0
 18227  00CF08  BF0D               	btfsc	(fl_fread@copyCount+1)& (0+255),7,b
 18228  00CF0A  0EFF               	movlw	255
 18229  00CF0C  22DE               	addwfc	postinc2,f,c
 18230  00CF0E  22DD               	addwfc	postdec2,f,c
 18231  00CF10  52DD               	movf	postdec2,f,c
 18232  00CF12  52DD               	movf	postdec2,f,c
 18233  00CF14                     l11965:
 18234                           
 18235                           ; BSR set to: 1
 18236  00CF14  0101               	movlb	1	; () banked
 18237  00CF16  5111               	movf	(fl_fread@bytesRead+1)& (0+255),w,b
 18238  00CF18  0A80               	xorlw	128
 18239  00CF1A  0100               	movlb	0	; () banked
 18240  00CF1C  6FE6               	movwf	??_fl_fread& (0+255),b
 18241  00CF1E  0101               	movlb	1	; () banked
 18242  00CF20  510E               	movf	fl_fread@count& (0+255),w,b
 18243  00CF22  5D10               	subwf	fl_fread@bytesRead& (0+255),w,b
 18244  00CF24  510F               	movf	(fl_fread@count+1)& (0+255),w,b
 18245  00CF26  0A80               	xorlw	128
 18246  00CF28  0100               	movlb	0	; () banked
 18247  00CF2A  59E6               	subwfb	??_fl_fread& (0+255),w,b
 18248  00CF2C  E201 D671          	bnc	l11927
 18249  00CF30                     l658:
 18250                           
 18251                           ;fat_filelib.c: 1108: }
 18252                           ;fat_filelib.c: 1110: return bytesRead;
 18253  00CF30  C110  F0DE         	movff	fl_fread@bytesRead,?_fl_fread
 18254  00CF34  C111  F0DF         	movff	fl_fread@bytesRead+1,?_fl_fread+1
 18255  00CF38                     l648:
 18256  00CF38  0012               	return	
 18257  00CF3A                     __end_of_fl_fread:
 18258                           	opt stack 0
 18259                           tosu	equ	0xFFF
 18260                           tosh	equ	0xFFE
 18261                           tosl	equ	0xFFD
 18262                           pclath	equ	0xFFA
 18263                           tblptru	equ	0xFF8
 18264                           tblptrh	equ	0xFF7
 18265                           tblptrl	equ	0xFF6
 18266                           tablat	equ	0xFF5
 18267                           prodh	equ	0xFF4
 18268                           prodl	equ	0xFF3
 18269                           indf0	equ	0xFEF
 18270                           postinc0	equ	0xFEE
 18271                           fsr0h	equ	0xFEA
 18272                           fsr0l	equ	0xFE9
 18273                           wreg	equ	0xFE8
 18274                           indf1	equ	0xFE7
 18275                           postinc1	equ	0xFE6
 18276                           postdec1	equ	0xFE5
 18277                           fsr1h	equ	0xFE2
 18278                           fsr1l	equ	0xFE1
 18279                           indf2	equ	0xFDF
 18280                           postinc2	equ	0xFDE
 18281                           postdec2	equ	0xFDD
 18282                           fsr2h	equ	0xFDA
 18283                           fsr2l	equ	0xFD9
 18284                           status	equ	0xFD8
 18285                           
 18286 ;; *************** function __read_sectors *****************
 18287 ;; Defined at:
 18288 ;;		line 551 in file "fat_filelib.c"
 18289 ;; Parameters:    Size  Location     Type
 18290 ;;  file            2    0[BANK0 ] PTR struct sFL_FILE
 18291 ;;		 -> RAM(3967), NULL(0), 
 18292 ;;  offset          4    2[BANK0 ] unsigned long 
 18293 ;;  buffer          2    6[BANK0 ] PTR unsigned char 
 18294 ;;		 -> data(1), fl_fgetc@data(1), RAM(3967), NULL(0), 
 18295 ;;  count           4    8[BANK0 ] unsigned long 
 18296 ;; Auto vars:     Size  Location     Type
 18297 ;;  nextCluster     4   25[BANK0 ] unsigned long 
 18298 ;;  ClusterIdx      4   41[BANK0 ] unsigned long 
 18299 ;;  Cluster         4   37[BANK0 ] unsigned long 
 18300 ;;  i               4   33[BANK0 ] unsigned long 
 18301 ;;  Sector          4   29[BANK0 ] unsigned long 
 18302 ;;  lba             4   21[BANK0 ] unsigned long 
 18303 ;; Return value:  Size  Location     Type
 18304 ;;                  4    0[BANK0 ] unsigned long 
 18305 ;; Registers used:
 18306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 18307 ;; Tracked objects:
 18308 ;;		On entry : 0/0
 18309 ;;		On exit  : 0/0
 18310 ;;		Unchanged: 0/0
 18311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18312 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18313 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18314 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18315 ;;      Totals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18316 ;;Total ram usage:       45 bytes
 18317 ;; Hardware stack levels used:    1
 18318 ;; Hardware stack levels required when called:    6
 18319 ;; This function calls:
 18320 ;;		___lldiv
 18321 ;;		_fatfs_cache_get_next_cluster
 18322 ;;		_fatfs_cache_set_next_cluster
 18323 ;;		_fatfs_find_next_cluster
 18324 ;;		_fatfs_lba_of_cluster
 18325 ;;		_fatfs_sector_read
 18326 ;; This function is called by:
 18327 ;;		_fl_fread
 18328 ;;		_fl_fwrite
 18329 ;; This function uses a non-reentrant model
 18330 ;;
 18331                           
 18332                           	psect	text46
 18333  00B80E                     __ptext46:
 18334                           	opt stack 0
 18335  00B80E                     __read_sectors:
 18336                           	opt stack 21
 18337                           
 18338                           ;fat_filelib.c: 553: uint32 Sector = 0;
 18339                           
 18340                           ;incstack = 0
 18341  00B80E  0100               	movlb	0	; () banked
 18342  00B810  6B9D               	clrf	__read_sectors@Sector& (0+255),b
 18343  00B812  6B9E               	clrf	(__read_sectors@Sector+1)& (0+255),b
 18344  00B814  6B9F               	clrf	(__read_sectors@Sector+2)& (0+255),b
 18345  00B816  6BA0               	clrf	(__read_sectors@Sector+3)& (0+255),b
 18346                           
 18347                           ;fat_filelib.c: 554: uint32 ClusterIdx = 0;
 18348  00B818  6BA9               	clrf	__read_sectors@ClusterIdx& (0+255),b
 18349  00B81A  6BAA               	clrf	(__read_sectors@ClusterIdx+1)& (0+255),b
 18350  00B81C  6BAB               	clrf	(__read_sectors@ClusterIdx+2)& (0+255),b
 18351  00B81E  6BAC               	clrf	(__read_sectors@ClusterIdx+3)& (0+255),b
 18352                           
 18353                           ;fat_filelib.c: 555: uint32 Cluster = 0;
 18354  00B820  6BA5               	clrf	__read_sectors@Cluster& (0+255),b
 18355  00B822  6BA6               	clrf	(__read_sectors@Cluster+1)& (0+255),b
 18356  00B824  6BA7               	clrf	(__read_sectors@Cluster+2)& (0+255),b
 18357  00B826  6BA8               	clrf	(__read_sectors@Cluster+3)& (0+255),b
 18358                           
 18359                           ; BSR set to: 0
 18360                           ;fat_filelib.c: 556: uint32 i;
 18361                           ;fat_filelib.c: 557: uint32 lba;
 18362                           ;fat_filelib.c: 560: ClusterIdx = offset / _fs.sectors_per_cluster;
 18363  00B828  C082  F001         	movff	__read_sectors@offset,___lldiv@dividend
 18364  00B82C  C083  F002         	movff	__read_sectors@offset+1,___lldiv@dividend+1
 18365  00B830  C084  F003         	movff	__read_sectors@offset+2,___lldiv@dividend+2
 18366  00B834  C085  F004         	movff	__read_sectors@offset+3,___lldiv@dividend+3
 18367  00B838  C978  F08C         	movff	__fs,??__read_sectors
 18368  00B83C  518C               	movf	??__read_sectors& (0+255),w,b
 18369  00B83E  6E05               	movwf	___lldiv@divisor,c
 18370  00B840  6A06               	clrf	___lldiv@divisor+1,c
 18371  00B842  6A07               	clrf	___lldiv@divisor+2,c
 18372  00B844  6A08               	clrf	___lldiv@divisor+3,c
 18373  00B846  EC85  F026         	call	___lldiv	;wreg free
 18374  00B84A  C001  F0A9         	movff	?___lldiv,__read_sectors@ClusterIdx
 18375  00B84E  C002  F0AA         	movff	?___lldiv+1,__read_sectors@ClusterIdx+1
 18376  00B852  C003  F0AB         	movff	?___lldiv+2,__read_sectors@ClusterIdx+2
 18377  00B856  C004  F0AC         	movff	?___lldiv+3,__read_sectors@ClusterIdx+3
 18378                           
 18379                           ;fat_filelib.c: 561: Sector = offset - (ClusterIdx * _fs.sectors_per_cluster);
 18380  00B85A  C978  F08C         	movff	__fs,??__read_sectors
 18381  00B85E  C08C  F08D         	movff	??__read_sectors,??__read_sectors+1
 18382  00B862  0100               	movlb	0	; () banked
 18383  00B864  6B8E               	clrf	(??__read_sectors+2)& (0+255),b
 18384  00B866  6B8F               	clrf	(??__read_sectors+3)& (0+255),b
 18385  00B868  6B90               	clrf	(??__read_sectors+4)& (0+255),b
 18386  00B86A  518D               	movf	(??__read_sectors+1)& (0+255),w,b
 18387  00B86C  03A9               	mulwf	__read_sectors@ClusterIdx& (0+255),b
 18388  00B86E  CFF3 F091          	movff	prodl,??__read_sectors+5
 18389  00B872  CFF4 F092          	movff	prodh,??__read_sectors+6
 18390  00B876  6B93               	clrf	(??__read_sectors+7)& (0+255),b
 18391  00B878  6B94               	clrf	(??__read_sectors+8)& (0+255),b
 18392  00B87A  03AA               	mulwf	(__read_sectors@ClusterIdx+1)& (0+255),b
 18393  00B87C  50F3               	movf	243,w,c
 18394  00B87E  2792               	addwf	(??__read_sectors+6)& (0+255),f,b
 18395  00B880  50F4               	movf	244,w,c
 18396  00B882  2393               	addwfc	(??__read_sectors+7)& (0+255),f,b
 18397  00B884  0E00               	movlw	0
 18398  00B886  2394               	addwfc	(??__read_sectors+8)& (0+255),f,b
 18399  00B888  518E               	movf	(??__read_sectors+2)& (0+255),w,b
 18400  00B88A  03A9               	mulwf	__read_sectors@ClusterIdx& (0+255),b
 18401  00B88C  50F3               	movf	243,w,c
 18402  00B88E  2792               	addwf	(??__read_sectors+6)& (0+255),f,b
 18403  00B890  50F4               	movf	244,w,c
 18404  00B892  2393               	addwfc	(??__read_sectors+7)& (0+255),f,b
 18405  00B894  0E00               	movlw	0
 18406  00B896  2394               	addwfc	(??__read_sectors+8)& (0+255),f,b
 18407  00B898  518D               	movf	(??__read_sectors+1)& (0+255),w,b
 18408  00B89A  03AB               	mulwf	(__read_sectors@ClusterIdx+2)& (0+255),b
 18409  00B89C  50F3               	movf	243,w,c
 18410  00B89E  2793               	addwf	(??__read_sectors+7)& (0+255),f,b
 18411  00B8A0  50F4               	movf	244,w,c
 18412  00B8A2  2394               	addwfc	(??__read_sectors+8)& (0+255),f,b
 18413  00B8A4  518E               	movf	(??__read_sectors+2)& (0+255),w,b
 18414  00B8A6  03AA               	mulwf	(__read_sectors@ClusterIdx+1)& (0+255),b
 18415  00B8A8  50F3               	movf	243,w,c
 18416  00B8AA  2793               	addwf	(??__read_sectors+7)& (0+255),f,b
 18417  00B8AC  50F4               	movf	244,w,c
 18418  00B8AE  2394               	addwfc	(??__read_sectors+8)& (0+255),f,b
 18419  00B8B0  518F               	movf	(??__read_sectors+3)& (0+255),w,b
 18420  00B8B2  03A9               	mulwf	__read_sectors@ClusterIdx& (0+255),b
 18421  00B8B4  50F3               	movf	243,w,c
 18422  00B8B6  2793               	addwf	(??__read_sectors+7)& (0+255),f,b
 18423  00B8B8  50F4               	movf	244,w,c
 18424  00B8BA  2394               	addwfc	(??__read_sectors+8)& (0+255),f,b
 18425  00B8BC  51AC               	movf	(__read_sectors@ClusterIdx+3)& (0+255),w,b
 18426  00B8BE  038D               	mulwf	(??__read_sectors+1)& (0+255),b
 18427  00B8C0  50F3               	movf	243,w,c
 18428  00B8C2  2794               	addwf	(??__read_sectors+8)& (0+255),f,b
 18429  00B8C4  518E               	movf	(??__read_sectors+2)& (0+255),w,b
 18430  00B8C6  03AB               	mulwf	(__read_sectors@ClusterIdx+2)& (0+255),b
 18431  00B8C8  50F3               	movf	243,w,c
 18432  00B8CA  2794               	addwf	(??__read_sectors+8)& (0+255),f,b
 18433  00B8CC  518F               	movf	(??__read_sectors+3)& (0+255),w,b
 18434  00B8CE  03AA               	mulwf	(__read_sectors@ClusterIdx+1)& (0+255),b
 18435  00B8D0  50F3               	movf	243,w,c
 18436  00B8D2  2794               	addwf	(??__read_sectors+8)& (0+255),f,b
 18437  00B8D4  5190               	movf	(??__read_sectors+4)& (0+255),w,b
 18438  00B8D6  03A9               	mulwf	__read_sectors@ClusterIdx& (0+255),b
 18439  00B8D8  50F3               	movf	243,w,c
 18440  00B8DA  2794               	addwf	(??__read_sectors+8)& (0+255),f,b
 18441  00B8DC  1F91               	comf	(??__read_sectors+5)& (0+255),f,b
 18442  00B8DE  1F92               	comf	(??__read_sectors+6)& (0+255),f,b
 18443  00B8E0  1F93               	comf	(??__read_sectors+7)& (0+255),f,b
 18444  00B8E2  1F94               	comf	(??__read_sectors+8)& (0+255),f,b
 18445  00B8E4  2B91               	incf	(??__read_sectors+5)& (0+255),f,b
 18446  00B8E6  0E00               	movlw	0
 18447  00B8E8  2392               	addwfc	(??__read_sectors+6)& (0+255),f,b
 18448  00B8EA  2393               	addwfc	(??__read_sectors+7)& (0+255),f,b
 18449  00B8EC  2394               	addwfc	(??__read_sectors+8)& (0+255),f,b
 18450  00B8EE  5182               	movf	__read_sectors@offset& (0+255),w,b
 18451  00B8F0  2591               	addwf	(??__read_sectors+5)& (0+255),w,b
 18452  00B8F2  6F9D               	movwf	__read_sectors@Sector& (0+255),b
 18453  00B8F4  5183               	movf	(__read_sectors@offset+1)& (0+255),w,b
 18454  00B8F6  2192               	addwfc	(??__read_sectors+6)& (0+255),w,b
 18455  00B8F8  6F9E               	movwf	(__read_sectors@Sector+1)& (0+255),b
 18456  00B8FA  5184               	movf	(__read_sectors@offset+2)& (0+255),w,b
 18457  00B8FC  2193               	addwfc	(??__read_sectors+7)& (0+255),w,b
 18458  00B8FE  6F9F               	movwf	(__read_sectors@Sector+2)& (0+255),b
 18459  00B900  5185               	movf	(__read_sectors@offset+3)& (0+255),w,b
 18460  00B902  2194               	addwfc	(??__read_sectors+8)& (0+255),w,b
 18461  00B904  6FA0               	movwf	(__read_sectors@Sector+3)& (0+255),b
 18462                           
 18463                           ; BSR set to: 0
 18464                           ;fat_filelib.c: 564: if ((Sector + count) > _fs.sectors_per_cluster)
 18465  00B906  5188               	movf	__read_sectors@count& (0+255),w,b
 18466  00B908  259D               	addwf	__read_sectors@Sector& (0+255),w,b
 18467  00B90A  6F8C               	movwf	??__read_sectors& (0+255),b
 18468  00B90C  5189               	movf	(__read_sectors@count+1)& (0+255),w,b
 18469  00B90E  219E               	addwfc	(__read_sectors@Sector+1)& (0+255),w,b
 18470  00B910  6F8D               	movwf	(??__read_sectors+1)& (0+255),b
 18471  00B912  518A               	movf	(__read_sectors@count+2)& (0+255),w,b
 18472  00B914  219F               	addwfc	(__read_sectors@Sector+2)& (0+255),w,b
 18473  00B916  6F8E               	movwf	(??__read_sectors+2)& (0+255),b
 18474  00B918  518B               	movf	(__read_sectors@count+3)& (0+255),w,b
 18475  00B91A  21A0               	addwfc	(__read_sectors@Sector+3)& (0+255),w,b
 18476  00B91C  6F8F               	movwf	(??__read_sectors+3)& (0+255),b
 18477  00B91E  C978  F090         	movff	__fs,??__read_sectors+4
 18478  00B922  C090  F091         	movff	??__read_sectors+4,??__read_sectors+5
 18479  00B926  6B92               	clrf	(??__read_sectors+6)& (0+255),b
 18480  00B928  6B93               	clrf	(??__read_sectors+7)& (0+255),b
 18481  00B92A  6B94               	clrf	(??__read_sectors+8)& (0+255),b
 18482  00B92C  518C               	movf	??__read_sectors& (0+255),w,b
 18483  00B92E  5D91               	subwf	(??__read_sectors+5)& (0+255),w,b
 18484  00B930  518D               	movf	(??__read_sectors+1)& (0+255),w,b
 18485  00B932  5992               	subwfb	(??__read_sectors+6)& (0+255),w,b
 18486  00B934  518E               	movf	(??__read_sectors+2)& (0+255),w,b
 18487  00B936  5993               	subwfb	(??__read_sectors+7)& (0+255),w,b
 18488  00B938  518F               	movf	(??__read_sectors+3)& (0+255),w,b
 18489  00B93A  5994               	subwfb	(??__read_sectors+8)& (0+255),w,b
 18490  00B93C  E21F               	bc	l11401
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;fat_filelib.c: 565: count = _fs.sectors_per_cluster - Sector;
 18494  00B93E  C09D  F08C         	movff	__read_sectors@Sector,??__read_sectors
 18495  00B942  C09E  F08D         	movff	__read_sectors@Sector+1,??__read_sectors+1
 18496  00B946  C09F  F08E         	movff	__read_sectors@Sector+2,??__read_sectors+2
 18497  00B94A  C0A0  F08F         	movff	__read_sectors@Sector+3,??__read_sectors+3
 18498  00B94E  1F8C               	comf	??__read_sectors& (0+255),f,b
 18499  00B950  1F8D               	comf	(??__read_sectors+1)& (0+255),f,b
 18500  00B952  1F8E               	comf	(??__read_sectors+2)& (0+255),f,b
 18501  00B954  1F8F               	comf	(??__read_sectors+3)& (0+255),f,b
 18502  00B956  2B8C               	incf	??__read_sectors& (0+255),f,b
 18503  00B958  0E00               	movlw	0
 18504  00B95A  238D               	addwfc	(??__read_sectors+1)& (0+255),f,b
 18505  00B95C  238E               	addwfc	(??__read_sectors+2)& (0+255),f,b
 18506  00B95E  238F               	addwfc	(??__read_sectors+3)& (0+255),f,b
 18507  00B960  C978  F090         	movff	__fs,??__read_sectors+4
 18508  00B964  5190               	movf	(??__read_sectors+4)& (0+255),w,b
 18509  00B966  258C               	addwf	??__read_sectors& (0+255),w,b
 18510  00B968  6F88               	movwf	__read_sectors@count& (0+255),b
 18511  00B96A  0E00               	movlw	0
 18512  00B96C  218D               	addwfc	(??__read_sectors+1)& (0+255),w,b
 18513  00B96E  6F89               	movwf	(__read_sectors@count+1)& (0+255),b
 18514  00B970  0E00               	movlw	0
 18515  00B972  218E               	addwfc	(??__read_sectors+2)& (0+255),w,b
 18516  00B974  6F8A               	movwf	(__read_sectors@count+2)& (0+255),b
 18517  00B976  0E00               	movlw	0
 18518  00B978  218F               	addwfc	(??__read_sectors+3)& (0+255),w,b
 18519  00B97A  6F8B               	movwf	(__read_sectors@count+3)& (0+255),b
 18520  00B97C                     l11401:
 18521                           
 18522                           ; BSR set to: 0
 18523                           ;fat_filelib.c: 568: if (ClusterIdx == file->last_fat_lookup.ClusterIdx)
 18524  00B97C  EE20 F031          	lfsr	2,49
 18525  00B980  0100               	movlb	0	; () banked
 18526  00B982  5180               	movf	__read_sectors@file& (0+255),w,b
 18527  00B984  26D9               	addwf	fsr2l,f,c
 18528  00B986  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18529  00B988  22DA               	addwfc	fsr2h,f,c
 18530  00B98A  CFDE F08C          	movff	postinc2,??__read_sectors
 18531  00B98E  CFDE F08D          	movff	postinc2,??__read_sectors+1
 18532  00B992  CFDE F08E          	movff	postinc2,??__read_sectors+2
 18533  00B996  CFDE F08F          	movff	postinc2,??__read_sectors+3
 18534  00B99A  51AC               	movf	(__read_sectors@ClusterIdx+3)& (0+255),w,b
 18535  00B99C  198F               	xorwf	(??__read_sectors+3)& (0+255),w,b
 18536  00B99E  E108               	bnz	u13215
 18537  00B9A0  51AB               	movf	(__read_sectors@ClusterIdx+2)& (0+255),w,b
 18538  00B9A2  198E               	xorwf	(??__read_sectors+2)& (0+255),w,b
 18539  00B9A4  E105               	bnz	u13215
 18540  00B9A6  51AA               	movf	(__read_sectors@ClusterIdx+1)& (0+255),w,b
 18541  00B9A8  198D               	xorwf	(??__read_sectors+1)& (0+255),w,b
 18542  00B9AA  E102               	bnz	u13215
 18543  00B9AC  51A9               	movf	__read_sectors@ClusterIdx& (0+255),w,b
 18544  00B9AE  198C               	xorwf	??__read_sectors& (0+255),w,b
 18545  00B9B0                     u13215:
 18546  00B9B0  E110               	bnz	l11405
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;fat_filelib.c: 569: Cluster = file->last_fat_lookup.CurrentCluster;
 18550  00B9B2  EE20 F035          	lfsr	2,53
 18551  00B9B6  0100               	movlb	0	; () banked
 18552  00B9B8  5180               	movf	__read_sectors@file& (0+255),w,b
 18553  00B9BA  26D9               	addwf	fsr2l,f,c
 18554  00B9BC  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18555  00B9BE  22DA               	addwfc	fsr2h,f,c
 18556  00B9C0  CFDE F0A5          	movff	postinc2,__read_sectors@Cluster
 18557  00B9C4  CFDE F0A6          	movff	postinc2,__read_sectors@Cluster+1
 18558  00B9C8  CFDE F0A7          	movff	postinc2,__read_sectors@Cluster+2
 18559  00B9CC  CFDE F0A8          	movff	postinc2,__read_sectors@Cluster+3
 18560  00B9D0  D0D8               	goto	l11431
 18561  00B9D2                     l11405:
 18562                           
 18563                           ; BSR set to: 0
 18564                           ;fat_filelib.c: 571: else
 18565                           ;fat_filelib.c: 572: {
 18566                           ;fat_filelib.c: 574: if (ClusterIdx && ClusterIdx == file->last_fat_lookup.ClusterIdx + 
      +                          1)
 18567  00B9D2  0100               	movlb	0	; () banked
 18568  00B9D4  51AC               	movf	(__read_sectors@ClusterIdx+3)& (0+255),w,b
 18569  00B9D6  11A9               	iorwf	__read_sectors@ClusterIdx& (0+255),w,b
 18570  00B9D8  11AA               	iorwf	(__read_sectors@ClusterIdx+1)& (0+255),w,b
 18571  00B9DA  11AB               	iorwf	(__read_sectors@ClusterIdx+2)& (0+255),w,b
 18572  00B9DC  E036               	bz	l11411
 18573                           
 18574                           ; BSR set to: 0
 18575  00B9DE  EE20 F031          	lfsr	2,49
 18576  00B9E2  5180               	movf	__read_sectors@file& (0+255),w,b
 18577  00B9E4  26D9               	addwf	fsr2l,f,c
 18578  00B9E6  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18579  00B9E8  22DA               	addwfc	fsr2h,f,c
 18580  00B9EA  CFDE F08C          	movff	postinc2,??__read_sectors
 18581  00B9EE  CFDE F08D          	movff	postinc2,??__read_sectors+1
 18582  00B9F2  CFDE F08E          	movff	postinc2,??__read_sectors+2
 18583  00B9F6  CFDE F08F          	movff	postinc2,??__read_sectors+3
 18584  00B9FA  298C               	incf	??__read_sectors& (0+255),w,b
 18585  00B9FC  6F90               	movwf	(??__read_sectors+4)& (0+255),b
 18586  00B9FE  0E00               	movlw	0
 18587  00BA00  218D               	addwfc	(??__read_sectors+1)& (0+255),w,b
 18588  00BA02  6F91               	movwf	(??__read_sectors+5)& (0+255),b
 18589  00BA04  0E00               	movlw	0
 18590  00BA06  218E               	addwfc	(??__read_sectors+2)& (0+255),w,b
 18591  00BA08  6F92               	movwf	(??__read_sectors+6)& (0+255),b
 18592  00BA0A  0E00               	movlw	0
 18593  00BA0C  218F               	addwfc	(??__read_sectors+3)& (0+255),w,b
 18594  00BA0E  6F93               	movwf	(??__read_sectors+7)& (0+255),b
 18595  00BA10  19AC               	xorwf	(__read_sectors@ClusterIdx+3)& (0+255),w,b
 18596  00BA12  E108               	bnz	u13235
 18597  00BA14  51AB               	movf	(__read_sectors@ClusterIdx+2)& (0+255),w,b
 18598  00BA16  1992               	xorwf	(??__read_sectors+6)& (0+255),w,b
 18599  00BA18  E105               	bnz	u13235
 18600  00BA1A  51AA               	movf	(__read_sectors@ClusterIdx+1)& (0+255),w,b
 18601  00BA1C  1991               	xorwf	(??__read_sectors+5)& (0+255),w,b
 18602  00BA1E  E102               	bnz	u13235
 18603  00BA20  51A9               	movf	__read_sectors@ClusterIdx& (0+255),w,b
 18604  00BA22  1990               	xorwf	(??__read_sectors+4)& (0+255),w,b
 18605  00BA24                     u13235:
 18606  00BA24  E112               	bnz	l11411
 18607                           
 18608                           ; BSR set to: 0
 18609                           ;fat_filelib.c: 575: {
 18610                           ;fat_filelib.c: 576: i = file->last_fat_lookup.ClusterIdx;
 18611  00BA26  EE20 F031          	lfsr	2,49
 18612  00BA2A  0100               	movlb	0	; () banked
 18613  00BA2C  5180               	movf	__read_sectors@file& (0+255),w,b
 18614  00BA2E  26D9               	addwf	fsr2l,f,c
 18615  00BA30  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18616  00BA32  22DA               	addwfc	fsr2h,f,c
 18617  00BA34  CFDE F0A1          	movff	postinc2,__read_sectors@i
 18618  00BA38  CFDE F0A2          	movff	postinc2,__read_sectors@i+1
 18619  00BA3C  CFDE F0A3          	movff	postinc2,__read_sectors@i+2
 18620  00BA40  CFDE F0A4          	movff	postinc2,__read_sectors@i+3
 18621                           
 18622                           ;fat_filelib.c: 577: Cluster = file->last_fat_lookup.CurrentCluster;
 18623  00BA44  EE20 F035          	lfsr	2,53
 18624  00BA48  D007               	goto	L44
 18625  00BA4A                     l11411:
 18626                           
 18627                           ; BSR set to: 0
 18628                           ;fat_filelib.c: 580: else
 18629                           ;fat_filelib.c: 581: {
 18630                           ;fat_filelib.c: 583: i = 0;
 18631  00BA4A  0100               	movlb	0	; () banked
 18632  00BA4C  6BA1               	clrf	__read_sectors@i& (0+255),b
 18633  00BA4E  6BA2               	clrf	(__read_sectors@i+1)& (0+255),b
 18634  00BA50  6BA3               	clrf	(__read_sectors@i+2)& (0+255),b
 18635  00BA52  6BA4               	clrf	(__read_sectors@i+3)& (0+255),b
 18636                           
 18637                           ; BSR set to: 0
 18638                           ;fat_filelib.c: 584: Cluster = file->startcluster;
 18639  00BA54  EE20 F004          	lfsr	2,4
 18640  00BA58                     L44:
 18641  00BA58  0100               	movlb	0	; () banked
 18642  00BA5A  5180               	movf	__read_sectors@file& (0+255),w,b
 18643  00BA5C  26D9               	addwf	fsr2l,f,c
 18644  00BA5E  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18645  00BA60  22DA               	addwfc	fsr2h,f,c
 18646  00BA62  CFDE F0A5          	movff	postinc2,__read_sectors@Cluster
 18647  00BA66  CFDE F0A6          	movff	postinc2,__read_sectors@Cluster+1
 18648  00BA6A  CFDE F0A7          	movff	postinc2,__read_sectors@Cluster+2
 18649  00BA6E  CFDE F0A8          	movff	postinc2,__read_sectors@Cluster+3
 18650  00BA72  D059               	goto	l11425
 18651  00BA74                     l11415:
 18652                           
 18653                           ; BSR set to: 0
 18654                           ;fat_filelib.c: 589: {
 18655                           ;fat_filelib.c: 590: uint32 nextCluster;
 18656                           ;fat_filelib.c: 593: if (!fatfs_cache_get_next_cluster(&_fs, file, i, &nextCluster))
 18657  00BA74  0E09               	movlw	high __fs
 18658  00BA76  6E02               	movwf	fatfs_cache_get_next_cluster@fs+1,c
 18659  00BA78  0E78               	movlw	low __fs
 18660  00BA7A  6E01               	movwf	fatfs_cache_get_next_cluster@fs,c
 18661  00BA7C  C081  F004         	movff	__read_sectors@file+1,fatfs_cache_get_next_cluster@file+1
 18662  00BA80  C080  F003         	movff	__read_sectors@file,fatfs_cache_get_next_cluster@file
 18663  00BA84  C0A1  F005         	movff	__read_sectors@i,fatfs_cache_get_next_cluster@clusterIdx
 18664  00BA88  C0A2  F006         	movff	__read_sectors@i+1,fatfs_cache_get_next_cluster@clusterIdx+1
 18665  00BA8C  C0A3  F007         	movff	__read_sectors@i+2,fatfs_cache_get_next_cluster@clusterIdx+2
 18666  00BA90  C0A4  F008         	movff	__read_sectors@i+3,fatfs_cache_get_next_cluster@clusterIdx+3
 18667  00BA94  0E00               	movlw	high __read_sectors@nextCluster
 18668  00BA96  6E0A               	movwf	fatfs_cache_get_next_cluster@pNextCluster+1,c
 18669  00BA98  0100               	movlb	0	; () banked
 18670  00BA9A  0E99               	movlw	low __read_sectors@nextCluster
 18671  00BA9C  6E09               	movwf	fatfs_cache_get_next_cluster@pNextCluster,c
 18672  00BA9E  EC28  F01F         	call	_fatfs_cache_get_next_cluster	;wreg free
 18673  00BAA2  5002               	movf	?_fatfs_cache_get_next_cluster+1,w,c
 18674  00BAA4  1001               	iorwf	?_fatfs_cache_get_next_cluster,w,c
 18675  00BAA6  E131               	bnz	l11421
 18676                           
 18677                           ;fat_filelib.c: 594: {
 18678                           ;fat_filelib.c: 596: nextCluster = fatfs_find_next_cluster(&_fs, Cluster);
 18679  00BAA8  0E09               	movlw	high __fs
 18680  00BAAA  6E47               	movwf	fatfs_find_next_cluster@fs+1,c
 18681  00BAAC  0E78               	movlw	low __fs
 18682  00BAAE  6E46               	movwf	fatfs_find_next_cluster@fs,c
 18683  00BAB0  C0A5  F048         	movff	__read_sectors@Cluster,fatfs_find_next_cluster@current_cluster
 18684  00BAB4  C0A6  F049         	movff	__read_sectors@Cluster+1,fatfs_find_next_cluster@current_cluster+1
 18685  00BAB8  C0A7  F04A         	movff	__read_sectors@Cluster+2,fatfs_find_next_cluster@current_cluster+2
 18686  00BABC  C0A8  F04B         	movff	__read_sectors@Cluster+3,fatfs_find_next_cluster@current_cluster+3
 18687  00BAC0  EC9F  F054         	call	_fatfs_find_next_cluster	;wreg free
 18688  00BAC4  C046  F099         	movff	?_fatfs_find_next_cluster,__read_sectors@nextCluster
 18689  00BAC8  C047  F09A         	movff	?_fatfs_find_next_cluster+1,__read_sectors@nextCluster+1
 18690  00BACC  C048  F09B         	movff	?_fatfs_find_next_cluster+2,__read_sectors@nextCluster+2
 18691  00BAD0  C049  F09C         	movff	?_fatfs_find_next_cluster+3,__read_sectors@nextCluster+3
 18692                           
 18693                           ;fat_filelib.c: 599: fatfs_cache_set_next_cluster(&_fs, file, i, nextCluster);
 18694  00BAD4  0E09               	movlw	high __fs
 18695  00BAD6  6E02               	movwf	fatfs_cache_set_next_cluster@fs+1,c
 18696  00BAD8  0E78               	movlw	low __fs
 18697  00BADA  6E01               	movwf	fatfs_cache_set_next_cluster@fs,c
 18698  00BADC  C081  F004         	movff	__read_sectors@file+1,fatfs_cache_set_next_cluster@file+1
 18699  00BAE0  0100               	movlb	0	; () banked
 18700  00BAE2  C080  F003         	movff	__read_sectors@file,fatfs_cache_set_next_cluster@file
 18701  00BAE6  C0A1  F005         	movff	__read_sectors@i,fatfs_cache_set_next_cluster@clusterIdx
 18702  00BAEA  C0A2  F006         	movff	__read_sectors@i+1,fatfs_cache_set_next_cluster@clusterIdx+1
 18703  00BAEE  C0A3  F007         	movff	__read_sectors@i+2,fatfs_cache_set_next_cluster@clusterIdx+2
 18704  00BAF2  C0A4  F008         	movff	__read_sectors@i+3,fatfs_cache_set_next_cluster@clusterIdx+3
 18705  00BAF6  C099  F009         	movff	__read_sectors@nextCluster,fatfs_cache_set_next_cluster@nextCluster
 18706  00BAFA  C09A  F00A         	movff	__read_sectors@nextCluster+1,fatfs_cache_set_next_cluster@nextCluster+1
 18707  00BAFE  C09B  F00B         	movff	__read_sectors@nextCluster+2,fatfs_cache_set_next_cluster@nextCluster+2
 18708  00BB02  C09C  F00C         	movff	__read_sectors@nextCluster+3,fatfs_cache_set_next_cluster@nextCluster+3
 18709  00BB06  EC21  F01F         	call	_fatfs_cache_set_next_cluster	;wreg free
 18710  00BB0A                     l11421:
 18711                           
 18712                           ;fat_filelib.c: 600: }
 18713                           ;fat_filelib.c: 602: Cluster = nextCluster;
 18714  00BB0A  C099  F0A5         	movff	__read_sectors@nextCluster,__read_sectors@Cluster
 18715  00BB0E  C09A  F0A6         	movff	__read_sectors@nextCluster+1,__read_sectors@Cluster+1
 18716  00BB12  C09B  F0A7         	movff	__read_sectors@nextCluster+2,__read_sectors@Cluster+2
 18717  00BB16  C09C  F0A8         	movff	__read_sectors@nextCluster+3,__read_sectors@Cluster+3
 18718  00BB1A  0100               	movlb	0	; () banked
 18719  00BB1C  2BA1               	incf	__read_sectors@i& (0+255),f,b
 18720  00BB1E  0E00               	movlw	0
 18721  00BB20  23A2               	addwfc	(__read_sectors@i+1)& (0+255),f,b
 18722  00BB22  23A3               	addwfc	(__read_sectors@i+2)& (0+255),f,b
 18723  00BB24  23A4               	addwfc	(__read_sectors@i+3)& (0+255),f,b
 18724  00BB26                     l11425:
 18725                           
 18726                           ; BSR set to: 0
 18727  00BB26  0100               	movlb	0	; () banked
 18728  00BB28  51A9               	movf	__read_sectors@ClusterIdx& (0+255),w,b
 18729  00BB2A  5DA1               	subwf	__read_sectors@i& (0+255),w,b
 18730  00BB2C  51AA               	movf	(__read_sectors@ClusterIdx+1)& (0+255),w,b
 18731  00BB2E  59A2               	subwfb	(__read_sectors@i+1)& (0+255),w,b
 18732  00BB30  51AB               	movf	(__read_sectors@ClusterIdx+2)& (0+255),w,b
 18733  00BB32  59A3               	subwfb	(__read_sectors@i+2)& (0+255),w,b
 18734  00BB34  51AC               	movf	(__read_sectors@ClusterIdx+3)& (0+255),w,b
 18735  00BB36  59A4               	subwfb	(__read_sectors@i+3)& (0+255),w,b
 18736  00BB38  E39D               	bnc	l11415
 18737                           
 18738                           ; BSR set to: 0
 18739                           ;fat_filelib.c: 603: }
 18740                           ;fat_filelib.c: 606: if (Cluster != 0xFFFFFFFF)
 18741                           
 18742                           ; BSR set to: 0
 18743  00BB3A  29A5               	incf	__read_sectors@Cluster& (0+255),w,b
 18744  00BB3C  B4D8               	btfsc	status,2,c
 18745  00BB3E  29A6               	incf	(__read_sectors@Cluster+1)& (0+255),w,b
 18746  00BB40  B4D8               	btfsc	status,2,c
 18747  00BB42  29A7               	incf	(__read_sectors@Cluster+2)& (0+255),w,b
 18748  00BB44  B4D8               	btfsc	status,2,c
 18749  00BB46  29A8               	incf	(__read_sectors@Cluster+3)& (0+255),w,b
 18750  00BB48  E01C               	bz	l11431
 18751                           
 18752                           ; BSR set to: 0
 18753                           ;fat_filelib.c: 607: {
 18754                           ;fat_filelib.c: 608: file->last_fat_lookup.CurrentCluster = Cluster;
 18755  00BB4A  EE20 F035          	lfsr	2,53
 18756  00BB4E  5180               	movf	__read_sectors@file& (0+255),w,b
 18757  00BB50  26D9               	addwf	fsr2l,f,c
 18758  00BB52  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18759  00BB54  22DA               	addwfc	fsr2h,f,c
 18760  00BB56  C0A5  FFDE         	movff	__read_sectors@Cluster,postinc2
 18761  00BB5A  C0A6  FFDE         	movff	__read_sectors@Cluster+1,postinc2
 18762  00BB5E  C0A7  FFDE         	movff	__read_sectors@Cluster+2,postinc2
 18763  00BB62  C0A8  FFDE         	movff	__read_sectors@Cluster+3,postinc2
 18764                           
 18765                           ;fat_filelib.c: 609: file->last_fat_lookup.ClusterIdx = ClusterIdx;
 18766  00BB66  EE20 F031          	lfsr	2,49
 18767  00BB6A  5180               	movf	__read_sectors@file& (0+255),w,b
 18768  00BB6C  26D9               	addwf	fsr2l,f,c
 18769  00BB6E  5181               	movf	(__read_sectors@file+1)& (0+255),w,b
 18770  00BB70  22DA               	addwfc	fsr2h,f,c
 18771  00BB72  C0A9  FFDE         	movff	__read_sectors@ClusterIdx,postinc2
 18772  00BB76  C0AA  FFDE         	movff	__read_sectors@ClusterIdx+1,postinc2
 18773  00BB7A  C0AB  FFDE         	movff	__read_sectors@ClusterIdx+2,postinc2
 18774  00BB7E  C0AC  FFDE         	movff	__read_sectors@ClusterIdx+3,postinc2
 18775  00BB82                     l11431:
 18776                           
 18777                           ; BSR set to: 0
 18778                           ;fat_filelib.c: 610: }
 18779                           ;fat_filelib.c: 611: }
 18780                           ;fat_filelib.c: 614: if (Cluster == 0xFFFFFFFF)
 18781  00BB82  0100               	movlb	0	; () banked
 18782  00BB84  29A5               	incf	__read_sectors@Cluster& (0+255),w,b
 18783  00BB86  B4D8               	btfsc	status,2,c
 18784  00BB88  29A6               	incf	(__read_sectors@Cluster+1)& (0+255),w,b
 18785  00BB8A  B4D8               	btfsc	status,2,c
 18786  00BB8C  29A7               	incf	(__read_sectors@Cluster+2)& (0+255),w,b
 18787  00BB8E  B4D8               	btfsc	status,2,c
 18788  00BB90  29A8               	incf	(__read_sectors@Cluster+3)& (0+255),w,b
 18789  00BB92  E049               	bz	l11445
 18790                           
 18791                           ; BSR set to: 0
 18792                           ;fat_filelib.c: 618: lba = fatfs_lba_of_cluster(&_fs, Cluster) + Sector;
 18793                           
 18794                           ; BSR set to: 0
 18795                           
 18796                           ; BSR set to: 0
 18797                           
 18798                           ; BSR set to: 0
 18799                           ;fat_filelib.c: 615: return 0;
 18800  00BB94  0E09               	movlw	high __fs
 18801  00BB96  6E02               	movwf	fatfs_lba_of_cluster@fs+1,c
 18802  00BB98  0E78               	movlw	low __fs
 18803  00BB9A  6E01               	movwf	fatfs_lba_of_cluster@fs,c
 18804  00BB9C  C0A5  F003         	movff	__read_sectors@Cluster,fatfs_lba_of_cluster@Cluster_Number
 18805  00BBA0  C0A6  F004         	movff	__read_sectors@Cluster+1,fatfs_lba_of_cluster@Cluster_Number+1
 18806  00BBA4  C0A7  F005         	movff	__read_sectors@Cluster+2,fatfs_lba_of_cluster@Cluster_Number+2
 18807  00BBA8  C0A8  F006         	movff	__read_sectors@Cluster+3,fatfs_lba_of_cluster@Cluster_Number+3
 18808  00BBAC  EC4C  F03F         	call	_fatfs_lba_of_cluster	;wreg free
 18809  00BBB0  C001  F08C         	movff	?_fatfs_lba_of_cluster,??__read_sectors
 18810  00BBB4  C002  F08D         	movff	?_fatfs_lba_of_cluster+1,??__read_sectors+1
 18811  00BBB8  C003  F08E         	movff	?_fatfs_lba_of_cluster+2,??__read_sectors+2
 18812  00BBBC  C004  F08F         	movff	?_fatfs_lba_of_cluster+3,??__read_sectors+3
 18813  00BBC0  0100               	movlb	0	; () banked
 18814  00BBC2  519D               	movf	__read_sectors@Sector& (0+255),w,b
 18815  00BBC4  258C               	addwf	??__read_sectors& (0+255),w,b
 18816  00BBC6  6F95               	movwf	__read_sectors@lba& (0+255),b
 18817  00BBC8  519E               	movf	(__read_sectors@Sector+1)& (0+255),w,b
 18818  00BBCA  218D               	addwfc	(??__read_sectors+1)& (0+255),w,b
 18819  00BBCC  6F96               	movwf	(__read_sectors@lba+1)& (0+255),b
 18820  00BBCE  519F               	movf	(__read_sectors@Sector+2)& (0+255),w,b
 18821  00BBD0  218E               	addwfc	(??__read_sectors+2)& (0+255),w,b
 18822  00BBD2  6F97               	movwf	(__read_sectors@lba+2)& (0+255),b
 18823  00BBD4  51A0               	movf	(__read_sectors@Sector+3)& (0+255),w,b
 18824  00BBD6  218F               	addwfc	(??__read_sectors+3)& (0+255),w,b
 18825  00BBD8  6F98               	movwf	(__read_sectors@lba+3)& (0+255),b
 18826                           
 18827                           ; BSR set to: 0
 18828                           ;fat_filelib.c: 621: if (fatfs_sector_read(&_fs, lba, buffer, count))
 18829  00BBDA  0E09               	movlw	high __fs
 18830  00BBDC  6E20               	movwf	fatfs_sector_read@fs+1,c
 18831  00BBDE  0E78               	movlw	low __fs
 18832  00BBE0  6E1F               	movwf	fatfs_sector_read@fs,c
 18833  00BBE2  C095  F021         	movff	__read_sectors@lba,fatfs_sector_read@lba
 18834  00BBE6  C096  F022         	movff	__read_sectors@lba+1,fatfs_sector_read@lba+1
 18835  00BBEA  C097  F023         	movff	__read_sectors@lba+2,fatfs_sector_read@lba+2
 18836  00BBEE  C098  F024         	movff	__read_sectors@lba+3,fatfs_sector_read@lba+3
 18837  00BBF2  C087  F026         	movff	__read_sectors@buffer+1,fatfs_sector_read@target+1
 18838  00BBF6  C086  F025         	movff	__read_sectors@buffer,fatfs_sector_read@target
 18839  00BBFA  C088  F027         	movff	__read_sectors@count,fatfs_sector_read@count
 18840  00BBFE  C089  F028         	movff	__read_sectors@count+1,fatfs_sector_read@count+1
 18841  00BC02  C08A  F029         	movff	__read_sectors@count+2,fatfs_sector_read@count+2
 18842  00BC06  C08B  F02A         	movff	__read_sectors@count+3,fatfs_sector_read@count+3
 18843  00BC0A  EC23  F023         	call	_fatfs_sector_read	;wreg free
 18844  00BC0E  5020               	movf	?_fatfs_sector_read+1,w,c
 18845  00BC10  101F               	iorwf	?_fatfs_sector_read,w,c
 18846  00BC12  E009               	bz	l11445
 18847                           
 18848                           ;fat_filelib.c: 622: return count;
 18849  00BC14  C088  F080         	movff	__read_sectors@count,?__read_sectors
 18850  00BC18  C089  F081         	movff	__read_sectors@count+1,?__read_sectors+1
 18851  00BC1C  C08A  F082         	movff	__read_sectors@count+2,?__read_sectors+2
 18852  00BC20  C08B  F083         	movff	__read_sectors@count+3,?__read_sectors+3
 18853  00BC24  D006               	goto	l515
 18854  00BC26                     l11445:
 18855                           
 18856                           ;fat_filelib.c: 623: else
 18857                           ;fat_filelib.c: 624: return 0;
 18858  00BC26  0E00               	movlw	0
 18859  00BC28  0100               	movlb	0	; () banked
 18860  00BC2A  6F80               	movwf	?__read_sectors& (0+255),b
 18861  00BC2C  6F81               	movwf	(?__read_sectors+1)& (0+255),b
 18862  00BC2E  6F82               	movwf	(?__read_sectors+2)& (0+255),b
 18863  00BC30  6F83               	movwf	(?__read_sectors+3)& (0+255),b
 18864  00BC32                     l515:
 18865  00BC32  0012               	return	
 18866  00BC34                     __end_of__read_sectors:
 18867                           	opt stack 0
 18868                           tosu	equ	0xFFF
 18869                           tosh	equ	0xFFE
 18870                           tosl	equ	0xFFD
 18871                           pclath	equ	0xFFA
 18872                           tblptru	equ	0xFF8
 18873                           tblptrh	equ	0xFF7
 18874                           tblptrl	equ	0xFF6
 18875                           tablat	equ	0xFF5
 18876                           prodh	equ	0xFF4
 18877                           prodl	equ	0xFF3
 18878                           indf0	equ	0xFEF
 18879                           postinc0	equ	0xFEE
 18880                           fsr0h	equ	0xFEA
 18881                           fsr0l	equ	0xFE9
 18882                           wreg	equ	0xFE8
 18883                           indf1	equ	0xFE7
 18884                           postinc1	equ	0xFE6
 18885                           postdec1	equ	0xFE5
 18886                           fsr1h	equ	0xFE2
 18887                           fsr1l	equ	0xFE1
 18888                           indf2	equ	0xFDF
 18889                           postinc2	equ	0xFDE
 18890                           postdec2	equ	0xFDD
 18891                           fsr2h	equ	0xFDA
 18892                           fsr2l	equ	0xFD9
 18893                           status	equ	0xFD8
 18894                           
 18895 ;; *************** function _fatfs_sector_read *****************
 18896 ;; Defined at:
 18897 ;;		line 204 in file "fat_access.c"
 18898 ;; Parameters:    Size  Location     Type
 18899 ;;  fs              2   30[COMRAM] PTR struct fatfs
 18900 ;;		 -> _fs(1095), 
 18901 ;;  lba             4   32[COMRAM] unsigned long 
 18902 ;;  target          2   36[COMRAM] PTR unsigned char 
 18903 ;;		 -> data(1), fl_fgetc@data(1), RAM(3967), NULL(0), 
 18904 ;;  count           4   38[COMRAM] unsigned long 
 18905 ;; Auto vars:     Size  Location     Type
 18906 ;;		None
 18907 ;; Return value:  Size  Location     Type
 18908 ;;                  2   30[COMRAM] int 
 18909 ;; Registers used:
 18910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 18911 ;; Tracked objects:
 18912 ;;		On entry : 0/0
 18913 ;;		On exit  : 0/0
 18914 ;;		Unchanged: 0/0
 18915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18916 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18918 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18919 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18920 ;;Total ram usage:       14 bytes
 18921 ;; Hardware stack levels used:    1
 18922 ;; Hardware stack levels required when called:    3
 18923 ;; This function calls:
 18924 ;;		_media_read
 18925 ;; This function is called by:
 18926 ;;		__read_sectors
 18927 ;; This function uses a non-reentrant model
 18928 ;;
 18929                           
 18930                           	psect	text47
 18931  004646                     __ptext47:
 18932                           	opt stack 0
 18933  004646                     _fatfs_sector_read:
 18934                           	opt stack 23
 18935                           
 18936                           ;fat_access.c: 206: return fs->disk_io.read_media(lba, target, count);
 18937                           
 18938                           ;incstack = 0
 18939  004646  C021  F009         	movff	fatfs_sector_read@lba,media_read@sector
 18940  00464A  C022  F00A         	movff	fatfs_sector_read@lba+1,media_read@sector+1
 18941  00464E  C023  F00B         	movff	fatfs_sector_read@lba+2,media_read@sector+2
 18942  004652  C024  F00C         	movff	fatfs_sector_read@lba+3,media_read@sector+3
 18943  004656  C026  F00E         	movff	fatfs_sector_read@target+1,media_read@buffer+1
 18944  00465A  C025  F00D         	movff	fatfs_sector_read@target,media_read@buffer
 18945  00465E  C027  F00F         	movff	fatfs_sector_read@count,media_read@sector_count
 18946  004662  C028  F010         	movff	fatfs_sector_read@count+1,media_read@sector_count+1
 18947  004666  C029  F011         	movff	fatfs_sector_read@count+2,media_read@sector_count+2
 18948  00466A  C02A  F012         	movff	fatfs_sector_read@count+3,media_read@sector_count+3
 18949  00466E  EE20 F029          	lfsr	2,41
 18950  004672  501F               	movf	fatfs_sector_read@fs,w,c
 18951  004674  26D9               	addwf	fsr2l,f,c
 18952  004676  5020               	movf	fatfs_sector_read@fs+1,w,c
 18953  004678  22DA               	addwfc	fsr2h,f,c
 18954  00467A  CFDE F02B          	movff	postinc2,??_fatfs_sector_read
 18955  00467E  CFDD F02C          	movff	postdec2,??_fatfs_sector_read+1
 18956  004682  D801               	call	u11638
 18957  004684  D009               	goto	u11639
 18958  004686                     u11638:
 18959  004686  0005               	push	
 18960  004688  6EFA               	movwf	pclath,c
 18961  00468A  502B               	movf	??_fatfs_sector_read,w,c
 18962  00468C  6EFD               	movwf	tosl,c
 18963  00468E  502C               	movf	??_fatfs_sector_read+1,w,c
 18964  004690  6EFE               	movwf	tosh,c
 18965  004692  6AFF               	clrf	tosu,c
 18966  004694  50FA               	movf	pclath,w,c
 18967  004696  0012               	return		;indir
 18968  004698                     u11639:
 18969  004698  C009  F01F         	movff	?_media_read,?_fatfs_sector_read
 18970  00469C  C00A  F020         	movff	?_media_read+1,?_fatfs_sector_read+1
 18971  0046A0  0012               	return	
 18972  0046A2                     __end_of_fatfs_sector_read:
 18973                           	opt stack 0
 18974                           tosu	equ	0xFFF
 18975                           tosh	equ	0xFFE
 18976                           tosl	equ	0xFFD
 18977                           pclath	equ	0xFFA
 18978                           tblptru	equ	0xFF8
 18979                           tblptrh	equ	0xFF7
 18980                           tblptrl	equ	0xFF6
 18981                           tablat	equ	0xFF5
 18982                           prodh	equ	0xFF4
 18983                           prodl	equ	0xFF3
 18984                           indf0	equ	0xFEF
 18985                           postinc0	equ	0xFEE
 18986                           fsr0h	equ	0xFEA
 18987                           fsr0l	equ	0xFE9
 18988                           wreg	equ	0xFE8
 18989                           indf1	equ	0xFE7
 18990                           postinc1	equ	0xFE6
 18991                           postdec1	equ	0xFE5
 18992                           fsr1h	equ	0xFE2
 18993                           fsr1l	equ	0xFE1
 18994                           indf2	equ	0xFDF
 18995                           postinc2	equ	0xFDE
 18996                           postdec2	equ	0xFDD
 18997                           fsr2h	equ	0xFDA
 18998                           fsr2l	equ	0xFD9
 18999                           status	equ	0xFD8
 19000                           
 19001 ;; *************** function _fl_fopen *****************
 19002 ;; Defined at:
 19003 ;;		line 693 in file "fat_filelib.c"
 19004 ;; Parameters:    Size  Location     Type
 19005 ;;  path            2  124[BANK0 ] PTR const unsigned char 
 19006 ;;		 -> s(17), m(30), 
 19007 ;;  mode            2  126[BANK0 ] PTR const unsigned char 
 19008 ;;		 -> STR_43(2), STR_36(2), STR_29(2), STR_23(2), 
 19009 ;;		 -> STR_21(2), STR_18(2), STR_10(2), 
 19010 ;; Auto vars:     Size  Location     Type
 19011 ;;  file            2  128[BANK1 ] PTR struct sFL_FILE
 19012 ;;		 -> RAM(3967), NULL(0), 
 19013 ;;  i               2  126[BANK1 ] int 
 19014 ;;  flags           1  130[BANK1 ] unsigned char 
 19015 ;; Return value:  Size  Location     Type
 19016 ;;                  2  124[BANK0 ] PTR void 
 19017 ;; Registers used:
 19018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 19019 ;; Tracked objects:
 19020 ;;		On entry : 0/0
 19021 ;;		On exit  : 0/0
 19022 ;;		Unchanged: 0/0
 19023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19024 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19025 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19026 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19027 ;;      Totals:         0       4       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19028 ;;Total ram usage:       11 bytes
 19029 ;; Hardware stack levels used:    1
 19030 ;; Hardware stack levels required when called:   10
 19031 ;; This function calls:
 19032 ;;		__create_file
 19033 ;;		__open_file
 19034 ;;		_fl_init
 19035 ;;		_strlen
 19036 ;; This function is called by:
 19037 ;;		_fl_remove
 19038 ;;		_File_write
 19039 ;;		_File_append
 19040 ;;		_File_read
 19041 ;;		_File_read_
 19042 ;; This function uses a non-reentrant model
 19043 ;;
 19044                           
 19045                           	psect	text48
 19046  006D5C                     __ptext48:
 19047                           	opt stack 0
 19048  006D5C                     _fl_fopen:
 19049                           	opt stack 17
 19050                           
 19051                           ;fat_filelib.c: 695: int i;
 19052                           ;fat_filelib.c: 696: FL_FILE* file;
 19053                           ;fat_filelib.c: 697: uint8 flags = 0;
 19054                           
 19055                           ;incstack = 0
 19056  006D5C  0101               	movlb	1	; () banked
 19057  006D5E  6B82               	clrf	fl_fopen@flags& (0+255),b
 19058                           
 19059                           ; BSR set to: 1
 19060                           ;fat_filelib.c: 700: { if (_filelib_init==0) fl_init(); };
 19061  006D60  5192               	movf	(__filelib_init+1)& (0+255),w,b
 19062  006D62  1191               	iorwf	__filelib_init& (0+255),w,b
 19063  006D64  B4D8               	btfsc	status,2,c
 19064                           
 19065                           ; BSR set to: 1
 19066  006D66  EC44  F029         	call	_fl_init	;wreg free
 19067                           
 19068                           ;fat_filelib.c: 702: if (!_filelib_valid)
 19069  006D6A  0101               	movlb	1	; () banked
 19070  006D6C  5194               	movf	(__filelib_valid+1)& (0+255),w,b
 19071  006D6E  1193               	iorwf	__filelib_valid& (0+255),w,b
 19072  006D70  E007               	bz	l11799
 19073                           
 19074                           ;fat_filelib.c: 705: if (!path || !mode)
 19075                           
 19076                           ; BSR set to: 0
 19077                           
 19078                           ; BSR set to: 0
 19079                           
 19080                           ; BSR set to: 1
 19081                           ;fat_filelib.c: 703: return (0);
 19082  006D72  0100               	movlb	0	; () banked
 19083  006D74  51FD               	movf	(fl_fopen@path+1)& (0+255),w,b
 19084  006D76  11FC               	iorwf	fl_fopen@path& (0+255),w,b
 19085  006D78  E003               	bz	l11799
 19086                           
 19087                           ; BSR set to: 0
 19088  006D7A  51FF               	movf	(fl_fopen@mode+1)& (0+255),w,b
 19089  006D7C  11FE               	iorwf	fl_fopen@mode& (0+255),w,b
 19090  006D7E  E105               	bnz	l11803
 19091  006D80                     l11799:
 19092                           
 19093                           ; BSR set to: 0
 19094                           ;fat_filelib.c: 706: return (0);
 19095  006D80  0E00               	movlw	0
 19096  006D82  0100               	movlb	0	; () banked
 19097  006D84  6FFD               	movwf	(?_fl_fopen+1)& (0+255),b
 19098  006D86  6FFC               	movwf	?_fl_fopen& (0+255),b
 19099  006D88  D0AA               	goto	l545
 19100  006D8A                     l11803:
 19101                           
 19102                           ; BSR set to: 0
 19103                           ;fat_filelib.c: 726: for (i=0;i<(int)strlen(mode);i++)
 19104  006D8A  0E00               	movlw	0
 19105  006D8C  0101               	movlb	1	; () banked
 19106  006D8E  6B7F               	clrf	(fl_fopen@i+1)& (0+255),b
 19107  006D90  6B7E               	clrf	fl_fopen@i& (0+255),b
 19108  006D92  D044               	goto	l11825
 19109  006D94                     l11805:
 19110                           
 19111                           ; BSR set to: 1
 19112                           ;fat_filelib.c: 731: case 'R':
 19113                           ;fat_filelib.c: 732: flags |= (1 << 0);
 19114  006D94  0101               	movlb	1	; () banked
 19115  006D96  8182               	bsf	fl_fopen@flags& (0+255),0,b
 19116                           
 19117                           ;fat_filelib.c: 733: break;
 19118  006D98  D03E               	goto	l11823
 19119  006D9A                     l11807:
 19120                           
 19121                           ; BSR set to: 1
 19122                           ;fat_filelib.c: 735: case 'W':
 19123                           ;fat_filelib.c: 736: flags |= (1 << 1);
 19124  006D9A  0101               	movlb	1	; () banked
 19125  006D9C  8382               	bsf	fl_fopen@flags& (0+255),1,b
 19126  006D9E                     
 19127                           ;fat_filelib.c: 737: flags |= (1 << 4);
 19128  006D9E  0101               	movlb	1	; () banked
 19129  006DA0  8982               	bsf	fl_fopen@flags& (0+255),4,b
 19130  006DA2  D011               	goto	L47
 19131  006DA4                     l559:
 19132                           
 19133                           ; BSR set to: 1
 19134                           ;fat_filelib.c: 747: if (flags & (1 << 0))
 19135  006DA4  0101               	movlb	1	; () banked
 19136  006DA6  A182               	btfss	fl_fopen@flags& (0+255),0,b
 19137  006DA8  D002               	goto	l560
 19138                           
 19139                           ; BSR set to: 1
 19140                           ;fat_filelib.c: 748: flags |= (1 << 1);
 19141  006DAA  8382               	bsf	fl_fopen@flags& (0+255),1,b
 19142  006DAC  D034               	goto	l11823
 19143  006DAE                     l560:
 19144                           
 19145                           ; BSR set to: 1
 19146                           ;fat_filelib.c: 749: else if (flags & (1 << 1))
 19147  006DAE  0101               	movlb	1	; () banked
 19148  006DB0  A382               	btfss	fl_fopen@flags& (0+255),1,b
 19149  006DB2  D002               	goto	l562
 19150                           
 19151                           ; BSR set to: 1
 19152                           ;fat_filelib.c: 750: {
 19153                           ;fat_filelib.c: 751: flags |= (1 << 0);
 19154  006DB4  8182               	bsf	fl_fopen@flags& (0+255),0,b
 19155  006DB6  D7F3               	goto	L49
 19156  006DB8                     l562:
 19157                           
 19158                           ; BSR set to: 1
 19159                           ;fat_filelib.c: 755: else if (flags & (1 << 2))
 19160  006DB8  0101               	movlb	1	; () banked
 19161  006DBA  A582               	btfss	fl_fopen@flags& (0+255),2,b
 19162  006DBC  D02C               	goto	l11823
 19163                           
 19164                           ; BSR set to: 1
 19165                           ;fat_filelib.c: 756: {
 19166                           ;fat_filelib.c: 757: flags |= (1 << 0);
 19167  006DBE  8182               	bsf	fl_fopen@flags& (0+255),0,b
 19168  006DC0                     
 19169                           ;fat_filelib.c: 758: flags |= (1 << 1);
 19170  006DC0  0101               	movlb	1	; () banked
 19171  006DC2  8382               	bsf	fl_fopen@flags& (0+255),1,b
 19172                           
 19173                           ;fat_filelib.c: 759: flags |= (1 << 2);
 19174  006DC4  8582               	bsf	fl_fopen@flags& (0+255),2,b
 19175  006DC6                     L47:
 19176                           
 19177                           ;fat_filelib.c: 760: flags |= (1 << 5);
 19178  006DC6  0101               	movlb	1	; () banked
 19179  006DC8  8B82               	bsf	fl_fopen@flags& (0+255),5,b
 19180  006DCA  D025               	goto	l11823
 19181  006DCC                     l11817:
 19182                           
 19183                           ; BSR set to: 1
 19184                           ;fat_filelib.c: 764: case 'B':
 19185                           ;fat_filelib.c: 765: flags |= (1 << 3);
 19186  006DCC  0101               	movlb	1	; () banked
 19187  006DCE  8782               	bsf	fl_fopen@flags& (0+255),3,b
 19188                           
 19189                           ;fat_filelib.c: 766: break;
 19190  006DD0  D022               	goto	l11823
 19191  006DD2                     l11821:
 19192                           
 19193                           ; BSR set to: 1
 19194  006DD2  C0FE  F17C         	movff	fl_fopen@mode,??_fl_fopen
 19195  006DD6  C0FF  F17D         	movff	fl_fopen@mode+1,??_fl_fopen+1
 19196  006DDA  0101               	movlb	1	; () banked
 19197  006DDC  517E               	movf	fl_fopen@i& (0+255),w,b
 19198  006DDE  277C               	addwf	??_fl_fopen& (0+255),f,b
 19199  006DE0  517F               	movf	(fl_fopen@i+1)& (0+255),w,b
 19200  006DE2  237D               	addwfc	(??_fl_fopen+1)& (0+255),f,b
 19201  006DE4  C17C  FFF6         	movff	??_fl_fopen,tblptrl
 19202  006DE8  C17D  FFF7         	movff	??_fl_fopen+1,tblptrh
 19203  006DEC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19204  006DEC  6AF8               	clrf	tblptru,c
 19205  006DEE                     	endif
 19206  006DEE                     	if	0	;tblptru may be non-zero
 19207  006DEE                     	endif
 19208  006DEE  0008               	tblrd		*
 19209  006DF0  50F5               	movf	tablat,w,c
 19210                           
 19211                           ; Switch size 1, requested type "speed"
 19212                           ; Number of cases is 9, Range of values is 43 to 119
 19213                           ; switch strategies available:
 19214                           ; Name         Instructions Cycles
 19215                           ; simple_byte           28    15 (average)
 19216                           ;	Chosen strategy is simple_byte
 19217  006DF2  0A2B               	xorlw	43	; case 43
 19218  006DF4  E0D7               	bz	l559
 19219  006DF6  0A6A               	xorlw	106	; case 65
 19220  006DF8  E0E3               	bz	L48
 19221  006DFA  0A03               	xorlw	3	; case 66
 19222  006DFC  E0E7               	bz	l11817
 19223  006DFE  0A10               	xorlw	16	; case 82
 19224  006E00  E0C9               	bz	l11805
 19225  006E02  0A05               	xorlw	5	; case 87
 19226  006E04  E0CA               	bz	l11807
 19227  006E06  0A36               	xorlw	54	; case 97
 19228  006E08  E0DB               	bz	L48
 19229  006E0A  0A03               	xorlw	3	; case 98
 19230  006E0C  E0DF               	bz	l11817
 19231  006E0E  0A10               	xorlw	16	; case 114
 19232  006E10  E0C1               	bz	l11805
 19233  006E12  0A05               	xorlw	5	; case 119
 19234  006E14  E0C2               	bz	l11807
 19235  006E16                     l11823:
 19236                           
 19237                           ; BSR set to: 1
 19238  006E16  0101               	movlb	1	; () banked
 19239  006E18  4B7E               	infsnz	fl_fopen@i& (0+255),f,b
 19240  006E1A  2B7F               	incf	(fl_fopen@i+1)& (0+255),f,b
 19241  006E1C                     l11825:
 19242                           
 19243                           ; BSR set to: 1
 19244  006E1C  C0FF  F002         	movff	fl_fopen@mode+1,strlen@s+1
 19245  006E20  0100               	movlb	0	; () banked
 19246  006E22  C0FE  F001         	movff	fl_fopen@mode,strlen@s
 19247  006E26  EC7B  F022         	call	_strlen	;wreg free
 19248  006E2A  0101               	movlb	1	; () banked
 19249  006E2C  517F               	movf	(fl_fopen@i+1)& (0+255),w,b
 19250  006E2E  0A80               	xorlw	128
 19251  006E30  6F7C               	movwf	??_fl_fopen& (0+255),b
 19252  006E32  5001               	movf	?_strlen,w,c
 19253  006E34  5D7E               	subwf	fl_fopen@i& (0+255),w,b
 19254  006E36  5002               	movf	?_strlen+1,w,c
 19255  006E38  0A80               	xorlw	128
 19256  006E3A  597C               	subwfb	??_fl_fopen& (0+255),w,b
 19257  006E3C  E3CA               	bnc	l11821
 19258                           
 19259                           ; BSR set to: 1
 19260                           ;fat_filelib.c: 768: }
 19261                           ;fat_filelib.c: 769: file = (0);
 19262                           
 19263                           ; BSR set to: 1
 19264  006E3E  6B81               	clrf	(fl_fopen@file+1)& (0+255),b
 19265  006E40  6B80               	clrf	fl_fopen@file& (0+255),b
 19266                           
 19267                           ; BSR set to: 1
 19268                           ;fat_filelib.c: 777: if (!_fs.disk_io.write_media)
 19269  006E42  EE29  F0A3         	lfsr	2,__fs+43
 19270  006E46  50DE               	movf	postinc2,w,c
 19271  006E48  10DD               	iorwf	postdec2,w,c
 19272  006E4A  E102               	bnz	l571
 19273                           
 19274                           ; BSR set to: 1
 19275                           ;fat_filelib.c: 778: flags &= ~((1 << 5) | (1 << 1) | (1 << 2));
 19276  006E4C  0ED9               	movlw	217
 19277  006E4E  1782               	andwf	fl_fopen@flags& (0+255),f,b
 19278  006E50                     l571:
 19279                           
 19280                           ; BSR set to: 1
 19281                           ;fat_filelib.c: 783: if (flags & (1 << 0))
 19282  006E50  0101               	movlb	1	; () banked
 19283  006E52  A182               	btfss	fl_fopen@flags& (0+255),0,b
 19284  006E54  D00B               	goto	l11837
 19285                           
 19286                           ; BSR set to: 1
 19287                           ;fat_filelib.c: 784: file = _open_file(path);
 19288  006E56  C0FD  F0F3         	movff	fl_fopen@path+1,__open_file@path+1
 19289  006E5A  0100               	movlb	0	; () banked
 19290  006E5C  C0FC  F0F2         	movff	fl_fopen@path,__open_file@path
 19291  006E60  EC36  F04E         	call	__open_file	;wreg free
 19292  006E64  C0F2  F180         	movff	?__open_file,fl_fopen@file
 19293  006E68  C0F3  F181         	movff	?__open_file+1,fl_fopen@file+1
 19294  006E6C                     l11837:
 19295                           
 19296                           ;fat_filelib.c: 788: if (!file && (flags & (1 << 5)))
 19297  006E6C  0101               	movlb	1	; () banked
 19298  006E6E  5181               	movf	(fl_fopen@file+1)& (0+255),w,b
 19299  006E70  1180               	iorwf	fl_fopen@file& (0+255),w,b
 19300  006E72  E10D               	bnz	l11843
 19301                           
 19302                           ; BSR set to: 1
 19303  006E74  AB82               	btfss	fl_fopen@flags& (0+255),5,b
 19304  006E76  D00B               	goto	l11843
 19305                           
 19306                           ; BSR set to: 1
 19307                           ;fat_filelib.c: 789: file = _create_file(path);
 19308  006E78  C0FD  F0F3         	movff	fl_fopen@path+1,__create_file@filename+1
 19309  006E7C  0100               	movlb	0	; () banked
 19310  006E7E  C0FC  F0F2         	movff	fl_fopen@path,__create_file@filename
 19311  006E82  EC4A  F060         	call	__create_file	;wreg free
 19312  006E86  C0F2  F180         	movff	?__create_file,fl_fopen@file
 19313  006E8A  C0F3  F181         	movff	?__create_file+1,fl_fopen@file+1
 19314  006E8E                     l11843:
 19315                           
 19316                           ;fat_filelib.c: 793: if (!(flags & (1 << 0)))
 19317  006E8E  0101               	movlb	1	; () banked
 19318  006E90  A182               	btfss	fl_fopen@flags& (0+255),0,b
 19319                           
 19320                           ; BSR set to: 1
 19321                           ;fat_filelib.c: 794: if ((flags & (1 << 5)) && !file)
 19322  006E92  AB82               	btfss	fl_fopen@flags& (0+255),5,b
 19323  006E94  D013               	goto	l11853
 19324                           
 19325                           ; BSR set to: 1
 19326  006E96  5181               	movf	(fl_fopen@file+1)& (0+255),w,b
 19327  006E98  1180               	iorwf	fl_fopen@file& (0+255),w,b
 19328  006E9A  E110               	bnz	l11853
 19329                           
 19330                           ; BSR set to: 1
 19331                           ;fat_filelib.c: 795: if (flags & ((1 << 1) | (1 << 2)))
 19332  006E9C  C182  F17C         	movff	fl_fopen@flags,??_fl_fopen
 19333  006EA0  0E06               	movlw	6
 19334  006EA2  177C               	andwf	??_fl_fopen& (0+255),f,b
 19335  006EA4  E00B               	bz	l11853
 19336                           
 19337                           ; BSR set to: 1
 19338                           ;fat_filelib.c: 796: file = _open_file(path);
 19339  006EA6  C0FD  F0F3         	movff	fl_fopen@path+1,__open_file@path+1
 19340  006EAA  0100               	movlb	0	; () banked
 19341  006EAC  C0FC  F0F2         	movff	fl_fopen@path,__open_file@path
 19342  006EB0  EC36  F04E         	call	__open_file	;wreg free
 19343  006EB4  C0F2  F180         	movff	?__open_file,fl_fopen@file
 19344  006EB8  C0F3  F181         	movff	?__open_file+1,fl_fopen@file+1
 19345  006EBC                     l11853:
 19346                           
 19347                           ;fat_filelib.c: 798: if (file)
 19348  006EBC  0101               	movlb	1	; () banked
 19349  006EBE  5181               	movf	(fl_fopen@file+1)& (0+255),w,b
 19350  006EC0  1180               	iorwf	fl_fopen@file& (0+255),w,b
 19351  006EC2  E008               	bz	l11857
 19352                           
 19353                           ; BSR set to: 1
 19354                           ;fat_filelib.c: 799: file->flags = flags;
 19355  006EC4  EE22 F03F          	lfsr	2,575
 19356  006EC8  5180               	movf	fl_fopen@file& (0+255),w,b
 19357  006ECA  26D9               	addwf	fsr2l,f,c
 19358  006ECC  5181               	movf	(fl_fopen@file+1)& (0+255),w,b
 19359  006ECE  22DA               	addwfc	fsr2h,f,c
 19360  006ED0  C182  FFDF         	movff	fl_fopen@flags,indf2
 19361  006ED4                     l11857:
 19362                           
 19363                           ; BSR set to: 1
 19364                           ;fat_filelib.c: 802: return file;
 19365  006ED4  C181  F0FD         	movff	fl_fopen@file+1,?_fl_fopen+1
 19366  006ED8  0100               	movlb	0	; () banked
 19367  006EDA  C180  F0FC         	movff	fl_fopen@file,?_fl_fopen
 19368  006EDE                     l545:
 19369                           
 19370                           ; BSR set to: 0
 19371  006EDE  0012               	return	
 19372  006EE0                     __end_of_fl_fopen:
 19373                           	opt stack 0
 19374                           tosu	equ	0xFFF
 19375                           tosh	equ	0xFFE
 19376                           tosl	equ	0xFFD
 19377                           pclath	equ	0xFFA
 19378                           tblptru	equ	0xFF8
 19379                           tblptrh	equ	0xFF7
 19380                           tblptrl	equ	0xFF6
 19381                           tablat	equ	0xFF5
 19382                           prodh	equ	0xFF4
 19383                           prodl	equ	0xFF3
 19384                           indf0	equ	0xFEF
 19385                           postinc0	equ	0xFEE
 19386                           fsr0h	equ	0xFEA
 19387                           fsr0l	equ	0xFE9
 19388                           wreg	equ	0xFE8
 19389                           indf1	equ	0xFE7
 19390                           postinc1	equ	0xFE6
 19391                           postdec1	equ	0xFE5
 19392                           fsr1h	equ	0xFE2
 19393                           fsr1l	equ	0xFE1
 19394                           indf2	equ	0xFDF
 19395                           postinc2	equ	0xFDE
 19396                           postdec2	equ	0xFDD
 19397                           fsr2h	equ	0xFDA
 19398                           fsr2l	equ	0xFD9
 19399                           status	equ	0xFD8
 19400                           
 19401 ;; *************** function __open_file *****************
 19402 ;; Defined at:
 19403 ;;		line 327 in file "fat_filelib.c"
 19404 ;; Parameters:    Size  Location     Type
 19405 ;;  path            2  114[BANK0 ] PTR const unsigned char 
 19406 ;;		 -> s(17), m(30), 
 19407 ;; Auto vars:     Size  Location     Type
 19408 ;;  sfEntry        32   79[BANK1 ] struct fat_dir_entry
 19409 ;;  file            2   77[BANK1 ] PTR struct sFL_FILE
 19410 ;;		 -> RAM(3967), NULL(0), 
 19411 ;; Return value:  Size  Location     Type
 19412 ;;                  2  114[BANK0 ] PTR struct sFL_FILE
 19413 ;; Registers used:
 19414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 19415 ;; Tracked objects:
 19416 ;;		On entry : 0/0
 19417 ;;		On exit  : 0/0
 19418 ;;		Unchanged: 0/0
 19419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19420 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19421 ;;      Locals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19422 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19423 ;;      Totals:         0      10      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19424 ;;Total ram usage:       44 bytes
 19425 ;; Hardware stack levels used:    1
 19426 ;; Hardware stack levels required when called:    9
 19427 ;; This function calls:
 19428 ;;		__allocate_file
 19429 ;;		__check_file_open
 19430 ;;		__free_file
 19431 ;;		__open_directory
 19432 ;;		_fatfs_cache_init
 19433 ;;		_fatfs_entry_is_file
 19434 ;;		_fatfs_fat_purge
 19435 ;;		_fatfs_get_file_entry
 19436 ;;		_fatfs_get_root_cluster
 19437 ;;		_fatfs_split_path
 19438 ;;		_memcpy
 19439 ;;		_memset
 19440 ;; This function is called by:
 19441 ;;		_fl_fopen
 19442 ;; This function uses a non-reentrant model
 19443 ;;
 19444                           
 19445                           	psect	text49
 19446  009C6C                     __ptext49:
 19447                           	opt stack 0
 19448  009C6C                     __open_file:
 19449                           	opt stack 17
 19450                           
 19451                           ;fat_filelib.c: 329: FL_FILE* file;
 19452                           ;fat_filelib.c: 330: struct fat_dir_entry sfEntry;
 19453                           ;fat_filelib.c: 333: file = _allocate_file();
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;incstack = 0
 19457  009C6C  ECDA  F021         	call	__allocate_file	;wreg free
 19458  009C70  C00F  F14D         	movff	?__allocate_file,__open_file@file
 19459  009C74  C010  F14E         	movff	?__allocate_file+1,__open_file@file+1
 19460                           
 19461                           ;fat_filelib.c: 334: if (!file)
 19462  009C78  0101               	movlb	1	; () banked
 19463  009C7A  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19464  009C7C  114D               	iorwf	__open_file@file& (0+255),w,b
 19465  009C7E  E101 D175          	bz	L53
 19466                           
 19467                           ;fat_filelib.c: 338: memset(file->path, '\0', sizeof(file->path));
 19468                           
 19469                           ; BSR set to: 0
 19470                           
 19471                           ; BSR set to: 0
 19472                           
 19473                           ; BSR set to: 1
 19474                           ;fat_filelib.c: 335: return (0);
 19475  009C82  0E12               	movlw	18
 19476  009C84  254D               	addwf	__open_file@file& (0+255),w,b
 19477  009C86  6E01               	movwf	memset@p1,c
 19478  009C88  0E00               	movlw	0
 19479  009C8A  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19480  009C8C  6E02               	movwf	memset@p1+1,c
 19481  009C8E  6A04               	clrf	memset@c+1,c
 19482  009C90  6A03               	clrf	memset@c,c
 19483  009C92  6A06               	clrf	memset@n+1,c
 19484  009C94  0E0A               	movlw	10
 19485  009C96  6E05               	movwf	memset@n,c
 19486  009C98  EC24  F020         	call	_memset	;wreg free
 19487                           
 19488                           ;fat_filelib.c: 339: memset(file->filename, '\0', sizeof(file->filename));
 19489  009C9C  0E1C               	movlw	28
 19490  009C9E  0101               	movlb	1	; () banked
 19491  009CA0  254D               	addwf	__open_file@file& (0+255),w,b
 19492  009CA2  6E01               	movwf	memset@p1,c
 19493  009CA4  0E00               	movlw	0
 19494  009CA6  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19495  009CA8  6E02               	movwf	memset@p1+1,c
 19496  009CAA  6A04               	clrf	memset@c+1,c
 19497  009CAC  6A03               	clrf	memset@c,c
 19498  009CAE  6A06               	clrf	memset@n+1,c
 19499  009CB0  0E0A               	movlw	10
 19500  009CB2  6E05               	movwf	memset@n,c
 19501  009CB4  EC24  F020         	call	_memset	;wreg free
 19502                           
 19503                           ;fat_filelib.c: 342: if (fatfs_split_path((char*)path, file->path, sizeof(file->path), f
      +                          ile->filename, sizeof(file->filename)) == -1)
 19504  009CB8  C0F3  F01E         	movff	__open_file@path+1,fatfs_split_path@full_path+1
 19505  009CBC  C0F2  F01D         	movff	__open_file@path,fatfs_split_path@full_path
 19506  009CC0  0E12               	movlw	18
 19507  009CC2  0101               	movlb	1	; () banked
 19508  009CC4  254D               	addwf	__open_file@file& (0+255),w,b
 19509  009CC6  6E1F               	movwf	fatfs_split_path@path,c
 19510  009CC8  0E00               	movlw	0
 19511  009CCA  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19512  009CCC  6E20               	movwf	fatfs_split_path@path+1,c
 19513  009CCE  6A22               	clrf	fatfs_split_path@max_path+1,c
 19514  009CD0  0E0A               	movlw	10
 19515  009CD2  6E21               	movwf	fatfs_split_path@max_path,c
 19516  009CD4  0E1C               	movlw	28
 19517  009CD6  254D               	addwf	__open_file@file& (0+255),w,b
 19518  009CD8  6E23               	movwf	fatfs_split_path@filename,c
 19519  009CDA  0E00               	movlw	0
 19520  009CDC  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19521  009CDE  6E24               	movwf	fatfs_split_path@filename+1,c
 19522  009CE0  6A26               	clrf	fatfs_split_path@max_filename+1,c
 19523  009CE2  0E0A               	movlw	10
 19524  009CE4  6E25               	movwf	fatfs_split_path@max_filename,c
 19525  009CE6  ECC1  F02F         	call	_fatfs_split_path	;wreg free
 19526  009CEA  281D               	incf	?_fatfs_split_path,w,c
 19527  009CEC  B4D8               	btfsc	status,2,c
 19528  009CEE  281E               	incf	?_fatfs_split_path+1,w,c
 19529  009CF0  E108               	bnz	l11223
 19530                           
 19531                           ;fat_filelib.c: 343: {
 19532                           ;fat_filelib.c: 344: _free_file(file);
 19533  009CF2  C14E  F010         	movff	__open_file@file+1,__free_file@file+1
 19534  009CF6  0101               	movlb	1	; () banked
 19535  009CF8  C14D  F00F         	movff	__open_file@file,__free_file@file
 19536  009CFC  EC99  F020         	call	__free_file	;wreg free
 19537  009D00  D135               	goto	L53
 19538  009D02                     l11223:
 19539                           
 19540                           ;fat_filelib.c: 346: }
 19541                           ;fat_filelib.c: 349: if (_check_file_open(file))
 19542  009D02  C14E  F026         	movff	__open_file@file+1,__check_file_open@file+1
 19543  009D06  0101               	movlb	1	; () banked
 19544  009D08  C14D  F025         	movff	__open_file@file,__check_file_open@file
 19545  009D0C  ECFC  F02A         	call	__check_file_open	;wreg free
 19546  009D10  5026               	movf	?__check_file_open+1,w,c
 19547  009D12  1025               	iorwf	?__check_file_open,w,c
 19548  009D14  E008               	bz	l11231
 19549                           
 19550                           ;fat_filelib.c: 350: {
 19551                           ;fat_filelib.c: 351: _free_file(file);
 19552  009D16  C14E  F010         	movff	__open_file@file+1,__free_file@file+1
 19553  009D1A  0101               	movlb	1	; () banked
 19554  009D1C  C14D  F00F         	movff	__open_file@file,__free_file@file
 19555  009D20  EC99  F020         	call	__free_file	;wreg free
 19556  009D24  D123               	goto	L53
 19557  009D26                     l11231:
 19558                           
 19559                           ;fat_filelib.c: 353: }
 19560                           ;fat_filelib.c: 356: if (file->path[0]==0)
 19561  009D26  EE20 F012          	lfsr	2,18
 19562  009D2A  0101               	movlb	1	; () banked
 19563  009D2C  514D               	movf	__open_file@file& (0+255),w,b
 19564  009D2E  26D9               	addwf	fsr2l,f,c
 19565  009D30  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19566  009D32  22DA               	addwfc	fsr2h,f,c
 19567  009D34  50DF               	movf	indf2,w,c
 19568  009D36  E11D               	bnz	l11235
 19569                           
 19570                           ; BSR set to: 1
 19571                           ;fat_filelib.c: 357: file->parentcluster = fatfs_get_root_cluster(&_fs);
 19572  009D38  0E09               	movlw	high __fs
 19573  009D3A  6E02               	movwf	fatfs_get_root_cluster@fs+1,c
 19574  009D3C  0E78               	movlw	low __fs
 19575  009D3E  6E01               	movwf	fatfs_get_root_cluster@fs,c
 19576  009D40  EC90  F01F         	call	_fatfs_get_root_cluster	;wreg free
 19577  009D44  C001  F0F4         	movff	?_fatfs_get_root_cluster,??__open_file
 19578  009D48  C002  F0F5         	movff	?_fatfs_get_root_cluster+1,??__open_file+1
 19579  009D4C  C003  F0F6         	movff	?_fatfs_get_root_cluster+2,??__open_file+2
 19580  009D50  C004  F0F7         	movff	?_fatfs_get_root_cluster+3,??__open_file+3
 19581  009D54  C14D  FFD9         	movff	__open_file@file,fsr2l
 19582  009D58  C14E  FFDA         	movff	__open_file@file+1,fsr2h
 19583  009D5C  C0F4  FFDE         	movff	??__open_file,postinc2
 19584  009D60  C0F5  FFDE         	movff	??__open_file+1,postinc2
 19585  009D64  C0F6  FFDE         	movff	??__open_file+2,postinc2
 19586  009D68  C0F7  FFDD         	movff	??__open_file+3,postdec2
 19587  009D6C  06D9               	decf	fsr2l,f,c
 19588  009D6E  06D9               	decf	fsr2l,f,c
 19589  009D70  D01C               	goto	l11243
 19590  009D72                     l11235:
 19591                           
 19592                           ;fat_filelib.c: 358: else
 19593                           ;fat_filelib.c: 359: {
 19594                           ;fat_filelib.c: 361: if (!_open_directory(file->path, &file->parentcluster))
 19595  009D72  0E12               	movlw	18
 19596  009D74  0101               	movlb	1	; () banked
 19597  009D76  254D               	addwf	__open_file@file& (0+255),w,b
 19598  009D78  0100               	movlb	0	; () banked
 19599  009D7A  6FB8               	movwf	__open_directory@path& (0+255),b
 19600  009D7C  0E00               	movlw	0
 19601  009D7E  0101               	movlb	1	; () banked
 19602  009D80  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19603  009D82  0100               	movlb	0	; () banked
 19604  009D84  6FB9               	movwf	(__open_directory@path+1)& (0+255),b
 19605  009D86  C14E  F0BB         	movff	__open_file@file+1,__open_directory@pathCluster+1
 19606  009D8A  C14D  F0BA         	movff	__open_file@file,__open_directory@pathCluster
 19607  009D8E  EC10  F034         	call	__open_directory	;wreg free
 19608  009D92  0100               	movlb	0	; () banked
 19609  009D94  51B9               	movf	(?__open_directory+1)& (0+255),w,b
 19610  009D96  11B8               	iorwf	?__open_directory& (0+255),w,b
 19611  009D98  E108               	bnz	l11243
 19612                           
 19613                           ; BSR set to: 0
 19614                           ;fat_filelib.c: 362: {
 19615                           ;fat_filelib.c: 363: _free_file(file);
 19616  009D9A  C14E  F010         	movff	__open_file@file+1,__free_file@file+1
 19617  009D9E  0101               	movlb	1	; () banked
 19618  009DA0  C14D  F00F         	movff	__open_file@file,__free_file@file
 19619  009DA4  EC99  F020         	call	__free_file	;wreg free
 19620  009DA8  D0E1               	goto	L53
 19621  009DAA                     l11243:
 19622                           
 19623                           ;fat_filelib.c: 365: }
 19624                           ;fat_filelib.c: 366: }
 19625                           ;fat_filelib.c: 369: if (fatfs_get_file_entry(&_fs, file->parentcluster, file->filename,
      +                          &sfEntry))
 19626  009DAA  0E09               	movlw	high __fs
 19627  009DAC  0100               	movlb	0	; () banked
 19628  009DAE  6FAD               	movwf	(fatfs_get_file_entry@fs+1)& (0+255),b
 19629  009DB0  0E78               	movlw	low __fs
 19630  009DB2  6FAC               	movwf	fatfs_get_file_entry@fs& (0+255),b
 19631  009DB4  C14D  FFD9         	movff	__open_file@file,fsr2l
 19632  009DB8  C14E  FFDA         	movff	__open_file@file+1,fsr2h
 19633  009DBC  CFDE F0AE          	movff	postinc2,fatfs_get_file_entry@Cluster
 19634  009DC0  CFDE F0AF          	movff	postinc2,fatfs_get_file_entry@Cluster+1
 19635  009DC4  CFDE F0B0          	movff	postinc2,fatfs_get_file_entry@Cluster+2
 19636  009DC8  CFDE F0B1          	movff	postinc2,fatfs_get_file_entry@Cluster+3
 19637  009DCC  0E1C               	movlw	28
 19638  009DCE  0101               	movlb	1	; () banked
 19639  009DD0  254D               	addwf	__open_file@file& (0+255),w,b
 19640  009DD2  0100               	movlb	0	; () banked
 19641  009DD4  6FB2               	movwf	fatfs_get_file_entry@name_to_find& (0+255),b
 19642  009DD6  0E00               	movlw	0
 19643  009DD8  0101               	movlb	1	; () banked
 19644  009DDA  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19645  009DDC  0100               	movlb	0	; () banked
 19646  009DDE  6FB3               	movwf	(fatfs_get_file_entry@name_to_find+1)& (0+255),b
 19647  009DE0  0E01               	movlw	high __open_file@sfEntry
 19648  009DE2  6FB5               	movwf	(fatfs_get_file_entry@sfEntry+1)& (0+255),b
 19649  009DE4  0E4F               	movlw	low __open_file@sfEntry
 19650  009DE6  6FB4               	movwf	fatfs_get_file_entry@sfEntry& (0+255),b
 19651  009DE8  ECB6  F049         	call	_fatfs_get_file_entry	;wreg free
 19652  009DEC  C0AC  F0F4         	movff	?_fatfs_get_file_entry,??__open_file
 19653  009DF0  C0AD  F0F5         	movff	?_fatfs_get_file_entry+1,??__open_file+1
 19654  009DF4  C0AE  F0F6         	movff	?_fatfs_get_file_entry+2,??__open_file+2
 19655  009DF8  C0AF  F0F7         	movff	?_fatfs_get_file_entry+3,??__open_file+3
 19656  009DFC  0100               	movlb	0	; () banked
 19657  009DFE  51F7               	movf	(??__open_file+3)& (0+255),w,b
 19658  009E00  11F4               	iorwf	??__open_file& (0+255),w,b
 19659  009E02  11F5               	iorwf	(??__open_file+1)& (0+255),w,b
 19660  009E04  11F6               	iorwf	(??__open_file+2)& (0+255),w,b
 19661  009E06  E101 D0AA          	bz	l11273
 19662                           
 19663                           ; BSR set to: 0
 19664                           ;fat_filelib.c: 371: if (fatfs_entry_is_file(&sfEntry))
 19665  009E0A  0E01               	movlw	high __open_file@sfEntry
 19666  009E0C  6E02               	movwf	fatfs_entry_is_file@entry+1,c
 19667  009E0E  0101               	movlb	1	; () banked
 19668  009E10  0E4F               	movlw	low __open_file@sfEntry
 19669  009E12  6E01               	movwf	fatfs_entry_is_file@entry,c
 19670  009E14  ECD4  F01F         	call	_fatfs_entry_is_file	;wreg free
 19671  009E18  5002               	movf	?_fatfs_entry_is_file+1,w,c
 19672  009E1A  1001               	iorwf	?_fatfs_entry_is_file,w,c
 19673  009E1C  E101 D09F          	bz	l11273
 19674                           
 19675                           ;fat_filelib.c: 372: {
 19676                           ;fat_filelib.c: 374: memcpy(file->shortfilename, sfEntry.Name, 11);
 19677  009E20  0E26               	movlw	38
 19678  009E22  0101               	movlb	1	; () banked
 19679  009E24  254D               	addwf	__open_file@file& (0+255),w,b
 19680  009E26  6E01               	movwf	memcpy@d1,c
 19681  009E28  0E00               	movlw	0
 19682  009E2A  214E               	addwfc	(__open_file@file+1)& (0+255),w,b
 19683  009E2C  6E02               	movwf	memcpy@d1+1,c
 19684  009E2E  0E20               	movlw	32
 19685  009E30  6E05               	movwf	memcpy@s1+2,c
 19686  009E32  0E01               	movlw	high __open_file@sfEntry
 19687  009E34  6E04               	movwf	memcpy@s1+1,c
 19688  009E36  0E4F               	movlw	low __open_file@sfEntry
 19689  009E38  6E03               	movwf	memcpy@s1,c
 19690  009E3A  6A07               	clrf	memcpy@n+1,c
 19691  009E3C  0E0B               	movlw	11
 19692  009E3E  6E06               	movwf	memcpy@n,c
 19693  009E40  ECAE  F023         	call	_memcpy	;wreg free
 19694                           
 19695                           ;fat_filelib.c: 375: file->filelength = (sfEntry.FileSize);
 19696  009E44  EE20 F00C          	lfsr	2,12
 19697  009E48  0101               	movlb	1	; () banked
 19698  009E4A  514D               	movf	__open_file@file& (0+255),w,b
 19699  009E4C  26D9               	addwf	fsr2l,f,c
 19700  009E4E  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19701  009E50  22DA               	addwfc	fsr2h,f,c
 19702  009E52  C16B  FFDE         	movff	__open_file@sfEntry+28,postinc2
 19703  009E56  C16C  FFDE         	movff	__open_file@sfEntry+29,postinc2
 19704  009E5A  C16D  FFDE         	movff	__open_file@sfEntry+30,postinc2
 19705  009E5E  C16E  FFDE         	movff	__open_file@sfEntry+31,postinc2
 19706                           
 19707                           ; BSR set to: 1
 19708                           ;fat_filelib.c: 376: file->bytenum = 0;
 19709  009E62  EE20 F008          	lfsr	2,8
 19710  009E66  514D               	movf	__open_file@file& (0+255),w,b
 19711  009E68  26D9               	addwf	fsr2l,f,c
 19712  009E6A  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19713  009E6C  22DA               	addwfc	fsr2h,f,c
 19714  009E6E  6ADE               	clrf	postinc2,c
 19715  009E70  6ADE               	clrf	postinc2,c
 19716  009E72  6ADE               	clrf	postinc2,c
 19717  009E74  6ADD               	clrf	postdec2,c
 19718                           
 19719                           ; BSR set to: 1
 19720                           ;fat_filelib.c: 377: file->startcluster = ((((uint32)sfEntry.FstClusHI))<<16) + (sfEntry
      +                          .FstClusLO);
 19721  009E76  5163               	movf	(__open_file@sfEntry+20)& (0+255),w,b
 19722  009E78  0100               	movlb	0	; () banked
 19723  009E7A  6FF4               	movwf	??__open_file& (0+255),b
 19724  009E7C  0101               	movlb	1	; () banked
 19725  009E7E  5164               	movf	(__open_file@sfEntry+21)& (0+255),w,b
 19726  009E80  0100               	movlb	0	; () banked
 19727  009E82  6FF5               	movwf	(??__open_file+1)& (0+255),b
 19728  009E84  6BF6               	clrf	(??__open_file+2)& (0+255),b
 19729  009E86  6BF7               	clrf	(??__open_file+3)& (0+255),b
 19730  009E88  C0F5  F0F7         	movff	??__open_file+1,??__open_file+3
 19731  009E8C  C0F4  F0F6         	movff	??__open_file,??__open_file+2
 19732  009E90  6BF5               	clrf	(??__open_file+1)& (0+255),b
 19733  009E92  6BF4               	clrf	??__open_file& (0+255),b
 19734  009E94  0101               	movlb	1	; () banked
 19735  009E96  5169               	movf	(__open_file@sfEntry+26)& (0+255),w,b
 19736  009E98  0100               	movlb	0	; () banked
 19737  009E9A  25F4               	addwf	??__open_file& (0+255),w,b
 19738  009E9C  6FF8               	movwf	(??__open_file+4)& (0+255),b
 19739  009E9E  0101               	movlb	1	; () banked
 19740  009EA0  516A               	movf	(__open_file@sfEntry+27)& (0+255),w,b
 19741  009EA2  0100               	movlb	0	; () banked
 19742  009EA4  21F5               	addwfc	(??__open_file+1)& (0+255),w,b
 19743  009EA6  6FF9               	movwf	(??__open_file+5)& (0+255),b
 19744  009EA8  0E00               	movlw	0
 19745  009EAA  21F6               	addwfc	(??__open_file+2)& (0+255),w,b
 19746  009EAC  6FFA               	movwf	(??__open_file+6)& (0+255),b
 19747  009EAE  0E00               	movlw	0
 19748  009EB0  21F7               	addwfc	(??__open_file+3)& (0+255),w,b
 19749  009EB2  6FFB               	movwf	(??__open_file+7)& (0+255),b
 19750  009EB4  EE20 F004          	lfsr	2,4
 19751  009EB8  0101               	movlb	1	; () banked
 19752  009EBA  514D               	movf	__open_file@file& (0+255),w,b
 19753  009EBC  26D9               	addwf	fsr2l,f,c
 19754  009EBE  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19755  009EC0  22DA               	addwfc	fsr2h,f,c
 19756  009EC2  C0F8  FFDE         	movff	??__open_file+4,postinc2
 19757  009EC6  C0F9  FFDE         	movff	??__open_file+5,postinc2
 19758  009ECA  C0FA  FFDE         	movff	??__open_file+6,postinc2
 19759  009ECE  C0FB  FFDD         	movff	??__open_file+7,postdec2
 19760  009ED2  06D9               	decf	fsr2l,f,c
 19761  009ED4  06D9               	decf	fsr2l,f,c
 19762                           
 19763                           ; BSR set to: 1
 19764                           ;fat_filelib.c: 378: file->file_data_address = 0xFFFFFFFF;
 19765  009ED6  EE22 F039          	lfsr	2,569
 19766  009EDA  514D               	movf	__open_file@file& (0+255),w,b
 19767  009EDC  26D9               	addwf	fsr2l,f,c
 19768  009EDE  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19769  009EE0  22DA               	addwfc	fsr2h,f,c
 19770  009EE2  68DE               	setf	postinc2,c
 19771  009EE4  68DE               	setf	postinc2,c
 19772  009EE6  68DE               	setf	postinc2,c
 19773  009EE8  68DD               	setf	postdec2,c
 19774                           
 19775                           ; BSR set to: 1
 19776                           ;fat_filelib.c: 379: file->file_data_dirty = 0;
 19777  009EEA  EE22 F03D          	lfsr	2,573
 19778  009EEE  514D               	movf	__open_file@file& (0+255),w,b
 19779  009EF0  26D9               	addwf	fsr2l,f,c
 19780  009EF2  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19781  009EF4  22DA               	addwfc	fsr2h,f,c
 19782  009EF6  6ADE               	clrf	postinc2,c
 19783  009EF8  6ADD               	clrf	postdec2,c
 19784                           
 19785                           ; BSR set to: 1
 19786                           ;fat_filelib.c: 380: file->filelength_changed = 0;
 19787  009EFA  EE20 F010          	lfsr	2,16
 19788  009EFE  514D               	movf	__open_file@file& (0+255),w,b
 19789  009F00  26D9               	addwf	fsr2l,f,c
 19790  009F02  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19791  009F04  22DA               	addwfc	fsr2h,f,c
 19792  009F06  6ADE               	clrf	postinc2,c
 19793  009F08  6ADD               	clrf	postdec2,c
 19794                           
 19795                           ; BSR set to: 1
 19796                           ;fat_filelib.c: 383: file->last_fat_lookup.ClusterIdx = 0xFFFFFFFF;
 19797  009F0A  EE20 F031          	lfsr	2,49
 19798  009F0E  514D               	movf	__open_file@file& (0+255),w,b
 19799  009F10  26D9               	addwf	fsr2l,f,c
 19800  009F12  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19801  009F14  22DA               	addwfc	fsr2h,f,c
 19802  009F16  68DE               	setf	postinc2,c
 19803  009F18  68DE               	setf	postinc2,c
 19804  009F1A  68DE               	setf	postinc2,c
 19805  009F1C  68DD               	setf	postdec2,c
 19806                           
 19807                           ; BSR set to: 1
 19808                           ;fat_filelib.c: 384: file->last_fat_lookup.CurrentCluster = 0xFFFFFFFF;
 19809  009F1E  EE20 F035          	lfsr	2,53
 19810  009F22  514D               	movf	__open_file@file& (0+255),w,b
 19811  009F24  26D9               	addwf	fsr2l,f,c
 19812  009F26  514E               	movf	(__open_file@file+1)& (0+255),w,b
 19813  009F28  22DA               	addwfc	fsr2h,f,c
 19814  009F2A  68DE               	setf	postinc2,c
 19815  009F2C  68DE               	setf	postinc2,c
 19816  009F2E  68DE               	setf	postinc2,c
 19817  009F30  68DD               	setf	postdec2,c
 19818                           
 19819                           ; BSR set to: 1
 19820                           ;fat_filelib.c: 386: fatfs_cache_init(&_fs, file);
 19821  009F32  0E09               	movlw	high __fs
 19822  009F34  6E02               	movwf	fatfs_cache_init@fs+1,c
 19823  009F36  0E78               	movlw	low __fs
 19824  009F38  6E01               	movwf	fatfs_cache_init@fs,c
 19825  009F3A  C14E  F004         	movff	__open_file@file+1,fatfs_cache_init@file+1
 19826  009F3E  C14D  F003         	movff	__open_file@file,fatfs_cache_init@file
 19827  009F42  EC22  F01F         	call	_fatfs_cache_init	;wreg free
 19828                           
 19829                           ;fat_filelib.c: 388: fatfs_fat_purge(&_fs);
 19830  009F46  0E09               	movlw	high __fs
 19831  009F48  6E35               	movwf	fatfs_fat_purge@fs+1,c
 19832  009F4A  0E78               	movlw	low __fs
 19833  009F4C  6E34               	movwf	fatfs_fat_purge@fs,c
 19834  009F4E  ECCD  F022         	call	_fatfs_fat_purge	;wreg free
 19835                           
 19836                           ;fat_filelib.c: 390: return file;
 19837  009F52  C14E  F0F3         	movff	__open_file@file+1,?__open_file+1
 19838  009F56  0100               	movlb	0	; () banked
 19839  009F58  C14D  F0F2         	movff	__open_file@file,?__open_file
 19840  009F5C  D00B               	goto	l475
 19841  009F5E                     l11273:
 19842                           
 19843                           ;fat_filelib.c: 391: }
 19844                           ;fat_filelib.c: 393: _free_file(file);
 19845  009F5E  C14E  F010         	movff	__open_file@file+1,__free_file@file+1
 19846  009F62  0101               	movlb	1	; () banked
 19847  009F64  C14D  F00F         	movff	__open_file@file,__free_file@file
 19848  009F68  EC99  F020         	call	__free_file	;wreg free
 19849  009F6C                     L53:
 19850                           
 19851                           ;fat_filelib.c: 394: return (0);
 19852  009F6C  0E00               	movlw	0
 19853  009F6E  0100               	movlb	0	; () banked
 19854  009F70  6FF3               	movwf	(?__open_file+1)& (0+255),b
 19855  009F72  6FF2               	movwf	?__open_file& (0+255),b
 19856  009F74                     l475:
 19857                           
 19858                           ; BSR set to: 0
 19859  009F74  0012               	return	
 19860  009F76                     __end_of__open_file:
 19861                           	opt stack 0
 19862                           tosu	equ	0xFFF
 19863                           tosh	equ	0xFFE
 19864                           tosl	equ	0xFFD
 19865                           pclath	equ	0xFFA
 19866                           tblptru	equ	0xFF8
 19867                           tblptrh	equ	0xFF7
 19868                           tblptrl	equ	0xFF6
 19869                           tablat	equ	0xFF5
 19870                           prodh	equ	0xFF4
 19871                           prodl	equ	0xFF3
 19872                           indf0	equ	0xFEF
 19873                           postinc0	equ	0xFEE
 19874                           fsr0h	equ	0xFEA
 19875                           fsr0l	equ	0xFE9
 19876                           wreg	equ	0xFE8
 19877                           indf1	equ	0xFE7
 19878                           postinc1	equ	0xFE6
 19879                           postdec1	equ	0xFE5
 19880                           fsr1h	equ	0xFE2
 19881                           fsr1l	equ	0xFE1
 19882                           indf2	equ	0xFDF
 19883                           postinc2	equ	0xFDE
 19884                           postdec2	equ	0xFDD
 19885                           fsr2h	equ	0xFDA
 19886                           fsr2l	equ	0xFD9
 19887                           status	equ	0xFD8
 19888                           
 19889 ;; *************** function _fatfs_entry_is_file *****************
 19890 ;; Defined at:
 19891 ;;		line 182 in file "fat_misc.c"
 19892 ;; Parameters:    Size  Location     Type
 19893 ;;  entry           2    0[COMRAM] PTR struct fat_dir_entry
 19894 ;;		 -> _open_file@sfEntry(32), 
 19895 ;; Auto vars:     Size  Location     Type
 19896 ;;		None
 19897 ;; Return value:  Size  Location     Type
 19898 ;;                  2    0[COMRAM] int 
 19899 ;; Registers used:
 19900 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19901 ;; Tracked objects:
 19902 ;;		On entry : 0/0
 19903 ;;		On exit  : 0/0
 19904 ;;		Unchanged: 0/0
 19905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19909 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19910 ;;Total ram usage:        3 bytes
 19911 ;; Hardware stack levels used:    1
 19912 ;; This function calls:
 19913 ;;		Nothing
 19914 ;; This function is called by:
 19915 ;;		__open_file
 19916 ;; This function uses a non-reentrant model
 19917 ;;
 19918                           
 19919                           	psect	text50
 19920  003FA8                     __ptext50:
 19921                           	opt stack 0
 19922  003FA8                     _fatfs_entry_is_file:
 19923                           	opt stack 25
 19924                           
 19925                           ;fat_misc.c: 184: if (entry->Attr & 0x20)
 19926                           
 19927                           ; BSR set to: 0
 19928                           ;incstack = 0
 19929  003FA8  EE20 F00B          	lfsr	2,11
 19930  003FAC  5001               	movf	fatfs_entry_is_file@entry,w,c
 19931  003FAE  26D9               	addwf	fsr2l,f,c
 19932  003FB0  5002               	movf	fatfs_entry_is_file@entry+1,w,c
 19933  003FB2  22DA               	addwfc	fsr2h,f,c
 19934  003FB4  50DF               	movf	indf2,w,c
 19935  003FB6  6E03               	movwf	??_fatfs_entry_is_file& (0+255),c
 19936  003FB8  AA03               	btfss	??_fatfs_entry_is_file,5,c
 19937  003FBA  D004               	goto	l10855
 19938                           
 19939                           ;fat_misc.c: 185: return 1;
 19940  003FBC  0E00               	movlw	0
 19941  003FBE  6E02               	movwf	?_fatfs_entry_is_file+1,c
 19942  003FC0  0E01               	movlw	1
 19943  003FC2  D002               	goto	L54
 19944  003FC4                     l10855:
 19945                           
 19946                           ;fat_misc.c: 186: else
 19947                           ;fat_misc.c: 187: return 0;
 19948  003FC4  0E00               	movlw	0
 19949  003FC6  6E02               	movwf	?_fatfs_entry_is_file+1,c
 19950  003FC8                     L54:
 19951  003FC8  6E01               	movwf	?_fatfs_entry_is_file,c
 19952  003FCA  0012               	return	
 19953  003FCC                     __end_of_fatfs_entry_is_file:
 19954                           	opt stack 0
 19955                           tosu	equ	0xFFF
 19956                           tosh	equ	0xFFE
 19957                           tosl	equ	0xFFD
 19958                           pclath	equ	0xFFA
 19959                           tblptru	equ	0xFF8
 19960                           tblptrh	equ	0xFF7
 19961                           tblptrl	equ	0xFF6
 19962                           tablat	equ	0xFF5
 19963                           prodh	equ	0xFF4
 19964                           prodl	equ	0xFF3
 19965                           indf0	equ	0xFEF
 19966                           postinc0	equ	0xFEE
 19967                           fsr0h	equ	0xFEA
 19968                           fsr0l	equ	0xFE9
 19969                           wreg	equ	0xFE8
 19970                           indf1	equ	0xFE7
 19971                           postinc1	equ	0xFE6
 19972                           postdec1	equ	0xFE5
 19973                           fsr1h	equ	0xFE2
 19974                           fsr1l	equ	0xFE1
 19975                           indf2	equ	0xFDF
 19976                           postinc2	equ	0xFDE
 19977                           postdec2	equ	0xFDD
 19978                           fsr2h	equ	0xFDA
 19979                           fsr2l	equ	0xFD9
 19980                           status	equ	0xFD8
 19981                           
 19982 ;; *************** function __create_file *****************
 19983 ;; Defined at:
 19984 ;;		line 400 in file "fat_filelib.c"
 19985 ;; Parameters:    Size  Location     Type
 19986 ;;  filename        2  114[BANK0 ] PTR const unsigned char 
 19987 ;;		 -> s(17), m(30), 
 19988 ;; Auto vars:     Size  Location     Type
 19989 ;;  sfEntry        32   88[BANK1 ] struct fat_dir_entry
 19990 ;;  shortFilenam   11   77[BANK1 ] unsigned char [11]
 19991 ;;  file            2  122[BANK1 ] PTR struct sFL_FILE
 19992 ;;		 -> RAM(3967), NULL(0), 
 19993 ;;  tailNum         2  120[BANK1 ] int 
 19994 ;; Return value:  Size  Location     Type
 19995 ;;                  2  114[BANK0 ] PTR struct sFL_FILE
 19996 ;; Registers used:
 19997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 19998 ;; Tracked objects:
 19999 ;;		On entry : 0/0
 20000 ;;		On exit  : 0/0
 20001 ;;		Unchanged: 0/0
 20002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20003 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20004 ;;      Locals:         0       0      47       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20005 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20006 ;;      Totals:         0       6      47       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20007 ;;Total ram usage:       53 bytes
 20008 ;; Hardware stack levels used:    1
 20009 ;; Hardware stack levels required when called:    9
 20010 ;; This function calls:
 20011 ;;		__allocate_file
 20012 ;;		__check_file_open
 20013 ;;		__free_file
 20014 ;;		__open_directory
 20015 ;;		_fatfs_add_file_entry
 20016 ;;		_fatfs_allocate_free_space
 20017 ;;		_fatfs_cache_init
 20018 ;;		_fatfs_fat_purge
 20019 ;;		_fatfs_free_cluster_chain
 20020 ;;		_fatfs_get_file_entry
 20021 ;;		_fatfs_get_root_cluster
 20022 ;;		_fatfs_lfn_create_sfn
 20023 ;;		_fatfs_lfn_generate_tail
 20024 ;;		_fatfs_sfn_exists
 20025 ;;		_fatfs_split_path
 20026 ;;		_memcpy
 20027 ;;		_memset
 20028 ;; This function is called by:
 20029 ;;		_fl_fopen
 20030 ;; This function uses a non-reentrant model
 20031 ;;
 20032                           
 20033                           	psect	text51
 20034  00C094                     __ptext51:
 20035                           	opt stack 0
 20036  00C094                     __create_file:
 20037                           	opt stack 17
 20038                           
 20039                           ;fat_filelib.c: 402: FL_FILE* file;
 20040                           ;fat_filelib.c: 403: struct fat_dir_entry sfEntry;
 20041                           ;fat_filelib.c: 404: char shortFilename[11];
 20042                           ;fat_filelib.c: 405: int tailNum = 0;
 20043                           
 20044                           ;incstack = 0
 20045  00C094  0101               	movlb	1	; () banked
 20046  00C096  6B79               	clrf	(__create_file@tailNum+1)& (0+255),b
 20047  00C098  6B78               	clrf	__create_file@tailNum& (0+255),b
 20048                           
 20049                           ; BSR set to: 1
 20050                           ;fat_filelib.c: 408: if (!_fs.disk_io.write_media)
 20051  00C09A  EE29  F0A3         	lfsr	2,__fs+43
 20052  00C09E  50DE               	movf	postinc2,w,c
 20053  00C0A0  10DD               	iorwf	postdec2,w,c
 20054  00C0A2  E101 D1F3          	bz	L61
 20055                           
 20056                           ;fat_filelib.c: 412: file = _allocate_file();
 20057                           
 20058                           ; BSR set to: 0
 20059                           
 20060                           ; BSR set to: 0
 20061                           
 20062                           ; BSR set to: 1
 20063                           ;fat_filelib.c: 409: return (0);
 20064  00C0A6  ECDA  F021         	call	__allocate_file	;wreg free
 20065  00C0AA  C00F  F17A         	movff	?__allocate_file,__create_file@file
 20066  00C0AE  C010  F17B         	movff	?__allocate_file+1,__create_file@file+1
 20067                           
 20068                           ;fat_filelib.c: 413: if (!file)
 20069  00C0B2  0101               	movlb	1	; () banked
 20070  00C0B4  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20071  00C0B6  117A               	iorwf	__create_file@file& (0+255),w,b
 20072  00C0B8  E101 D1E8          	bz	L61
 20073                           
 20074                           ;fat_filelib.c: 417: memset(file->path, '\0', sizeof(file->path));
 20075                           
 20076                           ; BSR set to: 0
 20077                           
 20078                           ; BSR set to: 0
 20079                           
 20080                           ; BSR set to: 1
 20081                           ;fat_filelib.c: 414: return (0);
 20082  00C0BC  0E12               	movlw	18
 20083  00C0BE  257A               	addwf	__create_file@file& (0+255),w,b
 20084  00C0C0  6E01               	movwf	memset@p1,c
 20085  00C0C2  0E00               	movlw	0
 20086  00C0C4  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20087  00C0C6  6E02               	movwf	memset@p1+1,c
 20088  00C0C8  6A04               	clrf	memset@c+1,c
 20089  00C0CA  6A03               	clrf	memset@c,c
 20090  00C0CC  6A06               	clrf	memset@n+1,c
 20091  00C0CE  0E0A               	movlw	10
 20092  00C0D0  6E05               	movwf	memset@n,c
 20093  00C0D2  EC24  F020         	call	_memset	;wreg free
 20094                           
 20095                           ;fat_filelib.c: 418: memset(file->filename, '\0', sizeof(file->filename));
 20096  00C0D6  0E1C               	movlw	28
 20097  00C0D8  0101               	movlb	1	; () banked
 20098  00C0DA  257A               	addwf	__create_file@file& (0+255),w,b
 20099  00C0DC  6E01               	movwf	memset@p1,c
 20100  00C0DE  0E00               	movlw	0
 20101  00C0E0  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20102  00C0E2  6E02               	movwf	memset@p1+1,c
 20103  00C0E4  6A04               	clrf	memset@c+1,c
 20104  00C0E6  6A03               	clrf	memset@c,c
 20105  00C0E8  6A06               	clrf	memset@n+1,c
 20106  00C0EA  0E0A               	movlw	10
 20107  00C0EC  6E05               	movwf	memset@n,c
 20108  00C0EE  EC24  F020         	call	_memset	;wreg free
 20109                           
 20110                           ;fat_filelib.c: 421: if (fatfs_split_path((char*)filename, file->path, sizeof(file->path
      +                          ), file->filename, sizeof(file->filename)) == -1)
 20111  00C0F2  C0F3  F01E         	movff	__create_file@filename+1,fatfs_split_path@full_path+1
 20112  00C0F6  C0F2  F01D         	movff	__create_file@filename,fatfs_split_path@full_path
 20113  00C0FA  0E12               	movlw	18
 20114  00C0FC  0101               	movlb	1	; () banked
 20115  00C0FE  257A               	addwf	__create_file@file& (0+255),w,b
 20116  00C100  6E1F               	movwf	fatfs_split_path@path,c
 20117  00C102  0E00               	movlw	0
 20118  00C104  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20119  00C106  6E20               	movwf	fatfs_split_path@path+1,c
 20120  00C108  6A22               	clrf	fatfs_split_path@max_path+1,c
 20121  00C10A  0E0A               	movlw	10
 20122  00C10C  6E21               	movwf	fatfs_split_path@max_path,c
 20123  00C10E  0E1C               	movlw	28
 20124  00C110  257A               	addwf	__create_file@file& (0+255),w,b
 20125  00C112  6E23               	movwf	fatfs_split_path@filename,c
 20126  00C114  0E00               	movlw	0
 20127  00C116  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20128  00C118  6E24               	movwf	fatfs_split_path@filename+1,c
 20129  00C11A  6A26               	clrf	fatfs_split_path@max_filename+1,c
 20130  00C11C  0E0A               	movlw	10
 20131  00C11E  6E25               	movwf	fatfs_split_path@max_filename,c
 20132  00C120  ECC1  F02F         	call	_fatfs_split_path	;wreg free
 20133  00C124  281D               	incf	?_fatfs_split_path,w,c
 20134  00C126  B4D8               	btfsc	status,2,c
 20135  00C128  281E               	incf	?_fatfs_split_path+1,w,c
 20136  00C12A  E108               	bnz	l11305
 20137                           
 20138                           ;fat_filelib.c: 422: {
 20139                           ;fat_filelib.c: 423: _free_file(file);
 20140  00C12C  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20141  00C130  0101               	movlb	1	; () banked
 20142  00C132  C17A  F00F         	movff	__create_file@file,__free_file@file
 20143  00C136  EC99  F020         	call	__free_file	;wreg free
 20144  00C13A  D1A8               	goto	L61
 20145  00C13C                     l11305:
 20146                           
 20147                           ;fat_filelib.c: 425: }
 20148                           ;fat_filelib.c: 428: if (_check_file_open(file))
 20149  00C13C  C17B  F026         	movff	__create_file@file+1,__check_file_open@file+1
 20150  00C140  0101               	movlb	1	; () banked
 20151  00C142  C17A  F025         	movff	__create_file@file,__check_file_open@file
 20152  00C146  ECFC  F02A         	call	__check_file_open	;wreg free
 20153  00C14A  5026               	movf	?__check_file_open+1,w,c
 20154  00C14C  1025               	iorwf	?__check_file_open,w,c
 20155  00C14E  E008               	bz	l11313
 20156                           
 20157                           ;fat_filelib.c: 429: {
 20158                           ;fat_filelib.c: 430: _free_file(file);
 20159  00C150  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20160  00C154  0101               	movlb	1	; () banked
 20161  00C156  C17A  F00F         	movff	__create_file@file,__free_file@file
 20162  00C15A  EC99  F020         	call	__free_file	;wreg free
 20163  00C15E  D196               	goto	L61
 20164  00C160                     l11313:
 20165                           
 20166                           ;fat_filelib.c: 432: }
 20167                           ;fat_filelib.c: 435: if (file->path[0] == 0)
 20168  00C160  EE20 F012          	lfsr	2,18
 20169  00C164  0101               	movlb	1	; () banked
 20170  00C166  517A               	movf	__create_file@file& (0+255),w,b
 20171  00C168  26D9               	addwf	fsr2l,f,c
 20172  00C16A  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20173  00C16C  22DA               	addwfc	fsr2h,f,c
 20174  00C16E  50DF               	movf	indf2,w,c
 20175  00C170  E11D               	bnz	l11317
 20176                           
 20177                           ; BSR set to: 1
 20178                           ;fat_filelib.c: 436: file->parentcluster = fatfs_get_root_cluster(&_fs);
 20179  00C172  0E09               	movlw	high __fs
 20180  00C174  6E02               	movwf	fatfs_get_root_cluster@fs+1,c
 20181  00C176  0E78               	movlw	low __fs
 20182  00C178  6E01               	movwf	fatfs_get_root_cluster@fs,c
 20183  00C17A  EC90  F01F         	call	_fatfs_get_root_cluster	;wreg free
 20184  00C17E  C001  F0F4         	movff	?_fatfs_get_root_cluster,??__create_file
 20185  00C182  C002  F0F5         	movff	?_fatfs_get_root_cluster+1,??__create_file+1
 20186  00C186  C003  F0F6         	movff	?_fatfs_get_root_cluster+2,??__create_file+2
 20187  00C18A  C004  F0F7         	movff	?_fatfs_get_root_cluster+3,??__create_file+3
 20188  00C18E  C17A  FFD9         	movff	__create_file@file,fsr2l
 20189  00C192  C17B  FFDA         	movff	__create_file@file+1,fsr2h
 20190  00C196  C0F4  FFDE         	movff	??__create_file,postinc2
 20191  00C19A  C0F5  FFDE         	movff	??__create_file+1,postinc2
 20192  00C19E  C0F6  FFDE         	movff	??__create_file+2,postinc2
 20193  00C1A2  C0F7  FFDD         	movff	??__create_file+3,postdec2
 20194  00C1A6  06D9               	decf	fsr2l,f,c
 20195  00C1A8  06D9               	decf	fsr2l,f,c
 20196  00C1AA  D01C               	goto	l11325
 20197  00C1AC                     l11317:
 20198                           
 20199                           ;fat_filelib.c: 437: else
 20200                           ;fat_filelib.c: 438: {
 20201                           ;fat_filelib.c: 440: if (!_open_directory(file->path, &file->parentcluster))
 20202  00C1AC  0E12               	movlw	18
 20203  00C1AE  0101               	movlb	1	; () banked
 20204  00C1B0  257A               	addwf	__create_file@file& (0+255),w,b
 20205  00C1B2  0100               	movlb	0	; () banked
 20206  00C1B4  6FB8               	movwf	__open_directory@path& (0+255),b
 20207  00C1B6  0E00               	movlw	0
 20208  00C1B8  0101               	movlb	1	; () banked
 20209  00C1BA  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20210  00C1BC  0100               	movlb	0	; () banked
 20211  00C1BE  6FB9               	movwf	(__open_directory@path+1)& (0+255),b
 20212  00C1C0  C17B  F0BB         	movff	__create_file@file+1,__open_directory@pathCluster+1
 20213  00C1C4  C17A  F0BA         	movff	__create_file@file,__open_directory@pathCluster
 20214  00C1C8  EC10  F034         	call	__open_directory	;wreg free
 20215  00C1CC  0100               	movlb	0	; () banked
 20216  00C1CE  51B9               	movf	(?__open_directory+1)& (0+255),w,b
 20217  00C1D0  11B8               	iorwf	?__open_directory& (0+255),w,b
 20218  00C1D2  E108               	bnz	l11325
 20219                           
 20220                           ; BSR set to: 0
 20221                           ;fat_filelib.c: 441: {
 20222                           ;fat_filelib.c: 442: _free_file(file);
 20223  00C1D4  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20224  00C1D8  0101               	movlb	1	; () banked
 20225  00C1DA  C17A  F00F         	movff	__create_file@file,__free_file@file
 20226  00C1DE  EC99  F020         	call	__free_file	;wreg free
 20227  00C1E2  D154               	goto	L61
 20228  00C1E4                     l11325:
 20229                           
 20230                           ;fat_filelib.c: 444: }
 20231                           ;fat_filelib.c: 445: }
 20232                           ;fat_filelib.c: 448: if (fatfs_get_file_entry(&_fs, file->parentcluster, file->filename,
      +                          &sfEntry) == 1)
 20233  00C1E4  0E09               	movlw	high __fs
 20234  00C1E6  0100               	movlb	0	; () banked
 20235  00C1E8  6FAD               	movwf	(fatfs_get_file_entry@fs+1)& (0+255),b
 20236  00C1EA  0E78               	movlw	low __fs
 20237  00C1EC  6FAC               	movwf	fatfs_get_file_entry@fs& (0+255),b
 20238  00C1EE  C17A  FFD9         	movff	__create_file@file,fsr2l
 20239  00C1F2  C17B  FFDA         	movff	__create_file@file+1,fsr2h
 20240  00C1F6  CFDE F0AE          	movff	postinc2,fatfs_get_file_entry@Cluster
 20241  00C1FA  CFDE F0AF          	movff	postinc2,fatfs_get_file_entry@Cluster+1
 20242  00C1FE  CFDE F0B0          	movff	postinc2,fatfs_get_file_entry@Cluster+2
 20243  00C202  CFDE F0B1          	movff	postinc2,fatfs_get_file_entry@Cluster+3
 20244  00C206  0E1C               	movlw	28
 20245  00C208  0101               	movlb	1	; () banked
 20246  00C20A  257A               	addwf	__create_file@file& (0+255),w,b
 20247  00C20C  0100               	movlb	0	; () banked
 20248  00C20E  6FB2               	movwf	fatfs_get_file_entry@name_to_find& (0+255),b
 20249  00C210  0E00               	movlw	0
 20250  00C212  0101               	movlb	1	; () banked
 20251  00C214  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20252  00C216  0100               	movlb	0	; () banked
 20253  00C218  6FB3               	movwf	(fatfs_get_file_entry@name_to_find+1)& (0+255),b
 20254  00C21A  0E01               	movlw	high __create_file@sfEntry
 20255  00C21C  6FB5               	movwf	(fatfs_get_file_entry@sfEntry+1)& (0+255),b
 20256  00C21E  0E58               	movlw	low __create_file@sfEntry
 20257  00C220  6FB4               	movwf	fatfs_get_file_entry@sfEntry& (0+255),b
 20258  00C222  ECB6  F049         	call	_fatfs_get_file_entry	;wreg free
 20259  00C226  C0AC  F0F4         	movff	?_fatfs_get_file_entry,??__create_file
 20260  00C22A  C0AD  F0F5         	movff	?_fatfs_get_file_entry+1,??__create_file+1
 20261  00C22E  C0AE  F0F6         	movff	?_fatfs_get_file_entry+2,??__create_file+2
 20262  00C232  C0AF  F0F7         	movff	?_fatfs_get_file_entry+3,??__create_file+3
 20263  00C236  0100               	movlb	0	; () banked
 20264  00C238  05F4               	decf	??__create_file& (0+255),w,b
 20265  00C23A  11F5               	iorwf	(??__create_file+1)& (0+255),w,b
 20266  00C23C  11F6               	iorwf	(??__create_file+2)& (0+255),w,b
 20267  00C23E  11F7               	iorwf	(??__create_file+3)& (0+255),w,b
 20268  00C240  E108               	bnz	l11333
 20269                           
 20270                           ; BSR set to: 0
 20271                           ;fat_filelib.c: 449: {
 20272                           ;fat_filelib.c: 450: _free_file(file);
 20273  00C242  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20274  00C246  0101               	movlb	1	; () banked
 20275  00C248  C17A  F00F         	movff	__create_file@file,__free_file@file
 20276  00C24C  EC99  F020         	call	__free_file	;wreg free
 20277  00C250  D11D               	goto	L61
 20278  00C252                     l11333:
 20279                           
 20280                           ; BSR set to: 0
 20281                           ;fat_filelib.c: 452: }
 20282                           ;fat_filelib.c: 454: file->startcluster = 0;
 20283  00C252  EE20 F004          	lfsr	2,4
 20284  00C256  0101               	movlb	1	; () banked
 20285  00C258  517A               	movf	__create_file@file& (0+255),w,b
 20286  00C25A  26D9               	addwf	fsr2l,f,c
 20287  00C25C  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20288  00C25E  22DA               	addwfc	fsr2h,f,c
 20289  00C260  6ADE               	clrf	postinc2,c
 20290  00C262  6ADE               	clrf	postinc2,c
 20291  00C264  6ADE               	clrf	postinc2,c
 20292  00C266  6ADD               	clrf	postdec2,c
 20293                           
 20294                           ; BSR set to: 1
 20295                           ;fat_filelib.c: 457: if (!fatfs_allocate_free_space(&_fs, 1, &file->startcluster, 1))
 20296  00C268  0E09               	movlw	high __fs
 20297  00C26A  0100               	movlb	0	; () banked
 20298  00C26C  6F9F               	movwf	(fatfs_allocate_free_space@fs+1)& (0+255),b
 20299  00C26E  0E78               	movlw	low __fs
 20300  00C270  6F9E               	movwf	fatfs_allocate_free_space@fs& (0+255),b
 20301  00C272  6BA1               	clrf	(fatfs_allocate_free_space@newFile+1)& (0+255),b
 20302  00C274  0E01               	movlw	1
 20303  00C276  6FA0               	movwf	fatfs_allocate_free_space@newFile& (0+255),b
 20304  00C278  0E04               	movlw	4
 20305  00C27A  0101               	movlb	1	; () banked
 20306  00C27C  257A               	addwf	__create_file@file& (0+255),w,b
 20307  00C27E  0100               	movlb	0	; () banked
 20308  00C280  6FA2               	movwf	fatfs_allocate_free_space@startCluster& (0+255),b
 20309  00C282  0E00               	movlw	0
 20310  00C284  0101               	movlb	1	; () banked
 20311  00C286  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20312  00C288  0100               	movlb	0	; () banked
 20313  00C28A  6FA3               	movwf	(fatfs_allocate_free_space@startCluster+1)& (0+255),b
 20314  00C28C  0E01               	movlw	1
 20315  00C28E  6FA4               	movwf	fatfs_allocate_free_space@size& (0+255),b
 20316  00C290  0E00               	movlw	0
 20317  00C292  6BA5               	clrf	(fatfs_allocate_free_space@size+1)& (0+255),b
 20318  00C294  6BA6               	clrf	(fatfs_allocate_free_space@size+2)& (0+255),b
 20319  00C296  6BA7               	clrf	(fatfs_allocate_free_space@size+3)& (0+255),b
 20320  00C298  ECAC  F044         	call	_fatfs_allocate_free_space	;wreg free
 20321  00C29C  0100               	movlb	0	; () banked
 20322  00C29E  519F               	movf	(?_fatfs_allocate_free_space+1)& (0+255),w,b
 20323  00C2A0  119E               	iorwf	?_fatfs_allocate_free_space& (0+255),w,b
 20324  00C2A2  E108               	bnz	l11343
 20325                           
 20326                           ; BSR set to: 0
 20327                           ;fat_filelib.c: 458: {
 20328                           ;fat_filelib.c: 459: _free_file(file);
 20329  00C2A4  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20330  00C2A8  0101               	movlb	1	; () banked
 20331  00C2AA  C17A  F00F         	movff	__create_file@file,__free_file@file
 20332  00C2AE  EC99  F020         	call	__free_file	;wreg free
 20333  00C2B2  D0EC               	goto	L61
 20334  00C2B4                     l11343:
 20335                           
 20336                           ; BSR set to: 0
 20337                           ;fat_filelib.c: 461: }
 20338                           ;fat_filelib.c: 465: tailNum = 0;
 20339  00C2B4  0101               	movlb	1	; () banked
 20340  00C2B6  6B79               	clrf	(__create_file@tailNum+1)& (0+255),b
 20341  00C2B8  6B78               	clrf	__create_file@tailNum& (0+255),b
 20342  00C2BA                     l11345:
 20343                           
 20344                           ; BSR set to: 1
 20345                           ;fat_filelib.c: 467: {
 20346                           ;fat_filelib.c: 469: fatfs_lfn_create_sfn(shortFilename, file->filename);
 20347  00C2BA  0E01               	movlw	high __create_file@shortFilename
 20348  00C2BC  6E0A               	movwf	fatfs_lfn_create_sfn@sfn_output+1,c
 20349  00C2BE  0E4D               	movlw	low __create_file@shortFilename
 20350  00C2C0  6E09               	movwf	fatfs_lfn_create_sfn@sfn_output,c
 20351  00C2C2  0E1C               	movlw	28
 20352  00C2C4  0101               	movlb	1	; () banked
 20353  00C2C6  257A               	addwf	__create_file@file& (0+255),w,b
 20354  00C2C8  6E0B               	movwf	fatfs_lfn_create_sfn@filename,c
 20355  00C2CA  0E00               	movlw	0
 20356  00C2CC  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20357  00C2CE  6E0C               	movwf	fatfs_lfn_create_sfn@filename+1,c
 20358  00C2D0  EC66  F048         	call	_fatfs_lfn_create_sfn	;wreg free
 20359                           
 20360                           ;fat_filelib.c: 472: if (tailNum != 0)
 20361  00C2D4  0101               	movlb	1	; () banked
 20362  00C2D6  5179               	movf	(__create_file@tailNum+1)& (0+255),w,b
 20363  00C2D8  1178               	iorwf	__create_file@tailNum& (0+255),w,b
 20364  00C2DA  E016               	bz	l11351
 20365                           
 20366                           ; BSR set to: 1
 20367                           ;fat_filelib.c: 473: fatfs_lfn_generate_tail((char*)file->shortfilename, shortFilename, 
      +                          tailNum);
 20368  00C2DC  0E26               	movlw	38
 20369  00C2DE  257A               	addwf	__create_file@file& (0+255),w,b
 20370  00C2E0  6E37               	movwf	fatfs_lfn_generate_tail@sfn_output,c
 20371  00C2E2  0E00               	movlw	0
 20372  00C2E4  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20373  00C2E6  6E38               	movwf	fatfs_lfn_generate_tail@sfn_output+1,c
 20374  00C2E8  0E01               	movlw	high __create_file@shortFilename
 20375  00C2EA  6E3A               	movwf	fatfs_lfn_generate_tail@sfn_input+1,c
 20376  00C2EC  0E4D               	movlw	low __create_file@shortFilename
 20377  00C2EE  6E39               	movwf	fatfs_lfn_generate_tail@sfn_input,c
 20378  00C2F0  C178  F03B         	movff	__create_file@tailNum,fatfs_lfn_generate_tail@tailNum
 20379  00C2F4  C179  F03C         	movff	__create_file@tailNum+1,fatfs_lfn_generate_tail@tailNum+1
 20380  00C2F8  0E00               	movlw	0
 20381  00C2FA  BE3C               	btfsc	fatfs_lfn_generate_tail@tailNum+1,7,c
 20382  00C2FC  0EFF               	movlw	-1
 20383  00C2FE  6E3D               	movwf	fatfs_lfn_generate_tail@tailNum+2,c
 20384  00C300  6E3E               	movwf	fatfs_lfn_generate_tail@tailNum+3,c
 20385  00C302  ECED  F02C         	call	_fatfs_lfn_generate_tail	;wreg free
 20386  00C306  D012               	goto	l11353
 20387  00C308                     l11351:
 20388                           
 20389                           ;fat_filelib.c: 475: else
 20390                           ;fat_filelib.c: 476: memcpy(file->shortfilename, shortFilename, 11);
 20391  00C308  0E26               	movlw	38
 20392  00C30A  0101               	movlb	1	; () banked
 20393  00C30C  257A               	addwf	__create_file@file& (0+255),w,b
 20394  00C30E  6E01               	movwf	memcpy@d1,c
 20395  00C310  0E00               	movlw	0
 20396  00C312  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20397  00C314  6E02               	movwf	memcpy@d1+1,c
 20398  00C316  0E20               	movlw	32
 20399  00C318  6E05               	movwf	memcpy@s1+2,c
 20400  00C31A  0E01               	movlw	high __create_file@shortFilename
 20401  00C31C  6E04               	movwf	memcpy@s1+1,c
 20402  00C31E  0E4D               	movlw	low __create_file@shortFilename
 20403  00C320  6E03               	movwf	memcpy@s1,c
 20404  00C322  6A07               	clrf	memcpy@n+1,c
 20405  00C324  0E0B               	movlw	11
 20406  00C326  6E06               	movwf	memcpy@n,c
 20407  00C328  ECAE  F023         	call	_memcpy	;wreg free
 20408  00C32C                     l11353:
 20409                           
 20410                           ;fat_filelib.c: 479: if (fatfs_sfn_exists(&_fs, file->parentcluster, (char*)file->shortf
      +                          ilename) == 0)
 20411  00C32C  0E09               	movlw	high __fs
 20412  00C32E  0100               	movlb	0	; () banked
 20413  00C330  6FAD               	movwf	(fatfs_sfn_exists@fs+1)& (0+255),b
 20414  00C332  0E78               	movlw	low __fs
 20415  00C334  6FAC               	movwf	fatfs_sfn_exists@fs& (0+255),b
 20416  00C336  C17A  FFD9         	movff	__create_file@file,fsr2l
 20417  00C33A  C17B  FFDA         	movff	__create_file@file+1,fsr2h
 20418  00C33E  CFDE F0AE          	movff	postinc2,fatfs_sfn_exists@Cluster
 20419  00C342  CFDE F0AF          	movff	postinc2,fatfs_sfn_exists@Cluster+1
 20420  00C346  CFDE F0B0          	movff	postinc2,fatfs_sfn_exists@Cluster+2
 20421  00C34A  CFDE F0B1          	movff	postinc2,fatfs_sfn_exists@Cluster+3
 20422  00C34E  0E26               	movlw	38
 20423  00C350  0101               	movlb	1	; () banked
 20424  00C352  257A               	addwf	__create_file@file& (0+255),w,b
 20425  00C354  0100               	movlb	0	; () banked
 20426  00C356  6FB2               	movwf	fatfs_sfn_exists@shortname& (0+255),b
 20427  00C358  0E00               	movlw	0
 20428  00C35A  0101               	movlb	1	; () banked
 20429  00C35C  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20430  00C35E  0100               	movlb	0	; () banked
 20431  00C360  6FB3               	movwf	(fatfs_sfn_exists@shortname+1)& (0+255),b
 20432  00C362  ECB9  F031         	call	_fatfs_sfn_exists	;wreg free
 20433  00C366  0100               	movlb	0	; () banked
 20434  00C368  51AD               	movf	(?_fatfs_sfn_exists+1)& (0+255),w,b
 20435  00C36A  11AC               	iorwf	?_fatfs_sfn_exists& (0+255),w,b
 20436  00C36C  E00A               	bz	l11361
 20437                           
 20438                           ; BSR set to: 0
 20439                           ;fat_filelib.c: 482: tailNum++;
 20440                           
 20441                           ; BSR set to: 0
 20442                           
 20443                           ; BSR set to: 0
 20444                           ;fat_filelib.c: 480: break;
 20445  00C36E  0101               	movlb	1	; () banked
 20446  00C370  4B78               	infsnz	__create_file@tailNum& (0+255),f,b
 20447  00C372  2B79               	incf	(__create_file@tailNum+1)& (0+255),f,b
 20448                           
 20449                           ; BSR set to: 1
 20450                           ;fat_filelib.c: 483: }
 20451                           ;fat_filelib.c: 484: while (tailNum < 9999);
 20452  00C374  5179               	movf	(__create_file@tailNum+1)& (0+255),w,b
 20453  00C376  0A80               	xorlw	128
 20454  00C378  0F59               	addlw	-167
 20455  00C37A  0E0F               	movlw	15
 20456  00C37C  B4D8               	btfsc	status,2,c
 20457  00C37E  5D78               	subwf	__create_file@tailNum& (0+255),w,b
 20458  00C380  E39C               	bnc	l11345
 20459  00C382                     l11361:
 20460                           
 20461                           ;fat_filelib.c: 487: if (tailNum == 9999)
 20462  00C382  0101               	movlb	1	; () banked
 20463  00C384  5179               	movf	(__create_file@tailNum+1)& (0+255),w,b
 20464  00C386  0A27               	xorlw	39
 20465  00C388  0E0F               	movlw	15
 20466  00C38A  B4D8               	btfsc	status,2,c
 20467  00C38C  1978               	xorwf	__create_file@tailNum& (0+255),w,b
 20468  00C38E  E11F               	bnz	l11371
 20469                           
 20470                           ; BSR set to: 1
 20471                           ;fat_filelib.c: 488: {
 20472                           ;fat_filelib.c: 490: fatfs_free_cluster_chain(&_fs, file->startcluster);
 20473  00C390  0E09               	movlw	high __fs
 20474  00C392  0100               	movlb	0	; () banked
 20475  00C394  6F81               	movwf	(fatfs_free_cluster_chain@fs+1)& (0+255),b
 20476  00C396  0E78               	movlw	low __fs
 20477  00C398  6F80               	movwf	fatfs_free_cluster_chain@fs& (0+255),b
 20478  00C39A  EE20 F004          	lfsr	2,4
 20479  00C39E  0101               	movlb	1	; () banked
 20480  00C3A0  517A               	movf	__create_file@file& (0+255),w,b
 20481  00C3A2  26D9               	addwf	fsr2l,f,c
 20482  00C3A4  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20483  00C3A6  22DA               	addwfc	fsr2h,f,c
 20484  00C3A8  CFDE F082          	movff	postinc2,fatfs_free_cluster_chain@start_cluster
 20485  00C3AC  CFDE F083          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+1
 20486  00C3B0  CFDE F084          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+2
 20487  00C3B4  0100               	movlb	0	; () banked
 20488  00C3B6  CFDE F085          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+3
 20489  00C3BA  EC9A  F02B         	call	_fatfs_free_cluster_chain	;wreg free
 20490                           
 20491                           ;fat_filelib.c: 492: _free_file(file);
 20492  00C3BE  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20493  00C3C2  0101               	movlb	1	; () banked
 20494  00C3C4  C17A  F00F         	movff	__create_file@file,__free_file@file
 20495  00C3C8  EC99  F020         	call	__free_file	;wreg free
 20496  00C3CC  D05F               	goto	L61
 20497  00C3CE                     l11371:
 20498                           
 20499                           ;fat_filelib.c: 494: }
 20500                           ;fat_filelib.c: 521: if (!fatfs_add_file_entry(&_fs, file->parentcluster, (char*)file->f
      +                          ilename, (char*)file->shortfilename, file->startcluster, 0, 0))
 20501  00C3CE  0E09               	movlw	high __fs
 20502  00C3D0  0100               	movlb	0	; () banked
 20503  00C3D2  6FCD               	movwf	(fatfs_add_file_entry@fs+1)& (0+255),b
 20504  00C3D4  0E78               	movlw	low __fs
 20505  00C3D6  6FCC               	movwf	fatfs_add_file_entry@fs& (0+255),b
 20506  00C3D8  C17A  FFD9         	movff	__create_file@file,fsr2l
 20507  00C3DC  C17B  FFDA         	movff	__create_file@file+1,fsr2h
 20508  00C3E0  CFDE F0CE          	movff	postinc2,fatfs_add_file_entry@dirCluster
 20509  00C3E4  CFDE F0CF          	movff	postinc2,fatfs_add_file_entry@dirCluster+1
 20510  00C3E8  CFDE F0D0          	movff	postinc2,fatfs_add_file_entry@dirCluster+2
 20511  00C3EC  CFDE F0D1          	movff	postinc2,fatfs_add_file_entry@dirCluster+3
 20512  00C3F0  0E1C               	movlw	28
 20513  00C3F2  0101               	movlb	1	; () banked
 20514  00C3F4  257A               	addwf	__create_file@file& (0+255),w,b
 20515  00C3F6  0100               	movlb	0	; () banked
 20516  00C3F8  6FD2               	movwf	fatfs_add_file_entry@filename& (0+255),b
 20517  00C3FA  0E00               	movlw	0
 20518  00C3FC  0101               	movlb	1	; () banked
 20519  00C3FE  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20520  00C400  0100               	movlb	0	; () banked
 20521  00C402  6FD3               	movwf	(fatfs_add_file_entry@filename+1)& (0+255),b
 20522  00C404  0E26               	movlw	38
 20523  00C406  0101               	movlb	1	; () banked
 20524  00C408  257A               	addwf	__create_file@file& (0+255),w,b
 20525  00C40A  0100               	movlb	0	; () banked
 20526  00C40C  6FD4               	movwf	fatfs_add_file_entry@shortfilename& (0+255),b
 20527  00C40E  0E00               	movlw	0
 20528  00C410  0101               	movlb	1	; () banked
 20529  00C412  217B               	addwfc	(__create_file@file+1)& (0+255),w,b
 20530  00C414  0100               	movlb	0	; () banked
 20531  00C416  6FD5               	movwf	(fatfs_add_file_entry@shortfilename+1)& (0+255),b
 20532  00C418  EE20 F004          	lfsr	2,4
 20533  00C41C  0101               	movlb	1	; () banked
 20534  00C41E  517A               	movf	__create_file@file& (0+255),w,b
 20535  00C420  26D9               	addwf	fsr2l,f,c
 20536  00C422  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20537  00C424  22DA               	addwfc	fsr2h,f,c
 20538  00C426  CFDE F0D6          	movff	postinc2,fatfs_add_file_entry@startCluster
 20539  00C42A  CFDE F0D7          	movff	postinc2,fatfs_add_file_entry@startCluster+1
 20540  00C42E  CFDE F0D8          	movff	postinc2,fatfs_add_file_entry@startCluster+2
 20541  00C432  CFDE F0D9          	movff	postinc2,fatfs_add_file_entry@startCluster+3
 20542  00C436  0E00               	movlw	0
 20543  00C438  0100               	movlb	0	; () banked
 20544  00C43A  6BDA               	clrf	fatfs_add_file_entry@size& (0+255),b
 20545  00C43C  6BDB               	clrf	(fatfs_add_file_entry@size+1)& (0+255),b
 20546  00C43E  6BDC               	clrf	(fatfs_add_file_entry@size+2)& (0+255),b
 20547  00C440  6BDD               	clrf	(fatfs_add_file_entry@size+3)& (0+255),b
 20548  00C442  6BDF               	clrf	(fatfs_add_file_entry@dir+1)& (0+255),b
 20549  00C444  6BDE               	clrf	fatfs_add_file_entry@dir& (0+255),b
 20550  00C446  EC72  F056         	call	_fatfs_add_file_entry	;wreg free
 20551  00C44A  0100               	movlb	0	; () banked
 20552  00C44C  51CD               	movf	(?_fatfs_add_file_entry+1)& (0+255),w,b
 20553  00C44E  11CC               	iorwf	?_fatfs_add_file_entry& (0+255),w,b
 20554  00C450  E122               	bnz	l11381
 20555                           
 20556                           ; BSR set to: 0
 20557                           ;fat_filelib.c: 522: {
 20558                           ;fat_filelib.c: 524: fatfs_free_cluster_chain(&_fs, file->startcluster);
 20559  00C452  0E09               	movlw	high __fs
 20560  00C454  6F81               	movwf	(fatfs_free_cluster_chain@fs+1)& (0+255),b
 20561  00C456  0E78               	movlw	low __fs
 20562  00C458  6F80               	movwf	fatfs_free_cluster_chain@fs& (0+255),b
 20563  00C45A  EE20 F004          	lfsr	2,4
 20564  00C45E  0101               	movlb	1	; () banked
 20565  00C460  517A               	movf	__create_file@file& (0+255),w,b
 20566  00C462  26D9               	addwf	fsr2l,f,c
 20567  00C464  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20568  00C466  22DA               	addwfc	fsr2h,f,c
 20569  00C468  CFDE F082          	movff	postinc2,fatfs_free_cluster_chain@start_cluster
 20570  00C46C  CFDE F083          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+1
 20571  00C470  CFDE F084          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+2
 20572  00C474  0100               	movlb	0	; () banked
 20573  00C476  CFDE F085          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+3
 20574  00C47A  EC9A  F02B         	call	_fatfs_free_cluster_chain	;wreg free
 20575                           
 20576                           ;fat_filelib.c: 526: _free_file(file);
 20577  00C47E  C17B  F010         	movff	__create_file@file+1,__free_file@file+1
 20578  00C482  0101               	movlb	1	; () banked
 20579  00C484  C17A  F00F         	movff	__create_file@file,__free_file@file
 20580  00C488  EC99  F020         	call	__free_file	;wreg free
 20581  00C48C                     L61:
 20582                           
 20583                           ;fat_filelib.c: 527: return (0);
 20584  00C48C  0E00               	movlw	0
 20585  00C48E  0100               	movlb	0	; () banked
 20586  00C490  6FF3               	movwf	(?__create_file+1)& (0+255),b
 20587  00C492  6FF2               	movwf	?__create_file& (0+255),b
 20588  00C494  D058               	goto	l486
 20589  00C496                     l11381:
 20590                           
 20591                           ; BSR set to: 0
 20592                           ;fat_filelib.c: 528: }
 20593                           ;fat_filelib.c: 531: file->filelength = 0;
 20594  00C496  EE20 F00C          	lfsr	2,12
 20595  00C49A  0101               	movlb	1	; () banked
 20596  00C49C  517A               	movf	__create_file@file& (0+255),w,b
 20597  00C49E  26D9               	addwf	fsr2l,f,c
 20598  00C4A0  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20599  00C4A2  22DA               	addwfc	fsr2h,f,c
 20600  00C4A4  6ADE               	clrf	postinc2,c
 20601  00C4A6  6ADE               	clrf	postinc2,c
 20602  00C4A8  6ADE               	clrf	postinc2,c
 20603  00C4AA  6ADD               	clrf	postdec2,c
 20604                           
 20605                           ;fat_filelib.c: 532: file->bytenum = 0;
 20606  00C4AC  EE20 F008          	lfsr	2,8
 20607  00C4B0  517A               	movf	__create_file@file& (0+255),w,b
 20608  00C4B2  26D9               	addwf	fsr2l,f,c
 20609  00C4B4  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20610  00C4B6  22DA               	addwfc	fsr2h,f,c
 20611  00C4B8  6ADE               	clrf	postinc2,c
 20612  00C4BA  6ADE               	clrf	postinc2,c
 20613  00C4BC  6ADE               	clrf	postinc2,c
 20614  00C4BE  6ADD               	clrf	postdec2,c
 20615                           
 20616                           ;fat_filelib.c: 533: file->file_data_address = 0xFFFFFFFF;
 20617  00C4C0  EE22 F039          	lfsr	2,569
 20618  00C4C4  517A               	movf	__create_file@file& (0+255),w,b
 20619  00C4C6  26D9               	addwf	fsr2l,f,c
 20620  00C4C8  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20621  00C4CA  22DA               	addwfc	fsr2h,f,c
 20622  00C4CC  68DE               	setf	postinc2,c
 20623  00C4CE  68DE               	setf	postinc2,c
 20624  00C4D0  68DE               	setf	postinc2,c
 20625  00C4D2  68DD               	setf	postdec2,c
 20626                           
 20627                           ;fat_filelib.c: 534: file->file_data_dirty = 0;
 20628  00C4D4  EE22 F03D          	lfsr	2,573
 20629  00C4D8  517A               	movf	__create_file@file& (0+255),w,b
 20630  00C4DA  26D9               	addwf	fsr2l,f,c
 20631  00C4DC  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20632  00C4DE  22DA               	addwfc	fsr2h,f,c
 20633  00C4E0  6ADE               	clrf	postinc2,c
 20634  00C4E2  6ADD               	clrf	postdec2,c
 20635                           
 20636                           ;fat_filelib.c: 535: file->filelength_changed = 0;
 20637  00C4E4  EE20 F010          	lfsr	2,16
 20638  00C4E8  517A               	movf	__create_file@file& (0+255),w,b
 20639  00C4EA  26D9               	addwf	fsr2l,f,c
 20640  00C4EC  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20641  00C4EE  22DA               	addwfc	fsr2h,f,c
 20642  00C4F0  6ADE               	clrf	postinc2,c
 20643  00C4F2  6ADD               	clrf	postdec2,c
 20644                           
 20645                           ;fat_filelib.c: 538: file->last_fat_lookup.ClusterIdx = 0xFFFFFFFF;
 20646  00C4F4  EE20 F031          	lfsr	2,49
 20647  00C4F8  517A               	movf	__create_file@file& (0+255),w,b
 20648  00C4FA  26D9               	addwf	fsr2l,f,c
 20649  00C4FC  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20650  00C4FE  22DA               	addwfc	fsr2h,f,c
 20651  00C500  68DE               	setf	postinc2,c
 20652  00C502  68DE               	setf	postinc2,c
 20653  00C504  68DE               	setf	postinc2,c
 20654  00C506  68DD               	setf	postdec2,c
 20655                           
 20656                           ;fat_filelib.c: 539: file->last_fat_lookup.CurrentCluster = 0xFFFFFFFF;
 20657  00C508  EE20 F035          	lfsr	2,53
 20658  00C50C  517A               	movf	__create_file@file& (0+255),w,b
 20659  00C50E  26D9               	addwf	fsr2l,f,c
 20660  00C510  517B               	movf	(__create_file@file+1)& (0+255),w,b
 20661  00C512  22DA               	addwfc	fsr2h,f,c
 20662  00C514  68DE               	setf	postinc2,c
 20663  00C516  68DE               	setf	postinc2,c
 20664  00C518  68DE               	setf	postinc2,c
 20665  00C51A  68DD               	setf	postdec2,c
 20666                           
 20667                           ; BSR set to: 1
 20668                           ;fat_filelib.c: 541: fatfs_cache_init(&_fs, file);
 20669  00C51C  0E09               	movlw	high __fs
 20670  00C51E  6E02               	movwf	fatfs_cache_init@fs+1,c
 20671  00C520  0E78               	movlw	low __fs
 20672  00C522  6E01               	movwf	fatfs_cache_init@fs,c
 20673  00C524  C17B  F004         	movff	__create_file@file+1,fatfs_cache_init@file+1
 20674  00C528  C17A  F003         	movff	__create_file@file,fatfs_cache_init@file
 20675  00C52C  EC22  F01F         	call	_fatfs_cache_init	;wreg free
 20676                           
 20677                           ;fat_filelib.c: 543: fatfs_fat_purge(&_fs);
 20678  00C530  0E09               	movlw	high __fs
 20679  00C532  6E35               	movwf	fatfs_fat_purge@fs+1,c
 20680  00C534  0E78               	movlw	low __fs
 20681  00C536  6E34               	movwf	fatfs_fat_purge@fs,c
 20682  00C538  ECCD  F022         	call	_fatfs_fat_purge	;wreg free
 20683                           
 20684                           ;fat_filelib.c: 545: return file;
 20685  00C53C  C17B  F0F3         	movff	__create_file@file+1,?__create_file+1
 20686  00C540  0100               	movlb	0	; () banked
 20687  00C542  C17A  F0F2         	movff	__create_file@file,?__create_file
 20688  00C546                     l486:
 20689                           
 20690                           ; BSR set to: 0
 20691  00C546  0012               	return	
 20692  00C548                     __end_of__create_file:
 20693                           	opt stack 0
 20694                           tosu	equ	0xFFF
 20695                           tosh	equ	0xFFE
 20696                           tosl	equ	0xFFD
 20697                           pclath	equ	0xFFA
 20698                           tblptru	equ	0xFF8
 20699                           tblptrh	equ	0xFF7
 20700                           tblptrl	equ	0xFF6
 20701                           tablat	equ	0xFF5
 20702                           prodh	equ	0xFF4
 20703                           prodl	equ	0xFF3
 20704                           indf0	equ	0xFEF
 20705                           postinc0	equ	0xFEE
 20706                           fsr0h	equ	0xFEA
 20707                           fsr0l	equ	0xFE9
 20708                           wreg	equ	0xFE8
 20709                           indf1	equ	0xFE7
 20710                           postinc1	equ	0xFE6
 20711                           postdec1	equ	0xFE5
 20712                           fsr1h	equ	0xFE2
 20713                           fsr1l	equ	0xFE1
 20714                           indf2	equ	0xFDF
 20715                           postinc2	equ	0xFDE
 20716                           postdec2	equ	0xFDD
 20717                           fsr2h	equ	0xFDA
 20718                           fsr2l	equ	0xFD9
 20719                           status	equ	0xFD8
 20720                           
 20721 ;; *************** function _fatfs_cache_init *****************
 20722 ;; Defined at:
 20723 ;;		line 42 in file "fat_cache.c"
 20724 ;; Parameters:    Size  Location     Type
 20725 ;;  fs              2    0[COMRAM] PTR struct fatfs
 20726 ;;		 -> _fs(1095), 
 20727 ;;  file            2    2[COMRAM] PTR struct sFL_FILE
 20728 ;;		 -> RAM(3967), NULL(0), 
 20729 ;; Auto vars:     Size  Location     Type
 20730 ;;		None
 20731 ;; Return value:  Size  Location     Type
 20732 ;;                  2    0[COMRAM] int 
 20733 ;; Registers used:
 20734 ;;		None
 20735 ;; Tracked objects:
 20736 ;;		On entry : 0/0
 20737 ;;		On exit  : 0/0
 20738 ;;		Unchanged: 0/0
 20739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20744 ;;Total ram usage:        4 bytes
 20745 ;; Hardware stack levels used:    1
 20746 ;; This function calls:
 20747 ;;		Nothing
 20748 ;; This function is called by:
 20749 ;;		__open_file
 20750 ;;		__create_file
 20751 ;; This function uses a non-reentrant model
 20752 ;;
 20753                           
 20754                           	psect	text52
 20755  003E44                     __ptext52:
 20756                           	opt stack 0
 20757  003E44                     _fatfs_cache_init:
 20758                           	opt stack 25
 20759                           
 20760                           ;fat_cache.c: 54: return 1;
 20761                           ;	Return value of _fatfs_cache_init is never used
 20762                           
 20763                           ; BSR set to: 0
 20764                           ;incstack = 0
 20765  003E44  0012               	return	
 20766  003E46                     __end_of_fatfs_cache_init:
 20767                           	opt stack 0
 20768                           tosu	equ	0xFFF
 20769                           tosh	equ	0xFFE
 20770                           tosl	equ	0xFFD
 20771                           pclath	equ	0xFFA
 20772                           tblptru	equ	0xFF8
 20773                           tblptrh	equ	0xFF7
 20774                           tblptrl	equ	0xFF6
 20775                           tablat	equ	0xFF5
 20776                           prodh	equ	0xFF4
 20777                           prodl	equ	0xFF3
 20778                           indf0	equ	0xFEF
 20779                           postinc0	equ	0xFEE
 20780                           fsr0h	equ	0xFEA
 20781                           fsr0l	equ	0xFE9
 20782                           wreg	equ	0xFE8
 20783                           indf1	equ	0xFE7
 20784                           postinc1	equ	0xFE6
 20785                           postdec1	equ	0xFE5
 20786                           fsr1h	equ	0xFE2
 20787                           fsr1l	equ	0xFE1
 20788                           indf2	equ	0xFDF
 20789                           postinc2	equ	0xFDE
 20790                           postdec2	equ	0xFDD
 20791                           fsr2h	equ	0xFDA
 20792                           fsr2l	equ	0xFD9
 20793                           status	equ	0xFD8
 20794                           
 20795 ;; *************** function _fl_fclose *****************
 20796 ;; Defined at:
 20797 ;;		line 924 in file "fat_filelib.c"
 20798 ;; Parameters:    Size  Location     Type
 20799 ;;  f               2   94[BANK0 ] PTR void 
 20800 ;;		 -> RAM(3967), NULL(0), 
 20801 ;; Auto vars:     Size  Location     Type
 20802 ;;  file            2   96[BANK0 ] PTR struct sFL_FILE
 20803 ;;		 -> RAM(3967), NULL(0), 
 20804 ;; Return value:  Size  Location     Type
 20805 ;;		None               void
 20806 ;; Registers used:
 20807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20808 ;; Tracked objects:
 20809 ;;		On entry : 0/0
 20810 ;;		On exit  : 0/0
 20811 ;;		Unchanged: 0/0
 20812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20813 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20816 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20817 ;;Total ram usage:        4 bytes
 20818 ;; Hardware stack levels used:    1
 20819 ;; Hardware stack levels required when called:    9
 20820 ;; This function calls:
 20821 ;;		__free_file
 20822 ;;		_fatfs_fat_purge
 20823 ;;		_fatfs_update_file_length
 20824 ;;		_fl_fflush
 20825 ;;		_fl_init
 20826 ;; This function is called by:
 20827 ;;		_fl_remove
 20828 ;;		_File_write
 20829 ;;		_File_append
 20830 ;;		_File_read
 20831 ;;		_File_read_
 20832 ;; This function uses a non-reentrant model
 20833 ;;
 20834                           
 20835                           	psect	text53
 20836  00647A                     __ptext53:
 20837                           	opt stack 0
 20838  00647A                     _fl_fclose:
 20839                           	opt stack 18
 20840                           
 20841                           ;fat_filelib.c: 926: FL_FILE *file = (FL_FILE *)f;
 20842                           
 20843                           ;incstack = 0
 20844  00647A  C0DF  F0E1         	movff	fl_fclose@f+1,fl_fclose@file+1
 20845  00647E  C0DE  F0E0         	movff	fl_fclose@f,fl_fclose@file
 20846                           
 20847                           ;fat_filelib.c: 929: { if (_filelib_init==0) fl_init(); };
 20848  006482  0101               	movlb	1	; () banked
 20849  006484  5192               	movf	(__filelib_init+1)& (0+255),w,b
 20850  006486  1191               	iorwf	__filelib_init& (0+255),w,b
 20851  006488  B4D8               	btfsc	status,2,c
 20852                           
 20853                           ; BSR set to: 1
 20854  00648A  EC44  F029         	call	_fl_init	;wreg free
 20855                           
 20856                           ;fat_filelib.c: 931: if (file)
 20857  00648E  0100               	movlb	0	; () banked
 20858  006490  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20859  006492  11E0               	iorwf	fl_fclose@file& (0+255),w,b
 20860  006494  E101 D085          	bz	l622
 20861                           
 20862                           ; BSR set to: 0
 20863                           ;fat_filelib.c: 936: fl_fflush(f);
 20864                           
 20865                           ; BSR set to: 0
 20866                           
 20867                           ; BSR set to: 0
 20868                           
 20869                           ; BSR set to: 0
 20870                           
 20871                           ; BSR set to: 0
 20872                           
 20873                           ;fat_filelib.c: 932: {
 20874                           ;fat_filelib.c: 933: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
 20875  006498  C0DF  F0D5         	movff	fl_fclose@f+1,fl_fflush@f+1
 20876  00649C  C0DE  F0D4         	movff	fl_fclose@f,fl_fflush@f
 20877  0064A0  EC3F  F02C         	call	_fl_fflush	;wreg free
 20878                           
 20879                           ;fat_filelib.c: 939: if (file->filelength_changed)
 20880  0064A4  EE20 F010          	lfsr	2,16
 20881  0064A8  0100               	movlb	0	; () banked
 20882  0064AA  51E0               	movf	fl_fclose@file& (0+255),w,b
 20883  0064AC  26D9               	addwf	fsr2l,f,c
 20884  0064AE  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20885  0064B0  22DA               	addwfc	fsr2h,f,c
 20886  0064B2  50DE               	movf	postinc2,w,c
 20887  0064B4  10DD               	iorwf	postdec2,w,c
 20888  0064B6  E02F               	bz	l11877
 20889                           
 20890                           ; BSR set to: 0
 20891                           ;fat_filelib.c: 940: {
 20892                           ;fat_filelib.c: 943: fatfs_update_file_length(&_fs, file->parentcluster, (char*)file->sh
      +                          ortfilename, file->filelength);
 20893  0064B8  0E09               	movlw	high __fs
 20894  0064BA  6FAD               	movwf	(fatfs_update_file_length@fs+1)& (0+255),b
 20895  0064BC  0E78               	movlw	low __fs
 20896  0064BE  6FAC               	movwf	fatfs_update_file_length@fs& (0+255),b
 20897  0064C0  C0E0  FFD9         	movff	fl_fclose@file,fsr2l
 20898  0064C4  C0E1  FFDA         	movff	fl_fclose@file+1,fsr2h
 20899  0064C8  CFDE F0AE          	movff	postinc2,fatfs_update_file_length@Cluster
 20900  0064CC  CFDE F0AF          	movff	postinc2,fatfs_update_file_length@Cluster+1
 20901  0064D0  CFDE F0B0          	movff	postinc2,fatfs_update_file_length@Cluster+2
 20902  0064D4  CFDE F0B1          	movff	postinc2,fatfs_update_file_length@Cluster+3
 20903  0064D8  0E26               	movlw	38
 20904  0064DA  25E0               	addwf	fl_fclose@file& (0+255),w,b
 20905  0064DC  6FB2               	movwf	fatfs_update_file_length@shortname& (0+255),b
 20906  0064DE  0E00               	movlw	0
 20907  0064E0  21E1               	addwfc	(fl_fclose@file+1)& (0+255),w,b
 20908  0064E2  6FB3               	movwf	(fatfs_update_file_length@shortname+1)& (0+255),b
 20909  0064E4  EE20 F00C          	lfsr	2,12
 20910  0064E8  51E0               	movf	fl_fclose@file& (0+255),w,b
 20911  0064EA  26D9               	addwf	fsr2l,f,c
 20912  0064EC  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20913  0064EE  22DA               	addwfc	fsr2h,f,c
 20914  0064F0  CFDE F0B4          	movff	postinc2,fatfs_update_file_length@fileLength
 20915  0064F4  CFDE F0B5          	movff	postinc2,fatfs_update_file_length@fileLength+1
 20916  0064F8  CFDE F0B6          	movff	postinc2,fatfs_update_file_length@fileLength+2
 20917  0064FC  CFDE F0B7          	movff	postinc2,fatfs_update_file_length@fileLength+3
 20918  006500  ECB5  F03A         	call	_fatfs_update_file_length	;wreg free
 20919                           
 20920                           ;fat_filelib.c: 945: file->filelength_changed = 0;
 20921  006504  EE20 F010          	lfsr	2,16
 20922  006508  0100               	movlb	0	; () banked
 20923  00650A  51E0               	movf	fl_fclose@file& (0+255),w,b
 20924  00650C  26D9               	addwf	fsr2l,f,c
 20925  00650E  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20926  006510  22DA               	addwfc	fsr2h,f,c
 20927  006512  6ADE               	clrf	postinc2,c
 20928  006514  6ADD               	clrf	postdec2,c
 20929  006516                     l11877:
 20930                           
 20931                           ; BSR set to: 0
 20932                           ;fat_filelib.c: 946: }
 20933                           ;fat_filelib.c: 948: file->bytenum = 0;
 20934  006516  EE20 F008          	lfsr	2,8
 20935  00651A  0100               	movlb	0	; () banked
 20936  00651C  51E0               	movf	fl_fclose@file& (0+255),w,b
 20937  00651E  26D9               	addwf	fsr2l,f,c
 20938  006520  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20939  006522  22DA               	addwfc	fsr2h,f,c
 20940  006524  6ADE               	clrf	postinc2,c
 20941  006526  6ADE               	clrf	postinc2,c
 20942  006528  6ADE               	clrf	postinc2,c
 20943  00652A  6ADD               	clrf	postdec2,c
 20944                           
 20945                           ; BSR set to: 0
 20946                           ;fat_filelib.c: 949: file->filelength = 0;
 20947  00652C  EE20 F00C          	lfsr	2,12
 20948  006530  51E0               	movf	fl_fclose@file& (0+255),w,b
 20949  006532  26D9               	addwf	fsr2l,f,c
 20950  006534  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20951  006536  22DA               	addwfc	fsr2h,f,c
 20952  006538  6ADE               	clrf	postinc2,c
 20953  00653A  6ADE               	clrf	postinc2,c
 20954  00653C  6ADE               	clrf	postinc2,c
 20955  00653E  6ADD               	clrf	postdec2,c
 20956                           
 20957                           ; BSR set to: 0
 20958                           ;fat_filelib.c: 950: file->startcluster = 0;
 20959  006540  EE20 F004          	lfsr	2,4
 20960  006544  51E0               	movf	fl_fclose@file& (0+255),w,b
 20961  006546  26D9               	addwf	fsr2l,f,c
 20962  006548  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20963  00654A  22DA               	addwfc	fsr2h,f,c
 20964  00654C  6ADE               	clrf	postinc2,c
 20965  00654E  6ADE               	clrf	postinc2,c
 20966  006550  6ADE               	clrf	postinc2,c
 20967  006552  6ADD               	clrf	postdec2,c
 20968                           
 20969                           ; BSR set to: 0
 20970                           ;fat_filelib.c: 951: file->file_data_address = 0xFFFFFFFF;
 20971  006554  EE22 F039          	lfsr	2,569
 20972  006558  51E0               	movf	fl_fclose@file& (0+255),w,b
 20973  00655A  26D9               	addwf	fsr2l,f,c
 20974  00655C  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20975  00655E  22DA               	addwfc	fsr2h,f,c
 20976  006560  68DE               	setf	postinc2,c
 20977  006562  68DE               	setf	postinc2,c
 20978  006564  68DE               	setf	postinc2,c
 20979  006566  68DD               	setf	postdec2,c
 20980                           
 20981                           ; BSR set to: 0
 20982                           ;fat_filelib.c: 952: file->file_data_dirty = 0;
 20983  006568  EE22 F03D          	lfsr	2,573
 20984  00656C  51E0               	movf	fl_fclose@file& (0+255),w,b
 20985  00656E  26D9               	addwf	fsr2l,f,c
 20986  006570  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20987  006572  22DA               	addwfc	fsr2h,f,c
 20988  006574  6ADE               	clrf	postinc2,c
 20989  006576  6ADD               	clrf	postdec2,c
 20990                           
 20991                           ; BSR set to: 0
 20992                           ;fat_filelib.c: 953: file->filelength_changed = 0;
 20993  006578  EE20 F010          	lfsr	2,16
 20994  00657C  51E0               	movf	fl_fclose@file& (0+255),w,b
 20995  00657E  26D9               	addwf	fsr2l,f,c
 20996  006580  51E1               	movf	(fl_fclose@file+1)& (0+255),w,b
 20997  006582  22DA               	addwfc	fsr2h,f,c
 20998  006584  0E00               	movlw	0
 20999  006586  6ADE               	clrf	postinc2,c
 21000  006588  6ADD               	clrf	postdec2,c
 21001                           
 21002                           ; BSR set to: 0
 21003                           ;fat_filelib.c: 956: _free_file(file);
 21004  00658A  C0E1  F010         	movff	fl_fclose@file+1,__free_file@file+1
 21005  00658E  C0E0  F00F         	movff	fl_fclose@file,__free_file@file
 21006  006592  EC99  F020         	call	__free_file	;wreg free
 21007                           
 21008                           ;fat_filelib.c: 958: fatfs_fat_purge(&_fs);
 21009  006596  0E09               	movlw	high __fs
 21010  006598  6E35               	movwf	fatfs_fat_purge@fs+1,c
 21011  00659A  0E78               	movlw	low __fs
 21012  00659C  6E34               	movwf	fatfs_fat_purge@fs,c
 21013  00659E  ECCD  F022         	call	_fatfs_fat_purge	;wreg free
 21014  0065A2                     l622:
 21015  0065A2  0012               	return	
 21016  0065A4                     __end_of_fl_fclose:
 21017                           	opt stack 0
 21018                           tosu	equ	0xFFF
 21019                           tosh	equ	0xFFE
 21020                           tosl	equ	0xFFD
 21021                           pclath	equ	0xFFA
 21022                           tblptru	equ	0xFF8
 21023                           tblptrh	equ	0xFF7
 21024                           tblptrl	equ	0xFF6
 21025                           tablat	equ	0xFF5
 21026                           prodh	equ	0xFF4
 21027                           prodl	equ	0xFF3
 21028                           indf0	equ	0xFEF
 21029                           postinc0	equ	0xFEE
 21030                           fsr0h	equ	0xFEA
 21031                           fsr0l	equ	0xFE9
 21032                           wreg	equ	0xFE8
 21033                           indf1	equ	0xFE7
 21034                           postinc1	equ	0xFE6
 21035                           postdec1	equ	0xFE5
 21036                           fsr1h	equ	0xFE2
 21037                           fsr1l	equ	0xFE1
 21038                           indf2	equ	0xFDF
 21039                           postinc2	equ	0xFDE
 21040                           postdec2	equ	0xFDD
 21041                           fsr2h	equ	0xFDA
 21042                           fsr2l	equ	0xFD9
 21043                           status	equ	0xFD8
 21044                           
 21045 ;; *************** function _fl_fflush *****************
 21046 ;; Defined at:
 21047 ;;		line 896 in file "fat_filelib.c"
 21048 ;; Parameters:    Size  Location     Type
 21049 ;;  f               2   84[BANK0 ] PTR void 
 21050 ;;		 -> RAM(3967), NULL(0), 
 21051 ;; Auto vars:     Size  Location     Type
 21052 ;;  file            2   92[BANK0 ] PTR struct sFL_FILE
 21053 ;;		 -> RAM(3967), NULL(0), 
 21054 ;; Return value:  Size  Location     Type
 21055 ;;                  2   84[BANK0 ] int 
 21056 ;; Registers used:
 21057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21058 ;; Tracked objects:
 21059 ;;		On entry : 0/0
 21060 ;;		On exit  : 0/0
 21061 ;;		Unchanged: 0/0
 21062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21063 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21064 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21065 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21066 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21067 ;;Total ram usage:       10 bytes
 21068 ;; Hardware stack levels used:    1
 21069 ;; Hardware stack levels required when called:    8
 21070 ;; This function calls:
 21071 ;;		__write_sectors
 21072 ;;		_fl_init
 21073 ;; This function is called by:
 21074 ;;		_fl_fclose
 21075 ;;		_fl_fread
 21076 ;;		_fl_fwrite
 21077 ;; This function uses a non-reentrant model
 21078 ;;
 21079                           
 21080                           	psect	text54
 21081  00587E                     __ptext54:
 21082                           	opt stack 0
 21083  00587E                     _fl_fflush:
 21084                           	opt stack 18
 21085                           
 21086                           ;fat_filelib.c: 899: FL_FILE *file = (FL_FILE *)f;
 21087                           
 21088                           ;incstack = 0
 21089  00587E  C0D5  F0DD         	movff	fl_fflush@f+1,fl_fflush@file+1
 21090  005882  C0D4  F0DC         	movff	fl_fflush@f,fl_fflush@file
 21091                           
 21092                           ;fat_filelib.c: 902: { if (_filelib_init==0) fl_init(); };
 21093  005886  0101               	movlb	1	; () banked
 21094  005888  5192               	movf	(__filelib_init+1)& (0+255),w,b
 21095  00588A  1191               	iorwf	__filelib_init& (0+255),w,b
 21096  00588C  B4D8               	btfsc	status,2,c
 21097                           
 21098                           ; BSR set to: 1
 21099  00588E  EC44  F029         	call	_fl_init	;wreg free
 21100                           
 21101                           ;fat_filelib.c: 904: if (file)
 21102  005892  0100               	movlb	0	; () banked
 21103  005894  51DD               	movf	(fl_fflush@file+1)& (0+255),w,b
 21104  005896  11DC               	iorwf	fl_fflush@file& (0+255),w,b
 21105  005898  E046               	bz	l610
 21106                           
 21107                           ; BSR set to: 0
 21108                           ;fat_filelib.c: 909: if (file->file_data_dirty)
 21109                           
 21110                           ; BSR set to: 0
 21111                           
 21112                           ; BSR set to: 0
 21113                           
 21114                           ; BSR set to: 0
 21115                           
 21116                           ; BSR set to: 0
 21117                           
 21118                           ;fat_filelib.c: 905: {
 21119                           ;fat_filelib.c: 906: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
 21120  00589A  EE22 F03D          	lfsr	2,573
 21121  00589E  51DC               	movf	fl_fflush@file& (0+255),w,b
 21122  0058A0  26D9               	addwf	fsr2l,f,c
 21123  0058A2  51DD               	movf	(fl_fflush@file+1)& (0+255),w,b
 21124  0058A4  22DA               	addwfc	fsr2h,f,c
 21125  0058A6  50DE               	movf	postinc2,w,c
 21126  0058A8  10DD               	iorwf	postdec2,w,c
 21127  0058AA  E03D               	bz	l610
 21128                           
 21129                           ; BSR set to: 0
 21130                           ;fat_filelib.c: 910: {
 21131                           ;fat_filelib.c: 912: if (_write_sectors(file, file->file_data_address, file->file_data_s
      +                          ector, 1))
 21132  0058AC  C0DD  F09F         	movff	fl_fflush@file+1,__write_sectors@file+1
 21133  0058B0  C0DC  F09E         	movff	fl_fflush@file,__write_sectors@file
 21134  0058B4  EE22 F039          	lfsr	2,569
 21135  0058B8  51DC               	movf	fl_fflush@file& (0+255),w,b
 21136  0058BA  26D9               	addwf	fsr2l,f,c
 21137  0058BC  51DD               	movf	(fl_fflush@file+1)& (0+255),w,b
 21138  0058BE  22DA               	addwfc	fsr2h,f,c
 21139  0058C0  CFDE F0A0          	movff	postinc2,__write_sectors@offset
 21140  0058C4  CFDE F0A1          	movff	postinc2,__write_sectors@offset+1
 21141  0058C8  CFDE F0A2          	movff	postinc2,__write_sectors@offset+2
 21142  0058CC  CFDE F0A3          	movff	postinc2,__write_sectors@offset+3
 21143  0058D0  0E39               	movlw	57
 21144  0058D2  25DC               	addwf	fl_fflush@file& (0+255),w,b
 21145  0058D4  6FD6               	movwf	??_fl_fflush& (0+255),b
 21146  0058D6  0E00               	movlw	0
 21147  0058D8  21DD               	addwfc	(fl_fflush@file+1)& (0+255),w,b
 21148  0058DA  6FD7               	movwf	(??_fl_fflush+1)& (0+255),b
 21149  0058DC  0E20               	movlw	32
 21150  0058DE  6FA6               	movwf	(__write_sectors@buf+2)& (0+255),b
 21151  0058E0  C0D7  F0A5         	movff	??_fl_fflush+1,__write_sectors@buf+1
 21152  0058E4  C0D6  F0A4         	movff	??_fl_fflush,__write_sectors@buf
 21153  0058E8  0E01               	movlw	1
 21154  0058EA  6FA7               	movwf	__write_sectors@count& (0+255),b
 21155  0058EC  0E00               	movlw	0
 21156  0058EE  6BA8               	clrf	(__write_sectors@count+1)& (0+255),b
 21157  0058F0  6BA9               	clrf	(__write_sectors@count+2)& (0+255),b
 21158  0058F2  6BAA               	clrf	(__write_sectors@count+3)& (0+255),b
 21159  0058F4  ECA4  F062         	call	__write_sectors	;wreg free
 21160  0058F8  C09E  F0D8         	movff	?__write_sectors,??_fl_fflush+2
 21161  0058FC  C09F  F0D9         	movff	?__write_sectors+1,??_fl_fflush+3
 21162  005900  C0A0  F0DA         	movff	?__write_sectors+2,??_fl_fflush+4
 21163  005904  C0A1  F0DB         	movff	?__write_sectors+3,??_fl_fflush+5
 21164  005908  0100               	movlb	0	; () banked
 21165  00590A  51DB               	movf	(??_fl_fflush+5)& (0+255),w,b
 21166  00590C  11D8               	iorwf	(??_fl_fflush+2)& (0+255),w,b
 21167  00590E  11D9               	iorwf	(??_fl_fflush+3)& (0+255),w,b
 21168  005910  11DA               	iorwf	(??_fl_fflush+4)& (0+255),w,b
 21169  005912  E009               	bz	l610
 21170                           
 21171                           ; BSR set to: 0
 21172                           ;fat_filelib.c: 913: file->file_data_dirty = 0;
 21173  005914  EE22 F03D          	lfsr	2,573
 21174  005918  51DC               	movf	fl_fflush@file& (0+255),w,b
 21175  00591A  26D9               	addwf	fsr2l,f,c
 21176  00591C  51DD               	movf	(fl_fflush@file+1)& (0+255),w,b
 21177  00591E  22DA               	addwfc	fsr2h,f,c
 21178  005920  0E00               	movlw	0
 21179  005922  6EDE               	movwf	postinc2,c
 21180  005924  6EDD               	movwf	postdec2,c
 21181  005926                     l610:
 21182                           
 21183                           ; BSR set to: 0
 21184  005926  0012               	return	
 21185  005928                     __end_of_fl_fflush:
 21186                           	opt stack 0
 21187                           tosu	equ	0xFFF
 21188                           tosh	equ	0xFFE
 21189                           tosl	equ	0xFFD
 21190                           pclath	equ	0xFFA
 21191                           tblptru	equ	0xFF8
 21192                           tblptrh	equ	0xFF7
 21193                           tblptrl	equ	0xFF6
 21194                           tablat	equ	0xFF5
 21195                           prodh	equ	0xFF4
 21196                           prodl	equ	0xFF3
 21197                           indf0	equ	0xFEF
 21198                           postinc0	equ	0xFEE
 21199                           fsr0h	equ	0xFEA
 21200                           fsr0l	equ	0xFE9
 21201                           wreg	equ	0xFE8
 21202                           indf1	equ	0xFE7
 21203                           postinc1	equ	0xFE6
 21204                           postdec1	equ	0xFE5
 21205                           fsr1h	equ	0xFE2
 21206                           fsr1l	equ	0xFE1
 21207                           indf2	equ	0xFDF
 21208                           postinc2	equ	0xFDE
 21209                           postdec2	equ	0xFDD
 21210                           fsr2h	equ	0xFDA
 21211                           fsr2l	equ	0xFD9
 21212                           status	equ	0xFD8
 21213                           
 21214 ;; *************** function __write_sectors *****************
 21215 ;; Defined at:
 21216 ;;		line 808 in file "fat_filelib.c"
 21217 ;; Parameters:    Size  Location     Type
 21218 ;;  file            2   30[BANK0 ] PTR struct sFL_FILE
 21219 ;;		 -> RAM(3967), NULL(0), 
 21220 ;;  offset          4   32[BANK0 ] unsigned long 
 21221 ;;  buf             3   36[BANK0 ] PTR unsigned char 
 21222 ;;		 -> w(1), str_0(26), data(1), fl_fputc@data(1), 
 21223 ;;		 -> ROM(65535), RAM(3967), NULL(0), 
 21224 ;;  count           4   39[BANK0 ] unsigned long 
 21225 ;; Auto vars:     Size  Location     Type
 21226 ;;  nextCluster     4   64[BANK0 ] unsigned long 
 21227 ;;  Cluster         4   80[BANK0 ] unsigned long 
 21228 ;;  ClusterIdx      4   76[BANK0 ] unsigned long 
 21229 ;;  i               4   72[BANK0 ] unsigned long 
 21230 ;;  SectorNumber    4   68[BANK0 ] unsigned long 
 21231 ;;  LastCluster     4   60[BANK0 ] unsigned long 
 21232 ;;  TotalWriteCo    4   56[BANK0 ] unsigned long 
 21233 ;;  lba             4   52[BANK0 ] unsigned long 
 21234 ;; Return value:  Size  Location     Type
 21235 ;;                  4   30[BANK0 ] unsigned long 
 21236 ;; Registers used:
 21237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21238 ;; Tracked objects:
 21239 ;;		On entry : 0/0
 21240 ;;		On exit  : 0/0
 21241 ;;		Unchanged: 0/0
 21242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21243 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21244 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21245 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21246 ;;      Totals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21247 ;;Total ram usage:       54 bytes
 21248 ;; Hardware stack levels used:    1
 21249 ;; Hardware stack levels required when called:    7
 21250 ;; This function calls:
 21251 ;;		___lldiv
 21252 ;;		_fatfs_add_free_space
 21253 ;;		_fatfs_cache_get_next_cluster
 21254 ;;		_fatfs_cache_set_next_cluster
 21255 ;;		_fatfs_find_next_cluster
 21256 ;;		_fatfs_lba_of_cluster
 21257 ;;		_fatfs_sector_write
 21258 ;; This function is called by:
 21259 ;;		_fl_fflush
 21260 ;;		_fl_fwrite
 21261 ;; This function uses a non-reentrant model
 21262 ;;
 21263                           
 21264                           	psect	text55
 21265  00C548                     __ptext55:
 21266                           	opt stack 0
 21267  00C548                     __write_sectors:
 21268                           	opt stack 18
 21269                           
 21270                           ;fat_filelib.c: 810: uint32 SectorNumber = 0;
 21271                           
 21272                           ; BSR set to: 0
 21273                           ;incstack = 0
 21274  00C548  0100               	movlb	0	; () banked
 21275  00C54A  6BC4               	clrf	__write_sectors@SectorNumber& (0+255),b
 21276  00C54C  6BC5               	clrf	(__write_sectors@SectorNumber+1)& (0+255),b
 21277  00C54E  6BC6               	clrf	(__write_sectors@SectorNumber+2)& (0+255),b
 21278  00C550  6BC7               	clrf	(__write_sectors@SectorNumber+3)& (0+255),b
 21279                           
 21280                           ;fat_filelib.c: 811: uint32 ClusterIdx = 0;
 21281  00C552  6BCC               	clrf	__write_sectors@ClusterIdx& (0+255),b
 21282  00C554  6BCD               	clrf	(__write_sectors@ClusterIdx+1)& (0+255),b
 21283  00C556  6BCE               	clrf	(__write_sectors@ClusterIdx+2)& (0+255),b
 21284  00C558  6BCF               	clrf	(__write_sectors@ClusterIdx+3)& (0+255),b
 21285                           
 21286                           ;fat_filelib.c: 812: uint32 Cluster = 0;
 21287  00C55A  6BD0               	clrf	__write_sectors@Cluster& (0+255),b
 21288  00C55C  6BD1               	clrf	(__write_sectors@Cluster+1)& (0+255),b
 21289  00C55E  6BD2               	clrf	(__write_sectors@Cluster+2)& (0+255),b
 21290  00C560  6BD3               	clrf	(__write_sectors@Cluster+3)& (0+255),b
 21291                           
 21292                           ; BSR set to: 0
 21293                           ;fat_filelib.c: 813: uint32 LastCluster = 0xFFFFFFFF;
 21294  00C562  69BC               	setf	__write_sectors@LastCluster& (0+255),b
 21295  00C564  69BD               	setf	(__write_sectors@LastCluster+1)& (0+255),b
 21296  00C566  69BE               	setf	(__write_sectors@LastCluster+2)& (0+255),b
 21297  00C568  69BF               	setf	(__write_sectors@LastCluster+3)& (0+255),b
 21298                           
 21299                           ; BSR set to: 0
 21300                           ;fat_filelib.c: 814: uint32 i;
 21301                           ;fat_filelib.c: 815: uint32 lba;
 21302                           ;fat_filelib.c: 816: uint32 TotalWriteCount = count;
 21303  00C56A  C0A7  F0B8         	movff	__write_sectors@count,__write_sectors@TotalWriteCount
 21304  00C56E  C0A8  F0B9         	movff	__write_sectors@count+1,__write_sectors@TotalWriteCount+1
 21305  00C572  C0A9  F0BA         	movff	__write_sectors@count+2,__write_sectors@TotalWriteCount+2
 21306  00C576  C0AA  F0BB         	movff	__write_sectors@count+3,__write_sectors@TotalWriteCount+3
 21307                           
 21308                           ; BSR set to: 0
 21309                           ;fat_filelib.c: 819: ClusterIdx = offset / _fs.sectors_per_cluster;
 21310  00C57A  C0A0  F001         	movff	__write_sectors@offset,___lldiv@dividend
 21311  00C57E  C0A1  F002         	movff	__write_sectors@offset+1,___lldiv@dividend+1
 21312  00C582  C0A2  F003         	movff	__write_sectors@offset+2,___lldiv@dividend+2
 21313  00C586  C0A3  F004         	movff	__write_sectors@offset+3,___lldiv@dividend+3
 21314  00C58A  C978  F0AB         	movff	__fs,??__write_sectors
 21315  00C58E  51AB               	movf	??__write_sectors& (0+255),w,b
 21316  00C590  6E05               	movwf	___lldiv@divisor,c
 21317  00C592  6A06               	clrf	___lldiv@divisor+1,c
 21318  00C594  6A07               	clrf	___lldiv@divisor+2,c
 21319  00C596  6A08               	clrf	___lldiv@divisor+3,c
 21320  00C598  EC85  F026         	call	___lldiv	;wreg free
 21321  00C59C  C001  F0CC         	movff	?___lldiv,__write_sectors@ClusterIdx
 21322  00C5A0  C002  F0CD         	movff	?___lldiv+1,__write_sectors@ClusterIdx+1
 21323  00C5A4  C003  F0CE         	movff	?___lldiv+2,__write_sectors@ClusterIdx+2
 21324  00C5A8  C004  F0CF         	movff	?___lldiv+3,__write_sectors@ClusterIdx+3
 21325                           
 21326                           ;fat_filelib.c: 820: SectorNumber = offset - (ClusterIdx * _fs.sectors_per_cluster);
 21327  00C5AC  C978  F0AB         	movff	__fs,??__write_sectors
 21328  00C5B0  C0AB  F0AC         	movff	??__write_sectors,??__write_sectors+1
 21329  00C5B4  0100               	movlb	0	; () banked
 21330  00C5B6  6BAD               	clrf	(??__write_sectors+2)& (0+255),b
 21331  00C5B8  6BAE               	clrf	(??__write_sectors+3)& (0+255),b
 21332  00C5BA  6BAF               	clrf	(??__write_sectors+4)& (0+255),b
 21333  00C5BC  51AC               	movf	(??__write_sectors+1)& (0+255),w,b
 21334  00C5BE  03CC               	mulwf	__write_sectors@ClusterIdx& (0+255),b
 21335  00C5C0  CFF3 F0B0          	movff	prodl,??__write_sectors+5
 21336  00C5C4  CFF4 F0B1          	movff	prodh,??__write_sectors+6
 21337  00C5C8  6BB2               	clrf	(??__write_sectors+7)& (0+255),b
 21338  00C5CA  6BB3               	clrf	(??__write_sectors+8)& (0+255),b
 21339  00C5CC  03CD               	mulwf	(__write_sectors@ClusterIdx+1)& (0+255),b
 21340  00C5CE  50F3               	movf	243,w,c
 21341  00C5D0  27B1               	addwf	(??__write_sectors+6)& (0+255),f,b
 21342  00C5D2  50F4               	movf	244,w,c
 21343  00C5D4  23B2               	addwfc	(??__write_sectors+7)& (0+255),f,b
 21344  00C5D6  0E00               	movlw	0
 21345  00C5D8  23B3               	addwfc	(??__write_sectors+8)& (0+255),f,b
 21346  00C5DA  51AD               	movf	(??__write_sectors+2)& (0+255),w,b
 21347  00C5DC  03CC               	mulwf	__write_sectors@ClusterIdx& (0+255),b
 21348  00C5DE  50F3               	movf	243,w,c
 21349  00C5E0  27B1               	addwf	(??__write_sectors+6)& (0+255),f,b
 21350  00C5E2  50F4               	movf	244,w,c
 21351  00C5E4  23B2               	addwfc	(??__write_sectors+7)& (0+255),f,b
 21352  00C5E6  0E00               	movlw	0
 21353  00C5E8  23B3               	addwfc	(??__write_sectors+8)& (0+255),f,b
 21354  00C5EA  51AC               	movf	(??__write_sectors+1)& (0+255),w,b
 21355  00C5EC  03CE               	mulwf	(__write_sectors@ClusterIdx+2)& (0+255),b
 21356  00C5EE  50F3               	movf	243,w,c
 21357  00C5F0  27B2               	addwf	(??__write_sectors+7)& (0+255),f,b
 21358  00C5F2  50F4               	movf	244,w,c
 21359  00C5F4  23B3               	addwfc	(??__write_sectors+8)& (0+255),f,b
 21360  00C5F6  51AD               	movf	(??__write_sectors+2)& (0+255),w,b
 21361  00C5F8  03CD               	mulwf	(__write_sectors@ClusterIdx+1)& (0+255),b
 21362  00C5FA  50F3               	movf	243,w,c
 21363  00C5FC  27B2               	addwf	(??__write_sectors+7)& (0+255),f,b
 21364  00C5FE  50F4               	movf	244,w,c
 21365  00C600  23B3               	addwfc	(??__write_sectors+8)& (0+255),f,b
 21366  00C602  51AE               	movf	(??__write_sectors+3)& (0+255),w,b
 21367  00C604  03CC               	mulwf	__write_sectors@ClusterIdx& (0+255),b
 21368  00C606  50F3               	movf	243,w,c
 21369  00C608  27B2               	addwf	(??__write_sectors+7)& (0+255),f,b
 21370  00C60A  50F4               	movf	244,w,c
 21371  00C60C  23B3               	addwfc	(??__write_sectors+8)& (0+255),f,b
 21372  00C60E  51CF               	movf	(__write_sectors@ClusterIdx+3)& (0+255),w,b
 21373  00C610  03AC               	mulwf	(??__write_sectors+1)& (0+255),b
 21374  00C612  50F3               	movf	243,w,c
 21375  00C614  27B3               	addwf	(??__write_sectors+8)& (0+255),f,b
 21376  00C616  51AD               	movf	(??__write_sectors+2)& (0+255),w,b
 21377  00C618  03CE               	mulwf	(__write_sectors@ClusterIdx+2)& (0+255),b
 21378  00C61A  50F3               	movf	243,w,c
 21379  00C61C  27B3               	addwf	(??__write_sectors+8)& (0+255),f,b
 21380  00C61E  51AE               	movf	(??__write_sectors+3)& (0+255),w,b
 21381  00C620  03CD               	mulwf	(__write_sectors@ClusterIdx+1)& (0+255),b
 21382  00C622  50F3               	movf	243,w,c
 21383  00C624  27B3               	addwf	(??__write_sectors+8)& (0+255),f,b
 21384  00C626  51AF               	movf	(??__write_sectors+4)& (0+255),w,b
 21385  00C628  03CC               	mulwf	__write_sectors@ClusterIdx& (0+255),b
 21386  00C62A  50F3               	movf	243,w,c
 21387  00C62C  27B3               	addwf	(??__write_sectors+8)& (0+255),f,b
 21388  00C62E  1FB0               	comf	(??__write_sectors+5)& (0+255),f,b
 21389  00C630  1FB1               	comf	(??__write_sectors+6)& (0+255),f,b
 21390  00C632  1FB2               	comf	(??__write_sectors+7)& (0+255),f,b
 21391  00C634  1FB3               	comf	(??__write_sectors+8)& (0+255),f,b
 21392  00C636  2BB0               	incf	(??__write_sectors+5)& (0+255),f,b
 21393  00C638  0E00               	movlw	0
 21394  00C63A  23B1               	addwfc	(??__write_sectors+6)& (0+255),f,b
 21395  00C63C  23B2               	addwfc	(??__write_sectors+7)& (0+255),f,b
 21396  00C63E  23B3               	addwfc	(??__write_sectors+8)& (0+255),f,b
 21397  00C640  51A0               	movf	__write_sectors@offset& (0+255),w,b
 21398  00C642  25B0               	addwf	(??__write_sectors+5)& (0+255),w,b
 21399  00C644  6FC4               	movwf	__write_sectors@SectorNumber& (0+255),b
 21400  00C646  51A1               	movf	(__write_sectors@offset+1)& (0+255),w,b
 21401  00C648  21B1               	addwfc	(??__write_sectors+6)& (0+255),w,b
 21402  00C64A  6FC5               	movwf	(__write_sectors@SectorNumber+1)& (0+255),b
 21403  00C64C  51A2               	movf	(__write_sectors@offset+2)& (0+255),w,b
 21404  00C64E  21B2               	addwfc	(??__write_sectors+7)& (0+255),w,b
 21405  00C650  6FC6               	movwf	(__write_sectors@SectorNumber+2)& (0+255),b
 21406  00C652  51A3               	movf	(__write_sectors@offset+3)& (0+255),w,b
 21407  00C654  21B3               	addwfc	(??__write_sectors+8)& (0+255),w,b
 21408  00C656  6FC7               	movwf	(__write_sectors@SectorNumber+3)& (0+255),b
 21409                           
 21410                           ; BSR set to: 0
 21411                           ;fat_filelib.c: 823: if ((SectorNumber + count) > _fs.sectors_per_cluster)
 21412  00C658  51A7               	movf	__write_sectors@count& (0+255),w,b
 21413  00C65A  25C4               	addwf	__write_sectors@SectorNumber& (0+255),w,b
 21414  00C65C  6FAB               	movwf	??__write_sectors& (0+255),b
 21415  00C65E  51A8               	movf	(__write_sectors@count+1)& (0+255),w,b
 21416  00C660  21C5               	addwfc	(__write_sectors@SectorNumber+1)& (0+255),w,b
 21417  00C662  6FAC               	movwf	(??__write_sectors+1)& (0+255),b
 21418  00C664  51A9               	movf	(__write_sectors@count+2)& (0+255),w,b
 21419  00C666  21C6               	addwfc	(__write_sectors@SectorNumber+2)& (0+255),w,b
 21420  00C668  6FAD               	movwf	(??__write_sectors+2)& (0+255),b
 21421  00C66A  51AA               	movf	(__write_sectors@count+3)& (0+255),w,b
 21422  00C66C  21C7               	addwfc	(__write_sectors@SectorNumber+3)& (0+255),w,b
 21423  00C66E  6FAE               	movwf	(??__write_sectors+3)& (0+255),b
 21424  00C670  C978  F0AF         	movff	__fs,??__write_sectors+4
 21425  00C674  C0AF  F0B0         	movff	??__write_sectors+4,??__write_sectors+5
 21426  00C678  6BB1               	clrf	(??__write_sectors+6)& (0+255),b
 21427  00C67A  6BB2               	clrf	(??__write_sectors+7)& (0+255),b
 21428  00C67C  6BB3               	clrf	(??__write_sectors+8)& (0+255),b
 21429  00C67E  51AB               	movf	??__write_sectors& (0+255),w,b
 21430  00C680  5DB0               	subwf	(??__write_sectors+5)& (0+255),w,b
 21431  00C682  51AC               	movf	(??__write_sectors+1)& (0+255),w,b
 21432  00C684  59B1               	subwfb	(??__write_sectors+6)& (0+255),w,b
 21433  00C686  51AD               	movf	(??__write_sectors+2)& (0+255),w,b
 21434  00C688  59B2               	subwfb	(??__write_sectors+7)& (0+255),w,b
 21435  00C68A  51AE               	movf	(??__write_sectors+3)& (0+255),w,b
 21436  00C68C  59B3               	subwfb	(??__write_sectors+8)& (0+255),w,b
 21437  00C68E  E21F               	bc	l10889
 21438                           
 21439                           ; BSR set to: 0
 21440                           ;fat_filelib.c: 824: count = _fs.sectors_per_cluster - SectorNumber;
 21441  00C690  C0C4  F0AB         	movff	__write_sectors@SectorNumber,??__write_sectors
 21442  00C694  C0C5  F0AC         	movff	__write_sectors@SectorNumber+1,??__write_sectors+1
 21443  00C698  C0C6  F0AD         	movff	__write_sectors@SectorNumber+2,??__write_sectors+2
 21444  00C69C  C0C7  F0AE         	movff	__write_sectors@SectorNumber+3,??__write_sectors+3
 21445  00C6A0  1FAB               	comf	??__write_sectors& (0+255),f,b
 21446  00C6A2  1FAC               	comf	(??__write_sectors+1)& (0+255),f,b
 21447  00C6A4  1FAD               	comf	(??__write_sectors+2)& (0+255),f,b
 21448  00C6A6  1FAE               	comf	(??__write_sectors+3)& (0+255),f,b
 21449  00C6A8  2BAB               	incf	??__write_sectors& (0+255),f,b
 21450  00C6AA  0E00               	movlw	0
 21451  00C6AC  23AC               	addwfc	(??__write_sectors+1)& (0+255),f,b
 21452  00C6AE  23AD               	addwfc	(??__write_sectors+2)& (0+255),f,b
 21453  00C6B0  23AE               	addwfc	(??__write_sectors+3)& (0+255),f,b
 21454  00C6B2  C978  F0AF         	movff	__fs,??__write_sectors+4
 21455  00C6B6  51AF               	movf	(??__write_sectors+4)& (0+255),w,b
 21456  00C6B8  25AB               	addwf	??__write_sectors& (0+255),w,b
 21457  00C6BA  6FA7               	movwf	__write_sectors@count& (0+255),b
 21458  00C6BC  0E00               	movlw	0
 21459  00C6BE  21AC               	addwfc	(??__write_sectors+1)& (0+255),w,b
 21460  00C6C0  6FA8               	movwf	(__write_sectors@count+1)& (0+255),b
 21461  00C6C2  0E00               	movlw	0
 21462  00C6C4  21AD               	addwfc	(??__write_sectors+2)& (0+255),w,b
 21463  00C6C6  6FA9               	movwf	(__write_sectors@count+2)& (0+255),b
 21464  00C6C8  0E00               	movlw	0
 21465  00C6CA  21AE               	addwfc	(??__write_sectors+3)& (0+255),w,b
 21466  00C6CC  6FAA               	movwf	(__write_sectors@count+3)& (0+255),b
 21467  00C6CE                     l10889:
 21468                           
 21469                           ; BSR set to: 0
 21470                           ;fat_filelib.c: 827: if (ClusterIdx == file->last_fat_lookup.ClusterIdx)
 21471  00C6CE  EE20 F031          	lfsr	2,49
 21472  00C6D2  0100               	movlb	0	; () banked
 21473  00C6D4  519E               	movf	__write_sectors@file& (0+255),w,b
 21474  00C6D6  26D9               	addwf	fsr2l,f,c
 21475  00C6D8  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21476  00C6DA  22DA               	addwfc	fsr2h,f,c
 21477  00C6DC  CFDE F0AB          	movff	postinc2,??__write_sectors
 21478  00C6E0  CFDE F0AC          	movff	postinc2,??__write_sectors+1
 21479  00C6E4  CFDE F0AD          	movff	postinc2,??__write_sectors+2
 21480  00C6E8  CFDE F0AE          	movff	postinc2,??__write_sectors+3
 21481  00C6EC  51CF               	movf	(__write_sectors@ClusterIdx+3)& (0+255),w,b
 21482  00C6EE  19AE               	xorwf	(??__write_sectors+3)& (0+255),w,b
 21483  00C6F0  E108               	bnz	u12455
 21484  00C6F2  51CE               	movf	(__write_sectors@ClusterIdx+2)& (0+255),w,b
 21485  00C6F4  19AD               	xorwf	(??__write_sectors+2)& (0+255),w,b
 21486  00C6F6  E105               	bnz	u12455
 21487  00C6F8  51CD               	movf	(__write_sectors@ClusterIdx+1)& (0+255),w,b
 21488  00C6FA  19AC               	xorwf	(??__write_sectors+1)& (0+255),w,b
 21489  00C6FC  E102               	bnz	u12455
 21490  00C6FE  51CC               	movf	__write_sectors@ClusterIdx& (0+255),w,b
 21491  00C700  19AB               	xorwf	??__write_sectors& (0+255),w,b
 21492  00C702                     u12455:
 21493  00C702  E110               	bnz	l10893
 21494                           
 21495                           ; BSR set to: 0
 21496                           ;fat_filelib.c: 828: Cluster = file->last_fat_lookup.CurrentCluster;
 21497  00C704  EE20 F035          	lfsr	2,53
 21498  00C708  0100               	movlb	0	; () banked
 21499  00C70A  519E               	movf	__write_sectors@file& (0+255),w,b
 21500  00C70C  26D9               	addwf	fsr2l,f,c
 21501  00C70E  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21502  00C710  22DA               	addwfc	fsr2h,f,c
 21503  00C712  CFDE F0D0          	movff	postinc2,__write_sectors@Cluster
 21504  00C716  CFDE F0D1          	movff	postinc2,__write_sectors@Cluster+1
 21505  00C71A  CFDE F0D2          	movff	postinc2,__write_sectors@Cluster+2
 21506  00C71E  CFDE F0D3          	movff	postinc2,__write_sectors@Cluster+3
 21507  00C722  D12A               	goto	l10929
 21508  00C724                     l10893:
 21509                           
 21510                           ; BSR set to: 0
 21511                           ;fat_filelib.c: 830: else
 21512                           ;fat_filelib.c: 831: {
 21513                           ;fat_filelib.c: 833: if (ClusterIdx && ClusterIdx == file->last_fat_lookup.ClusterIdx + 
      +                          1)
 21514  00C724  0100               	movlb	0	; () banked
 21515  00C726  51CF               	movf	(__write_sectors@ClusterIdx+3)& (0+255),w,b
 21516  00C728  11CC               	iorwf	__write_sectors@ClusterIdx& (0+255),w,b
 21517  00C72A  11CD               	iorwf	(__write_sectors@ClusterIdx+1)& (0+255),w,b
 21518  00C72C  11CE               	iorwf	(__write_sectors@ClusterIdx+2)& (0+255),w,b
 21519  00C72E  E036               	bz	l10899
 21520                           
 21521                           ; BSR set to: 0
 21522  00C730  EE20 F031          	lfsr	2,49
 21523  00C734  519E               	movf	__write_sectors@file& (0+255),w,b
 21524  00C736  26D9               	addwf	fsr2l,f,c
 21525  00C738  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21526  00C73A  22DA               	addwfc	fsr2h,f,c
 21527  00C73C  CFDE F0AB          	movff	postinc2,??__write_sectors
 21528  00C740  CFDE F0AC          	movff	postinc2,??__write_sectors+1
 21529  00C744  CFDE F0AD          	movff	postinc2,??__write_sectors+2
 21530  00C748  CFDE F0AE          	movff	postinc2,??__write_sectors+3
 21531  00C74C  29AB               	incf	??__write_sectors& (0+255),w,b
 21532  00C74E  6FAF               	movwf	(??__write_sectors+4)& (0+255),b
 21533  00C750  0E00               	movlw	0
 21534  00C752  21AC               	addwfc	(??__write_sectors+1)& (0+255),w,b
 21535  00C754  6FB0               	movwf	(??__write_sectors+5)& (0+255),b
 21536  00C756  0E00               	movlw	0
 21537  00C758  21AD               	addwfc	(??__write_sectors+2)& (0+255),w,b
 21538  00C75A  6FB1               	movwf	(??__write_sectors+6)& (0+255),b
 21539  00C75C  0E00               	movlw	0
 21540  00C75E  21AE               	addwfc	(??__write_sectors+3)& (0+255),w,b
 21541  00C760  6FB2               	movwf	(??__write_sectors+7)& (0+255),b
 21542  00C762  19CF               	xorwf	(__write_sectors@ClusterIdx+3)& (0+255),w,b
 21543  00C764  E108               	bnz	u12475
 21544  00C766  51CE               	movf	(__write_sectors@ClusterIdx+2)& (0+255),w,b
 21545  00C768  19B1               	xorwf	(??__write_sectors+6)& (0+255),w,b
 21546  00C76A  E105               	bnz	u12475
 21547  00C76C  51CD               	movf	(__write_sectors@ClusterIdx+1)& (0+255),w,b
 21548  00C76E  19B0               	xorwf	(??__write_sectors+5)& (0+255),w,b
 21549  00C770  E102               	bnz	u12475
 21550  00C772  51CC               	movf	__write_sectors@ClusterIdx& (0+255),w,b
 21551  00C774  19AF               	xorwf	(??__write_sectors+4)& (0+255),w,b
 21552  00C776                     u12475:
 21553  00C776  E112               	bnz	l10899
 21554                           
 21555                           ; BSR set to: 0
 21556                           ;fat_filelib.c: 834: {
 21557                           ;fat_filelib.c: 835: i = file->last_fat_lookup.ClusterIdx;
 21558  00C778  EE20 F031          	lfsr	2,49
 21559  00C77C  0100               	movlb	0	; () banked
 21560  00C77E  519E               	movf	__write_sectors@file& (0+255),w,b
 21561  00C780  26D9               	addwf	fsr2l,f,c
 21562  00C782  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21563  00C784  22DA               	addwfc	fsr2h,f,c
 21564  00C786  CFDE F0C8          	movff	postinc2,__write_sectors@i
 21565  00C78A  CFDE F0C9          	movff	postinc2,__write_sectors@i+1
 21566  00C78E  CFDE F0CA          	movff	postinc2,__write_sectors@i+2
 21567  00C792  CFDE F0CB          	movff	postinc2,__write_sectors@i+3
 21568                           
 21569                           ;fat_filelib.c: 836: Cluster = file->last_fat_lookup.CurrentCluster;
 21570  00C796  EE20 F035          	lfsr	2,53
 21571  00C79A  D007               	goto	L62
 21572  00C79C                     l10899:
 21573                           
 21574                           ; BSR set to: 0
 21575                           ;fat_filelib.c: 839: else
 21576                           ;fat_filelib.c: 840: {
 21577                           ;fat_filelib.c: 842: i = 0;
 21578  00C79C  0100               	movlb	0	; () banked
 21579  00C79E  6BC8               	clrf	__write_sectors@i& (0+255),b
 21580  00C7A0  6BC9               	clrf	(__write_sectors@i+1)& (0+255),b
 21581  00C7A2  6BCA               	clrf	(__write_sectors@i+2)& (0+255),b
 21582  00C7A4  6BCB               	clrf	(__write_sectors@i+3)& (0+255),b
 21583                           
 21584                           ; BSR set to: 0
 21585                           ;fat_filelib.c: 843: Cluster = file->startcluster;
 21586  00C7A6  EE20 F004          	lfsr	2,4
 21587  00C7AA                     L62:
 21588  00C7AA  0100               	movlb	0	; () banked
 21589  00C7AC  519E               	movf	__write_sectors@file& (0+255),w,b
 21590  00C7AE  26D9               	addwf	fsr2l,f,c
 21591  00C7B0  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21592  00C7B2  22DA               	addwfc	fsr2h,f,c
 21593  00C7B4  CFDE F0D0          	movff	postinc2,__write_sectors@Cluster
 21594  00C7B8  CFDE F0D1          	movff	postinc2,__write_sectors@Cluster+1
 21595  00C7BC  CFDE F0D2          	movff	postinc2,__write_sectors@Cluster+2
 21596  00C7C0  CFDE F0D3          	movff	postinc2,__write_sectors@Cluster+3
 21597  00C7C4  D069               	goto	l588
 21598  00C7C6                     l10903:
 21599                           
 21600                           ; BSR set to: 0
 21601                           ;fat_filelib.c: 848: {
 21602                           ;fat_filelib.c: 849: uint32 nextCluster;
 21603                           ;fat_filelib.c: 852: if (!fatfs_cache_get_next_cluster(&_fs, file, i, &nextCluster))
 21604  00C7C6  0E09               	movlw	high __fs
 21605  00C7C8  6E02               	movwf	fatfs_cache_get_next_cluster@fs+1,c
 21606  00C7CA  0E78               	movlw	low __fs
 21607  00C7CC  6E01               	movwf	fatfs_cache_get_next_cluster@fs,c
 21608  00C7CE  C09F  F004         	movff	__write_sectors@file+1,fatfs_cache_get_next_cluster@file+1
 21609  00C7D2  C09E  F003         	movff	__write_sectors@file,fatfs_cache_get_next_cluster@file
 21610  00C7D6  C0C8  F005         	movff	__write_sectors@i,fatfs_cache_get_next_cluster@clusterIdx
 21611  00C7DA  C0C9  F006         	movff	__write_sectors@i+1,fatfs_cache_get_next_cluster@clusterIdx+1
 21612  00C7DE  C0CA  F007         	movff	__write_sectors@i+2,fatfs_cache_get_next_cluster@clusterIdx+2
 21613  00C7E2  C0CB  F008         	movff	__write_sectors@i+3,fatfs_cache_get_next_cluster@clusterIdx+3
 21614  00C7E6  0E00               	movlw	high __write_sectors@nextCluster
 21615  00C7E8  6E0A               	movwf	fatfs_cache_get_next_cluster@pNextCluster+1,c
 21616  00C7EA  0100               	movlb	0	; () banked
 21617  00C7EC  0EC0               	movlw	low __write_sectors@nextCluster
 21618  00C7EE  6E09               	movwf	fatfs_cache_get_next_cluster@pNextCluster,c
 21619  00C7F0  EC28  F01F         	call	_fatfs_cache_get_next_cluster	;wreg free
 21620  00C7F4  5002               	movf	?_fatfs_cache_get_next_cluster+1,w,c
 21621  00C7F6  1001               	iorwf	?_fatfs_cache_get_next_cluster,w,c
 21622  00C7F8  E131               	bnz	l10909
 21623                           
 21624                           ;fat_filelib.c: 853: {
 21625                           ;fat_filelib.c: 855: nextCluster = fatfs_find_next_cluster(&_fs, Cluster);
 21626  00C7FA  0E09               	movlw	high __fs
 21627  00C7FC  6E47               	movwf	fatfs_find_next_cluster@fs+1,c
 21628  00C7FE  0E78               	movlw	low __fs
 21629  00C800  6E46               	movwf	fatfs_find_next_cluster@fs,c
 21630  00C802  C0D0  F048         	movff	__write_sectors@Cluster,fatfs_find_next_cluster@current_cluster
 21631  00C806  C0D1  F049         	movff	__write_sectors@Cluster+1,fatfs_find_next_cluster@current_cluster+1
 21632  00C80A  C0D2  F04A         	movff	__write_sectors@Cluster+2,fatfs_find_next_cluster@current_cluster+2
 21633  00C80E  C0D3  F04B         	movff	__write_sectors@Cluster+3,fatfs_find_next_cluster@current_cluster+3
 21634  00C812  EC9F  F054         	call	_fatfs_find_next_cluster	;wreg free
 21635  00C816  C046  F0C0         	movff	?_fatfs_find_next_cluster,__write_sectors@nextCluster
 21636  00C81A  C047  F0C1         	movff	?_fatfs_find_next_cluster+1,__write_sectors@nextCluster+1
 21637  00C81E  C048  F0C2         	movff	?_fatfs_find_next_cluster+2,__write_sectors@nextCluster+2
 21638  00C822  C049  F0C3         	movff	?_fatfs_find_next_cluster+3,__write_sectors@nextCluster+3
 21639                           
 21640                           ;fat_filelib.c: 858: fatfs_cache_set_next_cluster(&_fs, file, i, nextCluster);
 21641  00C826  0E09               	movlw	high __fs
 21642  00C828  6E02               	movwf	fatfs_cache_set_next_cluster@fs+1,c
 21643  00C82A  0E78               	movlw	low __fs
 21644  00C82C  6E01               	movwf	fatfs_cache_set_next_cluster@fs,c
 21645  00C82E  C09F  F004         	movff	__write_sectors@file+1,fatfs_cache_set_next_cluster@file+1
 21646  00C832  0100               	movlb	0	; () banked
 21647  00C834  C09E  F003         	movff	__write_sectors@file,fatfs_cache_set_next_cluster@file
 21648  00C838  C0C8  F005         	movff	__write_sectors@i,fatfs_cache_set_next_cluster@clusterIdx
 21649  00C83C  C0C9  F006         	movff	__write_sectors@i+1,fatfs_cache_set_next_cluster@clusterIdx+1
 21650  00C840  C0CA  F007         	movff	__write_sectors@i+2,fatfs_cache_set_next_cluster@clusterIdx+2
 21651  00C844  C0CB  F008         	movff	__write_sectors@i+3,fatfs_cache_set_next_cluster@clusterIdx+3
 21652  00C848  C0C0  F009         	movff	__write_sectors@nextCluster,fatfs_cache_set_next_cluster@nextCluster
 21653  00C84C  C0C1  F00A         	movff	__write_sectors@nextCluster+1,fatfs_cache_set_next_cluster@nextCluster+1
 21654  00C850  C0C2  F00B         	movff	__write_sectors@nextCluster+2,fatfs_cache_set_next_cluster@nextCluster+2
 21655  00C854  C0C3  F00C         	movff	__write_sectors@nextCluster+3,fatfs_cache_set_next_cluster@nextCluster+3
 21656  00C858  EC21  F01F         	call	_fatfs_cache_set_next_cluster	;wreg free
 21657  00C85C                     l10909:
 21658                           
 21659                           ;fat_filelib.c: 859: }
 21660                           ;fat_filelib.c: 861: LastCluster = Cluster;
 21661  00C85C  C0D0  F0BC         	movff	__write_sectors@Cluster,__write_sectors@LastCluster
 21662  00C860  C0D1  F0BD         	movff	__write_sectors@Cluster+1,__write_sectors@LastCluster+1
 21663  00C864  C0D2  F0BE         	movff	__write_sectors@Cluster+2,__write_sectors@LastCluster+2
 21664  00C868  C0D3  F0BF         	movff	__write_sectors@Cluster+3,__write_sectors@LastCluster+3
 21665                           
 21666                           ;fat_filelib.c: 862: Cluster = nextCluster;
 21667  00C86C  C0C0  F0D0         	movff	__write_sectors@nextCluster,__write_sectors@Cluster
 21668  00C870  C0C1  F0D1         	movff	__write_sectors@nextCluster+1,__write_sectors@Cluster+1
 21669  00C874  C0C2  F0D2         	movff	__write_sectors@nextCluster+2,__write_sectors@Cluster+2
 21670  00C878  C0C3  F0D3         	movff	__write_sectors@nextCluster+3,__write_sectors@Cluster+3
 21671                           
 21672                           ;fat_filelib.c: 865: if (Cluster == 0xFFFFFFFF)
 21673  00C87C  0100               	movlb	0	; () banked
 21674  00C87E  29D0               	incf	__write_sectors@Cluster& (0+255),w,b
 21675  00C880  B4D8               	btfsc	status,2,c
 21676  00C882  29D1               	incf	(__write_sectors@Cluster+1)& (0+255),w,b
 21677  00C884  B4D8               	btfsc	status,2,c
 21678  00C886  29D2               	incf	(__write_sectors@Cluster+2)& (0+255),w,b
 21679  00C888  B4D8               	btfsc	status,2,c
 21680  00C88A  29D3               	incf	(__write_sectors@Cluster+3)& (0+255),w,b
 21681  00C88C  E00F               	bz	l10919
 21682                           
 21683                           ; BSR set to: 0
 21684                           
 21685                           ; BSR set to: 0
 21686                           
 21687                           ; BSR set to: 0
 21688                           ;fat_filelib.c: 866: break;
 21689  00C88E  2BC8               	incf	__write_sectors@i& (0+255),f,b
 21690  00C890  0E00               	movlw	0
 21691  00C892  23C9               	addwfc	(__write_sectors@i+1)& (0+255),f,b
 21692  00C894  23CA               	addwfc	(__write_sectors@i+2)& (0+255),f,b
 21693  00C896  23CB               	addwfc	(__write_sectors@i+3)& (0+255),f,b
 21694  00C898                     l588:
 21695                           
 21696                           ; BSR set to: 0
 21697  00C898  0100               	movlb	0	; () banked
 21698  00C89A  51CC               	movf	__write_sectors@ClusterIdx& (0+255),w,b
 21699  00C89C  5DC8               	subwf	__write_sectors@i& (0+255),w,b
 21700  00C89E  51CD               	movf	(__write_sectors@ClusterIdx+1)& (0+255),w,b
 21701  00C8A0  59C9               	subwfb	(__write_sectors@i+1)& (0+255),w,b
 21702  00C8A2  51CE               	movf	(__write_sectors@ClusterIdx+2)& (0+255),w,b
 21703  00C8A4  59CA               	subwfb	(__write_sectors@i+2)& (0+255),w,b
 21704  00C8A6  51CF               	movf	(__write_sectors@ClusterIdx+3)& (0+255),w,b
 21705  00C8A8  59CB               	subwfb	(__write_sectors@i+3)& (0+255),w,b
 21706  00C8AA  E38D               	bnc	l10903
 21707  00C8AC                     l10919:
 21708                           
 21709                           ; BSR set to: 0
 21710                           ;fat_filelib.c: 867: }
 21711                           ;fat_filelib.c: 870: if (Cluster == 0xFFFFFFFF)
 21712  00C8AC  0100               	movlb	0	; () banked
 21713  00C8AE  29D0               	incf	__write_sectors@Cluster& (0+255),w,b
 21714  00C8B0  B4D8               	btfsc	status,2,c
 21715  00C8B2  29D1               	incf	(__write_sectors@Cluster+1)& (0+255),w,b
 21716  00C8B4  B4D8               	btfsc	status,2,c
 21717  00C8B6  29D2               	incf	(__write_sectors@Cluster+2)& (0+255),w,b
 21718  00C8B8  B4D8               	btfsc	status,2,c
 21719  00C8BA  29D3               	incf	(__write_sectors@Cluster+3)& (0+255),w,b
 21720  00C8BC  E140               	bnz	l10927
 21721                           
 21722                           ; BSR set to: 0
 21723                           ;fat_filelib.c: 871: {
 21724                           ;fat_filelib.c: 873: if (!fatfs_add_free_space(&_fs, &LastCluster, (TotalWriteCount + _f
      +                          s.sectors_per_cluster -1) / _fs.sectors_per_cluster))
 21725  00C8BE  0E09               	movlw	high __fs
 21726  00C8C0  6E75               	movwf	fatfs_add_free_space@fs+1,c
 21727  00C8C2  0E78               	movlw	low __fs
 21728  00C8C4  6E74               	movwf	fatfs_add_free_space@fs,c
 21729  00C8C6  0E00               	movlw	high __write_sectors@LastCluster
 21730  00C8C8  6E77               	movwf	fatfs_add_free_space@startCluster+1,c
 21731  00C8CA  0EBC               	movlw	low __write_sectors@LastCluster
 21732  00C8CC  6E76               	movwf	fatfs_add_free_space@startCluster,c
 21733  00C8CE  C978  F0AB         	movff	__fs,??__write_sectors
 21734  00C8D2  51AB               	movf	??__write_sectors& (0+255),w,b
 21735  00C8D4  25B8               	addwf	__write_sectors@TotalWriteCount& (0+255),w,b
 21736  00C8D6  6FAC               	movwf	(??__write_sectors+1)& (0+255),b
 21737  00C8D8  0E00               	movlw	0
 21738  00C8DA  21B9               	addwfc	(__write_sectors@TotalWriteCount+1)& (0+255),w,b
 21739  00C8DC  6FAD               	movwf	(??__write_sectors+2)& (0+255),b
 21740  00C8DE  0E00               	movlw	0
 21741  00C8E0  21BA               	addwfc	(__write_sectors@TotalWriteCount+2)& (0+255),w,b
 21742  00C8E2  6FAE               	movwf	(??__write_sectors+3)& (0+255),b
 21743  00C8E4  0E00               	movlw	0
 21744  00C8E6  21BB               	addwfc	(__write_sectors@TotalWriteCount+3)& (0+255),w,b
 21745  00C8E8  6FAF               	movwf	(??__write_sectors+4)& (0+255),b
 21746  00C8EA  0EFF               	movlw	255
 21747  00C8EC  25AC               	addwf	(??__write_sectors+1)& (0+255),w,b
 21748  00C8EE  6E01               	movwf	___lldiv@dividend,c
 21749  00C8F0  0EFF               	movlw	255
 21750  00C8F2  21AD               	addwfc	(??__write_sectors+2)& (0+255),w,b
 21751  00C8F4  6E02               	movwf	___lldiv@dividend+1,c
 21752  00C8F6  0EFF               	movlw	255
 21753  00C8F8  21AE               	addwfc	(??__write_sectors+3)& (0+255),w,b
 21754  00C8FA  6E03               	movwf	___lldiv@dividend+2,c
 21755  00C8FC  0EFF               	movlw	255
 21756  00C8FE  21AF               	addwfc	(??__write_sectors+4)& (0+255),w,b
 21757  00C900  6E04               	movwf	___lldiv@dividend+3,c
 21758  00C902  C978  F0B0         	movff	__fs,??__write_sectors+5
 21759  00C906  51B0               	movf	(??__write_sectors+5)& (0+255),w,b
 21760  00C908  6E05               	movwf	___lldiv@divisor,c
 21761  00C90A  6A06               	clrf	___lldiv@divisor+1,c
 21762  00C90C  6A07               	clrf	___lldiv@divisor+2,c
 21763  00C90E  6A08               	clrf	___lldiv@divisor+3,c
 21764  00C910  EC85  F026         	call	___lldiv	;wreg free
 21765  00C914  C001  F078         	movff	?___lldiv,fatfs_add_free_space@clusters
 21766  00C918  C002  F079         	movff	?___lldiv+1,fatfs_add_free_space@clusters+1
 21767  00C91C  C003  F07A         	movff	?___lldiv+2,fatfs_add_free_space@clusters+2
 21768  00C920  C004  F07B         	movff	?___lldiv+3,fatfs_add_free_space@clusters+3
 21769  00C924  EC02  F036         	call	_fatfs_add_free_space	;wreg free
 21770  00C928  5075               	movf	?_fatfs_add_free_space+1,w,c
 21771  00C92A  1074               	iorwf	?_fatfs_add_free_space,w,c
 21772  00C92C  E070               	bz	l10937
 21773                           
 21774                           ;fat_filelib.c: 876: Cluster = LastCluster;
 21775                           
 21776                           ; BSR set to: 0
 21777                           
 21778                           ;fat_filelib.c: 874: return 0;
 21779  00C92E  C0BC  F0D0         	movff	__write_sectors@LastCluster,__write_sectors@Cluster
 21780  00C932  C0BD  F0D1         	movff	__write_sectors@LastCluster+1,__write_sectors@Cluster+1
 21781  00C936  C0BE  F0D2         	movff	__write_sectors@LastCluster+2,__write_sectors@Cluster+2
 21782  00C93A  C0BF  F0D3         	movff	__write_sectors@LastCluster+3,__write_sectors@Cluster+3
 21783  00C93E                     l10927:
 21784                           
 21785                           ;fat_filelib.c: 877: }
 21786                           ;fat_filelib.c: 880: file->last_fat_lookup.CurrentCluster = Cluster;
 21787  00C93E  EE20 F035          	lfsr	2,53
 21788  00C942  0100               	movlb	0	; () banked
 21789  00C944  519E               	movf	__write_sectors@file& (0+255),w,b
 21790  00C946  26D9               	addwf	fsr2l,f,c
 21791  00C948  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21792  00C94A  22DA               	addwfc	fsr2h,f,c
 21793  00C94C  C0D0  FFDE         	movff	__write_sectors@Cluster,postinc2
 21794  00C950  C0D1  FFDE         	movff	__write_sectors@Cluster+1,postinc2
 21795  00C954  C0D2  FFDE         	movff	__write_sectors@Cluster+2,postinc2
 21796  00C958  C0D3  FFDE         	movff	__write_sectors@Cluster+3,postinc2
 21797                           
 21798                           ;fat_filelib.c: 881: file->last_fat_lookup.ClusterIdx = ClusterIdx;
 21799  00C95C  EE20 F031          	lfsr	2,49
 21800  00C960  519E               	movf	__write_sectors@file& (0+255),w,b
 21801  00C962  26D9               	addwf	fsr2l,f,c
 21802  00C964  519F               	movf	(__write_sectors@file+1)& (0+255),w,b
 21803  00C966  22DA               	addwfc	fsr2h,f,c
 21804  00C968  C0CC  FFDE         	movff	__write_sectors@ClusterIdx,postinc2
 21805  00C96C  C0CD  FFDE         	movff	__write_sectors@ClusterIdx+1,postinc2
 21806  00C970  C0CE  FFDE         	movff	__write_sectors@ClusterIdx+2,postinc2
 21807  00C974  C0CF  FFDE         	movff	__write_sectors@ClusterIdx+3,postinc2
 21808  00C978                     l10929:
 21809                           
 21810                           ; BSR set to: 0
 21811                           ;fat_filelib.c: 882: }
 21812                           ;fat_filelib.c: 885: lba = fatfs_lba_of_cluster(&_fs, Cluster) + SectorNumber;
 21813  00C978  0E09               	movlw	high __fs
 21814  00C97A  6E02               	movwf	fatfs_lba_of_cluster@fs+1,c
 21815  00C97C  0E78               	movlw	low __fs
 21816  00C97E  6E01               	movwf	fatfs_lba_of_cluster@fs,c
 21817  00C980  C0D0  F003         	movff	__write_sectors@Cluster,fatfs_lba_of_cluster@Cluster_Number
 21818  00C984  C0D1  F004         	movff	__write_sectors@Cluster+1,fatfs_lba_of_cluster@Cluster_Number+1
 21819  00C988  C0D2  F005         	movff	__write_sectors@Cluster+2,fatfs_lba_of_cluster@Cluster_Number+2
 21820  00C98C  C0D3  F006         	movff	__write_sectors@Cluster+3,fatfs_lba_of_cluster@Cluster_Number+3
 21821  00C990  EC4C  F03F         	call	_fatfs_lba_of_cluster	;wreg free
 21822  00C994  C001  F0AB         	movff	?_fatfs_lba_of_cluster,??__write_sectors
 21823  00C998  C002  F0AC         	movff	?_fatfs_lba_of_cluster+1,??__write_sectors+1
 21824  00C99C  C003  F0AD         	movff	?_fatfs_lba_of_cluster+2,??__write_sectors+2
 21825  00C9A0  C004  F0AE         	movff	?_fatfs_lba_of_cluster+3,??__write_sectors+3
 21826  00C9A4  0100               	movlb	0	; () banked
 21827  00C9A6  51C4               	movf	__write_sectors@SectorNumber& (0+255),w,b
 21828  00C9A8  25AB               	addwf	??__write_sectors& (0+255),w,b
 21829  00C9AA  6FB4               	movwf	__write_sectors@lba& (0+255),b
 21830  00C9AC  51C5               	movf	(__write_sectors@SectorNumber+1)& (0+255),w,b
 21831  00C9AE  21AC               	addwfc	(??__write_sectors+1)& (0+255),w,b
 21832  00C9B0  6FB5               	movwf	(__write_sectors@lba+1)& (0+255),b
 21833  00C9B2  51C6               	movf	(__write_sectors@SectorNumber+2)& (0+255),w,b
 21834  00C9B4  21AD               	addwfc	(??__write_sectors+2)& (0+255),w,b
 21835  00C9B6  6FB6               	movwf	(__write_sectors@lba+2)& (0+255),b
 21836  00C9B8  51C7               	movf	(__write_sectors@SectorNumber+3)& (0+255),w,b
 21837  00C9BA  21AE               	addwfc	(??__write_sectors+3)& (0+255),w,b
 21838  00C9BC  6FB7               	movwf	(__write_sectors@lba+3)& (0+255),b
 21839                           
 21840                           ; BSR set to: 0
 21841                           ;fat_filelib.c: 887: if (fatfs_sector_write(&_fs, lba, buf, count))
 21842  00C9BE  0E09               	movlw	high __fs
 21843  00C9C0  6E21               	movwf	fatfs_sector_write@fs+1,c
 21844  00C9C2  0E78               	movlw	low __fs
 21845  00C9C4  6E20               	movwf	fatfs_sector_write@fs,c
 21846  00C9C6  C0B4  F022         	movff	__write_sectors@lba,fatfs_sector_write@lba
 21847  00C9CA  C0B5  F023         	movff	__write_sectors@lba+1,fatfs_sector_write@lba+1
 21848  00C9CE  C0B6  F024         	movff	__write_sectors@lba+2,fatfs_sector_write@lba+2
 21849  00C9D2  C0B7  F025         	movff	__write_sectors@lba+3,fatfs_sector_write@lba+3
 21850  00C9D6  C0A6  F028         	movff	__write_sectors@buf+2,fatfs_sector_write@target+2
 21851  00C9DA  C0A5  F027         	movff	__write_sectors@buf+1,fatfs_sector_write@target+1
 21852  00C9DE  C0A4  F026         	movff	__write_sectors@buf,fatfs_sector_write@target
 21853  00C9E2  C0A7  F029         	movff	__write_sectors@count,fatfs_sector_write@count
 21854  00C9E6  C0A8  F02A         	movff	__write_sectors@count+1,fatfs_sector_write@count+1
 21855  00C9EA  C0A9  F02B         	movff	__write_sectors@count+2,fatfs_sector_write@count+2
 21856  00C9EE  C0AA  F02C         	movff	__write_sectors@count+3,fatfs_sector_write@count+3
 21857  00C9F2  EC0D  F024         	call	_fatfs_sector_write	;wreg free
 21858  00C9F6  5021               	movf	?_fatfs_sector_write+1,w,c
 21859  00C9F8  1020               	iorwf	?_fatfs_sector_write,w,c
 21860  00C9FA  E009               	bz	l10937
 21861                           
 21862                           ;fat_filelib.c: 888: return count;
 21863  00C9FC  C0A7  F09E         	movff	__write_sectors@count,?__write_sectors
 21864  00CA00  C0A8  F09F         	movff	__write_sectors@count+1,?__write_sectors+1
 21865  00CA04  C0A9  F0A0         	movff	__write_sectors@count+2,?__write_sectors+2
 21866  00CA08  C0AA  F0A1         	movff	__write_sectors@count+3,?__write_sectors+3
 21867  00CA0C  D006               	goto	l595
 21868  00CA0E                     l10937:
 21869                           
 21870                           ;fat_filelib.c: 889: else
 21871                           ;fat_filelib.c: 890: return 0;
 21872  00CA0E  0E00               	movlw	0
 21873  00CA10  0100               	movlb	0	; () banked
 21874  00CA12  6F9E               	movwf	?__write_sectors& (0+255),b
 21875  00CA14  6F9F               	movwf	(?__write_sectors+1)& (0+255),b
 21876  00CA16  6FA0               	movwf	(?__write_sectors+2)& (0+255),b
 21877  00CA18  6FA1               	movwf	(?__write_sectors+3)& (0+255),b
 21878  00CA1A                     l595:
 21879  00CA1A  0012               	return	
 21880  00CA1C                     __end_of__write_sectors:
 21881                           	opt stack 0
 21882                           tosu	equ	0xFFF
 21883                           tosh	equ	0xFFE
 21884                           tosl	equ	0xFFD
 21885                           pclath	equ	0xFFA
 21886                           tblptru	equ	0xFF8
 21887                           tblptrh	equ	0xFF7
 21888                           tblptrl	equ	0xFF6
 21889                           tablat	equ	0xFF5
 21890                           prodh	equ	0xFF4
 21891                           prodl	equ	0xFF3
 21892                           indf0	equ	0xFEF
 21893                           postinc0	equ	0xFEE
 21894                           fsr0h	equ	0xFEA
 21895                           fsr0l	equ	0xFE9
 21896                           wreg	equ	0xFE8
 21897                           indf1	equ	0xFE7
 21898                           postinc1	equ	0xFE6
 21899                           postdec1	equ	0xFE5
 21900                           fsr1h	equ	0xFE2
 21901                           fsr1l	equ	0xFE1
 21902                           indf2	equ	0xFDF
 21903                           postinc2	equ	0xFDE
 21904                           postdec2	equ	0xFDD
 21905                           fsr2h	equ	0xFDA
 21906                           fsr2l	equ	0xFD9
 21907                           status	equ	0xFD8
 21908                           
 21909 ;; *************** function _fatfs_sector_write *****************
 21910 ;; Defined at:
 21911 ;;		line 211 in file "fat_access.c"
 21912 ;; Parameters:    Size  Location     Type
 21913 ;;  fs              2   31[COMRAM] PTR struct fatfs
 21914 ;;		 -> _fs(1095), 
 21915 ;;  lba             4   33[COMRAM] unsigned long 
 21916 ;;  target          3   37[COMRAM] PTR unsigned char 
 21917 ;;		 -> w(1), str_0(26), data(1), fl_fputc@data(1), 
 21918 ;;		 -> ROM(65535), RAM(3967), NULL(0), 
 21919 ;;  count           4   40[COMRAM] unsigned long 
 21920 ;; Auto vars:     Size  Location     Type
 21921 ;;		None
 21922 ;; Return value:  Size  Location     Type
 21923 ;;                  2   31[COMRAM] int 
 21924 ;; Registers used:
 21925 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 21926 ;; Tracked objects:
 21927 ;;		On entry : 0/0
 21928 ;;		On exit  : 0/0
 21929 ;;		Unchanged: 0/0
 21930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21931 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21933 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21934 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21935 ;;Total ram usage:       15 bytes
 21936 ;; Hardware stack levels used:    1
 21937 ;; Hardware stack levels required when called:    3
 21938 ;; This function calls:
 21939 ;;		_media_write
 21940 ;; This function is called by:
 21941 ;;		__write_sectors
 21942 ;; This function uses a non-reentrant model
 21943 ;;
 21944                           
 21945                           	psect	text56
 21946  00481A                     __ptext56:
 21947                           	opt stack 0
 21948  00481A                     _fatfs_sector_write:
 21949                           	opt stack 21
 21950                           
 21951                           ;fat_access.c: 213: return fs->disk_io.write_media(lba, target, count);
 21952                           
 21953                           ;incstack = 0
 21954  00481A  C022  F009         	movff	fatfs_sector_write@lba,media_write@sector
 21955  00481E  C023  F00A         	movff	fatfs_sector_write@lba+1,media_write@sector+1
 21956  004822  C024  F00B         	movff	fatfs_sector_write@lba+2,media_write@sector+2
 21957  004826  C025  F00C         	movff	fatfs_sector_write@lba+3,media_write@sector+3
 21958  00482A  C028  F00F         	movff	fatfs_sector_write@target+2,media_write@buffer+2
 21959  00482E  C027  F00E         	movff	fatfs_sector_write@target+1,media_write@buffer+1
 21960  004832  C026  F00D         	movff	fatfs_sector_write@target,media_write@buffer
 21961  004836  C029  F010         	movff	fatfs_sector_write@count,media_write@sector_count
 21962  00483A  C02A  F011         	movff	fatfs_sector_write@count+1,media_write@sector_count+1
 21963  00483E  C02B  F012         	movff	fatfs_sector_write@count+2,media_write@sector_count+2
 21964  004842  C02C  F013         	movff	fatfs_sector_write@count+3,media_write@sector_count+3
 21965  004846  EE20 F02B          	lfsr	2,43
 21966  00484A  5020               	movf	fatfs_sector_write@fs,w,c
 21967  00484C  26D9               	addwf	fsr2l,f,c
 21968  00484E  5021               	movf	fatfs_sector_write@fs+1,w,c
 21969  004850  22DA               	addwfc	fsr2h,f,c
 21970  004852  CFDE F02D          	movff	postinc2,??_fatfs_sector_write
 21971  004856  CFDD F02E          	movff	postdec2,??_fatfs_sector_write+1
 21972  00485A  D801               	call	u10478
 21973  00485C  D009               	goto	u10479
 21974  00485E                     u10478:
 21975  00485E  0005               	push	
 21976  004860  6EFA               	movwf	pclath,c
 21977  004862  502D               	movf	??_fatfs_sector_write,w,c
 21978  004864  6EFD               	movwf	tosl,c
 21979  004866  502E               	movf	??_fatfs_sector_write+1,w,c
 21980  004868  6EFE               	movwf	tosh,c
 21981  00486A  6AFF               	clrf	tosu,c
 21982  00486C  50FA               	movf	pclath,w,c
 21983  00486E  0012               	return		;indir
 21984  004870                     u10479:
 21985  004870  C009  F020         	movff	?_media_write,?_fatfs_sector_write
 21986  004874  C00A  F021         	movff	?_media_write+1,?_fatfs_sector_write+1
 21987  004878  0012               	return	
 21988  00487A                     __end_of_fatfs_sector_write:
 21989                           	opt stack 0
 21990                           tosu	equ	0xFFF
 21991                           tosh	equ	0xFFE
 21992                           tosl	equ	0xFFD
 21993                           pclath	equ	0xFFA
 21994                           tblptru	equ	0xFF8
 21995                           tblptrh	equ	0xFF7
 21996                           tblptrl	equ	0xFF6
 21997                           tablat	equ	0xFF5
 21998                           prodh	equ	0xFF4
 21999                           prodl	equ	0xFF3
 22000                           indf0	equ	0xFEF
 22001                           postinc0	equ	0xFEE
 22002                           fsr0h	equ	0xFEA
 22003                           fsr0l	equ	0xFE9
 22004                           wreg	equ	0xFE8
 22005                           indf1	equ	0xFE7
 22006                           postinc1	equ	0xFE6
 22007                           postdec1	equ	0xFE5
 22008                           fsr1h	equ	0xFE2
 22009                           fsr1l	equ	0xFE1
 22010                           indf2	equ	0xFDF
 22011                           postinc2	equ	0xFDE
 22012                           postdec2	equ	0xFDD
 22013                           fsr2h	equ	0xFDA
 22014                           fsr2l	equ	0xFD9
 22015                           status	equ	0xFD8
 22016                           
 22017 ;; *************** function _fatfs_cache_set_next_cluster *****************
 22018 ;; Defined at:
 22019 ;;		line 76 in file "fat_cache.c"
 22020 ;; Parameters:    Size  Location     Type
 22021 ;;  fs              2    0[COMRAM] PTR struct fatfs
 22022 ;;		 -> _fs(1095), 
 22023 ;;  file            2    2[COMRAM] PTR struct sFL_FILE
 22024 ;;		 -> RAM(3967), NULL(0), 
 22025 ;;  clusterIdx      4    4[COMRAM] unsigned long 
 22026 ;;  nextCluster     4    8[COMRAM] unsigned long 
 22027 ;; Auto vars:     Size  Location     Type
 22028 ;;		None
 22029 ;; Return value:  Size  Location     Type
 22030 ;;                  2    0[COMRAM] int 
 22031 ;; Registers used:
 22032 ;;		None
 22033 ;; Tracked objects:
 22034 ;;		On entry : 0/0
 22035 ;;		On exit  : 0/0
 22036 ;;		Unchanged: 0/0
 22037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22038 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22041 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22042 ;;Total ram usage:       12 bytes
 22043 ;; Hardware stack levels used:    1
 22044 ;; This function calls:
 22045 ;;		Nothing
 22046 ;; This function is called by:
 22047 ;;		__read_sectors
 22048 ;;		__write_sectors
 22049 ;; This function uses a non-reentrant model
 22050 ;;
 22051                           
 22052                           	psect	text57
 22053  003E42                     __ptext57:
 22054                           	opt stack 0
 22055  003E42                     _fatfs_cache_set_next_cluster:
 22056                           	opt stack 24
 22057                           
 22058                           ;fat_cache.c: 90: return 1;
 22059                           ;	Return value of _fatfs_cache_set_next_cluster is never used
 22060                           
 22061                           ;incstack = 0
 22062  003E42  0012               	return	
 22063  003E44                     __end_of_fatfs_cache_set_next_cluster:
 22064                           	opt stack 0
 22065                           tosu	equ	0xFFF
 22066                           tosh	equ	0xFFE
 22067                           tosl	equ	0xFFD
 22068                           pclath	equ	0xFFA
 22069                           tblptru	equ	0xFF8
 22070                           tblptrh	equ	0xFF7
 22071                           tblptrl	equ	0xFF6
 22072                           tablat	equ	0xFF5
 22073                           prodh	equ	0xFF4
 22074                           prodl	equ	0xFF3
 22075                           indf0	equ	0xFEF
 22076                           postinc0	equ	0xFEE
 22077                           fsr0h	equ	0xFEA
 22078                           fsr0l	equ	0xFE9
 22079                           wreg	equ	0xFE8
 22080                           indf1	equ	0xFE7
 22081                           postinc1	equ	0xFE6
 22082                           postdec1	equ	0xFE5
 22083                           fsr1h	equ	0xFE2
 22084                           fsr1l	equ	0xFE1
 22085                           indf2	equ	0xFDF
 22086                           postinc2	equ	0xFDE
 22087                           postdec2	equ	0xFDD
 22088                           fsr2h	equ	0xFDA
 22089                           fsr2l	equ	0xFD9
 22090                           status	equ	0xFD8
 22091                           
 22092 ;; *************** function _fatfs_cache_get_next_cluster *****************
 22093 ;; Defined at:
 22094 ;;		line 59 in file "fat_cache.c"
 22095 ;; Parameters:    Size  Location     Type
 22096 ;;  fs              2    0[COMRAM] PTR struct fatfs
 22097 ;;		 -> _fs(1095), 
 22098 ;;  file            2    2[COMRAM] PTR struct sFL_FILE
 22099 ;;		 -> RAM(3967), NULL(0), 
 22100 ;;  clusterIdx      4    4[COMRAM] unsigned long 
 22101 ;;  pNextCluster    2    8[COMRAM] PTR unsigned long 
 22102 ;;		 -> _write_sectors@nextCluster(4), _read_sectors@nextCluster(4), 
 22103 ;; Auto vars:     Size  Location     Type
 22104 ;;		None
 22105 ;; Return value:  Size  Location     Type
 22106 ;;                  2    0[COMRAM] int 
 22107 ;; Registers used:
 22108 ;;		wreg, status,2
 22109 ;; Tracked objects:
 22110 ;;		On entry : 0/0
 22111 ;;		On exit  : 0/0
 22112 ;;		Unchanged: 0/0
 22113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22114 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22117 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22118 ;;Total ram usage:       10 bytes
 22119 ;; Hardware stack levels used:    1
 22120 ;; This function calls:
 22121 ;;		Nothing
 22122 ;; This function is called by:
 22123 ;;		__read_sectors
 22124 ;;		__write_sectors
 22125 ;; This function uses a non-reentrant model
 22126 ;;
 22127                           
 22128                           	psect	text58
 22129  003E50                     __ptext58:
 22130                           	opt stack 0
 22131  003E50                     _fatfs_cache_get_next_cluster:
 22132                           	opt stack 24
 22133                           
 22134                           ;fat_cache.c: 71: return 0;
 22135                           
 22136                           ;incstack = 0
 22137  003E50  0E00               	movlw	0
 22138  003E52  6E02               	movwf	?_fatfs_cache_get_next_cluster+1,c
 22139  003E54  6E01               	movwf	?_fatfs_cache_get_next_cluster,c
 22140  003E56  0C00               	retlw	0
 22141  003E58                     __end_of_fatfs_cache_get_next_cluster:
 22142                           	opt stack 0
 22143                           tosu	equ	0xFFF
 22144                           tosh	equ	0xFFE
 22145                           tosl	equ	0xFFD
 22146                           pclath	equ	0xFFA
 22147                           tblptru	equ	0xFF8
 22148                           tblptrh	equ	0xFF7
 22149                           tblptrl	equ	0xFF6
 22150                           tablat	equ	0xFF5
 22151                           prodh	equ	0xFF4
 22152                           prodl	equ	0xFF3
 22153                           indf0	equ	0xFEF
 22154                           postinc0	equ	0xFEE
 22155                           fsr0h	equ	0xFEA
 22156                           fsr0l	equ	0xFE9
 22157                           wreg	equ	0xFE8
 22158                           indf1	equ	0xFE7
 22159                           postinc1	equ	0xFE6
 22160                           postdec1	equ	0xFE5
 22161                           fsr1h	equ	0xFE2
 22162                           fsr1l	equ	0xFE1
 22163                           indf2	equ	0xFDF
 22164                           postinc2	equ	0xFDE
 22165                           postdec2	equ	0xFDD
 22166                           fsr2h	equ	0xFDA
 22167                           fsr2l	equ	0xFD9
 22168                           status	equ	0xFD8
 22169                           
 22170 ;; *************** function _fatfs_update_file_length *****************
 22171 ;; Defined at:
 22172 ;;		line 615 in file "fat_access.c"
 22173 ;; Parameters:    Size  Location     Type
 22174 ;;  fs              2   44[BANK0 ] PTR struct fatfs
 22175 ;;		 -> _fs(1095), 
 22176 ;;  Cluster         4   46[BANK0 ] unsigned long 
 22177 ;;  shortname       2   50[BANK0 ] PTR unsigned char 
 22178 ;;		 -> RAM(3967), NULL(0), 
 22179 ;;  fileLength      4   52[BANK0 ] unsigned long 
 22180 ;; Auto vars:     Size  Location     Type
 22181 ;;  directoryEnt    2   65[BANK0 ] PTR struct fat_dir_entry
 22182 ;;		 -> _fs.currentsector.sector(512), 
 22183 ;;  recordoffset    2   62[BANK0 ] unsigned short 
 22184 ;;  x               2   60[BANK0 ] int 
 22185 ;;  item            1   64[BANK0 ] unsigned char 
 22186 ;; Return value:  Size  Location     Type
 22187 ;;                  2   44[BANK0 ] int 
 22188 ;; Registers used:
 22189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22190 ;; Tracked objects:
 22191 ;;		On entry : 0/0
 22192 ;;		On exit  : 0/0
 22193 ;;		Unchanged: 0/0
 22194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22195 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22196 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22197 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22198 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22199 ;;Total ram usage:       23 bytes
 22200 ;; Hardware stack levels used:    1
 22201 ;; Hardware stack levels required when called:    7
 22202 ;; This function calls:
 22203 ;;		_fatfs_entry_lfn_invalid
 22204 ;;		_fatfs_entry_lfn_text
 22205 ;;		_fatfs_entry_sfn_only
 22206 ;;		_fatfs_sector_reader
 22207 ;;		_media_write
 22208 ;;		_memcpy
 22209 ;;		_strncmp
 22210 ;; This function is called by:
 22211 ;;		_fl_fclose
 22212 ;; This function uses a non-reentrant model
 22213 ;;
 22214                           
 22215                           	psect	text59
 22216  00756A                     __ptext59:
 22217                           	opt stack 0
 22218  00756A                     _fatfs_update_file_length:
 22219                           	opt stack 19
 22220                           
 22221                           ;fat_access.c: 617: uint8 item=0;
 22222                           
 22223                           ;incstack = 0
 22224  00756A  0100               	movlb	0	; () banked
 22225  00756C  6BC0               	clrf	fatfs_update_file_length@item& (0+255),b
 22226                           
 22227                           ;fat_access.c: 618: uint16 recordoffset = 0;
 22228  00756E  6BBF               	clrf	(fatfs_update_file_length@recordoffset+1)& (0+255),b
 22229  007570  6BBE               	clrf	fatfs_update_file_length@recordoffset& (0+255),b
 22230                           
 22231                           ;fat_access.c: 619: int x=0;
 22232  007572  6BBD               	clrf	(fatfs_update_file_length@x+1)& (0+255),b
 22233  007574  6BBC               	clrf	fatfs_update_file_length@x& (0+255),b
 22234                           
 22235                           ; BSR set to: 0
 22236                           ;fat_access.c: 620: struct fat_dir_entry *directoryEntry;
 22237                           ;fat_access.c: 623: if (!fs->disk_io.write_media)
 22238  007576  EE20 F02B          	lfsr	2,43
 22239  00757A  51AC               	movf	fatfs_update_file_length@fs& (0+255),w,b
 22240  00757C  26D9               	addwf	fsr2l,f,c
 22241  00757E  51AD               	movf	(fatfs_update_file_length@fs+1)& (0+255),w,b
 22242  007580  22DA               	addwfc	fsr2h,f,c
 22243  007582  50DE               	movf	postinc2,w,c
 22244  007584  10DD               	iorwf	postdec2,w,c
 22245  007586  E101 D0D2          	bz	l179
 22246  00758A                     l11039:
 22247                           
 22248                           ; BSR set to: 0
 22249                           ;fat_access.c: 628: {
 22250                           ;fat_access.c: 630: if (fatfs_sector_reader(fs, Cluster, x++, 0))
 22251  00758A  C0AD  F081         	movff	fatfs_update_file_length@fs+1,fatfs_sector_reader@fs+1
 22252  00758E  C0AC  F080         	movff	fatfs_update_file_length@fs,fatfs_sector_reader@fs
 22253  007592  C0AE  F082         	movff	fatfs_update_file_length@Cluster,fatfs_sector_reader@start_cluster
 22254  007596  C0AF  F083         	movff	fatfs_update_file_length@Cluster+1,fatfs_sector_reader@start_cluster+1
 22255  00759A  C0B0  F084         	movff	fatfs_update_file_length@Cluster+2,fatfs_sector_reader@start_cluster+2
 22256  00759E  C0B1  F085         	movff	fatfs_update_file_length@Cluster+3,fatfs_sector_reader@start_cluster+3
 22257  0075A2  0100               	movlb	0	; () banked
 22258  0075A4  51BC               	movf	fatfs_update_file_length@x& (0+255),w,b
 22259  0075A6  6FB8               	movwf	??_fatfs_update_file_length& (0+255),b
 22260  0075A8  51BD               	movf	(fatfs_update_file_length@x+1)& (0+255),w,b
 22261  0075AA  6FB9               	movwf	(??_fatfs_update_file_length+1)& (0+255),b
 22262  0075AC  4BBC               	infsnz	fatfs_update_file_length@x& (0+255),f,b
 22263  0075AE  2BBD               	incf	(fatfs_update_file_length@x+1)& (0+255),f,b
 22264  0075B0  C0B8  F086         	movff	??_fatfs_update_file_length,fatfs_sector_reader@offset
 22265  0075B4  C0B9  F087         	movff	??_fatfs_update_file_length+1,fatfs_sector_reader@offset+1
 22266  0075B8  0E00               	movlw	0
 22267  0075BA  BF87               	btfsc	(fatfs_sector_reader@offset+1)& (0+255),7,b
 22268  0075BC  0EFF               	movlw	-1
 22269  0075BE  6F88               	movwf	(fatfs_sector_reader@offset+2)& (0+255),b
 22270  0075C0  6F89               	movwf	(fatfs_sector_reader@offset+3)& (0+255),b
 22271  0075C2  0E00               	movlw	0
 22272  0075C4  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
 22273  0075C6  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
 22274  0075C8  ECD6  F052         	call	_fatfs_sector_reader	;wreg free
 22275  0075CC  0100               	movlb	0	; () banked
 22276  0075CE  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
 22277  0075D0  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
 22278  0075D2  E101 D0AC          	bz	l179
 22279                           
 22280                           ; BSR set to: 0
 22281                           ;fat_access.c: 631: {
 22282                           ;fat_access.c: 633: for (item = 0; item < (512 / 32); item++)
 22283  0075D6  6BC0               	clrf	fatfs_update_file_length@item& (0+255),b
 22284                           
 22285                           ; BSR set to: 0
 22286  0075D8  0E0F               	movlw	15
 22287  0075DA  65C0               	cpfsgt	fatfs_update_file_length@item& (0+255),b
 22288  0075DC  D001               	goto	l11047
 22289  0075DE  D7D5               	goto	l11039
 22290  0075E0                     l11047:
 22291                           
 22292                           ; BSR set to: 0
 22293                           ;fat_access.c: 634: {
 22294                           ;fat_access.c: 636: recordoffset = 32 * item;
 22295  0075E0  0100               	movlb	0	; () banked
 22296  0075E2  51C0               	movf	fatfs_update_file_length@item& (0+255),w,b
 22297  0075E4  0D20               	mullw	32
 22298  0075E6  CFF3 F0BE          	movff	prodl,fatfs_update_file_length@recordoffset
 22299  0075EA  CFF4 F0BF          	movff	prodh,fatfs_update_file_length@recordoffset+1
 22300                           
 22301                           ; BSR set to: 0
 22302                           ;fat_access.c: 639: directoryEntry = (struct fat_dir_entry*)(fs->currentsector.sector+re
      +                          cordoffset);
 22303  0075EE  C0AC  F0B8         	movff	fatfs_update_file_length@fs,??_fatfs_update_file_length
 22304  0075F2  C0AD  F0B9         	movff	fatfs_update_file_length@fs+1,??_fatfs_update_file_length+1
 22305  0075F6  51BE               	movf	fatfs_update_file_length@recordoffset& (0+255),w,b
 22306  0075F8  27B8               	addwf	??_fatfs_update_file_length& (0+255),f,b
 22307  0075FA  51BF               	movf	(fatfs_update_file_length@recordoffset+1)& (0+255),w,b
 22308  0075FC  23B9               	addwfc	(??_fatfs_update_file_length+1)& (0+255),f,b
 22309  0075FE  0E31               	movlw	49
 22310  007600  25B8               	addwf	??_fatfs_update_file_length& (0+255),w,b
 22311  007602  6FC1               	movwf	fatfs_update_file_length@directoryEntry& (0+255),b
 22312  007604  0E00               	movlw	0
 22313  007606  21B9               	addwfc	(??_fatfs_update_file_length+1)& (0+255),w,b
 22314  007608  6FC2               	movwf	(fatfs_update_file_length@directoryEntry+1)& (0+255),b
 22315                           
 22316                           ; BSR set to: 0
 22317                           ;fat_access.c: 643: if (fatfs_entry_lfn_text(directoryEntry) )
 22318  00760A  C0C2  F002         	movff	fatfs_update_file_length@directoryEntry+1,fatfs_entry_lfn_text@entry+1
 22319  00760E  C0C1  F001         	movff	fatfs_update_file_length@directoryEntry,fatfs_entry_lfn_text@entry
 22320  007612  ECFA  F01F         	call	_fatfs_entry_lfn_text	;wreg free
 22321  007616  5002               	movf	?_fatfs_entry_lfn_text+1,w,c
 22322  007618  1001               	iorwf	?_fatfs_entry_lfn_text,w,c
 22323  00761A  E001 D082          	bnz	l11071
 22324                           
 22325                           ;fat_access.c: 647: else if (fatfs_entry_lfn_invalid(directoryEntry) )
 22326                           
 22327                           ;fat_access.c: 644: ;
 22328  00761E  C0C2  F002         	movff	fatfs_update_file_length@directoryEntry+1,fatfs_entry_lfn_invalid@entry+1
 22329  007622  0100               	movlb	0	; () banked
 22330  007624  C0C1  F001         	movff	fatfs_update_file_length@directoryEntry,fatfs_entry_lfn_invalid@entry
 22331  007628  ECA4  F022         	call	_fatfs_entry_lfn_invalid	;wreg free
 22332  00762C  5002               	movf	?_fatfs_entry_lfn_invalid+1,w,c
 22333  00762E  1001               	iorwf	?_fatfs_entry_lfn_invalid,w,c
 22334  007630  E178               	bnz	l11071
 22335                           
 22336                           ;fat_access.c: 651: else
 22337                           ;fat_access.c: 653: if (fatfs_entry_sfn_only(directoryEntry) )
 22338                           
 22339                           ;fat_access.c: 648: ;
 22340  007632  C0C2  F002         	movff	fatfs_update_file_length@directoryEntry+1,fatfs_entry_sfn_only@entry+1
 22341  007636  0100               	movlb	0	; () banked
 22342  007638  C0C1  F001         	movff	fatfs_update_file_length@directoryEntry,fatfs_entry_sfn_only@entry
 22343  00763C  ECD0  F024         	call	_fatfs_entry_sfn_only	;wreg free
 22344  007640  5002               	movf	?_fatfs_entry_sfn_only+1,w,c
 22345  007642  1001               	iorwf	?_fatfs_entry_sfn_only,w,c
 22346  007644  E06E               	bz	l11071
 22347                           
 22348                           ;fat_access.c: 654: {
 22349                           ;fat_access.c: 655: if (strncmp((const char*)directoryEntry->Name, shortname, 11)==0)
 22350  007646  C0C2  F002         	movff	fatfs_update_file_length@directoryEntry+1,strncmp@s1+1
 22351  00764A  C0C1  F001         	movff	fatfs_update_file_length@directoryEntry,strncmp@s1
 22352  00764E  C0B3  F004         	movff	fatfs_update_file_length@shortname+1,strncmp@s2+1
 22353  007652  0100               	movlb	0	; () banked
 22354  007654  C0B2  F003         	movff	fatfs_update_file_length@shortname,strncmp@s2
 22355  007658  6A06               	clrf	strncmp@len+1,c
 22356  00765A  0E0B               	movlw	11
 22357  00765C  6E05               	movwf	strncmp@len,c
 22358  00765E  EC11  F026         	call	_strncmp	;wreg free
 22359  007662  5002               	movf	?_strncmp+1,w,c
 22360  007664  1001               	iorwf	?_strncmp,w,c
 22361  007666  E15D               	bnz	l11071
 22362                           
 22363                           ;fat_access.c: 656: {
 22364                           ;fat_access.c: 657: directoryEntry->FileSize = (fileLength);
 22365  007668  EE20 F01C          	lfsr	2,28
 22366  00766C  0100               	movlb	0	; () banked
 22367  00766E  51C1               	movf	fatfs_update_file_length@directoryEntry& (0+255),w,b
 22368  007670  26D9               	addwf	fsr2l,f,c
 22369  007672  51C2               	movf	(fatfs_update_file_length@directoryEntry+1)& (0+255),w,b
 22370  007674  22DA               	addwfc	fsr2h,f,c
 22371  007676  C0B4  FFDE         	movff	fatfs_update_file_length@fileLength,postinc2
 22372  00767A  C0B5  FFDE         	movff	fatfs_update_file_length@fileLength+1,postinc2
 22373  00767E  C0B6  FFDE         	movff	fatfs_update_file_length@fileLength+2,postinc2
 22374  007682  C0B7  FFDE         	movff	fatfs_update_file_length@fileLength+3,postinc2
 22375                           
 22376                           ; BSR set to: 0
 22377                           ;fat_access.c: 665: memcpy((uint8*)(fs->currentsector.sector+recordoffset), (uint8*)dire
      +                          ctoryEntry, sizeof(struct fat_dir_entry));
 22378  007686  C0AC  F0B8         	movff	fatfs_update_file_length@fs,??_fatfs_update_file_length
 22379  00768A  C0AD  F0B9         	movff	fatfs_update_file_length@fs+1,??_fatfs_update_file_length+1
 22380  00768E  51BE               	movf	fatfs_update_file_length@recordoffset& (0+255),w,b
 22381  007690  27B8               	addwf	??_fatfs_update_file_length& (0+255),f,b
 22382  007692  51BF               	movf	(fatfs_update_file_length@recordoffset+1)& (0+255),w,b
 22383  007694  23B9               	addwfc	(??_fatfs_update_file_length+1)& (0+255),f,b
 22384  007696  0E31               	movlw	49
 22385  007698  25B8               	addwf	??_fatfs_update_file_length& (0+255),w,b
 22386  00769A  6E01               	movwf	memcpy@d1,c
 22387  00769C  0E00               	movlw	0
 22388  00769E  21B9               	addwfc	(??_fatfs_update_file_length+1)& (0+255),w,b
 22389  0076A0  6E02               	movwf	memcpy@d1+1,c
 22390  0076A2  0E20               	movlw	32
 22391  0076A4  6E05               	movwf	memcpy@s1+2,c
 22392  0076A6  C0C2  F004         	movff	fatfs_update_file_length@directoryEntry+1,memcpy@s1+1
 22393  0076AA  C0C1  F003         	movff	fatfs_update_file_length@directoryEntry,memcpy@s1
 22394  0076AE  6A07               	clrf	memcpy@n+1,c
 22395  0076B0  6E06               	movwf	memcpy@n,c
 22396  0076B2  ECAE  F023         	call	_memcpy	;wreg free
 22397                           
 22398                           ;fat_access.c: 668: return fs->disk_io.write_media(fs->currentsector.address, fs->curren
      +                          tsector.sector, 1);
 22399                           ;	Return value of _fatfs_update_file_length is never used
 22400  0076B6  EE22 F031          	lfsr	2,561
 22401  0076BA  0100               	movlb	0	; () banked
 22402  0076BC  51AC               	movf	fatfs_update_file_length@fs& (0+255),w,b
 22403  0076BE  26D9               	addwf	fsr2l,f,c
 22404  0076C0  51AD               	movf	(fatfs_update_file_length@fs+1)& (0+255),w,b
 22405  0076C2  22DA               	addwfc	fsr2h,f,c
 22406  0076C4  CFDE F009          	movff	postinc2,media_write@sector
 22407  0076C8  CFDE F00A          	movff	postinc2,media_write@sector+1
 22408  0076CC  CFDE F00B          	movff	postinc2,media_write@sector+2
 22409  0076D0  CFDE F00C          	movff	postinc2,media_write@sector+3
 22410  0076D4  0E31               	movlw	49
 22411  0076D6  25AC               	addwf	fatfs_update_file_length@fs& (0+255),w,b
 22412  0076D8  6FB8               	movwf	??_fatfs_update_file_length& (0+255),b
 22413  0076DA  0E00               	movlw	0
 22414  0076DC  21AD               	addwfc	(fatfs_update_file_length@fs+1)& (0+255),w,b
 22415  0076DE  6FB9               	movwf	(??_fatfs_update_file_length+1)& (0+255),b
 22416  0076E0  0E20               	movlw	32
 22417  0076E2  6E0F               	movwf	media_write@buffer+2,c
 22418  0076E4  C0B9  F00E         	movff	??_fatfs_update_file_length+1,media_write@buffer+1
 22419  0076E8  C0B8  F00D         	movff	??_fatfs_update_file_length,media_write@buffer
 22420  0076EC  0E01               	movlw	1
 22421  0076EE  6E10               	movwf	media_write@sector_count,c
 22422  0076F0  6A11               	clrf	media_write@sector_count+1,c
 22423  0076F2  6A12               	clrf	media_write@sector_count+2,c
 22424  0076F4  6A13               	clrf	media_write@sector_count+3,c
 22425  0076F6  EE20 F02B          	lfsr	2,43
 22426  0076FA  51AC               	movf	fatfs_update_file_length@fs& (0+255),w,b
 22427  0076FC  26D9               	addwf	fsr2l,f,c
 22428  0076FE  51AD               	movf	(fatfs_update_file_length@fs+1)& (0+255),w,b
 22429  007700  22DA               	addwfc	fsr2h,f,c
 22430  007702  CFDE F0BA          	movff	postinc2,??_fatfs_update_file_length+2
 22431  007706  CFDD F0BB          	movff	postdec2,??_fatfs_update_file_length+3
 22432  00770A  D801               	call	u12828
 22433  00770C  D010               	goto	l179
 22434  00770E                     u12828:
 22435  00770E  0005               	push	
 22436  007710  6EFA               	movwf	pclath,c
 22437  007712  0100               	movlb	0	; () banked
 22438  007714  51BA               	movf	(??_fatfs_update_file_length+2)& (0+255),w,b
 22439  007716  6EFD               	movwf	tosl,c
 22440  007718  51BB               	movf	(??_fatfs_update_file_length+3)& (0+255),w,b
 22441  00771A  6EFE               	movwf	tosh,c
 22442  00771C  6AFF               	clrf	tosu,c
 22443  00771E  50FA               	movf	pclath,w,c
 22444  007720  0012               	return		;indir
 22445  007722                     l11071:
 22446  007722  0100               	movlb	0	; () banked
 22447  007724  2BC0               	incf	fatfs_update_file_length@item& (0+255),f,b
 22448                           
 22449                           ; BSR set to: 0
 22450  007726  0E0F               	movlw	15
 22451  007728  65C0               	cpfsgt	fatfs_update_file_length@item& (0+255),b
 22452  00772A  D75A               	goto	l11047
 22453  00772C  D72E               	goto	l11039
 22454  00772E                     l179:
 22455  00772E  0012               	return	
 22456  007730                     __end_of_fatfs_update_file_length:
 22457                           	opt stack 0
 22458                           tosu	equ	0xFFF
 22459                           tosh	equ	0xFFE
 22460                           tosl	equ	0xFFD
 22461                           pclath	equ	0xFFA
 22462                           tblptru	equ	0xFF8
 22463                           tblptrh	equ	0xFF7
 22464                           tblptrl	equ	0xFF6
 22465                           tablat	equ	0xFF5
 22466                           prodh	equ	0xFF4
 22467                           prodl	equ	0xFF3
 22468                           indf0	equ	0xFEF
 22469                           postinc0	equ	0xFEE
 22470                           fsr0h	equ	0xFEA
 22471                           fsr0l	equ	0xFE9
 22472                           wreg	equ	0xFE8
 22473                           indf1	equ	0xFE7
 22474                           postinc1	equ	0xFE6
 22475                           postdec1	equ	0xFE5
 22476                           fsr1h	equ	0xFE2
 22477                           fsr1l	equ	0xFE1
 22478                           indf2	equ	0xFDF
 22479                           postinc2	equ	0xFDE
 22480                           postdec2	equ	0xFDD
 22481                           fsr2h	equ	0xFDA
 22482                           fsr2l	equ	0xFD9
 22483                           status	equ	0xFD8
 22484                           
 22485 ;; *************** function _Write *****************
 22486 ;; Defined at:
 22487 ;;		line 36 in file "uart.c"
 22488 ;; Parameters:    Size  Location     Type
 22489 ;;  data            1    wreg     unsigned char 
 22490 ;; Auto vars:     Size  Location     Type
 22491 ;;  data            1    1[COMRAM] unsigned char 
 22492 ;; Return value:  Size  Location     Type
 22493 ;;		None               void
 22494 ;; Registers used:
 22495 ;;		wreg, status,2, status,0, cstack
 22496 ;; Tracked objects:
 22497 ;;		On entry : 0/0
 22498 ;;		On exit  : 0/0
 22499 ;;		Unchanged: 0/0
 22500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22505 ;;Total ram usage:        1 bytes
 22506 ;; Hardware stack levels used:    1
 22507 ;; Hardware stack levels required when called:    1
 22508 ;; This function calls:
 22509 ;;		_WriteUSART
 22510 ;; This function is called by:
 22511 ;;		_Draw_Line
 22512 ;;		_File_write
 22513 ;;		_File_append
 22514 ;;		_File_read
 22515 ;;		_putch
 22516 ;;		_File_read_
 22517 ;;		_Read_string
 22518 ;; This function uses a non-reentrant model
 22519 ;;
 22520                           
 22521                           	psect	text60
 22522  00401E                     __ptext60:
 22523                           	opt stack 0
 22524  00401E                     _Write:
 22525                           	opt stack 26
 22526                           
 22527                           ;incstack = 0
 22528                           ;Write@data stored from wreg
 22529  00401E  6E02               	movwf	Write@data,c
 22530                           
 22531                           ;uart.c: 38: if(data!='\r')
 22532  004020  5002               	movf	Write@data,w,c
 22533  004022  0A0D               	xorlw	13
 22534  004024  E006               	bz	l11025
 22535                           
 22536                           ;uart.c: 39: {
 22537                           ;uart.c: 40: WriteUSART(data);
 22538  004026  5002               	movf	Write@data,w,c
 22539  004028  EC45  F01F         	call	_WriteUSART
 22540  00402C                     l2151:
 22541  00402C  B2AC               	btfsc	4012,1,c	;volatile
 22542  00402E  D00B               	goto	l2161
 22543  004030  D7FD               	goto	l2151
 22544  004032                     l11025:
 22545                           
 22546                           ;uart.c: 43: else
 22547                           ;uart.c: 44: {
 22548                           ;uart.c: 45: WriteUSART('\n');
 22549  004032  0E0A               	movlw	10
 22550  004034  EC45  F01F         	call	_WriteUSART
 22551  004038                     l2155:
 22552  004038  A2AC               	btfss	4012,1,c	;volatile
 22553  00403A  D7FE               	goto	l2155
 22554                           
 22555                           ;uart.c: 47: WriteUSART('\r');
 22556  00403C  0E0D               	movlw	13
 22557  00403E  EC45  F01F         	call	_WriteUSART
 22558  004042                     l2158:
 22559  004042  A2AC               	btfss	4012,1,c	;volatile
 22560  004044  D7FE               	goto	l2158
 22561  004046                     l2161:
 22562  004046  0012               	return	
 22563  004048                     __end_of_Write:
 22564                           	opt stack 0
 22565                           tosu	equ	0xFFF
 22566                           tosh	equ	0xFFE
 22567                           tosl	equ	0xFFD
 22568                           pclath	equ	0xFFA
 22569                           tblptru	equ	0xFF8
 22570                           tblptrh	equ	0xFF7
 22571                           tblptrl	equ	0xFF6
 22572                           tablat	equ	0xFF5
 22573                           prodh	equ	0xFF4
 22574                           prodl	equ	0xFF3
 22575                           indf0	equ	0xFEF
 22576                           postinc0	equ	0xFEE
 22577                           fsr0h	equ	0xFEA
 22578                           fsr0l	equ	0xFE9
 22579                           wreg	equ	0xFE8
 22580                           indf1	equ	0xFE7
 22581                           postinc1	equ	0xFE6
 22582                           postdec1	equ	0xFE5
 22583                           fsr1h	equ	0xFE2
 22584                           fsr1l	equ	0xFE1
 22585                           indf2	equ	0xFDF
 22586                           postinc2	equ	0xFDE
 22587                           postdec2	equ	0xFDD
 22588                           fsr2h	equ	0xFDA
 22589                           fsr2l	equ	0xFD9
 22590                           status	equ	0xFD8
 22591                           
 22592 ;; *************** function _ReadUART *****************
 22593 ;; Defined at:
 22594 ;;		line 23 in file "uart.c"
 22595 ;; Parameters:    Size  Location     Type
 22596 ;;		None
 22597 ;; Auto vars:     Size  Location     Type
 22598 ;;		None
 22599 ;; Return value:  Size  Location     Type
 22600 ;;                  1    wreg      unsigned char 
 22601 ;; Registers used:
 22602 ;;		wreg, status,2, status,0, cstack
 22603 ;; Tracked objects:
 22604 ;;		On entry : 0/0
 22605 ;;		On exit  : 0/0
 22606 ;;		Unchanged: 0/0
 22607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22612 ;;Total ram usage:        0 bytes
 22613 ;; Hardware stack levels used:    1
 22614 ;; Hardware stack levels required when called:    1
 22615 ;; This function calls:
 22616 ;;		_ReadUSART
 22617 ;; This function is called by:
 22618 ;;		_File_write
 22619 ;;		_File_append
 22620 ;;		_Format_drive
 22621 ;;		_File_IO
 22622 ;;		_File_read_
 22623 ;; This function uses a non-reentrant model
 22624 ;;
 22625                           
 22626                           	psect	text61
 22627  003E48                     __ptext61:
 22628                           	opt stack 0
 22629  003E48                     _ReadUART:
 22630                           	opt stack 28
 22631  003E48                     l2138:
 22632  003E48  AA9E               	btfss	3998,5,c	;volatile
 22633  003E4A  D7FE               	goto	l2138
 22634                           
 22635                           ;uart.c: 26: return(ReadUSART());
 22636  003E4C  EFE6  F01F         	goto	_ReadUSART	;wreg free
 22637  003E50                     __end_of_ReadUART:
 22638                           	opt stack 0
 22639                           tosu	equ	0xFFF
 22640                           tosh	equ	0xFFE
 22641                           tosl	equ	0xFFD
 22642                           pclath	equ	0xFFA
 22643                           tblptru	equ	0xFF8
 22644                           tblptrh	equ	0xFF7
 22645                           tblptrl	equ	0xFF6
 22646                           tablat	equ	0xFF5
 22647                           prodh	equ	0xFF4
 22648                           prodl	equ	0xFF3
 22649                           indf0	equ	0xFEF
 22650                           postinc0	equ	0xFEE
 22651                           fsr0h	equ	0xFEA
 22652                           fsr0l	equ	0xFE9
 22653                           wreg	equ	0xFE8
 22654                           indf1	equ	0xFE7
 22655                           postinc1	equ	0xFE6
 22656                           postdec1	equ	0xFE5
 22657                           fsr1h	equ	0xFE2
 22658                           fsr1l	equ	0xFE1
 22659                           indf2	equ	0xFDF
 22660                           postinc2	equ	0xFDE
 22661                           postdec2	equ	0xFDD
 22662                           fsr2h	equ	0xFDA
 22663                           fsr2l	equ	0xFD9
 22664                           status	equ	0xFD8
 22665                           
 22666 ;; *************** function _Create_folder *****************
 22667 ;; Defined at:
 22668 ;;		line 701 in file "main.c"
 22669 ;; Parameters:    Size  Location     Type
 22670 ;;		None
 22671 ;; Auto vars:     Size  Location     Type
 22672 ;;		None
 22673 ;; Return value:  Size  Location     Type
 22674 ;;		None               void
 22675 ;; Registers used:
 22676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22677 ;; Tracked objects:
 22678 ;;		On entry : 0/0
 22679 ;;		On exit  : 0/0
 22680 ;;		Unchanged: 0/0
 22681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22686 ;;Total ram usage:        0 bytes
 22687 ;; Hardware stack levels used:    1
 22688 ;; Hardware stack levels required when called:   11
 22689 ;; This function calls:
 22690 ;;		_Clr_str
 22691 ;;		_Read_str
 22692 ;;		_Switch
 22693 ;;		_Write_str
 22694 ;;		_fl_createdirectory
 22695 ;; This function is called by:
 22696 ;;		_File_IO
 22697 ;; This function uses a non-reentrant model
 22698 ;;
 22699                           
 22700                           	psect	text62
 22701  0050EC                     __ptext62:
 22702                           	opt stack 0
 22703  0050EC                     _Create_folder:
 22704                           	opt stack 18
 22705                           
 22706                           ;main.c: 703: Write_str("\n\rEnter a name/ path\n\r");
 22707                           
 22708                           ;incstack = 0
 22709  0050EC  0EFE               	movlw	high STR_50
 22710  0050EE  6E07               	movwf	Write_str@str+1,c
 22711  0050F0  0E83               	movlw	low STR_50
 22712  0050F2  6E06               	movwf	Write_str@str,c
 22713  0050F4  EC3C  F01F         	call	_Write_str	;wreg free
 22714                           
 22715                           ;main.c: 704: Clr_str(string);
 22716  0050F8  0E01               	movlw	high _string
 22717  0050FA  6E02               	movwf	Clr_str@buffer+1,c
 22718  0050FC  0101               	movlb	1	; () banked
 22719  0050FE  0EAF               	movlw	low _string
 22720  005100  6E01               	movwf	Clr_str@buffer,c
 22721  005102  EC9F  F01F         	call	_Clr_str	;wreg free
 22722                           
 22723                           ;main.c: 705: Clr_str(m);
 22724  005106  0E02               	movlw	high _m
 22725  005108  6E02               	movwf	Clr_str@buffer+1,c
 22726  00510A  0102               	movlb	2	; () banked
 22727  00510C  0E89               	movlw	low _m
 22728  00510E  6E01               	movwf	Clr_str@buffer,c
 22729  005110  EC9F  F01F         	call	_Clr_str	;wreg free
 22730                           
 22731                           ;main.c: 706: Read_str(string);
 22732  005114  0E01               	movlw	high _string
 22733  005116  6E03               	movwf	Read_str@buffer+1,c
 22734  005118  0101               	movlb	1	; () banked
 22735  00511A  0EAF               	movlw	low _string
 22736  00511C  6E02               	movwf	Read_str@buffer,c
 22737  00511E  EC2C  F021         	call	_Read_str	;wreg free
 22738                           
 22739                           ;main.c: 707: Switch('r');
 22740  005122  0E72               	movlw	114
 22741  005124  ECB7  F030         	call	_Switch
 22742                           
 22743                           ;main.c: 708: Write_str("\n\r");
 22744  005128  0EFE               	movlw	high (STR_20+18)
 22745  00512A  6E07               	movwf	Write_str@str+1,c
 22746  00512C  0ED8               	movlw	low (STR_20+18)
 22747  00512E  6E06               	movwf	Write_str@str,c
 22748  005130  EC3C  F01F         	call	_Write_str	;wreg free
 22749                           
 22750                           ;main.c: 709: Write_str(m);
 22751  005134  0E02               	movlw	high _m
 22752  005136  6E07               	movwf	Write_str@str+1,c
 22753  005138  0102               	movlb	2	; () banked
 22754  00513A  0E89               	movlw	low _m
 22755  00513C  6E06               	movwf	Write_str@str,c
 22756  00513E  EC3C  F01F         	call	_Write_str	;wreg free
 22757                           
 22758                           ;main.c: 710: if(fl_createdirectory(m))
 22759  005142  0E02               	movlw	high _m
 22760  005144  0100               	movlb	0	; () banked
 22761  005146  6FF9               	movwf	(fl_createdirectory@path+1)& (0+255),b
 22762  005148  0E89               	movlw	low _m
 22763  00514A  6FF8               	movwf	fl_createdirectory@path& (0+255),b
 22764  00514C  EC3A  F020         	call	_fl_createdirectory	;wreg free
 22765  005150  0100               	movlb	0	; () banked
 22766  005152  51F9               	movf	(?_fl_createdirectory+1)& (0+255),w,b
 22767  005154  11F8               	iorwf	?_fl_createdirectory& (0+255),w,b
 22768  005156  E007               	bz	l12911
 22769                           
 22770                           ; BSR set to: 0
 22771                           ;main.c: 711: Write_str("\n\rNew folder created..!");
 22772  005158  0EFE               	movlw	high STR_52
 22773  00515A  6E07               	movwf	Write_str@str+1,c
 22774  00515C  0E3B               	movlw	low STR_52
 22775  00515E  6E06               	movwf	Write_str@str,c
 22776  005160  EC3C  F01F         	call	_Write_str	;wreg free
 22777  005164  D006               	goto	l1783
 22778  005166                     l12911:
 22779                           
 22780                           ;main.c: 712: else
 22781                           ;main.c: 713: Write_str("\n\rFolder already exists/ error..!");
 22782  005166  0EFC               	movlw	high STR_53
 22783  005168  6E07               	movwf	Write_str@str+1,c
 22784  00516A  0ED4               	movlw	low STR_53
 22785  00516C  6E06               	movwf	Write_str@str,c
 22786  00516E  EC3C  F01F         	call	_Write_str	;wreg free
 22787  005172                     l1783:
 22788  005172  0012               	return	
 22789  005174                     __end_of_Create_folder:
 22790                           	opt stack 0
 22791                           tosu	equ	0xFFF
 22792                           tosh	equ	0xFFE
 22793                           tosl	equ	0xFFD
 22794                           pclath	equ	0xFFA
 22795                           tblptru	equ	0xFF8
 22796                           tblptrh	equ	0xFF7
 22797                           tblptrl	equ	0xFF6
 22798                           tablat	equ	0xFF5
 22799                           prodh	equ	0xFF4
 22800                           prodl	equ	0xFF3
 22801                           indf0	equ	0xFEF
 22802                           postinc0	equ	0xFEE
 22803                           fsr0h	equ	0xFEA
 22804                           fsr0l	equ	0xFE9
 22805                           wreg	equ	0xFE8
 22806                           indf1	equ	0xFE7
 22807                           postinc1	equ	0xFE6
 22808                           postdec1	equ	0xFE5
 22809                           fsr1h	equ	0xFE2
 22810                           fsr1l	equ	0xFE1
 22811                           indf2	equ	0xFDF
 22812                           postinc2	equ	0xFDE
 22813                           postdec2	equ	0xFDD
 22814                           fsr2h	equ	0xFDA
 22815                           fsr2l	equ	0xFD9
 22816                           status	equ	0xFD8
 22817                           
 22818 ;; *************** function _fl_createdirectory *****************
 22819 ;; Defined at:
 22820 ;;		line 1450 in file "fat_filelib.c"
 22821 ;; Parameters:    Size  Location     Type
 22822 ;;  path            2  120[BANK0 ] PTR const unsigned char 
 22823 ;;		 -> m(30), 
 22824 ;; Auto vars:     Size  Location     Type
 22825 ;;  res             2  122[BANK0 ] int 
 22826 ;; Return value:  Size  Location     Type
 22827 ;;                  2  120[BANK0 ] int 
 22828 ;; Registers used:
 22829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22830 ;; Tracked objects:
 22831 ;;		On entry : 0/0
 22832 ;;		On exit  : 0/0
 22833 ;;		Unchanged: 0/0
 22834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22835 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22836 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22838 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22839 ;;Total ram usage:        4 bytes
 22840 ;; Hardware stack levels used:    1
 22841 ;; Hardware stack levels required when called:   10
 22842 ;; This function calls:
 22843 ;;		__create_directory
 22844 ;;		_fl_init
 22845 ;; This function is called by:
 22846 ;;		_Create_folder
 22847 ;; This function uses a non-reentrant model
 22848 ;;
 22849                           
 22850                           	psect	text63
 22851  004074                     __ptext63:
 22852                           	opt stack 0
 22853  004074                     _fl_createdirectory:
 22854                           	opt stack 18
 22855                           
 22856                           ;fat_filelib.c: 1452: int res;
 22857                           ;fat_filelib.c: 1455: { if (_filelib_init==0) fl_init(); };
 22858                           
 22859                           ;incstack = 0
 22860  004074  0101               	movlb	1	; () banked
 22861  004076  5192               	movf	(__filelib_init+1)& (0+255),w,b
 22862  004078  1191               	iorwf	__filelib_init& (0+255),w,b
 22863  00407A  B4D8               	btfsc	status,2,c
 22864                           
 22865                           ; BSR set to: 1
 22866  00407C  EC44  F029         	call	_fl_init	;wreg free
 22867                           
 22868                           ;fat_filelib.c: 1458: res =_create_directory((char*)path);
 22869                           
 22870                           ;fat_filelib.c: 1457: do { if ((&_fs)->fl_lock) (&_fs)->fl_lock(); } while (0);
 22871  004080  C0F9  F0F3         	movff	fl_createdirectory@path+1,__create_directory@path+1
 22872  004084  0100               	movlb	0	; () banked
 22873  004086  C0F8  F0F2         	movff	fl_createdirectory@path,__create_directory@path
 22874  00408A  EC44  F06A         	call	__create_directory	;wreg free
 22875  00408E  C0F2  F0FA         	movff	?__create_directory,fl_createdirectory@res
 22876  004092  0100               	movlb	0	; () banked
 22877  004094  C0F3  F0FB         	movff	?__create_directory+1,fl_createdirectory@res+1
 22878                           
 22879                           ; BSR set to: 0
 22880                           ;fat_filelib.c: 1461: return res;
 22881                           
 22882                           ; BSR set to: 0
 22883                           
 22884                           ; BSR set to: 0
 22885                           
 22886                           ; BSR set to: 0
 22887                           
 22888                           ;fat_filelib.c: 1459: do { if ((&_fs)->fl_unlock) (&_fs)->fl_unlock(); } while (0);
 22889  004098  C0FA  F0F8         	movff	fl_createdirectory@res,?_fl_createdirectory
 22890  00409C  C0FB  F0F9         	movff	fl_createdirectory@res+1,?_fl_createdirectory+1
 22891                           
 22892                           ; BSR set to: 0
 22893  0040A0  0012               	return	
 22894  0040A2                     __end_of_fl_createdirectory:
 22895                           	opt stack 0
 22896                           tosu	equ	0xFFF
 22897                           tosh	equ	0xFFE
 22898                           tosl	equ	0xFFD
 22899                           pclath	equ	0xFFA
 22900                           tblptru	equ	0xFF8
 22901                           tblptrh	equ	0xFF7
 22902                           tblptrl	equ	0xFF6
 22903                           tablat	equ	0xFF5
 22904                           prodh	equ	0xFF4
 22905                           prodl	equ	0xFF3
 22906                           indf0	equ	0xFEF
 22907                           postinc0	equ	0xFEE
 22908                           fsr0h	equ	0xFEA
 22909                           fsr0l	equ	0xFE9
 22910                           wreg	equ	0xFE8
 22911                           indf1	equ	0xFE7
 22912                           postinc1	equ	0xFE6
 22913                           postdec1	equ	0xFE5
 22914                           fsr1h	equ	0xFE2
 22915                           fsr1l	equ	0xFE1
 22916                           indf2	equ	0xFDF
 22917                           postinc2	equ	0xFDE
 22918                           postdec2	equ	0xFDD
 22919                           fsr2h	equ	0xFDA
 22920                           fsr2l	equ	0xFD9
 22921                           status	equ	0xFD8
 22922                           
 22923 ;; *************** function _fl_init *****************
 22924 ;; Defined at:
 22925 ;;		line 634 in file "fat_filelib.c"
 22926 ;; Parameters:    Size  Location     Type
 22927 ;;		None
 22928 ;; Auto vars:     Size  Location     Type
 22929 ;;  i               2   20[COMRAM] int 
 22930 ;; Return value:  Size  Location     Type
 22931 ;;		None               void
 22932 ;; Registers used:
 22933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22934 ;; Tracked objects:
 22935 ;;		On entry : 0/0
 22936 ;;		On exit  : 0/0
 22937 ;;		Unchanged: 0/0
 22938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22940 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22941 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22942 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22943 ;;Total ram usage:        8 bytes
 22944 ;; Hardware stack levels used:    1
 22945 ;; Hardware stack levels required when called:    3
 22946 ;; This function calls:
 22947 ;;		fat_list@fat_list_init
 22948 ;;		fat_list@fat_list_insert_last
 22949 ;; This function is called by:
 22950 ;;		_fl_attach_media
 22951 ;;		_fl_shutdown
 22952 ;;		_fl_fopen
 22953 ;;		_fl_fflush
 22954 ;;		_fl_fclose
 22955 ;;		_fl_fread
 22956 ;;		_fl_fseek
 22957 ;;		_fl_fwrite
 22958 ;;		_fl_createdirectory
 22959 ;;		_fl_listdirectory
 22960 ;;		_fl_opendir
 22961 ;;		_fl_readdir
 22962 ;;		_main
 22963 ;; This function uses a non-reentrant model
 22964 ;;
 22965                           
 22966                           	psect	text64
 22967  005288                     __ptext64:
 22968                           	opt stack 0
 22969  005288                     _fl_init:
 22970                           	opt stack 26
 22971                           
 22972                           ;fat_filelib.c: 636: int i;
 22973                           ;fat_filelib.c: 638: fat_list_init(&_free_file_list);
 22974                           
 22975                           ; BSR set to: 0
 22976                           ;incstack = 0
 22977  005288  0E01               	movlw	high __free_file_list
 22978  00528A  6E02               	movwf	fat_list@fat_list_init@list+1,c
 22979  00528C  0101               	movlb	1	; () banked
 22980  00528E  0ED6               	movlw	low __free_file_list
 22981  005290  6E01               	movwf	fat_list@fat_list_init@list,c
 22982  005292  ECC2  F01F         	call	fat_list@fat_list_init	;wreg free
 22983                           
 22984                           ;fat_filelib.c: 639: fat_list_init(&_open_file_list);
 22985  005296  0E01               	movlw	high __open_file_list
 22986  005298  6E02               	movwf	fat_list@fat_list_init@list+1,c
 22987  00529A  0101               	movlb	1	; () banked
 22988  00529C  0EDA               	movlw	low __open_file_list
 22989  00529E  6E01               	movwf	fat_list@fat_list_init@list,c
 22990  0052A0  ECC2  F01F         	call	fat_list@fat_list_init	;wreg free
 22991                           
 22992                           ;fat_filelib.c: 642: for (i=0;i<2;i++)
 22993  0052A4  6A16               	clrf	fl_init@i+1,c
 22994  0052A6  6A15               	clrf	fl_init@i,c
 22995  0052A8  5016               	movf	fl_init@i+1,w,c
 22996  0052AA  0A80               	xorlw	128
 22997  0052AC  0F80               	addlw	-128
 22998  0052AE  0E02               	movlw	2
 22999  0052B0  B4D8               	btfsc	status,2,c
 23000  0052B2  5C15               	subwf	fl_init@i,w,c
 23001  0052B4  E229               	bc	l10873
 23002                           
 23003                           ;fat_filelib.c: 643: fat_list_insert_last(&_free_file_list, &_files[i].list_node);
 23004  0052B6  0E01               	movlw	high __free_file_list
 23005  0052B8  6E0C               	movwf	fat_list@fat_list_insert_last@list+1,c
 23006  0052BA  0101               	movlb	1	; () banked
 23007  0052BC  0ED6               	movlw	low __free_file_list
 23008  0052BE  6E0B               	movwf	fat_list@fat_list_insert_last@list,c
 23009  0052C0  0E40               	movlw	64
 23010  0052C2  6E0F               	movwf	??_fl_init& (0+255),c
 23011  0052C4  0E02               	movlw	2
 23012  0052C6  6E10               	movwf	(??_fl_init+1)& (0+255),c
 23013  0052C8  0E44               	movlw	68
 23014  0052CA  6E11               	movwf	(??_fl_init+2)& (0+255),c
 23015  0052CC  0E02               	movlw	2
 23016  0052CE  6E12               	movwf	(??_fl_init+3)& (0+255),c
 23017  0052D0  5011               	movf	(??_fl_init+2)& (0+255),w,c
 23018  0052D2  0215               	mulwf	fl_init@i,c
 23019  0052D4  CFF3 F013          	movff	prodl,??_fl_init+4
 23020  0052D8  CFF4 F014          	movff	prodh,??_fl_init+5
 23021  0052DC  0216               	mulwf	fl_init@i+1,c
 23022  0052DE  50F3               	movf	243,w,c
 23023  0052E0  2614               	addwf	(??_fl_init+5)& (0+255),f,c
 23024  0052E2  5012               	movf	(??_fl_init+3)& (0+255),w,c
 23025  0052E4  0215               	mulwf	fl_init@i,c
 23026  0052E6  50F3               	movf	243,w,c
 23027  0052E8  2614               	addwf	(??_fl_init+5)& (0+255),f,c
 23028  0052EA  500F               	movf	??_fl_init,w,c
 23029  0052EC  2613               	addwf	??_fl_init+4,f,c
 23030  0052EE  5010               	movf	??_fl_init+1,w,c
 23031  0052F0  2214               	addwfc	??_fl_init+5,f,c
 23032  0052F2  0EF0               	movlw	low __files
 23033  0052F4  2413               	addwf	??_fl_init+4,w,c
 23034  0052F6  6E0D               	movwf	fat_list@fat_list_insert_last@node,c
 23035  0052F8  0E04               	movlw	high __files
 23036  0052FA  2014               	addwfc	??_fl_init+5,w,c
 23037  0052FC  6E0E               	movwf	fat_list@fat_list_insert_last@node+1,c
 23038  0052FE  EC29  F022         	call	fat_list@fat_list_insert_last	;wreg free
 23039  005302  4A15               	infsnz	fl_init@i,f,c
 23040  005304  2A16               	incf	fl_init@i+1,f,c
 23041  005306  D7D0               	goto	L63
 23042  005308                     l10873:
 23043                           
 23044                           ;fat_filelib.c: 645: _filelib_init = 1;
 23045  005308  0E00               	movlw	0
 23046  00530A  0101               	movlb	1	; () banked
 23047  00530C  6F92               	movwf	(__filelib_init+1)& (0+255),b
 23048  00530E  0E01               	movlw	1
 23049  005310  6F91               	movwf	__filelib_init& (0+255),b
 23050                           
 23051                           ; BSR set to: 1
 23052  005312  0C01               	retlw	1
 23053  005314                     __end_of_fl_init:
 23054                           	opt stack 0
 23055                           tosu	equ	0xFFF
 23056                           tosh	equ	0xFFE
 23057                           tosl	equ	0xFFD
 23058                           pclath	equ	0xFFA
 23059                           tblptru	equ	0xFF8
 23060                           tblptrh	equ	0xFF7
 23061                           tblptrl	equ	0xFF6
 23062                           tablat	equ	0xFF5
 23063                           prodh	equ	0xFF4
 23064                           prodl	equ	0xFF3
 23065                           indf0	equ	0xFEF
 23066                           postinc0	equ	0xFEE
 23067                           fsr0h	equ	0xFEA
 23068                           fsr0l	equ	0xFE9
 23069                           wreg	equ	0xFE8
 23070                           indf1	equ	0xFE7
 23071                           postinc1	equ	0xFE6
 23072                           postdec1	equ	0xFE5
 23073                           fsr1h	equ	0xFE2
 23074                           fsr1l	equ	0xFE1
 23075                           indf2	equ	0xFDF
 23076                           postinc2	equ	0xFDE
 23077                           postdec2	equ	0xFDD
 23078                           fsr2h	equ	0xFDA
 23079                           fsr2l	equ	0xFD9
 23080                           status	equ	0xFD8
 23081                           
 23082 ;; *************** function fat_list@fat_list_init *****************
 23083 ;; Defined at:
 23084 ;;		line 46 in file "fat_list.h"
 23085 ;; Parameters:    Size  Location     Type
 23086 ;;  list            2    0[COMRAM] PTR struct fat_list
 23087 ;;		 -> _open_file_list(4), _free_file_list(4), 
 23088 ;; Auto vars:     Size  Location     Type
 23089 ;;		None
 23090 ;; Return value:  Size  Location     Type
 23091 ;;		None               void
 23092 ;; Registers used:
 23093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23094 ;; Tracked objects:
 23095 ;;		On entry : 0/0
 23096 ;;		On exit  : 0/0
 23097 ;;		Unchanged: 0/0
 23098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23102 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23103 ;;Total ram usage:        2 bytes
 23104 ;; Hardware stack levels used:    1
 23105 ;; This function calls:
 23106 ;;		Nothing
 23107 ;; This function is called by:
 23108 ;;		_fl_init
 23109 ;; This function uses a non-reentrant model
 23110 ;;
 23111                           
 23112                           	psect	text65
 23113  003F84                     __ptext65:
 23114                           	opt stack 0
 23115  003F84                     fat_list@fat_list_init:
 23116                           	opt stack 28
 23117                           
 23118                           ;fat_list.h: 48: ;
 23119                           ;fat_list.h: 50: list->head = list->tail = 0;
 23120                           
 23121                           ; BSR set to: 1
 23122                           ;incstack = 0
 23123  003F84  EE20 F002          	lfsr	2,2
 23124  003F88  5001               	movf	fat_list@fat_list_init@list,w,c
 23125  003F8A  26D9               	addwf	fsr2l,f,c
 23126  003F8C  5002               	movf	fat_list@fat_list_init@list+1,w,c
 23127  003F8E  22DA               	addwfc	fsr2h,f,c
 23128  003F90  0E00               	movlw	0
 23129  003F92  6EDE               	movwf	postinc2,c
 23130  003F94  6EDD               	movwf	postdec2,c
 23131  003F96  C001  FFE1         	movff	fat_list@fat_list_init@list,fsr1l
 23132  003F9A  C002  FFE2         	movff	fat_list@fat_list_init@list+1,fsr1h
 23133  003F9E  CFDE FFE6          	movff	postinc2,postinc1
 23134  003FA2  CFDD FFE5          	movff	postdec2,postdec1
 23135  003FA6  0C00               	retlw	0
 23136  003FA8                     __end_offat_list@fat_list_init:
 23137                           	opt stack 0
 23138                           tosu	equ	0xFFF
 23139                           tosh	equ	0xFFE
 23140                           tosl	equ	0xFFD
 23141                           pclath	equ	0xFFA
 23142                           tblptru	equ	0xFF8
 23143                           tblptrh	equ	0xFF7
 23144                           tblptrl	equ	0xFF6
 23145                           tablat	equ	0xFF5
 23146                           prodh	equ	0xFF4
 23147                           prodl	equ	0xFF3
 23148                           indf0	equ	0xFEF
 23149                           postinc0	equ	0xFEE
 23150                           fsr0h	equ	0xFEA
 23151                           fsr0l	equ	0xFE9
 23152                           wreg	equ	0xFE8
 23153                           indf1	equ	0xFE7
 23154                           postinc1	equ	0xFE6
 23155                           postdec1	equ	0xFE5
 23156                           fsr1h	equ	0xFE2
 23157                           fsr1l	equ	0xFE1
 23158                           indf2	equ	0xFDF
 23159                           postinc2	equ	0xFDE
 23160                           postdec2	equ	0xFDD
 23161                           fsr2h	equ	0xFDA
 23162                           fsr2l	equ	0xFD9
 23163                           status	equ	0xFD8
 23164                           
 23165 ;; *************** function __create_directory *****************
 23166 ;; Defined at:
 23167 ;;		line 168 in file "fat_filelib.c"
 23168 ;; Parameters:    Size  Location     Type
 23169 ;;  path            2  114[BANK0 ] PTR unsigned char 
 23170 ;;		 -> m(30), 
 23171 ;; Auto vars:     Size  Location     Type
 23172 ;;  sfEntry        32   88[BANK1 ] struct fat_dir_entry
 23173 ;;  shortFilenam   11   77[BANK1 ] unsigned char [11]
 23174 ;;  file            2  124[BANK1 ] PTR struct sFL_FILE
 23175 ;;		 -> RAM(3967), NULL(0), 
 23176 ;;  tailNum         2  122[BANK1 ] int 
 23177 ;;  i               2  120[BANK1 ] int 
 23178 ;; Return value:  Size  Location     Type
 23179 ;;                  2  114[BANK0 ] int 
 23180 ;; Registers used:
 23181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23182 ;; Tracked objects:
 23183 ;;		On entry : 0/0
 23184 ;;		On exit  : 0/0
 23185 ;;		Unchanged: 0/0
 23186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23187 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23188 ;;      Locals:         0       0      49       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23189 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23190 ;;      Totals:         0       6      49       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23191 ;;Total ram usage:       55 bytes
 23192 ;; Hardware stack levels used:    1
 23193 ;; Hardware stack levels required when called:    9
 23194 ;; This function calls:
 23195 ;;		__allocate_file
 23196 ;;		__check_file_open
 23197 ;;		__free_file
 23198 ;;		__open_directory
 23199 ;;		_fatfs_add_file_entry
 23200 ;;		_fatfs_allocate_free_space
 23201 ;;		_fatfs_fat_purge
 23202 ;;		_fatfs_free_cluster_chain
 23203 ;;		_fatfs_get_file_entry
 23204 ;;		_fatfs_get_root_cluster
 23205 ;;		_fatfs_lfn_create_sfn
 23206 ;;		_fatfs_lfn_generate_tail
 23207 ;;		_fatfs_sfn_exists
 23208 ;;		_fatfs_split_path
 23209 ;;		_fatfs_write_sector
 23210 ;;		_memcpy
 23211 ;;		_memset
 23212 ;; This function is called by:
 23213 ;;		_fl_createdirectory
 23214 ;; This function uses a non-reentrant model
 23215 ;;
 23216                           
 23217                           	psect	text66
 23218  00D488                     __ptext66:
 23219                           	opt stack 0
 23220  00D488                     __create_directory:
 23221                           	opt stack 18
 23222                           
 23223                           ;fat_filelib.c: 170: FL_FILE* file;
 23224                           ;fat_filelib.c: 171: struct fat_dir_entry sfEntry;
 23225                           ;fat_filelib.c: 172: char shortFilename[11];
 23226                           ;fat_filelib.c: 173: int tailNum = 0;
 23227                           
 23228                           ;incstack = 0
 23229  00D488  0E00               	movlw	0
 23230  00D48A  0101               	movlb	1	; () banked
 23231  00D48C  6B7B               	clrf	(__create_directory@tailNum+1)& (0+255),b
 23232  00D48E  6B7A               	clrf	__create_directory@tailNum& (0+255),b
 23233                           
 23234                           ; BSR set to: 1
 23235                           ;fat_filelib.c: 174: int i;
 23236                           ;fat_filelib.c: 177: file = _allocate_file();
 23237  00D490  ECDA  F021         	call	__allocate_file	;wreg free
 23238  00D494  C00F  F17C         	movff	?__allocate_file,__create_directory@file
 23239  00D498  C010  F17D         	movff	?__allocate_file+1,__create_directory@file+1
 23240                           
 23241                           ;fat_filelib.c: 178: if (!file)
 23242  00D49C  0101               	movlb	1	; () banked
 23243  00D49E  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23244  00D4A0  117C               	iorwf	__create_directory@file& (0+255),w,b
 23245  00D4A2  E101 D240          	bz	L71
 23246                           
 23247                           ;fat_filelib.c: 182: memset(file->path, '\0', sizeof(file->path));
 23248                           
 23249                           ; BSR set to: 0
 23250                           
 23251                           ; BSR set to: 0
 23252                           
 23253                           ; BSR set to: 1
 23254                           ;fat_filelib.c: 179: return 0;
 23255  00D4A6  0E12               	movlw	18
 23256  00D4A8  257C               	addwf	__create_directory@file& (0+255),w,b
 23257  00D4AA  6E01               	movwf	memset@p1,c
 23258  00D4AC  0E00               	movlw	0
 23259  00D4AE  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23260  00D4B0  6E02               	movwf	memset@p1+1,c
 23261  00D4B2  6A04               	clrf	memset@c+1,c
 23262  00D4B4  6A03               	clrf	memset@c,c
 23263  00D4B6  6A06               	clrf	memset@n+1,c
 23264  00D4B8  0E0A               	movlw	10
 23265  00D4BA  6E05               	movwf	memset@n,c
 23266  00D4BC  EC24  F020         	call	_memset	;wreg free
 23267                           
 23268                           ;fat_filelib.c: 183: memset(file->filename, '\0', sizeof(file->filename));
 23269  00D4C0  0E1C               	movlw	28
 23270  00D4C2  0101               	movlb	1	; () banked
 23271  00D4C4  257C               	addwf	__create_directory@file& (0+255),w,b
 23272  00D4C6  6E01               	movwf	memset@p1,c
 23273  00D4C8  0E00               	movlw	0
 23274  00D4CA  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23275  00D4CC  6E02               	movwf	memset@p1+1,c
 23276  00D4CE  6A04               	clrf	memset@c+1,c
 23277  00D4D0  6A03               	clrf	memset@c,c
 23278  00D4D2  6A06               	clrf	memset@n+1,c
 23279  00D4D4  0E0A               	movlw	10
 23280  00D4D6  6E05               	movwf	memset@n,c
 23281  00D4D8  EC24  F020         	call	_memset	;wreg free
 23282                           
 23283                           ;fat_filelib.c: 186: if (fatfs_split_path((char*)path, file->path, sizeof(file->path), f
      +                          ile->filename, sizeof(file->filename)) == -1)
 23284  00D4DC  C0F3  F01E         	movff	__create_directory@path+1,fatfs_split_path@full_path+1
 23285  00D4E0  C0F2  F01D         	movff	__create_directory@path,fatfs_split_path@full_path
 23286  00D4E4  0E12               	movlw	18
 23287  00D4E6  0101               	movlb	1	; () banked
 23288  00D4E8  257C               	addwf	__create_directory@file& (0+255),w,b
 23289  00D4EA  6E1F               	movwf	fatfs_split_path@path,c
 23290  00D4EC  0E00               	movlw	0
 23291  00D4EE  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23292  00D4F0  6E20               	movwf	fatfs_split_path@path+1,c
 23293  00D4F2  6A22               	clrf	fatfs_split_path@max_path+1,c
 23294  00D4F4  0E0A               	movlw	10
 23295  00D4F6  6E21               	movwf	fatfs_split_path@max_path,c
 23296  00D4F8  0E1C               	movlw	28
 23297  00D4FA  257C               	addwf	__create_directory@file& (0+255),w,b
 23298  00D4FC  6E23               	movwf	fatfs_split_path@filename,c
 23299  00D4FE  0E00               	movlw	0
 23300  00D500  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23301  00D502  6E24               	movwf	fatfs_split_path@filename+1,c
 23302  00D504  6A26               	clrf	fatfs_split_path@max_filename+1,c
 23303  00D506  0E0A               	movlw	10
 23304  00D508  6E25               	movwf	fatfs_split_path@max_filename,c
 23305  00D50A  ECC1  F02F         	call	_fatfs_split_path	;wreg free
 23306  00D50E  281D               	incf	?_fatfs_split_path,w,c
 23307  00D510  B4D8               	btfsc	status,2,c
 23308  00D512  281E               	incf	?_fatfs_split_path+1,w,c
 23309  00D514  E108               	bnz	l11681
 23310                           
 23311                           ;fat_filelib.c: 187: {
 23312                           ;fat_filelib.c: 188: _free_file(file);
 23313  00D516  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23314  00D51A  0101               	movlb	1	; () banked
 23315  00D51C  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23316  00D520  EC99  F020         	call	__free_file	;wreg free
 23317  00D524  D200               	goto	L71
 23318  00D526                     l11681:
 23319                           
 23320                           ;fat_filelib.c: 190: }
 23321                           ;fat_filelib.c: 193: if (_check_file_open(file))
 23322  00D526  C17D  F026         	movff	__create_directory@file+1,__check_file_open@file+1
 23323  00D52A  0101               	movlb	1	; () banked
 23324  00D52C  C17C  F025         	movff	__create_directory@file,__check_file_open@file
 23325  00D530  ECFC  F02A         	call	__check_file_open	;wreg free
 23326  00D534  5026               	movf	?__check_file_open+1,w,c
 23327  00D536  1025               	iorwf	?__check_file_open,w,c
 23328  00D538  E008               	bz	l11689
 23329                           
 23330                           ;fat_filelib.c: 194: {
 23331                           ;fat_filelib.c: 195: _free_file(file);
 23332  00D53A  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23333  00D53E  0101               	movlb	1	; () banked
 23334  00D540  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23335  00D544  EC99  F020         	call	__free_file	;wreg free
 23336  00D548  D1EE               	goto	L71
 23337  00D54A                     l11689:
 23338                           
 23339                           ;fat_filelib.c: 197: }
 23340                           ;fat_filelib.c: 200: if (file->path[0] == 0)
 23341  00D54A  EE20 F012          	lfsr	2,18
 23342  00D54E  0101               	movlb	1	; () banked
 23343  00D550  517C               	movf	__create_directory@file& (0+255),w,b
 23344  00D552  26D9               	addwf	fsr2l,f,c
 23345  00D554  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23346  00D556  22DA               	addwfc	fsr2h,f,c
 23347  00D558  50DF               	movf	indf2,w,c
 23348  00D55A  E11D               	bnz	l11693
 23349                           
 23350                           ; BSR set to: 1
 23351                           ;fat_filelib.c: 201: file->parentcluster = fatfs_get_root_cluster(&_fs);
 23352  00D55C  0E09               	movlw	high __fs
 23353  00D55E  6E02               	movwf	fatfs_get_root_cluster@fs+1,c
 23354  00D560  0E78               	movlw	low __fs
 23355  00D562  6E01               	movwf	fatfs_get_root_cluster@fs,c
 23356  00D564  EC90  F01F         	call	_fatfs_get_root_cluster	;wreg free
 23357  00D568  C001  F0F4         	movff	?_fatfs_get_root_cluster,??__create_directory
 23358  00D56C  C002  F0F5         	movff	?_fatfs_get_root_cluster+1,??__create_directory+1
 23359  00D570  C003  F0F6         	movff	?_fatfs_get_root_cluster+2,??__create_directory+2
 23360  00D574  C004  F0F7         	movff	?_fatfs_get_root_cluster+3,??__create_directory+3
 23361  00D578  C17C  FFD9         	movff	__create_directory@file,fsr2l
 23362  00D57C  C17D  FFDA         	movff	__create_directory@file+1,fsr2h
 23363  00D580  C0F4  FFDE         	movff	??__create_directory,postinc2
 23364  00D584  C0F5  FFDE         	movff	??__create_directory+1,postinc2
 23365  00D588  C0F6  FFDE         	movff	??__create_directory+2,postinc2
 23366  00D58C  C0F7  FFDD         	movff	??__create_directory+3,postdec2
 23367  00D590  06D9               	decf	fsr2l,f,c
 23368  00D592  06D9               	decf	fsr2l,f,c
 23369  00D594  D01C               	goto	l11701
 23370  00D596                     l11693:
 23371                           
 23372                           ;fat_filelib.c: 202: else
 23373                           ;fat_filelib.c: 203: {
 23374                           ;fat_filelib.c: 205: if (!_open_directory(file->path, &file->parentcluster))
 23375  00D596  0E12               	movlw	18
 23376  00D598  0101               	movlb	1	; () banked
 23377  00D59A  257C               	addwf	__create_directory@file& (0+255),w,b
 23378  00D59C  0100               	movlb	0	; () banked
 23379  00D59E  6FB8               	movwf	__open_directory@path& (0+255),b
 23380  00D5A0  0E00               	movlw	0
 23381  00D5A2  0101               	movlb	1	; () banked
 23382  00D5A4  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23383  00D5A6  0100               	movlb	0	; () banked
 23384  00D5A8  6FB9               	movwf	(__open_directory@path+1)& (0+255),b
 23385  00D5AA  C17D  F0BB         	movff	__create_directory@file+1,__open_directory@pathCluster+1
 23386  00D5AE  C17C  F0BA         	movff	__create_directory@file,__open_directory@pathCluster
 23387  00D5B2  EC10  F034         	call	__open_directory	;wreg free
 23388  00D5B6  0100               	movlb	0	; () banked
 23389  00D5B8  51B9               	movf	(?__open_directory+1)& (0+255),w,b
 23390  00D5BA  11B8               	iorwf	?__open_directory& (0+255),w,b
 23391  00D5BC  E108               	bnz	l11701
 23392                           
 23393                           ; BSR set to: 0
 23394                           ;fat_filelib.c: 206: {
 23395                           ;fat_filelib.c: 207: _free_file(file);
 23396  00D5BE  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23397  00D5C2  0101               	movlb	1	; () banked
 23398  00D5C4  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23399  00D5C8  EC99  F020         	call	__free_file	;wreg free
 23400  00D5CC  D1AC               	goto	L71
 23401  00D5CE                     l11701:
 23402                           
 23403                           ;fat_filelib.c: 209: }
 23404                           ;fat_filelib.c: 210: }
 23405                           ;fat_filelib.c: 213: if (fatfs_get_file_entry(&_fs, file->parentcluster, file->filename,
      +                          &sfEntry) == 1)
 23406  00D5CE  0E09               	movlw	high __fs
 23407  00D5D0  0100               	movlb	0	; () banked
 23408  00D5D2  6FAD               	movwf	(fatfs_get_file_entry@fs+1)& (0+255),b
 23409  00D5D4  0E78               	movlw	low __fs
 23410  00D5D6  6FAC               	movwf	fatfs_get_file_entry@fs& (0+255),b
 23411  00D5D8  C17C  FFD9         	movff	__create_directory@file,fsr2l
 23412  00D5DC  C17D  FFDA         	movff	__create_directory@file+1,fsr2h
 23413  00D5E0  CFDE F0AE          	movff	postinc2,fatfs_get_file_entry@Cluster
 23414  00D5E4  CFDE F0AF          	movff	postinc2,fatfs_get_file_entry@Cluster+1
 23415  00D5E8  CFDE F0B0          	movff	postinc2,fatfs_get_file_entry@Cluster+2
 23416  00D5EC  CFDE F0B1          	movff	postinc2,fatfs_get_file_entry@Cluster+3
 23417  00D5F0  0E1C               	movlw	28
 23418  00D5F2  0101               	movlb	1	; () banked
 23419  00D5F4  257C               	addwf	__create_directory@file& (0+255),w,b
 23420  00D5F6  0100               	movlb	0	; () banked
 23421  00D5F8  6FB2               	movwf	fatfs_get_file_entry@name_to_find& (0+255),b
 23422  00D5FA  0E00               	movlw	0
 23423  00D5FC  0101               	movlb	1	; () banked
 23424  00D5FE  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23425  00D600  0100               	movlb	0	; () banked
 23426  00D602  6FB3               	movwf	(fatfs_get_file_entry@name_to_find+1)& (0+255),b
 23427  00D604  0E01               	movlw	high __create_directory@sfEntry
 23428  00D606  6FB5               	movwf	(fatfs_get_file_entry@sfEntry+1)& (0+255),b
 23429  00D608  0E58               	movlw	low __create_directory@sfEntry
 23430  00D60A  6FB4               	movwf	fatfs_get_file_entry@sfEntry& (0+255),b
 23431  00D60C  ECB6  F049         	call	_fatfs_get_file_entry	;wreg free
 23432  00D610  C0AC  F0F4         	movff	?_fatfs_get_file_entry,??__create_directory
 23433  00D614  C0AD  F0F5         	movff	?_fatfs_get_file_entry+1,??__create_directory+1
 23434  00D618  C0AE  F0F6         	movff	?_fatfs_get_file_entry+2,??__create_directory+2
 23435  00D61C  C0AF  F0F7         	movff	?_fatfs_get_file_entry+3,??__create_directory+3
 23436  00D620  0100               	movlb	0	; () banked
 23437  00D622  05F4               	decf	??__create_directory& (0+255),w,b
 23438  00D624  11F5               	iorwf	(??__create_directory+1)& (0+255),w,b
 23439  00D626  11F6               	iorwf	(??__create_directory+2)& (0+255),w,b
 23440  00D628  11F7               	iorwf	(??__create_directory+3)& (0+255),w,b
 23441  00D62A  E108               	bnz	l11709
 23442                           
 23443                           ; BSR set to: 0
 23444                           ;fat_filelib.c: 214: {
 23445                           ;fat_filelib.c: 215: _free_file(file);
 23446  00D62C  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23447  00D630  0101               	movlb	1	; () banked
 23448  00D632  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23449  00D636  EC99  F020         	call	__free_file	;wreg free
 23450  00D63A  D175               	goto	L71
 23451  00D63C                     l11709:
 23452                           
 23453                           ; BSR set to: 0
 23454                           ;fat_filelib.c: 217: }
 23455                           ;fat_filelib.c: 219: file->startcluster = 0;
 23456  00D63C  EE20 F004          	lfsr	2,4
 23457  00D640  0101               	movlb	1	; () banked
 23458  00D642  517C               	movf	__create_directory@file& (0+255),w,b
 23459  00D644  26D9               	addwf	fsr2l,f,c
 23460  00D646  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23461  00D648  22DA               	addwfc	fsr2h,f,c
 23462  00D64A  6ADE               	clrf	postinc2,c
 23463  00D64C  6ADE               	clrf	postinc2,c
 23464  00D64E  6ADE               	clrf	postinc2,c
 23465  00D650  6ADD               	clrf	postdec2,c
 23466                           
 23467                           ; BSR set to: 1
 23468                           ;fat_filelib.c: 222: if (!fatfs_allocate_free_space(&_fs, 1, &file->startcluster, 1))
 23469  00D652  0E09               	movlw	high __fs
 23470  00D654  0100               	movlb	0	; () banked
 23471  00D656  6F9F               	movwf	(fatfs_allocate_free_space@fs+1)& (0+255),b
 23472  00D658  0E78               	movlw	low __fs
 23473  00D65A  6F9E               	movwf	fatfs_allocate_free_space@fs& (0+255),b
 23474  00D65C  6BA1               	clrf	(fatfs_allocate_free_space@newFile+1)& (0+255),b
 23475  00D65E  0E01               	movlw	1
 23476  00D660  6FA0               	movwf	fatfs_allocate_free_space@newFile& (0+255),b
 23477  00D662  0E04               	movlw	4
 23478  00D664  0101               	movlb	1	; () banked
 23479  00D666  257C               	addwf	__create_directory@file& (0+255),w,b
 23480  00D668  0100               	movlb	0	; () banked
 23481  00D66A  6FA2               	movwf	fatfs_allocate_free_space@startCluster& (0+255),b
 23482  00D66C  0E00               	movlw	0
 23483  00D66E  0101               	movlb	1	; () banked
 23484  00D670  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23485  00D672  0100               	movlb	0	; () banked
 23486  00D674  6FA3               	movwf	(fatfs_allocate_free_space@startCluster+1)& (0+255),b
 23487  00D676  0E01               	movlw	1
 23488  00D678  6FA4               	movwf	fatfs_allocate_free_space@size& (0+255),b
 23489  00D67A  0E00               	movlw	0
 23490  00D67C  6BA5               	clrf	(fatfs_allocate_free_space@size+1)& (0+255),b
 23491  00D67E  6BA6               	clrf	(fatfs_allocate_free_space@size+2)& (0+255),b
 23492  00D680  6BA7               	clrf	(fatfs_allocate_free_space@size+3)& (0+255),b
 23493  00D682  ECAC  F044         	call	_fatfs_allocate_free_space	;wreg free
 23494  00D686  0100               	movlb	0	; () banked
 23495  00D688  519F               	movf	(?_fatfs_allocate_free_space+1)& (0+255),w,b
 23496  00D68A  119E               	iorwf	?_fatfs_allocate_free_space& (0+255),w,b
 23497  00D68C  E108               	bnz	l11719
 23498                           
 23499                           ; BSR set to: 0
 23500                           ;fat_filelib.c: 223: {
 23501                           ;fat_filelib.c: 224: _free_file(file);
 23502  00D68E  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23503  00D692  0101               	movlb	1	; () banked
 23504  00D694  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23505  00D698  EC99  F020         	call	__free_file	;wreg free
 23506  00D69C  D144               	goto	L71
 23507  00D69E                     l11719:
 23508                           
 23509                           ; BSR set to: 0
 23510                           ;fat_filelib.c: 226: }
 23511                           ;fat_filelib.c: 229: memset(file->file_data_sector, 0x00, 512);
 23512  00D69E  0E39               	movlw	57
 23513  00D6A0  0101               	movlb	1	; () banked
 23514  00D6A2  257C               	addwf	__create_directory@file& (0+255),w,b
 23515  00D6A4  6E01               	movwf	memset@p1,c
 23516  00D6A6  0E00               	movlw	0
 23517  00D6A8  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23518  00D6AA  6E02               	movwf	memset@p1+1,c
 23519  00D6AC  6A04               	clrf	memset@c+1,c
 23520  00D6AE  6A03               	clrf	memset@c,c
 23521  00D6B0  0E02               	movlw	2
 23522  00D6B2  6E06               	movwf	memset@n+1,c
 23523  00D6B4  0E00               	movlw	0
 23524  00D6B6  6A05               	clrf	memset@n,c
 23525  00D6B8  EC24  F020         	call	_memset	;wreg free
 23526                           
 23527                           ;fat_filelib.c: 230: for (i=0;i<_fs.sectors_per_cluster;i++)
 23528  00D6BC  0101               	movlb	1	; () banked
 23529  00D6BE  6B79               	clrf	(__create_directory@i+1)& (0+255),b
 23530  00D6C0  6B78               	clrf	__create_directory@i& (0+255),b
 23531  00D6C2  D032               	goto	l11733
 23532  00D6C4                     l11723:
 23533                           
 23534                           ;fat_filelib.c: 231: {
 23535                           ;fat_filelib.c: 232: if (!fatfs_write_sector(&_fs, file->startcluster, i, file->file_dat
      +                          a_sector))
 23536  00D6C4  0E09               	movlw	high __fs
 23537  00D6C6  6E21               	movwf	fatfs_write_sector@fs+1,c
 23538  00D6C8  0E78               	movlw	low __fs
 23539  00D6CA  6E20               	movwf	fatfs_write_sector@fs,c
 23540  00D6CC  EE20 F004          	lfsr	2,4
 23541  00D6D0  0101               	movlb	1	; () banked
 23542  00D6D2  517C               	movf	__create_directory@file& (0+255),w,b
 23543  00D6D4  26D9               	addwf	fsr2l,f,c
 23544  00D6D6  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23545  00D6D8  22DA               	addwfc	fsr2h,f,c
 23546  00D6DA  CFDE F022          	movff	postinc2,fatfs_write_sector@cluster
 23547  00D6DE  CFDE F023          	movff	postinc2,fatfs_write_sector@cluster+1
 23548  00D6E2  CFDE F024          	movff	postinc2,fatfs_write_sector@cluster+2
 23549  00D6E6  CFDE F025          	movff	postinc2,fatfs_write_sector@cluster+3
 23550  00D6EA  C178  F026         	movff	__create_directory@i,fatfs_write_sector@sector
 23551  00D6EE  C179  F027         	movff	__create_directory@i+1,fatfs_write_sector@sector+1
 23552  00D6F2  0E00               	movlw	0
 23553  00D6F4  BE27               	btfsc	fatfs_write_sector@sector+1,7,c
 23554  00D6F6  0EFF               	movlw	-1
 23555  00D6F8  6E28               	movwf	fatfs_write_sector@sector+2,c
 23556  00D6FA  6E29               	movwf	fatfs_write_sector@sector+3,c
 23557  00D6FC  0E39               	movlw	57
 23558  00D6FE  257C               	addwf	__create_directory@file& (0+255),w,b
 23559  00D700  6E2A               	movwf	fatfs_write_sector@target,c
 23560  00D702  0E00               	movlw	0
 23561  00D704  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23562  00D706  6E2B               	movwf	fatfs_write_sector@target+1,c
 23563  00D708  ECBB  F04F         	call	_fatfs_write_sector	;wreg free
 23564  00D70C  5021               	movf	?_fatfs_write_sector+1,w,c
 23565  00D70E  1020               	iorwf	?_fatfs_write_sector,w,c
 23566  00D710  E108               	bnz	l11731
 23567                           
 23568                           ;fat_filelib.c: 233: {
 23569                           ;fat_filelib.c: 234: _free_file(file);
 23570  00D712  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23571  00D716  0101               	movlb	1	; () banked
 23572  00D718  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23573  00D71C  EC99  F020         	call	__free_file	;wreg free
 23574  00D720  D102               	goto	L71
 23575  00D722                     l11731:
 23576  00D722  0101               	movlb	1	; () banked
 23577  00D724  4B78               	infsnz	__create_directory@i& (0+255),f,b
 23578  00D726  2B79               	incf	(__create_directory@i+1)& (0+255),f,b
 23579  00D728                     l11733:
 23580                           
 23581                           ; BSR set to: 1
 23582  00D728  C978  F0F4         	movff	__fs,??__create_directory
 23583  00D72C  C0F4  F0F5         	movff	??__create_directory,??__create_directory+1
 23584  00D730  0100               	movlb	0	; () banked
 23585  00D732  6BF6               	clrf	(??__create_directory+2)& (0+255),b
 23586  00D734  0101               	movlb	1	; () banked
 23587  00D736  5179               	movf	(__create_directory@i+1)& (0+255),w,b
 23588  00D738  0A80               	xorlw	128
 23589  00D73A  0100               	movlb	0	; () banked
 23590  00D73C  6FF7               	movwf	(??__create_directory+3)& (0+255),b
 23591  00D73E  51F5               	movf	(??__create_directory+1)& (0+255),w,b
 23592  00D740  0101               	movlb	1	; () banked
 23593  00D742  5D78               	subwf	__create_directory@i& (0+255),w,b
 23594  00D744  0100               	movlb	0	; () banked
 23595  00D746  51F6               	movf	(??__create_directory+2)& (0+255),w,b
 23596  00D748  0A80               	xorlw	128
 23597  00D74A  59F7               	subwfb	(??__create_directory+3)& (0+255),w,b
 23598  00D74C  E3BB               	bnc	l11723
 23599                           
 23600                           ; BSR set to: 0
 23601                           ;fat_filelib.c: 236: }
 23602                           ;fat_filelib.c: 237: }
 23603                           ;fat_filelib.c: 242: tailNum = 0;
 23604                           
 23605                           ; BSR set to: 0
 23606  00D74E  0101               	movlb	1	; () banked
 23607  00D750  6B7B               	clrf	(__create_directory@tailNum+1)& (0+255),b
 23608  00D752  6B7A               	clrf	__create_directory@tailNum& (0+255),b
 23609  00D754                     l11737:
 23610                           
 23611                           ; BSR set to: 1
 23612                           ;fat_filelib.c: 244: {
 23613                           ;fat_filelib.c: 246: fatfs_lfn_create_sfn(shortFilename, file->filename);
 23614  00D754  0E01               	movlw	high __create_directory@shortFilename
 23615  00D756  6E0A               	movwf	fatfs_lfn_create_sfn@sfn_output+1,c
 23616  00D758  0E4D               	movlw	low __create_directory@shortFilename
 23617  00D75A  6E09               	movwf	fatfs_lfn_create_sfn@sfn_output,c
 23618  00D75C  0E1C               	movlw	28
 23619  00D75E  0101               	movlb	1	; () banked
 23620  00D760  257C               	addwf	__create_directory@file& (0+255),w,b
 23621  00D762  6E0B               	movwf	fatfs_lfn_create_sfn@filename,c
 23622  00D764  0E00               	movlw	0
 23623  00D766  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23624  00D768  6E0C               	movwf	fatfs_lfn_create_sfn@filename+1,c
 23625  00D76A  EC66  F048         	call	_fatfs_lfn_create_sfn	;wreg free
 23626                           
 23627                           ;fat_filelib.c: 249: if (tailNum != 0)
 23628  00D76E  0101               	movlb	1	; () banked
 23629  00D770  517B               	movf	(__create_directory@tailNum+1)& (0+255),w,b
 23630  00D772  117A               	iorwf	__create_directory@tailNum& (0+255),w,b
 23631  00D774  E016               	bz	l11743
 23632                           
 23633                           ; BSR set to: 1
 23634                           ;fat_filelib.c: 250: fatfs_lfn_generate_tail((char*)file->shortfilename, shortFilename, 
      +                          tailNum);
 23635  00D776  0E26               	movlw	38
 23636  00D778  257C               	addwf	__create_directory@file& (0+255),w,b
 23637  00D77A  6E37               	movwf	fatfs_lfn_generate_tail@sfn_output,c
 23638  00D77C  0E00               	movlw	0
 23639  00D77E  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23640  00D780  6E38               	movwf	fatfs_lfn_generate_tail@sfn_output+1,c
 23641  00D782  0E01               	movlw	high __create_directory@shortFilename
 23642  00D784  6E3A               	movwf	fatfs_lfn_generate_tail@sfn_input+1,c
 23643  00D786  0E4D               	movlw	low __create_directory@shortFilename
 23644  00D788  6E39               	movwf	fatfs_lfn_generate_tail@sfn_input,c
 23645  00D78A  C17A  F03B         	movff	__create_directory@tailNum,fatfs_lfn_generate_tail@tailNum
 23646  00D78E  C17B  F03C         	movff	__create_directory@tailNum+1,fatfs_lfn_generate_tail@tailNum+1
 23647  00D792  0E00               	movlw	0
 23648  00D794  BE3C               	btfsc	fatfs_lfn_generate_tail@tailNum+1,7,c
 23649  00D796  0EFF               	movlw	-1
 23650  00D798  6E3D               	movwf	fatfs_lfn_generate_tail@tailNum+2,c
 23651  00D79A  6E3E               	movwf	fatfs_lfn_generate_tail@tailNum+3,c
 23652  00D79C  ECED  F02C         	call	_fatfs_lfn_generate_tail	;wreg free
 23653  00D7A0  D012               	goto	l11745
 23654  00D7A2                     l11743:
 23655                           
 23656                           ;fat_filelib.c: 252: else
 23657                           ;fat_filelib.c: 253: memcpy(file->shortfilename, shortFilename, 11);
 23658  00D7A2  0E26               	movlw	38
 23659  00D7A4  0101               	movlb	1	; () banked
 23660  00D7A6  257C               	addwf	__create_directory@file& (0+255),w,b
 23661  00D7A8  6E01               	movwf	memcpy@d1,c
 23662  00D7AA  0E00               	movlw	0
 23663  00D7AC  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23664  00D7AE  6E02               	movwf	memcpy@d1+1,c
 23665  00D7B0  0E20               	movlw	32
 23666  00D7B2  6E05               	movwf	memcpy@s1+2,c
 23667  00D7B4  0E01               	movlw	high __create_directory@shortFilename
 23668  00D7B6  6E04               	movwf	memcpy@s1+1,c
 23669  00D7B8  0E4D               	movlw	low __create_directory@shortFilename
 23670  00D7BA  6E03               	movwf	memcpy@s1,c
 23671  00D7BC  6A07               	clrf	memcpy@n+1,c
 23672  00D7BE  0E0B               	movlw	11
 23673  00D7C0  6E06               	movwf	memcpy@n,c
 23674  00D7C2  ECAE  F023         	call	_memcpy	;wreg free
 23675  00D7C6                     l11745:
 23676                           
 23677                           ;fat_filelib.c: 256: if (fatfs_sfn_exists(&_fs, file->parentcluster, (char*)file->shortf
      +                          ilename) == 0)
 23678  00D7C6  0E09               	movlw	high __fs
 23679  00D7C8  0100               	movlb	0	; () banked
 23680  00D7CA  6FAD               	movwf	(fatfs_sfn_exists@fs+1)& (0+255),b
 23681  00D7CC  0E78               	movlw	low __fs
 23682  00D7CE  6FAC               	movwf	fatfs_sfn_exists@fs& (0+255),b
 23683  00D7D0  C17C  FFD9         	movff	__create_directory@file,fsr2l
 23684  00D7D4  C17D  FFDA         	movff	__create_directory@file+1,fsr2h
 23685  00D7D8  CFDE F0AE          	movff	postinc2,fatfs_sfn_exists@Cluster
 23686  00D7DC  CFDE F0AF          	movff	postinc2,fatfs_sfn_exists@Cluster+1
 23687  00D7E0  CFDE F0B0          	movff	postinc2,fatfs_sfn_exists@Cluster+2
 23688  00D7E4  CFDE F0B1          	movff	postinc2,fatfs_sfn_exists@Cluster+3
 23689  00D7E8  0E26               	movlw	38
 23690  00D7EA  0101               	movlb	1	; () banked
 23691  00D7EC  257C               	addwf	__create_directory@file& (0+255),w,b
 23692  00D7EE  0100               	movlb	0	; () banked
 23693  00D7F0  6FB2               	movwf	fatfs_sfn_exists@shortname& (0+255),b
 23694  00D7F2  0E00               	movlw	0
 23695  00D7F4  0101               	movlb	1	; () banked
 23696  00D7F6  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23697  00D7F8  0100               	movlb	0	; () banked
 23698  00D7FA  6FB3               	movwf	(fatfs_sfn_exists@shortname+1)& (0+255),b
 23699  00D7FC  ECB9  F031         	call	_fatfs_sfn_exists	;wreg free
 23700  00D800  0100               	movlb	0	; () banked
 23701  00D802  51AD               	movf	(?_fatfs_sfn_exists+1)& (0+255),w,b
 23702  00D804  11AC               	iorwf	?_fatfs_sfn_exists& (0+255),w,b
 23703  00D806  E00A               	bz	l11753
 23704                           
 23705                           ; BSR set to: 0
 23706                           ;fat_filelib.c: 259: tailNum++;
 23707                           
 23708                           ; BSR set to: 0
 23709                           
 23710                           ; BSR set to: 0
 23711                           ;fat_filelib.c: 257: break;
 23712  00D808  0101               	movlb	1	; () banked
 23713  00D80A  4B7A               	infsnz	__create_directory@tailNum& (0+255),f,b
 23714  00D80C  2B7B               	incf	(__create_directory@tailNum+1)& (0+255),f,b
 23715                           
 23716                           ; BSR set to: 1
 23717                           ;fat_filelib.c: 260: }
 23718                           ;fat_filelib.c: 261: while (tailNum < 9999);
 23719  00D80E  517B               	movf	(__create_directory@tailNum+1)& (0+255),w,b
 23720  00D810  0A80               	xorlw	128
 23721  00D812  0F59               	addlw	-167
 23722  00D814  0E0F               	movlw	15
 23723  00D816  B4D8               	btfsc	status,2,c
 23724  00D818  5D7A               	subwf	__create_directory@tailNum& (0+255),w,b
 23725  00D81A  E39C               	bnc	l11737
 23726  00D81C                     l11753:
 23727                           
 23728                           ;fat_filelib.c: 264: if (tailNum == 9999)
 23729  00D81C  0101               	movlb	1	; () banked
 23730  00D81E  517B               	movf	(__create_directory@tailNum+1)& (0+255),w,b
 23731  00D820  0A27               	xorlw	39
 23732  00D822  0E0F               	movlw	15
 23733  00D824  B4D8               	btfsc	status,2,c
 23734  00D826  197A               	xorwf	__create_directory@tailNum& (0+255),w,b
 23735  00D828  E11F               	bnz	l11763
 23736                           
 23737                           ; BSR set to: 1
 23738                           ;fat_filelib.c: 265: {
 23739                           ;fat_filelib.c: 267: fatfs_free_cluster_chain(&_fs, file->startcluster);
 23740  00D82A  0E09               	movlw	high __fs
 23741  00D82C  0100               	movlb	0	; () banked
 23742  00D82E  6F81               	movwf	(fatfs_free_cluster_chain@fs+1)& (0+255),b
 23743  00D830  0E78               	movlw	low __fs
 23744  00D832  6F80               	movwf	fatfs_free_cluster_chain@fs& (0+255),b
 23745  00D834  EE20 F004          	lfsr	2,4
 23746  00D838  0101               	movlb	1	; () banked
 23747  00D83A  517C               	movf	__create_directory@file& (0+255),w,b
 23748  00D83C  26D9               	addwf	fsr2l,f,c
 23749  00D83E  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23750  00D840  22DA               	addwfc	fsr2h,f,c
 23751  00D842  CFDE F082          	movff	postinc2,fatfs_free_cluster_chain@start_cluster
 23752  00D846  CFDE F083          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+1
 23753  00D84A  CFDE F084          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+2
 23754  00D84E  0100               	movlb	0	; () banked
 23755  00D850  CFDE F085          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+3
 23756  00D854  EC9A  F02B         	call	_fatfs_free_cluster_chain	;wreg free
 23757                           
 23758                           ;fat_filelib.c: 269: _free_file(file);
 23759  00D858  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23760  00D85C  0101               	movlb	1	; () banked
 23761  00D85E  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23762  00D862  EC99  F020         	call	__free_file	;wreg free
 23763  00D866  D05F               	goto	L71
 23764  00D868                     l11763:
 23765                           
 23766                           ;fat_filelib.c: 271: }
 23767                           ;fat_filelib.c: 298: if (!fatfs_add_file_entry(&_fs, file->parentcluster, (char*)file->f
      +                          ilename, (char*)file->shortfilename, file->startcluster, 0, 1))
 23768  00D868  0E09               	movlw	high __fs
 23769  00D86A  0100               	movlb	0	; () banked
 23770  00D86C  6FCD               	movwf	(fatfs_add_file_entry@fs+1)& (0+255),b
 23771  00D86E  0E78               	movlw	low __fs
 23772  00D870  6FCC               	movwf	fatfs_add_file_entry@fs& (0+255),b
 23773  00D872  C17C  FFD9         	movff	__create_directory@file,fsr2l
 23774  00D876  C17D  FFDA         	movff	__create_directory@file+1,fsr2h
 23775  00D87A  CFDE F0CE          	movff	postinc2,fatfs_add_file_entry@dirCluster
 23776  00D87E  CFDE F0CF          	movff	postinc2,fatfs_add_file_entry@dirCluster+1
 23777  00D882  CFDE F0D0          	movff	postinc2,fatfs_add_file_entry@dirCluster+2
 23778  00D886  CFDE F0D1          	movff	postinc2,fatfs_add_file_entry@dirCluster+3
 23779  00D88A  0E1C               	movlw	28
 23780  00D88C  0101               	movlb	1	; () banked
 23781  00D88E  257C               	addwf	__create_directory@file& (0+255),w,b
 23782  00D890  0100               	movlb	0	; () banked
 23783  00D892  6FD2               	movwf	fatfs_add_file_entry@filename& (0+255),b
 23784  00D894  0E00               	movlw	0
 23785  00D896  0101               	movlb	1	; () banked
 23786  00D898  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23787  00D89A  0100               	movlb	0	; () banked
 23788  00D89C  6FD3               	movwf	(fatfs_add_file_entry@filename+1)& (0+255),b
 23789  00D89E  0E26               	movlw	38
 23790  00D8A0  0101               	movlb	1	; () banked
 23791  00D8A2  257C               	addwf	__create_directory@file& (0+255),w,b
 23792  00D8A4  0100               	movlb	0	; () banked
 23793  00D8A6  6FD4               	movwf	fatfs_add_file_entry@shortfilename& (0+255),b
 23794  00D8A8  0E00               	movlw	0
 23795  00D8AA  0101               	movlb	1	; () banked
 23796  00D8AC  217D               	addwfc	(__create_directory@file+1)& (0+255),w,b
 23797  00D8AE  0100               	movlb	0	; () banked
 23798  00D8B0  6FD5               	movwf	(fatfs_add_file_entry@shortfilename+1)& (0+255),b
 23799  00D8B2  EE20 F004          	lfsr	2,4
 23800  00D8B6  0101               	movlb	1	; () banked
 23801  00D8B8  517C               	movf	__create_directory@file& (0+255),w,b
 23802  00D8BA  26D9               	addwf	fsr2l,f,c
 23803  00D8BC  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23804  00D8BE  22DA               	addwfc	fsr2h,f,c
 23805  00D8C0  CFDE F0D6          	movff	postinc2,fatfs_add_file_entry@startCluster
 23806  00D8C4  CFDE F0D7          	movff	postinc2,fatfs_add_file_entry@startCluster+1
 23807  00D8C8  CFDE F0D8          	movff	postinc2,fatfs_add_file_entry@startCluster+2
 23808  00D8CC  CFDE F0D9          	movff	postinc2,fatfs_add_file_entry@startCluster+3
 23809  00D8D0  0100               	movlb	0	; () banked
 23810  00D8D2  6BDA               	clrf	fatfs_add_file_entry@size& (0+255),b
 23811  00D8D4  6BDB               	clrf	(fatfs_add_file_entry@size+1)& (0+255),b
 23812  00D8D6  6BDC               	clrf	(fatfs_add_file_entry@size+2)& (0+255),b
 23813  00D8D8  6BDD               	clrf	(fatfs_add_file_entry@size+3)& (0+255),b
 23814  00D8DA  6BDF               	clrf	(fatfs_add_file_entry@dir+1)& (0+255),b
 23815  00D8DC  0E01               	movlw	1
 23816  00D8DE  6FDE               	movwf	fatfs_add_file_entry@dir& (0+255),b
 23817  00D8E0  EC72  F056         	call	_fatfs_add_file_entry	;wreg free
 23818  00D8E4  0100               	movlb	0	; () banked
 23819  00D8E6  51CD               	movf	(?_fatfs_add_file_entry+1)& (0+255),w,b
 23820  00D8E8  11CC               	iorwf	?_fatfs_add_file_entry& (0+255),w,b
 23821  00D8EA  E121               	bnz	l11773
 23822                           
 23823                           ; BSR set to: 0
 23824                           ;fat_filelib.c: 299: {
 23825                           ;fat_filelib.c: 301: fatfs_free_cluster_chain(&_fs, file->startcluster);
 23826  00D8EC  0E09               	movlw	high __fs
 23827  00D8EE  6F81               	movwf	(fatfs_free_cluster_chain@fs+1)& (0+255),b
 23828  00D8F0  0E78               	movlw	low __fs
 23829  00D8F2  6F80               	movwf	fatfs_free_cluster_chain@fs& (0+255),b
 23830  00D8F4  EE20 F004          	lfsr	2,4
 23831  00D8F8  0101               	movlb	1	; () banked
 23832  00D8FA  517C               	movf	__create_directory@file& (0+255),w,b
 23833  00D8FC  26D9               	addwf	fsr2l,f,c
 23834  00D8FE  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23835  00D900  22DA               	addwfc	fsr2h,f,c
 23836  00D902  CFDE F082          	movff	postinc2,fatfs_free_cluster_chain@start_cluster
 23837  00D906  CFDE F083          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+1
 23838  00D90A  CFDE F084          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+2
 23839  00D90E  0100               	movlb	0	; () banked
 23840  00D910  CFDE F085          	movff	postinc2,fatfs_free_cluster_chain@start_cluster+3
 23841  00D914  EC9A  F02B         	call	_fatfs_free_cluster_chain	;wreg free
 23842                           
 23843                           ;fat_filelib.c: 303: _free_file(file);
 23844  00D918  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23845  00D91C  0101               	movlb	1	; () banked
 23846  00D91E  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23847  00D922  EC99  F020         	call	__free_file	;wreg free
 23848  00D926                     L71:
 23849                           
 23850                           ;fat_filelib.c: 304: return 0;
 23851  00D926  0E00               	movlw	0
 23852  00D928  0100               	movlb	0	; () banked
 23853  00D92A  6FF3               	movwf	(?__create_directory+1)& (0+255),b
 23854  00D92C  D054               	goto	L72
 23855  00D92E                     l11773:
 23856                           
 23857                           ; BSR set to: 0
 23858                           ;fat_filelib.c: 305: }
 23859                           ;fat_filelib.c: 308: file->filelength = 0;
 23860  00D92E  EE20 F00C          	lfsr	2,12
 23861  00D932  0101               	movlb	1	; () banked
 23862  00D934  517C               	movf	__create_directory@file& (0+255),w,b
 23863  00D936  26D9               	addwf	fsr2l,f,c
 23864  00D938  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23865  00D93A  22DA               	addwfc	fsr2h,f,c
 23866  00D93C  6ADE               	clrf	postinc2,c
 23867  00D93E  6ADE               	clrf	postinc2,c
 23868  00D940  6ADE               	clrf	postinc2,c
 23869  00D942  6ADD               	clrf	postdec2,c
 23870                           
 23871                           ;fat_filelib.c: 309: file->bytenum = 0;
 23872  00D944  EE20 F008          	lfsr	2,8
 23873  00D948  517C               	movf	__create_directory@file& (0+255),w,b
 23874  00D94A  26D9               	addwf	fsr2l,f,c
 23875  00D94C  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23876  00D94E  22DA               	addwfc	fsr2h,f,c
 23877  00D950  6ADE               	clrf	postinc2,c
 23878  00D952  6ADE               	clrf	postinc2,c
 23879  00D954  6ADE               	clrf	postinc2,c
 23880  00D956  6ADD               	clrf	postdec2,c
 23881                           
 23882                           ;fat_filelib.c: 310: file->file_data_address = 0xFFFFFFFF;
 23883  00D958  EE22 F039          	lfsr	2,569
 23884  00D95C  517C               	movf	__create_directory@file& (0+255),w,b
 23885  00D95E  26D9               	addwf	fsr2l,f,c
 23886  00D960  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23887  00D962  22DA               	addwfc	fsr2h,f,c
 23888  00D964  68DE               	setf	postinc2,c
 23889  00D966  68DE               	setf	postinc2,c
 23890  00D968  68DE               	setf	postinc2,c
 23891  00D96A  68DD               	setf	postdec2,c
 23892                           
 23893                           ;fat_filelib.c: 311: file->file_data_dirty = 0;
 23894  00D96C  EE22 F03D          	lfsr	2,573
 23895  00D970  517C               	movf	__create_directory@file& (0+255),w,b
 23896  00D972  26D9               	addwf	fsr2l,f,c
 23897  00D974  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23898  00D976  22DA               	addwfc	fsr2h,f,c
 23899  00D978  6ADE               	clrf	postinc2,c
 23900  00D97A  6ADD               	clrf	postdec2,c
 23901                           
 23902                           ;fat_filelib.c: 312: file->filelength_changed = 0;
 23903  00D97C  EE20 F010          	lfsr	2,16
 23904  00D980  517C               	movf	__create_directory@file& (0+255),w,b
 23905  00D982  26D9               	addwf	fsr2l,f,c
 23906  00D984  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23907  00D986  22DA               	addwfc	fsr2h,f,c
 23908  00D988  6ADE               	clrf	postinc2,c
 23909  00D98A  6ADD               	clrf	postdec2,c
 23910                           
 23911                           ;fat_filelib.c: 315: file->last_fat_lookup.ClusterIdx = 0xFFFFFFFF;
 23912  00D98C  EE20 F031          	lfsr	2,49
 23913  00D990  517C               	movf	__create_directory@file& (0+255),w,b
 23914  00D992  26D9               	addwf	fsr2l,f,c
 23915  00D994  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23916  00D996  22DA               	addwfc	fsr2h,f,c
 23917  00D998  68DE               	setf	postinc2,c
 23918  00D99A  68DE               	setf	postinc2,c
 23919  00D99C  68DE               	setf	postinc2,c
 23920  00D99E  68DD               	setf	postdec2,c
 23921                           
 23922                           ;fat_filelib.c: 316: file->last_fat_lookup.CurrentCluster = 0xFFFFFFFF;
 23923  00D9A0  EE20 F035          	lfsr	2,53
 23924  00D9A4  517C               	movf	__create_directory@file& (0+255),w,b
 23925  00D9A6  26D9               	addwf	fsr2l,f,c
 23926  00D9A8  517D               	movf	(__create_directory@file+1)& (0+255),w,b
 23927  00D9AA  22DA               	addwfc	fsr2h,f,c
 23928  00D9AC  68DE               	setf	postinc2,c
 23929  00D9AE  68DE               	setf	postinc2,c
 23930  00D9B0  68DE               	setf	postinc2,c
 23931  00D9B2  68DD               	setf	postdec2,c
 23932                           
 23933                           ; BSR set to: 1
 23934                           ;fat_filelib.c: 318: fatfs_fat_purge(&_fs);
 23935  00D9B4  0E09               	movlw	high __fs
 23936  00D9B6  6E35               	movwf	fatfs_fat_purge@fs+1,c
 23937  00D9B8  0E78               	movlw	low __fs
 23938  00D9BA  6E34               	movwf	fatfs_fat_purge@fs,c
 23939  00D9BC  ECCD  F022         	call	_fatfs_fat_purge	;wreg free
 23940                           
 23941                           ;fat_filelib.c: 320: _free_file(file);
 23942  00D9C0  C17D  F010         	movff	__create_directory@file+1,__free_file@file+1
 23943  00D9C4  0101               	movlb	1	; () banked
 23944  00D9C6  C17C  F00F         	movff	__create_directory@file,__free_file@file
 23945  00D9CA  EC99  F020         	call	__free_file	;wreg free
 23946                           
 23947                           ;fat_filelib.c: 321: return 1;
 23948  00D9CE  0E00               	movlw	0
 23949  00D9D0  0100               	movlb	0	; () banked
 23950  00D9D2  6FF3               	movwf	(?__create_directory+1)& (0+255),b
 23951  00D9D4  0E01               	movlw	1
 23952  00D9D6                     L72:
 23953  00D9D6  0100               	movlb	0	; () banked
 23954  00D9D8  6FF2               	movwf	?__create_directory& (0+255),b
 23955                           
 23956                           ; BSR set to: 0
 23957                           
 23958                           ; BSR set to: 0
 23959  00D9DA  0012               	return	
 23960  00D9DC                     __end_of__create_directory:
 23961                           	opt stack 0
 23962                           tosu	equ	0xFFF
 23963                           tosh	equ	0xFFE
 23964                           tosl	equ	0xFFD
 23965                           pclath	equ	0xFFA
 23966                           tblptru	equ	0xFF8
 23967                           tblptrh	equ	0xFF7
 23968                           tblptrl	equ	0xFF6
 23969                           tablat	equ	0xFF5
 23970                           prodh	equ	0xFF4
 23971                           prodl	equ	0xFF3
 23972                           indf0	equ	0xFEF
 23973                           postinc0	equ	0xFEE
 23974                           fsr0h	equ	0xFEA
 23975                           fsr0l	equ	0xFE9
 23976                           wreg	equ	0xFE8
 23977                           indf1	equ	0xFE7
 23978                           postinc1	equ	0xFE6
 23979                           postdec1	equ	0xFE5
 23980                           fsr1h	equ	0xFE2
 23981                           fsr1l	equ	0xFE1
 23982                           indf2	equ	0xFDF
 23983                           postinc2	equ	0xFDE
 23984                           postdec2	equ	0xFDD
 23985                           fsr2h	equ	0xFDA
 23986                           fsr2l	equ	0xFD9
 23987                           status	equ	0xFD8
 23988                           
 23989 ;; *************** function _fatfs_split_path *****************
 23990 ;; Defined at:
 23991 ;;		line 151 in file "fat_string.c"
 23992 ;; Parameters:    Size  Location     Type
 23993 ;;  full_path       2   28[COMRAM] PTR unsigned char 
 23994 ;;		 -> s(17), m(30), 
 23995 ;;  path            2   30[COMRAM] PTR unsigned char 
 23996 ;;		 -> RAM(3967), NULL(0), 
 23997 ;;  max_path        2   32[COMRAM] int 
 23998 ;;  filename        2   34[COMRAM] PTR unsigned char 
 23999 ;;		 -> RAM(3967), NULL(0), 
 24000 ;;  max_filename    2   36[COMRAM] int 
 24001 ;; Auto vars:     Size  Location     Type
 24002 ;;  strindex        2   44[COMRAM] int 
 24003 ;;  levels          2   42[COMRAM] int 
 24004 ;; Return value:  Size  Location     Type
 24005 ;;                  2   28[COMRAM] int 
 24006 ;; Registers used:
 24007 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 24008 ;; Tracked objects:
 24009 ;;		On entry : 0/0
 24010 ;;		On exit  : 0/0
 24011 ;;		Unchanged: 0/0
 24012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24013 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24014 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24015 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24016 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24017 ;;Total ram usage:       18 bytes
 24018 ;; Hardware stack levels used:    1
 24019 ;; Hardware stack levels required when called:    2
 24020 ;; This function calls:
 24021 ;;		_fatfs_get_substring
 24022 ;;		_fatfs_total_path_levels
 24023 ;;		_memcpy
 24024 ;;		_strlen
 24025 ;; This function is called by:
 24026 ;;		__create_directory
 24027 ;;		__open_file
 24028 ;;		__create_file
 24029 ;; This function uses a non-reentrant model
 24030 ;;
 24031                           
 24032                           	psect	text67
 24033  005F82                     __ptext67:
 24034                           	opt stack 0
 24035  005F82                     _fatfs_split_path:
 24036                           	opt stack 23
 24037                           
 24038                           ;fat_string.c: 153: int strindex;
 24039                           ;fat_string.c: 156: int levels = fatfs_total_path_levels(full_path);
 24040                           
 24041                           ; BSR set to: 0
 24042                           ;incstack = 0
 24043  005F82  C01E  F002         	movff	fatfs_split_path@full_path+1,fatfs_total_path_levels@path+1
 24044  005F86  C01D  F001         	movff	fatfs_split_path@full_path,fatfs_total_path_levels@path
 24045  005F8A  EC71  F033         	call	_fatfs_total_path_levels	;wreg free
 24046  005F8E  C001  F02B         	movff	?_fatfs_total_path_levels,fatfs_split_path@levels
 24047  005F92  C002  F02C         	movff	?_fatfs_total_path_levels+1,fatfs_split_path@levels+1
 24048                           
 24049                           ;fat_string.c: 157: if (levels == -1)
 24050  005F96  282B               	incf	fatfs_split_path@levels,w,c
 24051  005F98  B4D8               	btfsc	status,2,c
 24052  005F9A  282C               	incf	fatfs_split_path@levels+1,w,c
 24053  005F9C  E015               	bz	u11910
 24054                           
 24055                           ;fat_string.c: 161: if (fatfs_get_substring(full_path, levels, filename, max_filename) !
      +                          = 0)
 24056                           
 24057                           ;fat_string.c: 158: return -1;
 24058  005F9E  C01E  F008         	movff	fatfs_split_path@full_path+1,fatfs_get_substring@path+1
 24059  005FA2  C01D  F007         	movff	fatfs_split_path@full_path,fatfs_get_substring@path
 24060  005FA6  C02B  F009         	movff	fatfs_split_path@levels,fatfs_get_substring@levelreq
 24061  005FAA  C02C  F00A         	movff	fatfs_split_path@levels+1,fatfs_get_substring@levelreq+1
 24062  005FAE  C024  F00C         	movff	fatfs_split_path@filename+1,fatfs_get_substring@output+1
 24063  005FB2  C023  F00B         	movff	fatfs_split_path@filename,fatfs_get_substring@output
 24064  005FB6  C025  F00D         	movff	fatfs_split_path@max_filename,fatfs_get_substring@max_len
 24065  005FBA  C026  F00E         	movff	fatfs_split_path@max_filename+1,fatfs_get_substring@max_len+1
 24066  005FBE  EC62  F03D         	call	_fatfs_get_substring	;wreg free
 24067  005FC2  5008               	movf	?_fatfs_get_substring+1,w,c
 24068  005FC4  1007               	iorwf	?_fatfs_get_substring,w,c
 24069  005FC6  E003               	bz	l10561
 24070  005FC8                     u11910:
 24071                           
 24072                           ;fat_string.c: 162: return -1;
 24073  005FC8  681D               	setf	?_fatfs_split_path,c
 24074  005FCA  681E               	setf	?_fatfs_split_path+1,c
 24075  005FCC  D053               	goto	l1091
 24076  005FCE                     l10561:
 24077                           
 24078                           ;fat_string.c: 165: if (levels == 0)
 24079  005FCE  502C               	movf	fatfs_split_path@levels+1,w,c
 24080  005FD0  102B               	iorwf	fatfs_split_path@levels,w,c
 24081  005FD2  E105               	bnz	l10565
 24082                           
 24083                           ;fat_string.c: 166: path[0] = '\0';
 24084  005FD4  C01F  FFD9         	movff	fatfs_split_path@path,fsr2l
 24085  005FD8  C020  FFDA         	movff	fatfs_split_path@path+1,fsr2h
 24086  005FDC  D047               	goto	L73
 24087  005FDE                     l10565:
 24088                           
 24089                           ;fat_string.c: 167: else
 24090                           ;fat_string.c: 168: {
 24091                           ;fat_string.c: 169: strindex = (int)strlen(full_path) - (int)strlen(filename);
 24092  005FDE  C01E  F002         	movff	fatfs_split_path@full_path+1,strlen@s+1
 24093  005FE2  C01D  F001         	movff	fatfs_split_path@full_path,strlen@s
 24094  005FE6  EC7B  F022         	call	_strlen	;wreg free
 24095  005FEA  C001  F027         	movff	?_strlen,??_fatfs_split_path
 24096  005FEE  C002  F028         	movff	?_strlen+1,??_fatfs_split_path+1
 24097  005FF2  C024  F002         	movff	fatfs_split_path@filename+1,strlen@s+1
 24098  005FF6  C023  F001         	movff	fatfs_split_path@filename,strlen@s
 24099  005FFA  EC7B  F022         	call	_strlen	;wreg free
 24100  005FFE  1E01               	comf	?_strlen,f,c
 24101  006000  1E02               	comf	?_strlen+1,f,c
 24102  006002  4A01               	infsnz	?_strlen,f,c
 24103  006004  2A02               	incf	?_strlen+1,f,c
 24104  006006  5001               	movf	?_strlen,w,c
 24105  006008  2427               	addwf	??_fatfs_split_path,w,c
 24106  00600A  6E2D               	movwf	fatfs_split_path@strindex,c
 24107  00600C  5002               	movf	?_strlen+1,w,c
 24108  00600E  2028               	addwfc	??_fatfs_split_path+1,w,c
 24109  006010  6E2E               	movwf	fatfs_split_path@strindex+1,c
 24110                           
 24111                           ;fat_string.c: 170: if (strindex > max_path)
 24112  006012  5022               	movf	fatfs_split_path@max_path+1,w,c
 24113  006014  0A80               	xorlw	128
 24114  006016  6E27               	movwf	??_fatfs_split_path& (0+255),c
 24115  006018  502D               	movf	fatfs_split_path@strindex,w,c
 24116  00601A  5C21               	subwf	fatfs_split_path@max_path,w,c
 24117  00601C  502E               	movf	fatfs_split_path@strindex+1,w,c
 24118  00601E  0A80               	xorlw	128
 24119  006020  5827               	subwfb	??_fatfs_split_path& (0+255),w,c
 24120  006022  E204               	bc	l10571
 24121                           
 24122                           ;fat_string.c: 171: strindex = max_path;
 24123  006024  C021  F02D         	movff	fatfs_split_path@max_path,fatfs_split_path@strindex
 24124  006028  C022  F02E         	movff	fatfs_split_path@max_path+1,fatfs_split_path@strindex+1
 24125  00602C                     l10571:
 24126                           
 24127                           ;fat_string.c: 173: memcpy(path, full_path, strindex);
 24128  00602C  C020  F002         	movff	fatfs_split_path@path+1,memcpy@d1+1
 24129  006030  C01F  F001         	movff	fatfs_split_path@path,memcpy@d1
 24130  006034  0E20               	movlw	32
 24131  006036  6E05               	movwf	memcpy@s1+2,c
 24132  006038  C01E  F004         	movff	fatfs_split_path@full_path+1,memcpy@s1+1
 24133  00603C  C01D  F003         	movff	fatfs_split_path@full_path,memcpy@s1
 24134  006040  C02D  F006         	movff	fatfs_split_path@strindex,memcpy@n
 24135  006044  C02E  F007         	movff	fatfs_split_path@strindex+1,memcpy@n+1
 24136  006048  ECAE  F023         	call	_memcpy	;wreg free
 24137                           
 24138                           ;fat_string.c: 174: path[strindex-1] = '\0';
 24139  00604C  6827               	setf	??_fatfs_split_path& (0+255),c
 24140  00604E  6828               	setf	(??_fatfs_split_path+1)& (0+255),c
 24141  006050  C02D  F029         	movff	fatfs_split_path@strindex,??_fatfs_split_path+2
 24142  006054  C02E  F02A         	movff	fatfs_split_path@strindex+1,??_fatfs_split_path+3
 24143  006058  5027               	movf	??_fatfs_split_path,w,c
 24144  00605A  2629               	addwf	??_fatfs_split_path+2,f,c
 24145  00605C  5028               	movf	??_fatfs_split_path+1,w,c
 24146  00605E  222A               	addwfc	??_fatfs_split_path+3,f,c
 24147  006060  5029               	movf	??_fatfs_split_path+2,w,c
 24148  006062  241F               	addwf	fatfs_split_path@path,w,c
 24149  006064  6ED9               	movwf	fsr2l,c
 24150  006066  502A               	movf	??_fatfs_split_path+3,w,c
 24151  006068  2020               	addwfc	fatfs_split_path@path+1,w,c
 24152  00606A  6EDA               	movwf	fsr2h,c
 24153  00606C                     L73:
 24154  00606C  0E00               	movlw	0
 24155  00606E  6EDF               	movwf	indf2,c
 24156                           
 24157                           ;fat_string.c: 175: }
 24158                           ;fat_string.c: 177: return 0;
 24159  006070  6E1E               	movwf	?_fatfs_split_path+1,c
 24160  006072  6E1D               	movwf	?_fatfs_split_path,c
 24161  006074                     l1091:
 24162  006074  0012               	return	
 24163  006076                     __end_of_fatfs_split_path:
 24164                           	opt stack 0
 24165                           tosu	equ	0xFFF
 24166                           tosh	equ	0xFFE
 24167                           tosl	equ	0xFFD
 24168                           pclath	equ	0xFFA
 24169                           tblptru	equ	0xFF8
 24170                           tblptrh	equ	0xFF7
 24171                           tblptrl	equ	0xFF6
 24172                           tablat	equ	0xFF5
 24173                           prodh	equ	0xFF4
 24174                           prodl	equ	0xFF3
 24175                           indf0	equ	0xFEF
 24176                           postinc0	equ	0xFEE
 24177                           fsr0h	equ	0xFEA
 24178                           fsr0l	equ	0xFE9
 24179                           wreg	equ	0xFE8
 24180                           indf1	equ	0xFE7
 24181                           postinc1	equ	0xFE6
 24182                           postdec1	equ	0xFE5
 24183                           fsr1h	equ	0xFE2
 24184                           fsr1l	equ	0xFE1
 24185                           indf2	equ	0xFDF
 24186                           postinc2	equ	0xFDE
 24187                           postdec2	equ	0xFDD
 24188                           fsr2h	equ	0xFDA
 24189                           fsr2l	equ	0xFD9
 24190                           status	equ	0xFD8
 24191                           
 24192 ;; *************** function _fatfs_sfn_exists *****************
 24193 ;; Defined at:
 24194 ;;		line 512 in file "fat_access.c"
 24195 ;; Parameters:    Size  Location     Type
 24196 ;;  fs              2   44[BANK0 ] PTR struct fatfs
 24197 ;;		 -> _fs(1095), 
 24198 ;;  Cluster         4   46[BANK0 ] unsigned long 
 24199 ;;  shortname       2   50[BANK0 ] PTR unsigned char 
 24200 ;;		 -> RAM(3967), NULL(0), 
 24201 ;; Auto vars:     Size  Location     Type
 24202 ;;  directoryEnt    2   59[BANK0 ] PTR struct fat_dir_entry
 24203 ;;		 -> _fs.currentsector.sector(512), 
 24204 ;;  recordoffset    2   56[BANK0 ] unsigned short 
 24205 ;;  x               2   54[BANK0 ] int 
 24206 ;;  item            1   58[BANK0 ] unsigned char 
 24207 ;; Return value:  Size  Location     Type
 24208 ;;                  2   44[BANK0 ] int 
 24209 ;; Registers used:
 24210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24211 ;; Tracked objects:
 24212 ;;		On entry : 0/0
 24213 ;;		On exit  : 0/0
 24214 ;;		Unchanged: 0/0
 24215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24216 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24217 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24218 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24219 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24220 ;;Total ram usage:       17 bytes
 24221 ;; Hardware stack levels used:    1
 24222 ;; Hardware stack levels required when called:    7
 24223 ;; This function calls:
 24224 ;;		_fatfs_entry_lfn_invalid
 24225 ;;		_fatfs_entry_lfn_text
 24226 ;;		_fatfs_entry_sfn_only
 24227 ;;		_fatfs_sector_reader
 24228 ;;		_strncmp
 24229 ;; This function is called by:
 24230 ;;		__create_directory
 24231 ;;		__create_file
 24232 ;; This function uses a non-reentrant model
 24233 ;;
 24234                           
 24235                           	psect	text68
 24236  006372                     __ptext68:
 24237                           	opt stack 0
 24238  006372                     _fatfs_sfn_exists:
 24239                           	opt stack 18
 24240                           
 24241                           ;fat_access.c: 514: uint8 item=0;
 24242                           
 24243                           ;incstack = 0
 24244  006372  0100               	movlb	0	; () banked
 24245  006374  6BBA               	clrf	fatfs_sfn_exists@item& (0+255),b
 24246                           
 24247                           ;fat_access.c: 515: uint16 recordoffset = 0;
 24248  006376  6BB9               	clrf	(fatfs_sfn_exists@recordoffset+1)& (0+255),b
 24249  006378  6BB8               	clrf	fatfs_sfn_exists@recordoffset& (0+255),b
 24250                           
 24251                           ;fat_access.c: 516: int x=0;
 24252  00637A  6BB7               	clrf	(fatfs_sfn_exists@x+1)& (0+255),b
 24253  00637C  6BB6               	clrf	fatfs_sfn_exists@x& (0+255),b
 24254  00637E                     l10387:
 24255                           
 24256                           ; BSR set to: 0
 24257                           ;fat_access.c: 521: {
 24258                           ;fat_access.c: 523: if (fatfs_sector_reader(fs, Cluster, x++, 0))
 24259  00637E  C0AD  F081         	movff	fatfs_sfn_exists@fs+1,fatfs_sector_reader@fs+1
 24260  006382  C0AC  F080         	movff	fatfs_sfn_exists@fs,fatfs_sector_reader@fs
 24261  006386  C0AE  F082         	movff	fatfs_sfn_exists@Cluster,fatfs_sector_reader@start_cluster
 24262  00638A  C0AF  F083         	movff	fatfs_sfn_exists@Cluster+1,fatfs_sector_reader@start_cluster+1
 24263  00638E  C0B0  F084         	movff	fatfs_sfn_exists@Cluster+2,fatfs_sector_reader@start_cluster+2
 24264  006392  C0B1  F085         	movff	fatfs_sfn_exists@Cluster+3,fatfs_sector_reader@start_cluster+3
 24265  006396  0100               	movlb	0	; () banked
 24266  006398  51B6               	movf	fatfs_sfn_exists@x& (0+255),w,b
 24267  00639A  6FB4               	movwf	??_fatfs_sfn_exists& (0+255),b
 24268  00639C  51B7               	movf	(fatfs_sfn_exists@x+1)& (0+255),w,b
 24269  00639E  6FB5               	movwf	(??_fatfs_sfn_exists+1)& (0+255),b
 24270  0063A0  4BB6               	infsnz	fatfs_sfn_exists@x& (0+255),f,b
 24271  0063A2  2BB7               	incf	(fatfs_sfn_exists@x+1)& (0+255),f,b
 24272  0063A4  C0B4  F086         	movff	??_fatfs_sfn_exists,fatfs_sector_reader@offset
 24273  0063A8  C0B5  F087         	movff	??_fatfs_sfn_exists+1,fatfs_sector_reader@offset+1
 24274  0063AC  0E00               	movlw	0
 24275  0063AE  BF87               	btfsc	(fatfs_sector_reader@offset+1)& (0+255),7,b
 24276  0063B0  0EFF               	movlw	-1
 24277  0063B2  6F88               	movwf	(fatfs_sector_reader@offset+2)& (0+255),b
 24278  0063B4  6F89               	movwf	(fatfs_sector_reader@offset+3)& (0+255),b
 24279  0063B6  0E00               	movlw	0
 24280  0063B8  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
 24281  0063BA  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
 24282  0063BC  ECD6  F052         	call	_fatfs_sector_reader	;wreg free
 24283  0063C0  0100               	movlb	0	; () banked
 24284  0063C2  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
 24285  0063C4  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
 24286  0063C6  E053               	bz	l10419
 24287                           
 24288                           ; BSR set to: 0
 24289                           ;fat_access.c: 524: {
 24290                           ;fat_access.c: 526: for (item = 0; item < (512 / 32); item++)
 24291  0063C8  6BBA               	clrf	fatfs_sfn_exists@item& (0+255),b
 24292                           
 24293                           ; BSR set to: 0
 24294  0063CA  0E0F               	movlw	15
 24295  0063CC  65BA               	cpfsgt	fatfs_sfn_exists@item& (0+255),b
 24296  0063CE  D001               	goto	l10395
 24297  0063D0  D7D6               	goto	l10387
 24298  0063D2                     l10395:
 24299                           
 24300                           ; BSR set to: 0
 24301                           ;fat_access.c: 527: {
 24302                           ;fat_access.c: 529: recordoffset = 32 * item;
 24303  0063D2  0100               	movlb	0	; () banked
 24304  0063D4  51BA               	movf	fatfs_sfn_exists@item& (0+255),w,b
 24305  0063D6  0D20               	mullw	32
 24306  0063D8  CFF3 F0B8          	movff	prodl,fatfs_sfn_exists@recordoffset
 24307  0063DC  CFF4 F0B9          	movff	prodh,fatfs_sfn_exists@recordoffset+1
 24308                           
 24309                           ; BSR set to: 0
 24310                           ;fat_access.c: 532: directoryEntry = (struct fat_dir_entry*)(fs->currentsector.sector+re
      +                          cordoffset);
 24311  0063E0  C0AC  F0B4         	movff	fatfs_sfn_exists@fs,??_fatfs_sfn_exists
 24312  0063E4  C0AD  F0B5         	movff	fatfs_sfn_exists@fs+1,??_fatfs_sfn_exists+1
 24313  0063E8  51B8               	movf	fatfs_sfn_exists@recordoffset& (0+255),w,b
 24314  0063EA  27B4               	addwf	??_fatfs_sfn_exists& (0+255),f,b
 24315  0063EC  51B9               	movf	(fatfs_sfn_exists@recordoffset+1)& (0+255),w,b
 24316  0063EE  23B5               	addwfc	(??_fatfs_sfn_exists+1)& (0+255),f,b
 24317  0063F0  0E31               	movlw	49
 24318  0063F2  25B4               	addwf	??_fatfs_sfn_exists& (0+255),w,b
 24319  0063F4  6FBB               	movwf	fatfs_sfn_exists@directoryEntry& (0+255),b
 24320  0063F6  0E00               	movlw	0
 24321  0063F8  21B5               	addwfc	(??_fatfs_sfn_exists+1)& (0+255),w,b
 24322  0063FA  6FBC               	movwf	(fatfs_sfn_exists@directoryEntry+1)& (0+255),b
 24323                           
 24324                           ; BSR set to: 0
 24325                           ;fat_access.c: 536: if (fatfs_entry_lfn_text(directoryEntry) )
 24326  0063FC  C0BC  F002         	movff	fatfs_sfn_exists@directoryEntry+1,fatfs_entry_lfn_text@entry+1
 24327  006400  C0BB  F001         	movff	fatfs_sfn_exists@directoryEntry,fatfs_entry_lfn_text@entry
 24328  006404  ECFA  F01F         	call	_fatfs_entry_lfn_text	;wreg free
 24329  006408  5002               	movf	?_fatfs_entry_lfn_text+1,w,c
 24330  00640A  1001               	iorwf	?_fatfs_entry_lfn_text,w,c
 24331  00640C  E12A               	bnz	l10415
 24332                           
 24333                           ;fat_access.c: 540: else if (fatfs_entry_lfn_invalid(directoryEntry) )
 24334                           
 24335                           ;fat_access.c: 537: ;
 24336  00640E  C0BC  F002         	movff	fatfs_sfn_exists@directoryEntry+1,fatfs_entry_lfn_invalid@entry+1
 24337  006412  0100               	movlb	0	; () banked
 24338  006414  C0BB  F001         	movff	fatfs_sfn_exists@directoryEntry,fatfs_entry_lfn_invalid@entry
 24339  006418  ECA4  F022         	call	_fatfs_entry_lfn_invalid	;wreg free
 24340  00641C  5002               	movf	?_fatfs_entry_lfn_invalid+1,w,c
 24341  00641E  1001               	iorwf	?_fatfs_entry_lfn_invalid,w,c
 24342  006420  E120               	bnz	l10415
 24343                           
 24344                           ;fat_access.c: 542: else
 24345                           ;fat_access.c: 545: if (fatfs_entry_sfn_only(directoryEntry) )
 24346                           
 24347                           ;fat_access.c: 541: ;
 24348  006422  C0BC  F002         	movff	fatfs_sfn_exists@directoryEntry+1,fatfs_entry_sfn_only@entry+1
 24349  006426  0100               	movlb	0	; () banked
 24350  006428  C0BB  F001         	movff	fatfs_sfn_exists@directoryEntry,fatfs_entry_sfn_only@entry
 24351  00642C  ECD0  F024         	call	_fatfs_entry_sfn_only	;wreg free
 24352  006430  5002               	movf	?_fatfs_entry_sfn_only+1,w,c
 24353  006432  1001               	iorwf	?_fatfs_entry_sfn_only,w,c
 24354  006434  E016               	bz	l10415
 24355                           
 24356                           ;fat_access.c: 546: {
 24357                           ;fat_access.c: 547: if (strncmp((const char*)directoryEntry->Name, shortname, 11)==0)
 24358  006436  C0BC  F002         	movff	fatfs_sfn_exists@directoryEntry+1,strncmp@s1+1
 24359  00643A  C0BB  F001         	movff	fatfs_sfn_exists@directoryEntry,strncmp@s1
 24360  00643E  C0B3  F004         	movff	fatfs_sfn_exists@shortname+1,strncmp@s2+1
 24361  006442  0100               	movlb	0	; () banked
 24362  006444  C0B2  F003         	movff	fatfs_sfn_exists@shortname,strncmp@s2
 24363  006448  6A06               	clrf	strncmp@len+1,c
 24364  00644A  0E0B               	movlw	11
 24365  00644C  6E05               	movwf	strncmp@len,c
 24366  00644E  EC11  F026         	call	_strncmp	;wreg free
 24367  006452  5002               	movf	?_strncmp+1,w,c
 24368  006454  1001               	iorwf	?_strncmp,w,c
 24369  006456  E105               	bnz	l10415
 24370                           
 24371                           ;fat_access.c: 548: return 1;
 24372  006458  0E00               	movlw	0
 24373  00645A  0100               	movlb	0	; () banked
 24374  00645C  6FAD               	movwf	(?_fatfs_sfn_exists+1)& (0+255),b
 24375  00645E  0E01               	movlw	1
 24376  006460  D009               	goto	L74
 24377  006462                     l10415:
 24378  006462  0100               	movlb	0	; () banked
 24379  006464  2BBA               	incf	fatfs_sfn_exists@item& (0+255),f,b
 24380                           
 24381                           ; BSR set to: 0
 24382  006466  0E0F               	movlw	15
 24383  006468  65BA               	cpfsgt	fatfs_sfn_exists@item& (0+255),b
 24384  00646A  D7B3               	goto	l10395
 24385  00646C  D788               	goto	l10387
 24386  00646E                     l10419:
 24387                           
 24388                           ; BSR set to: 0
 24389                           ;fat_access.c: 554: }
 24390                           ;fat_access.c: 556: return 0;
 24391  00646E  0E00               	movlw	0
 24392  006470  0100               	movlb	0	; () banked
 24393  006472  6FAD               	movwf	(?_fatfs_sfn_exists+1)& (0+255),b
 24394  006474                     L74:
 24395  006474  0100               	movlb	0	; () banked
 24396  006476  6FAC               	movwf	?_fatfs_sfn_exists& (0+255),b
 24397                           
 24398                           ; BSR set to: 0
 24399                           
 24400                           ; BSR set to: 0
 24401  006478  0012               	return	
 24402  00647A                     __end_of_fatfs_sfn_exists:
 24403                           	opt stack 0
 24404                           tosu	equ	0xFFF
 24405                           tosh	equ	0xFFE
 24406                           tosl	equ	0xFFD
 24407                           pclath	equ	0xFFA
 24408                           tblptru	equ	0xFF8
 24409                           tblptrh	equ	0xFF7
 24410                           tblptrl	equ	0xFF6
 24411                           tablat	equ	0xFF5
 24412                           prodh	equ	0xFF4
 24413                           prodl	equ	0xFF3
 24414                           indf0	equ	0xFEF
 24415                           postinc0	equ	0xFEE
 24416                           fsr0h	equ	0xFEA
 24417                           fsr0l	equ	0xFE9
 24418                           wreg	equ	0xFE8
 24419                           indf1	equ	0xFE7
 24420                           postinc1	equ	0xFE6
 24421                           postdec1	equ	0xFE5
 24422                           fsr1h	equ	0xFE2
 24423                           fsr1l	equ	0xFE1
 24424                           indf2	equ	0xFDF
 24425                           postinc2	equ	0xFDE
 24426                           postdec2	equ	0xFDD
 24427                           fsr2h	equ	0xFDA
 24428                           fsr2l	equ	0xFD9
 24429                           status	equ	0xFD8
 24430                           
 24431 ;; *************** function _fatfs_lfn_generate_tail *****************
 24432 ;; Defined at:
 24433 ;;		line 380 in file "fat_misc.c"
 24434 ;; Parameters:    Size  Location     Type
 24435 ;;  sfn_output      2   54[COMRAM] PTR unsigned char 
 24436 ;;		 -> RAM(3967), NULL(0), 
 24437 ;;  sfn_input       2   56[COMRAM] PTR unsigned char 
 24438 ;;		 -> _create_file@shortFilename(11), _create_directory@shortFilename(11), 
 24439 ;;  tailNum         4   58[COMRAM] unsigned long 
 24440 ;; Auto vars:     Size  Location     Type
 24441 ;;  tail_str       12   64[COMRAM] unsigned char [12]
 24442 ;;  tail_chars      2   76[COMRAM] int 
 24443 ;; Return value:  Size  Location     Type
 24444 ;;                  2   54[COMRAM] int 
 24445 ;; Registers used:
 24446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24447 ;; Tracked objects:
 24448 ;;		On entry : 0/0
 24449 ;;		On exit  : 0/0
 24450 ;;		Unchanged: 0/0
 24451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24452 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24453 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24455 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24456 ;;Total ram usage:       24 bytes
 24457 ;; Hardware stack levels used:    1
 24458 ;; Hardware stack levels required when called:    2
 24459 ;; This function calls:
 24460 ;;		_fatfs_itoa
 24461 ;;		_memcpy
 24462 ;;		_memset
 24463 ;;		_strlen
 24464 ;; This function is called by:
 24465 ;;		__create_directory
 24466 ;;		__create_file
 24467 ;; This function uses a non-reentrant model
 24468 ;;
 24469                           
 24470                           	psect	text69
 24471  0059DA                     __ptext69:
 24472                           	opt stack 0
 24473  0059DA                     _fatfs_lfn_generate_tail:
 24474                           	opt stack 23
 24475                           
 24476                           ;fat_misc.c: 382: int tail_chars;
 24477                           ;fat_misc.c: 383: char tail_str[12];
 24478                           ;fat_misc.c: 385: if (tailNum > 99999)
 24479                           
 24480                           ; BSR set to: 0
 24481                           ;incstack = 0
 24482  0059DA  0EA0               	movlw	160
 24483  0059DC  5C3B               	subwf	fatfs_lfn_generate_tail@tailNum,w,c
 24484  0059DE  0E86               	movlw	134
 24485  0059E0  583C               	subwfb	fatfs_lfn_generate_tail@tailNum+1,w,c
 24486  0059E2  0E01               	movlw	1
 24487  0059E4  583D               	subwfb	fatfs_lfn_generate_tail@tailNum+2,w,c
 24488  0059E6  0E00               	movlw	0
 24489  0059E8  583E               	subwfb	fatfs_lfn_generate_tail@tailNum+3,w,c
 24490  0059EA  E252               	bc	l1047
 24491                           
 24492                           ;fat_misc.c: 389: memset(tail_str, 0x00, sizeof(tail_str));
 24493                           
 24494                           ;fat_misc.c: 386: return 0;
 24495                           ;	Return value of _fatfs_lfn_generate_tail is never used
 24496  0059EC  0E00               	movlw	high fatfs_lfn_generate_tail@tail_str
 24497  0059EE  6E02               	movwf	memset@p1+1,c
 24498  0059F0  0E41               	movlw	low fatfs_lfn_generate_tail@tail_str
 24499  0059F2  6E01               	movwf	memset@p1,c
 24500  0059F4  6A04               	clrf	memset@c+1,c
 24501  0059F6  6A03               	clrf	memset@c,c
 24502  0059F8  6A06               	clrf	memset@n+1,c
 24503  0059FA  0E0C               	movlw	12
 24504  0059FC  6E05               	movwf	memset@n,c
 24505  0059FE  EC24  F020         	call	_memset	;wreg free
 24506                           
 24507                           ;fat_misc.c: 390: tail_str[0] = '~';
 24508  005A02  0E7E               	movlw	126
 24509  005A04  6E41               	movwf	fatfs_lfn_generate_tail@tail_str,c
 24510                           
 24511                           ;fat_misc.c: 391: fatfs_itoa(tailNum, tail_str+1);
 24512  005A06  C03B  F00E         	movff	fatfs_lfn_generate_tail@tailNum,fatfs_itoa@num
 24513  005A0A  C03C  F00F         	movff	fatfs_lfn_generate_tail@tailNum+1,fatfs_itoa@num+1
 24514  005A0E  C03D  F010         	movff	fatfs_lfn_generate_tail@tailNum+2,fatfs_itoa@num+2
 24515  005A12  C03E  F011         	movff	fatfs_lfn_generate_tail@tailNum+3,fatfs_itoa@num+3
 24516  005A16  0E00               	movlw	high (fatfs_lfn_generate_tail@tail_str+1)
 24517  005A18  6E13               	movwf	fatfs_itoa@s+1,c
 24518  005A1A  0E42               	movlw	low (fatfs_lfn_generate_tail@tail_str+1)
 24519  005A1C  6E12               	movwf	fatfs_itoa@s,c
 24520  005A1E  EC48  F02F         	call	_fatfs_itoa	;wreg free
 24521                           
 24522                           ;fat_misc.c: 394: memcpy(sfn_output, sfn_input, 11);
 24523  005A22  C038  F002         	movff	fatfs_lfn_generate_tail@sfn_output+1,memcpy@d1+1
 24524  005A26  C037  F001         	movff	fatfs_lfn_generate_tail@sfn_output,memcpy@d1
 24525  005A2A  0E20               	movlw	32
 24526  005A2C  6E05               	movwf	memcpy@s1+2,c
 24527  005A2E  C03A  F004         	movff	fatfs_lfn_generate_tail@sfn_input+1,memcpy@s1+1
 24528  005A32  C039  F003         	movff	fatfs_lfn_generate_tail@sfn_input,memcpy@s1
 24529  005A36  6A07               	clrf	memcpy@n+1,c
 24530  005A38  0E0B               	movlw	11
 24531  005A3A  6E06               	movwf	memcpy@n,c
 24532  005A3C  ECAE  F023         	call	_memcpy	;wreg free
 24533                           
 24534                           ;fat_misc.c: 397: tail_chars = (int)strlen(tail_str);
 24535  005A40  0E00               	movlw	high fatfs_lfn_generate_tail@tail_str
 24536  005A42  6E02               	movwf	strlen@s+1,c
 24537  005A44  0E41               	movlw	low fatfs_lfn_generate_tail@tail_str
 24538  005A46  6E01               	movwf	strlen@s,c
 24539  005A48  EC7B  F022         	call	_strlen	;wreg free
 24540  005A4C  C001  F04D         	movff	?_strlen,fatfs_lfn_generate_tail@tail_chars
 24541  005A50  C002  F04E         	movff	?_strlen+1,fatfs_lfn_generate_tail@tail_chars+1
 24542                           
 24543                           ;fat_misc.c: 398: memcpy(sfn_output+(8-tail_chars), tail_str, tail_chars);
 24544  005A54  C04D  F03F         	movff	fatfs_lfn_generate_tail@tail_chars,??_fatfs_lfn_generate_tail
 24545  005A58  C04E  F040         	movff	fatfs_lfn_generate_tail@tail_chars+1,??_fatfs_lfn_generate_tail+1
 24546  005A5C  1E3F               	comf	??_fatfs_lfn_generate_tail,f,c
 24547  005A5E  1E40               	comf	??_fatfs_lfn_generate_tail+1,f,c
 24548  005A60  4A3F               	infsnz	??_fatfs_lfn_generate_tail,f,c
 24549  005A62  2A40               	incf	??_fatfs_lfn_generate_tail+1,f,c
 24550  005A64  0E08               	movlw	8
 24551  005A66  263F               	addwf	??_fatfs_lfn_generate_tail,f,c
 24552  005A68  0E00               	movlw	0
 24553  005A6A  2240               	addwfc	??_fatfs_lfn_generate_tail+1,f,c
 24554  005A6C  503F               	movf	??_fatfs_lfn_generate_tail,w,c
 24555  005A6E  2437               	addwf	fatfs_lfn_generate_tail@sfn_output,w,c
 24556  005A70  6E01               	movwf	memcpy@d1,c
 24557  005A72  5040               	movf	??_fatfs_lfn_generate_tail+1,w,c
 24558  005A74  2038               	addwfc	fatfs_lfn_generate_tail@sfn_output+1,w,c
 24559  005A76  6E02               	movwf	memcpy@d1+1,c
 24560  005A78  0E20               	movlw	32
 24561  005A7A  6E05               	movwf	memcpy@s1+2,c
 24562  005A7C  0E00               	movlw	high fatfs_lfn_generate_tail@tail_str
 24563  005A7E  6E04               	movwf	memcpy@s1+1,c
 24564  005A80  0E41               	movlw	low fatfs_lfn_generate_tail@tail_str
 24565  005A82  6E03               	movwf	memcpy@s1,c
 24566  005A84  C04D  F006         	movff	fatfs_lfn_generate_tail@tail_chars,memcpy@n
 24567  005A88  C04E  F007         	movff	fatfs_lfn_generate_tail@tail_chars+1,memcpy@n+1
 24568  005A8C  ECAE  F023         	call	_memcpy	;wreg free
 24569  005A90                     l1047:
 24570  005A90  0012               	return	
 24571  005A92                     __end_of_fatfs_lfn_generate_tail:
 24572                           	opt stack 0
 24573                           tosu	equ	0xFFF
 24574                           tosh	equ	0xFFE
 24575                           tosl	equ	0xFFD
 24576                           pclath	equ	0xFFA
 24577                           tblptru	equ	0xFF8
 24578                           tblptrh	equ	0xFF7
 24579                           tblptrl	equ	0xFF6
 24580                           tablat	equ	0xFF5
 24581                           prodh	equ	0xFF4
 24582                           prodl	equ	0xFF3
 24583                           indf0	equ	0xFEF
 24584                           postinc0	equ	0xFEE
 24585                           fsr0h	equ	0xFEA
 24586                           fsr0l	equ	0xFE9
 24587                           wreg	equ	0xFE8
 24588                           indf1	equ	0xFE7
 24589                           postinc1	equ	0xFE6
 24590                           postdec1	equ	0xFE5
 24591                           fsr1h	equ	0xFE2
 24592                           fsr1l	equ	0xFE1
 24593                           indf2	equ	0xFDF
 24594                           postinc2	equ	0xFDE
 24595                           postdec2	equ	0xFDD
 24596                           fsr2h	equ	0xFDA
 24597                           fsr2l	equ	0xFD9
 24598                           status	equ	0xFD8
 24599                           
 24600 ;; *************** function _fatfs_itoa *****************
 24601 ;; Defined at:
 24602 ;;		line 350 in file "fat_misc.c"
 24603 ;; Parameters:    Size  Location     Type
 24604 ;;  num             4   13[COMRAM] unsigned long 
 24605 ;;  s               2   17[COMRAM] PTR unsigned char 
 24606 ;;		 -> fatfs_lfn_generate_tail@tail_str(12), 
 24607 ;; Auto vars:     Size  Location     Type
 24608 ;;  digits         17   23[COMRAM] const unsigned char [17]
 24609 ;;  outbuf         12   40[COMRAM] unsigned char [12]
 24610 ;;  cp              2   52[COMRAM] PTR unsigned char 
 24611 ;;		 -> fatfs_itoa@outbuf(12), 
 24612 ;; Return value:  Size  Location     Type
 24613 ;;		None               void
 24614 ;; Registers used:
 24615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24616 ;; Tracked objects:
 24617 ;;		On entry : 0/0
 24618 ;;		On exit  : 0/0
 24619 ;;		Unchanged: 0/0
 24620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24621 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24622 ;;      Locals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24623 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24624 ;;      Totals:        41       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24625 ;;Total ram usage:       41 bytes
 24626 ;; Hardware stack levels used:    1
 24627 ;; Hardware stack levels required when called:    1
 24628 ;; This function calls:
 24629 ;;		___lldiv
 24630 ;;		___llmod
 24631 ;; This function is called by:
 24632 ;;		_fatfs_lfn_generate_tail
 24633 ;; This function uses a non-reentrant model
 24634 ;;
 24635                           
 24636                           	psect	text70
 24637  005E90                     __ptext70:
 24638                           	opt stack 0
 24639  005E90                     _fatfs_itoa:
 24640                           	opt stack 23
 24641                           
 24642                           ;fat_misc.c: 352: char* cp;
 24643                           ;fat_misc.c: 353: char outbuf[12];
 24644                           ;fat_misc.c: 354: const char digits[] = "0123456789ABCDEF";
 24645                           
 24646                           ;incstack = 0
 24647  005E90  0E49               	movlw	low fatfs_itoa@F407
 24648  005E92  6EF6               	movwf	tblptrl,c
 24649  005E94                     	if	1	;There is more than 1 active tblptr byte
 24650  005E94  0EFA               	movlw	high fatfs_itoa@F407
 24651  005E96  6EF7               	movwf	tblptrh,c
 24652  005E98                     	endif
 24653  005E98                     	if	1	;There are 3 active tblptr bytes
 24654  005E98  0E00               	movlw	low (fatfs_itoa@F407 shr (0+16))
 24655  005E9A  6EF8               	movwf	tblptru,c
 24656  005E9C                     	endif
 24657  005E9C  EE20  F018         	lfsr	2,fatfs_itoa@digits
 24658  005EA0  0E11               	movlw	17
 24659  005EA2                     u11410:
 24660  005EA2  0009               	tblrd		*+
 24661  005EA4  CFF5 FFDE          	movff	tablat,postinc2
 24662  005EA8  2EE8               	decfsz	wreg,f,c
 24663  005EAA  D7FB               	bra	u11410
 24664                           
 24665                           ;fat_misc.c: 357: cp = outbuf;
 24666  005EAC  0E00               	movlw	high fatfs_itoa@outbuf
 24667  005EAE  6E36               	movwf	fatfs_itoa@cp+1,c
 24668  005EB0  0E29               	movlw	low fatfs_itoa@outbuf
 24669  005EB2  6E35               	movwf	fatfs_itoa@cp,c
 24670  005EB4                     l10237:
 24671                           
 24672                           ;fat_misc.c: 359: {
 24673                           ;fat_misc.c: 360: *cp++ = digits[(int)(num % 10)];
 24674  005EB4  C00E  F001         	movff	fatfs_itoa@num,___llmod@dividend
 24675  005EB8  C00F  F002         	movff	fatfs_itoa@num+1,___llmod@dividend+1
 24676  005EBC  C010  F003         	movff	fatfs_itoa@num+2,___llmod@dividend+2
 24677  005EC0  C011  F004         	movff	fatfs_itoa@num+3,___llmod@dividend+3
 24678  005EC4  0E0A               	movlw	10
 24679  005EC6  6E05               	movwf	___llmod@divisor,c
 24680  005EC8  0E00               	movlw	0
 24681  005ECA  6A06               	clrf	___llmod@divisor+1,c
 24682  005ECC  6A07               	clrf	___llmod@divisor+2,c
 24683  005ECE  6A08               	clrf	___llmod@divisor+3,c
 24684  005ED0  EC6D  F024         	call	___llmod	;wreg free
 24685  005ED4  C001  F014         	movff	?___llmod,??_fatfs_itoa
 24686  005ED8  C002  F015         	movff	?___llmod+1,??_fatfs_itoa+1
 24687  005EDC  C003  F016         	movff	?___llmod+2,??_fatfs_itoa+2
 24688  005EE0  C004  F017         	movff	?___llmod+3,??_fatfs_itoa+3
 24689  005EE4  0E18               	movlw	low fatfs_itoa@digits
 24690  005EE6  2414               	addwf	??_fatfs_itoa,w,c
 24691  005EE8  6ED9               	movwf	fsr2l,c
 24692  005EEA  0E00               	movlw	high fatfs_itoa@digits
 24693  005EEC  2015               	addwfc	??_fatfs_itoa+1,w,c
 24694  005EEE  6EDA               	movwf	fsr2h,c
 24695  005EF0  C035  FFE1         	movff	fatfs_itoa@cp,fsr1l
 24696  005EF4  C036  FFE2         	movff	fatfs_itoa@cp+1,fsr1h
 24697  005EF8  CFDF FFE7          	movff	indf2,indf1
 24698  005EFC  4A35               	infsnz	fatfs_itoa@cp,f,c
 24699  005EFE  2A36               	incf	fatfs_itoa@cp+1,f,c
 24700                           
 24701                           ;fat_misc.c: 361: }
 24702                           ;fat_misc.c: 362: while ((num /= 10) > 0);
 24703  005F00  C00E  F001         	movff	fatfs_itoa@num,___lldiv@dividend
 24704  005F04  C00F  F002         	movff	fatfs_itoa@num+1,___lldiv@dividend+1
 24705  005F08  C010  F003         	movff	fatfs_itoa@num+2,___lldiv@dividend+2
 24706  005F0C  C011  F004         	movff	fatfs_itoa@num+3,___lldiv@dividend+3
 24707  005F10  0E0A               	movlw	10
 24708  005F12  6E05               	movwf	___lldiv@divisor,c
 24709  005F14  0E00               	movlw	0
 24710  005F16  6A06               	clrf	___lldiv@divisor+1,c
 24711  005F18  6A07               	clrf	___lldiv@divisor+2,c
 24712  005F1A  6A08               	clrf	___lldiv@divisor+3,c
 24713  005F1C  EC85  F026         	call	___lldiv	;wreg free
 24714  005F20  C001  F00E         	movff	?___lldiv,fatfs_itoa@num
 24715  005F24  C002  F00F         	movff	?___lldiv+1,fatfs_itoa@num+1
 24716  005F28  C003  F010         	movff	?___lldiv+2,fatfs_itoa@num+2
 24717  005F2C  C004  F011         	movff	?___lldiv+3,fatfs_itoa@num+3
 24718  005F30  5011               	movf	(fatfs_itoa@num+3)& (0+255),w,c
 24719  005F32  100E               	iorwf	fatfs_itoa@num& (0+255),w,c
 24720  005F34  100F               	iorwf	(fatfs_itoa@num+1)& (0+255),w,c
 24721  005F36  1010               	iorwf	(fatfs_itoa@num+2)& (0+255),w,c
 24722  005F38  E1BD               	bnz	l10237
 24723                           
 24724                           ;fat_misc.c: 364: *cp-- = 0;
 24725  005F3A  C035  FFD9         	movff	fatfs_itoa@cp,fsr2l
 24726  005F3E  C036  FFDA         	movff	fatfs_itoa@cp+1,fsr2h
 24727  005F42  6ADF               	clrf	indf2,c
 24728  005F44  0635               	decf	fatfs_itoa@cp,f,c
 24729  005F46  A0D8               	btfss	status,0,c
 24730  005F48  0636               	decf	fatfs_itoa@cp+1,f,c
 24731                           
 24732                           ;fat_misc.c: 367: while (cp >= outbuf)
 24733  005F4A  D00F               	goto	l10253
 24734  005F4C                     l10247:
 24735                           
 24736                           ;fat_misc.c: 368: *s++ = *cp--;
 24737  005F4C  C035  FFD9         	movff	fatfs_itoa@cp,fsr2l
 24738  005F50  C036  FFDA         	movff	fatfs_itoa@cp+1,fsr2h
 24739  005F54  C012  FFE1         	movff	fatfs_itoa@s,fsr1l
 24740  005F58  C013  FFE2         	movff	fatfs_itoa@s+1,fsr1h
 24741  005F5C  CFDF FFE7          	movff	indf2,indf1
 24742  005F60  0635               	decf	fatfs_itoa@cp,f,c
 24743  005F62  A0D8               	btfss	status,0,c
 24744  005F64  0636               	decf	fatfs_itoa@cp+1,f,c
 24745  005F66  4A12               	infsnz	fatfs_itoa@s,f,c
 24746  005F68  2A13               	incf	fatfs_itoa@s+1,f,c
 24747  005F6A                     l10253:
 24748  005F6A  0E29               	movlw	low fatfs_itoa@outbuf
 24749  005F6C  5C35               	subwf	fatfs_itoa@cp,w,c
 24750  005F6E  0E00               	movlw	high fatfs_itoa@outbuf
 24751  005F70  5836               	subwfb	fatfs_itoa@cp+1,w,c
 24752  005F72  E2EC               	bc	l10247
 24753                           
 24754                           ;fat_misc.c: 370: *s = 0;
 24755  005F74  C012  FFD9         	movff	fatfs_itoa@s,fsr2l
 24756  005F78  C013  FFDA         	movff	fatfs_itoa@s+1,fsr2h
 24757  005F7C  0E00               	movlw	0
 24758  005F7E  6EDF               	movwf	indf2,c
 24759  005F80  0C00               	retlw	0
 24760  005F82                     __end_of_fatfs_itoa:
 24761                           	opt stack 0
 24762                           tosu	equ	0xFFF
 24763                           tosh	equ	0xFFE
 24764                           tosl	equ	0xFFD
 24765                           pclath	equ	0xFFA
 24766                           tblptru	equ	0xFF8
 24767                           tblptrh	equ	0xFF7
 24768                           tblptrl	equ	0xFF6
 24769                           tablat	equ	0xFF5
 24770                           prodh	equ	0xFF4
 24771                           prodl	equ	0xFF3
 24772                           indf0	equ	0xFEF
 24773                           postinc0	equ	0xFEE
 24774                           fsr0h	equ	0xFEA
 24775                           fsr0l	equ	0xFE9
 24776                           wreg	equ	0xFE8
 24777                           indf1	equ	0xFE7
 24778                           postinc1	equ	0xFE6
 24779                           postdec1	equ	0xFE5
 24780                           fsr1h	equ	0xFE2
 24781                           fsr1l	equ	0xFE1
 24782                           indf2	equ	0xFDF
 24783                           postinc2	equ	0xFDE
 24784                           postdec2	equ	0xFDD
 24785                           fsr2h	equ	0xFDA
 24786                           fsr2l	equ	0xFD9
 24787                           status	equ	0xFD8
 24788                           
 24789 ;; *************** function ___llmod *****************
 24790 ;; Defined at:
 24791 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\llmod.c"
 24792 ;; Parameters:    Size  Location     Type
 24793 ;;  dividend        4    0[COMRAM] unsigned long 
 24794 ;;  divisor         4    4[COMRAM] unsigned long 
 24795 ;; Auto vars:     Size  Location     Type
 24796 ;;  counter         1    8[COMRAM] unsigned char 
 24797 ;; Return value:  Size  Location     Type
 24798 ;;                  4    0[COMRAM] unsigned long 
 24799 ;; Registers used:
 24800 ;;		wreg, status,2, status,0
 24801 ;; Tracked objects:
 24802 ;;		On entry : 0/0
 24803 ;;		On exit  : 0/0
 24804 ;;		Unchanged: 0/0
 24805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24806 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24809 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24810 ;;Total ram usage:        9 bytes
 24811 ;; Hardware stack levels used:    1
 24812 ;; This function calls:
 24813 ;;		Nothing
 24814 ;; This function is called by:
 24815 ;;		_fatfs_itoa
 24816 ;; This function uses a non-reentrant model
 24817 ;;
 24818                           
 24819                           	psect	text71
 24820  0048DA                     __ptext71:
 24821                           	opt stack 0
 24822  0048DA                     ___llmod:
 24823                           	opt stack 23
 24824                           
 24825                           ;incstack = 0
 24826  0048DA  5008               	movf	___llmod@divisor+3,w,c
 24827  0048DC  1005               	iorwf	___llmod@divisor,w,c
 24828  0048DE  1006               	iorwf	___llmod@divisor+1,w,c
 24829  0048E0  1007               	iorwf	___llmod@divisor+2,w,c
 24830  0048E2  E023               	bz	l2780
 24831  0048E4  0E01               	movlw	1
 24832  0048E6  6E09               	movwf	___llmod@counter,c
 24833  0048E8  D006               	goto	l9543
 24834  0048EA                     l9541:
 24835  0048EA  90D8               	bcf	status,0,c
 24836  0048EC  3605               	rlcf	___llmod@divisor,f,c
 24837  0048EE  3606               	rlcf	___llmod@divisor+1,f,c
 24838  0048F0  3607               	rlcf	___llmod@divisor+2,f,c
 24839  0048F2  3608               	rlcf	___llmod@divisor+3,f,c
 24840  0048F4  2A09               	incf	___llmod@counter,f,c
 24841  0048F6                     l9543:
 24842  0048F6  AE08               	btfss	___llmod@divisor+3,7,c
 24843  0048F8  D7F8               	goto	l9541
 24844  0048FA                     l9545:
 24845  0048FA  5005               	movf	___llmod@divisor,w,c
 24846  0048FC  5C01               	subwf	___llmod@dividend,w,c
 24847  0048FE  5006               	movf	___llmod@divisor+1,w,c
 24848  004900  5802               	subwfb	___llmod@dividend+1,w,c
 24849  004902  5007               	movf	___llmod@divisor+2,w,c
 24850  004904  5803               	subwfb	___llmod@dividend+2,w,c
 24851  004906  5008               	movf	___llmod@divisor+3,w,c
 24852  004908  5804               	subwfb	___llmod@dividend+3,w,c
 24853  00490A  E308               	bnc	l9549
 24854  00490C  5005               	movf	___llmod@divisor,w,c
 24855  00490E  5E01               	subwf	___llmod@dividend,f,c
 24856  004910  5006               	movf	___llmod@divisor+1,w,c
 24857  004912  5A02               	subwfb	___llmod@dividend+1,f,c
 24858  004914  5007               	movf	___llmod@divisor+2,w,c
 24859  004916  5A03               	subwfb	___llmod@dividend+2,f,c
 24860  004918  5008               	movf	___llmod@divisor+3,w,c
 24861  00491A  5A04               	subwfb	___llmod@dividend+3,f,c
 24862  00491C                     l9549:
 24863  00491C  90D8               	bcf	status,0,c
 24864  00491E  3208               	rrcf	___llmod@divisor+3,f,c
 24865  004920  3207               	rrcf	___llmod@divisor+2,f,c
 24866  004922  3206               	rrcf	___llmod@divisor+1,f,c
 24867  004924  3205               	rrcf	___llmod@divisor,f,c
 24868  004926  2E09               	decfsz	___llmod@counter,f,c
 24869  004928  D7E8               	goto	l9545
 24870  00492A                     l2780:
 24871  00492A  C001  F001         	movff	___llmod@dividend,?___llmod
 24872  00492E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 24873  004932  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 24874  004936  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 24875  00493A  0012               	return	
 24876  00493C                     __end_of___llmod:
 24877                           	opt stack 0
 24878                           tosu	equ	0xFFF
 24879                           tosh	equ	0xFFE
 24880                           tosl	equ	0xFFD
 24881                           pclath	equ	0xFFA
 24882                           tblptru	equ	0xFF8
 24883                           tblptrh	equ	0xFF7
 24884                           tblptrl	equ	0xFF6
 24885                           tablat	equ	0xFF5
 24886                           prodh	equ	0xFF4
 24887                           prodl	equ	0xFF3
 24888                           indf0	equ	0xFEF
 24889                           postinc0	equ	0xFEE
 24890                           fsr0h	equ	0xFEA
 24891                           fsr0l	equ	0xFE9
 24892                           wreg	equ	0xFE8
 24893                           indf1	equ	0xFE7
 24894                           postinc1	equ	0xFE6
 24895                           postdec1	equ	0xFE5
 24896                           fsr1h	equ	0xFE2
 24897                           fsr1l	equ	0xFE1
 24898                           indf2	equ	0xFDF
 24899                           postinc2	equ	0xFDE
 24900                           postdec2	equ	0xFDD
 24901                           fsr2h	equ	0xFDA
 24902                           fsr2l	equ	0xFD9
 24903                           status	equ	0xFD8
 24904                           
 24905 ;; *************** function _fatfs_lfn_create_sfn *****************
 24906 ;; Defined at:
 24907 ;;		line 285 in file "fat_misc.c"
 24908 ;; Parameters:    Size  Location     Type
 24909 ;;  sfn_output      2    8[COMRAM] PTR unsigned char 
 24910 ;;		 -> _create_file@shortFilename(11), _create_directory@shortFilename(11), 
 24911 ;;  filename        2   10[COMRAM] PTR unsigned char 
 24912 ;;		 -> RAM(3967), NULL(0), 
 24913 ;; Auto vars:     Size  Location     Type
 24914 ;;  ext             3   17[COMRAM] unsigned char [3]
 24915 ;;  i               2   26[COMRAM] int 
 24916 ;;  dotPos          2   24[COMRAM] int 
 24917 ;;  pos             2   22[COMRAM] int 
 24918 ;;  len             2   20[COMRAM] int 
 24919 ;; Return value:  Size  Location     Type
 24920 ;;                  2    8[COMRAM] int 
 24921 ;; Registers used:
 24922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24923 ;; Tracked objects:
 24924 ;;		On entry : 0/0
 24925 ;;		On exit  : 0/0
 24926 ;;		Unchanged: 0/0
 24927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24929 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24930 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24931 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24932 ;;Total ram usage:       20 bytes
 24933 ;; Hardware stack levels used:    1
 24934 ;; Hardware stack levels required when called:    1
 24935 ;; This function calls:
 24936 ;;		_memset
 24937 ;;		_strlen
 24938 ;; This function is called by:
 24939 ;;		__create_directory
 24940 ;;		__create_file
 24941 ;; This function uses a non-reentrant model
 24942 ;;
 24943                           
 24944                           	psect	text72
 24945  0090CC                     __ptext72:
 24946                           	opt stack 0
 24947  0090CC                     _fatfs_lfn_create_sfn:
 24948                           	opt stack 24
 24949                           
 24950                           ;fat_misc.c: 287: int i;
 24951                           ;fat_misc.c: 288: int dotPos = -1;
 24952                           
 24953                           ;incstack = 0
 24954  0090CC  6819               	setf	fatfs_lfn_create_sfn@dotPos,c
 24955  0090CE  681A               	setf	fatfs_lfn_create_sfn@dotPos+1,c
 24956                           
 24957                           ;fat_misc.c: 289: char ext[3];
 24958                           ;fat_misc.c: 290: int pos;
 24959                           ;fat_misc.c: 291: int len = (int)strlen(filename);
 24960  0090D0  C00C  F002         	movff	fatfs_lfn_create_sfn@filename+1,strlen@s+1
 24961  0090D4  C00B  F001         	movff	fatfs_lfn_create_sfn@filename,strlen@s
 24962  0090D8  EC7B  F022         	call	_strlen	;wreg free
 24963  0090DC  C001  F015         	movff	?_strlen,fatfs_lfn_create_sfn@len
 24964  0090E0  C002  F016         	movff	?_strlen+1,fatfs_lfn_create_sfn@len+1
 24965                           
 24966                           ;fat_misc.c: 294: if (filename[0]=='.')
 24967  0090E4  0E2E               	movlw	46
 24968  0090E6  C00B  FFD9         	movff	fatfs_lfn_create_sfn@filename,fsr2l
 24969  0090EA  C00C  FFDA         	movff	fatfs_lfn_create_sfn@filename+1,fsr2h
 24970  0090EE  62DF               	cpfseq	indf2,c
 24971  0090F0  D001               	goto	l10633
 24972  0090F2  D13B               	goto	l1013
 24973  0090F4                     l10633:
 24974                           
 24975                           ;fat_misc.c: 297: memset(sfn_output, ' ', 11);
 24976  0090F4  C00A  F002         	movff	fatfs_lfn_create_sfn@sfn_output+1,memset@p1+1
 24977  0090F8  C009  F001         	movff	fatfs_lfn_create_sfn@sfn_output,memset@p1
 24978  0090FC  6A04               	clrf	memset@c+1,c
 24979  0090FE  0E20               	movlw	32
 24980  009100  6E03               	movwf	memset@c,c
 24981  009102  6A06               	clrf	memset@n+1,c
 24982  009104  0E0B               	movlw	11
 24983  009106  6E05               	movwf	memset@n,c
 24984  009108  EC24  F020         	call	_memset	;wreg free
 24985                           
 24986                           ;fat_misc.c: 298: memset(ext, ' ', 3);
 24987  00910C  0E00               	movlw	high fatfs_lfn_create_sfn@ext
 24988  00910E  6E02               	movwf	memset@p1+1,c
 24989  009110  0E12               	movlw	low fatfs_lfn_create_sfn@ext
 24990  009112  6E01               	movwf	memset@p1,c
 24991  009114  6A04               	clrf	memset@c+1,c
 24992  009116  0E20               	movlw	32
 24993  009118  6E03               	movwf	memset@c,c
 24994  00911A  6A06               	clrf	memset@n+1,c
 24995  00911C  0E03               	movlw	3
 24996  00911E  6E05               	movwf	memset@n,c
 24997  009120  EC24  F020         	call	_memset	;wreg free
 24998                           
 24999                           ;fat_misc.c: 301: for (i = 0; i< len; i++)
 25000  009124  6A1C               	clrf	fatfs_lfn_create_sfn@i+1,c
 25001  009126  6A1B               	clrf	fatfs_lfn_create_sfn@i,c
 25002  009128  D00F               	goto	l10643
 25003  00912A                     l10637:
 25004                           
 25005                           ;fat_misc.c: 302: {
 25006                           ;fat_misc.c: 303: if (filename[i]=='.')
 25007  00912A  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25008  00912C  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25009  00912E  6ED9               	movwf	fsr2l,c
 25010  009130  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25011  009132  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25012  009134  6EDA               	movwf	fsr2h,c
 25013  009136  0E2E               	movlw	46
 25014  009138  62DF               	cpfseq	indf2,c
 25015  00913A  D004               	goto	l10641
 25016                           
 25017                           ;fat_misc.c: 304: dotPos = i;
 25018  00913C  C01B  F019         	movff	fatfs_lfn_create_sfn@i,fatfs_lfn_create_sfn@dotPos
 25019  009140  C01C  F01A         	movff	fatfs_lfn_create_sfn@i+1,fatfs_lfn_create_sfn@dotPos+1
 25020  009144                     l10641:
 25021  009144  4A1B               	infsnz	fatfs_lfn_create_sfn@i,f,c
 25022  009146  2A1C               	incf	fatfs_lfn_create_sfn@i+1,f,c
 25023  009148                     l10643:
 25024  009148  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25025  00914A  0A80               	xorlw	128
 25026  00914C  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25027  00914E  5015               	movf	fatfs_lfn_create_sfn@len,w,c
 25028  009150  5C1B               	subwf	fatfs_lfn_create_sfn@i,w,c
 25029  009152  5016               	movf	fatfs_lfn_create_sfn@len+1,w,c
 25030  009154  0A80               	xorlw	128
 25031  009156  580D               	subwfb	??_fatfs_lfn_create_sfn& (0+255),w,c
 25032  009158  E3E8               	bnc	l10637
 25033                           
 25034                           ;fat_misc.c: 305: }
 25035                           ;fat_misc.c: 308: if (dotPos!=-1)
 25036  00915A  2819               	incf	fatfs_lfn_create_sfn@dotPos,w,c
 25037  00915C  B4D8               	btfsc	status,2,c
 25038  00915E  281A               	incf	fatfs_lfn_create_sfn@dotPos+1,w,c
 25039  009160  E03F               	bz	l10657
 25040                           
 25041                           ;fat_misc.c: 309: {
 25042                           ;fat_misc.c: 311: for (i = (dotPos+1); i < (dotPos+1+3); i++)
 25043  009162  2819               	incf	fatfs_lfn_create_sfn@dotPos,w,c
 25044  009164  6E1B               	movwf	fatfs_lfn_create_sfn@i,c
 25045  009166  0E00               	movlw	0
 25046  009168  201A               	addwfc	fatfs_lfn_create_sfn@dotPos+1,w,c
 25047  00916A  6E1C               	movwf	fatfs_lfn_create_sfn@i+1,c
 25048  00916C  D026               	goto	l10655
 25049  00916E                     l10649:
 25050                           
 25051                           ;fat_misc.c: 312: if (i<len)
 25052  00916E  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25053  009170  0A80               	xorlw	128
 25054  009172  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25055  009174  5015               	movf	fatfs_lfn_create_sfn@len,w,c
 25056  009176  5C1B               	subwf	fatfs_lfn_create_sfn@i,w,c
 25057  009178  5016               	movf	fatfs_lfn_create_sfn@len+1,w,c
 25058  00917A  0A80               	xorlw	128
 25059  00917C  580D               	subwfb	??_fatfs_lfn_create_sfn& (0+255),w,c
 25060  00917E  E21B               	bc	l10653
 25061                           
 25062                           ;fat_misc.c: 313: ext[i-(dotPos+1)] = filename[i];
 25063  009180  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25064  009182  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25065  009184  6ED9               	movwf	fsr2l,c
 25066  009186  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25067  009188  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25068  00918A  6EDA               	movwf	fsr2h,c
 25069  00918C  2819               	incf	fatfs_lfn_create_sfn@dotPos,w,c
 25070  00918E  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25071  009190  0E00               	movlw	0
 25072  009192  201A               	addwfc	fatfs_lfn_create_sfn@dotPos+1,w,c
 25073  009194  6E0E               	movwf	(??_fatfs_lfn_create_sfn+1)& (0+255),c
 25074  009196  1E0D               	comf	??_fatfs_lfn_create_sfn,f,c
 25075  009198  1E0E               	comf	??_fatfs_lfn_create_sfn+1,f,c
 25076  00919A  4A0D               	infsnz	??_fatfs_lfn_create_sfn,f,c
 25077  00919C  2A0E               	incf	??_fatfs_lfn_create_sfn+1,f,c
 25078  00919E  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25079  0091A0  260D               	addwf	??_fatfs_lfn_create_sfn,f,c
 25080  0091A2  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25081  0091A4  220E               	addwfc	??_fatfs_lfn_create_sfn+1,f,c
 25082  0091A6  0E12               	movlw	low fatfs_lfn_create_sfn@ext
 25083  0091A8  240D               	addwf	??_fatfs_lfn_create_sfn,w,c
 25084  0091AA  6EE1               	movwf	fsr1l,c
 25085  0091AC  0E00               	movlw	high fatfs_lfn_create_sfn@ext
 25086  0091AE  200E               	addwfc	??_fatfs_lfn_create_sfn+1,w,c
 25087  0091B0  6EE2               	movwf	fsr1h,c
 25088  0091B2  CFDF FFE7          	movff	indf2,indf1
 25089  0091B6                     l10653:
 25090  0091B6  4A1B               	infsnz	fatfs_lfn_create_sfn@i,f,c
 25091  0091B8  2A1C               	incf	fatfs_lfn_create_sfn@i+1,f,c
 25092  0091BA                     l10655:
 25093  0091BA  0E04               	movlw	4
 25094  0091BC  2419               	addwf	fatfs_lfn_create_sfn@dotPos,w,c
 25095  0091BE  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25096  0091C0  0E00               	movlw	0
 25097  0091C2  201A               	addwfc	fatfs_lfn_create_sfn@dotPos+1,w,c
 25098  0091C4  6E0E               	movwf	(??_fatfs_lfn_create_sfn+1)& (0+255),c
 25099  0091C6  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25100  0091C8  0A80               	xorlw	128
 25101  0091CA  6E0F               	movwf	(??_fatfs_lfn_create_sfn+2)& (0+255),c
 25102  0091CC  500D               	movf	??_fatfs_lfn_create_sfn,w,c
 25103  0091CE  5C1B               	subwf	fatfs_lfn_create_sfn@i,w,c
 25104  0091D0  500E               	movf	??_fatfs_lfn_create_sfn+1,w,c
 25105  0091D2  0A80               	xorlw	128
 25106  0091D4  580F               	subwfb	(??_fatfs_lfn_create_sfn+2)& (0+255),w,c
 25107  0091D6  E3CB               	bnc	l10649
 25108                           
 25109                           ;fat_misc.c: 316: len = dotPos;
 25110  0091D8  C019  F015         	movff	fatfs_lfn_create_sfn@dotPos,fatfs_lfn_create_sfn@len
 25111  0091DC  C01A  F016         	movff	fatfs_lfn_create_sfn@dotPos+1,fatfs_lfn_create_sfn@len+1
 25112  0091E0                     l10657:
 25113                           
 25114                           ;fat_misc.c: 317: }
 25115                           ;fat_misc.c: 320: pos = 0;
 25116  0091E0  6A18               	clrf	fatfs_lfn_create_sfn@pos+1,c
 25117  0091E2  6A17               	clrf	fatfs_lfn_create_sfn@pos,c
 25118                           
 25119                           ;fat_misc.c: 321: for (i=0;i<len;i++)
 25120  0091E4  6A1C               	clrf	fatfs_lfn_create_sfn@i+1,c
 25121  0091E6  6A1B               	clrf	fatfs_lfn_create_sfn@i,c
 25122  0091E8  D04C               	goto	l10681
 25123  0091EA                     l10659:
 25124                           
 25125                           ;fat_misc.c: 322: {
 25126                           ;fat_misc.c: 323: if ( (filename[i]!=' ') && (filename[i]!='.') )
 25127  0091EA  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25128  0091EC  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25129  0091EE  6ED9               	movwf	fsr2l,c
 25130  0091F0  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25131  0091F2  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25132  0091F4  6EDA               	movwf	fsr2h,c
 25133  0091F6  50DF               	movf	indf2,w,c
 25134  0091F8  0A20               	xorlw	32
 25135  0091FA  E03D               	bz	l10675
 25136  0091FC  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25137  0091FE  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25138  009200  6ED9               	movwf	fsr2l,c
 25139  009202  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25140  009204  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25141  009206  6EDA               	movwf	fsr2h,c
 25142  009208  50DF               	movf	indf2,w,c
 25143  00920A  0A2E               	xorlw	46
 25144  00920C  E034               	bz	l10675
 25145                           
 25146                           ;fat_misc.c: 324: {
 25147                           ;fat_misc.c: 325: if (filename[i] >= 'a' && filename[i] <= 'z')
 25148  00920E  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25149  009210  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25150  009212  6ED9               	movwf	fsr2l,c
 25151  009214  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25152  009216  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25153  009218  6EDA               	movwf	fsr2h,c
 25154  00921A  0E60               	movlw	96
 25155  00921C  64DF               	cpfsgt	indf2,c
 25156  00921E  D01B               	goto	l10671
 25157  009220  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25158  009222  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25159  009224  6ED9               	movwf	fsr2l,c
 25160  009226  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25161  009228  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25162  00922A  6EDA               	movwf	fsr2h,c
 25163  00922C  50DF               	movf	indf2,w,c
 25164  00922E  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25165  009230  0E7B               	movlw	123
 25166  009232  5C0D               	subwf	??_fatfs_lfn_create_sfn,w,c
 25167  009234  E210               	bc	l10671
 25168                           
 25169                           ;fat_misc.c: 326: sfn_output[pos++] = filename[i] - 'a' + 'A';
 25170  009236  5017               	movf	fatfs_lfn_create_sfn@pos,w,c
 25171  009238  2409               	addwf	fatfs_lfn_create_sfn@sfn_output,w,c
 25172  00923A  6ED9               	movwf	fsr2l,c
 25173  00923C  5018               	movf	fatfs_lfn_create_sfn@pos+1,w,c
 25174  00923E  200A               	addwfc	fatfs_lfn_create_sfn@sfn_output+1,w,c
 25175  009240  6EDA               	movwf	fsr2h,c
 25176  009242  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25177  009244  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25178  009246  6EE1               	movwf	fsr1l,c
 25179  009248  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25180  00924A  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25181  00924C  6EE2               	movwf	fsr1h,c
 25182  00924E  50E7               	movf	indf1,w,c
 25183  009250  0FE0               	addlw	224
 25184  009252  6EDF               	movwf	indf2,c
 25185  009254  D00E               	goto	L75
 25186  009256                     l10671:
 25187                           
 25188                           ;fat_misc.c: 327: else
 25189                           ;fat_misc.c: 328: sfn_output[pos++] = filename[i];
 25190  009256  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25191  009258  240B               	addwf	fatfs_lfn_create_sfn@filename,w,c
 25192  00925A  6ED9               	movwf	fsr2l,c
 25193  00925C  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25194  00925E  200C               	addwfc	fatfs_lfn_create_sfn@filename+1,w,c
 25195  009260  6EDA               	movwf	fsr2h,c
 25196  009262  5017               	movf	fatfs_lfn_create_sfn@pos,w,c
 25197  009264  2409               	addwf	fatfs_lfn_create_sfn@sfn_output,w,c
 25198  009266  6EE1               	movwf	fsr1l,c
 25199  009268  5018               	movf	fatfs_lfn_create_sfn@pos+1,w,c
 25200  00926A  200A               	addwfc	fatfs_lfn_create_sfn@sfn_output+1,w,c
 25201  00926C  6EE2               	movwf	fsr1h,c
 25202  00926E  CFDF FFE7          	movff	indf2,indf1
 25203  009272                     L75:
 25204  009272  4A17               	infsnz	fatfs_lfn_create_sfn@pos,f,c
 25205  009274  2A18               	incf	fatfs_lfn_create_sfn@pos+1,f,c
 25206  009276                     l10675:
 25207                           
 25208                           ;fat_misc.c: 329: }
 25209                           ;fat_misc.c: 332: if (pos==8)
 25210  009276  5017               	movf	fatfs_lfn_create_sfn@pos,w,c
 25211  009278  0A08               	xorlw	8
 25212  00927A  1018               	iorwf	fatfs_lfn_create_sfn@pos+1,w,c
 25213  00927C  E00B               	bz	l10683
 25214                           
 25215                           ;fat_misc.c: 333: break;
 25216  00927E  4A1B               	infsnz	fatfs_lfn_create_sfn@i,f,c
 25217  009280  2A1C               	incf	fatfs_lfn_create_sfn@i+1,f,c
 25218  009282                     l10681:
 25219  009282  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25220  009284  0A80               	xorlw	128
 25221  009286  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25222  009288  5015               	movf	fatfs_lfn_create_sfn@len,w,c
 25223  00928A  5C1B               	subwf	fatfs_lfn_create_sfn@i,w,c
 25224  00928C  5016               	movf	fatfs_lfn_create_sfn@len+1,w,c
 25225  00928E  0A80               	xorlw	128
 25226  009290  580D               	subwfb	??_fatfs_lfn_create_sfn& (0+255),w,c
 25227  009292  E3AB               	bnc	l10659
 25228  009294                     l10683:
 25229                           
 25230                           ;fat_misc.c: 334: }
 25231                           ;fat_misc.c: 337: for (i=8;i<11;i++)
 25232  009294  6A1C               	clrf	fatfs_lfn_create_sfn@i+1,c
 25233  009296  0E08               	movlw	8
 25234  009298  6E1B               	movwf	fatfs_lfn_create_sfn@i,c
 25235  00929A  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25236  00929C  0A80               	xorlw	128
 25237  00929E  0F80               	addlw	-128
 25238  0092A0  0E0B               	movlw	11
 25239  0092A2  B4D8               	btfsc	status,2,c
 25240  0092A4  5C1B               	subwf	fatfs_lfn_create_sfn@i,w,c
 25241  0092A6  E261               	bc	l1013
 25242                           
 25243                           ;fat_misc.c: 338: {
 25244                           ;fat_misc.c: 339: if (ext[i-8] >= 'a' && ext[i-8] <= 'z')
 25245  0092A8  0EF8               	movlw	248
 25246  0092AA  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25247  0092AC  680E               	setf	(??_fatfs_lfn_create_sfn+1)& (0+255),c
 25248  0092AE  C01B  F00F         	movff	fatfs_lfn_create_sfn@i,??_fatfs_lfn_create_sfn+2
 25249  0092B2  C01C  F010         	movff	fatfs_lfn_create_sfn@i+1,??_fatfs_lfn_create_sfn+3
 25250  0092B6  500D               	movf	??_fatfs_lfn_create_sfn,w,c
 25251  0092B8  260F               	addwf	??_fatfs_lfn_create_sfn+2,f,c
 25252  0092BA  500E               	movf	??_fatfs_lfn_create_sfn+1,w,c
 25253  0092BC  2210               	addwfc	??_fatfs_lfn_create_sfn+3,f,c
 25254  0092BE  0E12               	movlw	low fatfs_lfn_create_sfn@ext
 25255  0092C0  240F               	addwf	??_fatfs_lfn_create_sfn+2,w,c
 25256  0092C2  6ED9               	movwf	fsr2l,c
 25257  0092C4  0E00               	movlw	high fatfs_lfn_create_sfn@ext
 25258  0092C6  2010               	addwfc	??_fatfs_lfn_create_sfn+3,w,c
 25259  0092C8  6EDA               	movwf	fsr2h,c
 25260  0092CA  0E60               	movlw	96
 25261  0092CC  64DF               	cpfsgt	indf2,c
 25262  0092CE  D031               	goto	l10695
 25263  0092D0  0EF8               	movlw	248
 25264  0092D2  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25265  0092D4  680E               	setf	(??_fatfs_lfn_create_sfn+1)& (0+255),c
 25266  0092D6  C01B  F00F         	movff	fatfs_lfn_create_sfn@i,??_fatfs_lfn_create_sfn+2
 25267  0092DA  C01C  F010         	movff	fatfs_lfn_create_sfn@i+1,??_fatfs_lfn_create_sfn+3
 25268  0092DE  500D               	movf	??_fatfs_lfn_create_sfn,w,c
 25269  0092E0  260F               	addwf	??_fatfs_lfn_create_sfn+2,f,c
 25270  0092E2  500E               	movf	??_fatfs_lfn_create_sfn+1,w,c
 25271  0092E4  2210               	addwfc	??_fatfs_lfn_create_sfn+3,f,c
 25272  0092E6  0E12               	movlw	low fatfs_lfn_create_sfn@ext
 25273  0092E8  240F               	addwf	??_fatfs_lfn_create_sfn+2,w,c
 25274  0092EA  6ED9               	movwf	fsr2l,c
 25275  0092EC  0E00               	movlw	high fatfs_lfn_create_sfn@ext
 25276  0092EE  2010               	addwfc	??_fatfs_lfn_create_sfn+3,w,c
 25277  0092F0  6EDA               	movwf	fsr2h,c
 25278  0092F2  50DF               	movf	indf2,w,c
 25279  0092F4  6E11               	movwf	(??_fatfs_lfn_create_sfn+4)& (0+255),c
 25280  0092F6  0E7B               	movlw	123
 25281  0092F8  5C11               	subwf	??_fatfs_lfn_create_sfn+4,w,c
 25282  0092FA  E21B               	bc	l10695
 25283                           
 25284                           ;fat_misc.c: 340: sfn_output[i] = ext[i-8] - 'a' + 'A';
 25285  0092FC  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25286  0092FE  2409               	addwf	fatfs_lfn_create_sfn@sfn_output,w,c
 25287  009300  6ED9               	movwf	fsr2l,c
 25288  009302  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25289  009304  200A               	addwfc	fatfs_lfn_create_sfn@sfn_output+1,w,c
 25290  009306  6EDA               	movwf	fsr2h,c
 25291  009308  0EF8               	movlw	248
 25292  00930A  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25293  00930C  680E               	setf	(??_fatfs_lfn_create_sfn+1)& (0+255),c
 25294  00930E  C01B  F00F         	movff	fatfs_lfn_create_sfn@i,??_fatfs_lfn_create_sfn+2
 25295  009312  C01C  F010         	movff	fatfs_lfn_create_sfn@i+1,??_fatfs_lfn_create_sfn+3
 25296  009316  500D               	movf	??_fatfs_lfn_create_sfn,w,c
 25297  009318  260F               	addwf	??_fatfs_lfn_create_sfn+2,f,c
 25298  00931A  500E               	movf	??_fatfs_lfn_create_sfn+1,w,c
 25299  00931C  2210               	addwfc	??_fatfs_lfn_create_sfn+3,f,c
 25300  00931E  0E12               	movlw	low fatfs_lfn_create_sfn@ext
 25301  009320  240F               	addwf	??_fatfs_lfn_create_sfn+2,w,c
 25302  009322  6EE1               	movwf	fsr1l,c
 25303  009324  0E00               	movlw	high fatfs_lfn_create_sfn@ext
 25304  009326  2010               	addwfc	??_fatfs_lfn_create_sfn+3,w,c
 25305  009328  6EE2               	movwf	fsr1h,c
 25306  00932A  50E7               	movf	indf1,w,c
 25307  00932C  0FE0               	addlw	224
 25308  00932E  6EDF               	movwf	indf2,c
 25309  009330  D019               	goto	l10697
 25310  009332                     l10695:
 25311                           
 25312                           ;fat_misc.c: 341: else
 25313                           ;fat_misc.c: 342: sfn_output[i] = ext[i-8];
 25314  009332  0EF8               	movlw	248
 25315  009334  6E0D               	movwf	??_fatfs_lfn_create_sfn& (0+255),c
 25316  009336  680E               	setf	(??_fatfs_lfn_create_sfn+1)& (0+255),c
 25317  009338  C01B  F00F         	movff	fatfs_lfn_create_sfn@i,??_fatfs_lfn_create_sfn+2
 25318  00933C  C01C  F010         	movff	fatfs_lfn_create_sfn@i+1,??_fatfs_lfn_create_sfn+3
 25319  009340  500D               	movf	??_fatfs_lfn_create_sfn,w,c
 25320  009342  260F               	addwf	??_fatfs_lfn_create_sfn+2,f,c
 25321  009344  500E               	movf	??_fatfs_lfn_create_sfn+1,w,c
 25322  009346  2210               	addwfc	??_fatfs_lfn_create_sfn+3,f,c
 25323  009348  0E12               	movlw	low fatfs_lfn_create_sfn@ext
 25324  00934A  240F               	addwf	??_fatfs_lfn_create_sfn+2,w,c
 25325  00934C  6ED9               	movwf	fsr2l,c
 25326  00934E  0E00               	movlw	high fatfs_lfn_create_sfn@ext
 25327  009350  2010               	addwfc	??_fatfs_lfn_create_sfn+3,w,c
 25328  009352  6EDA               	movwf	fsr2h,c
 25329  009354  501B               	movf	fatfs_lfn_create_sfn@i,w,c
 25330  009356  2409               	addwf	fatfs_lfn_create_sfn@sfn_output,w,c
 25331  009358  6EE1               	movwf	fsr1l,c
 25332  00935A  501C               	movf	fatfs_lfn_create_sfn@i+1,w,c
 25333  00935C  200A               	addwfc	fatfs_lfn_create_sfn@sfn_output+1,w,c
 25334  00935E  6EE2               	movwf	fsr1h,c
 25335  009360  CFDF FFE7          	movff	indf2,indf1
 25336  009364                     l10697:
 25337  009364  4A1B               	infsnz	fatfs_lfn_create_sfn@i,f,c
 25338  009366  2A1C               	incf	fatfs_lfn_create_sfn@i+1,f,c
 25339  009368  D798               	goto	L76
 25340  00936A                     l1013:
 25341  00936A  0012               	return	
 25342  00936C                     __end_of_fatfs_lfn_create_sfn:
 25343                           	opt stack 0
 25344                           tosu	equ	0xFFF
 25345                           tosh	equ	0xFFE
 25346                           tosl	equ	0xFFD
 25347                           pclath	equ	0xFFA
 25348                           tblptru	equ	0xFF8
 25349                           tblptrh	equ	0xFF7
 25350                           tblptrl	equ	0xFF6
 25351                           tablat	equ	0xFF5
 25352                           prodh	equ	0xFF4
 25353                           prodl	equ	0xFF3
 25354                           indf0	equ	0xFEF
 25355                           postinc0	equ	0xFEE
 25356                           fsr0h	equ	0xFEA
 25357                           fsr0l	equ	0xFE9
 25358                           wreg	equ	0xFE8
 25359                           indf1	equ	0xFE7
 25360                           postinc1	equ	0xFE6
 25361                           postdec1	equ	0xFE5
 25362                           fsr1h	equ	0xFE2
 25363                           fsr1l	equ	0xFE1
 25364                           indf2	equ	0xFDF
 25365                           postinc2	equ	0xFDE
 25366                           postdec2	equ	0xFDD
 25367                           fsr2h	equ	0xFDA
 25368                           fsr2l	equ	0xFD9
 25369                           status	equ	0xFD8
 25370                           
 25371 ;; *************** function _fatfs_free_cluster_chain *****************
 25372 ;; Defined at:
 25373 ;;		line 389 in file "fat_table.c"
 25374 ;; Parameters:    Size  Location     Type
 25375 ;;  fs              2    0[BANK0 ] PTR struct fatfs
 25376 ;;		 -> _fs(1095), 
 25377 ;;  start_cluste    4    2[BANK0 ] unsigned long 
 25378 ;; Auto vars:     Size  Location     Type
 25379 ;;  next_cluster    4   10[BANK0 ] unsigned long 
 25380 ;;  last_cluster    4    6[BANK0 ] unsigned long 
 25381 ;; Return value:  Size  Location     Type
 25382 ;;                  2    0[BANK0 ] int 
 25383 ;; Registers used:
 25384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 25385 ;; Tracked objects:
 25386 ;;		On entry : 0/0
 25387 ;;		On exit  : 0/0
 25388 ;;		Unchanged: 0/0
 25389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25390 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25391 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25393 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25394 ;;Total ram usage:       14 bytes
 25395 ;; Hardware stack levels used:    1
 25396 ;; Hardware stack levels required when called:    6
 25397 ;; This function calls:
 25398 ;;		_fatfs_fat_set_cluster
 25399 ;;		_fatfs_find_next_cluster
 25400 ;; This function is called by:
 25401 ;;		__create_directory
 25402 ;;		__create_file
 25403 ;;		_fl_remove
 25404 ;; This function uses a non-reentrant model
 25405 ;;
 25406                           
 25407                           	psect	text73
 25408  005734                     __ptext73:
 25409                           	opt stack 0
 25410  005734                     _fatfs_free_cluster_chain:
 25411                           	opt stack 19
 25412                           
 25413                           ;fat_table.c: 391: uint32 last_cluster;
 25414                           ;fat_table.c: 392: uint32 next_cluster = start_cluster;
 25415                           
 25416                           ;incstack = 0
 25417  005734  C082  F08A         	movff	fatfs_free_cluster_chain@start_cluster,fatfs_free_cluster_chain@next_cluster
 25418  005738  C083  F08B         	movff	fatfs_free_cluster_chain@start_cluster+1,fatfs_free_cluster_chain@next_cluster+1
 25419  00573C  C084  F08C         	movff	fatfs_free_cluster_chain@start_cluster+2,fatfs_free_cluster_chain@next_cluster+2
 25420  005740  C085  F08D         	movff	fatfs_free_cluster_chain@start_cluster+3,fatfs_free_cluster_chain@next_cluster+3
 25421                           
 25422                           ;fat_table.c: 395: while ( (next_cluster != 0xFFFFFFFF) && (next_cluster != 0x00000000) 
      +                          )
 25423  005744  D033               	goto	l10723
 25424  005746                     l1264:
 25425                           
 25426                           ; BSR set to: 0
 25427                           ;fat_table.c: 396: {
 25428                           ;fat_table.c: 397: last_cluster = next_cluster;
 25429  005746  C08A  F086         	movff	fatfs_free_cluster_chain@next_cluster,fatfs_free_cluster_chain@last_cluster
 25430  00574A  C08B  F087         	movff	fatfs_free_cluster_chain@next_cluster+1,fatfs_free_cluster_chain@last_cluster+1
 25431  00574E  C08C  F088         	movff	fatfs_free_cluster_chain@next_cluster+2,fatfs_free_cluster_chain@last_cluster+2
 25432  005752  C08D  F089         	movff	fatfs_free_cluster_chain@next_cluster+3,fatfs_free_cluster_chain@last_cluster+3
 25433                           
 25434                           ; BSR set to: 0
 25435                           ;fat_table.c: 400: next_cluster = fatfs_find_next_cluster(fs, next_cluster);
 25436  005756  C081  F047         	movff	fatfs_free_cluster_chain@fs+1,fatfs_find_next_cluster@fs+1
 25437  00575A  0100               	movlb	0	; () banked
 25438  00575C  C080  F046         	movff	fatfs_free_cluster_chain@fs,fatfs_find_next_cluster@fs
 25439  005760  C08A  F048         	movff	fatfs_free_cluster_chain@next_cluster,fatfs_find_next_cluster@current_cluster
 25440  005764  C08B  F049         	movff	fatfs_free_cluster_chain@next_cluster+1,fatfs_find_next_cluster@current_cluster+1
 25441  005768  C08C  F04A         	movff	fatfs_free_cluster_chain@next_cluster+2,fatfs_find_next_cluster@current_cluster+2
 25442  00576C  C08D  F04B         	movff	fatfs_free_cluster_chain@next_cluster+3,fatfs_find_next_cluster@current_cluster+3
 25443  005770  EC9F  F054         	call	_fatfs_find_next_cluster	;wreg free
 25444  005774  C046  F08A         	movff	?_fatfs_find_next_cluster,fatfs_free_cluster_chain@next_cluster
 25445  005778  C047  F08B         	movff	?_fatfs_find_next_cluster+1,fatfs_free_cluster_chain@next_cluster+1
 25446  00577C  C048  F08C         	movff	?_fatfs_find_next_cluster+2,fatfs_free_cluster_chain@next_cluster+2
 25447  005780  C049  F08D         	movff	?_fatfs_find_next_cluster+3,fatfs_free_cluster_chain@next_cluster+3
 25448                           
 25449                           ;fat_table.c: 403: fatfs_fat_set_cluster(fs, last_cluster, 0x00000000);
 25450  005784  C081  F047         	movff	fatfs_free_cluster_chain@fs+1,fatfs_fat_set_cluster@fs+1
 25451  005788  0100               	movlb	0	; () banked
 25452  00578A  C080  F046         	movff	fatfs_free_cluster_chain@fs,fatfs_fat_set_cluster@fs
 25453  00578E  C086  F048         	movff	fatfs_free_cluster_chain@last_cluster,fatfs_fat_set_cluster@cluster
 25454  005792  C087  F049         	movff	fatfs_free_cluster_chain@last_cluster+1,fatfs_fat_set_cluster@cluster+1
 25455  005796  C088  F04A         	movff	fatfs_free_cluster_chain@last_cluster+2,fatfs_fat_set_cluster@cluster+2
 25456  00579A  C089  F04B         	movff	fatfs_free_cluster_chain@last_cluster+3,fatfs_fat_set_cluster@cluster+3
 25457  00579E  0E00               	movlw	0
 25458  0057A0  6A4C               	clrf	fatfs_fat_set_cluster@next_cluster,c
 25459  0057A2  6A4D               	clrf	fatfs_fat_set_cluster@next_cluster+1,c
 25460  0057A4  6A4E               	clrf	fatfs_fat_set_cluster@next_cluster+2,c
 25461  0057A6  6A4F               	clrf	fatfs_fat_set_cluster@next_cluster+3,c
 25462  0057A8  EC18  F047         	call	_fatfs_fat_set_cluster	;wreg free
 25463  0057AC                     l10723:
 25464  0057AC  0100               	movlb	0	; () banked
 25465  0057AE  298A               	incf	fatfs_free_cluster_chain@next_cluster& (0+255),w,b
 25466  0057B0  B4D8               	btfsc	status,2,c
 25467  0057B2  298B               	incf	(fatfs_free_cluster_chain@next_cluster+1)& (0+255),w,b
 25468  0057B4  B4D8               	btfsc	status,2,c
 25469  0057B6  298C               	incf	(fatfs_free_cluster_chain@next_cluster+2)& (0+255),w,b
 25470  0057B8  B4D8               	btfsc	status,2,c
 25471  0057BA  298D               	incf	(fatfs_free_cluster_chain@next_cluster+3)& (0+255),w,b
 25472  0057BC  E005               	bz	l10727
 25473                           
 25474                           ; BSR set to: 0
 25475  0057BE  518D               	movf	(fatfs_free_cluster_chain@next_cluster+3)& (0+255),w,b
 25476  0057C0  118A               	iorwf	fatfs_free_cluster_chain@next_cluster& (0+255),w,b
 25477  0057C2  118B               	iorwf	(fatfs_free_cluster_chain@next_cluster+1)& (0+255),w,b
 25478  0057C4  118C               	iorwf	(fatfs_free_cluster_chain@next_cluster+2)& (0+255),w,b
 25479  0057C6  E1BF               	bnz	l1264
 25480  0057C8                     l10727:
 25481                           
 25482                           ; BSR set to: 0
 25483                           ;fat_table.c: 404: }
 25484                           ;fat_table.c: 406: return 1;
 25485  0057C8  0E00               	movlw	0
 25486  0057CA  0100               	movlb	0	; () banked
 25487  0057CC  6F81               	movwf	(?_fatfs_free_cluster_chain+1)& (0+255),b
 25488  0057CE  0E01               	movlw	1
 25489  0057D0  6F80               	movwf	?_fatfs_free_cluster_chain& (0+255),b
 25490                           
 25491                           ; BSR set to: 0
 25492                           
 25493                           ; BSR set to: 0
 25494  0057D2  0C01               	retlw	1
 25495  0057D4                     __end_of_fatfs_free_cluster_chain:
 25496                           	opt stack 0
 25497                           tosu	equ	0xFFF
 25498                           tosh	equ	0xFFE
 25499                           tosl	equ	0xFFD
 25500                           pclath	equ	0xFFA
 25501                           tblptru	equ	0xFF8
 25502                           tblptrh	equ	0xFF7
 25503                           tblptrl	equ	0xFF6
 25504                           tablat	equ	0xFF5
 25505                           prodh	equ	0xFF4
 25506                           prodl	equ	0xFF3
 25507                           indf0	equ	0xFEF
 25508                           postinc0	equ	0xFEE
 25509                           fsr0h	equ	0xFEA
 25510                           fsr0l	equ	0xFE9
 25511                           wreg	equ	0xFE8
 25512                           indf1	equ	0xFE7
 25513                           postinc1	equ	0xFE6
 25514                           postdec1	equ	0xFE5
 25515                           fsr1h	equ	0xFE2
 25516                           fsr1l	equ	0xFE1
 25517                           indf2	equ	0xFDF
 25518                           postinc2	equ	0xFDE
 25519                           postdec2	equ	0xFDD
 25520                           fsr2h	equ	0xFDA
 25521                           fsr2l	equ	0xFD9
 25522                           status	equ	0xFD8
 25523                           
 25524 ;; *************** function _fatfs_fat_purge *****************
 25525 ;; Defined at:
 25526 ;;		line 179 in file "fat_table.c"
 25527 ;; Parameters:    Size  Location     Type
 25528 ;;  fs              2   51[COMRAM] PTR struct fatfs
 25529 ;;		 -> _fs(1095), 
 25530 ;; Auto vars:     Size  Location     Type
 25531 ;;  pcur            2   53[COMRAM] PTR struct fat_buffer
 25532 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 25533 ;;		 -> NULL(0), 
 25534 ;; Return value:  Size  Location     Type
 25535 ;;                  2   51[COMRAM] int 
 25536 ;; Registers used:
 25537 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 25538 ;; Tracked objects:
 25539 ;;		On entry : 0/0
 25540 ;;		On exit  : 0/0
 25541 ;;		Unchanged: 0/0
 25542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25546 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25547 ;;Total ram usage:        4 bytes
 25548 ;; Hardware stack levels used:    1
 25549 ;; Hardware stack levels required when called:    4
 25550 ;; This function calls:
 25551 ;;		_fatfs_fat_writeback
 25552 ;; This function is called by:
 25553 ;;		__create_directory
 25554 ;;		__open_file
 25555 ;;		__create_file
 25556 ;;		_fl_shutdown
 25557 ;;		_fl_fclose
 25558 ;; This function uses a non-reentrant model
 25559 ;;
 25560                           
 25561                           	psect	text74
 25562  00459A                     __ptext74:
 25563                           	opt stack 0
 25564  00459A                     _fatfs_fat_purge:
 25565                           	opt stack 25
 25566                           
 25567                           ;fat_table.c: 181: struct fat_buffer *pcur = fs->fat_buffer_head;
 25568                           
 25569                           ; BSR set to: 0
 25570                           ;incstack = 0
 25571  00459A  EE22 F03B          	lfsr	2,571
 25572  00459E  5034               	movf	fatfs_fat_purge@fs,w,c
 25573  0045A0  26D9               	addwf	fsr2l,f,c
 25574  0045A2  5035               	movf	fatfs_fat_purge@fs+1,w,c
 25575  0045A4  D01B               	goto	L77
 25576  0045A6                     l10837:
 25577                           
 25578                           ;fat_table.c: 185: {
 25579                           ;fat_table.c: 187: if (pcur->dirty)
 25580  0045A6  EE22 F004          	lfsr	2,516
 25581  0045AA  5036               	movf	fatfs_fat_purge@pcur,w,c
 25582  0045AC  26D9               	addwf	fsr2l,f,c
 25583  0045AE  5037               	movf	fatfs_fat_purge@pcur+1,w,c
 25584  0045B0  22DA               	addwfc	fsr2h,f,c
 25585  0045B2  50DE               	movf	postinc2,w,c
 25586  0045B4  10DD               	iorwf	postdec2,w,c
 25587  0045B6  E00D               	bz	l10843
 25588                           
 25589                           ;fat_table.c: 188: if (!fatfs_fat_writeback(fs, pcur))
 25590  0045B8  C035  F021         	movff	fatfs_fat_purge@fs+1,fatfs_fat_writeback@fs+1
 25591  0045BC  C034  F020         	movff	fatfs_fat_purge@fs,fatfs_fat_writeback@fs
 25592  0045C0  C037  F023         	movff	fatfs_fat_purge@pcur+1,fatfs_fat_writeback@pcur+1
 25593  0045C4  C036  F022         	movff	fatfs_fat_purge@pcur,fatfs_fat_writeback@pcur
 25594  0045C8  EC7C  F03C         	call	_fatfs_fat_writeback	;wreg free
 25595  0045CC  5021               	movf	?_fatfs_fat_writeback+1,w,c
 25596  0045CE  1020               	iorwf	?_fatfs_fat_writeback,w,c
 25597  0045D0  E00D               	bz	l1220
 25598  0045D2                     l10843:
 25599                           
 25600                           ;fat_table.c: 191: pcur = pcur->next;
 25601  0045D2  EE22 F008          	lfsr	2,520
 25602  0045D6  5036               	movf	fatfs_fat_purge@pcur,w,c
 25603  0045D8  26D9               	addwf	fsr2l,f,c
 25604  0045DA  5037               	movf	fatfs_fat_purge@pcur+1,w,c
 25605  0045DC                     L77:
 25606  0045DC  22DA               	addwfc	fsr2h,f,c
 25607  0045DE  CFDE F036          	movff	postinc2,fatfs_fat_purge@pcur
 25608  0045E2  CFDD F037          	movff	postdec2,fatfs_fat_purge@pcur+1
 25609  0045E6  5037               	movf	fatfs_fat_purge@pcur+1,w,c
 25610  0045E8  1036               	iorwf	fatfs_fat_purge@pcur,w,c
 25611  0045EA  E1DD               	bnz	l10837
 25612  0045EC                     l1220:
 25613  0045EC  0012               	return	
 25614  0045EE                     __end_of_fatfs_fat_purge:
 25615                           	opt stack 0
 25616                           tosu	equ	0xFFF
 25617                           tosh	equ	0xFFE
 25618                           tosl	equ	0xFFD
 25619                           pclath	equ	0xFFA
 25620                           tblptru	equ	0xFF8
 25621                           tblptrh	equ	0xFF7
 25622                           tblptrl	equ	0xFF6
 25623                           tablat	equ	0xFF5
 25624                           prodh	equ	0xFF4
 25625                           prodl	equ	0xFF3
 25626                           indf0	equ	0xFEF
 25627                           postinc0	equ	0xFEE
 25628                           fsr0h	equ	0xFEA
 25629                           fsr0l	equ	0xFE9
 25630                           wreg	equ	0xFE8
 25631                           indf1	equ	0xFE7
 25632                           postinc1	equ	0xFE6
 25633                           postdec1	equ	0xFE5
 25634                           fsr1h	equ	0xFE2
 25635                           fsr1l	equ	0xFE1
 25636                           indf2	equ	0xFDF
 25637                           postinc2	equ	0xFDE
 25638                           postdec2	equ	0xFDD
 25639                           fsr2h	equ	0xFDA
 25640                           fsr2l	equ	0xFD9
 25641                           status	equ	0xFD8
 25642                           
 25643 ;; *************** function _fatfs_allocate_free_space *****************
 25644 ;; Defined at:
 25645 ;;		line 82 in file "fat_write.c"
 25646 ;; Parameters:    Size  Location     Type
 25647 ;;  fs              2   30[BANK0 ] PTR struct fatfs
 25648 ;;		 -> _fs(1095), 
 25649 ;;  newFile         2   32[BANK0 ] int 
 25650 ;;  startCluster    2   34[BANK0 ] PTR unsigned long 
 25651 ;;		 -> RAM(3967), NULL(0), 
 25652 ;;  size            4   36[BANK0 ] unsigned long 
 25653 ;; Auto vars:     Size  Location     Type
 25654 ;;  nextcluster     4   56[BANK0 ] unsigned long 
 25655 ;;  clusterCount    4   52[BANK0 ] unsigned long 
 25656 ;;  clusterSize     4   48[BANK0 ] unsigned long 
 25657 ;; Return value:  Size  Location     Type
 25658 ;;                  2   30[BANK0 ] int 
 25659 ;; Registers used:
 25660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25661 ;; Tracked objects:
 25662 ;;		On entry : 0/0
 25663 ;;		On exit  : 0/0
 25664 ;;		Unchanged: 0/0
 25665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25666 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25667 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25668 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25669 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25670 ;;Total ram usage:       30 bytes
 25671 ;; Hardware stack levels used:    1
 25672 ;; Hardware stack levels required when called:    7
 25673 ;; This function calls:
 25674 ;;		___lldiv
 25675 ;;		_fatfs_add_free_space
 25676 ;;		_fatfs_fat_set_cluster
 25677 ;;		_fatfs_find_blank_cluster
 25678 ;;		_fatfs_set_fs_info_next_free_cluster
 25679 ;; This function is called by:
 25680 ;;		__create_directory
 25681 ;;		__create_file
 25682 ;; This function uses a non-reentrant model
 25683 ;;
 25684                           
 25685                           	psect	text75
 25686  008958                     __ptext75:
 25687                           	opt stack 0
 25688  008958                     _fatfs_allocate_free_space:
 25689                           	opt stack 18
 25690                           
 25691                           ;fat_write.c: 84: uint32 clusterSize;
 25692                           ;fat_write.c: 85: uint32 clusterCount;
 25693                           ;fat_write.c: 86: uint32 nextcluster;
 25694                           ;fat_write.c: 88: if (size==0)
 25695                           
 25696                           ;incstack = 0
 25697  008958  0100               	movlb	0	; () banked
 25698  00895A  51A7               	movf	(fatfs_allocate_free_space@size+3)& (0+255),w,b
 25699  00895C  11A4               	iorwf	fatfs_allocate_free_space@size& (0+255),w,b
 25700  00895E  11A5               	iorwf	(fatfs_allocate_free_space@size+1)& (0+255),w,b
 25701  008960  11A6               	iorwf	(fatfs_allocate_free_space@size+2)& (0+255),w,b
 25702  008962  E101 D0D4          	bz	u11980
 25703                           
 25704                           ; BSR set to: 0
 25705                           ;fat_write.c: 92: if (fs->next_free_cluster != 0xFFFFFFFF)
 25706                           
 25707                           ; BSR set to: 0
 25708                           
 25709                           ; BSR set to: 0
 25710                           
 25711                           ; BSR set to: 0
 25712                           ;fat_write.c: 89: return 0;
 25713  008966  EE20 F01F          	lfsr	2,31
 25714  00896A  519E               	movf	fatfs_allocate_free_space@fs& (0+255),w,b
 25715  00896C  26D9               	addwf	fsr2l,f,c
 25716  00896E  519F               	movf	(fatfs_allocate_free_space@fs+1)& (0+255),w,b
 25717  008970  22DA               	addwfc	fsr2h,f,c
 25718  008972  CFDE F0A8          	movff	postinc2,??_fatfs_allocate_free_space
 25719  008976  CFDE F0A9          	movff	postinc2,??_fatfs_allocate_free_space+1
 25720  00897A  CFDE F0AA          	movff	postinc2,??_fatfs_allocate_free_space+2
 25721  00897E  CFDE F0AB          	movff	postinc2,??_fatfs_allocate_free_space+3
 25722  008982  29A8               	incf	??_fatfs_allocate_free_space& (0+255),w,b
 25723  008984  B4D8               	btfsc	status,2,c
 25724  008986  29A9               	incf	(??_fatfs_allocate_free_space+1)& (0+255),w,b
 25725  008988  B4D8               	btfsc	status,2,c
 25726  00898A  29AA               	incf	(??_fatfs_allocate_free_space+2)& (0+255),w,b
 25727  00898C  B4D8               	btfsc	status,2,c
 25728  00898E  29AB               	incf	(??_fatfs_allocate_free_space+3)& (0+255),w,b
 25729  008990  E00B               	bz	l10589
 25730                           
 25731                           ; BSR set to: 0
 25732                           ;fat_write.c: 93: fatfs_set_fs_info_next_free_cluster(fs, 0xFFFFFFFF);
 25733  008992  C09F  F047         	movff	fatfs_allocate_free_space@fs+1,fatfs_set_fs_info_next_free_cluster@fs+1
 25734  008996  C09E  F046         	movff	fatfs_allocate_free_space@fs,fatfs_set_fs_info_next_free_cluster@fs
 25735  00899A  0EFF               	movlw	255
 25736  00899C  6848               	setf	fatfs_set_fs_info_next_free_cluster@newValue,c
 25737  00899E  6849               	setf	fatfs_set_fs_info_next_free_cluster@newValue+1,c
 25738  0089A0  684A               	setf	fatfs_set_fs_info_next_free_cluster@newValue+2,c
 25739  0089A2  684B               	setf	fatfs_set_fs_info_next_free_cluster@newValue+3,c
 25740  0089A4  ECE0  F039         	call	_fatfs_set_fs_info_next_free_cluster	;wreg free
 25741  0089A8                     l10589:
 25742                           
 25743                           ;fat_write.c: 96: clusterSize = fs->sectors_per_cluster * 512;
 25744  0089A8  0100               	movlb	0	; () banked
 25745  0089AA  6BA8               	clrf	??_fatfs_allocate_free_space& (0+255),b
 25746  0089AC  0E02               	movlw	2
 25747  0089AE  6FA9               	movwf	(??_fatfs_allocate_free_space+1)& (0+255),b
 25748  0089B0  C09E  FFD9         	movff	fatfs_allocate_free_space@fs,fsr2l
 25749  0089B4  C09F  FFDA         	movff	fatfs_allocate_free_space@fs+1,fsr2h
 25750  0089B8  50DF               	movf	indf2,w,c
 25751  0089BA  6FAA               	movwf	(??_fatfs_allocate_free_space+2)& (0+255),b
 25752  0089BC  6BAB               	clrf	(??_fatfs_allocate_free_space+3)& (0+255),b
 25753  0089BE  51A8               	movf	??_fatfs_allocate_free_space& (0+255),w,b
 25754  0089C0  03AA               	mulwf	(??_fatfs_allocate_free_space+2)& (0+255),b
 25755  0089C2  CFF3 F0AC          	movff	prodl,??_fatfs_allocate_free_space+4
 25756  0089C6  CFF4 F0AD          	movff	prodh,??_fatfs_allocate_free_space+5
 25757  0089CA  03AB               	mulwf	(??_fatfs_allocate_free_space+3)& (0+255),b
 25758  0089CC  50F3               	movf	243,w,c
 25759  0089CE  27AD               	addwf	(??_fatfs_allocate_free_space+5)& (0+255),f,b
 25760  0089D0  51A9               	movf	(??_fatfs_allocate_free_space+1)& (0+255),w,b
 25761  0089D2  03AA               	mulwf	(??_fatfs_allocate_free_space+2)& (0+255),b
 25762  0089D4  50F3               	movf	243,w,c
 25763  0089D6  27AD               	addwf	(??_fatfs_allocate_free_space+5)& (0+255),f,b
 25764  0089D8  C0AC  F0B0         	movff	??_fatfs_allocate_free_space+4,fatfs_allocate_free_space@clusterSize
 25765  0089DC  C0AD  F0B1         	movff	??_fatfs_allocate_free_space+5,fatfs_allocate_free_space@clusterSize+1
 25766  0089E0  0E00               	movlw	0
 25767  0089E2  BFB1               	btfsc	(fatfs_allocate_free_space@clusterSize+1)& (0+255),7,b
 25768  0089E4  0EFF               	movlw	-1
 25769  0089E6  6FB2               	movwf	(fatfs_allocate_free_space@clusterSize+2)& (0+255),b
 25770  0089E8  6FB3               	movwf	(fatfs_allocate_free_space@clusterSize+3)& (0+255),b
 25771                           
 25772                           ; BSR set to: 0
 25773                           ;fat_write.c: 97: clusterCount = (size / clusterSize);
 25774  0089EA  C0A4  F001         	movff	fatfs_allocate_free_space@size,___lldiv@dividend
 25775  0089EE  C0A5  F002         	movff	fatfs_allocate_free_space@size+1,___lldiv@dividend+1
 25776  0089F2  C0A6  F003         	movff	fatfs_allocate_free_space@size+2,___lldiv@dividend+2
 25777  0089F6  C0A7  F004         	movff	fatfs_allocate_free_space@size+3,___lldiv@dividend+3
 25778  0089FA  C0B0  F005         	movff	fatfs_allocate_free_space@clusterSize,___lldiv@divisor
 25779  0089FE  C0B1  F006         	movff	fatfs_allocate_free_space@clusterSize+1,___lldiv@divisor+1
 25780  008A02  C0B2  F007         	movff	fatfs_allocate_free_space@clusterSize+2,___lldiv@divisor+2
 25781  008A06  C0B3  F008         	movff	fatfs_allocate_free_space@clusterSize+3,___lldiv@divisor+3
 25782  008A0A  EC85  F026         	call	___lldiv	;wreg free
 25783  008A0E  C001  F0B4         	movff	?___lldiv,fatfs_allocate_free_space@clusterCount
 25784  008A12  C002  F0B5         	movff	?___lldiv+1,fatfs_allocate_free_space@clusterCount+1
 25785  008A16  C003  F0B6         	movff	?___lldiv+2,fatfs_allocate_free_space@clusterCount+2
 25786  008A1A  C004  F0B7         	movff	?___lldiv+3,fatfs_allocate_free_space@clusterCount+3
 25787                           
 25788                           ;fat_write.c: 100: if (size-(clusterSize*clusterCount))
 25789  008A1E  0100               	movlb	0	; () banked
 25790  008A20  51B0               	movf	fatfs_allocate_free_space@clusterSize& (0+255),w,b
 25791  008A22  03B4               	mulwf	fatfs_allocate_free_space@clusterCount& (0+255),b
 25792  008A24  CFF3 F0A8          	movff	prodl,??_fatfs_allocate_free_space
 25793  008A28  CFF4 F0A9          	movff	prodh,??_fatfs_allocate_free_space+1
 25794  008A2C  6BAA               	clrf	(??_fatfs_allocate_free_space+2)& (0+255),b
 25795  008A2E  6BAB               	clrf	(??_fatfs_allocate_free_space+3)& (0+255),b
 25796  008A30  03B5               	mulwf	(fatfs_allocate_free_space@clusterCount+1)& (0+255),b
 25797  008A32  50F3               	movf	243,w,c
 25798  008A34  27A9               	addwf	(??_fatfs_allocate_free_space+1)& (0+255),f,b
 25799  008A36  50F4               	movf	244,w,c
 25800  008A38  23AA               	addwfc	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25801  008A3A  0E00               	movlw	0
 25802  008A3C  23AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25803  008A3E  51B1               	movf	(fatfs_allocate_free_space@clusterSize+1)& (0+255),w,b
 25804  008A40  03B4               	mulwf	fatfs_allocate_free_space@clusterCount& (0+255),b
 25805  008A42  50F3               	movf	243,w,c
 25806  008A44  27A9               	addwf	(??_fatfs_allocate_free_space+1)& (0+255),f,b
 25807  008A46  50F4               	movf	244,w,c
 25808  008A48  23AA               	addwfc	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25809  008A4A  0E00               	movlw	0
 25810  008A4C  23AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25811  008A4E  51B0               	movf	fatfs_allocate_free_space@clusterSize& (0+255),w,b
 25812  008A50  03B6               	mulwf	(fatfs_allocate_free_space@clusterCount+2)& (0+255),b
 25813  008A52  50F3               	movf	243,w,c
 25814  008A54  27AA               	addwf	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25815  008A56  50F4               	movf	244,w,c
 25816  008A58  23AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25817  008A5A  51B1               	movf	(fatfs_allocate_free_space@clusterSize+1)& (0+255),w,b
 25818  008A5C  03B5               	mulwf	(fatfs_allocate_free_space@clusterCount+1)& (0+255),b
 25819  008A5E  50F3               	movf	243,w,c
 25820  008A60  27AA               	addwf	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25821  008A62  50F4               	movf	244,w,c
 25822  008A64  23AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25823  008A66  51B2               	movf	(fatfs_allocate_free_space@clusterSize+2)& (0+255),w,b
 25824  008A68  03B4               	mulwf	fatfs_allocate_free_space@clusterCount& (0+255),b
 25825  008A6A  50F3               	movf	243,w,c
 25826  008A6C  27AA               	addwf	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25827  008A6E  50F4               	movf	244,w,c
 25828  008A70  23AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25829  008A72  51B7               	movf	(fatfs_allocate_free_space@clusterCount+3)& (0+255),w,b
 25830  008A74  03B0               	mulwf	fatfs_allocate_free_space@clusterSize& (0+255),b
 25831  008A76  50F3               	movf	243,w,c
 25832  008A78  27AB               	addwf	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25833  008A7A  51B1               	movf	(fatfs_allocate_free_space@clusterSize+1)& (0+255),w,b
 25834  008A7C  03B6               	mulwf	(fatfs_allocate_free_space@clusterCount+2)& (0+255),b
 25835  008A7E  50F3               	movf	243,w,c
 25836  008A80  27AB               	addwf	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25837  008A82  51B2               	movf	(fatfs_allocate_free_space@clusterSize+2)& (0+255),w,b
 25838  008A84  03B5               	mulwf	(fatfs_allocate_free_space@clusterCount+1)& (0+255),b
 25839  008A86  50F3               	movf	243,w,c
 25840  008A88  27AB               	addwf	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25841  008A8A  51B3               	movf	(fatfs_allocate_free_space@clusterSize+3)& (0+255),w,b
 25842  008A8C  03B4               	mulwf	fatfs_allocate_free_space@clusterCount& (0+255),b
 25843  008A8E  50F3               	movf	243,w,c
 25844  008A90  27AB               	addwf	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25845  008A92  1FA8               	comf	??_fatfs_allocate_free_space& (0+255),f,b
 25846  008A94  1FA9               	comf	(??_fatfs_allocate_free_space+1)& (0+255),f,b
 25847  008A96  1FAA               	comf	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25848  008A98  1FAB               	comf	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25849  008A9A  2BA8               	incf	??_fatfs_allocate_free_space& (0+255),f,b
 25850  008A9C  0E00               	movlw	0
 25851  008A9E  23A9               	addwfc	(??_fatfs_allocate_free_space+1)& (0+255),f,b
 25852  008AA0  23AA               	addwfc	(??_fatfs_allocate_free_space+2)& (0+255),f,b
 25853  008AA2  23AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),f,b
 25854  008AA4  51A4               	movf	fatfs_allocate_free_space@size& (0+255),w,b
 25855  008AA6  25A8               	addwf	??_fatfs_allocate_free_space& (0+255),w,b
 25856  008AA8  6FAC               	movwf	(??_fatfs_allocate_free_space+4)& (0+255),b
 25857  008AAA  51A5               	movf	(fatfs_allocate_free_space@size+1)& (0+255),w,b
 25858  008AAC  21A9               	addwfc	(??_fatfs_allocate_free_space+1)& (0+255),w,b
 25859  008AAE  6FAD               	movwf	(??_fatfs_allocate_free_space+5)& (0+255),b
 25860  008AB0  51A6               	movf	(fatfs_allocate_free_space@size+2)& (0+255),w,b
 25861  008AB2  21AA               	addwfc	(??_fatfs_allocate_free_space+2)& (0+255),w,b
 25862  008AB4  6FAE               	movwf	(??_fatfs_allocate_free_space+6)& (0+255),b
 25863  008AB6  51A7               	movf	(fatfs_allocate_free_space@size+3)& (0+255),w,b
 25864  008AB8  21AB               	addwfc	(??_fatfs_allocate_free_space+3)& (0+255),w,b
 25865  008ABA  6FAF               	movwf	(??_fatfs_allocate_free_space+7)& (0+255),b
 25866  008ABC  51AF               	movf	(??_fatfs_allocate_free_space+7)& (0+255),w,b
 25867  008ABE  11AC               	iorwf	(??_fatfs_allocate_free_space+4)& (0+255),w,b
 25868  008AC0  11AD               	iorwf	(??_fatfs_allocate_free_space+5)& (0+255),w,b
 25869  008AC2  11AE               	iorwf	(??_fatfs_allocate_free_space+6)& (0+255),w,b
 25870  008AC4  E005               	bz	l1329
 25871                           
 25872                           ; BSR set to: 0
 25873                           ;fat_write.c: 101: clusterCount++;
 25874  008AC6  2BB4               	incf	fatfs_allocate_free_space@clusterCount& (0+255),f,b
 25875  008AC8  0E00               	movlw	0
 25876  008ACA  23B5               	addwfc	(fatfs_allocate_free_space@clusterCount+1)& (0+255),f,b
 25877  008ACC  23B6               	addwfc	(fatfs_allocate_free_space@clusterCount+2)& (0+255),f,b
 25878  008ACE  23B7               	addwfc	(fatfs_allocate_free_space@clusterCount+3)& (0+255),f,b
 25879  008AD0                     l1329:
 25880                           
 25881                           ; BSR set to: 0
 25882                           ;fat_write.c: 104: if (newFile)
 25883  008AD0  0100               	movlb	0	; () banked
 25884  008AD2  51A1               	movf	(fatfs_allocate_free_space@newFile+1)& (0+255),w,b
 25885  008AD4  11A0               	iorwf	fatfs_allocate_free_space@newFile& (0+255),w,b
 25886  008AD6  E045               	bz	l10613
 25887                           
 25888                           ; BSR set to: 0
 25889                           ;fat_write.c: 105: {
 25890                           ;fat_write.c: 106: if (!fatfs_find_blank_cluster(fs, fs->rootdir_first_cluster, &nextclu
      +                          ster))
 25891  008AD8  C09F  F047         	movff	fatfs_allocate_free_space@fs+1,fatfs_find_blank_cluster@fs+1
 25892  008ADC  C09E  F046         	movff	fatfs_allocate_free_space@fs,fatfs_find_blank_cluster@fs
 25893  008AE0  EE20 F005          	lfsr	2,5
 25894  008AE4  519E               	movf	fatfs_allocate_free_space@fs& (0+255),w,b
 25895  008AE6  26D9               	addwf	fsr2l,f,c
 25896  008AE8  519F               	movf	(fatfs_allocate_free_space@fs+1)& (0+255),w,b
 25897  008AEA  22DA               	addwfc	fsr2h,f,c
 25898  008AEC  CFDE F048          	movff	postinc2,fatfs_find_blank_cluster@start_cluster
 25899  008AF0  CFDE F049          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+1
 25900  008AF4  CFDE F04A          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+2
 25901  008AF8  CFDE F04B          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+3
 25902  008AFC  0E00               	movlw	high fatfs_allocate_free_space@nextcluster
 25903  008AFE  6E4D               	movwf	fatfs_find_blank_cluster@free_cluster+1,c
 25904  008B00  0EB8               	movlw	low fatfs_allocate_free_space@nextcluster
 25905  008B02  6E4C               	movwf	fatfs_find_blank_cluster@free_cluster,c
 25906  008B04  EC26  F05A         	call	_fatfs_find_blank_cluster	;wreg free
 25907  008B08  5047               	movf	?_fatfs_find_blank_cluster+1,w,c
 25908  008B0A  1046               	iorwf	?_fatfs_find_blank_cluster,w,c
 25909  008B0C  E104               	bnz	l10603
 25910  008B0E                     u11980:
 25911                           
 25912                           ;fat_write.c: 107: return 0;
 25913  008B0E  0E00               	movlw	0
 25914  008B10  0100               	movlb	0	; () banked
 25915  008B12  6F9F               	movwf	(?_fatfs_allocate_free_space+1)& (0+255),b
 25916  008B14  D04C               	goto	L80
 25917  008B16                     l10603:
 25918                           
 25919                           ;fat_write.c: 110: if (clusterCount==1)
 25920  008B16  0100               	movlb	0	; () banked
 25921  008B18  05B4               	decf	fatfs_allocate_free_space@clusterCount& (0+255),w,b
 25922  008B1A  11B5               	iorwf	(fatfs_allocate_free_space@clusterCount+1)& (0+255),w,b
 25923  008B1C  11B6               	iorwf	(fatfs_allocate_free_space@clusterCount+2)& (0+255),w,b
 25924  008B1E  11B7               	iorwf	(fatfs_allocate_free_space@clusterCount+3)& (0+255),w,b
 25925  008B20  E12C               	bnz	l10615
 25926                           
 25927                           ; BSR set to: 0
 25928                           ;fat_write.c: 111: {
 25929                           ;fat_write.c: 112: fatfs_fat_set_cluster(fs, nextcluster, 0xFFFFFFFF);
 25930  008B22  C09F  F047         	movff	fatfs_allocate_free_space@fs+1,fatfs_fat_set_cluster@fs+1
 25931  008B26  C09E  F046         	movff	fatfs_allocate_free_space@fs,fatfs_fat_set_cluster@fs
 25932  008B2A  C0B8  F048         	movff	fatfs_allocate_free_space@nextcluster,fatfs_fat_set_cluster@cluster
 25933  008B2E  C0B9  F049         	movff	fatfs_allocate_free_space@nextcluster+1,fatfs_fat_set_cluster@cluster+1
 25934  008B32  C0BA  F04A         	movff	fatfs_allocate_free_space@nextcluster+2,fatfs_fat_set_cluster@cluster+2
 25935  008B36  C0BB  F04B         	movff	fatfs_allocate_free_space@nextcluster+3,fatfs_fat_set_cluster@cluster+3
 25936  008B3A  0EFF               	movlw	255
 25937  008B3C  684C               	setf	fatfs_fat_set_cluster@next_cluster,c
 25938  008B3E  684D               	setf	fatfs_fat_set_cluster@next_cluster+1,c
 25939  008B40  684E               	setf	fatfs_fat_set_cluster@next_cluster+2,c
 25940  008B42  684F               	setf	fatfs_fat_set_cluster@next_cluster+3,c
 25941  008B44  EC18  F047         	call	_fatfs_fat_set_cluster	;wreg free
 25942                           
 25943                           ;fat_write.c: 113: *startCluster = nextcluster;
 25944  008B48  C0A2  FFD9         	movff	fatfs_allocate_free_space@startCluster,fsr2l
 25945  008B4C  C0A3  FFDA         	movff	fatfs_allocate_free_space@startCluster+1,fsr2h
 25946  008B50  C0B8  FFDE         	movff	fatfs_allocate_free_space@nextcluster,postinc2
 25947  008B54  C0B9  FFDE         	movff	fatfs_allocate_free_space@nextcluster+1,postinc2
 25948  008B58  C0BA  FFDE         	movff	fatfs_allocate_free_space@nextcluster+2,postinc2
 25949  008B5C  C0BB  FFDE         	movff	fatfs_allocate_free_space@nextcluster+3,postinc2
 25950  008B60  D022               	goto	l10621
 25951  008B62                     l10613:
 25952                           
 25953                           ; BSR set to: 0
 25954                           ;fat_write.c: 118: else
 25955                           ;fat_write.c: 119: nextcluster = *startCluster;
 25956  008B62  C0A2  FFD9         	movff	fatfs_allocate_free_space@startCluster,fsr2l
 25957  008B66  C0A3  FFDA         	movff	fatfs_allocate_free_space@startCluster+1,fsr2h
 25958  008B6A  CFDE F0B8          	movff	postinc2,fatfs_allocate_free_space@nextcluster
 25959  008B6E  CFDE F0B9          	movff	postinc2,fatfs_allocate_free_space@nextcluster+1
 25960  008B72  CFDE F0BA          	movff	postinc2,fatfs_allocate_free_space@nextcluster+2
 25961  008B76  CFDE F0BB          	movff	postinc2,fatfs_allocate_free_space@nextcluster+3
 25962  008B7A                     l10615:
 25963                           
 25964                           ; BSR set to: 0
 25965                           ;fat_write.c: 121: if (!fatfs_add_free_space(fs, &nextcluster, clusterCount))
 25966  008B7A  C09F  F075         	movff	fatfs_allocate_free_space@fs+1,fatfs_add_free_space@fs+1
 25967  008B7E  C09E  F074         	movff	fatfs_allocate_free_space@fs,fatfs_add_free_space@fs
 25968  008B82  0E00               	movlw	high fatfs_allocate_free_space@nextcluster
 25969  008B84  6E77               	movwf	fatfs_add_free_space@startCluster+1,c
 25970  008B86  0100               	movlb	0	; () banked
 25971  008B88  0EB8               	movlw	low fatfs_allocate_free_space@nextcluster
 25972  008B8A  6E76               	movwf	fatfs_add_free_space@startCluster,c
 25973  008B8C  C0B4  F078         	movff	fatfs_allocate_free_space@clusterCount,fatfs_add_free_space@clusters
 25974  008B90  C0B5  F079         	movff	fatfs_allocate_free_space@clusterCount+1,fatfs_add_free_space@clusters+1
 25975  008B94  C0B6  F07A         	movff	fatfs_allocate_free_space@clusterCount+2,fatfs_add_free_space@clusters+2
 25976  008B98  C0B7  F07B         	movff	fatfs_allocate_free_space@clusterCount+3,fatfs_add_free_space@clusters+3
 25977  008B9C  EC02  F036         	call	_fatfs_add_free_space	;wreg free
 25978  008BA0  5075               	movf	?_fatfs_add_free_space+1,w,c
 25979  008BA2  1074               	iorwf	?_fatfs_add_free_space,w,c
 25980  008BA4  E0B4               	bz	u11980
 25981  008BA6                     l10621:
 25982                           
 25983                           ;fat_write.c: 124: return 1;
 25984  008BA6  0E00               	movlw	0
 25985  008BA8  0100               	movlb	0	; () banked
 25986  008BAA  6F9F               	movwf	(?_fatfs_allocate_free_space+1)& (0+255),b
 25987  008BAC  0E01               	movlw	1
 25988  008BAE                     L80:
 25989  008BAE  0100               	movlb	0	; () banked
 25990  008BB0  6F9E               	movwf	?_fatfs_allocate_free_space& (0+255),b
 25991                           
 25992                           ; BSR set to: 0
 25993                           
 25994                           ; BSR set to: 0
 25995  008BB2  0012               	return	
 25996  008BB4                     __end_of_fatfs_allocate_free_space:
 25997                           	opt stack 0
 25998                           tosu	equ	0xFFF
 25999                           tosh	equ	0xFFE
 26000                           tosl	equ	0xFFD
 26001                           pclath	equ	0xFFA
 26002                           tblptru	equ	0xFF8
 26003                           tblptrh	equ	0xFF7
 26004                           tblptrl	equ	0xFF6
 26005                           tablat	equ	0xFF5
 26006                           prodh	equ	0xFF4
 26007                           prodl	equ	0xFF3
 26008                           indf0	equ	0xFEF
 26009                           postinc0	equ	0xFEE
 26010                           fsr0h	equ	0xFEA
 26011                           fsr0l	equ	0xFE9
 26012                           wreg	equ	0xFE8
 26013                           indf1	equ	0xFE7
 26014                           postinc1	equ	0xFE6
 26015                           postdec1	equ	0xFE5
 26016                           fsr1h	equ	0xFE2
 26017                           fsr1l	equ	0xFE1
 26018                           indf2	equ	0xFDF
 26019                           postinc2	equ	0xFDE
 26020                           postdec2	equ	0xFDD
 26021                           fsr2h	equ	0xFDA
 26022                           fsr2l	equ	0xFD9
 26023                           status	equ	0xFD8
 26024                           
 26025 ;; *************** function _fatfs_add_free_space *****************
 26026 ;; Defined at:
 26027 ;;		line 45 in file "fat_write.c"
 26028 ;; Parameters:    Size  Location     Type
 26029 ;;  fs              2  115[COMRAM] PTR struct fatfs
 26030 ;;		 -> _fs(1095), 
 26031 ;;  startCluster    2  117[COMRAM] PTR unsigned long 
 26032 ;;		 -> fatfs_allocate_free_space@nextcluster(4), _write_sectors@LastCluster(4), 
 26033 ;;  clusters        4  119[COMRAM] unsigned long 
 26034 ;; Auto vars:     Size  Location     Type
 26035 ;;  nextcluster     4   26[BANK0 ] unsigned long 
 26036 ;;  i               4   22[BANK0 ] unsigned long 
 26037 ;;  start           4   18[BANK0 ] unsigned long 
 26038 ;; Return value:  Size  Location     Type
 26039 ;;                  2  115[COMRAM] int 
 26040 ;; Registers used:
 26041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 26042 ;; Tracked objects:
 26043 ;;		On entry : 0/0
 26044 ;;		On exit  : 0/0
 26045 ;;		Unchanged: 0/0
 26046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26047 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26048 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26049 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26050 ;;      Totals:        12      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26051 ;;Total ram usage:       24 bytes
 26052 ;; Hardware stack levels used:    1
 26053 ;; Hardware stack levels required when called:    6
 26054 ;; This function calls:
 26055 ;;		_fatfs_fat_set_cluster
 26056 ;;		_fatfs_find_blank_cluster
 26057 ;;		_fatfs_set_fs_info_next_free_cluster
 26058 ;; This function is called by:
 26059 ;;		__write_sectors
 26060 ;;		_fatfs_allocate_free_space
 26061 ;; This function uses a non-reentrant model
 26062 ;;
 26063                           
 26064                           	psect	text76
 26065  006C04                     __ptext76:
 26066                           	opt stack 0
 26067  006C04                     _fatfs_add_free_space:
 26068                           	opt stack 18
 26069                           
 26070                           ;fat_write.c: 47: uint32 i;
 26071                           ;fat_write.c: 48: uint32 nextcluster;
 26072                           ;fat_write.c: 49: uint32 start = *startCluster;
 26073                           
 26074                           ; BSR set to: 0
 26075                           ;incstack = 0
 26076  006C04  C076  FFD9         	movff	fatfs_add_free_space@startCluster,fsr2l
 26077  006C08  C077  FFDA         	movff	fatfs_add_free_space@startCluster+1,fsr2h
 26078  006C0C  CFDE F092          	movff	postinc2,fatfs_add_free_space@start
 26079  006C10  CFDE F093          	movff	postinc2,fatfs_add_free_space@start+1
 26080  006C14  CFDE F094          	movff	postinc2,fatfs_add_free_space@start+2
 26081  006C18  0100               	movlb	0	; () banked
 26082  006C1A  CFDE F095          	movff	postinc2,fatfs_add_free_space@start+3
 26083                           
 26084                           ; BSR set to: 0
 26085                           ;fat_write.c: 52: if (fs->next_free_cluster != 0xFFFFFFFF)
 26086  006C1E  EE20 F01F          	lfsr	2,31
 26087  006C22  5074               	movf	fatfs_add_free_space@fs,w,c
 26088  006C24  26D9               	addwf	fsr2l,f,c
 26089  006C26  5075               	movf	fatfs_add_free_space@fs+1,w,c
 26090  006C28  22DA               	addwfc	fsr2h,f,c
 26091  006C2A  CFDE F07C          	movff	postinc2,??_fatfs_add_free_space
 26092  006C2E  CFDE F07D          	movff	postinc2,??_fatfs_add_free_space+1
 26093  006C32  CFDE F07E          	movff	postinc2,??_fatfs_add_free_space+2
 26094  006C36  CFDE F07F          	movff	postinc2,??_fatfs_add_free_space+3
 26095  006C3A  287C               	incf	??_fatfs_add_free_space,w,c
 26096  006C3C  B4D8               	btfsc	status,2,c
 26097  006C3E  287D               	incf	??_fatfs_add_free_space+1,w,c
 26098  006C40  B4D8               	btfsc	status,2,c
 26099  006C42  287E               	incf	??_fatfs_add_free_space+2,w,c
 26100  006C44  B4D8               	btfsc	status,2,c
 26101  006C46  287F               	incf	??_fatfs_add_free_space+3,w,c
 26102  006C48  E00B               	bz	l9835
 26103                           
 26104                           ; BSR set to: 0
 26105                           ;fat_write.c: 53: fatfs_set_fs_info_next_free_cluster(fs, 0xFFFFFFFF);
 26106  006C4A  C075  F047         	movff	fatfs_add_free_space@fs+1,fatfs_set_fs_info_next_free_cluster@fs+1
 26107  006C4E  C074  F046         	movff	fatfs_add_free_space@fs,fatfs_set_fs_info_next_free_cluster@fs
 26108  006C52  0EFF               	movlw	255
 26109  006C54  6848               	setf	fatfs_set_fs_info_next_free_cluster@newValue,c
 26110  006C56  6849               	setf	fatfs_set_fs_info_next_free_cluster@newValue+1,c
 26111  006C58  684A               	setf	fatfs_set_fs_info_next_free_cluster@newValue+2,c
 26112  006C5A  684B               	setf	fatfs_set_fs_info_next_free_cluster@newValue+3,c
 26113  006C5C  ECE0  F039         	call	_fatfs_set_fs_info_next_free_cluster	;wreg free
 26114  006C60                     l9835:
 26115                           
 26116                           ;fat_write.c: 55: for (i=0;i<clusters;i++)
 26117  006C60  0100               	movlb	0	; () banked
 26118  006C62  6B96               	clrf	fatfs_add_free_space@i& (0+255),b
 26119  006C64  6B97               	clrf	(fatfs_add_free_space@i+1)& (0+255),b
 26120  006C66  6B98               	clrf	(fatfs_add_free_space@i+2)& (0+255),b
 26121  006C68  6B99               	clrf	(fatfs_add_free_space@i+3)& (0+255),b
 26122  006C6A  D069               	goto	l1317
 26123  006C6C                     l9837:
 26124                           
 26125                           ; BSR set to: 0
 26126                           ;fat_write.c: 56: {
 26127                           ;fat_write.c: 58: if (fatfs_find_blank_cluster(fs, fs->rootdir_first_cluster, &nextclust
      +                          er))
 26128  006C6C  C075  F047         	movff	fatfs_add_free_space@fs+1,fatfs_find_blank_cluster@fs+1
 26129  006C70  C074  F046         	movff	fatfs_add_free_space@fs,fatfs_find_blank_cluster@fs
 26130  006C74  EE20 F005          	lfsr	2,5
 26131  006C78  5074               	movf	fatfs_add_free_space@fs,w,c
 26132  006C7A  26D9               	addwf	fsr2l,f,c
 26133  006C7C  5075               	movf	fatfs_add_free_space@fs+1,w,c
 26134  006C7E  22DA               	addwfc	fsr2h,f,c
 26135  006C80  CFDE F048          	movff	postinc2,fatfs_find_blank_cluster@start_cluster
 26136  006C84  CFDE F049          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+1
 26137  006C88  CFDE F04A          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+2
 26138  006C8C  CFDE F04B          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+3
 26139  006C90  0E00               	movlw	high fatfs_add_free_space@nextcluster
 26140  006C92  6E4D               	movwf	fatfs_find_blank_cluster@free_cluster+1,c
 26141  006C94  0100               	movlb	0	; () banked
 26142  006C96  0E9A               	movlw	low fatfs_add_free_space@nextcluster
 26143  006C98  6E4C               	movwf	fatfs_find_blank_cluster@free_cluster,c
 26144  006C9A  EC26  F05A         	call	_fatfs_find_blank_cluster	;wreg free
 26145  006C9E  5047               	movf	?_fatfs_find_blank_cluster+1,w,c
 26146  006CA0  1046               	iorwf	?_fatfs_find_blank_cluster,w,c
 26147  006CA2  E044               	bz	l9847
 26148                           
 26149                           ;fat_write.c: 59: {
 26150                           ;fat_write.c: 61: fatfs_fat_set_cluster(fs, start, nextcluster);
 26151  006CA4  C075  F047         	movff	fatfs_add_free_space@fs+1,fatfs_fat_set_cluster@fs+1
 26152  006CA8  C074  F046         	movff	fatfs_add_free_space@fs,fatfs_fat_set_cluster@fs
 26153  006CAC  C092  F048         	movff	fatfs_add_free_space@start,fatfs_fat_set_cluster@cluster
 26154  006CB0  C093  F049         	movff	fatfs_add_free_space@start+1,fatfs_fat_set_cluster@cluster+1
 26155  006CB4  C094  F04A         	movff	fatfs_add_free_space@start+2,fatfs_fat_set_cluster@cluster+2
 26156  006CB8  C095  F04B         	movff	fatfs_add_free_space@start+3,fatfs_fat_set_cluster@cluster+3
 26157  006CBC  C09A  F04C         	movff	fatfs_add_free_space@nextcluster,fatfs_fat_set_cluster@next_cluster
 26158  006CC0  C09B  F04D         	movff	fatfs_add_free_space@nextcluster+1,fatfs_fat_set_cluster@next_cluster+1
 26159  006CC4  C09C  F04E         	movff	fatfs_add_free_space@nextcluster+2,fatfs_fat_set_cluster@next_cluster+2
 26160  006CC8  C09D  F04F         	movff	fatfs_add_free_space@nextcluster+3,fatfs_fat_set_cluster@next_cluster+3
 26161  006CCC  EC18  F047         	call	_fatfs_fat_set_cluster	;wreg free
 26162                           
 26163                           ;fat_write.c: 64: fatfs_fat_set_cluster(fs, nextcluster, 0xFFFFFFFF);
 26164  006CD0  C075  F047         	movff	fatfs_add_free_space@fs+1,fatfs_fat_set_cluster@fs+1
 26165  006CD4  C074  F046         	movff	fatfs_add_free_space@fs,fatfs_fat_set_cluster@fs
 26166  006CD8  C09A  F048         	movff	fatfs_add_free_space@nextcluster,fatfs_fat_set_cluster@cluster
 26167  006CDC  C09B  F049         	movff	fatfs_add_free_space@nextcluster+1,fatfs_fat_set_cluster@cluster+1
 26168  006CE0  C09C  F04A         	movff	fatfs_add_free_space@nextcluster+2,fatfs_fat_set_cluster@cluster+2
 26169  006CE4  C09D  F04B         	movff	fatfs_add_free_space@nextcluster+3,fatfs_fat_set_cluster@cluster+3
 26170  006CE8  0EFF               	movlw	255
 26171  006CEA  684C               	setf	fatfs_fat_set_cluster@next_cluster,c
 26172  006CEC  684D               	setf	fatfs_fat_set_cluster@next_cluster+1,c
 26173  006CEE  684E               	setf	fatfs_fat_set_cluster@next_cluster+2,c
 26174  006CF0  684F               	setf	fatfs_fat_set_cluster@next_cluster+3,c
 26175  006CF2  EC18  F047         	call	_fatfs_fat_set_cluster	;wreg free
 26176                           
 26177                           ;fat_write.c: 67: start = nextcluster;
 26178  006CF6  C09A  F092         	movff	fatfs_add_free_space@nextcluster,fatfs_add_free_space@start
 26179  006CFA  C09B  F093         	movff	fatfs_add_free_space@nextcluster+1,fatfs_add_free_space@start+1
 26180  006CFE  C09C  F094         	movff	fatfs_add_free_space@nextcluster+2,fatfs_add_free_space@start+2
 26181  006D02  C09D  F095         	movff	fatfs_add_free_space@nextcluster+3,fatfs_add_free_space@start+3
 26182                           
 26183                           ;fat_write.c: 68: if (i == 0)
 26184  006D06  0100               	movlb	0	; () banked
 26185  006D08  5199               	movf	(fatfs_add_free_space@i+3)& (0+255),w,b
 26186  006D0A  1196               	iorwf	fatfs_add_free_space@i& (0+255),w,b
 26187  006D0C  1197               	iorwf	(fatfs_add_free_space@i+1)& (0+255),w,b
 26188  006D0E  1198               	iorwf	(fatfs_add_free_space@i+2)& (0+255),w,b
 26189  006D10  E110               	bnz	l9851
 26190                           
 26191                           ; BSR set to: 0
 26192                           ;fat_write.c: 69: *startCluster = nextcluster;
 26193  006D12  C076  FFD9         	movff	fatfs_add_free_space@startCluster,fsr2l
 26194  006D16  C077  FFDA         	movff	fatfs_add_free_space@startCluster+1,fsr2h
 26195  006D1A  C09A  FFDE         	movff	fatfs_add_free_space@nextcluster,postinc2
 26196  006D1E  C09B  FFDE         	movff	fatfs_add_free_space@nextcluster+1,postinc2
 26197  006D22  C09C  FFDE         	movff	fatfs_add_free_space@nextcluster+2,postinc2
 26198  006D26  C09D  FFDE         	movff	fatfs_add_free_space@nextcluster+3,postinc2
 26199  006D2A  D003               	goto	l9851
 26200  006D2C                     l9847:
 26201                           
 26202                           ;fat_write.c: 71: else
 26203                           ;fat_write.c: 72: return 0;
 26204  006D2C  0E00               	movlw	0
 26205  006D2E  6E75               	movwf	?_fatfs_add_free_space+1,c
 26206  006D30  D013               	goto	L81
 26207  006D32                     l9851:
 26208  006D32  0100               	movlb	0	; () banked
 26209  006D34  2B96               	incf	fatfs_add_free_space@i& (0+255),f,b
 26210  006D36  0E00               	movlw	0
 26211  006D38  2397               	addwfc	(fatfs_add_free_space@i+1)& (0+255),f,b
 26212  006D3A  2398               	addwfc	(fatfs_add_free_space@i+2)& (0+255),f,b
 26213  006D3C  2399               	addwfc	(fatfs_add_free_space@i+3)& (0+255),f,b
 26214  006D3E                     l1317:
 26215                           
 26216                           ; BSR set to: 0
 26217  006D3E  5078               	movf	fatfs_add_free_space@clusters,w,c
 26218  006D40  0100               	movlb	0	; () banked
 26219  006D42  5D96               	subwf	fatfs_add_free_space@i& (0+255),w,b
 26220  006D44  5079               	movf	fatfs_add_free_space@clusters+1,w,c
 26221  006D46  5997               	subwfb	(fatfs_add_free_space@i+1)& (0+255),w,b
 26222  006D48  507A               	movf	fatfs_add_free_space@clusters+2,w,c
 26223  006D4A  5998               	subwfb	(fatfs_add_free_space@i+2)& (0+255),w,b
 26224  006D4C  507B               	movf	fatfs_add_free_space@clusters+3,w,c
 26225  006D4E  5999               	subwfb	(fatfs_add_free_space@i+3)& (0+255),w,b
 26226  006D50  E38D               	bnc	l9837
 26227                           
 26228                           ; BSR set to: 0
 26229                           ;fat_write.c: 73: }
 26230                           ;fat_write.c: 75: return 1;
 26231                           
 26232                           ; BSR set to: 0
 26233  006D52  0E00               	movlw	0
 26234  006D54  6E75               	movwf	?_fatfs_add_free_space+1,c
 26235  006D56  0E01               	movlw	1
 26236  006D58                     L81:
 26237  006D58  6E74               	movwf	?_fatfs_add_free_space,c
 26238                           
 26239                           ; BSR set to: 0
 26240  006D5A  0012               	return	
 26241  006D5C                     __end_of_fatfs_add_free_space:
 26242                           	opt stack 0
 26243                           tosu	equ	0xFFF
 26244                           tosh	equ	0xFFE
 26245                           tosl	equ	0xFFD
 26246                           pclath	equ	0xFFA
 26247                           tblptru	equ	0xFF8
 26248                           tblptrh	equ	0xFF7
 26249                           tblptrl	equ	0xFF6
 26250                           tablat	equ	0xFF5
 26251                           prodh	equ	0xFF4
 26252                           prodl	equ	0xFF3
 26253                           indf0	equ	0xFEF
 26254                           postinc0	equ	0xFEE
 26255                           fsr0h	equ	0xFEA
 26256                           fsr0l	equ	0xFE9
 26257                           wreg	equ	0xFE8
 26258                           indf1	equ	0xFE7
 26259                           postinc1	equ	0xFE6
 26260                           postdec1	equ	0xFE5
 26261                           fsr1h	equ	0xFE2
 26262                           fsr1l	equ	0xFE1
 26263                           indf2	equ	0xFDF
 26264                           postinc2	equ	0xFDE
 26265                           postdec2	equ	0xFDD
 26266                           fsr2h	equ	0xFDA
 26267                           fsr2l	equ	0xFD9
 26268                           status	equ	0xFD8
 26269                           
 26270 ;; *************** function _fatfs_set_fs_info_next_free_cluster *****************
 26271 ;; Defined at:
 26272 ;;		line 260 in file "fat_table.c"
 26273 ;; Parameters:    Size  Location     Type
 26274 ;;  fs              2   69[COMRAM] PTR struct fatfs
 26275 ;;		 -> _fs(1095), 
 26276 ;;  newValue        4   71[COMRAM] unsigned long 
 26277 ;; Auto vars:     Size  Location     Type
 26278 ;;  pbuf            2   81[COMRAM] PTR struct fat_buffer
 26279 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 26280 ;;		 -> NULL(0), 
 26281 ;; Return value:  Size  Location     Type
 26282 ;;		None               void
 26283 ;; Registers used:
 26284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 26285 ;; Tracked objects:
 26286 ;;		On entry : 0/0
 26287 ;;		On exit  : 0/0
 26288 ;;		Unchanged: 0/0
 26289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26290 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26292 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26293 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26294 ;;Total ram usage:       14 bytes
 26295 ;; Hardware stack levels used:    1
 26296 ;; Hardware stack levels required when called:    5
 26297 ;; This function calls:
 26298 ;;		_fatfs_fat_read_sector
 26299 ;;		_media_write
 26300 ;; This function is called by:
 26301 ;;		_fatfs_add_free_space
 26302 ;;		_fatfs_allocate_free_space
 26303 ;; This function uses a non-reentrant model
 26304 ;;
 26305                           
 26306                           	psect	text77
 26307  0073C0                     __ptext77:
 26308                           	opt stack 0
 26309  0073C0                     _fatfs_set_fs_info_next_free_cluster:
 26310                           	opt stack 19
 26311                           
 26312                           ;fat_table.c: 262: if (fs->fat_type == FAT_TYPE_16)
 26313                           
 26314                           ;incstack = 0
 26315  0073C0  EE20 F028          	lfsr	2,40
 26316  0073C4  5046               	movf	fatfs_set_fs_info_next_free_cluster@fs,w,c
 26317  0073C6  26D9               	addwf	fsr2l,f,c
 26318  0073C8  5047               	movf	fatfs_set_fs_info_next_free_cluster@fs+1,w,c
 26319  0073CA  22DA               	addwfc	fsr2h,f,c
 26320  0073CC  50DF               	movf	indf2,w,c
 26321  0073CE  E101 D0CB          	bz	l1238
 26322                           
 26323                           ;fat_table.c: 264: else
 26324                           ;fat_table.c: 265: {
 26325                           ;fat_table.c: 267: struct fat_buffer *pbuf = fatfs_fat_read_sector(fs, fs->lba_begin+fs-
      +                          >fs_info_sector);
 26326                           
 26327                           ;fat_table.c: 263: ;
 26328  0073D2  C047  F035         	movff	fatfs_set_fs_info_next_free_cluster@fs+1,fatfs_fat_read_sector@fs+1
 26329  0073D6  C046  F034         	movff	fatfs_set_fs_info_next_free_cluster@fs,fatfs_fat_read_sector@fs
 26330  0073DA  EE20 F017          	lfsr	2,23
 26331  0073DE  5046               	movf	fatfs_set_fs_info_next_free_cluster@fs,w,c
 26332  0073E0  26D9               	addwf	fsr2l,f,c
 26333  0073E2  5047               	movf	fatfs_set_fs_info_next_free_cluster@fs+1,w,c
 26334  0073E4  22DA               	addwfc	fsr2h,f,c
 26335  0073E6  CFDE F04C          	movff	postinc2,??_fatfs_set_fs_info_next_free_cluster
 26336  0073EA  CFDE F04D          	movff	postinc2,??_fatfs_set_fs_info_next_free_cluster+1
 26337  0073EE  CFDE F04E          	movff	postinc2,??_fatfs_set_fs_info_next_free_cluster+2
 26338  0073F2  CFDE F04F          	movff	postinc2,??_fatfs_set_fs_info_next_free_cluster+3
 26339  0073F6  EE20 F015          	lfsr	2,21
 26340  0073FA  5046               	movf	fatfs_set_fs_info_next_free_cluster@fs,w,c
 26341  0073FC  26D9               	addwf	fsr2l,f,c
 26342  0073FE  5047               	movf	fatfs_set_fs_info_next_free_cluster@fs+1,w,c
 26343  007400  22DA               	addwfc	fsr2h,f,c
 26344  007402  CFDE F050          	movff	postinc2,??_fatfs_set_fs_info_next_free_cluster+4
 26345  007406  CFDD F051          	movff	postdec2,??_fatfs_set_fs_info_next_free_cluster+5
 26346  00740A  5050               	movf	??_fatfs_set_fs_info_next_free_cluster+4,w,c
 26347  00740C  244C               	addwf	??_fatfs_set_fs_info_next_free_cluster,w,c
 26348  00740E  6E36               	movwf	fatfs_fat_read_sector@sector,c
 26349  007410  5051               	movf	??_fatfs_set_fs_info_next_free_cluster+5,w,c
 26350  007412  204D               	addwfc	??_fatfs_set_fs_info_next_free_cluster+1,w,c
 26351  007414  6E37               	movwf	fatfs_fat_read_sector@sector+1,c
 26352  007416  0E00               	movlw	0
 26353  007418  204E               	addwfc	??_fatfs_set_fs_info_next_free_cluster+2,w,c
 26354  00741A  6E38               	movwf	fatfs_fat_read_sector@sector+2,c
 26355  00741C  0E00               	movlw	0
 26356  00741E  204F               	addwfc	??_fatfs_set_fs_info_next_free_cluster+3,w,c
 26357  007420  6E39               	movwf	fatfs_fat_read_sector@sector+3,c
 26358  007422  EC82  F043         	call	_fatfs_fat_read_sector	;wreg free
 26359  007426  C034  F052         	movff	?_fatfs_fat_read_sector,fatfs_set_fs_info_next_free_cluster@pbuf
 26360  00742A  C035  F053         	movff	?_fatfs_fat_read_sector+1,fatfs_set_fs_info_next_free_cluster@pbuf+1
 26361                           
 26362                           ;fat_table.c: 268: if (!pbuf)
 26363  00742E  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26364  007430  1052               	iorwf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26365  007432  E101 D099          	bz	l1238
 26366                           
 26367                           ;fat_table.c: 272: { { pbuf->ptr[492+0] = (uint8)((newValue)&0xFF); pbuf->ptr[492+1] = (
      +                          uint8)((newValue>>8)&0xFF); pbuf->ptr[492+2] = (uint8)((newValue>>16)&0xFF); pbuf->ptr[4
      +                          92+3] = (uint8)((newValue>>24)&0xFF); }; pbuf->dirty = 1; };
 26368                           
 26369                           ;fat_table.c: 269: return ;
 26370  007436  EE22 F006          	lfsr	2,518
 26371  00743A  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26372  00743C  26D9               	addwf	fsr2l,f,c
 26373  00743E  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26374  007440  22DA               	addwfc	fsr2h,f,c
 26375  007442  EE11 F0EC          	lfsr	1,492
 26376  007446  50DE               	movf	postinc2,w,c
 26377  007448  26E1               	addwf	fsr1l,f,c
 26378  00744A  50DD               	movf	postdec2,w,c
 26379  00744C  22E2               	addwfc	fsr1h,f,c
 26380  00744E  C048  FFE7         	movff	fatfs_set_fs_info_next_free_cluster@newValue,indf1
 26381  007452  EE22 F006          	lfsr	2,518
 26382  007456  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26383  007458  26D9               	addwf	fsr2l,f,c
 26384  00745A  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26385  00745C  22DA               	addwfc	fsr2h,f,c
 26386  00745E  EE11 F0ED          	lfsr	1,493
 26387  007462  50DE               	movf	postinc2,w,c
 26388  007464  26E1               	addwf	fsr1l,f,c
 26389  007466  50DD               	movf	postdec2,w,c
 26390  007468  22E2               	addwfc	fsr1h,f,c
 26391  00746A  C049  FFE7         	movff	fatfs_set_fs_info_next_free_cluster@newValue+1,indf1
 26392  00746E  EE22 F006          	lfsr	2,518
 26393  007472  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26394  007474  26D9               	addwf	fsr2l,f,c
 26395  007476  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26396  007478  22DA               	addwfc	fsr2h,f,c
 26397  00747A  EE11 F0EE          	lfsr	1,494
 26398  00747E  50DE               	movf	postinc2,w,c
 26399  007480  26E1               	addwf	fsr1l,f,c
 26400  007482  50DD               	movf	postdec2,w,c
 26401  007484  22E2               	addwfc	fsr1h,f,c
 26402  007486  C04A  FFE7         	movff	fatfs_set_fs_info_next_free_cluster@newValue+2,indf1
 26403  00748A  EE22 F006          	lfsr	2,518
 26404  00748E  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26405  007490  26D9               	addwf	fsr2l,f,c
 26406  007492  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26407  007494  22DA               	addwfc	fsr2h,f,c
 26408  007496  EE11 F0EF          	lfsr	1,495
 26409  00749A  50DE               	movf	postinc2,w,c
 26410  00749C  26E1               	addwf	fsr1l,f,c
 26411  00749E  50DD               	movf	postdec2,w,c
 26412  0074A0  22E2               	addwfc	fsr1h,f,c
 26413  0074A2  C04B  FFE7         	movff	fatfs_set_fs_info_next_free_cluster@newValue+3,indf1
 26414  0074A6  EE22 F004          	lfsr	2,516
 26415  0074AA  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26416  0074AC  26D9               	addwf	fsr2l,f,c
 26417  0074AE  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26418  0074B0  22DA               	addwfc	fsr2h,f,c
 26419  0074B2  0E01               	movlw	1
 26420  0074B4  6EDE               	movwf	postinc2,c
 26421  0074B6  6ADD               	clrf	postdec2,c
 26422                           
 26423                           ;fat_table.c: 273: fs->next_free_cluster = newValue;
 26424  0074B8  EE20 F01F          	lfsr	2,31
 26425  0074BC  5046               	movf	fatfs_set_fs_info_next_free_cluster@fs,w,c
 26426  0074BE  26D9               	addwf	fsr2l,f,c
 26427  0074C0  5047               	movf	fatfs_set_fs_info_next_free_cluster@fs+1,w,c
 26428  0074C2  22DA               	addwfc	fsr2h,f,c
 26429  0074C4  C048  FFDE         	movff	fatfs_set_fs_info_next_free_cluster@newValue,postinc2
 26430  0074C8  C049  FFDE         	movff	fatfs_set_fs_info_next_free_cluster@newValue+1,postinc2
 26431  0074CC  C04A  FFDE         	movff	fatfs_set_fs_info_next_free_cluster@newValue+2,postinc2
 26432  0074D0  C04B  FFDE         	movff	fatfs_set_fs_info_next_free_cluster@newValue+3,postinc2
 26433                           
 26434                           ;fat_table.c: 276: if (fs->disk_io.write_media)
 26435  0074D4  EE20 F02B          	lfsr	2,43
 26436  0074D8  5046               	movf	fatfs_set_fs_info_next_free_cluster@fs,w,c
 26437  0074DA  26D9               	addwf	fsr2l,f,c
 26438  0074DC  5047               	movf	fatfs_set_fs_info_next_free_cluster@fs+1,w,c
 26439  0074DE  22DA               	addwfc	fsr2h,f,c
 26440  0074E0  50DE               	movf	postinc2,w,c
 26441  0074E2  10DD               	iorwf	postdec2,w,c
 26442  0074E4  E02E               	bz	l9463
 26443                           
 26444                           ;fat_table.c: 277: fs->disk_io.write_media(pbuf->address, pbuf->sector, 1);
 26445  0074E6  EE22 F000          	lfsr	2,512
 26446  0074EA  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26447  0074EC  26D9               	addwf	fsr2l,f,c
 26448  0074EE  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26449  0074F0  22DA               	addwfc	fsr2h,f,c
 26450  0074F2  CFDE F009          	movff	postinc2,media_write@sector
 26451  0074F6  CFDE F00A          	movff	postinc2,media_write@sector+1
 26452  0074FA  CFDE F00B          	movff	postinc2,media_write@sector+2
 26453  0074FE  CFDE F00C          	movff	postinc2,media_write@sector+3
 26454  007502  0E20               	movlw	32
 26455  007504  6E0F               	movwf	media_write@buffer+2,c
 26456  007506  C053  F00E         	movff	fatfs_set_fs_info_next_free_cluster@pbuf+1,media_write@buffer+1
 26457  00750A  C052  F00D         	movff	fatfs_set_fs_info_next_free_cluster@pbuf,media_write@buffer
 26458  00750E  0E01               	movlw	1
 26459  007510  6E10               	movwf	media_write@sector_count,c
 26460  007512  6A11               	clrf	media_write@sector_count+1,c
 26461  007514  6A12               	clrf	media_write@sector_count+2,c
 26462  007516  6A13               	clrf	media_write@sector_count+3,c
 26463  007518  EE20 F02B          	lfsr	2,43
 26464  00751C  5046               	movf	fatfs_set_fs_info_next_free_cluster@fs,w,c
 26465  00751E  26D9               	addwf	fsr2l,f,c
 26466  007520  5047               	movf	fatfs_set_fs_info_next_free_cluster@fs+1,w,c
 26467  007522  22DA               	addwfc	fsr2h,f,c
 26468  007524  CFDE F04C          	movff	postinc2,??_fatfs_set_fs_info_next_free_cluster
 26469  007528  CFDD F04D          	movff	postdec2,??_fatfs_set_fs_info_next_free_cluster+1
 26470  00752C  D801               	call	u10298
 26471  00752E  D009               	goto	l9463
 26472  007530                     u10298:
 26473  007530  0005               	push	
 26474  007532  6EFA               	movwf	pclath,c
 26475  007534  504C               	movf	??_fatfs_set_fs_info_next_free_cluster,w,c
 26476  007536  6EFD               	movwf	tosl,c
 26477  007538  504D               	movf	??_fatfs_set_fs_info_next_free_cluster+1,w,c
 26478  00753A  6EFE               	movwf	tosh,c
 26479  00753C  6AFF               	clrf	tosu,c
 26480  00753E  50FA               	movf	pclath,w,c
 26481  007540  0012               	return		;indir
 26482  007542                     l9463:
 26483                           
 26484                           ;fat_table.c: 280: pbuf->address = 0xFFFFFFFF;
 26485  007542  EE22 F000          	lfsr	2,512
 26486  007546  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26487  007548  26D9               	addwf	fsr2l,f,c
 26488  00754A  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26489  00754C  22DA               	addwfc	fsr2h,f,c
 26490  00754E  68DE               	setf	postinc2,c
 26491  007550  68DE               	setf	postinc2,c
 26492  007552  68DE               	setf	postinc2,c
 26493  007554  68DD               	setf	postdec2,c
 26494                           
 26495                           ;fat_table.c: 281: pbuf->dirty = 0;
 26496  007556  EE22 F004          	lfsr	2,516
 26497  00755A  5052               	movf	fatfs_set_fs_info_next_free_cluster@pbuf,w,c
 26498  00755C  26D9               	addwf	fsr2l,f,c
 26499  00755E  5053               	movf	fatfs_set_fs_info_next_free_cluster@pbuf+1,w,c
 26500  007560  22DA               	addwfc	fsr2h,f,c
 26501  007562  0E00               	movlw	0
 26502  007564  6EDE               	movwf	postinc2,c
 26503  007566  6EDD               	movwf	postdec2,c
 26504  007568                     l1238:
 26505  007568  0012               	return	
 26506  00756A                     __end_of_fatfs_set_fs_info_next_free_cluster:
 26507                           	opt stack 0
 26508                           tosu	equ	0xFFF
 26509                           tosh	equ	0xFFE
 26510                           tosl	equ	0xFFD
 26511                           pclath	equ	0xFFA
 26512                           tblptru	equ	0xFF8
 26513                           tblptrh	equ	0xFF7
 26514                           tblptrl	equ	0xFF6
 26515                           tablat	equ	0xFF5
 26516                           prodh	equ	0xFF4
 26517                           prodl	equ	0xFF3
 26518                           indf0	equ	0xFEF
 26519                           postinc0	equ	0xFEE
 26520                           fsr0h	equ	0xFEA
 26521                           fsr0l	equ	0xFE9
 26522                           wreg	equ	0xFE8
 26523                           indf1	equ	0xFE7
 26524                           postinc1	equ	0xFE6
 26525                           postdec1	equ	0xFE5
 26526                           fsr1h	equ	0xFE2
 26527                           fsr1l	equ	0xFE1
 26528                           indf2	equ	0xFDF
 26529                           postinc2	equ	0xFDE
 26530                           postdec2	equ	0xFDD
 26531                           fsr2h	equ	0xFDA
 26532                           fsr2l	equ	0xFD9
 26533                           status	equ	0xFD8
 26534                           
 26535 ;; *************** function _fatfs_add_file_entry *****************
 26536 ;; Defined at:
 26537 ;;		line 266 in file "fat_write.c"
 26538 ;; Parameters:    Size  Location     Type
 26539 ;;  fs              2   76[BANK0 ] PTR struct fatfs
 26540 ;;		 -> _fs(1095), 
 26541 ;;  dirCluster      4   78[BANK0 ] unsigned long 
 26542 ;;  filename        2   82[BANK0 ] PTR unsigned char 
 26543 ;;		 -> RAM(3967), NULL(0), 
 26544 ;;  shortfilenam    2   84[BANK0 ] PTR unsigned char 
 26545 ;;		 -> RAM(3967), NULL(0), 
 26546 ;;  startCluster    4   86[BANK0 ] unsigned long 
 26547 ;;  size            4   90[BANK0 ] unsigned long 
 26548 ;;  dir             2   94[BANK0 ] int 
 26549 ;; Auto vars:     Size  Location     Type
 26550 ;;  shortEntry     32   24[BANK1 ] struct fat_dir_entry
 26551 ;;  dirSector       4   20[BANK1 ] unsigned long 
 26552 ;;  x               4    6[BANK1 ] unsigned long 
 26553 ;;  entryCount      2   16[BANK1 ] int 
 26554 ;;  foundEnd        2   12[BANK1 ] int 
 26555 ;;  recordoffset    2   10[BANK1 ] unsigned short 
 26556 ;;  dirtySector     2    4[BANK1 ] int 
 26557 ;;  pSname          2    0[BANK1 ] PTR unsigned char 
 26558 ;;		 -> RAM(3967), NULL(0), 
 26559 ;;  item            1   19[BANK1 ] unsigned char 
 26560 ;;  dirOffset       1   18[BANK1 ] unsigned char 
 26561 ;;  checksum        1   15[BANK1 ] unsigned char 
 26562 ;;  i               1   14[BANK1 ] unsigned char 
 26563 ;; Return value:  Size  Location     Type
 26564 ;;                  2   76[BANK0 ] int 
 26565 ;; Registers used:
 26566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26567 ;; Tracked objects:
 26568 ;;		On entry : 0/0
 26569 ;;		On exit  : 0/0
 26570 ;;		Unchanged: 0/0
 26571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26572 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26573 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26574 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26575 ;;      Totals:         0      24      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26576 ;;Total ram usage:       80 bytes
 26577 ;; Hardware stack levels used:    1
 26578 ;; Hardware stack levels required when called:    8
 26579 ;; This function calls:
 26580 ;;		_fatfs_filename_to_lfn
 26581 ;;		_fatfs_find_free_dir_offset
 26582 ;;		_fatfs_lfn_entries_required
 26583 ;;		_fatfs_sector_reader
 26584 ;;		_fatfs_sfn_create_entry
 26585 ;;		_media_write
 26586 ;;		_memcpy
 26587 ;; This function is called by:
 26588 ;;		__create_directory
 26589 ;;		__create_file
 26590 ;; This function uses a non-reentrant model
 26591 ;;
 26592                           
 26593                           	psect	text78
 26594  00ACE4                     __ptext78:
 26595                           	opt stack 0
 26596  00ACE4                     _fatfs_add_file_entry:
 26597                           	opt stack 17
 26598                           
 26599                           ;fat_write.c: 268: uint8 item=0;
 26600                           
 26601                           ;incstack = 0
 26602  00ACE4  0101               	movlb	1	; () banked
 26603  00ACE6  6B13               	clrf	fatfs_add_file_entry@item& (0+255),b
 26604                           
 26605                           ;fat_write.c: 269: uint16 recordoffset = 0;
 26606  00ACE8  6B0B               	clrf	(fatfs_add_file_entry@recordoffset+1)& (0+255),b
 26607  00ACEA  6B0A               	clrf	fatfs_add_file_entry@recordoffset& (0+255),b
 26608                           
 26609                           ;fat_write.c: 270: uint8 i=0;
 26610  00ACEC  6B0E               	clrf	fatfs_add_file_entry@i& (0+255),b
 26611                           
 26612                           ;fat_write.c: 271: uint32 x=0;
 26613  00ACEE  6B06               	clrf	fatfs_add_file_entry@x& (0+255),b
 26614  00ACF0  6B07               	clrf	(fatfs_add_file_entry@x+1)& (0+255),b
 26615  00ACF2  6B08               	clrf	(fatfs_add_file_entry@x+2)& (0+255),b
 26616  00ACF4  6B09               	clrf	(fatfs_add_file_entry@x+3)& (0+255),b
 26617                           
 26618                           ;fat_write.c: 272: int entryCount;
 26619                           ;fat_write.c: 273: struct fat_dir_entry shortEntry;
 26620                           ;fat_write.c: 274: int dirtySector = 0;
 26621  00ACF6  6B05               	clrf	(fatfs_add_file_entry@dirtySector+1)& (0+255),b
 26622  00ACF8  6B04               	clrf	fatfs_add_file_entry@dirtySector& (0+255),b
 26623                           
 26624                           ;fat_write.c: 276: uint32 dirSector = 0;
 26625  00ACFA  6B14               	clrf	fatfs_add_file_entry@dirSector& (0+255),b
 26626  00ACFC  6B15               	clrf	(fatfs_add_file_entry@dirSector+1)& (0+255),b
 26627  00ACFE  6B16               	clrf	(fatfs_add_file_entry@dirSector+2)& (0+255),b
 26628  00AD00  6B17               	clrf	(fatfs_add_file_entry@dirSector+3)& (0+255),b
 26629                           
 26630                           ;fat_write.c: 277: uint8 dirOffset = 0;
 26631  00AD02  6B12               	clrf	fatfs_add_file_entry@dirOffset& (0+255),b
 26632                           
 26633                           ;fat_write.c: 278: int foundEnd = 0;
 26634  00AD04  6B0D               	clrf	(fatfs_add_file_entry@foundEnd+1)& (0+255),b
 26635  00AD06  6B0C               	clrf	fatfs_add_file_entry@foundEnd& (0+255),b
 26636                           
 26637                           ; BSR set to: 1
 26638                           ;fat_write.c: 280: uint8 checksum;
 26639                           ;fat_write.c: 281: uint8 *pSname;
 26640                           ;fat_write.c: 284: if (!fs->disk_io.write_media)
 26641  00AD08  EE20 F02B          	lfsr	2,43
 26642  00AD0C  0100               	movlb	0	; () banked
 26643  00AD0E  51CC               	movf	fatfs_add_file_entry@fs& (0+255),w,b
 26644  00AD10  26D9               	addwf	fsr2l,f,c
 26645  00AD12  51CD               	movf	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 26646  00AD14  22DA               	addwfc	fsr2h,f,c
 26647  00AD16  50DE               	movf	postinc2,w,c
 26648  00AD18  10DD               	iorwf	postdec2,w,c
 26649  00AD1A  E101 D1B5          	bz	l10827
 26650                           
 26651                           ; BSR set to: 0
 26652                           ;fat_write.c: 290: entryCount = fatfs_lfn_entries_required(filename);
 26653                           
 26654                           ; BSR set to: 0
 26655                           
 26656                           ; BSR set to: 0
 26657                           
 26658                           ; BSR set to: 0
 26659                           ;fat_write.c: 285: return 0;
 26660  00AD1E  C0D3  F00A         	movff	fatfs_add_file_entry@filename+1,fatfs_lfn_entries_required@filename+1
 26661  00AD22  C0D2  F009         	movff	fatfs_add_file_entry@filename,fatfs_lfn_entries_required@filename
 26662  00AD26  EC4D  F021         	call	_fatfs_lfn_entries_required	;wreg free
 26663  00AD2A  C009  F110         	movff	?_fatfs_lfn_entries_required,fatfs_add_file_entry@entryCount
 26664  00AD2E  C00A  F111         	movff	?_fatfs_lfn_entries_required+1,fatfs_add_file_entry@entryCount+1
 26665                           
 26666                           ;fat_write.c: 291: if (!entryCount)
 26667  00AD32  0101               	movlb	1	; () banked
 26668  00AD34  5111               	movf	(fatfs_add_file_entry@entryCount+1)& (0+255),w,b
 26669  00AD36  1110               	iorwf	fatfs_add_file_entry@entryCount& (0+255),w,b
 26670  00AD38  E101 D1A6          	bz	l10827
 26671                           
 26672                           ;fat_write.c: 299: if (!fatfs_find_free_dir_offset(fs, dirCluster, entryCount + 1, &dirS
      +                          ector, &dirOffset))
 26673                           
 26674                           ; BSR set to: 0
 26675                           
 26676                           ; BSR set to: 0
 26677                           
 26678                           ; BSR set to: 1
 26679                           ;fat_write.c: 292: return 0;
 26680  00AD3C  C0CD  F0AD         	movff	fatfs_add_file_entry@fs+1,fatfs_find_free_dir_offset@fs+1
 26681  00AD40  C0CC  F0AC         	movff	fatfs_add_file_entry@fs,fatfs_find_free_dir_offset@fs
 26682  00AD44  C0CE  F0AE         	movff	fatfs_add_file_entry@dirCluster,fatfs_find_free_dir_offset@dirCluster
 26683  00AD48  C0CF  F0AF         	movff	fatfs_add_file_entry@dirCluster+1,fatfs_find_free_dir_offset@dirCluster+1
 26684  00AD4C  C0D0  F0B0         	movff	fatfs_add_file_entry@dirCluster+2,fatfs_find_free_dir_offset@dirCluster+2
 26685  00AD50  C0D1  F0B1         	movff	fatfs_add_file_entry@dirCluster+3,fatfs_find_free_dir_offset@dirCluster+3
 26686  00AD54  2910               	incf	fatfs_add_file_entry@entryCount& (0+255),w,b
 26687  00AD56  0100               	movlb	0	; () banked
 26688  00AD58  6FB2               	movwf	fatfs_find_free_dir_offset@entryCount& (0+255),b
 26689  00AD5A  0E00               	movlw	0
 26690  00AD5C  0101               	movlb	1	; () banked
 26691  00AD5E  2111               	addwfc	(fatfs_add_file_entry@entryCount+1)& (0+255),w,b
 26692  00AD60  0100               	movlb	0	; () banked
 26693  00AD62  6FB3               	movwf	(fatfs_find_free_dir_offset@entryCount+1)& (0+255),b
 26694  00AD64  0E01               	movlw	high fatfs_add_file_entry@dirSector
 26695  00AD66  6FB5               	movwf	(fatfs_find_free_dir_offset@pSector+1)& (0+255),b
 26696  00AD68  0E14               	movlw	low fatfs_add_file_entry@dirSector
 26697  00AD6A  6FB4               	movwf	fatfs_find_free_dir_offset@pSector& (0+255),b
 26698  00AD6C  0E01               	movlw	high fatfs_add_file_entry@dirOffset
 26699  00AD6E  6FB7               	movwf	(fatfs_find_free_dir_offset@pOffset+1)& (0+255),b
 26700  00AD70  0E12               	movlw	low fatfs_add_file_entry@dirOffset
 26701  00AD72  6FB6               	movwf	fatfs_find_free_dir_offset@pOffset& (0+255),b
 26702  00AD74  ECB4  F04C         	call	_fatfs_find_free_dir_offset	;wreg free
 26703  00AD78  0100               	movlb	0	; () banked
 26704  00AD7A  51AD               	movf	(?_fatfs_find_free_dir_offset+1)& (0+255),w,b
 26705  00AD7C  11AC               	iorwf	?_fatfs_find_free_dir_offset& (0+255),w,b
 26706  00AD7E  E101 D183          	bz	l10827
 26707                           
 26708                           ; BSR set to: 0
 26709                           ;fat_write.c: 303: pSname = (uint8*)shortfilename;
 26710                           
 26711                           ; BSR set to: 0
 26712                           
 26713                           ; BSR set to: 0
 26714                           
 26715                           ; BSR set to: 0
 26716                           ;fat_write.c: 300: return 0;
 26717  00AD82  C0D5  F101         	movff	fatfs_add_file_entry@shortfilename+1,fatfs_add_file_entry@pSname+1
 26718  00AD86  C0D4  F100         	movff	fatfs_add_file_entry@shortfilename,fatfs_add_file_entry@pSname
 26719                           
 26720                           ; BSR set to: 1
 26721                           ;fat_write.c: 304: checksum = 0;
 26722  00AD8A  0101               	movlb	1	; () banked
 26723  00AD8C  6B0F               	clrf	fatfs_add_file_entry@checksum& (0+255),b
 26724                           
 26725                           ; BSR set to: 1
 26726                           ;fat_write.c: 305: for (i=11; i!=0; i--) checksum = ((checksum & 1) ? 0x80 : 0) + (check
      +                          sum >> 1) + *pSname++;
 26727  00AD8E  0E0B               	movlw	11
 26728  00AD90  6F0E               	movwf	fatfs_add_file_entry@i& (0+255),b
 26729  00AD92  D01D               	goto	L83
 26730  00AD94                     l1370:
 26731                           
 26732                           ; BSR set to: 1
 26733  00AD94  0101               	movlb	1	; () banked
 26734  00AD96  B10F               	btfsc	fatfs_add_file_entry@checksum& (0+255),0,b
 26735  00AD98  D003               	goto	l10765
 26736                           
 26737                           ; BSR set to: 1
 26738  00AD9A  0E00               	movlw	0
 26739  00AD9C  6B03               	clrf	(_fatfs_add_file_entry$3211+1)& (0+255),b
 26740  00AD9E  D003               	goto	L82
 26741  00ADA0                     l10765:
 26742                           
 26743                           ; BSR set to: 1
 26744  00ADA0  0101               	movlb	1	; () banked
 26745  00ADA2  6B03               	clrf	(_fatfs_add_file_entry$3211+1)& (0+255),b
 26746  00ADA4  0E80               	movlw	128
 26747  00ADA6                     L82:
 26748  00ADA6  0101               	movlb	1	; () banked
 26749  00ADA8  6F02               	movwf	_fatfs_add_file_entry$3211& (0+255),b
 26750                           
 26751                           ; BSR set to: 1
 26752                           
 26753                           ; BSR set to: 1
 26754  00ADAA  C100  FFD9         	movff	fatfs_add_file_entry@pSname,fsr2l
 26755  00ADAE  C101  FFDA         	movff	fatfs_add_file_entry@pSname+1,fsr2h
 26756  00ADB2  50DF               	movf	indf2,w,c
 26757  00ADB4  0100               	movlb	0	; () banked
 26758  00ADB6  6FE0               	movwf	??_fatfs_add_file_entry& (0+255),b
 26759  00ADB8  0101               	movlb	1	; () banked
 26760  00ADBA  90D8               	bcf	status,0,c
 26761  00ADBC  310F               	rrcf	fatfs_add_file_entry@checksum& (0+255),w,b
 26762  00ADBE  0100               	movlb	0	; () banked
 26763  00ADC0  25E0               	addwf	??_fatfs_add_file_entry& (0+255),w,b
 26764  00ADC2  0101               	movlb	1	; () banked
 26765  00ADC4  2502               	addwf	_fatfs_add_file_entry$3211& (0+255),w,b
 26766  00ADC6  6F0F               	movwf	fatfs_add_file_entry@checksum& (0+255),b
 26767                           
 26768                           ; BSR set to: 1
 26769  00ADC8  4B00               	infsnz	fatfs_add_file_entry@pSname& (0+255),f,b
 26770  00ADCA  2B01               	incf	(fatfs_add_file_entry@pSname+1)& (0+255),f,b
 26771                           
 26772                           ; BSR set to: 1
 26773  00ADCC  070E               	decf	fatfs_add_file_entry@i& (0+255),f,b
 26774  00ADCE                     L83:
 26775                           
 26776                           ; BSR set to: 1
 26777  00ADCE  0101               	movlb	1	; () banked
 26778  00ADD0  670E               	tstfsz	fatfs_add_file_entry@i& (0+255),b
 26779  00ADD2  D7E0               	goto	l1370
 26780                           
 26781                           ; BSR set to: 1
 26782                           ;fat_write.c: 308: x = dirSector;
 26783  00ADD4  C114  F106         	movff	fatfs_add_file_entry@dirSector,fatfs_add_file_entry@x
 26784  00ADD8  C115  F107         	movff	fatfs_add_file_entry@dirSector+1,fatfs_add_file_entry@x+1
 26785  00ADDC  C116  F108         	movff	fatfs_add_file_entry@dirSector+2,fatfs_add_file_entry@x+2
 26786  00ADE0  C117  F109         	movff	fatfs_add_file_entry@dirSector+3,fatfs_add_file_entry@x+3
 26787  00ADE4                     l10775:
 26788                           
 26789                           ;fat_write.c: 312: {
 26790                           ;fat_write.c: 314: if (fatfs_sector_reader(fs, dirCluster, x++, 0))
 26791  00ADE4  C0CD  F081         	movff	fatfs_add_file_entry@fs+1,fatfs_sector_reader@fs+1
 26792  00ADE8  C0CC  F080         	movff	fatfs_add_file_entry@fs,fatfs_sector_reader@fs
 26793  00ADEC  C0CE  F082         	movff	fatfs_add_file_entry@dirCluster,fatfs_sector_reader@start_cluster
 26794  00ADF0  C0CF  F083         	movff	fatfs_add_file_entry@dirCluster+1,fatfs_sector_reader@start_cluster+1
 26795  00ADF4  C0D0  F084         	movff	fatfs_add_file_entry@dirCluster+2,fatfs_sector_reader@start_cluster+2
 26796  00ADF8  C0D1  F085         	movff	fatfs_add_file_entry@dirCluster+3,fatfs_sector_reader@start_cluster+3
 26797  00ADFC  C106  F0E0         	movff	fatfs_add_file_entry@x,??_fatfs_add_file_entry
 26798  00AE00  C107  F0E1         	movff	fatfs_add_file_entry@x+1,??_fatfs_add_file_entry+1
 26799  00AE04  C108  F0E2         	movff	fatfs_add_file_entry@x+2,??_fatfs_add_file_entry+2
 26800  00AE08  C109  F0E3         	movff	fatfs_add_file_entry@x+3,??_fatfs_add_file_entry+3
 26801  00AE0C  0101               	movlb	1	; () banked
 26802  00AE0E  2B06               	incf	fatfs_add_file_entry@x& (0+255),f,b
 26803  00AE10  0E00               	movlw	0
 26804  00AE12  2307               	addwfc	(fatfs_add_file_entry@x+1)& (0+255),f,b
 26805  00AE14  2308               	addwfc	(fatfs_add_file_entry@x+2)& (0+255),f,b
 26806  00AE16  2309               	addwfc	(fatfs_add_file_entry@x+3)& (0+255),f,b
 26807  00AE18  C0E0  F086         	movff	??_fatfs_add_file_entry,fatfs_sector_reader@offset
 26808  00AE1C  C0E1  F087         	movff	??_fatfs_add_file_entry+1,fatfs_sector_reader@offset+1
 26809  00AE20  C0E2  F088         	movff	??_fatfs_add_file_entry+2,fatfs_sector_reader@offset+2
 26810  00AE24  C0E3  F089         	movff	??_fatfs_add_file_entry+3,fatfs_sector_reader@offset+3
 26811  00AE28  0100               	movlb	0	; () banked
 26812  00AE2A  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
 26813  00AE2C  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
 26814  00AE2E  ECD6  F052         	call	_fatfs_sector_reader	;wreg free
 26815  00AE32  0100               	movlb	0	; () banked
 26816  00AE34  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
 26817  00AE36  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
 26818  00AE38  E101 D126          	bz	l10827
 26819                           
 26820                           ; BSR set to: 0
 26821                           ;fat_write.c: 315: {
 26822                           ;fat_write.c: 317: for (item = 0; item < (512 / 32); item++)
 26823  00AE3C  0101               	movlb	1	; () banked
 26824  00AE3E  6B13               	clrf	fatfs_add_file_entry@item& (0+255),b
 26825  00AE40  D0DE               	goto	L84
 26826  00AE42                     l10783:
 26827                           
 26828                           ; BSR set to: 1
 26829                           ;fat_write.c: 318: {
 26830                           ;fat_write.c: 320: recordoffset = 32 * item;
 26831  00AE42  0101               	movlb	1	; () banked
 26832  00AE44  5113               	movf	fatfs_add_file_entry@item& (0+255),w,b
 26833  00AE46  0D20               	mullw	32
 26834  00AE48  CFF3 F10A          	movff	prodl,fatfs_add_file_entry@recordoffset
 26835  00AE4C  CFF4 F10B          	movff	prodh,fatfs_add_file_entry@recordoffset+1
 26836                           
 26837                           ; BSR set to: 1
 26838                           ;fat_write.c: 323: if (foundEnd==0)
 26839  00AE50  510D               	movf	(fatfs_add_file_entry@foundEnd+1)& (0+255),w,b
 26840  00AE52  110C               	iorwf	fatfs_add_file_entry@foundEnd& (0+255),w,b
 26841  00AE54  E12E               	bnz	l10793
 26842                           
 26843                           ; BSR set to: 1
 26844                           ;fat_write.c: 324: if ( (dirSector==(x-1)) && (dirOffset==item) )
 26845  00AE56  0EFF               	movlw	255
 26846  00AE58  2506               	addwf	fatfs_add_file_entry@x& (0+255),w,b
 26847  00AE5A  0100               	movlb	0	; () banked
 26848  00AE5C  6FE0               	movwf	??_fatfs_add_file_entry& (0+255),b
 26849  00AE5E  0EFF               	movlw	255
 26850  00AE60  0101               	movlb	1	; () banked
 26851  00AE62  2107               	addwfc	(fatfs_add_file_entry@x+1)& (0+255),w,b
 26852  00AE64  0100               	movlb	0	; () banked
 26853  00AE66  6FE1               	movwf	(??_fatfs_add_file_entry+1)& (0+255),b
 26854  00AE68  0EFF               	movlw	255
 26855  00AE6A  0101               	movlb	1	; () banked
 26856  00AE6C  2108               	addwfc	(fatfs_add_file_entry@x+2)& (0+255),w,b
 26857  00AE6E  0100               	movlb	0	; () banked
 26858  00AE70  6FE2               	movwf	(??_fatfs_add_file_entry+2)& (0+255),b
 26859  00AE72  0EFF               	movlw	255
 26860  00AE74  0101               	movlb	1	; () banked
 26861  00AE76  2109               	addwfc	(fatfs_add_file_entry@x+3)& (0+255),w,b
 26862  00AE78  0100               	movlb	0	; () banked
 26863  00AE7A  6FE3               	movwf	(??_fatfs_add_file_entry+3)& (0+255),b
 26864  00AE7C  0101               	movlb	1	; () banked
 26865  00AE7E  5117               	movf	(fatfs_add_file_entry@dirSector+3)& (0+255),w,b
 26866  00AE80  0100               	movlb	0	; () banked
 26867  00AE82  19E3               	xorwf	(??_fatfs_add_file_entry+3)& (0+255),w,b
 26868  00AE84  E10E               	bnz	u12295
 26869  00AE86  0101               	movlb	1	; () banked
 26870  00AE88  5116               	movf	(fatfs_add_file_entry@dirSector+2)& (0+255),w,b
 26871  00AE8A  0100               	movlb	0	; () banked
 26872  00AE8C  19E2               	xorwf	(??_fatfs_add_file_entry+2)& (0+255),w,b
 26873  00AE8E  E109               	bnz	u12295
 26874  00AE90  0101               	movlb	1	; () banked
 26875  00AE92  5115               	movf	(fatfs_add_file_entry@dirSector+1)& (0+255),w,b
 26876  00AE94  0100               	movlb	0	; () banked
 26877  00AE96  19E1               	xorwf	(??_fatfs_add_file_entry+1)& (0+255),w,b
 26878  00AE98  E104               	bnz	u12295
 26879  00AE9A  0101               	movlb	1	; () banked
 26880  00AE9C  5114               	movf	fatfs_add_file_entry@dirSector& (0+255),w,b
 26881  00AE9E  0100               	movlb	0	; () banked
 26882  00AEA0  19E0               	xorwf	??_fatfs_add_file_entry& (0+255),w,b
 26883  00AEA2                     u12295:
 26884  00AEA2  E107               	bnz	l10793
 26885                           
 26886                           ; BSR set to: 0
 26887  00AEA4  0101               	movlb	1	; () banked
 26888  00AEA6  5113               	movf	fatfs_add_file_entry@item& (0+255),w,b
 26889  00AEA8  6312               	cpfseq	fatfs_add_file_entry@dirOffset& (0+255),b
 26890  00AEAA  D003               	goto	l10793
 26891                           
 26892                           ; BSR set to: 1
 26893                           ;fat_write.c: 325: foundEnd = 1;
 26894  00AEAC  6B0D               	clrf	(fatfs_add_file_entry@foundEnd+1)& (0+255),b
 26895  00AEAE  0E01               	movlw	1
 26896  00AEB0  6F0C               	movwf	fatfs_add_file_entry@foundEnd& (0+255),b
 26897  00AEB2                     l10793:
 26898                           
 26899                           ;fat_write.c: 328: if (foundEnd)
 26900  00AEB2  0101               	movlb	1	; () banked
 26901  00AEB4  510D               	movf	(fatfs_add_file_entry@foundEnd+1)& (0+255),w,b
 26902  00AEB6  110C               	iorwf	fatfs_add_file_entry@foundEnd& (0+255),w,b
 26903  00AEB8  E101 D09F          	bz	l10813
 26904                           
 26905                           ; BSR set to: 1
 26906                           ;fat_write.c: 329: {
 26907                           ;fat_write.c: 330: if (entryCount==0)
 26908  00AEBC  5111               	movf	(fatfs_add_file_entry@entryCount+1)& (0+255),w,b
 26909  00AEBE  1110               	iorwf	fatfs_add_file_entry@entryCount& (0+255),w,b
 26910  00AEC0  E177               	bnz	l10807
 26911                           
 26912                           ; BSR set to: 1
 26913                           ;fat_write.c: 331: {
 26914                           ;fat_write.c: 333: fatfs_sfn_create_entry(shortfilename, size, startCluster, &shortEntry
      +                          , dir);
 26915  00AEC2  C0D5  F002         	movff	fatfs_add_file_entry@shortfilename+1,fatfs_sfn_create_entry@shortfilename+1
 26916  00AEC6  C0D4  F001         	movff	fatfs_add_file_entry@shortfilename,fatfs_sfn_create_entry@shortfilename
 26917  00AECA  C0DA  F003         	movff	fatfs_add_file_entry@size,fatfs_sfn_create_entry@size
 26918  00AECE  C0DB  F004         	movff	fatfs_add_file_entry@size+1,fatfs_sfn_create_entry@size+1
 26919  00AED2  C0DC  F005         	movff	fatfs_add_file_entry@size+2,fatfs_sfn_create_entry@size+2
 26920  00AED6  C0DD  F006         	movff	fatfs_add_file_entry@size+3,fatfs_sfn_create_entry@size+3
 26921  00AEDA  C0D6  F007         	movff	fatfs_add_file_entry@startCluster,fatfs_sfn_create_entry@startCluster
 26922  00AEDE  C0D7  F008         	movff	fatfs_add_file_entry@startCluster+1,fatfs_sfn_create_entry@startCluster+1
 26923  00AEE2  C0D8  F009         	movff	fatfs_add_file_entry@startCluster+2,fatfs_sfn_create_entry@startCluster+2
 26924  00AEE6  C0D9  F00A         	movff	fatfs_add_file_entry@startCluster+3,fatfs_sfn_create_entry@startCluster+3
 26925  00AEEA  0E01               	movlw	high fatfs_add_file_entry@shortEntry
 26926  00AEEC  6E0C               	movwf	fatfs_sfn_create_entry@entry+1,c
 26927  00AEEE  0E18               	movlw	low fatfs_add_file_entry@shortEntry
 26928  00AEF0  6E0B               	movwf	fatfs_sfn_create_entry@entry,c
 26929  00AEF2  C0DE  F00D         	movff	fatfs_add_file_entry@dir,fatfs_sfn_create_entry@dir
 26930  00AEF6  C0DF  F00E         	movff	fatfs_add_file_entry@dir+1,fatfs_sfn_create_entry@dir+1
 26931  00AEFA  EC59  F035         	call	_fatfs_sfn_create_entry	;wreg free
 26932                           
 26933                           ;fat_write.c: 340: memcpy(&fs->currentsector.sector[recordoffset], &shortEntry, sizeof(s
      +                          hortEntry));
 26934  00AEFE  C0CC  F0E0         	movff	fatfs_add_file_entry@fs,??_fatfs_add_file_entry
 26935  00AF02  C0CD  F0E1         	movff	fatfs_add_file_entry@fs+1,??_fatfs_add_file_entry+1
 26936  00AF06  0101               	movlb	1	; () banked
 26937  00AF08  510A               	movf	fatfs_add_file_entry@recordoffset& (0+255),w,b
 26938  00AF0A  0100               	movlb	0	; () banked
 26939  00AF0C  27E0               	addwf	??_fatfs_add_file_entry& (0+255),f,b
 26940  00AF0E  0101               	movlb	1	; () banked
 26941  00AF10  510B               	movf	(fatfs_add_file_entry@recordoffset+1)& (0+255),w,b
 26942  00AF12  0100               	movlb	0	; () banked
 26943  00AF14  23E1               	addwfc	(??_fatfs_add_file_entry+1)& (0+255),f,b
 26944  00AF16  0E31               	movlw	49
 26945  00AF18  25E0               	addwf	??_fatfs_add_file_entry& (0+255),w,b
 26946  00AF1A  6E01               	movwf	memcpy@d1,c
 26947  00AF1C  0E00               	movlw	0
 26948  00AF1E  21E1               	addwfc	(??_fatfs_add_file_entry+1)& (0+255),w,b
 26949  00AF20  6E02               	movwf	memcpy@d1+1,c
 26950  00AF22  0E20               	movlw	32
 26951  00AF24  6E05               	movwf	memcpy@s1+2,c
 26952  00AF26  0E01               	movlw	high fatfs_add_file_entry@shortEntry
 26953  00AF28  6E04               	movwf	memcpy@s1+1,c
 26954  00AF2A  0101               	movlb	1	; () banked
 26955  00AF2C  0E18               	movlw	low fatfs_add_file_entry@shortEntry
 26956  00AF2E  6E03               	movwf	memcpy@s1,c
 26957  00AF30  6A07               	clrf	memcpy@n+1,c
 26958  00AF32  0E20               	movlw	32
 26959  00AF34  6E06               	movwf	memcpy@n,c
 26960  00AF36  ECAE  F023         	call	_memcpy	;wreg free
 26961                           
 26962                           ;fat_write.c: 343: return fs->disk_io.write_media(fs->currentsector.address, fs->current
      +                          sector.sector, 1);
 26963  00AF3A  EE22 F031          	lfsr	2,561
 26964  00AF3E  0100               	movlb	0	; () banked
 26965  00AF40  51CC               	movf	fatfs_add_file_entry@fs& (0+255),w,b
 26966  00AF42  26D9               	addwf	fsr2l,f,c
 26967  00AF44  51CD               	movf	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 26968  00AF46  22DA               	addwfc	fsr2h,f,c
 26969  00AF48  CFDE F009          	movff	postinc2,media_write@sector
 26970  00AF4C  CFDE F00A          	movff	postinc2,media_write@sector+1
 26971  00AF50  CFDE F00B          	movff	postinc2,media_write@sector+2
 26972  00AF54  CFDE F00C          	movff	postinc2,media_write@sector+3
 26973  00AF58  0E31               	movlw	49
 26974  00AF5A  25CC               	addwf	fatfs_add_file_entry@fs& (0+255),w,b
 26975  00AF5C  6FE0               	movwf	??_fatfs_add_file_entry& (0+255),b
 26976  00AF5E  0E00               	movlw	0
 26977  00AF60  21CD               	addwfc	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 26978  00AF62  6FE1               	movwf	(??_fatfs_add_file_entry+1)& (0+255),b
 26979  00AF64  0E20               	movlw	32
 26980  00AF66  6E0F               	movwf	media_write@buffer+2,c
 26981  00AF68  C0E1  F00E         	movff	??_fatfs_add_file_entry+1,media_write@buffer+1
 26982  00AF6C  C0E0  F00D         	movff	??_fatfs_add_file_entry,media_write@buffer
 26983  00AF70  0E01               	movlw	1
 26984  00AF72  6E10               	movwf	media_write@sector_count,c
 26985  00AF74  6A11               	clrf	media_write@sector_count+1,c
 26986  00AF76  6A12               	clrf	media_write@sector_count+2,c
 26987  00AF78  6A13               	clrf	media_write@sector_count+3,c
 26988  00AF7A  EE20 F02B          	lfsr	2,43
 26989  00AF7E  51CC               	movf	fatfs_add_file_entry@fs& (0+255),w,b
 26990  00AF80  26D9               	addwf	fsr2l,f,c
 26991  00AF82  51CD               	movf	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 26992  00AF84  22DA               	addwfc	fsr2h,f,c
 26993  00AF86  CFDE F0E2          	movff	postinc2,??_fatfs_add_file_entry+2
 26994  00AF8A  CFDD F0E3          	movff	postdec2,??_fatfs_add_file_entry+3
 26995  00AF8E  D801               	call	u12338
 26996  00AF90  D00A               	goto	u12339
 26997  00AF92                     u12338:
 26998  00AF92  0005               	push	
 26999  00AF94  6EFA               	movwf	pclath,c
 27000  00AF96  0100               	movlb	0	; () banked
 27001  00AF98  51E2               	movf	(??_fatfs_add_file_entry+2)& (0+255),w,b
 27002  00AF9A  6EFD               	movwf	tosl,c
 27003  00AF9C  51E3               	movf	(??_fatfs_add_file_entry+3)& (0+255),w,b
 27004  00AF9E  6EFE               	movwf	tosh,c
 27005  00AFA0  6AFF               	clrf	tosu,c
 27006  00AFA2  50FA               	movf	pclath,w,c
 27007  00AFA4  0012               	return		;indir
 27008  00AFA6                     u12339:
 27009  00AFA6  C009  F0CC         	movff	?_media_write,?_fatfs_add_file_entry
 27010  00AFAA  C00A  F0CD         	movff	?_media_write+1,?_fatfs_add_file_entry+1
 27011  00AFAE  D070               	goto	l1367
 27012  00AFB0                     l10807:
 27013                           
 27014                           ;fat_write.c: 346: else
 27015                           ;fat_write.c: 347: {
 27016                           ;fat_write.c: 348: entryCount--;
 27017  00AFB0  0101               	movlb	1	; () banked
 27018  00AFB2  0710               	decf	fatfs_add_file_entry@entryCount& (0+255),f,b
 27019  00AFB4  A0D8               	btfss	status,0,c
 27020  00AFB6  0711               	decf	(fatfs_add_file_entry@entryCount+1)& (0+255),f,b
 27021                           
 27022                           ; BSR set to: 1
 27023                           ;fat_write.c: 351: fatfs_filename_to_lfn(filename, &fs->currentsector.sector[recordoffse
      +                          t], entryCount, checksum);
 27024  00AFB8  C0D3  F00E         	movff	fatfs_add_file_entry@filename+1,fatfs_filename_to_lfn@filename+1
 27025  00AFBC  C0D2  F00D         	movff	fatfs_add_file_entry@filename,fatfs_filename_to_lfn@filename
 27026  00AFC0  C0CC  F0E0         	movff	fatfs_add_file_entry@fs,??_fatfs_add_file_entry
 27027  00AFC4  C0CD  F0E1         	movff	fatfs_add_file_entry@fs+1,??_fatfs_add_file_entry+1
 27028  00AFC8  510A               	movf	fatfs_add_file_entry@recordoffset& (0+255),w,b
 27029  00AFCA  0100               	movlb	0	; () banked
 27030  00AFCC  27E0               	addwf	??_fatfs_add_file_entry& (0+255),f,b
 27031  00AFCE  0101               	movlb	1	; () banked
 27032  00AFD0  510B               	movf	(fatfs_add_file_entry@recordoffset+1)& (0+255),w,b
 27033  00AFD2  0100               	movlb	0	; () banked
 27034  00AFD4  23E1               	addwfc	(??_fatfs_add_file_entry+1)& (0+255),f,b
 27035  00AFD6  0E31               	movlw	49
 27036  00AFD8  25E0               	addwf	??_fatfs_add_file_entry& (0+255),w,b
 27037  00AFDA  6E0F               	movwf	fatfs_filename_to_lfn@buffer,c
 27038  00AFDC  0E00               	movlw	0
 27039  00AFDE  21E1               	addwfc	(??_fatfs_add_file_entry+1)& (0+255),w,b
 27040  00AFE0  6E10               	movwf	fatfs_filename_to_lfn@buffer+1,c
 27041  00AFE2  C110  F011         	movff	fatfs_add_file_entry@entryCount,fatfs_filename_to_lfn@entry
 27042  00AFE6  C111  F012         	movff	fatfs_add_file_entry@entryCount+1,fatfs_filename_to_lfn@entry+1
 27043  00AFEA  C10F  F013         	movff	fatfs_add_file_entry@checksum,fatfs_filename_to_lfn@sfnChk
 27044  00AFEE  EC4A  F040         	call	_fatfs_filename_to_lfn	;wreg free
 27045                           
 27046                           ;fat_write.c: 352: dirtySector = 1;
 27047  00AFF2  0101               	movlb	1	; () banked
 27048  00AFF4  6B05               	clrf	(fatfs_add_file_entry@dirtySector+1)& (0+255),b
 27049  00AFF6  0E01               	movlw	1
 27050  00AFF8  6F04               	movwf	fatfs_add_file_entry@dirtySector& (0+255),b
 27051  00AFFA                     l10813:
 27052  00AFFA  0101               	movlb	1	; () banked
 27053  00AFFC  2B13               	incf	fatfs_add_file_entry@item& (0+255),f,b
 27054  00AFFE                     L84:
 27055                           
 27056                           ; BSR set to: 1
 27057  00AFFE  0E0F               	movlw	15
 27058  00B000  0101               	movlb	1	; () banked
 27059  00B002  6513               	cpfsgt	fatfs_add_file_entry@item& (0+255),b
 27060  00B004  D71E               	goto	l10783
 27061                           
 27062                           ; BSR set to: 1
 27063                           ;fat_write.c: 353: }
 27064                           ;fat_write.c: 355: }
 27065                           ;fat_write.c: 356: }
 27066                           ;fat_write.c: 359: if (dirtySector)
 27067                           
 27068                           ; BSR set to: 1
 27069  00B006  5105               	movf	(fatfs_add_file_entry@dirtySector+1)& (0+255),w,b
 27070  00B008  1104               	iorwf	fatfs_add_file_entry@dirtySector& (0+255),w,b
 27071  00B00A  E101 D6EB          	bz	l10775
 27072                           
 27073                           ; BSR set to: 1
 27074                           ;fat_write.c: 360: {
 27075                           ;fat_write.c: 361: if (!fs->disk_io.write_media(fs->currentsector.address, fs->currentse
      +                          ctor.sector, 1))
 27076  00B00E  EE22 F031          	lfsr	2,561
 27077  00B012  0100               	movlb	0	; () banked
 27078  00B014  51CC               	movf	fatfs_add_file_entry@fs& (0+255),w,b
 27079  00B016  26D9               	addwf	fsr2l,f,c
 27080  00B018  51CD               	movf	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 27081  00B01A  22DA               	addwfc	fsr2h,f,c
 27082  00B01C  CFDE F009          	movff	postinc2,media_write@sector
 27083  00B020  CFDE F00A          	movff	postinc2,media_write@sector+1
 27084  00B024  CFDE F00B          	movff	postinc2,media_write@sector+2
 27085  00B028  CFDE F00C          	movff	postinc2,media_write@sector+3
 27086  00B02C  0E31               	movlw	49
 27087  00B02E  25CC               	addwf	fatfs_add_file_entry@fs& (0+255),w,b
 27088  00B030  6FE0               	movwf	??_fatfs_add_file_entry& (0+255),b
 27089  00B032  0E00               	movlw	0
 27090  00B034  21CD               	addwfc	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 27091  00B036  6FE1               	movwf	(??_fatfs_add_file_entry+1)& (0+255),b
 27092  00B038  0E20               	movlw	32
 27093  00B03A  6E0F               	movwf	media_write@buffer+2,c
 27094  00B03C  C0E1  F00E         	movff	??_fatfs_add_file_entry+1,media_write@buffer+1
 27095  00B040  C0E0  F00D         	movff	??_fatfs_add_file_entry,media_write@buffer
 27096  00B044  0E01               	movlw	1
 27097  00B046  6E10               	movwf	media_write@sector_count,c
 27098  00B048  6A11               	clrf	media_write@sector_count+1,c
 27099  00B04A  6A12               	clrf	media_write@sector_count+2,c
 27100  00B04C  6A13               	clrf	media_write@sector_count+3,c
 27101  00B04E  EE20 F02B          	lfsr	2,43
 27102  00B052  51CC               	movf	fatfs_add_file_entry@fs& (0+255),w,b
 27103  00B054  26D9               	addwf	fsr2l,f,c
 27104  00B056  51CD               	movf	(fatfs_add_file_entry@fs+1)& (0+255),w,b
 27105  00B058  22DA               	addwfc	fsr2h,f,c
 27106  00B05A  CFDE F0E2          	movff	postinc2,??_fatfs_add_file_entry+2
 27107  00B05E  CFDD F0E3          	movff	postdec2,??_fatfs_add_file_entry+3
 27108  00B062  D801               	call	u12368
 27109  00B064  D00A               	goto	u12369
 27110  00B066                     u12368:
 27111  00B066  0005               	push	
 27112  00B068  6EFA               	movwf	pclath,c
 27113  00B06A  0100               	movlb	0	; () banked
 27114  00B06C  51E2               	movf	(??_fatfs_add_file_entry+2)& (0+255),w,b
 27115  00B06E  6EFD               	movwf	tosl,c
 27116  00B070  51E3               	movf	(??_fatfs_add_file_entry+3)& (0+255),w,b
 27117  00B072  6EFE               	movwf	tosh,c
 27118  00B074  6AFF               	clrf	tosu,c
 27119  00B076  50FA               	movf	pclath,w,c
 27120  00B078  0012               	return		;indir
 27121  00B07A                     u12369:
 27122  00B07A  500A               	movf	?_media_write+1,w,c
 27123  00B07C  1009               	iorwf	?_media_write,w,c
 27124  00B07E  E004               	bz	l10827
 27125                           
 27126                           ;fat_write.c: 364: dirtySector = 0;
 27127                           
 27128                           ; BSR set to: 0
 27129                           
 27130                           ; BSR set to: 0
 27131                           
 27132                           ;fat_write.c: 362: return 0;
 27133  00B080  0101               	movlb	1	; () banked
 27134  00B082  6B05               	clrf	(fatfs_add_file_entry@dirtySector+1)& (0+255),b
 27135  00B084  6B04               	clrf	fatfs_add_file_entry@dirtySector& (0+255),b
 27136  00B086  D6AE               	goto	l10775
 27137  00B088                     l10827:
 27138                           
 27139                           ;fat_write.c: 367: else
 27140                           ;fat_write.c: 368: return 0;
 27141  00B088  0E00               	movlw	0
 27142  00B08A  0100               	movlb	0	; () banked
 27143  00B08C  6FCD               	movwf	(?_fatfs_add_file_entry+1)& (0+255),b
 27144  00B08E  6FCC               	movwf	?_fatfs_add_file_entry& (0+255),b
 27145  00B090                     l1367:
 27146  00B090  0012               	return	
 27147  00B092                     __end_of_fatfs_add_file_entry:
 27148                           	opt stack 0
 27149                           tosu	equ	0xFFF
 27150                           tosh	equ	0xFFE
 27151                           tosl	equ	0xFFD
 27152                           pclath	equ	0xFFA
 27153                           tblptru	equ	0xFF8
 27154                           tblptrh	equ	0xFF7
 27155                           tblptrl	equ	0xFF6
 27156                           tablat	equ	0xFF5
 27157                           prodh	equ	0xFF4
 27158                           prodl	equ	0xFF3
 27159                           indf0	equ	0xFEF
 27160                           postinc0	equ	0xFEE
 27161                           fsr0h	equ	0xFEA
 27162                           fsr0l	equ	0xFE9
 27163                           wreg	equ	0xFE8
 27164                           indf1	equ	0xFE7
 27165                           postinc1	equ	0xFE6
 27166                           postdec1	equ	0xFE5
 27167                           fsr1h	equ	0xFE2
 27168                           fsr1l	equ	0xFE1
 27169                           indf2	equ	0xFDF
 27170                           postinc2	equ	0xFDE
 27171                           postdec2	equ	0xFDD
 27172                           fsr2h	equ	0xFDA
 27173                           fsr2l	equ	0xFD9
 27174                           status	equ	0xFD8
 27175                           
 27176 ;; *************** function _fatfs_sfn_create_entry *****************
 27177 ;; Defined at:
 27178 ;;		line 250 in file "fat_misc.c"
 27179 ;; Parameters:    Size  Location     Type
 27180 ;;  shortfilenam    2    0[COMRAM] PTR unsigned char 
 27181 ;;		 -> RAM(3967), NULL(0), 
 27182 ;;  size            4    2[COMRAM] unsigned long 
 27183 ;;  startCluster    4    6[COMRAM] unsigned long 
 27184 ;;  entry           2   10[COMRAM] PTR struct fat_dir_entry
 27185 ;;		 -> fatfs_add_file_entry@shortEntry(32), 
 27186 ;;  dir             2   12[COMRAM] int 
 27187 ;; Auto vars:     Size  Location     Type
 27188 ;;  i               2   14[COMRAM] int 
 27189 ;; Return value:  Size  Location     Type
 27190 ;;		None               void
 27191 ;; Registers used:
 27192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27193 ;; Tracked objects:
 27194 ;;		On entry : 0/0
 27195 ;;		On exit  : 0/0
 27196 ;;		Unchanged: 0/0
 27197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27198 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27201 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27202 ;;Total ram usage:       16 bytes
 27203 ;; Hardware stack levels used:    1
 27204 ;; This function calls:
 27205 ;;		Nothing
 27206 ;; This function is called by:
 27207 ;;		_fatfs_add_file_entry
 27208 ;; This function uses a non-reentrant model
 27209 ;;
 27210                           
 27211                           	psect	text79
 27212  006AB2                     __ptext79:
 27213                           	opt stack 0
 27214  006AB2                     _fatfs_sfn_create_entry:
 27215                           	opt stack 24
 27216                           
 27217                           ;fat_misc.c: 252: int i;
 27218                           ;fat_misc.c: 255: for (i=0;i<11;i++)
 27219                           
 27220                           ;incstack = 0
 27221  006AB2  6A10               	clrf	fatfs_sfn_create_entry@i+1,c
 27222  006AB4  6A0F               	clrf	fatfs_sfn_create_entry@i,c
 27223  006AB6  5010               	movf	fatfs_sfn_create_entry@i+1,w,c
 27224  006AB8  0A80               	xorlw	128
 27225  006ABA  0F80               	addlw	-128
 27226  006ABC  0E0B               	movlw	11
 27227  006ABE  B4D8               	btfsc	status,2,c
 27228  006AC0  5C0F               	subwf	fatfs_sfn_create_entry@i,w,c
 27229  006AC2  E211               	bc	l10213
 27230                           
 27231                           ;fat_misc.c: 256: entry->Name[i] = shortfilename[i];
 27232  006AC4  500F               	movf	fatfs_sfn_create_entry@i,w,c
 27233  006AC6  2401               	addwf	fatfs_sfn_create_entry@shortfilename,w,c
 27234  006AC8  6ED9               	movwf	fsr2l,c
 27235  006ACA  5010               	movf	fatfs_sfn_create_entry@i+1,w,c
 27236  006ACC  2002               	addwfc	fatfs_sfn_create_entry@shortfilename+1,w,c
 27237  006ACE  6EDA               	movwf	fsr2h,c
 27238  006AD0  500F               	movf	fatfs_sfn_create_entry@i,w,c
 27239  006AD2  240B               	addwf	fatfs_sfn_create_entry@entry,w,c
 27240  006AD4  6EE1               	movwf	fsr1l,c
 27241  006AD6  5010               	movf	fatfs_sfn_create_entry@i+1,w,c
 27242  006AD8  200C               	addwfc	fatfs_sfn_create_entry@entry+1,w,c
 27243  006ADA  6EE2               	movwf	fsr1h,c
 27244  006ADC  CFDF FFE7          	movff	indf2,indf1
 27245  006AE0  4A0F               	infsnz	fatfs_sfn_create_entry@i,f,c
 27246  006AE2  2A10               	incf	fatfs_sfn_create_entry@i+1,f,c
 27247  006AE4  D7E8               	goto	L85
 27248  006AE6                     l10213:
 27249                           
 27250                           ;fat_misc.c: 259: entry->CrtTimeTenth = 0x00;
 27251  006AE6  EE20 F00D          	lfsr	2,13
 27252  006AEA  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27253  006AEC  26D9               	addwf	fsr2l,f,c
 27254  006AEE  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27255  006AF0  22DA               	addwfc	fsr2h,f,c
 27256  006AF2  6ADF               	clrf	indf2,c
 27257                           
 27258                           ;fat_misc.c: 260: entry->CrtTime[1] = entry->CrtTime[0] = 0x00;
 27259  006AF4  EE20 F00E          	lfsr	2,14
 27260  006AF8  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27261  006AFA  26D9               	addwf	fsr2l,f,c
 27262  006AFC  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27263  006AFE  22DA               	addwfc	fsr2h,f,c
 27264  006B00  6ADF               	clrf	indf2,c
 27265  006B02  EE10 F00F          	lfsr	1,15
 27266  006B06  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27267  006B08  26E1               	addwf	fsr1l,f,c
 27268  006B0A  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27269  006B0C  22E2               	addwfc	fsr1h,f,c
 27270  006B0E  CFDF FFE7          	movff	indf2,indf1
 27271                           
 27272                           ;fat_misc.c: 261: entry->CrtDate[1] = 0x00;
 27273  006B12  EE20 F011          	lfsr	2,17
 27274  006B16  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27275  006B18  26D9               	addwf	fsr2l,f,c
 27276  006B1A  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27277  006B1C  22DA               	addwfc	fsr2h,f,c
 27278  006B1E  6ADF               	clrf	indf2,c
 27279                           
 27280                           ;fat_misc.c: 262: entry->CrtDate[0] = 0x20;
 27281  006B20  EE20 F010          	lfsr	2,16
 27282  006B24  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27283  006B26  26D9               	addwf	fsr2l,f,c
 27284  006B28  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27285  006B2A  22DA               	addwfc	fsr2h,f,c
 27286  006B2C  0E20               	movlw	32
 27287  006B2E  6EDF               	movwf	indf2,c
 27288                           
 27289                           ;fat_misc.c: 263: entry->LstAccDate[1] = 0x00;
 27290  006B30  EE20 F013          	lfsr	2,19
 27291  006B34  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27292  006B36  26D9               	addwf	fsr2l,f,c
 27293  006B38  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27294  006B3A  22DA               	addwfc	fsr2h,f,c
 27295  006B3C  6ADF               	clrf	indf2,c
 27296                           
 27297                           ;fat_misc.c: 264: entry->LstAccDate[0] = 0x20;
 27298  006B3E  EE20 F012          	lfsr	2,18
 27299  006B42  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27300  006B44  26D9               	addwf	fsr2l,f,c
 27301  006B46  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27302  006B48  22DA               	addwfc	fsr2h,f,c
 27303  006B4A  0E20               	movlw	32
 27304  006B4C  6EDF               	movwf	indf2,c
 27305                           
 27306                           ;fat_misc.c: 265: entry->WrtTime[1] = entry->WrtTime[0] = 0x00;
 27307  006B4E  EE20 F016          	lfsr	2,22
 27308  006B52  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27309  006B54  26D9               	addwf	fsr2l,f,c
 27310  006B56  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27311  006B58  22DA               	addwfc	fsr2h,f,c
 27312  006B5A  6ADF               	clrf	indf2,c
 27313  006B5C  EE10 F017          	lfsr	1,23
 27314  006B60  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27315  006B62  26E1               	addwf	fsr1l,f,c
 27316  006B64  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27317  006B66  22E2               	addwfc	fsr1h,f,c
 27318  006B68  CFDF FFE7          	movff	indf2,indf1
 27319                           
 27320                           ;fat_misc.c: 266: entry->WrtDate[1] = 0x00;
 27321  006B6C  EE20 F019          	lfsr	2,25
 27322  006B70  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27323  006B72  26D9               	addwf	fsr2l,f,c
 27324  006B74  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27325  006B76  22DA               	addwfc	fsr2h,f,c
 27326  006B78  6ADF               	clrf	indf2,c
 27327                           
 27328                           ;fat_misc.c: 267: entry->WrtDate[0] = 0x20;
 27329  006B7A  EE20 F018          	lfsr	2,24
 27330  006B7E  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27331  006B80  26D9               	addwf	fsr2l,f,c
 27332  006B82  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27333  006B84  22DA               	addwfc	fsr2h,f,c
 27334  006B86  0E20               	movlw	32
 27335  006B88  6EDF               	movwf	indf2,c
 27336                           
 27337                           ;fat_misc.c: 269: if (!dir)
 27338  006B8A  500E               	movf	fatfs_sfn_create_entry@dir+1,w,c
 27339  006B8C  100D               	iorwf	fatfs_sfn_create_entry@dir,w,c
 27340  006B8E  E108               	bnz	l10231
 27341                           
 27342                           ;fat_misc.c: 270: entry->Attr = 0x20;
 27343  006B90  EE20 F00B          	lfsr	2,11
 27344  006B94  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27345  006B96  26D9               	addwf	fsr2l,f,c
 27346  006B98  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27347  006B9A  22DA               	addwfc	fsr2h,f,c
 27348  006B9C  0E20               	movlw	32
 27349  006B9E  D007               	goto	L86
 27350  006BA0                     l10231:
 27351                           
 27352                           ;fat_misc.c: 271: else
 27353                           ;fat_misc.c: 272: entry->Attr = 0x10;
 27354  006BA0  EE20 F00B          	lfsr	2,11
 27355  006BA4  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27356  006BA6  26D9               	addwf	fsr2l,f,c
 27357  006BA8  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27358  006BAA  22DA               	addwfc	fsr2h,f,c
 27359  006BAC  0E10               	movlw	16
 27360  006BAE                     L86:
 27361  006BAE  6EDF               	movwf	indf2,c
 27362                           
 27363                           ;fat_misc.c: 274: entry->NTRes = 0x00;
 27364  006BB0  EE20 F00C          	lfsr	2,12
 27365  006BB4  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27366  006BB6  26D9               	addwf	fsr2l,f,c
 27367  006BB8  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27368  006BBA  22DA               	addwfc	fsr2h,f,c
 27369  006BBC  6ADF               	clrf	indf2,c
 27370                           
 27371                           ;fat_misc.c: 276: entry->FstClusHI = ((uint16)((startCluster>>16) & 0xFFFF));
 27372  006BBE  EE20 F014          	lfsr	2,20
 27373  006BC2  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27374  006BC4  26D9               	addwf	fsr2l,f,c
 27375  006BC6  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27376  006BC8  22DA               	addwfc	fsr2h,f,c
 27377  006BCA  C009  FFDE         	movff	fatfs_sfn_create_entry@startCluster+2,postinc2
 27378  006BCE  C00A  FFDD         	movff	fatfs_sfn_create_entry@startCluster+3,postdec2
 27379                           
 27380                           ;fat_misc.c: 277: entry->FstClusLO = ((uint16)((startCluster>>0) & 0xFFFF));
 27381  006BD2  EE20 F01A          	lfsr	2,26
 27382  006BD6  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27383  006BD8  26D9               	addwf	fsr2l,f,c
 27384  006BDA  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27385  006BDC  22DA               	addwfc	fsr2h,f,c
 27386  006BDE  C007  FFDE         	movff	fatfs_sfn_create_entry@startCluster,postinc2
 27387  006BE2  C008  FFDD         	movff	fatfs_sfn_create_entry@startCluster+1,postdec2
 27388                           
 27389                           ;fat_misc.c: 278: entry->FileSize = (size);
 27390  006BE6  EE20 F01C          	lfsr	2,28
 27391  006BEA  500B               	movf	fatfs_sfn_create_entry@entry,w,c
 27392  006BEC  26D9               	addwf	fsr2l,f,c
 27393  006BEE  500C               	movf	fatfs_sfn_create_entry@entry+1,w,c
 27394  006BF0  22DA               	addwfc	fsr2h,f,c
 27395  006BF2  C003  FFDE         	movff	fatfs_sfn_create_entry@size,postinc2
 27396  006BF6  C004  FFDE         	movff	fatfs_sfn_create_entry@size+1,postinc2
 27397  006BFA  C005  FFDE         	movff	fatfs_sfn_create_entry@size+2,postinc2
 27398  006BFE  C006  FFDE         	movff	fatfs_sfn_create_entry@size+3,postinc2
 27399  006C02  0012               	return	
 27400  006C04                     __end_of_fatfs_sfn_create_entry:
 27401                           	opt stack 0
 27402                           tosu	equ	0xFFF
 27403                           tosh	equ	0xFFE
 27404                           tosl	equ	0xFFD
 27405                           pclath	equ	0xFFA
 27406                           tblptru	equ	0xFF8
 27407                           tblptrh	equ	0xFF7
 27408                           tblptrl	equ	0xFF6
 27409                           tablat	equ	0xFF5
 27410                           prodh	equ	0xFF4
 27411                           prodl	equ	0xFF3
 27412                           indf0	equ	0xFEF
 27413                           postinc0	equ	0xFEE
 27414                           fsr0h	equ	0xFEA
 27415                           fsr0l	equ	0xFE9
 27416                           wreg	equ	0xFE8
 27417                           indf1	equ	0xFE7
 27418                           postinc1	equ	0xFE6
 27419                           postdec1	equ	0xFE5
 27420                           fsr1h	equ	0xFE2
 27421                           fsr1l	equ	0xFE1
 27422                           indf2	equ	0xFDF
 27423                           postinc2	equ	0xFDE
 27424                           postdec2	equ	0xFDD
 27425                           fsr2h	equ	0xFDA
 27426                           fsr2l	equ	0xFD9
 27427                           status	equ	0xFD8
 27428                           
 27429 ;; *************** function _fatfs_find_free_dir_offset *****************
 27430 ;; Defined at:
 27431 ;;		line 130 in file "fat_write.c"
 27432 ;; Parameters:    Size  Location     Type
 27433 ;;  fs              2   44[BANK0 ] PTR struct fatfs
 27434 ;;		 -> _fs(1095), 
 27435 ;;  dirCluster      4   46[BANK0 ] unsigned long 
 27436 ;;  entryCount      2   50[BANK0 ] int 
 27437 ;;  pSector         2   52[BANK0 ] PTR unsigned long 
 27438 ;;		 -> fatfs_add_file_entry@dirSector(4), 
 27439 ;;  pOffset         2   54[BANK0 ] PTR unsigned char 
 27440 ;;		 -> fatfs_add_file_entry@dirOffset(1), 
 27441 ;; Auto vars:     Size  Location     Type
 27442 ;;  newCluster      4   65[BANK0 ] unsigned long 
 27443 ;;  possible_spa    2   73[BANK0 ] int 
 27444 ;;  x               2   71[BANK0 ] int 
 27445 ;;  recordoffset    2   69[BANK0 ] unsigned short 
 27446 ;;  start_record    2   62[BANK0 ] int 
 27447 ;;  directoryEnt    2   60[BANK0 ] PTR struct fat_dir_entry
 27448 ;;		 -> _fs.currentsector.sector(512), 
 27449 ;;  item            1   75[BANK0 ] unsigned char 
 27450 ;;  i               1   64[BANK0 ] unsigned char 
 27451 ;; Return value:  Size  Location     Type
 27452 ;;                  2   44[BANK0 ] int 
 27453 ;; Registers used:
 27454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27455 ;; Tracked objects:
 27456 ;;		On entry : 0/0
 27457 ;;		On exit  : 0/0
 27458 ;;		Unchanged: 0/0
 27459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27460 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27461 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27462 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27463 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27464 ;;Total ram usage:       32 bytes
 27465 ;; Hardware stack levels used:    1
 27466 ;; Hardware stack levels required when called:    7
 27467 ;; This function calls:
 27468 ;;		_fatfs_entry_lfn_text
 27469 ;;		_fatfs_fat_add_cluster_to_chain
 27470 ;;		_fatfs_find_blank_cluster
 27471 ;;		_fatfs_sector_reader
 27472 ;;		_fatfs_write_sector
 27473 ;;		_memset
 27474 ;; This function is called by:
 27475 ;;		_fatfs_add_file_entry
 27476 ;; This function uses a non-reentrant model
 27477 ;;
 27478                           
 27479                           	psect	text80
 27480  009968                     __ptext80:
 27481                           	opt stack 0
 27482  009968                     _fatfs_find_free_dir_offset:
 27483                           	opt stack 17
 27484                           
 27485                           ;fat_write.c: 132: struct fat_dir_entry *directoryEntry;
 27486                           ;fat_write.c: 133: uint8 item=0;
 27487                           
 27488                           ;incstack = 0
 27489  009968  0100               	movlb	0	; () banked
 27490  00996A  6BCB               	clrf	fatfs_find_free_dir_offset@item& (0+255),b
 27491                           
 27492                           ;fat_write.c: 134: uint16 recordoffset = 0;
 27493  00996C  6BC6               	clrf	(fatfs_find_free_dir_offset@recordoffset+1)& (0+255),b
 27494  00996E  6BC5               	clrf	fatfs_find_free_dir_offset@recordoffset& (0+255),b
 27495                           
 27496                           ;fat_write.c: 135: uint8 i=0;
 27497  009970  6BC0               	clrf	fatfs_find_free_dir_offset@i& (0+255),b
 27498                           
 27499                           ;fat_write.c: 136: int x=0;
 27500  009972  6BC8               	clrf	(fatfs_find_free_dir_offset@x+1)& (0+255),b
 27501  009974  6BC7               	clrf	fatfs_find_free_dir_offset@x& (0+255),b
 27502                           
 27503                           ;fat_write.c: 137: int possible_spaces = 0;
 27504  009976  6BCA               	clrf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),b
 27505  009978  6BC9               	clrf	fatfs_find_free_dir_offset@possible_spaces& (0+255),b
 27506                           
 27507                           ;fat_write.c: 138: int start_recorded = 0;
 27508  00997A  6BBF               	clrf	(fatfs_find_free_dir_offset@start_recorded+1)& (0+255),b
 27509  00997C  6BBE               	clrf	fatfs_find_free_dir_offset@start_recorded& (0+255),b
 27510                           
 27511                           ; BSR set to: 0
 27512                           ;fat_write.c: 141: if (entryCount == 0)
 27513  00997E  51B3               	movf	(fatfs_find_free_dir_offset@entryCount+1)& (0+255),w,b
 27514  009980  11B2               	iorwf	fatfs_find_free_dir_offset@entryCount& (0+255),w,b
 27515  009982  E104               	bnz	l10265
 27516  009984                     L90:
 27517                           
 27518                           ; BSR set to: 0
 27519                           ;fat_write.c: 142: return 0;
 27520  009984  0E00               	movlw	0
 27521  009986  0100               	movlb	0	; () banked
 27522  009988  6FAD               	movwf	(?_fatfs_find_free_dir_offset+1)& (0+255),b
 27523  00998A  D16D               	goto	L89
 27524  00998C                     l10265:
 27525                           
 27526                           ; BSR set to: 0
 27527                           ;fat_write.c: 146: {
 27528                           ;fat_write.c: 148: if (fatfs_sector_reader(fs, dirCluster, x++, 0))
 27529  00998C  C0AD  F081         	movff	fatfs_find_free_dir_offset@fs+1,fatfs_sector_reader@fs+1
 27530  009990  C0AC  F080         	movff	fatfs_find_free_dir_offset@fs,fatfs_sector_reader@fs
 27531  009994  C0AE  F082         	movff	fatfs_find_free_dir_offset@dirCluster,fatfs_sector_reader@start_cluster
 27532  009998  C0AF  F083         	movff	fatfs_find_free_dir_offset@dirCluster+1,fatfs_sector_reader@start_cluster+1
 27533  00999C  C0B0  F084         	movff	fatfs_find_free_dir_offset@dirCluster+2,fatfs_sector_reader@start_cluster+2
 27534  0099A0  C0B1  F085         	movff	fatfs_find_free_dir_offset@dirCluster+3,fatfs_sector_reader@start_cluster+3
 27535  0099A4  0100               	movlb	0	; () banked
 27536  0099A6  51C7               	movf	fatfs_find_free_dir_offset@x& (0+255),w,b
 27537  0099A8  6FB8               	movwf	??_fatfs_find_free_dir_offset& (0+255),b
 27538  0099AA  51C8               	movf	(fatfs_find_free_dir_offset@x+1)& (0+255),w,b
 27539  0099AC  6FB9               	movwf	(??_fatfs_find_free_dir_offset+1)& (0+255),b
 27540  0099AE  4BC7               	infsnz	fatfs_find_free_dir_offset@x& (0+255),f,b
 27541  0099B0  2BC8               	incf	(fatfs_find_free_dir_offset@x+1)& (0+255),f,b
 27542  0099B2  C0B8  F086         	movff	??_fatfs_find_free_dir_offset,fatfs_sector_reader@offset
 27543  0099B6  C0B9  F087         	movff	??_fatfs_find_free_dir_offset+1,fatfs_sector_reader@offset+1
 27544  0099BA  0E00               	movlw	0
 27545  0099BC  BF87               	btfsc	(fatfs_sector_reader@offset+1)& (0+255),7,b
 27546  0099BE  0EFF               	movlw	-1
 27547  0099C0  6F88               	movwf	(fatfs_sector_reader@offset+2)& (0+255),b
 27548  0099C2  6F89               	movwf	(fatfs_sector_reader@offset+3)& (0+255),b
 27549  0099C4  0E00               	movlw	0
 27550  0099C6  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
 27551  0099C8  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
 27552  0099CA  ECD6  F052         	call	_fatfs_sector_reader	;wreg free
 27553  0099CE  0100               	movlb	0	; () banked
 27554  0099D0  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
 27555  0099D2  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
 27556  0099D4  E101 D0AF          	bz	l10331
 27557                           
 27558                           ; BSR set to: 0
 27559                           ;fat_write.c: 149: {
 27560                           ;fat_write.c: 151: for (item = 0; item < (512 / 32); item++)
 27561  0099D8  6BCB               	clrf	fatfs_find_free_dir_offset@item& (0+255),b
 27562                           
 27563                           ; BSR set to: 0
 27564  0099DA  0E0F               	movlw	15
 27565  0099DC  65CB               	cpfsgt	fatfs_find_free_dir_offset@item& (0+255),b
 27566  0099DE  D001               	goto	l10273
 27567  0099E0  D7D5               	goto	l10265
 27568  0099E2                     l10273:
 27569                           
 27570                           ; BSR set to: 0
 27571                           ;fat_write.c: 152: {
 27572                           ;fat_write.c: 154: recordoffset = 32 * item;
 27573  0099E2  0100               	movlb	0	; () banked
 27574  0099E4  51CB               	movf	fatfs_find_free_dir_offset@item& (0+255),w,b
 27575  0099E6  0D20               	mullw	32
 27576  0099E8  CFF3 F0C5          	movff	prodl,fatfs_find_free_dir_offset@recordoffset
 27577  0099EC  CFF4 F0C6          	movff	prodh,fatfs_find_free_dir_offset@recordoffset+1
 27578                           
 27579                           ; BSR set to: 0
 27580                           ;fat_write.c: 157: directoryEntry = (struct fat_dir_entry*)(fs->currentsector.sector+rec
      +                          ordoffset);
 27581  0099F0  C0AC  F0B8         	movff	fatfs_find_free_dir_offset@fs,??_fatfs_find_free_dir_offset
 27582  0099F4  C0AD  F0B9         	movff	fatfs_find_free_dir_offset@fs+1,??_fatfs_find_free_dir_offset+1
 27583  0099F8  51C5               	movf	fatfs_find_free_dir_offset@recordoffset& (0+255),w,b
 27584  0099FA  27B8               	addwf	??_fatfs_find_free_dir_offset& (0+255),f,b
 27585  0099FC  51C6               	movf	(fatfs_find_free_dir_offset@recordoffset+1)& (0+255),w,b
 27586  0099FE  23B9               	addwfc	(??_fatfs_find_free_dir_offset+1)& (0+255),f,b
 27587  009A00  0E31               	movlw	49
 27588  009A02  25B8               	addwf	??_fatfs_find_free_dir_offset& (0+255),w,b
 27589  009A04  6FBC               	movwf	fatfs_find_free_dir_offset@directoryEntry& (0+255),b
 27590  009A06  0E00               	movlw	0
 27591  009A08  21B9               	addwfc	(??_fatfs_find_free_dir_offset+1)& (0+255),w,b
 27592  009A0A  6FBD               	movwf	(fatfs_find_free_dir_offset@directoryEntry+1)& (0+255),b
 27593                           
 27594                           ; BSR set to: 0
 27595                           ;fat_write.c: 160: if (fatfs_entry_lfn_text(directoryEntry))
 27596  009A0C  C0BD  F002         	movff	fatfs_find_free_dir_offset@directoryEntry+1,fatfs_entry_lfn_text@entry+1
 27597  009A10  C0BC  F001         	movff	fatfs_find_free_dir_offset@directoryEntry,fatfs_entry_lfn_text@entry
 27598  009A14  ECFA  F01F         	call	_fatfs_entry_lfn_text	;wreg free
 27599  009A18  5002               	movf	?_fatfs_entry_lfn_text+1,w,c
 27600  009A1A  1001               	iorwf	?_fatfs_entry_lfn_text,w,c
 27601  009A1C  E02A               	bz	l10289
 27602                           
 27603                           ;fat_write.c: 161: {
 27604                           ;fat_write.c: 163: if (possible_spaces == 0)
 27605  009A1E  0100               	movlb	0	; () banked
 27606  009A20  51CA               	movf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),w,b
 27607  009A22  11C9               	iorwf	fatfs_find_free_dir_offset@possible_spaces& (0+255),w,b
 27608  009A24  E122               	bnz	l10287
 27609                           
 27610                           ; BSR set to: 0
 27611                           ;fat_write.c: 164: {
 27612                           ;fat_write.c: 166: *pSector = x-1;
 27613  009A26  0EFF               	movlw	255
 27614  009A28  25C7               	addwf	fatfs_find_free_dir_offset@x& (0+255),w,b
 27615  009A2A  6FB8               	movwf	??_fatfs_find_free_dir_offset& (0+255),b
 27616  009A2C  0EFF               	movlw	255
 27617  009A2E  21C8               	addwfc	(fatfs_find_free_dir_offset@x+1)& (0+255),w,b
 27618  009A30  6FB9               	movwf	(??_fatfs_find_free_dir_offset+1)& (0+255),b
 27619  009A32  6BBA               	clrf	(??_fatfs_find_free_dir_offset+2)& (0+255),b
 27620  009A34  BFB9               	btfsc	(??_fatfs_find_free_dir_offset+1)& (0+255),7,b
 27621  009A36  07BA               	decf	(??_fatfs_find_free_dir_offset+2)& (0+255),f,b
 27622  009A38  51BA               	movf	(??_fatfs_find_free_dir_offset+2)& (0+255),w,b
 27623  009A3A  6FBB               	movwf	(??_fatfs_find_free_dir_offset+3)& (0+255),b
 27624  009A3C  C0B4  FFD9         	movff	fatfs_find_free_dir_offset@pSector,fsr2l
 27625  009A40  C0B5  FFDA         	movff	fatfs_find_free_dir_offset@pSector+1,fsr2h
 27626  009A44  C0B8  FFDE         	movff	??_fatfs_find_free_dir_offset,postinc2
 27627  009A48  C0B9  FFDE         	movff	??_fatfs_find_free_dir_offset+1,postinc2
 27628  009A4C  C0BA  FFDE         	movff	??_fatfs_find_free_dir_offset+2,postinc2
 27629  009A50  C0BB  FFDD         	movff	??_fatfs_find_free_dir_offset+3,postdec2
 27630  009A54  06D9               	decf	fsr2l,f,c
 27631  009A56  06D9               	decf	fsr2l,f,c
 27632                           
 27633                           ; BSR set to: 0
 27634                           ;fat_write.c: 167: *pOffset = item;
 27635  009A58  C0B6  FFD9         	movff	fatfs_find_free_dir_offset@pOffset,fsr2l
 27636  009A5C  C0B7  FFDA         	movff	fatfs_find_free_dir_offset@pOffset+1,fsr2h
 27637  009A60  C0CB  FFDF         	movff	fatfs_find_free_dir_offset@item,indf2
 27638                           
 27639                           ; BSR set to: 0
 27640                           ;fat_write.c: 168: start_recorded = 1;
 27641  009A64  6BBF               	clrf	(fatfs_find_free_dir_offset@start_recorded+1)& (0+255),b
 27642  009A66  0E01               	movlw	1
 27643  009A68  6FBE               	movwf	fatfs_find_free_dir_offset@start_recorded& (0+255),b
 27644  009A6A                     l10287:
 27645                           
 27646                           ; BSR set to: 0
 27647                           ;fat_write.c: 169: }
 27648                           ;fat_write.c: 173: possible_spaces++;
 27649  009A6A  0100               	movlb	0	; () banked
 27650  009A6C  4BC9               	infsnz	fatfs_find_free_dir_offset@possible_spaces& (0+255),f,b
 27651  009A6E  2BCA               	incf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),f,b
 27652                           
 27653                           ;fat_write.c: 174: }
 27654  009A70  D05C               	goto	l10327
 27655  009A72                     l10289:
 27656                           
 27657                           ;fat_write.c: 176: else
 27658                           ;fat_write.c: 177: {
 27659                           ;fat_write.c: 179: if (fs->currentsector.sector[recordoffset] == 0xE5)
 27660  009A72  C0AC  F0B8         	movff	fatfs_find_free_dir_offset@fs,??_fatfs_find_free_dir_offset
 27661  009A76  C0AD  F0B9         	movff	fatfs_find_free_dir_offset@fs+1,??_fatfs_find_free_dir_offset+1
 27662  009A7A  0100               	movlb	0	; () banked
 27663  009A7C  51C5               	movf	fatfs_find_free_dir_offset@recordoffset& (0+255),w,b
 27664  009A7E  27B8               	addwf	??_fatfs_find_free_dir_offset& (0+255),f,b
 27665  009A80  51C6               	movf	(fatfs_find_free_dir_offset@recordoffset+1)& (0+255),w,b
 27666  009A82  23B9               	addwfc	(??_fatfs_find_free_dir_offset+1)& (0+255),f,b
 27667  009A84  0E31               	movlw	49
 27668  009A86  25B8               	addwf	??_fatfs_find_free_dir_offset& (0+255),w,b
 27669  009A88  6ED9               	movwf	fsr2l,c
 27670  009A8A  0E00               	movlw	0
 27671  009A8C  21B9               	addwfc	(??_fatfs_find_free_dir_offset+1)& (0+255),w,b
 27672  009A8E  6EDA               	movwf	fsr2h,c
 27673  009A90  0EE5               	movlw	229
 27674  009A92  62DF               	cpfseq	indf2,c
 27675  009A94  D001               	goto	l10307
 27676  009A96  D011               	goto	L91
 27677  009A98                     l10307:
 27678                           
 27679                           ; BSR set to: 0
 27680                           ;fat_write.c: 199: else if (fs->currentsector.sector[recordoffset] == 0x00)
 27681  009A98  C0AC  F0B8         	movff	fatfs_find_free_dir_offset@fs,??_fatfs_find_free_dir_offset
 27682  009A9C  C0AD  F0B9         	movff	fatfs_find_free_dir_offset@fs+1,??_fatfs_find_free_dir_offset+1
 27683  009AA0  0100               	movlb	0	; () banked
 27684  009AA2  51C5               	movf	fatfs_find_free_dir_offset@recordoffset& (0+255),w,b
 27685  009AA4  27B8               	addwf	??_fatfs_find_free_dir_offset& (0+255),f,b
 27686  009AA6  51C6               	movf	(fatfs_find_free_dir_offset@recordoffset+1)& (0+255),w,b
 27687  009AA8  23B9               	addwfc	(??_fatfs_find_free_dir_offset+1)& (0+255),f,b
 27688  009AAA  0E31               	movlw	49
 27689  009AAC  25B8               	addwf	??_fatfs_find_free_dir_offset& (0+255),w,b
 27690  009AAE  6ED9               	movwf	fsr2l,c
 27691  009AB0  0E00               	movlw	0
 27692  009AB2  21B9               	addwfc	(??_fatfs_find_free_dir_offset+1)& (0+255),w,b
 27693  009AB4  6EDA               	movwf	fsr2h,c
 27694  009AB6  50DF               	movf	indf2,w,c
 27695  009AB8  E133               	bnz	l10325
 27696  009ABA                     L91:
 27697                           
 27698                           ; BSR set to: 0
 27699                           ;fat_write.c: 200: {
 27700                           ;fat_write.c: 202: if (possible_spaces == 0)
 27701  009ABA  0100               	movlb	0	; () banked
 27702  009ABC  51CA               	movf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),w,b
 27703  009ABE  11C9               	iorwf	fatfs_find_free_dir_offset@possible_spaces& (0+255),w,b
 27704  009AC0  E122               	bnz	l10317
 27705                           
 27706                           ; BSR set to: 0
 27707                           ;fat_write.c: 203: {
 27708                           ;fat_write.c: 205: *pSector = x-1;
 27709  009AC2  0EFF               	movlw	255
 27710  009AC4  25C7               	addwf	fatfs_find_free_dir_offset@x& (0+255),w,b
 27711  009AC6  6FB8               	movwf	??_fatfs_find_free_dir_offset& (0+255),b
 27712  009AC8  0EFF               	movlw	255
 27713  009ACA  21C8               	addwfc	(fatfs_find_free_dir_offset@x+1)& (0+255),w,b
 27714  009ACC  6FB9               	movwf	(??_fatfs_find_free_dir_offset+1)& (0+255),b
 27715  009ACE  6BBA               	clrf	(??_fatfs_find_free_dir_offset+2)& (0+255),b
 27716  009AD0  BFB9               	btfsc	(??_fatfs_find_free_dir_offset+1)& (0+255),7,b
 27717  009AD2  07BA               	decf	(??_fatfs_find_free_dir_offset+2)& (0+255),f,b
 27718  009AD4  51BA               	movf	(??_fatfs_find_free_dir_offset+2)& (0+255),w,b
 27719  009AD6  6FBB               	movwf	(??_fatfs_find_free_dir_offset+3)& (0+255),b
 27720  009AD8  C0B4  FFD9         	movff	fatfs_find_free_dir_offset@pSector,fsr2l
 27721  009ADC  C0B5  FFDA         	movff	fatfs_find_free_dir_offset@pSector+1,fsr2h
 27722  009AE0  C0B8  FFDE         	movff	??_fatfs_find_free_dir_offset,postinc2
 27723  009AE4  C0B9  FFDE         	movff	??_fatfs_find_free_dir_offset+1,postinc2
 27724  009AE8  C0BA  FFDE         	movff	??_fatfs_find_free_dir_offset+2,postinc2
 27725  009AEC  C0BB  FFDD         	movff	??_fatfs_find_free_dir_offset+3,postdec2
 27726  009AF0  06D9               	decf	fsr2l,f,c
 27727  009AF2  06D9               	decf	fsr2l,f,c
 27728                           
 27729                           ; BSR set to: 0
 27730                           ;fat_write.c: 206: *pOffset = item;
 27731  009AF4  C0B6  FFD9         	movff	fatfs_find_free_dir_offset@pOffset,fsr2l
 27732  009AF8  C0B7  FFDA         	movff	fatfs_find_free_dir_offset@pOffset+1,fsr2h
 27733  009AFC  C0CB  FFDF         	movff	fatfs_find_free_dir_offset@item,indf2
 27734                           
 27735                           ; BSR set to: 0
 27736                           ;fat_write.c: 207: start_recorded = 1;
 27737  009B00  6BBF               	clrf	(fatfs_find_free_dir_offset@start_recorded+1)& (0+255),b
 27738  009B02  0E01               	movlw	1
 27739  009B04  6FBE               	movwf	fatfs_find_free_dir_offset@start_recorded& (0+255),b
 27740  009B06                     l10317:
 27741                           
 27742                           ; BSR set to: 0
 27743                           ;fat_write.c: 208: }
 27744                           ;fat_write.c: 211: possible_spaces++;
 27745  009B06  0100               	movlb	0	; () banked
 27746  009B08  4BC9               	infsnz	fatfs_find_free_dir_offset@possible_spaces& (0+255),f,b
 27747  009B0A  2BCA               	incf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),f,b
 27748                           
 27749                           ; BSR set to: 0
 27750                           ;fat_write.c: 214: if (possible_spaces >= entryCount)
 27751  009B0C  51CA               	movf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),w,b
 27752  009B0E  0A80               	xorlw	128
 27753  009B10  6FB8               	movwf	??_fatfs_find_free_dir_offset& (0+255),b
 27754  009B12  51B2               	movf	fatfs_find_free_dir_offset@entryCount& (0+255),w,b
 27755  009B14  5DC9               	subwf	fatfs_find_free_dir_offset@possible_spaces& (0+255),w,b
 27756  009B16  51B3               	movf	(fatfs_find_free_dir_offset@entryCount+1)& (0+255),w,b
 27757  009B18  0A80               	xorlw	128
 27758  009B1A  59B8               	subwfb	??_fatfs_find_free_dir_offset& (0+255),w,b
 27759  009B1C  E306               	bnc	l10327
 27760  009B1E  D09F               	goto	l10365
 27761  009B20                     l10325:
 27762                           
 27763                           ; BSR set to: 0
 27764                           ;fat_write.c: 218: else
 27765                           ;fat_write.c: 219: {
 27766                           ;fat_write.c: 221: possible_spaces = 0;
 27767  009B20  0100               	movlb	0	; () banked
 27768  009B22  6BCA               	clrf	(fatfs_find_free_dir_offset@possible_spaces+1)& (0+255),b
 27769  009B24  6BC9               	clrf	fatfs_find_free_dir_offset@possible_spaces& (0+255),b
 27770                           
 27771                           ;fat_write.c: 222: start_recorded = 0;
 27772  009B26  6BBF               	clrf	(fatfs_find_free_dir_offset@start_recorded+1)& (0+255),b
 27773  009B28  6BBE               	clrf	fatfs_find_free_dir_offset@start_recorded& (0+255),b
 27774  009B2A                     l10327:
 27775                           
 27776                           ; BSR set to: 0
 27777  009B2A  0100               	movlb	0	; () banked
 27778  009B2C  2BCB               	incf	fatfs_find_free_dir_offset@item& (0+255),f,b
 27779                           
 27780                           ; BSR set to: 0
 27781  009B2E  0E0F               	movlw	15
 27782  009B30  65CB               	cpfsgt	fatfs_find_free_dir_offset@item& (0+255),b
 27783  009B32  D757               	goto	l10273
 27784  009B34  D72B               	goto	l10265
 27785  009B36                     l10331:
 27786                           
 27787                           ; BSR set to: 0
 27788                           ;fat_write.c: 228: else
 27789                           ;fat_write.c: 229: {
 27790                           ;fat_write.c: 230: uint32 newCluster;
 27791                           ;fat_write.c: 233: if (!fatfs_find_blank_cluster(fs, fs->rootdir_first_cluster, &newClus
      +                          ter))
 27792  009B36  C0AD  F047         	movff	fatfs_find_free_dir_offset@fs+1,fatfs_find_blank_cluster@fs+1
 27793  009B3A  C0AC  F046         	movff	fatfs_find_free_dir_offset@fs,fatfs_find_blank_cluster@fs
 27794  009B3E  EE20 F005          	lfsr	2,5
 27795  009B42  0100               	movlb	0	; () banked
 27796  009B44  51AC               	movf	fatfs_find_free_dir_offset@fs& (0+255),w,b
 27797  009B46  26D9               	addwf	fsr2l,f,c
 27798  009B48  51AD               	movf	(fatfs_find_free_dir_offset@fs+1)& (0+255),w,b
 27799  009B4A  22DA               	addwfc	fsr2h,f,c
 27800  009B4C  CFDE F048          	movff	postinc2,fatfs_find_blank_cluster@start_cluster
 27801  009B50  CFDE F049          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+1
 27802  009B54  CFDE F04A          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+2
 27803  009B58  CFDE F04B          	movff	postinc2,fatfs_find_blank_cluster@start_cluster+3
 27804  009B5C  0E00               	movlw	high fatfs_find_free_dir_offset@newCluster
 27805  009B5E  6E4D               	movwf	fatfs_find_blank_cluster@free_cluster+1,c
 27806  009B60  0EC1               	movlw	low fatfs_find_free_dir_offset@newCluster
 27807  009B62  6E4C               	movwf	fatfs_find_blank_cluster@free_cluster,c
 27808  009B64  EC26  F05A         	call	_fatfs_find_blank_cluster	;wreg free
 27809  009B68  5047               	movf	?_fatfs_find_blank_cluster+1,w,c
 27810  009B6A  1046               	iorwf	?_fatfs_find_blank_cluster,w,c
 27811  009B6C  E101 D70A          	bz	L90
 27812                           
 27813                           ;fat_write.c: 237: if (!fatfs_fat_add_cluster_to_chain(fs, dirCluster, newCluster))
 27814                           
 27815                           ; BSR set to: 0
 27816                           
 27817                           ; BSR set to: 0
 27818                           
 27819                           ;fat_write.c: 234: return 0;
 27820  009B70  C0AD  F081         	movff	fatfs_find_free_dir_offset@fs+1,fatfs_fat_add_cluster_to_chain@fs+1
 27821  009B74  0100               	movlb	0	; () banked
 27822  009B76  C0AC  F080         	movff	fatfs_find_free_dir_offset@fs,fatfs_fat_add_cluster_to_chain@fs
 27823  009B7A  C0AE  F082         	movff	fatfs_find_free_dir_offset@dirCluster,fatfs_fat_add_cluster_to_chain@start_cluste
      +                          r
 27824  009B7E  C0AF  F083         	movff	fatfs_find_free_dir_offset@dirCluster+1,fatfs_fat_add_cluster_to_chain@start_clus
      +                          ter+1
 27825  009B82  C0B0  F084         	movff	fatfs_find_free_dir_offset@dirCluster+2,fatfs_fat_add_cluster_to_chain@start_clus
      +                          ter+2
 27826  009B86  C0B1  F085         	movff	fatfs_find_free_dir_offset@dirCluster+3,fatfs_fat_add_cluster_to_chain@start_clus
      +                          ter+3
 27827  009B8A  C0C1  F086         	movff	fatfs_find_free_dir_offset@newCluster,fatfs_fat_add_cluster_to_chain@newEntry
 27828  009B8E  C0C2  F087         	movff	fatfs_find_free_dir_offset@newCluster+1,fatfs_fat_add_cluster_to_chain@newEntry+1
 27829  009B92  C0C3  F088         	movff	fatfs_find_free_dir_offset@newCluster+2,fatfs_fat_add_cluster_to_chain@newEntry+2
 27830  009B96  C0C4  F089         	movff	fatfs_find_free_dir_offset@newCluster+3,fatfs_fat_add_cluster_to_chain@newEntry+3
 27831  009B9A  ECD0  F02E         	call	_fatfs_fat_add_cluster_to_chain	;wreg free
 27832  009B9E  0100               	movlb	0	; () banked
 27833  009BA0  5181               	movf	(?_fatfs_fat_add_cluster_to_chain+1)& (0+255),w,b
 27834  009BA2  1180               	iorwf	?_fatfs_fat_add_cluster_to_chain& (0+255),w,b
 27835  009BA4  E101 D6EE          	bz	L90
 27836                           
 27837                           ; BSR set to: 0
 27838                           ;fat_write.c: 241: memset(fs->currentsector.sector, 0x00, 512);
 27839                           
 27840                           ; BSR set to: 0
 27841                           
 27842                           ; BSR set to: 0
 27843                           
 27844                           ; BSR set to: 0
 27845                           ;fat_write.c: 238: return 0;
 27846  009BA8  0E31               	movlw	49
 27847  009BAA  25AC               	addwf	fatfs_find_free_dir_offset@fs& (0+255),w,b
 27848  009BAC  6E01               	movwf	memset@p1,c
 27849  009BAE  0E00               	movlw	0
 27850  009BB0  21AD               	addwfc	(fatfs_find_free_dir_offset@fs+1)& (0+255),w,b
 27851  009BB2  6E02               	movwf	memset@p1+1,c
 27852  009BB4  6A04               	clrf	memset@c+1,c
 27853  009BB6  6A03               	clrf	memset@c,c
 27854  009BB8  0E02               	movlw	2
 27855  009BBA  6E06               	movwf	memset@n+1,c
 27856  009BBC  0E00               	movlw	0
 27857  009BBE  6A05               	clrf	memset@n,c
 27858  009BC0  EC24  F020         	call	_memset	;wreg free
 27859                           
 27860                           ;fat_write.c: 242: for (i=0;i<fs->sectors_per_cluster;i++)
 27861  009BC4  0100               	movlb	0	; () banked
 27862  009BC6  6BC0               	clrf	fatfs_find_free_dir_offset@i& (0+255),b
 27863  009BC8  D01D               	goto	l10355
 27864  009BCA                     l10347:
 27865                           
 27866                           ; BSR set to: 0
 27867                           ;fat_write.c: 243: {
 27868                           ;fat_write.c: 244: if (!fatfs_write_sector(fs, newCluster, i, 0))
 27869  009BCA  C0AD  F021         	movff	fatfs_find_free_dir_offset@fs+1,fatfs_write_sector@fs+1
 27870  009BCE  C0AC  F020         	movff	fatfs_find_free_dir_offset@fs,fatfs_write_sector@fs
 27871  009BD2  C0C1  F022         	movff	fatfs_find_free_dir_offset@newCluster,fatfs_write_sector@cluster
 27872  009BD6  C0C2  F023         	movff	fatfs_find_free_dir_offset@newCluster+1,fatfs_write_sector@cluster+1
 27873  009BDA  C0C3  F024         	movff	fatfs_find_free_dir_offset@newCluster+2,fatfs_write_sector@cluster+2
 27874  009BDE  C0C4  F025         	movff	fatfs_find_free_dir_offset@newCluster+3,fatfs_write_sector@cluster+3
 27875  009BE2  0100               	movlb	0	; () banked
 27876  009BE4  51C0               	movf	fatfs_find_free_dir_offset@i& (0+255),w,b
 27877  009BE6  6E26               	movwf	fatfs_write_sector@sector,c
 27878  009BE8  6A27               	clrf	fatfs_write_sector@sector+1,c
 27879  009BEA  6A28               	clrf	fatfs_write_sector@sector+2,c
 27880  009BEC  6A29               	clrf	fatfs_write_sector@sector+3,c
 27881  009BEE  0E00               	movlw	0
 27882  009BF0  6A2B               	clrf	fatfs_write_sector@target+1,c
 27883  009BF2  6A2A               	clrf	fatfs_write_sector@target,c
 27884  009BF4  ECBB  F04F         	call	_fatfs_write_sector	;wreg free
 27885  009BF8  5021               	movf	?_fatfs_write_sector+1,w,c
 27886  009BFA  1020               	iorwf	?_fatfs_write_sector,w,c
 27887  009BFC  E101 D6C2          	bz	L90
 27888                           
 27889                           ; BSR set to: 0
 27890                           
 27891                           ; BSR set to: 0
 27892                           
 27893                           ;fat_write.c: 245: return 0;
 27894  009C00  0100               	movlb	0	; () banked
 27895  009C02  2BC0               	incf	fatfs_find_free_dir_offset@i& (0+255),f,b
 27896  009C04                     l10355:
 27897                           
 27898                           ; BSR set to: 0
 27899  009C04  C0AC  FFD9         	movff	fatfs_find_free_dir_offset@fs,fsr2l
 27900  009C08  C0AD  FFDA         	movff	fatfs_find_free_dir_offset@fs+1,fsr2h
 27901  009C0C  50DF               	movf	indf2,w,c
 27902  009C0E  0100               	movlb	0	; () banked
 27903  009C10  5DC0               	subwf	fatfs_find_free_dir_offset@i& (0+255),w,b
 27904  009C12  E3DB               	bnc	l10347
 27905                           
 27906                           ; BSR set to: 0
 27907                           ;fat_write.c: 246: }
 27908                           ;fat_write.c: 249: if (!start_recorded)
 27909                           
 27910                           ; BSR set to: 0
 27911  009C14  51BF               	movf	(fatfs_find_free_dir_offset@start_recorded+1)& (0+255),w,b
 27912  009C16  11BE               	iorwf	fatfs_find_free_dir_offset@start_recorded& (0+255),w,b
 27913  009C18  E122               	bnz	l10365
 27914                           
 27915                           ; BSR set to: 0
 27916                           ;fat_write.c: 250: {
 27917                           ;fat_write.c: 252: *pSector = (x-1);
 27918  009C1A  0EFF               	movlw	255
 27919  009C1C  25C7               	addwf	fatfs_find_free_dir_offset@x& (0+255),w,b
 27920  009C1E  6FB8               	movwf	??_fatfs_find_free_dir_offset& (0+255),b
 27921  009C20  0EFF               	movlw	255
 27922  009C22  21C8               	addwfc	(fatfs_find_free_dir_offset@x+1)& (0+255),w,b
 27923  009C24  6FB9               	movwf	(??_fatfs_find_free_dir_offset+1)& (0+255),b
 27924  009C26  6BBA               	clrf	(??_fatfs_find_free_dir_offset+2)& (0+255),b
 27925  009C28  BFB9               	btfsc	(??_fatfs_find_free_dir_offset+1)& (0+255),7,b
 27926  009C2A  07BA               	decf	(??_fatfs_find_free_dir_offset+2)& (0+255),f,b
 27927  009C2C  51BA               	movf	(??_fatfs_find_free_dir_offset+2)& (0+255),w,b
 27928  009C2E  6FBB               	movwf	(??_fatfs_find_free_dir_offset+3)& (0+255),b
 27929  009C30  C0B4  FFD9         	movff	fatfs_find_free_dir_offset@pSector,fsr2l
 27930  009C34  C0B5  FFDA         	movff	fatfs_find_free_dir_offset@pSector+1,fsr2h
 27931  009C38  C0B8  FFDE         	movff	??_fatfs_find_free_dir_offset,postinc2
 27932  009C3C  C0B9  FFDE         	movff	??_fatfs_find_free_dir_offset+1,postinc2
 27933  009C40  C0BA  FFDE         	movff	??_fatfs_find_free_dir_offset+2,postinc2
 27934  009C44  C0BB  FFDD         	movff	??_fatfs_find_free_dir_offset+3,postdec2
 27935  009C48  06D9               	decf	fsr2l,f,c
 27936  009C4A  06D9               	decf	fsr2l,f,c
 27937                           
 27938                           ; BSR set to: 0
 27939                           ;fat_write.c: 253: *pOffset = 0;
 27940  009C4C  C0B6  FFD9         	movff	fatfs_find_free_dir_offset@pOffset,fsr2l
 27941  009C50  C0B7  FFDA         	movff	fatfs_find_free_dir_offset@pOffset+1,fsr2h
 27942  009C54  0E00               	movlw	0
 27943  009C56  6EDF               	movwf	indf2,c
 27944                           
 27945                           ; BSR set to: 0
 27946                           ;fat_write.c: 254: start_recorded = 1;
 27947  009C58  6FBF               	movwf	(fatfs_find_free_dir_offset@start_recorded+1)& (0+255),b
 27948  009C5A  0E01               	movlw	1
 27949  009C5C  6FBE               	movwf	fatfs_find_free_dir_offset@start_recorded& (0+255),b
 27950  009C5E                     l10365:
 27951                           
 27952                           ; BSR set to: 0
 27953                           ;fat_write.c: 255: }
 27954                           ;fat_write.c: 257: return 1;
 27955  009C5E  0E00               	movlw	0
 27956  009C60  0100               	movlb	0	; () banked
 27957  009C62  6FAD               	movwf	(?_fatfs_find_free_dir_offset+1)& (0+255),b
 27958  009C64  0E01               	movlw	1
 27959  009C66                     L89:
 27960  009C66  0100               	movlb	0	; () banked
 27961  009C68  6FAC               	movwf	?_fatfs_find_free_dir_offset& (0+255),b
 27962                           
 27963                           ; BSR set to: 0
 27964                           
 27965                           ; BSR set to: 0
 27966                           
 27967                           ; BSR set to: 0
 27968                           ;fat_write.c: 258: }
 27969                           ;fat_write.c: 259: }
 27970                           ;fat_write.c: 261: return 0;
 27971                           
 27972                           ; BSR set to: 0
 27973                           
 27974                           ; BSR set to: 0
 27975                           
 27976                           ; BSR set to: 0
 27977                           
 27978                           ; BSR set to: 0
 27979  009C6A  0012               	return	
 27980  009C6C                     __end_of_fatfs_find_free_dir_offset:
 27981                           	opt stack 0
 27982                           tosu	equ	0xFFF
 27983                           tosh	equ	0xFFE
 27984                           tosl	equ	0xFFD
 27985                           pclath	equ	0xFFA
 27986                           tblptru	equ	0xFF8
 27987                           tblptrh	equ	0xFF7
 27988                           tblptrl	equ	0xFF6
 27989                           tablat	equ	0xFF5
 27990                           prodh	equ	0xFF4
 27991                           prodl	equ	0xFF3
 27992                           indf0	equ	0xFEF
 27993                           postinc0	equ	0xFEE
 27994                           fsr0h	equ	0xFEA
 27995                           fsr0l	equ	0xFE9
 27996                           wreg	equ	0xFE8
 27997                           indf1	equ	0xFE7
 27998                           postinc1	equ	0xFE6
 27999                           postdec1	equ	0xFE5
 28000                           fsr1h	equ	0xFE2
 28001                           fsr1l	equ	0xFE1
 28002                           indf2	equ	0xFDF
 28003                           postinc2	equ	0xFDE
 28004                           postdec2	equ	0xFDD
 28005                           fsr2h	equ	0xFDA
 28006                           fsr2l	equ	0xFD9
 28007                           status	equ	0xFD8
 28008                           
 28009 ;; *************** function _fatfs_write_sector *****************
 28010 ;; Defined at:
 28011 ;;		line 328 in file "fat_access.c"
 28012 ;; Parameters:    Size  Location     Type
 28013 ;;  fs              2   31[COMRAM] PTR struct fatfs
 28014 ;;		 -> _fs(1095), 
 28015 ;;  cluster         4   33[COMRAM] unsigned long 
 28016 ;;  sector          4   37[COMRAM] unsigned long 
 28017 ;;  target          2   41[COMRAM] PTR unsigned char 
 28018 ;;		 -> RAM(3967), NULL(0), 
 28019 ;; Auto vars:     Size  Location     Type
 28020 ;;  lba             4   55[COMRAM] unsigned long 
 28021 ;;  lba             4   59[COMRAM] unsigned long 
 28022 ;; Return value:  Size  Location     Type
 28023 ;;                  2   31[COMRAM] int 
 28024 ;; Registers used:
 28025 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28026 ;; Tracked objects:
 28027 ;;		On entry : 0/0
 28028 ;;		On exit  : 0/0
 28029 ;;		Unchanged: 0/0
 28030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28031 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28032 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28033 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28034 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28035 ;;Total ram usage:       32 bytes
 28036 ;; Hardware stack levels used:    1
 28037 ;; Hardware stack levels required when called:    3
 28038 ;; This function calls:
 28039 ;;		_fatfs_lba_of_cluster
 28040 ;;		_media_write
 28041 ;; This function is called by:
 28042 ;;		__create_directory
 28043 ;;		_fatfs_find_free_dir_offset
 28044 ;; This function uses a non-reentrant model
 28045 ;;
 28046                           
 28047                           	psect	text81
 28048  009F76                     __ptext81:
 28049                           	opt stack 0
 28050  009F76                     _fatfs_write_sector:
 28051                           	opt stack 20
 28052                           
 28053                           ;fat_access.c: 331: if (!fs->disk_io.write_media)
 28054                           
 28055                           ; BSR set to: 0
 28056                           ;incstack = 0
 28057  009F76  EE20 F02B          	lfsr	2,43
 28058  009F7A  5020               	movf	fatfs_write_sector@fs,w,c
 28059  009F7C  26D9               	addwf	fsr2l,f,c
 28060  009F7E  5021               	movf	fatfs_write_sector@fs+1,w,c
 28061  009F80  22DA               	addwfc	fsr2h,f,c
 28062  009F82  50DE               	movf	postinc2,w,c
 28063  009F84  10DD               	iorwf	postdec2,w,c
 28064  009F86  E05B               	bz	l9105
 28065                           
 28066                           ;fat_access.c: 335: if (fs->fat_type == FAT_TYPE_16 && cluster == 0)
 28067                           
 28068                           ;fat_access.c: 332: return 0;
 28069  009F88  EE20 F028          	lfsr	2,40
 28070  009F8C  5020               	movf	fatfs_write_sector@fs,w,c
 28071  009F8E  26D9               	addwf	fsr2l,f,c
 28072  009F90  5021               	movf	fatfs_write_sector@fs+1,w,c
 28073  009F92  22DA               	addwfc	fsr2h,f,c
 28074  009F94  50DF               	movf	indf2,w,c
 28075  009F96  E001 D0C0          	bnz	l9123
 28076  009F9A  5025               	movf	fatfs_write_sector@cluster+3,w,c
 28077  009F9C  1022               	iorwf	fatfs_write_sector@cluster,w,c
 28078  009F9E  1023               	iorwf	fatfs_write_sector@cluster+1,w,c
 28079  009FA0  1024               	iorwf	fatfs_write_sector@cluster+2,w,c
 28080  009FA2  E001 D0BA          	bnz	l9123
 28081                           
 28082                           ;fat_access.c: 336: {
 28083                           ;fat_access.c: 337: uint32 lba;
 28084                           ;fat_access.c: 340: if (sector < fs->rootdir_sectors)
 28085  009FA6  EE20 F00D          	lfsr	2,13
 28086  009FAA  5020               	movf	fatfs_write_sector@fs,w,c
 28087  009FAC  26D9               	addwf	fsr2l,f,c
 28088  009FAE  5021               	movf	fatfs_write_sector@fs+1,w,c
 28089  009FB0  22DA               	addwfc	fsr2h,f,c
 28090  009FB2  CFDE F02C          	movff	postinc2,??_fatfs_write_sector
 28091  009FB6  CFDE F02D          	movff	postinc2,??_fatfs_write_sector+1
 28092  009FBA  CFDE F02E          	movff	postinc2,??_fatfs_write_sector+2
 28093  009FBE  CFDE F02F          	movff	postinc2,??_fatfs_write_sector+3
 28094  009FC2  502C               	movf	??_fatfs_write_sector,w,c
 28095  009FC4  5C26               	subwf	fatfs_write_sector@sector,w,c
 28096  009FC6  502D               	movf	??_fatfs_write_sector+1,w,c
 28097  009FC8  5827               	subwfb	fatfs_write_sector@sector+1,w,c
 28098  009FCA  502E               	movf	??_fatfs_write_sector+2,w,c
 28099  009FCC  5828               	subwfb	fatfs_write_sector@sector+2,w,c
 28100  009FCE  502F               	movf	??_fatfs_write_sector+3,w,c
 28101  009FD0  5829               	subwfb	fatfs_write_sector@sector+3,w,c
 28102  009FD2  E235               	bc	l9105
 28103                           
 28104                           ;fat_access.c: 341: lba = fs->lba_begin + fs->rootdir_first_sector + sector;
 28105  009FD4  EE20 F009          	lfsr	2,9
 28106  009FD8  5020               	movf	fatfs_write_sector@fs,w,c
 28107  009FDA  26D9               	addwf	fsr2l,f,c
 28108  009FDC  5021               	movf	fatfs_write_sector@fs+1,w,c
 28109  009FDE  22DA               	addwfc	fsr2h,f,c
 28110  009FE0  CFDE F02C          	movff	postinc2,??_fatfs_write_sector
 28111  009FE4  CFDE F02D          	movff	postinc2,??_fatfs_write_sector+1
 28112  009FE8  CFDE F02E          	movff	postinc2,??_fatfs_write_sector+2
 28113  009FEC  CFDE F02F          	movff	postinc2,??_fatfs_write_sector+3
 28114  009FF0  EE20 F017          	lfsr	2,23
 28115  009FF4  5020               	movf	fatfs_write_sector@fs,w,c
 28116  009FF6  26D9               	addwf	fsr2l,f,c
 28117  009FF8  5021               	movf	fatfs_write_sector@fs+1,w,c
 28118  009FFA  22DA               	addwfc	fsr2h,f,c
 28119  009FFC  CFDE F030          	movff	postinc2,??_fatfs_write_sector+4
 28120  00A000  CFDE F031          	movff	postinc2,??_fatfs_write_sector+5
 28121  00A004  CFDE F032          	movff	postinc2,??_fatfs_write_sector+6
 28122  00A008  CFDE F033          	movff	postinc2,??_fatfs_write_sector+7
 28123  00A00C  502C               	movf	??_fatfs_write_sector,w,c
 28124  00A00E  2430               	addwf	??_fatfs_write_sector+4,w,c
 28125  00A010  6E34               	movwf	(??_fatfs_write_sector+8)& (0+255),c
 28126  00A012  502D               	movf	??_fatfs_write_sector+1,w,c
 28127  00A014  2031               	addwfc	??_fatfs_write_sector+5,w,c
 28128  00A016  6E35               	movwf	(??_fatfs_write_sector+9)& (0+255),c
 28129  00A018  502E               	movf	??_fatfs_write_sector+2,w,c
 28130  00A01A  2032               	addwfc	??_fatfs_write_sector+6,w,c
 28131  00A01C  6E36               	movwf	(??_fatfs_write_sector+10)& (0+255),c
 28132  00A01E  502F               	movf	??_fatfs_write_sector+3,w,c
 28133  00A020  2033               	addwfc	??_fatfs_write_sector+7,w,c
 28134  00A022  6E37               	movwf	(??_fatfs_write_sector+11)& (0+255),c
 28135  00A024  5026               	movf	fatfs_write_sector@sector,w,c
 28136  00A026  2434               	addwf	??_fatfs_write_sector+8,w,c
 28137  00A028  6E3C               	movwf	fatfs_write_sector@lba,c
 28138  00A02A  5027               	movf	fatfs_write_sector@sector+1,w,c
 28139  00A02C  2035               	addwfc	??_fatfs_write_sector+9,w,c
 28140  00A02E  6E3D               	movwf	fatfs_write_sector@lba+1,c
 28141  00A030  5028               	movf	fatfs_write_sector@sector+2,w,c
 28142  00A032  2036               	addwfc	??_fatfs_write_sector+10,w,c
 28143  00A034  6E3E               	movwf	fatfs_write_sector@lba+2,c
 28144  00A036  5029               	movf	fatfs_write_sector@sector+3,w,c
 28145  00A038  2037               	addwfc	??_fatfs_write_sector+11,w,c
 28146  00A03A  6E3F               	movwf	fatfs_write_sector@lba+3,c
 28147  00A03C  D004               	goto	l9109
 28148  00A03E                     l9105:
 28149                           
 28150                           ;fat_access.c: 342: else
 28151                           ;fat_access.c: 343: return 0;
 28152  00A03E  0E00               	movlw	0
 28153  00A040  6E21               	movwf	?_fatfs_write_sector+1,c
 28154  00A042  6E20               	movwf	?_fatfs_write_sector,c
 28155  00A044  D121               	goto	l113
 28156  00A046                     l9109:
 28157                           
 28158                           ;fat_access.c: 346: if (target)
 28159  00A046  502B               	movf	fatfs_write_sector@target+1,w,c
 28160  00A048  102A               	iorwf	fatfs_write_sector@target,w,c
 28161  00A04A  E025               	bz	l9117
 28162                           
 28163                           ;fat_access.c: 347: {
 28164                           ;fat_access.c: 349: return fs->disk_io.write_media(lba, target, 1);
 28165  00A04C  C03C  F009         	movff	fatfs_write_sector@lba,media_write@sector
 28166  00A050  C03D  F00A         	movff	fatfs_write_sector@lba+1,media_write@sector+1
 28167  00A054  C03E  F00B         	movff	fatfs_write_sector@lba+2,media_write@sector+2
 28168  00A058  C03F  F00C         	movff	fatfs_write_sector@lba+3,media_write@sector+3
 28169  00A05C  0E20               	movlw	32
 28170  00A05E  6E0F               	movwf	media_write@buffer+2,c
 28171  00A060  C02B  F00E         	movff	fatfs_write_sector@target+1,media_write@buffer+1
 28172  00A064  C02A  F00D         	movff	fatfs_write_sector@target,media_write@buffer
 28173  00A068  0E01               	movlw	1
 28174  00A06A  6E10               	movwf	media_write@sector_count,c
 28175  00A06C  6A11               	clrf	media_write@sector_count+1,c
 28176  00A06E  6A12               	clrf	media_write@sector_count+2,c
 28177  00A070  6A13               	clrf	media_write@sector_count+3,c
 28178  00A072  EE20 F02B          	lfsr	2,43
 28179  00A076  5020               	movf	fatfs_write_sector@fs,w,c
 28180  00A078  26D9               	addwf	fsr2l,f,c
 28181  00A07A  5021               	movf	fatfs_write_sector@fs+1,w,c
 28182  00A07C  22DA               	addwfc	fsr2h,f,c
 28183  00A07E  CFDE F02C          	movff	postinc2,??_fatfs_write_sector
 28184  00A082  CFDD F02D          	movff	postdec2,??_fatfs_write_sector+1
 28185  00A086  D801               	call	u9738
 28186  00A088  D0FB               	goto	u9779
 28187  00A08A                     u9738:
 28188  00A08A  0005               	push	
 28189  00A08C  6EFA               	movwf	pclath,c
 28190  00A08E  502C               	movf	??_fatfs_write_sector,w,c
 28191  00A090  6EFD               	movwf	tosl,c
 28192  00A092  502D               	movf	??_fatfs_write_sector+1,w,c
 28193  00A094  D03E               	goto	L92
 28194  00A096                     l9117:
 28195                           
 28196                           ;fat_access.c: 351: else
 28197                           ;fat_access.c: 352: {
 28198                           ;fat_access.c: 354: fs->currentsector.address = lba;
 28199  00A096  EE22 F031          	lfsr	2,561
 28200  00A09A  5020               	movf	fatfs_write_sector@fs,w,c
 28201  00A09C  26D9               	addwf	fsr2l,f,c
 28202  00A09E  5021               	movf	fatfs_write_sector@fs+1,w,c
 28203  00A0A0  22DA               	addwfc	fsr2h,f,c
 28204  00A0A2  C03C  FFDE         	movff	fatfs_write_sector@lba,postinc2
 28205  00A0A6  C03D  FFDE         	movff	fatfs_write_sector@lba+1,postinc2
 28206  00A0AA  C03E  FFDE         	movff	fatfs_write_sector@lba+2,postinc2
 28207  00A0AE  C03F  FFDE         	movff	fatfs_write_sector@lba+3,postinc2
 28208                           
 28209                           ;fat_access.c: 357: return fs->disk_io.write_media(fs->currentsector.address, fs->curren
      +                          tsector.sector, 1);
 28210  00A0B2  EE22 F031          	lfsr	2,561
 28211  00A0B6  5020               	movf	fatfs_write_sector@fs,w,c
 28212  00A0B8  26D9               	addwf	fsr2l,f,c
 28213  00A0BA  5021               	movf	fatfs_write_sector@fs+1,w,c
 28214  00A0BC  22DA               	addwfc	fsr2h,f,c
 28215  00A0BE  CFDE F009          	movff	postinc2,media_write@sector
 28216  00A0C2  CFDE F00A          	movff	postinc2,media_write@sector+1
 28217  00A0C6  CFDE F00B          	movff	postinc2,media_write@sector+2
 28218  00A0CA  CFDE F00C          	movff	postinc2,media_write@sector+3
 28219  00A0CE  0E31               	movlw	49
 28220  00A0D0  2420               	addwf	fatfs_write_sector@fs,w,c
 28221  00A0D2  6E2C               	movwf	??_fatfs_write_sector& (0+255),c
 28222  00A0D4  0E00               	movlw	0
 28223  00A0D6  2021               	addwfc	fatfs_write_sector@fs+1,w,c
 28224  00A0D8  6E2D               	movwf	(??_fatfs_write_sector+1)& (0+255),c
 28225  00A0DA  0E20               	movlw	32
 28226  00A0DC  6E0F               	movwf	media_write@buffer+2,c
 28227  00A0DE  C02D  F00E         	movff	??_fatfs_write_sector+1,media_write@buffer+1
 28228  00A0E2  C02C  F00D         	movff	??_fatfs_write_sector,media_write@buffer
 28229  00A0E6  0E01               	movlw	1
 28230  00A0E8  6E10               	movwf	media_write@sector_count,c
 28231  00A0EA  6A11               	clrf	media_write@sector_count+1,c
 28232  00A0EC  6A12               	clrf	media_write@sector_count+2,c
 28233  00A0EE  6A13               	clrf	media_write@sector_count+3,c
 28234  00A0F0  EE20 F02B          	lfsr	2,43
 28235  00A0F4  5020               	movf	fatfs_write_sector@fs,w,c
 28236  00A0F6  26D9               	addwf	fsr2l,f,c
 28237  00A0F8  5021               	movf	fatfs_write_sector@fs+1,w,c
 28238  00A0FA  22DA               	addwfc	fsr2h,f,c
 28239  00A0FC  CFDE F02E          	movff	postinc2,??_fatfs_write_sector+2
 28240  00A100  CFDD F02F          	movff	postdec2,??_fatfs_write_sector+3
 28241  00A104  D801               	call	u9748
 28242  00A106  D0BC               	goto	u9779
 28243  00A108                     u9748:
 28244  00A108  0005               	push	
 28245  00A10A  6EFA               	movwf	pclath,c
 28246  00A10C  502E               	movf	??_fatfs_write_sector+2,w,c
 28247  00A10E  6EFD               	movwf	tosl,c
 28248  00A110  502F               	movf	??_fatfs_write_sector+3,w,c
 28249  00A112                     L92:
 28250  00A112  6EFE               	movwf	tosh,c
 28251  00A114  6AFF               	clrf	tosu,c
 28252  00A116  50FA               	movf	pclath,w,c
 28253  00A118  0012               	return		;indir
 28254  00A11A                     l9123:
 28255                           
 28256                           ;fat_access.c: 361: else
 28257                           ;fat_access.c: 362: {
 28258                           ;fat_access.c: 364: if (target)
 28259  00A11A  502B               	movf	fatfs_write_sector@target+1,w,c
 28260  00A11C  102A               	iorwf	fatfs_write_sector@target,w,c
 28261  00A11E  E04A               	bz	l9133
 28262                           
 28263                           ;fat_access.c: 365: {
 28264                           ;fat_access.c: 367: uint32 lba = fatfs_lba_of_cluster(fs, cluster) + sector;
 28265  00A120  C021  F002         	movff	fatfs_write_sector@fs+1,fatfs_lba_of_cluster@fs+1
 28266  00A124  C020  F001         	movff	fatfs_write_sector@fs,fatfs_lba_of_cluster@fs
 28267  00A128  C022  F003         	movff	fatfs_write_sector@cluster,fatfs_lba_of_cluster@Cluster_Number
 28268  00A12C  C023  F004         	movff	fatfs_write_sector@cluster+1,fatfs_lba_of_cluster@Cluster_Number+1
 28269  00A130  C024  F005         	movff	fatfs_write_sector@cluster+2,fatfs_lba_of_cluster@Cluster_Number+2
 28270  00A134  C025  F006         	movff	fatfs_write_sector@cluster+3,fatfs_lba_of_cluster@Cluster_Number+3
 28271  00A138  EC4C  F03F         	call	_fatfs_lba_of_cluster	;wreg free
 28272  00A13C  C001  F02C         	movff	?_fatfs_lba_of_cluster,??_fatfs_write_sector
 28273  00A140  C002  F02D         	movff	?_fatfs_lba_of_cluster+1,??_fatfs_write_sector+1
 28274  00A144  C003  F02E         	movff	?_fatfs_lba_of_cluster+2,??_fatfs_write_sector+2
 28275  00A148  C004  F02F         	movff	?_fatfs_lba_of_cluster+3,??_fatfs_write_sector+3
 28276  00A14C  5026               	movf	fatfs_write_sector@sector,w,c
 28277  00A14E  242C               	addwf	??_fatfs_write_sector,w,c
 28278  00A150  6E38               	movwf	fatfs_write_sector@lba_440,c
 28279  00A152  5027               	movf	fatfs_write_sector@sector+1,w,c
 28280  00A154  202D               	addwfc	??_fatfs_write_sector+1,w,c
 28281  00A156  6E39               	movwf	fatfs_write_sector@lba_440+1,c
 28282  00A158  5028               	movf	fatfs_write_sector@sector+2,w,c
 28283  00A15A  202E               	addwfc	??_fatfs_write_sector+2,w,c
 28284  00A15C  6E3A               	movwf	fatfs_write_sector@lba_440+2,c
 28285  00A15E  5029               	movf	fatfs_write_sector@sector+3,w,c
 28286  00A160  202F               	addwfc	??_fatfs_write_sector+3,w,c
 28287  00A162  6E3B               	movwf	fatfs_write_sector@lba_440+3,c
 28288                           
 28289                           ;fat_access.c: 370: return fs->disk_io.write_media(lba, target, 1);
 28290  00A164  C038  F009         	movff	fatfs_write_sector@lba_440,media_write@sector
 28291  00A168  C039  F00A         	movff	fatfs_write_sector@lba_440+1,media_write@sector+1
 28292  00A16C  C03A  F00B         	movff	fatfs_write_sector@lba_440+2,media_write@sector+2
 28293  00A170  C03B  F00C         	movff	fatfs_write_sector@lba_440+3,media_write@sector+3
 28294  00A174  0E20               	movlw	32
 28295  00A176  6E0F               	movwf	media_write@buffer+2,c
 28296  00A178  C02B  F00E         	movff	fatfs_write_sector@target+1,media_write@buffer+1
 28297  00A17C  C02A  F00D         	movff	fatfs_write_sector@target,media_write@buffer
 28298  00A180  0E01               	movlw	1
 28299  00A182  6E10               	movwf	media_write@sector_count,c
 28300  00A184  6A11               	clrf	media_write@sector_count+1,c
 28301  00A186  6A12               	clrf	media_write@sector_count+2,c
 28302  00A188  6A13               	clrf	media_write@sector_count+3,c
 28303  00A18A  EE20 F02B          	lfsr	2,43
 28304  00A18E  5020               	movf	fatfs_write_sector@fs,w,c
 28305  00A190  26D9               	addwf	fsr2l,f,c
 28306  00A192  5021               	movf	fatfs_write_sector@fs+1,w,c
 28307  00A194  22DA               	addwfc	fsr2h,f,c
 28308  00A196  CFDE F02C          	movff	postinc2,??_fatfs_write_sector
 28309  00A19A  CFDD F02D          	movff	postdec2,??_fatfs_write_sector+1
 28310  00A19E  D801               	call	u9768
 28311  00A1A0  D06F               	goto	u9779
 28312  00A1A2                     u9768:
 28313  00A1A2  0005               	push	
 28314  00A1A4  6EFA               	movwf	pclath,c
 28315  00A1A6  502C               	movf	??_fatfs_write_sector,w,c
 28316  00A1A8  6EFD               	movwf	tosl,c
 28317  00A1AA  502D               	movf	??_fatfs_write_sector+1,w,c
 28318  00A1AC  6EFE               	movwf	tosh,c
 28319  00A1AE  6AFF               	clrf	tosu,c
 28320  00A1B0  50FA               	movf	pclath,w,c
 28321  00A1B2  0012               	return		;indir
 28322  00A1B4                     l9133:
 28323                           
 28324                           ;fat_access.c: 372: else
 28325                           ;fat_access.c: 373: {
 28326                           ;fat_access.c: 375: fs->currentsector.address = fatfs_lba_of_cluster(fs, cluster)+sector
      +                          ;
 28327  00A1B4  C021  F002         	movff	fatfs_write_sector@fs+1,fatfs_lba_of_cluster@fs+1
 28328  00A1B8  C020  F001         	movff	fatfs_write_sector@fs,fatfs_lba_of_cluster@fs
 28329  00A1BC  C022  F003         	movff	fatfs_write_sector@cluster,fatfs_lba_of_cluster@Cluster_Number
 28330  00A1C0  C023  F004         	movff	fatfs_write_sector@cluster+1,fatfs_lba_of_cluster@Cluster_Number+1
 28331  00A1C4  C024  F005         	movff	fatfs_write_sector@cluster+2,fatfs_lba_of_cluster@Cluster_Number+2
 28332  00A1C8  C025  F006         	movff	fatfs_write_sector@cluster+3,fatfs_lba_of_cluster@Cluster_Number+3
 28333  00A1CC  EC4C  F03F         	call	_fatfs_lba_of_cluster	;wreg free
 28334  00A1D0  C001  F02C         	movff	?_fatfs_lba_of_cluster,??_fatfs_write_sector
 28335  00A1D4  C002  F02D         	movff	?_fatfs_lba_of_cluster+1,??_fatfs_write_sector+1
 28336  00A1D8  C003  F02E         	movff	?_fatfs_lba_of_cluster+2,??_fatfs_write_sector+2
 28337  00A1DC  C004  F02F         	movff	?_fatfs_lba_of_cluster+3,??_fatfs_write_sector+3
 28338  00A1E0  5026               	movf	fatfs_write_sector@sector,w,c
 28339  00A1E2  242C               	addwf	??_fatfs_write_sector,w,c
 28340  00A1E4  6E30               	movwf	(??_fatfs_write_sector+4)& (0+255),c
 28341  00A1E6  5027               	movf	fatfs_write_sector@sector+1,w,c
 28342  00A1E8  202D               	addwfc	??_fatfs_write_sector+1,w,c
 28343  00A1EA  6E31               	movwf	(??_fatfs_write_sector+5)& (0+255),c
 28344  00A1EC  5028               	movf	fatfs_write_sector@sector+2,w,c
 28345  00A1EE  202E               	addwfc	??_fatfs_write_sector+2,w,c
 28346  00A1F0  6E32               	movwf	(??_fatfs_write_sector+6)& (0+255),c
 28347  00A1F2  5029               	movf	fatfs_write_sector@sector+3,w,c
 28348  00A1F4  202F               	addwfc	??_fatfs_write_sector+3,w,c
 28349  00A1F6  6E33               	movwf	(??_fatfs_write_sector+7)& (0+255),c
 28350  00A1F8  EE22 F031          	lfsr	2,561
 28351  00A1FC  5020               	movf	fatfs_write_sector@fs,w,c
 28352  00A1FE  26D9               	addwf	fsr2l,f,c
 28353  00A200  5021               	movf	fatfs_write_sector@fs+1,w,c
 28354  00A202  22DA               	addwfc	fsr2h,f,c
 28355  00A204  C030  FFDE         	movff	??_fatfs_write_sector+4,postinc2
 28356  00A208  C031  FFDE         	movff	??_fatfs_write_sector+5,postinc2
 28357  00A20C  C032  FFDE         	movff	??_fatfs_write_sector+6,postinc2
 28358  00A210  C033  FFDD         	movff	??_fatfs_write_sector+7,postdec2
 28359  00A214  06D9               	decf	fsr2l,f,c
 28360  00A216  06D9               	decf	fsr2l,f,c
 28361                           
 28362                           ;fat_access.c: 378: return fs->disk_io.write_media(fs->currentsector.address, fs->curren
      +                          tsector.sector, 1);
 28363  00A218  EE22 F031          	lfsr	2,561
 28364  00A21C  5020               	movf	fatfs_write_sector@fs,w,c
 28365  00A21E  26D9               	addwf	fsr2l,f,c
 28366  00A220  5021               	movf	fatfs_write_sector@fs+1,w,c
 28367  00A222  22DA               	addwfc	fsr2h,f,c
 28368  00A224  CFDE F009          	movff	postinc2,media_write@sector
 28369  00A228  CFDE F00A          	movff	postinc2,media_write@sector+1
 28370  00A22C  CFDE F00B          	movff	postinc2,media_write@sector+2
 28371  00A230  CFDE F00C          	movff	postinc2,media_write@sector+3
 28372  00A234  0E31               	movlw	49
 28373  00A236  2420               	addwf	fatfs_write_sector@fs,w,c
 28374  00A238  6E2C               	movwf	??_fatfs_write_sector& (0+255),c
 28375  00A23A  0E00               	movlw	0
 28376  00A23C  2021               	addwfc	fatfs_write_sector@fs+1,w,c
 28377  00A23E  6E2D               	movwf	(??_fatfs_write_sector+1)& (0+255),c
 28378  00A240  0E20               	movlw	32
 28379  00A242  6E0F               	movwf	media_write@buffer+2,c
 28380  00A244  C02D  F00E         	movff	??_fatfs_write_sector+1,media_write@buffer+1
 28381  00A248  C02C  F00D         	movff	??_fatfs_write_sector,media_write@buffer
 28382  00A24C  0E01               	movlw	1
 28383  00A24E  6E10               	movwf	media_write@sector_count,c
 28384  00A250  6A11               	clrf	media_write@sector_count+1,c
 28385  00A252  6A12               	clrf	media_write@sector_count+2,c
 28386  00A254  6A13               	clrf	media_write@sector_count+3,c
 28387  00A256  EE20 F02B          	lfsr	2,43
 28388  00A25A  5020               	movf	fatfs_write_sector@fs,w,c
 28389  00A25C  26D9               	addwf	fsr2l,f,c
 28390  00A25E  5021               	movf	fatfs_write_sector@fs+1,w,c
 28391  00A260  22DA               	addwfc	fsr2h,f,c
 28392  00A262  CFDE F02E          	movff	postinc2,??_fatfs_write_sector+2
 28393  00A266  CFDD F02F          	movff	postdec2,??_fatfs_write_sector+3
 28394  00A26A  D801               	call	u9778
 28395  00A26C  D009               	goto	u9779
 28396  00A26E                     u9778:
 28397  00A26E  0005               	push	
 28398  00A270  6EFA               	movwf	pclath,c
 28399  00A272  502E               	movf	??_fatfs_write_sector+2,w,c
 28400  00A274  6EFD               	movwf	tosl,c
 28401  00A276  502F               	movf	??_fatfs_write_sector+3,w,c
 28402  00A278  6EFE               	movwf	tosh,c
 28403  00A27A  6AFF               	clrf	tosu,c
 28404  00A27C  50FA               	movf	pclath,w,c
 28405  00A27E  0012               	return		;indir
 28406  00A280                     u9779:
 28407  00A280  C009  F020         	movff	?_media_write,?_fatfs_write_sector
 28408  00A284  C00A  F021         	movff	?_media_write+1,?_fatfs_write_sector+1
 28409  00A288                     l113:
 28410  00A288  0012               	return	
 28411  00A28A                     __end_of_fatfs_write_sector:
 28412                           	opt stack 0
 28413                           tosu	equ	0xFFF
 28414                           tosh	equ	0xFFE
 28415                           tosl	equ	0xFFD
 28416                           pclath	equ	0xFFA
 28417                           tblptru	equ	0xFF8
 28418                           tblptrh	equ	0xFF7
 28419                           tblptrl	equ	0xFF6
 28420                           tablat	equ	0xFF5
 28421                           prodh	equ	0xFF4
 28422                           prodl	equ	0xFF3
 28423                           indf0	equ	0xFEF
 28424                           postinc0	equ	0xFEE
 28425                           fsr0h	equ	0xFEA
 28426                           fsr0l	equ	0xFE9
 28427                           wreg	equ	0xFE8
 28428                           indf1	equ	0xFE7
 28429                           postinc1	equ	0xFE6
 28430                           postdec1	equ	0xFE5
 28431                           fsr1h	equ	0xFE2
 28432                           fsr1l	equ	0xFE1
 28433                           indf2	equ	0xFDF
 28434                           postinc2	equ	0xFDE
 28435                           postdec2	equ	0xFDD
 28436                           fsr2h	equ	0xFDA
 28437                           fsr2l	equ	0xFD9
 28438                           status	equ	0xFD8
 28439                           
 28440 ;; *************** function _fatfs_find_blank_cluster *****************
 28441 ;; Defined at:
 28442 ;;		line 288 in file "fat_table.c"
 28443 ;; Parameters:    Size  Location     Type
 28444 ;;  fs              2   69[COMRAM] PTR struct fatfs
 28445 ;;		 -> _fs(1095), 
 28446 ;;  start_cluste    4   71[COMRAM] unsigned long 
 28447 ;;  free_cluster    2   75[COMRAM] PTR unsigned long 
 28448 ;;		 -> fatfs_find_free_dir_offset@newCluster(4), fatfs_allocate_free_space@nextcluster(4), fatfs_add_free_space@nextclu
      +ster(4), 
 28449 ;; Auto vars:     Size  Location     Type
 28450 ;;  position        4   12[BANK0 ] unsigned long 
 28451 ;;  current_clus    4    8[BANK0 ] unsigned long 
 28452 ;;  fat_sector_o    4    4[BANK0 ] unsigned long 
 28453 ;;  nextcluster     4    0[BANK0 ] unsigned long 
 28454 ;;  pbuf            2   16[BANK0 ] PTR struct fat_buffer
 28455 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 28456 ;;		 -> NULL(0), 
 28457 ;; Return value:  Size  Location     Type
 28458 ;;                  2   69[COMRAM] int 
 28459 ;; Registers used:
 28460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 28461 ;; Tracked objects:
 28462 ;;		On entry : 0/0
 28463 ;;		On exit  : 0/0
 28464 ;;		Unchanged: 0/0
 28465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28466 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28467 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28468 ;;      Temps:         38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28469 ;;      Totals:        46      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28470 ;;Total ram usage:       64 bytes
 28471 ;; Hardware stack levels used:    1
 28472 ;; Hardware stack levels required when called:    5
 28473 ;; This function calls:
 28474 ;;		_fatfs_fat_read_sector
 28475 ;; This function is called by:
 28476 ;;		_fatfs_add_free_space
 28477 ;;		_fatfs_allocate_free_space
 28478 ;;		_fatfs_find_free_dir_offset
 28479 ;; This function uses a non-reentrant model
 28480 ;;
 28481                           
 28482                           	psect	text82
 28483  00B44C                     __ptext82:
 28484                           	opt stack 0
 28485  00B44C                     _fatfs_find_blank_cluster:
 28486                           	opt stack 19
 28487                           
 28488                           ;fat_table.c: 290: uint32 fat_sector_offset, position;
 28489                           ;fat_table.c: 291: uint32 nextcluster;
 28490                           ;fat_table.c: 292: uint32 current_cluster = start_cluster;
 28491                           
 28492                           ;incstack = 0
 28493  00B44C  C048  F088         	movff	fatfs_find_blank_cluster@start_cluster,fatfs_find_blank_cluster@current_cluster
 28494  00B450  C049  F089         	movff	fatfs_find_blank_cluster@start_cluster+1,fatfs_find_blank_cluster@current_cluster
      +                          +1
 28495  00B454  C04A  F08A         	movff	fatfs_find_blank_cluster@start_cluster+2,fatfs_find_blank_cluster@current_cluster
      +                          +2
 28496  00B458  C04B  F08B         	movff	fatfs_find_blank_cluster@start_cluster+3,fatfs_find_blank_cluster@current_cluster
      +                          +3
 28497  00B45C                     l9469:
 28498                           
 28499                           ;fat_table.c: 296: {
 28500                           ;fat_table.c: 298: if (fs->fat_type == FAT_TYPE_16)
 28501  00B45C  EE20 F028          	lfsr	2,40
 28502  00B460  5046               	movf	fatfs_find_blank_cluster@fs,w,c
 28503  00B462  26D9               	addwf	fsr2l,f,c
 28504  00B464  5047               	movf	fatfs_find_blank_cluster@fs+1,w,c
 28505  00B466  22DA               	addwfc	fsr2h,f,c
 28506  00B468  50DF               	movf	indf2,w,c
 28507  00B46A  E110               	bnz	l9473
 28508                           
 28509                           ;fat_table.c: 299: fat_sector_offset = current_cluster / 256;
 28510  00B46C  C088  F04E         	movff	fatfs_find_blank_cluster@current_cluster,??_fatfs_find_blank_cluster
 28511  00B470  C089  F04F         	movff	fatfs_find_blank_cluster@current_cluster+1,??_fatfs_find_blank_cluster+1
 28512  00B474  C08A  F050         	movff	fatfs_find_blank_cluster@current_cluster+2,??_fatfs_find_blank_cluster+2
 28513  00B478  C08B  F051         	movff	fatfs_find_blank_cluster@current_cluster+3,??_fatfs_find_blank_cluster+3
 28514  00B47C  C04F  F04E         	movff	??_fatfs_find_blank_cluster+1,??_fatfs_find_blank_cluster
 28515  00B480  C050  F04F         	movff	??_fatfs_find_blank_cluster+2,??_fatfs_find_blank_cluster+1
 28516  00B484  C051  F050         	movff	??_fatfs_find_blank_cluster+3,??_fatfs_find_blank_cluster+2
 28517  00B488  6A51               	clrf	??_fatfs_find_blank_cluster+3,c
 28518  00B48A  D011               	goto	L93
 28519  00B48C                     l9473:
 28520                           
 28521                           ;fat_table.c: 300: else
 28522                           ;fat_table.c: 301: fat_sector_offset = current_cluster / 128;
 28523  00B48C  C088  F04E         	movff	fatfs_find_blank_cluster@current_cluster,??_fatfs_find_blank_cluster
 28524  00B490  C089  F04F         	movff	fatfs_find_blank_cluster@current_cluster+1,??_fatfs_find_blank_cluster+1
 28525  00B494  C08A  F050         	movff	fatfs_find_blank_cluster@current_cluster+2,??_fatfs_find_blank_cluster+2
 28526  00B498  C08B  F051         	movff	fatfs_find_blank_cluster@current_cluster+3,??_fatfs_find_blank_cluster+3
 28527  00B49C  0E08               	movlw	8
 28528  00B49E  D005               	goto	u10310
 28529  00B4A0                     u10315:
 28530  00B4A0  90D8               	bcf	status,0,c
 28531  00B4A2  3251               	rrcf	??_fatfs_find_blank_cluster+3,f,c
 28532  00B4A4  3250               	rrcf	??_fatfs_find_blank_cluster+2,f,c
 28533  00B4A6  324F               	rrcf	??_fatfs_find_blank_cluster+1,f,c
 28534  00B4A8  324E               	rrcf	??_fatfs_find_blank_cluster,f,c
 28535  00B4AA                     u10310:
 28536  00B4AA  2EE8               	decfsz	wreg,f,c
 28537  00B4AC  D7F9               	goto	u10315
 28538  00B4AE                     L93:
 28539  00B4AE  C04E  F084         	movff	??_fatfs_find_blank_cluster,fatfs_find_blank_cluster@fat_sector_offset
 28540  00B4B2  C04F  F085         	movff	??_fatfs_find_blank_cluster+1,fatfs_find_blank_cluster@fat_sector_offset+1
 28541  00B4B6  C050  F086         	movff	??_fatfs_find_blank_cluster+2,fatfs_find_blank_cluster@fat_sector_offset+2
 28542  00B4BA  C051  F087         	movff	??_fatfs_find_blank_cluster+3,fatfs_find_blank_cluster@fat_sector_offset+3
 28543                           
 28544                           ; BSR set to: 0
 28545                           ;fat_table.c: 303: if ( fat_sector_offset < fs->fat_sectors)
 28546                           
 28547                           ; BSR set to: 0
 28548  00B4BE  EE20 F01B          	lfsr	2,27
 28549  00B4C2  5046               	movf	fatfs_find_blank_cluster@fs,w,c
 28550  00B4C4  26D9               	addwf	fsr2l,f,c
 28551  00B4C6  5047               	movf	fatfs_find_blank_cluster@fs+1,w,c
 28552  00B4C8  22DA               	addwfc	fsr2h,f,c
 28553  00B4CA  CFDE F04E          	movff	postinc2,??_fatfs_find_blank_cluster
 28554  00B4CE  CFDE F04F          	movff	postinc2,??_fatfs_find_blank_cluster+1
 28555  00B4D2  CFDE F050          	movff	postinc2,??_fatfs_find_blank_cluster+2
 28556  00B4D6  CFDE F051          	movff	postinc2,??_fatfs_find_blank_cluster+3
 28557  00B4DA  504E               	movf	??_fatfs_find_blank_cluster,w,c
 28558  00B4DC  0100               	movlb	0	; () banked
 28559  00B4DE  5D84               	subwf	fatfs_find_blank_cluster@fat_sector_offset& (0+255),w,b
 28560  00B4E0  504F               	movf	??_fatfs_find_blank_cluster+1,w,c
 28561  00B4E2  5985               	subwfb	(fatfs_find_blank_cluster@fat_sector_offset+1)& (0+255),w,b
 28562  00B4E4  5050               	movf	??_fatfs_find_blank_cluster+2,w,c
 28563  00B4E6  5986               	subwfb	(fatfs_find_blank_cluster@fat_sector_offset+2)& (0+255),w,b
 28564  00B4E8  5051               	movf	??_fatfs_find_blank_cluster+3,w,c
 28565  00B4EA  5987               	subwfb	(fatfs_find_blank_cluster@fat_sector_offset+3)& (0+255),w,b
 28566  00B4EC  E301 D174          	bc	l9501
 28567                           
 28568                           ; BSR set to: 0
 28569                           ;fat_table.c: 304: {
 28570                           ;fat_table.c: 306: pbuf = fatfs_fat_read_sector(fs, fs->fat_begin_lba+fat_sector_offset)
      +                          ;
 28571  00B4F0  C047  F035         	movff	fatfs_find_blank_cluster@fs+1,fatfs_fat_read_sector@fs+1
 28572  00B4F4  C046  F034         	movff	fatfs_find_blank_cluster@fs,fatfs_fat_read_sector@fs
 28573  00B4F8  EE20 F011          	lfsr	2,17
 28574  00B4FC  5046               	movf	fatfs_find_blank_cluster@fs,w,c
 28575  00B4FE  26D9               	addwf	fsr2l,f,c
 28576  00B500  5047               	movf	fatfs_find_blank_cluster@fs+1,w,c
 28577  00B502  22DA               	addwfc	fsr2h,f,c
 28578  00B504  CFDE F04E          	movff	postinc2,??_fatfs_find_blank_cluster
 28579  00B508  CFDE F04F          	movff	postinc2,??_fatfs_find_blank_cluster+1
 28580  00B50C  CFDE F050          	movff	postinc2,??_fatfs_find_blank_cluster+2
 28581  00B510  CFDE F051          	movff	postinc2,??_fatfs_find_blank_cluster+3
 28582  00B514  5184               	movf	fatfs_find_blank_cluster@fat_sector_offset& (0+255),w,b
 28583  00B516  244E               	addwf	??_fatfs_find_blank_cluster,w,c
 28584  00B518  6E36               	movwf	fatfs_fat_read_sector@sector,c
 28585  00B51A  5185               	movf	(fatfs_find_blank_cluster@fat_sector_offset+1)& (0+255),w,b
 28586  00B51C  204F               	addwfc	??_fatfs_find_blank_cluster+1,w,c
 28587  00B51E  6E37               	movwf	fatfs_fat_read_sector@sector+1,c
 28588  00B520  5186               	movf	(fatfs_find_blank_cluster@fat_sector_offset+2)& (0+255),w,b
 28589  00B522  2050               	addwfc	??_fatfs_find_blank_cluster+2,w,c
 28590  00B524  6E38               	movwf	fatfs_fat_read_sector@sector+2,c
 28591  00B526  5187               	movf	(fatfs_find_blank_cluster@fat_sector_offset+3)& (0+255),w,b
 28592  00B528  2051               	addwfc	??_fatfs_find_blank_cluster+3,w,c
 28593  00B52A  6E39               	movwf	fatfs_fat_read_sector@sector+3,c
 28594  00B52C  EC82  F043         	call	_fatfs_fat_read_sector	;wreg free
 28595  00B530  C034  F090         	movff	?_fatfs_fat_read_sector,fatfs_find_blank_cluster@pbuf
 28596  00B534  C035  F091         	movff	?_fatfs_fat_read_sector+1,fatfs_find_blank_cluster@pbuf+1
 28597                           
 28598                           ;fat_table.c: 307: if (!pbuf)
 28599  00B538  0100               	movlb	0	; () banked
 28600  00B53A  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28601  00B53C  1190               	iorwf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28602  00B53E  E101 D14B          	bz	l9501
 28603                           
 28604                           ; BSR set to: 0
 28605                           ;fat_table.c: 310: if (fs->fat_type == FAT_TYPE_16)
 28606                           
 28607                           ; BSR set to: 0
 28608                           
 28609                           ; BSR set to: 0
 28610                           
 28611                           ; BSR set to: 0
 28612                           ;fat_table.c: 308: return 0;
 28613  00B542  EE20 F028          	lfsr	2,40
 28614  00B546  5046               	movf	fatfs_find_blank_cluster@fs,w,c
 28615  00B548  26D9               	addwf	fsr2l,f,c
 28616  00B54A  5047               	movf	fatfs_find_blank_cluster@fs+1,w,c
 28617  00B54C  22DA               	addwfc	fsr2h,f,c
 28618  00B54E  50DF               	movf	indf2,w,c
 28619  00B550  E15C               	bnz	l9491
 28620                           
 28621                           ; BSR set to: 0
 28622                           ;fat_table.c: 311: {
 28623                           ;fat_table.c: 313: position = (current_cluster - (fat_sector_offset * 256)) * 2;
 28624  00B552  C084  F04F         	movff	fatfs_find_blank_cluster@fat_sector_offset,??_fatfs_find_blank_cluster+1
 28625  00B556  C085  F050         	movff	fatfs_find_blank_cluster@fat_sector_offset+1,??_fatfs_find_blank_cluster+2
 28626  00B55A  C086  F051         	movff	fatfs_find_blank_cluster@fat_sector_offset+2,??_fatfs_find_blank_cluster+3
 28627  00B55E  6A4E               	clrf	??_fatfs_find_blank_cluster& (0+255),c
 28628  00B560  1E4E               	comf	??_fatfs_find_blank_cluster,f,c
 28629  00B562  1E4F               	comf	??_fatfs_find_blank_cluster+1,f,c
 28630  00B564  1E50               	comf	??_fatfs_find_blank_cluster+2,f,c
 28631  00B566  1E51               	comf	??_fatfs_find_blank_cluster+3,f,c
 28632  00B568  2A4E               	incf	??_fatfs_find_blank_cluster,f,c
 28633  00B56A  0E00               	movlw	0
 28634  00B56C  224F               	addwfc	??_fatfs_find_blank_cluster+1,f,c
 28635  00B56E  2250               	addwfc	??_fatfs_find_blank_cluster+2,f,c
 28636  00B570  2251               	addwfc	??_fatfs_find_blank_cluster+3,f,c
 28637  00B572  5188               	movf	fatfs_find_blank_cluster@current_cluster& (0+255),w,b
 28638  00B574  244E               	addwf	??_fatfs_find_blank_cluster,w,c
 28639  00B576  6E52               	movwf	(??_fatfs_find_blank_cluster+4)& (0+255),c
 28640  00B578  5189               	movf	(fatfs_find_blank_cluster@current_cluster+1)& (0+255),w,b
 28641  00B57A  204F               	addwfc	??_fatfs_find_blank_cluster+1,w,c
 28642  00B57C  6E53               	movwf	(??_fatfs_find_blank_cluster+5)& (0+255),c
 28643  00B57E  518A               	movf	(fatfs_find_blank_cluster@current_cluster+2)& (0+255),w,b
 28644  00B580  2050               	addwfc	??_fatfs_find_blank_cluster+2,w,c
 28645  00B582  6E54               	movwf	(??_fatfs_find_blank_cluster+6)& (0+255),c
 28646  00B584  518B               	movf	(fatfs_find_blank_cluster@current_cluster+3)& (0+255),w,b
 28647  00B586  2051               	addwfc	??_fatfs_find_blank_cluster+3,w,c
 28648  00B588  6E55               	movwf	(??_fatfs_find_blank_cluster+7)& (0+255),c
 28649  00B58A  90D8               	bcf	status,0,c
 28650  00B58C  3452               	rlcf	??_fatfs_find_blank_cluster+4,w,c
 28651  00B58E  6F8C               	movwf	fatfs_find_blank_cluster@position& (0+255),b
 28652  00B590  3453               	rlcf	??_fatfs_find_blank_cluster+5,w,c
 28653  00B592  6F8D               	movwf	(fatfs_find_blank_cluster@position+1)& (0+255),b
 28654  00B594  3454               	rlcf	??_fatfs_find_blank_cluster+6,w,c
 28655  00B596  6F8E               	movwf	(fatfs_find_blank_cluster@position+2)& (0+255),b
 28656  00B598  3455               	rlcf	??_fatfs_find_blank_cluster+7,w,c
 28657  00B59A  6F8F               	movwf	(fatfs_find_blank_cluster@position+3)& (0+255),b
 28658                           
 28659                           ; BSR set to: 0
 28660                           ;fat_table.c: 316: nextcluster = ( ( ((uint16)pbuf->ptr[(uint16)position+1]<<8) + (uint1
      +                          6)pbuf->ptr[(uint16)position+0] ) );
 28661  00B59C  298C               	incf	fatfs_find_blank_cluster@position& (0+255),w,b
 28662  00B59E  6E4E               	movwf	??_fatfs_find_blank_cluster& (0+255),c
 28663  00B5A0  0E00               	movlw	0
 28664  00B5A2  218D               	addwfc	(fatfs_find_blank_cluster@position+1)& (0+255),w,b
 28665  00B5A4  6E4F               	movwf	(??_fatfs_find_blank_cluster+1)& (0+255),c
 28666  00B5A6  EE22 F006          	lfsr	2,518
 28667  00B5AA  5190               	movf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28668  00B5AC  26D9               	addwf	fsr2l,f,c
 28669  00B5AE  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28670  00B5B0  22DA               	addwfc	fsr2h,f,c
 28671  00B5B2  CFDE F050          	movff	postinc2,??_fatfs_find_blank_cluster+2
 28672  00B5B6  CFDD F051          	movff	postdec2,??_fatfs_find_blank_cluster+3
 28673  00B5BA  504E               	movf	??_fatfs_find_blank_cluster,w,c
 28674  00B5BC  2450               	addwf	??_fatfs_find_blank_cluster+2,w,c
 28675  00B5BE  6ED9               	movwf	fsr2l,c
 28676  00B5C0  504F               	movf	??_fatfs_find_blank_cluster+1,w,c
 28677  00B5C2  2051               	addwfc	??_fatfs_find_blank_cluster+3,w,c
 28678  00B5C4  6EDA               	movwf	fsr2h,c
 28679  00B5C6  50DF               	movf	indf2,w,c
 28680  00B5C8  6E52               	movwf	(??_fatfs_find_blank_cluster+4)& (0+255),c
 28681  00B5CA  5052               	movf	??_fatfs_find_blank_cluster+4,w,c
 28682  00B5CC  6E54               	movwf	(??_fatfs_find_blank_cluster+6)& (0+255),c
 28683  00B5CE  6A53               	clrf	(??_fatfs_find_blank_cluster+5)& (0+255),c
 28684  00B5D0  EE22 F006          	lfsr	2,518
 28685  00B5D4  5190               	movf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28686  00B5D6  26D9               	addwf	fsr2l,f,c
 28687  00B5D8  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28688  00B5DA  22DA               	addwfc	fsr2h,f,c
 28689  00B5DC  CFDE F055          	movff	postinc2,??_fatfs_find_blank_cluster+7
 28690  00B5E0  CFDD F056          	movff	postdec2,??_fatfs_find_blank_cluster+8
 28691  00B5E4  518C               	movf	fatfs_find_blank_cluster@position& (0+255),w,b
 28692  00B5E6  2455               	addwf	??_fatfs_find_blank_cluster+7,w,c
 28693  00B5E8  6ED9               	movwf	fsr2l,c
 28694  00B5EA  518D               	movf	(fatfs_find_blank_cluster@position+1)& (0+255),w,b
 28695  00B5EC  2056               	addwfc	??_fatfs_find_blank_cluster+8,w,c
 28696  00B5EE  6EDA               	movwf	fsr2h,c
 28697  00B5F0  50DF               	movf	indf2,w,c
 28698  00B5F2  6E57               	movwf	(??_fatfs_find_blank_cluster+9)& (0+255),c
 28699  00B5F4  5057               	movf	??_fatfs_find_blank_cluster+9,w,c
 28700  00B5F6  2653               	addwf	??_fatfs_find_blank_cluster+5,f,c
 28701  00B5F8  0E00               	movlw	0
 28702  00B5FA  2254               	addwfc	??_fatfs_find_blank_cluster+6,f,c
 28703  00B5FC  C053  F080         	movff	??_fatfs_find_blank_cluster+5,fatfs_find_blank_cluster@nextcluster
 28704  00B600  C054  F081         	movff	??_fatfs_find_blank_cluster+6,fatfs_find_blank_cluster@nextcluster+1
 28705  00B604  6B82               	clrf	(fatfs_find_blank_cluster@nextcluster+2)& (0+255),b
 28706  00B606  6B83               	clrf	(fatfs_find_blank_cluster@nextcluster+3)& (0+255),b
 28707                           
 28708                           ;fat_table.c: 317: }
 28709  00B608  D0DB               	goto	l9497
 28710  00B60A                     l9491:
 28711                           
 28712                           ; BSR set to: 0
 28713                           ;fat_table.c: 318: else
 28714                           ;fat_table.c: 319: {
 28715                           ;fat_table.c: 321: position = (current_cluster - (fat_sector_offset * 128)) * 4;
 28716  00B60A  C084  F04E         	movff	fatfs_find_blank_cluster@fat_sector_offset,??_fatfs_find_blank_cluster
 28717  00B60E  C085  F04F         	movff	fatfs_find_blank_cluster@fat_sector_offset+1,??_fatfs_find_blank_cluster+1
 28718  00B612  C086  F050         	movff	fatfs_find_blank_cluster@fat_sector_offset+2,??_fatfs_find_blank_cluster+2
 28719  00B616  C087  F051         	movff	fatfs_find_blank_cluster@fat_sector_offset+3,??_fatfs_find_blank_cluster+3
 28720  00B61A  0E07               	movlw	7
 28721  00B61C                     u10355:
 28722  00B61C  90D8               	bcf	status,0,c
 28723  00B61E  364E               	rlcf	??_fatfs_find_blank_cluster,f,c
 28724  00B620  364F               	rlcf	??_fatfs_find_blank_cluster+1,f,c
 28725  00B622  3650               	rlcf	??_fatfs_find_blank_cluster+2,f,c
 28726  00B624  3651               	rlcf	??_fatfs_find_blank_cluster+3,f,c
 28727  00B626  2EE8               	decfsz	wreg,f,c
 28728  00B628  D7F9               	goto	u10355
 28729  00B62A  1E4E               	comf	??_fatfs_find_blank_cluster,f,c
 28730  00B62C  1E4F               	comf	??_fatfs_find_blank_cluster+1,f,c
 28731  00B62E  1E50               	comf	??_fatfs_find_blank_cluster+2,f,c
 28732  00B630  1E51               	comf	??_fatfs_find_blank_cluster+3,f,c
 28733  00B632  2A4E               	incf	??_fatfs_find_blank_cluster,f,c
 28734  00B634  0E00               	movlw	0
 28735  00B636  224F               	addwfc	??_fatfs_find_blank_cluster+1,f,c
 28736  00B638  2250               	addwfc	??_fatfs_find_blank_cluster+2,f,c
 28737  00B63A  2251               	addwfc	??_fatfs_find_blank_cluster+3,f,c
 28738  00B63C  0100               	movlb	0	; () banked
 28739  00B63E  5188               	movf	fatfs_find_blank_cluster@current_cluster& (0+255),w,b
 28740  00B640  244E               	addwf	??_fatfs_find_blank_cluster,w,c
 28741  00B642  6E52               	movwf	(??_fatfs_find_blank_cluster+4)& (0+255),c
 28742  00B644  5189               	movf	(fatfs_find_blank_cluster@current_cluster+1)& (0+255),w,b
 28743  00B646  204F               	addwfc	??_fatfs_find_blank_cluster+1,w,c
 28744  00B648  6E53               	movwf	(??_fatfs_find_blank_cluster+5)& (0+255),c
 28745  00B64A  518A               	movf	(fatfs_find_blank_cluster@current_cluster+2)& (0+255),w,b
 28746  00B64C  2050               	addwfc	??_fatfs_find_blank_cluster+2,w,c
 28747  00B64E  6E54               	movwf	(??_fatfs_find_blank_cluster+6)& (0+255),c
 28748  00B650  518B               	movf	(fatfs_find_blank_cluster@current_cluster+3)& (0+255),w,b
 28749  00B652  2051               	addwfc	??_fatfs_find_blank_cluster+3,w,c
 28750  00B654  6E55               	movwf	(??_fatfs_find_blank_cluster+7)& (0+255),c
 28751  00B656  0E02               	movlw	2
 28752  00B658                     u10365:
 28753  00B658  90D8               	bcf	status,0,c
 28754  00B65A  3652               	rlcf	??_fatfs_find_blank_cluster+4,f,c
 28755  00B65C  3653               	rlcf	??_fatfs_find_blank_cluster+5,f,c
 28756  00B65E  3654               	rlcf	??_fatfs_find_blank_cluster+6,f,c
 28757  00B660  3655               	rlcf	??_fatfs_find_blank_cluster+7,f,c
 28758  00B662  2EE8               	decfsz	wreg,f,c
 28759  00B664  D7F9               	goto	u10365
 28760  00B666  C052  F08C         	movff	??_fatfs_find_blank_cluster+4,fatfs_find_blank_cluster@position
 28761  00B66A  C053  F08D         	movff	??_fatfs_find_blank_cluster+5,fatfs_find_blank_cluster@position+1
 28762  00B66E  C054  F08E         	movff	??_fatfs_find_blank_cluster+6,fatfs_find_blank_cluster@position+2
 28763  00B672  C055  F08F         	movff	??_fatfs_find_blank_cluster+7,fatfs_find_blank_cluster@position+3
 28764                           
 28765                           ; BSR set to: 0
 28766                           ;fat_table.c: 324: nextcluster = ( ( ((uint32)pbuf->ptr[(uint16)position+3]<<24) + ((uin
      +                          t32)pbuf->ptr[(uint16)position+2]<<16) + ((uint32)pbuf->ptr[(uint16)position+1]<<8) + (u
      +                          int32)pbuf->ptr[(uint16)position+0] ) );
 28767  00B676  0E01               	movlw	1
 28768  00B678  0100               	movlb	0	; () banked
 28769  00B67A  258C               	addwf	fatfs_find_blank_cluster@position& (0+255),w,b
 28770  00B67C  6E4E               	movwf	??_fatfs_find_blank_cluster& (0+255),c
 28771  00B67E  0E00               	movlw	0
 28772  00B680  218D               	addwfc	(fatfs_find_blank_cluster@position+1)& (0+255),w,b
 28773  00B682  6E4F               	movwf	(??_fatfs_find_blank_cluster+1)& (0+255),c
 28774  00B684  EE22 F006          	lfsr	2,518
 28775  00B688  5190               	movf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28776  00B68A  26D9               	addwf	fsr2l,f,c
 28777  00B68C  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28778  00B68E  22DA               	addwfc	fsr2h,f,c
 28779  00B690  CFDE F050          	movff	postinc2,??_fatfs_find_blank_cluster+2
 28780  00B694  CFDD F051          	movff	postdec2,??_fatfs_find_blank_cluster+3
 28781  00B698  504E               	movf	??_fatfs_find_blank_cluster,w,c
 28782  00B69A  2450               	addwf	??_fatfs_find_blank_cluster+2,w,c
 28783  00B69C  6ED9               	movwf	fsr2l,c
 28784  00B69E  504F               	movf	??_fatfs_find_blank_cluster+1,w,c
 28785  00B6A0  2051               	addwfc	??_fatfs_find_blank_cluster+3,w,c
 28786  00B6A2  6EDA               	movwf	fsr2h,c
 28787  00B6A4  50DF               	movf	indf2,w,c
 28788  00B6A6  6E52               	movwf	(??_fatfs_find_blank_cluster+4)& (0+255),c
 28789  00B6A8  C052  F053         	movff	??_fatfs_find_blank_cluster+4,??_fatfs_find_blank_cluster+5
 28790  00B6AC  6A54               	clrf	(??_fatfs_find_blank_cluster+6)& (0+255),c
 28791  00B6AE  6A55               	clrf	(??_fatfs_find_blank_cluster+7)& (0+255),c
 28792  00B6B0  6A56               	clrf	(??_fatfs_find_blank_cluster+8)& (0+255),c
 28793  00B6B2  C055  F056         	movff	??_fatfs_find_blank_cluster+7,??_fatfs_find_blank_cluster+8
 28794  00B6B6  C054  F055         	movff	??_fatfs_find_blank_cluster+6,??_fatfs_find_blank_cluster+7
 28795  00B6BA  C053  F054         	movff	??_fatfs_find_blank_cluster+5,??_fatfs_find_blank_cluster+6
 28796  00B6BE  6A53               	clrf	??_fatfs_find_blank_cluster+5,c
 28797  00B6C0  0E02               	movlw	2
 28798  00B6C2  258C               	addwf	fatfs_find_blank_cluster@position& (0+255),w,b
 28799  00B6C4  6E57               	movwf	(??_fatfs_find_blank_cluster+9)& (0+255),c
 28800  00B6C6  0E00               	movlw	0
 28801  00B6C8  218D               	addwfc	(fatfs_find_blank_cluster@position+1)& (0+255),w,b
 28802  00B6CA  6E58               	movwf	(??_fatfs_find_blank_cluster+10)& (0+255),c
 28803  00B6CC  EE22 F006          	lfsr	2,518
 28804  00B6D0  5190               	movf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28805  00B6D2  26D9               	addwf	fsr2l,f,c
 28806  00B6D4  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28807  00B6D6  22DA               	addwfc	fsr2h,f,c
 28808  00B6D8  CFDE F059          	movff	postinc2,??_fatfs_find_blank_cluster+11
 28809  00B6DC  CFDD F05A          	movff	postdec2,??_fatfs_find_blank_cluster+12
 28810  00B6E0  5057               	movf	??_fatfs_find_blank_cluster+9,w,c
 28811  00B6E2  2459               	addwf	??_fatfs_find_blank_cluster+11,w,c
 28812  00B6E4  6ED9               	movwf	fsr2l,c
 28813  00B6E6  5058               	movf	??_fatfs_find_blank_cluster+10,w,c
 28814  00B6E8  205A               	addwfc	??_fatfs_find_blank_cluster+12,w,c
 28815  00B6EA  6EDA               	movwf	fsr2h,c
 28816  00B6EC  50DF               	movf	indf2,w,c
 28817  00B6EE  6E5B               	movwf	(??_fatfs_find_blank_cluster+13)& (0+255),c
 28818  00B6F0  C05B  F05C         	movff	??_fatfs_find_blank_cluster+13,??_fatfs_find_blank_cluster+14
 28819  00B6F4  6A5D               	clrf	(??_fatfs_find_blank_cluster+15)& (0+255),c
 28820  00B6F6  6A5E               	clrf	(??_fatfs_find_blank_cluster+16)& (0+255),c
 28821  00B6F8  6A5F               	clrf	(??_fatfs_find_blank_cluster+17)& (0+255),c
 28822  00B6FA  C05D  F05F         	movff	??_fatfs_find_blank_cluster+15,??_fatfs_find_blank_cluster+17
 28823  00B6FE  C05C  F05E         	movff	??_fatfs_find_blank_cluster+14,??_fatfs_find_blank_cluster+16
 28824  00B702  6A5D               	clrf	??_fatfs_find_blank_cluster+15,c
 28825  00B704  6A5C               	clrf	??_fatfs_find_blank_cluster+14,c
 28826  00B706  0E03               	movlw	3
 28827  00B708  258C               	addwf	fatfs_find_blank_cluster@position& (0+255),w,b
 28828  00B70A  6E60               	movwf	(??_fatfs_find_blank_cluster+18)& (0+255),c
 28829  00B70C  0E00               	movlw	0
 28830  00B70E  218D               	addwfc	(fatfs_find_blank_cluster@position+1)& (0+255),w,b
 28831  00B710  6E61               	movwf	(??_fatfs_find_blank_cluster+19)& (0+255),c
 28832  00B712  EE22 F006          	lfsr	2,518
 28833  00B716  5190               	movf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28834  00B718  26D9               	addwf	fsr2l,f,c
 28835  00B71A  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28836  00B71C  22DA               	addwfc	fsr2h,f,c
 28837  00B71E  CFDE F062          	movff	postinc2,??_fatfs_find_blank_cluster+20
 28838  00B722  CFDD F063          	movff	postdec2,??_fatfs_find_blank_cluster+21
 28839  00B726  5060               	movf	??_fatfs_find_blank_cluster+18,w,c
 28840  00B728  2462               	addwf	??_fatfs_find_blank_cluster+20,w,c
 28841  00B72A  6ED9               	movwf	fsr2l,c
 28842  00B72C  5061               	movf	??_fatfs_find_blank_cluster+19,w,c
 28843  00B72E  2063               	addwfc	??_fatfs_find_blank_cluster+21,w,c
 28844  00B730  6EDA               	movwf	fsr2h,c
 28845  00B732  50DF               	movf	indf2,w,c
 28846  00B734  6E64               	movwf	(??_fatfs_find_blank_cluster+22)& (0+255),c
 28847  00B736  C064  F065         	movff	??_fatfs_find_blank_cluster+22,??_fatfs_find_blank_cluster+23
 28848  00B73A  6A66               	clrf	(??_fatfs_find_blank_cluster+24)& (0+255),c
 28849  00B73C  6A67               	clrf	(??_fatfs_find_blank_cluster+25)& (0+255),c
 28850  00B73E  6A68               	clrf	(??_fatfs_find_blank_cluster+26)& (0+255),c
 28851  00B740  C065  F068         	movff	??_fatfs_find_blank_cluster+23,??_fatfs_find_blank_cluster+26
 28852  00B744  6A67               	clrf	??_fatfs_find_blank_cluster+25,c
 28853  00B746  6A66               	clrf	??_fatfs_find_blank_cluster+24,c
 28854  00B748  6A65               	clrf	??_fatfs_find_blank_cluster+23,c
 28855  00B74A  505C               	movf	??_fatfs_find_blank_cluster+14,w,c
 28856  00B74C  2465               	addwf	??_fatfs_find_blank_cluster+23,w,c
 28857  00B74E  6E69               	movwf	(??_fatfs_find_blank_cluster+27)& (0+255),c
 28858  00B750  505D               	movf	??_fatfs_find_blank_cluster+15,w,c
 28859  00B752  2066               	addwfc	??_fatfs_find_blank_cluster+24,w,c
 28860  00B754  6E6A               	movwf	(??_fatfs_find_blank_cluster+28)& (0+255),c
 28861  00B756  505E               	movf	??_fatfs_find_blank_cluster+16,w,c
 28862  00B758  2067               	addwfc	??_fatfs_find_blank_cluster+25,w,c
 28863  00B75A  6E6B               	movwf	(??_fatfs_find_blank_cluster+29)& (0+255),c
 28864  00B75C  505F               	movf	??_fatfs_find_blank_cluster+17,w,c
 28865  00B75E  2068               	addwfc	??_fatfs_find_blank_cluster+26,w,c
 28866  00B760  6E6C               	movwf	(??_fatfs_find_blank_cluster+30)& (0+255),c
 28867  00B762  5053               	movf	??_fatfs_find_blank_cluster+5,w,c
 28868  00B764  2469               	addwf	??_fatfs_find_blank_cluster+27,w,c
 28869  00B766  6E6D               	movwf	(??_fatfs_find_blank_cluster+31)& (0+255),c
 28870  00B768  5054               	movf	??_fatfs_find_blank_cluster+6,w,c
 28871  00B76A  206A               	addwfc	??_fatfs_find_blank_cluster+28,w,c
 28872  00B76C  6E6E               	movwf	(??_fatfs_find_blank_cluster+32)& (0+255),c
 28873  00B76E  5055               	movf	??_fatfs_find_blank_cluster+7,w,c
 28874  00B770  206B               	addwfc	??_fatfs_find_blank_cluster+29,w,c
 28875  00B772  6E6F               	movwf	(??_fatfs_find_blank_cluster+33)& (0+255),c
 28876  00B774  5056               	movf	??_fatfs_find_blank_cluster+8,w,c
 28877  00B776  206C               	addwfc	??_fatfs_find_blank_cluster+30,w,c
 28878  00B778  6E70               	movwf	(??_fatfs_find_blank_cluster+34)& (0+255),c
 28879  00B77A  EE22 F006          	lfsr	2,518
 28880  00B77E  5190               	movf	fatfs_find_blank_cluster@pbuf& (0+255),w,b
 28881  00B780  26D9               	addwf	fsr2l,f,c
 28882  00B782  5191               	movf	(fatfs_find_blank_cluster@pbuf+1)& (0+255),w,b
 28883  00B784  22DA               	addwfc	fsr2h,f,c
 28884  00B786  CFDE F071          	movff	postinc2,??_fatfs_find_blank_cluster+35
 28885  00B78A  CFDD F072          	movff	postdec2,??_fatfs_find_blank_cluster+36
 28886  00B78E  518C               	movf	fatfs_find_blank_cluster@position& (0+255),w,b
 28887  00B790  2471               	addwf	??_fatfs_find_blank_cluster+35,w,c
 28888  00B792  6ED9               	movwf	fsr2l,c
 28889  00B794  518D               	movf	(fatfs_find_blank_cluster@position+1)& (0+255),w,b
 28890  00B796  2072               	addwfc	??_fatfs_find_blank_cluster+36,w,c
 28891  00B798  6EDA               	movwf	fsr2h,c
 28892  00B79A  50DF               	movf	indf2,w,c
 28893  00B79C  6E73               	movwf	(??_fatfs_find_blank_cluster+37)& (0+255),c
 28894  00B79E  5073               	movf	??_fatfs_find_blank_cluster+37,w,c
 28895  00B7A0  246D               	addwf	??_fatfs_find_blank_cluster+31,w,c
 28896  00B7A2  6F80               	movwf	fatfs_find_blank_cluster@nextcluster& (0+255),b
 28897  00B7A4  0E00               	movlw	0
 28898  00B7A6  206E               	addwfc	??_fatfs_find_blank_cluster+32,w,c
 28899  00B7A8  6F81               	movwf	(fatfs_find_blank_cluster@nextcluster+1)& (0+255),b
 28900  00B7AA  0E00               	movlw	0
 28901  00B7AC  206F               	addwfc	??_fatfs_find_blank_cluster+33,w,c
 28902  00B7AE  6F82               	movwf	(fatfs_find_blank_cluster@nextcluster+2)& (0+255),b
 28903  00B7B0  0E00               	movlw	0
 28904  00B7B2  2070               	addwfc	??_fatfs_find_blank_cluster+34,w,c
 28905  00B7B4  6F83               	movwf	(fatfs_find_blank_cluster@nextcluster+3)& (0+255),b
 28906                           
 28907                           ; BSR set to: 0
 28908                           ;fat_table.c: 327: nextcluster = nextcluster & 0x0FFFFFFF;
 28909  00B7B6  5180               	movf	fatfs_find_blank_cluster@nextcluster& (0+255),w,b
 28910  00B7B8  5181               	movf	(fatfs_find_blank_cluster@nextcluster+1)& (0+255),w,b
 28911  00B7BA  5182               	movf	(fatfs_find_blank_cluster@nextcluster+2)& (0+255),w,b
 28912  00B7BC  0E0F               	movlw	15
 28913  00B7BE  1783               	andwf	(fatfs_find_blank_cluster@nextcluster+3)& (0+255),f,b
 28914  00B7C0                     l9497:
 28915                           
 28916                           ; BSR set to: 0
 28917                           ;fat_table.c: 328: }
 28918                           ;fat_table.c: 330: if (nextcluster !=0 )
 28919  00B7C0  0100               	movlb	0	; () banked
 28920  00B7C2  5183               	movf	(fatfs_find_blank_cluster@nextcluster+3)& (0+255),w,b
 28921  00B7C4  1180               	iorwf	fatfs_find_blank_cluster@nextcluster& (0+255),w,b
 28922  00B7C6  1181               	iorwf	(fatfs_find_blank_cluster@nextcluster+1)& (0+255),w,b
 28923  00B7C8  1182               	iorwf	(fatfs_find_blank_cluster@nextcluster+2)& (0+255),w,b
 28924  00B7CA  E009               	bz	l9505
 28925                           
 28926                           ; BSR set to: 0
 28927                           ;fat_table.c: 331: current_cluster++;
 28928  00B7CC  2B88               	incf	fatfs_find_blank_cluster@current_cluster& (0+255),f,b
 28929  00B7CE  0E00               	movlw	0
 28930  00B7D0  2389               	addwfc	(fatfs_find_blank_cluster@current_cluster+1)& (0+255),f,b
 28931  00B7D2  238A               	addwfc	(fatfs_find_blank_cluster@current_cluster+2)& (0+255),f,b
 28932  00B7D4  238B               	addwfc	(fatfs_find_blank_cluster@current_cluster+3)& (0+255),f,b
 28933  00B7D6  D003               	goto	l9505
 28934  00B7D8                     l9501:
 28935                           
 28936                           ; BSR set to: 0
 28937                           ;fat_table.c: 333: else
 28938                           ;fat_table.c: 335: return 0;
 28939  00B7D8  0E00               	movlw	0
 28940  00B7DA  6E47               	movwf	?_fatfs_find_blank_cluster+1,c
 28941  00B7DC  D016               	goto	L94
 28942  00B7DE                     l9505:
 28943                           
 28944                           ; BSR set to: 0
 28945                           ;fat_table.c: 336: }
 28946                           ;fat_table.c: 337: while (nextcluster != 0x0);
 28947  00B7DE  0100               	movlb	0	; () banked
 28948  00B7E0  5183               	movf	(fatfs_find_blank_cluster@nextcluster+3)& (0+255),w,b
 28949  00B7E2  1180               	iorwf	fatfs_find_blank_cluster@nextcluster& (0+255),w,b
 28950  00B7E4  1181               	iorwf	(fatfs_find_blank_cluster@nextcluster+1)& (0+255),w,b
 28951  00B7E6  1182               	iorwf	(fatfs_find_blank_cluster@nextcluster+2)& (0+255),w,b
 28952  00B7E8  E001 D638          	bnz	l9469
 28953                           
 28954                           ; BSR set to: 0
 28955                           ;fat_table.c: 340: *free_cluster = current_cluster;
 28956                           
 28957                           ; BSR set to: 0
 28958  00B7EC  C04C  FFD9         	movff	fatfs_find_blank_cluster@free_cluster,fsr2l
 28959  00B7F0  C04D  FFDA         	movff	fatfs_find_blank_cluster@free_cluster+1,fsr2h
 28960  00B7F4  C088  FFDE         	movff	fatfs_find_blank_cluster@current_cluster,postinc2
 28961  00B7F8  C089  FFDE         	movff	fatfs_find_blank_cluster@current_cluster+1,postinc2
 28962  00B7FC  C08A  FFDE         	movff	fatfs_find_blank_cluster@current_cluster+2,postinc2
 28963  00B800  C08B  FFDE         	movff	fatfs_find_blank_cluster@current_cluster+3,postinc2
 28964                           
 28965                           ; BSR set to: 0
 28966                           ;fat_table.c: 341: return 1;
 28967  00B804  0E00               	movlw	0
 28968  00B806  6E47               	movwf	?_fatfs_find_blank_cluster+1,c
 28969  00B808  0E01               	movlw	1
 28970  00B80A                     L94:
 28971  00B80A  6E46               	movwf	?_fatfs_find_blank_cluster,c
 28972                           
 28973                           ; BSR set to: 0
 28974                           
 28975                           ; BSR set to: 0
 28976  00B80C  0012               	return	
 28977  00B80E                     __end_of_fatfs_find_blank_cluster:
 28978                           	opt stack 0
 28979                           tosu	equ	0xFFF
 28980                           tosh	equ	0xFFE
 28981                           tosl	equ	0xFFD
 28982                           pclath	equ	0xFFA
 28983                           tblptru	equ	0xFF8
 28984                           tblptrh	equ	0xFF7
 28985                           tblptrl	equ	0xFF6
 28986                           tablat	equ	0xFF5
 28987                           prodh	equ	0xFF4
 28988                           prodl	equ	0xFF3
 28989                           indf0	equ	0xFEF
 28990                           postinc0	equ	0xFEE
 28991                           fsr0h	equ	0xFEA
 28992                           fsr0l	equ	0xFE9
 28993                           wreg	equ	0xFE8
 28994                           indf1	equ	0xFE7
 28995                           postinc1	equ	0xFE6
 28996                           postdec1	equ	0xFE5
 28997                           fsr1h	equ	0xFE2
 28998                           fsr1l	equ	0xFE1
 28999                           indf2	equ	0xFDF
 29000                           postinc2	equ	0xFDE
 29001                           postdec2	equ	0xFDD
 29002                           fsr2h	equ	0xFDA
 29003                           fsr2l	equ	0xFD9
 29004                           status	equ	0xFD8
 29005                           
 29006 ;; *************** function _fatfs_fat_add_cluster_to_chain *****************
 29007 ;; Defined at:
 29008 ;;		line 414 in file "fat_table.c"
 29009 ;; Parameters:    Size  Location     Type
 29010 ;;  fs              2    0[BANK0 ] PTR struct fatfs
 29011 ;;		 -> _fs(1095), 
 29012 ;;  start_cluste    4    2[BANK0 ] unsigned long 
 29013 ;;  newEntry        4    6[BANK0 ] unsigned long 
 29014 ;; Auto vars:     Size  Location     Type
 29015 ;;  next_cluster    4   14[BANK0 ] unsigned long 
 29016 ;;  last_cluster    4   10[BANK0 ] unsigned long 
 29017 ;; Return value:  Size  Location     Type
 29018 ;;                  2    0[BANK0 ] int 
 29019 ;; Registers used:
 29020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 29021 ;; Tracked objects:
 29022 ;;		On entry : 0/0
 29023 ;;		On exit  : 0/0
 29024 ;;		Unchanged: 0/0
 29025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29026 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29027 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29029 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29030 ;;Total ram usage:       18 bytes
 29031 ;; Hardware stack levels used:    1
 29032 ;; Hardware stack levels required when called:    6
 29033 ;; This function calls:
 29034 ;;		_fatfs_fat_set_cluster
 29035 ;;		_fatfs_find_next_cluster
 29036 ;; This function is called by:
 29037 ;;		_fatfs_find_free_dir_offset
 29038 ;; This function uses a non-reentrant model
 29039 ;;
 29040                           
 29041                           	psect	text83
 29042  005DA0                     __ptext83:
 29043                           	opt stack 0
 29044  005DA0                     _fatfs_fat_add_cluster_to_chain:
 29045                           	opt stack 17
 29046                           
 29047                           ;fat_table.c: 416: uint32 last_cluster = 0xFFFFFFFF;
 29048                           
 29049                           ; BSR set to: 0
 29050                           ;incstack = 0
 29051  005DA0  0100               	movlb	0	; () banked
 29052  005DA2  698A               	setf	fatfs_fat_add_cluster_to_chain@last_cluster& (0+255),b
 29053  005DA4  698B               	setf	(fatfs_fat_add_cluster_to_chain@last_cluster+1)& (0+255),b
 29054  005DA6  698C               	setf	(fatfs_fat_add_cluster_to_chain@last_cluster+2)& (0+255),b
 29055  005DA8  698D               	setf	(fatfs_fat_add_cluster_to_chain@last_cluster+3)& (0+255),b
 29056                           
 29057                           ;fat_table.c: 417: uint32 next_cluster = start_cluster;
 29058  005DAA  C082  F08E         	movff	fatfs_fat_add_cluster_to_chain@start_cluster,fatfs_fat_add_cluster_to_chain@next_
      +                          cluster
 29059  005DAE  C083  F08F         	movff	fatfs_fat_add_cluster_to_chain@start_cluster+1,fatfs_fat_add_cluster_to_chain@nex
      +                          t_cluster+1
 29060  005DB2  C084  F090         	movff	fatfs_fat_add_cluster_to_chain@start_cluster+2,fatfs_fat_add_cluster_to_chain@nex
      +                          t_cluster+2
 29061  005DB6  C085  F091         	movff	fatfs_fat_add_cluster_to_chain@start_cluster+3,fatfs_fat_add_cluster_to_chain@nex
      +                          t_cluster+3
 29062                           
 29063                           ; BSR set to: 0
 29064                           ;fat_table.c: 419: if (start_cluster == 0xFFFFFFFF)
 29065  005DBA  2982               	incf	fatfs_fat_add_cluster_to_chain@start_cluster& (0+255),w,b
 29066  005DBC  B4D8               	btfsc	status,2,c
 29067  005DBE  2983               	incf	(fatfs_fat_add_cluster_to_chain@start_cluster+1)& (0+255),w,b
 29068  005DC0  B4D8               	btfsc	status,2,c
 29069  005DC2  2984               	incf	(fatfs_fat_add_cluster_to_chain@start_cluster+2)& (0+255),w,b
 29070  005DC4  B4D8               	btfsc	status,2,c
 29071  005DC6  2985               	incf	(fatfs_fat_add_cluster_to_chain@start_cluster+3)& (0+255),w,b
 29072  005DC8  D024               	goto	L96
 29073  005DCA                     l1274:
 29074                           
 29075                           ; BSR set to: 0
 29076                           ;fat_table.c: 424: {
 29077                           ;fat_table.c: 425: last_cluster = next_cluster;
 29078  005DCA  C08E  F08A         	movff	fatfs_fat_add_cluster_to_chain@next_cluster,fatfs_fat_add_cluster_to_chain@last_c
      +                          luster
 29079  005DCE  C08F  F08B         	movff	fatfs_fat_add_cluster_to_chain@next_cluster+1,fatfs_fat_add_cluster_to_chain@last
      +                          _cluster+1
 29080  005DD2  C090  F08C         	movff	fatfs_fat_add_cluster_to_chain@next_cluster+2,fatfs_fat_add_cluster_to_chain@last
      +                          _cluster+2
 29081  005DD6  C091  F08D         	movff	fatfs_fat_add_cluster_to_chain@next_cluster+3,fatfs_fat_add_cluster_to_chain@last
      +                          _cluster+3
 29082                           
 29083                           ; BSR set to: 0
 29084                           ;fat_table.c: 428: next_cluster = fatfs_find_next_cluster(fs, next_cluster);
 29085  005DDA  C081  F047         	movff	fatfs_fat_add_cluster_to_chain@fs+1,fatfs_find_next_cluster@fs+1
 29086  005DDE  0100               	movlb	0	; () banked
 29087  005DE0  C080  F046         	movff	fatfs_fat_add_cluster_to_chain@fs,fatfs_find_next_cluster@fs
 29088  005DE4  C08E  F048         	movff	fatfs_fat_add_cluster_to_chain@next_cluster,fatfs_find_next_cluster@current_clust
      +                          er
 29089  005DE8  C08F  F049         	movff	fatfs_fat_add_cluster_to_chain@next_cluster+1,fatfs_find_next_cluster@current_clu
      +                          ster+1
 29090  005DEC  C090  F04A         	movff	fatfs_fat_add_cluster_to_chain@next_cluster+2,fatfs_find_next_cluster@current_clu
      +                          ster+2
 29091  005DF0  C091  F04B         	movff	fatfs_fat_add_cluster_to_chain@next_cluster+3,fatfs_find_next_cluster@current_clu
      +                          ster+3
 29092  005DF4  EC9F  F054         	call	_fatfs_find_next_cluster	;wreg free
 29093  005DF8  C046  F08E         	movff	?_fatfs_find_next_cluster,fatfs_fat_add_cluster_to_chain@next_cluster
 29094  005DFC  C047  F08F         	movff	?_fatfs_find_next_cluster+1,fatfs_fat_add_cluster_to_chain@next_cluster+1
 29095  005E00  C048  F090         	movff	?_fatfs_find_next_cluster+2,fatfs_fat_add_cluster_to_chain@next_cluster+2
 29096  005E04  C049  F091         	movff	?_fatfs_find_next_cluster+3,fatfs_fat_add_cluster_to_chain@next_cluster+3
 29097                           
 29098                           ;fat_table.c: 429: if (!next_cluster)
 29099  005E08  0100               	movlb	0	; () banked
 29100  005E0A  5191               	movf	(fatfs_fat_add_cluster_to_chain@next_cluster+3)& (0+255),w,b
 29101  005E0C  118E               	iorwf	fatfs_fat_add_cluster_to_chain@next_cluster& (0+255),w,b
 29102  005E0E  118F               	iorwf	(fatfs_fat_add_cluster_to_chain@next_cluster+1)& (0+255),w,b
 29103  005E10  1190               	iorwf	(fatfs_fat_add_cluster_to_chain@next_cluster+2)& (0+255),w,b
 29104  005E12                     L96:
 29105  005E12  E104               	bnz	l9529
 29106                           
 29107                           ; BSR set to: 0
 29108                           ;fat_table.c: 430: return 0;
 29109  005E14  0E00               	movlw	0
 29110  005E16  0100               	movlb	0	; () banked
 29111  005E18  6F81               	movwf	(?_fatfs_fat_add_cluster_to_chain+1)& (0+255),b
 29112  005E1A  D037               	goto	L95
 29113  005E1C                     l9529:
 29114                           
 29115                           ; BSR set to: 0
 29116  005E1C  0100               	movlb	0	; () banked
 29117  005E1E  298E               	incf	fatfs_fat_add_cluster_to_chain@next_cluster& (0+255),w,b
 29118  005E20  B4D8               	btfsc	status,2,c
 29119  005E22  298F               	incf	(fatfs_fat_add_cluster_to_chain@next_cluster+1)& (0+255),w,b
 29120  005E24  B4D8               	btfsc	status,2,c
 29121  005E26  2990               	incf	(fatfs_fat_add_cluster_to_chain@next_cluster+2)& (0+255),w,b
 29122  005E28  B4D8               	btfsc	status,2,c
 29123  005E2A  2991               	incf	(fatfs_fat_add_cluster_to_chain@next_cluster+3)& (0+255),w,b
 29124  005E2C  E1CE               	bnz	l1274
 29125                           
 29126                           ; BSR set to: 0
 29127                           ;fat_table.c: 431: }
 29128                           ;fat_table.c: 434: fatfs_fat_set_cluster(fs, last_cluster, newEntry);
 29129                           
 29130                           ; BSR set to: 0
 29131  005E2E  C081  F047         	movff	fatfs_fat_add_cluster_to_chain@fs+1,fatfs_fat_set_cluster@fs+1
 29132  005E32  C080  F046         	movff	fatfs_fat_add_cluster_to_chain@fs,fatfs_fat_set_cluster@fs
 29133  005E36  C08A  F048         	movff	fatfs_fat_add_cluster_to_chain@last_cluster,fatfs_fat_set_cluster@cluster
 29134  005E3A  C08B  F049         	movff	fatfs_fat_add_cluster_to_chain@last_cluster+1,fatfs_fat_set_cluster@cluster+1
 29135  005E3E  C08C  F04A         	movff	fatfs_fat_add_cluster_to_chain@last_cluster+2,fatfs_fat_set_cluster@cluster+2
 29136  005E42  C08D  F04B         	movff	fatfs_fat_add_cluster_to_chain@last_cluster+3,fatfs_fat_set_cluster@cluster+3
 29137  005E46  C086  F04C         	movff	fatfs_fat_add_cluster_to_chain@newEntry,fatfs_fat_set_cluster@next_cluster
 29138  005E4A  C087  F04D         	movff	fatfs_fat_add_cluster_to_chain@newEntry+1,fatfs_fat_set_cluster@next_cluster+1
 29139  005E4E  C088  F04E         	movff	fatfs_fat_add_cluster_to_chain@newEntry+2,fatfs_fat_set_cluster@next_cluster+2
 29140  005E52  C089  F04F         	movff	fatfs_fat_add_cluster_to_chain@newEntry+3,fatfs_fat_set_cluster@next_cluster+3
 29141  005E56  EC18  F047         	call	_fatfs_fat_set_cluster	;wreg free
 29142                           
 29143                           ;fat_table.c: 437: fatfs_fat_set_cluster(fs, newEntry, 0xFFFFFFFF);
 29144  005E5A  C081  F047         	movff	fatfs_fat_add_cluster_to_chain@fs+1,fatfs_fat_set_cluster@fs+1
 29145  005E5E  0100               	movlb	0	; () banked
 29146  005E60  C080  F046         	movff	fatfs_fat_add_cluster_to_chain@fs,fatfs_fat_set_cluster@fs
 29147  005E64  C086  F048         	movff	fatfs_fat_add_cluster_to_chain@newEntry,fatfs_fat_set_cluster@cluster
 29148  005E68  C087  F049         	movff	fatfs_fat_add_cluster_to_chain@newEntry+1,fatfs_fat_set_cluster@cluster+1
 29149  005E6C  C088  F04A         	movff	fatfs_fat_add_cluster_to_chain@newEntry+2,fatfs_fat_set_cluster@cluster+2
 29150  005E70  C089  F04B         	movff	fatfs_fat_add_cluster_to_chain@newEntry+3,fatfs_fat_set_cluster@cluster+3
 29151  005E74  0EFF               	movlw	255
 29152  005E76  684C               	setf	fatfs_fat_set_cluster@next_cluster,c
 29153  005E78  684D               	setf	fatfs_fat_set_cluster@next_cluster+1,c
 29154  005E7A  684E               	setf	fatfs_fat_set_cluster@next_cluster+2,c
 29155  005E7C  684F               	setf	fatfs_fat_set_cluster@next_cluster+3,c
 29156  005E7E  EC18  F047         	call	_fatfs_fat_set_cluster	;wreg free
 29157                           
 29158                           ;fat_table.c: 439: return 1;
 29159  005E82  0E00               	movlw	0
 29160  005E84  0100               	movlb	0	; () banked
 29161  005E86  6F81               	movwf	(?_fatfs_fat_add_cluster_to_chain+1)& (0+255),b
 29162  005E88  0E01               	movlw	1
 29163  005E8A                     L95:
 29164  005E8A  0100               	movlb	0	; () banked
 29165  005E8C  6F80               	movwf	?_fatfs_fat_add_cluster_to_chain& (0+255),b
 29166                           
 29167                           ; BSR set to: 0
 29168                           
 29169                           ; BSR set to: 0
 29170  005E8E  0012               	return	
 29171  005E90                     __end_of_fatfs_fat_add_cluster_to_chain:
 29172                           	opt stack 0
 29173                           tosu	equ	0xFFF
 29174                           tosh	equ	0xFFE
 29175                           tosl	equ	0xFFD
 29176                           pclath	equ	0xFFA
 29177                           tblptru	equ	0xFF8
 29178                           tblptrh	equ	0xFF7
 29179                           tblptrl	equ	0xFF6
 29180                           tablat	equ	0xFF5
 29181                           prodh	equ	0xFF4
 29182                           prodl	equ	0xFF3
 29183                           indf0	equ	0xFEF
 29184                           postinc0	equ	0xFEE
 29185                           fsr0h	equ	0xFEA
 29186                           fsr0l	equ	0xFE9
 29187                           wreg	equ	0xFE8
 29188                           indf1	equ	0xFE7
 29189                           postinc1	equ	0xFE6
 29190                           postdec1	equ	0xFE5
 29191                           fsr1h	equ	0xFE2
 29192                           fsr1l	equ	0xFE1
 29193                           indf2	equ	0xFDF
 29194                           postinc2	equ	0xFDE
 29195                           postdec2	equ	0xFDD
 29196                           fsr2h	equ	0xFDA
 29197                           fsr2l	equ	0xFD9
 29198                           status	equ	0xFD8
 29199                           
 29200 ;; *************** function _fatfs_fat_set_cluster *****************
 29201 ;; Defined at:
 29202 ;;		line 349 in file "fat_table.c"
 29203 ;; Parameters:    Size  Location     Type
 29204 ;;  fs              2   69[COMRAM] PTR struct fatfs
 29205 ;;		 -> _fs(1095), 
 29206 ;;  cluster         4   71[COMRAM] unsigned long 
 29207 ;;  next_cluster    4   75[COMRAM] unsigned long 
 29208 ;; Auto vars:     Size  Location     Type
 29209 ;;  position        4   91[COMRAM] unsigned long 
 29210 ;;  fat_sector_o    4   87[COMRAM] unsigned long 
 29211 ;;  pbuf            2   95[COMRAM] PTR struct fat_buffer
 29212 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 29213 ;;		 -> NULL(0), 
 29214 ;; Return value:  Size  Location     Type
 29215 ;;                  2   69[COMRAM] int 
 29216 ;; Registers used:
 29217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 29218 ;; Tracked objects:
 29219 ;;		On entry : 0/0
 29220 ;;		On exit  : 0/0
 29221 ;;		Unchanged: 0/0
 29222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29223 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29224 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29225 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29226 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29227 ;;Total ram usage:       28 bytes
 29228 ;; Hardware stack levels used:    1
 29229 ;; Hardware stack levels required when called:    5
 29230 ;; This function calls:
 29231 ;;		_fatfs_fat_read_sector
 29232 ;; This function is called by:
 29233 ;;		_fatfs_free_cluster_chain
 29234 ;;		_fatfs_fat_add_cluster_to_chain
 29235 ;;		_fatfs_add_free_space
 29236 ;;		_fatfs_allocate_free_space
 29237 ;; This function uses a non-reentrant model
 29238 ;;
 29239                           
 29240                           	psect	text84
 29241  008E30                     __ptext84:
 29242                           	opt stack 0
 29243  008E30                     _fatfs_fat_set_cluster:
 29244                           	opt stack 19
 29245                           
 29246                           ;fat_table.c: 351: struct fat_buffer *pbuf;
 29247                           ;fat_table.c: 352: uint32 fat_sector_offset, position;
 29248                           ;fat_table.c: 355: if (fs->fat_type == FAT_TYPE_16)
 29249                           
 29250                           ; BSR set to: 0
 29251                           ;incstack = 0
 29252  008E30  EE20 F028          	lfsr	2,40
 29253  008E34  5046               	movf	fatfs_fat_set_cluster@fs,w,c
 29254  008E36  26D9               	addwf	fsr2l,f,c
 29255  008E38  5047               	movf	fatfs_fat_set_cluster@fs+1,w,c
 29256  008E3A  22DA               	addwfc	fsr2h,f,c
 29257  008E3C  50DF               	movf	indf2,w,c
 29258  008E3E  E110               	bnz	l8937
 29259                           
 29260                           ;fat_table.c: 356: fat_sector_offset = cluster / 256;
 29261  008E40  C048  F050         	movff	fatfs_fat_set_cluster@cluster,??_fatfs_fat_set_cluster
 29262  008E44  C049  F051         	movff	fatfs_fat_set_cluster@cluster+1,??_fatfs_fat_set_cluster+1
 29263  008E48  C04A  F052         	movff	fatfs_fat_set_cluster@cluster+2,??_fatfs_fat_set_cluster+2
 29264  008E4C  C04B  F053         	movff	fatfs_fat_set_cluster@cluster+3,??_fatfs_fat_set_cluster+3
 29265  008E50  C051  F050         	movff	??_fatfs_fat_set_cluster+1,??_fatfs_fat_set_cluster
 29266  008E54  C052  F051         	movff	??_fatfs_fat_set_cluster+2,??_fatfs_fat_set_cluster+1
 29267  008E58  C053  F052         	movff	??_fatfs_fat_set_cluster+3,??_fatfs_fat_set_cluster+2
 29268  008E5C  6A53               	clrf	??_fatfs_fat_set_cluster+3,c
 29269  008E5E  D011               	goto	L97
 29270  008E60                     l8937:
 29271                           
 29272                           ;fat_table.c: 357: else
 29273                           ;fat_table.c: 358: fat_sector_offset = cluster / 128;
 29274  008E60  C048  F050         	movff	fatfs_fat_set_cluster@cluster,??_fatfs_fat_set_cluster
 29275  008E64  C049  F051         	movff	fatfs_fat_set_cluster@cluster+1,??_fatfs_fat_set_cluster+1
 29276  008E68  C04A  F052         	movff	fatfs_fat_set_cluster@cluster+2,??_fatfs_fat_set_cluster+2
 29277  008E6C  C04B  F053         	movff	fatfs_fat_set_cluster@cluster+3,??_fatfs_fat_set_cluster+3
 29278  008E70  0E08               	movlw	8
 29279  008E72  D005               	goto	u9450
 29280  008E74                     u9455:
 29281  008E74  90D8               	bcf	status,0,c
 29282  008E76  3253               	rrcf	??_fatfs_fat_set_cluster+3,f,c
 29283  008E78  3252               	rrcf	??_fatfs_fat_set_cluster+2,f,c
 29284  008E7A  3251               	rrcf	??_fatfs_fat_set_cluster+1,f,c
 29285  008E7C  3250               	rrcf	??_fatfs_fat_set_cluster,f,c
 29286  008E7E                     u9450:
 29287  008E7E  2EE8               	decfsz	wreg,f,c
 29288  008E80  D7F9               	goto	u9455
 29289  008E82                     L97:
 29290  008E82  C050  F058         	movff	??_fatfs_fat_set_cluster,fatfs_fat_set_cluster@fat_sector_offset
 29291  008E86  C051  F059         	movff	??_fatfs_fat_set_cluster+1,fatfs_fat_set_cluster@fat_sector_offset+1
 29292  008E8A  C052  F05A         	movff	??_fatfs_fat_set_cluster+2,fatfs_fat_set_cluster@fat_sector_offset+2
 29293  008E8E  C053  F05B         	movff	??_fatfs_fat_set_cluster+3,fatfs_fat_set_cluster@fat_sector_offset+3
 29294                           
 29295                           ;fat_table.c: 361: pbuf = fatfs_fat_read_sector(fs, fs->fat_begin_lba+fat_sector_offset)
      +                          ;
 29296  008E92  C047  F035         	movff	fatfs_fat_set_cluster@fs+1,fatfs_fat_read_sector@fs+1
 29297  008E96  C046  F034         	movff	fatfs_fat_set_cluster@fs,fatfs_fat_read_sector@fs
 29298  008E9A  EE20 F011          	lfsr	2,17
 29299  008E9E  5046               	movf	fatfs_fat_set_cluster@fs,w,c
 29300  008EA0  26D9               	addwf	fsr2l,f,c
 29301  008EA2  5047               	movf	fatfs_fat_set_cluster@fs+1,w,c
 29302  008EA4  22DA               	addwfc	fsr2h,f,c
 29303  008EA6  CFDE F050          	movff	postinc2,??_fatfs_fat_set_cluster
 29304  008EAA  CFDE F051          	movff	postinc2,??_fatfs_fat_set_cluster+1
 29305  008EAE  CFDE F052          	movff	postinc2,??_fatfs_fat_set_cluster+2
 29306  008EB2  CFDE F053          	movff	postinc2,??_fatfs_fat_set_cluster+3
 29307  008EB6  5058               	movf	fatfs_fat_set_cluster@fat_sector_offset,w,c
 29308  008EB8  2450               	addwf	??_fatfs_fat_set_cluster,w,c
 29309  008EBA  6E36               	movwf	fatfs_fat_read_sector@sector,c
 29310  008EBC  5059               	movf	fatfs_fat_set_cluster@fat_sector_offset+1,w,c
 29311  008EBE  2051               	addwfc	??_fatfs_fat_set_cluster+1,w,c
 29312  008EC0  6E37               	movwf	fatfs_fat_read_sector@sector+1,c
 29313  008EC2  505A               	movf	fatfs_fat_set_cluster@fat_sector_offset+2,w,c
 29314  008EC4  2052               	addwfc	??_fatfs_fat_set_cluster+2,w,c
 29315  008EC6  6E38               	movwf	fatfs_fat_read_sector@sector+2,c
 29316  008EC8  505B               	movf	fatfs_fat_set_cluster@fat_sector_offset+3,w,c
 29317  008ECA  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29318  008ECC  6E39               	movwf	fatfs_fat_read_sector@sector+3,c
 29319  008ECE  EC82  F043         	call	_fatfs_fat_read_sector	;wreg free
 29320  008ED2  C034  F060         	movff	?_fatfs_fat_read_sector,fatfs_fat_set_cluster@pbuf
 29321  008ED6  C035  F061         	movff	?_fatfs_fat_read_sector+1,fatfs_fat_set_cluster@pbuf+1
 29322                           
 29323                           ;fat_table.c: 362: if (!pbuf)
 29324  008EDA  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29325  008EDC  1060               	iorwf	fatfs_fat_set_cluster@pbuf,w,c
 29326  008EDE  E101 D0F4          	bz	l1258
 29327                           
 29328                           ;fat_table.c: 365: if (fs->fat_type == FAT_TYPE_16)
 29329                           
 29330                           ;fat_table.c: 363: return 0;
 29331                           ;	Return value of _fatfs_fat_set_cluster is never used
 29332  008EE2  EE20 F028          	lfsr	2,40
 29333  008EE6  5046               	movf	fatfs_fat_set_cluster@fs,w,c
 29334  008EE8  26D9               	addwf	fsr2l,f,c
 29335  008EEA  5047               	movf	fatfs_fat_set_cluster@fs+1,w,c
 29336  008EEC  22DA               	addwfc	fsr2h,f,c
 29337  008EEE  50DF               	movf	indf2,w,c
 29338  008EF0  E154               	bnz	l8955
 29339                           
 29340                           ;fat_table.c: 366: {
 29341                           ;fat_table.c: 368: position = (cluster - (fat_sector_offset * 256)) * 2;
 29342  008EF2  C058  F051         	movff	fatfs_fat_set_cluster@fat_sector_offset,??_fatfs_fat_set_cluster+1
 29343  008EF6  C059  F052         	movff	fatfs_fat_set_cluster@fat_sector_offset+1,??_fatfs_fat_set_cluster+2
 29344  008EFA  C05A  F053         	movff	fatfs_fat_set_cluster@fat_sector_offset+2,??_fatfs_fat_set_cluster+3
 29345  008EFE  6A50               	clrf	??_fatfs_fat_set_cluster& (0+255),c
 29346  008F00  1E50               	comf	??_fatfs_fat_set_cluster,f,c
 29347  008F02  1E51               	comf	??_fatfs_fat_set_cluster+1,f,c
 29348  008F04  1E52               	comf	??_fatfs_fat_set_cluster+2,f,c
 29349  008F06  1E53               	comf	??_fatfs_fat_set_cluster+3,f,c
 29350  008F08  2A50               	incf	??_fatfs_fat_set_cluster,f,c
 29351  008F0A  0E00               	movlw	0
 29352  008F0C  2251               	addwfc	??_fatfs_fat_set_cluster+1,f,c
 29353  008F0E  2252               	addwfc	??_fatfs_fat_set_cluster+2,f,c
 29354  008F10  2253               	addwfc	??_fatfs_fat_set_cluster+3,f,c
 29355  008F12  5048               	movf	fatfs_fat_set_cluster@cluster,w,c
 29356  008F14  2450               	addwf	??_fatfs_fat_set_cluster,w,c
 29357  008F16  6E54               	movwf	(??_fatfs_fat_set_cluster+4)& (0+255),c
 29358  008F18  5049               	movf	fatfs_fat_set_cluster@cluster+1,w,c
 29359  008F1A  2051               	addwfc	??_fatfs_fat_set_cluster+1,w,c
 29360  008F1C  6E55               	movwf	(??_fatfs_fat_set_cluster+5)& (0+255),c
 29361  008F1E  504A               	movf	fatfs_fat_set_cluster@cluster+2,w,c
 29362  008F20  2052               	addwfc	??_fatfs_fat_set_cluster+2,w,c
 29363  008F22  6E56               	movwf	(??_fatfs_fat_set_cluster+6)& (0+255),c
 29364  008F24  504B               	movf	fatfs_fat_set_cluster@cluster+3,w,c
 29365  008F26  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29366  008F28  6E57               	movwf	(??_fatfs_fat_set_cluster+7)& (0+255),c
 29367  008F2A  90D8               	bcf	status,0,c
 29368  008F2C  3454               	rlcf	??_fatfs_fat_set_cluster+4,w,c
 29369  008F2E  6E5C               	movwf	fatfs_fat_set_cluster@position,c
 29370  008F30  3455               	rlcf	??_fatfs_fat_set_cluster+5,w,c
 29371  008F32  6E5D               	movwf	fatfs_fat_set_cluster@position+1,c
 29372  008F34  3456               	rlcf	??_fatfs_fat_set_cluster+6,w,c
 29373  008F36  6E5E               	movwf	fatfs_fat_set_cluster@position+2,c
 29374  008F38  3457               	rlcf	??_fatfs_fat_set_cluster+7,w,c
 29375  008F3A  6E5F               	movwf	fatfs_fat_set_cluster@position+3,c
 29376                           
 29377                           ;fat_table.c: 371: { { pbuf->ptr[(uint16)position+0] = (uint8)((((uint16)next_cluster))&
      +                          0xFF); pbuf->ptr[(uint16)position+1] = (uint8)((((uint16)next_cluster)>>8)&0xFF); }; pbu
      +                          f->dirty = 1; };
 29378  008F3C  EE22 F006          	lfsr	2,518
 29379  008F40  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29380  008F42  26D9               	addwf	fsr2l,f,c
 29381  008F44  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29382  008F46  22DA               	addwfc	fsr2h,f,c
 29383  008F48  CFDE F050          	movff	postinc2,??_fatfs_fat_set_cluster
 29384  008F4C  CFDD F051          	movff	postdec2,??_fatfs_fat_set_cluster+1
 29385  008F50  505C               	movf	fatfs_fat_set_cluster@position,w,c
 29386  008F52  2450               	addwf	??_fatfs_fat_set_cluster,w,c
 29387  008F54  6ED9               	movwf	fsr2l,c
 29388  008F56  505D               	movf	fatfs_fat_set_cluster@position+1,w,c
 29389  008F58  2051               	addwfc	??_fatfs_fat_set_cluster+1,w,c
 29390  008F5A  6EDA               	movwf	fsr2h,c
 29391  008F5C  C04C  FFDF         	movff	fatfs_fat_set_cluster@next_cluster,indf2
 29392  008F60  285C               	incf	fatfs_fat_set_cluster@position,w,c
 29393  008F62  6E50               	movwf	??_fatfs_fat_set_cluster& (0+255),c
 29394  008F64  0E00               	movlw	0
 29395  008F66  205D               	addwfc	fatfs_fat_set_cluster@position+1,w,c
 29396  008F68  6E51               	movwf	(??_fatfs_fat_set_cluster+1)& (0+255),c
 29397  008F6A  EE22 F006          	lfsr	2,518
 29398  008F6E  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29399  008F70  26D9               	addwf	fsr2l,f,c
 29400  008F72  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29401  008F74  22DA               	addwfc	fsr2h,f,c
 29402  008F76  CFDE F052          	movff	postinc2,??_fatfs_fat_set_cluster+2
 29403  008F7A  CFDD F053          	movff	postdec2,??_fatfs_fat_set_cluster+3
 29404  008F7E  5050               	movf	??_fatfs_fat_set_cluster,w,c
 29405  008F80  2452               	addwf	??_fatfs_fat_set_cluster+2,w,c
 29406  008F82  6ED9               	movwf	fsr2l,c
 29407  008F84  5051               	movf	??_fatfs_fat_set_cluster+1,w,c
 29408  008F86  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29409  008F88  6EDA               	movwf	fsr2h,c
 29410  008F8A  C04D  F054         	movff	fatfs_fat_set_cluster@next_cluster+1,??_fatfs_fat_set_cluster+4
 29411  008F8E  C054  F055         	movff	??_fatfs_fat_set_cluster+4,??_fatfs_fat_set_cluster+5
 29412  008F92  6A56               	clrf	(??_fatfs_fat_set_cluster+6)& (0+255),c
 29413  008F94  5055               	movf	??_fatfs_fat_set_cluster+5,w,c
 29414  008F96  6EDF               	movwf	indf2,c
 29415  008F98  D08E               	goto	L98
 29416  008F9A                     l8955:
 29417                           
 29418                           ;fat_table.c: 373: else
 29419                           ;fat_table.c: 374: {
 29420                           ;fat_table.c: 376: position = (cluster - (fat_sector_offset * 128)) * 4;
 29421  008F9A  C058  F050         	movff	fatfs_fat_set_cluster@fat_sector_offset,??_fatfs_fat_set_cluster
 29422  008F9E  C059  F051         	movff	fatfs_fat_set_cluster@fat_sector_offset+1,??_fatfs_fat_set_cluster+1
 29423  008FA2  C05A  F052         	movff	fatfs_fat_set_cluster@fat_sector_offset+2,??_fatfs_fat_set_cluster+2
 29424  008FA6  C05B  F053         	movff	fatfs_fat_set_cluster@fat_sector_offset+3,??_fatfs_fat_set_cluster+3
 29425  008FAA  0E07               	movlw	7
 29426  008FAC                     u9485:
 29427  008FAC  90D8               	bcf	status,0,c
 29428  008FAE  3650               	rlcf	??_fatfs_fat_set_cluster,f,c
 29429  008FB0  3651               	rlcf	??_fatfs_fat_set_cluster+1,f,c
 29430  008FB2  3652               	rlcf	??_fatfs_fat_set_cluster+2,f,c
 29431  008FB4  3653               	rlcf	??_fatfs_fat_set_cluster+3,f,c
 29432  008FB6  2EE8               	decfsz	wreg,f,c
 29433  008FB8  D7F9               	goto	u9485
 29434  008FBA  1E50               	comf	??_fatfs_fat_set_cluster,f,c
 29435  008FBC  1E51               	comf	??_fatfs_fat_set_cluster+1,f,c
 29436  008FBE  1E52               	comf	??_fatfs_fat_set_cluster+2,f,c
 29437  008FC0  1E53               	comf	??_fatfs_fat_set_cluster+3,f,c
 29438  008FC2  2A50               	incf	??_fatfs_fat_set_cluster,f,c
 29439  008FC4  0E00               	movlw	0
 29440  008FC6  2251               	addwfc	??_fatfs_fat_set_cluster+1,f,c
 29441  008FC8  2252               	addwfc	??_fatfs_fat_set_cluster+2,f,c
 29442  008FCA  2253               	addwfc	??_fatfs_fat_set_cluster+3,f,c
 29443  008FCC  5048               	movf	fatfs_fat_set_cluster@cluster,w,c
 29444  008FCE  2450               	addwf	??_fatfs_fat_set_cluster,w,c
 29445  008FD0  6E54               	movwf	(??_fatfs_fat_set_cluster+4)& (0+255),c
 29446  008FD2  5049               	movf	fatfs_fat_set_cluster@cluster+1,w,c
 29447  008FD4  2051               	addwfc	??_fatfs_fat_set_cluster+1,w,c
 29448  008FD6  6E55               	movwf	(??_fatfs_fat_set_cluster+5)& (0+255),c
 29449  008FD8  504A               	movf	fatfs_fat_set_cluster@cluster+2,w,c
 29450  008FDA  2052               	addwfc	??_fatfs_fat_set_cluster+2,w,c
 29451  008FDC  6E56               	movwf	(??_fatfs_fat_set_cluster+6)& (0+255),c
 29452  008FDE  504B               	movf	fatfs_fat_set_cluster@cluster+3,w,c
 29453  008FE0  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29454  008FE2  6E57               	movwf	(??_fatfs_fat_set_cluster+7)& (0+255),c
 29455  008FE4  0E02               	movlw	2
 29456  008FE6                     u9495:
 29457  008FE6  90D8               	bcf	status,0,c
 29458  008FE8  3654               	rlcf	??_fatfs_fat_set_cluster+4,f,c
 29459  008FEA  3655               	rlcf	??_fatfs_fat_set_cluster+5,f,c
 29460  008FEC  3656               	rlcf	??_fatfs_fat_set_cluster+6,f,c
 29461  008FEE  3657               	rlcf	??_fatfs_fat_set_cluster+7,f,c
 29462  008FF0  2EE8               	decfsz	wreg,f,c
 29463  008FF2  D7F9               	goto	u9495
 29464  008FF4  C054  F05C         	movff	??_fatfs_fat_set_cluster+4,fatfs_fat_set_cluster@position
 29465  008FF8  C055  F05D         	movff	??_fatfs_fat_set_cluster+5,fatfs_fat_set_cluster@position+1
 29466  008FFC  C056  F05E         	movff	??_fatfs_fat_set_cluster+6,fatfs_fat_set_cluster@position+2
 29467  009000  C057  F05F         	movff	??_fatfs_fat_set_cluster+7,fatfs_fat_set_cluster@position+3
 29468                           
 29469                           ;fat_table.c: 379: { { pbuf->ptr[(uint16)position+0] = (uint8)((next_cluster)&0xFF); pbu
      +                          f->ptr[(uint16)position+1] = (uint8)((next_cluster>>8)&0xFF); pbuf->ptr[(uint16)position
      +                          +2] = (uint8)((next_cluster>>16)&0xFF); pbuf->ptr[(uint16)position+3] = (uint8)((next_cl
      +                          uster
 29470  009004  EE22 F006          	lfsr	2,518
 29471  009008  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29472  00900A  26D9               	addwf	fsr2l,f,c
 29473  00900C  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29474  00900E  22DA               	addwfc	fsr2h,f,c
 29475  009010  CFDE F050          	movff	postinc2,??_fatfs_fat_set_cluster
 29476  009014  CFDD F051          	movff	postdec2,??_fatfs_fat_set_cluster+1
 29477  009018  505C               	movf	fatfs_fat_set_cluster@position,w,c
 29478  00901A  2450               	addwf	??_fatfs_fat_set_cluster,w,c
 29479  00901C  6ED9               	movwf	fsr2l,c
 29480  00901E  505D               	movf	fatfs_fat_set_cluster@position+1,w,c
 29481  009020  2051               	addwfc	??_fatfs_fat_set_cluster+1,w,c
 29482  009022  6EDA               	movwf	fsr2h,c
 29483  009024  C04C  FFDF         	movff	fatfs_fat_set_cluster@next_cluster,indf2
 29484  009028  285C               	incf	fatfs_fat_set_cluster@position,w,c
 29485  00902A  6E50               	movwf	??_fatfs_fat_set_cluster& (0+255),c
 29486  00902C  0E00               	movlw	0
 29487  00902E  205D               	addwfc	fatfs_fat_set_cluster@position+1,w,c
 29488  009030  6E51               	movwf	(??_fatfs_fat_set_cluster+1)& (0+255),c
 29489  009032  EE22 F006          	lfsr	2,518
 29490  009036  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29491  009038  26D9               	addwf	fsr2l,f,c
 29492  00903A  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29493  00903C  22DA               	addwfc	fsr2h,f,c
 29494  00903E  CFDE F052          	movff	postinc2,??_fatfs_fat_set_cluster+2
 29495  009042  CFDD F053          	movff	postdec2,??_fatfs_fat_set_cluster+3
 29496  009046  5050               	movf	??_fatfs_fat_set_cluster,w,c
 29497  009048  2452               	addwf	??_fatfs_fat_set_cluster+2,w,c
 29498  00904A  6ED9               	movwf	fsr2l,c
 29499  00904C  5051               	movf	??_fatfs_fat_set_cluster+1,w,c
 29500  00904E  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29501  009050  6EDA               	movwf	fsr2h,c
 29502  009052  C04D  FFDF         	movff	fatfs_fat_set_cluster@next_cluster+1,indf2
 29503  009056  0E02               	movlw	2
 29504  009058  245C               	addwf	fatfs_fat_set_cluster@position,w,c
 29505  00905A  6E50               	movwf	??_fatfs_fat_set_cluster& (0+255),c
 29506  00905C  0E00               	movlw	0
 29507  00905E  205D               	addwfc	fatfs_fat_set_cluster@position+1,w,c
 29508  009060  6E51               	movwf	(??_fatfs_fat_set_cluster+1)& (0+255),c
 29509  009062  EE22 F006          	lfsr	2,518
 29510  009066  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29511  009068  26D9               	addwf	fsr2l,f,c
 29512  00906A  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29513  00906C  22DA               	addwfc	fsr2h,f,c
 29514  00906E  CFDE F052          	movff	postinc2,??_fatfs_fat_set_cluster+2
 29515  009072  CFDD F053          	movff	postdec2,??_fatfs_fat_set_cluster+3
 29516  009076  5050               	movf	??_fatfs_fat_set_cluster,w,c
 29517  009078  2452               	addwf	??_fatfs_fat_set_cluster+2,w,c
 29518  00907A  6ED9               	movwf	fsr2l,c
 29519  00907C  5051               	movf	??_fatfs_fat_set_cluster+1,w,c
 29520  00907E  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29521  009080  6EDA               	movwf	fsr2h,c
 29522  009082  C04E  FFDF         	movff	fatfs_fat_set_cluster@next_cluster+2,indf2
 29523  009086  0E03               	movlw	3
 29524  009088  245C               	addwf	fatfs_fat_set_cluster@position,w,c
 29525  00908A  6E50               	movwf	??_fatfs_fat_set_cluster& (0+255),c
 29526  00908C  0E00               	movlw	0
 29527  00908E  205D               	addwfc	fatfs_fat_set_cluster@position+1,w,c
 29528  009090  6E51               	movwf	(??_fatfs_fat_set_cluster+1)& (0+255),c
 29529  009092  EE22 F006          	lfsr	2,518
 29530  009096  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29531  009098  26D9               	addwf	fsr2l,f,c
 29532  00909A  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29533  00909C  22DA               	addwfc	fsr2h,f,c
 29534  00909E  CFDE F052          	movff	postinc2,??_fatfs_fat_set_cluster+2
 29535  0090A2  CFDD F053          	movff	postdec2,??_fatfs_fat_set_cluster+3
 29536  0090A6  5050               	movf	??_fatfs_fat_set_cluster,w,c
 29537  0090A8  2452               	addwf	??_fatfs_fat_set_cluster+2,w,c
 29538  0090AA  6ED9               	movwf	fsr2l,c
 29539  0090AC  5051               	movf	??_fatfs_fat_set_cluster+1,w,c
 29540  0090AE  2053               	addwfc	??_fatfs_fat_set_cluster+3,w,c
 29541  0090B0  6EDA               	movwf	fsr2h,c
 29542  0090B2  C04F  FFDF         	movff	fatfs_fat_set_cluster@next_cluster+3,indf2
 29543  0090B6                     L98:
 29544  0090B6  EE22 F004          	lfsr	2,516
 29545  0090BA  5060               	movf	fatfs_fat_set_cluster@pbuf,w,c
 29546  0090BC  26D9               	addwf	fsr2l,f,c
 29547  0090BE  5061               	movf	fatfs_fat_set_cluster@pbuf+1,w,c
 29548  0090C0  22DA               	addwfc	fsr2h,f,c
 29549  0090C2  0E01               	movlw	1
 29550  0090C4  6EDE               	movwf	postinc2,c
 29551  0090C6  0E00               	movlw	0
 29552  0090C8  6EDD               	movwf	postdec2,c
 29553  0090CA                     l1258:
 29554  0090CA  0012               	return	
 29555  0090CC                     __end_of_fatfs_fat_set_cluster:
 29556                           	opt stack 0
 29557                           tosu	equ	0xFFF
 29558                           tosh	equ	0xFFE
 29559                           tosl	equ	0xFFD
 29560                           pclath	equ	0xFFA
 29561                           tblptru	equ	0xFF8
 29562                           tblptrh	equ	0xFF7
 29563                           tblptrl	equ	0xFF6
 29564                           tablat	equ	0xFF5
 29565                           prodh	equ	0xFF4
 29566                           prodl	equ	0xFF3
 29567                           indf0	equ	0xFEF
 29568                           postinc0	equ	0xFEE
 29569                           fsr0h	equ	0xFEA
 29570                           fsr0l	equ	0xFE9
 29571                           wreg	equ	0xFE8
 29572                           indf1	equ	0xFE7
 29573                           postinc1	equ	0xFE6
 29574                           postdec1	equ	0xFE5
 29575                           fsr1h	equ	0xFE2
 29576                           fsr1l	equ	0xFE1
 29577                           indf2	equ	0xFDF
 29578                           postinc2	equ	0xFDE
 29579                           postdec2	equ	0xFDD
 29580                           fsr2h	equ	0xFDA
 29581                           fsr2l	equ	0xFD9
 29582                           status	equ	0xFD8
 29583                           
 29584 ;; *************** function _fatfs_filename_to_lfn *****************
 29585 ;; Defined at:
 29586 ;;		line 207 in file "fat_misc.c"
 29587 ;; Parameters:    Size  Location     Type
 29588 ;;  filename        2   12[COMRAM] PTR unsigned char 
 29589 ;;		 -> RAM(3967), NULL(0), 
 29590 ;;  buffer          2   14[COMRAM] PTR unsigned char 
 29591 ;;		 -> _fs.currentsector.sector(512), 
 29592 ;;  entry           2   16[COMRAM] int 
 29593 ;;  sfnChk          1   18[COMRAM] unsigned char 
 29594 ;; Auto vars:     Size  Location     Type
 29595 ;;  nameIndexes    10   25[COMRAM] int [5]
 29596 ;;  i               2   43[COMRAM] int 
 29597 ;;  start           2   41[COMRAM] int 
 29598 ;;  length          2   39[COMRAM] int 
 29599 ;;  entriesRequi    2   35[COMRAM] int 
 29600 ;; Return value:  Size  Location     Type
 29601 ;;		None               void
 29602 ;; Registers used:
 29603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29604 ;; Tracked objects:
 29605 ;;		On entry : 0/0
 29606 ;;		On exit  : 0/0
 29607 ;;		Unchanged: 0/0
 29608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29609 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29610 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29611 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29612 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29613 ;;Total ram usage:       33 bytes
 29614 ;; Hardware stack levels used:    1
 29615 ;; Hardware stack levels required when called:    2
 29616 ;; This function calls:
 29617 ;;		_fatfs_lfn_entries_required
 29618 ;;		_memset
 29619 ;;		_strlen
 29620 ;; This function is called by:
 29621 ;;		_fatfs_add_file_entry
 29622 ;; This function uses a non-reentrant model
 29623 ;;
 29624                           
 29625                           	psect	text85
 29626  008094                     __ptext85:
 29627                           	opt stack 0
 29628  008094                     _fatfs_filename_to_lfn:
 29629                           	opt stack 22
 29630                           
 29631                           ;fat_misc.c: 209: int i;
 29632                           ;fat_misc.c: 210: int nameIndexes[5] = {1,3,5,7,9};
 29633                           
 29634                           ;incstack = 0
 29635  008094  EE21  F0DE         	lfsr	2,fatfs_filename_to_lfn@F379
 29636  008098  EE10  F01A         	lfsr	1,fatfs_filename_to_lfn@nameIndexes
 29637  00809C  0E0A               	movlw	10
 29638  00809E                     u11321:
 29639  00809E  CFDE FFE6          	movff	postinc2,postinc1
 29640  0080A2  2EE8               	decfsz	wreg,f,c
 29641  0080A4  D7FC               	goto	u11321
 29642                           
 29643                           ;fat_misc.c: 213: int length = (int)strlen(filename);
 29644  0080A6  C00E  F002         	movff	fatfs_filename_to_lfn@filename+1,strlen@s+1
 29645  0080AA  C00D  F001         	movff	fatfs_filename_to_lfn@filename,strlen@s
 29646  0080AE  EC7B  F022         	call	_strlen	;wreg free
 29647  0080B2  C001  F028         	movff	?_strlen,fatfs_filename_to_lfn@length
 29648  0080B6  C002  F029         	movff	?_strlen+1,fatfs_filename_to_lfn@length+1
 29649                           
 29650                           ;fat_misc.c: 214: int entriesRequired = fatfs_lfn_entries_required(filename);
 29651  0080BA  C00E  F00A         	movff	fatfs_filename_to_lfn@filename+1,fatfs_lfn_entries_required@filename+1
 29652  0080BE  C00D  F009         	movff	fatfs_filename_to_lfn@filename,fatfs_lfn_entries_required@filename
 29653  0080C2  EC4D  F021         	call	_fatfs_lfn_entries_required	;wreg free
 29654  0080C6  C009  F024         	movff	?_fatfs_lfn_entries_required,fatfs_filename_to_lfn@entriesRequired
 29655  0080CA  C00A  F025         	movff	?_fatfs_lfn_entries_required+1,fatfs_filename_to_lfn@entriesRequired+1
 29656                           
 29657                           ;fat_misc.c: 217: int start = entry * 5;
 29658  0080CE  0E05               	movlw	5
 29659  0080D0  0211               	mulwf	fatfs_filename_to_lfn@entry,c
 29660  0080D2  CFF3 F014          	movff	prodl,??_fatfs_filename_to_lfn
 29661  0080D6  CFF4 F015          	movff	prodh,??_fatfs_filename_to_lfn+1
 29662  0080DA  0212               	mulwf	fatfs_filename_to_lfn@entry+1,c
 29663  0080DC  50F3               	movf	243,w,c
 29664  0080DE  2615               	addwf	(??_fatfs_filename_to_lfn+1)& (0+255),f,c
 29665  0080E0  C014  F02A         	movff	??_fatfs_filename_to_lfn,fatfs_filename_to_lfn@start
 29666  0080E4  C015  F02B         	movff	??_fatfs_filename_to_lfn+1,fatfs_filename_to_lfn@start+1
 29667                           
 29668                           ;fat_misc.c: 220: memset(buffer, 0x00, 32);
 29669  0080E8  C010  F002         	movff	fatfs_filename_to_lfn@buffer+1,memset@p1+1
 29670  0080EC  C00F  F001         	movff	fatfs_filename_to_lfn@buffer,memset@p1
 29671  0080F0  6A04               	clrf	memset@c+1,c
 29672  0080F2  6A03               	clrf	memset@c,c
 29673  0080F4  6A06               	clrf	memset@n+1,c
 29674  0080F6  0E20               	movlw	32
 29675  0080F8  6E05               	movwf	memset@n,c
 29676  0080FA  EC24  F020         	call	_memset	;wreg free
 29677                           
 29678                           ;fat_misc.c: 223: buffer[0] = (uint8)(((entriesRequired-1)==entry)?(0x40|(entry+1)):(ent
      +                          ry+1));
 29679  0080FE  6814               	setf	??_fatfs_filename_to_lfn& (0+255),c
 29680  008100  6815               	setf	(??_fatfs_filename_to_lfn+1)& (0+255),c
 29681  008102  C024  F016         	movff	fatfs_filename_to_lfn@entriesRequired,??_fatfs_filename_to_lfn+2
 29682  008106  C025  F017         	movff	fatfs_filename_to_lfn@entriesRequired+1,??_fatfs_filename_to_lfn+3
 29683  00810A  5014               	movf	??_fatfs_filename_to_lfn,w,c
 29684  00810C  2616               	addwf	??_fatfs_filename_to_lfn+2,f,c
 29685  00810E  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29686  008110  2217               	addwfc	??_fatfs_filename_to_lfn+3,f,c
 29687  008112  5012               	movf	fatfs_filename_to_lfn@entry+1,w,c
 29688  008114  1817               	xorwf	??_fatfs_filename_to_lfn+3,w,c
 29689  008116  E102               	bnz	u11335
 29690  008118  5011               	movf	fatfs_filename_to_lfn@entry,w,c
 29691  00811A  1816               	xorwf	??_fatfs_filename_to_lfn+2,w,c
 29692  00811C                     u11335:
 29693  00811C  E005               	bz	l10177
 29694  00811E  2811               	incf	fatfs_filename_to_lfn@entry,w,c
 29695  008120  6E26               	movwf	_fatfs_filename_to_lfn$2422,c
 29696  008122  0E00               	movlw	0
 29697  008124  2012               	addwfc	fatfs_filename_to_lfn@entry+1,w,c
 29698  008126  D009               	goto	L99
 29699  008128                     l10177:
 29700  008128  2811               	incf	fatfs_filename_to_lfn@entry,w,c
 29701  00812A  6E14               	movwf	??_fatfs_filename_to_lfn& (0+255),c
 29702  00812C  0E00               	movlw	0
 29703  00812E  2012               	addwfc	fatfs_filename_to_lfn@entry+1,w,c
 29704  008130  6E15               	movwf	(??_fatfs_filename_to_lfn+1)& (0+255),c
 29705  008132  0E40               	movlw	64
 29706  008134  1014               	iorwf	??_fatfs_filename_to_lfn,w,c
 29707  008136  6E26               	movwf	_fatfs_filename_to_lfn$2422,c
 29708  008138  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29709  00813A                     L99:
 29710  00813A  6E27               	movwf	_fatfs_filename_to_lfn$2422+1,c
 29711  00813C  C00F  FFD9         	movff	fatfs_filename_to_lfn@buffer,fsr2l
 29712  008140  C010  FFDA         	movff	fatfs_filename_to_lfn@buffer+1,fsr2h
 29713  008144  C026  FFDF         	movff	_fatfs_filename_to_lfn$2422,indf2
 29714                           
 29715                           ;fat_misc.c: 226: buffer[11] = 0x0F;
 29716  008148  EE20 F00B          	lfsr	2,11
 29717  00814C  500F               	movf	fatfs_filename_to_lfn@buffer,w,c
 29718  00814E  26D9               	addwf	fsr2l,f,c
 29719  008150  5010               	movf	fatfs_filename_to_lfn@buffer+1,w,c
 29720  008152  22DA               	addwfc	fsr2h,f,c
 29721  008154  0E0F               	movlw	15
 29722  008156  6EDF               	movwf	indf2,c
 29723                           
 29724                           ;fat_misc.c: 229: buffer[13] = sfnChk;
 29725  008158  EE20 F00D          	lfsr	2,13
 29726  00815C  500F               	movf	fatfs_filename_to_lfn@buffer,w,c
 29727  00815E  26D9               	addwf	fsr2l,f,c
 29728  008160  5010               	movf	fatfs_filename_to_lfn@buffer+1,w,c
 29729  008162  22DA               	addwfc	fsr2h,f,c
 29730  008164  C013  FFDF         	movff	fatfs_filename_to_lfn@sfnChk,indf2
 29731                           
 29732                           ;fat_misc.c: 232: for (i=0;i<5;i++)
 29733  008168  6A2D               	clrf	fatfs_filename_to_lfn@i+1,c
 29734  00816A  6A2C               	clrf	fatfs_filename_to_lfn@i,c
 29735  00816C  502D               	movf	fatfs_filename_to_lfn@i+1,w,c
 29736  00816E  0A80               	xorlw	128
 29737  008170  0F80               	addlw	-128
 29738  008172  0E05               	movlw	5
 29739  008174  B4D8               	btfsc	status,2,c
 29740  008176  5C2C               	subwf	fatfs_filename_to_lfn@i,w,c
 29741  008178  E301 D097          	bc	l1002
 29742                           
 29743                           ;fat_misc.c: 233: {
 29744                           ;fat_misc.c: 234: if ( (start+i) < length )
 29745  00817C  C02A  F014         	movff	fatfs_filename_to_lfn@start,??_fatfs_filename_to_lfn
 29746  008180  C02B  F015         	movff	fatfs_filename_to_lfn@start+1,??_fatfs_filename_to_lfn+1
 29747  008184  502C               	movf	fatfs_filename_to_lfn@i,w,c
 29748  008186  2614               	addwf	??_fatfs_filename_to_lfn,f,c
 29749  008188  502D               	movf	fatfs_filename_to_lfn@i+1,w,c
 29750  00818A  2215               	addwfc	??_fatfs_filename_to_lfn+1,f,c
 29751  00818C  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29752  00818E  0A80               	xorlw	128
 29753  008190  6E16               	movwf	(??_fatfs_filename_to_lfn+2)& (0+255),c
 29754  008192  5028               	movf	fatfs_filename_to_lfn@length,w,c
 29755  008194  5C14               	subwf	??_fatfs_filename_to_lfn,w,c
 29756  008196  5029               	movf	fatfs_filename_to_lfn@length+1,w,c
 29757  008198  0A80               	xorlw	128
 29758  00819A  5816               	subwfb	(??_fatfs_filename_to_lfn+2)& (0+255),w,c
 29759  00819C  E228               	bc	l10191
 29760                           
 29761                           ;fat_misc.c: 235: buffer[nameIndexes[i]] = filename[start+i];
 29762  00819E  C02A  F014         	movff	fatfs_filename_to_lfn@start,??_fatfs_filename_to_lfn
 29763  0081A2  C02B  F015         	movff	fatfs_filename_to_lfn@start+1,??_fatfs_filename_to_lfn+1
 29764  0081A6  502C               	movf	fatfs_filename_to_lfn@i,w,c
 29765  0081A8  2614               	addwf	??_fatfs_filename_to_lfn,f,c
 29766  0081AA  502D               	movf	fatfs_filename_to_lfn@i+1,w,c
 29767  0081AC  2215               	addwfc	??_fatfs_filename_to_lfn+1,f,c
 29768  0081AE  5014               	movf	??_fatfs_filename_to_lfn,w,c
 29769  0081B0  240D               	addwf	fatfs_filename_to_lfn@filename,w,c
 29770  0081B2  6ED9               	movwf	fsr2l,c
 29771  0081B4  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29772  0081B6  200E               	addwfc	fatfs_filename_to_lfn@filename+1,w,c
 29773  0081B8  6EDA               	movwf	fsr2h,c
 29774  0081BA  0E1A               	movlw	low fatfs_filename_to_lfn@nameIndexes
 29775  0081BC  6E16               	movwf	(??_fatfs_filename_to_lfn+2)& (0+255),c
 29776  0081BE  0E00               	movlw	high fatfs_filename_to_lfn@nameIndexes
 29777  0081C0  6E17               	movwf	(??_fatfs_filename_to_lfn+3)& (0+255),c
 29778  0081C2  90D8               	bcf	status,0,c
 29779  0081C4  342C               	rlcf	fatfs_filename_to_lfn@i,w,c
 29780  0081C6  6EE1               	movwf	fsr1l,c
 29781  0081C8  342D               	rlcf	fatfs_filename_to_lfn@i+1,w,c
 29782  0081CA  6EE2               	movwf	fsr1h,c
 29783  0081CC  5016               	movf	??_fatfs_filename_to_lfn+2,w,c
 29784  0081CE  26E1               	addwf	fsr1l,f,c
 29785  0081D0  5017               	movf	??_fatfs_filename_to_lfn+3,w,c
 29786  0081D2  22E2               	addwfc	fsr1h,f,c
 29787  0081D4  CFE6 F018          	movff	postinc1,??_fatfs_filename_to_lfn+4
 29788  0081D8  CFE5 F019          	movff	postdec1,??_fatfs_filename_to_lfn+5
 29789  0081DC  5018               	movf	??_fatfs_filename_to_lfn+4,w,c
 29790  0081DE  240F               	addwf	fatfs_filename_to_lfn@buffer,w,c
 29791  0081E0  6EE1               	movwf	fsr1l,c
 29792  0081E2  5019               	movf	??_fatfs_filename_to_lfn+5,w,c
 29793  0081E4  2010               	addwfc	fatfs_filename_to_lfn@buffer+1,w,c
 29794  0081E6  6EE2               	movwf	fsr1h,c
 29795  0081E8  CFDF FFE7          	movff	indf2,indf1
 29796  0081EC  D05B               	goto	l10197
 29797  0081EE                     l10191:
 29798                           
 29799                           ;fat_misc.c: 236: else if ( (start+i) == length )
 29800  0081EE  C02A  F014         	movff	fatfs_filename_to_lfn@start,??_fatfs_filename_to_lfn
 29801  0081F2  C02B  F015         	movff	fatfs_filename_to_lfn@start+1,??_fatfs_filename_to_lfn+1
 29802  0081F6  502C               	movf	fatfs_filename_to_lfn@i,w,c
 29803  0081F8  2614               	addwf	??_fatfs_filename_to_lfn,f,c
 29804  0081FA  502D               	movf	fatfs_filename_to_lfn@i+1,w,c
 29805  0081FC  2215               	addwfc	??_fatfs_filename_to_lfn+1,f,c
 29806  0081FE  5029               	movf	fatfs_filename_to_lfn@length+1,w,c
 29807  008200  1815               	xorwf	??_fatfs_filename_to_lfn+1,w,c
 29808  008202  E102               	bnz	u11365
 29809  008204  5028               	movf	fatfs_filename_to_lfn@length,w,c
 29810  008206  1814               	xorwf	??_fatfs_filename_to_lfn,w,c
 29811  008208                     u11365:
 29812  008208  E119               	bnz	l10195
 29813                           
 29814                           ;fat_misc.c: 237: buffer[nameIndexes[i]] = 0x00;
 29815  00820A  0E1A               	movlw	low fatfs_filename_to_lfn@nameIndexes
 29816  00820C  6E14               	movwf	??_fatfs_filename_to_lfn& (0+255),c
 29817  00820E  0E00               	movlw	high fatfs_filename_to_lfn@nameIndexes
 29818  008210  6E15               	movwf	(??_fatfs_filename_to_lfn+1)& (0+255),c
 29819  008212  90D8               	bcf	status,0,c
 29820  008214  342C               	rlcf	fatfs_filename_to_lfn@i,w,c
 29821  008216  6ED9               	movwf	fsr2l,c
 29822  008218  342D               	rlcf	fatfs_filename_to_lfn@i+1,w,c
 29823  00821A  6EDA               	movwf	fsr2h,c
 29824  00821C  5014               	movf	??_fatfs_filename_to_lfn,w,c
 29825  00821E  26D9               	addwf	fsr2l,f,c
 29826  008220  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29827  008222  22DA               	addwfc	fsr2h,f,c
 29828  008224  CFDE F016          	movff	postinc2,??_fatfs_filename_to_lfn+2
 29829  008228  CFDD F017          	movff	postdec2,??_fatfs_filename_to_lfn+3
 29830  00822C  5016               	movf	??_fatfs_filename_to_lfn+2,w,c
 29831  00822E  240F               	addwf	fatfs_filename_to_lfn@buffer,w,c
 29832  008230  6ED9               	movwf	fsr2l,c
 29833  008232  5017               	movf	??_fatfs_filename_to_lfn+3,w,c
 29834  008234  2010               	addwfc	fatfs_filename_to_lfn@buffer+1,w,c
 29835  008236  6EDA               	movwf	fsr2h,c
 29836  008238  0E00               	movlw	0
 29837  00823A  D033               	goto	L100
 29838  00823C                     l10195:
 29839                           
 29840                           ;fat_misc.c: 238: else
 29841                           ;fat_misc.c: 239: {
 29842                           ;fat_misc.c: 240: buffer[nameIndexes[i]] = 0xFF;
 29843  00823C  0E1A               	movlw	low fatfs_filename_to_lfn@nameIndexes
 29844  00823E  6E14               	movwf	??_fatfs_filename_to_lfn& (0+255),c
 29845  008240  0E00               	movlw	high fatfs_filename_to_lfn@nameIndexes
 29846  008242  6E15               	movwf	(??_fatfs_filename_to_lfn+1)& (0+255),c
 29847  008244  90D8               	bcf	status,0,c
 29848  008246  342C               	rlcf	fatfs_filename_to_lfn@i,w,c
 29849  008248  6ED9               	movwf	fsr2l,c
 29850  00824A  342D               	rlcf	fatfs_filename_to_lfn@i+1,w,c
 29851  00824C  6EDA               	movwf	fsr2h,c
 29852  00824E  5014               	movf	??_fatfs_filename_to_lfn,w,c
 29853  008250  26D9               	addwf	fsr2l,f,c
 29854  008252  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29855  008254  22DA               	addwfc	fsr2h,f,c
 29856  008256  CFDE F016          	movff	postinc2,??_fatfs_filename_to_lfn+2
 29857  00825A  CFDD F017          	movff	postdec2,??_fatfs_filename_to_lfn+3
 29858  00825E  5016               	movf	??_fatfs_filename_to_lfn+2,w,c
 29859  008260  240F               	addwf	fatfs_filename_to_lfn@buffer,w,c
 29860  008262  6ED9               	movwf	fsr2l,c
 29861  008264  5017               	movf	??_fatfs_filename_to_lfn+3,w,c
 29862  008266  2010               	addwfc	fatfs_filename_to_lfn@buffer+1,w,c
 29863  008268  6EDA               	movwf	fsr2h,c
 29864  00826A  68DF               	setf	indf2,c
 29865                           
 29866                           ;fat_misc.c: 241: buffer[nameIndexes[i]+1] = 0xFF;
 29867  00826C  0E1A               	movlw	low fatfs_filename_to_lfn@nameIndexes
 29868  00826E  6E14               	movwf	??_fatfs_filename_to_lfn& (0+255),c
 29869  008270  0E00               	movlw	high fatfs_filename_to_lfn@nameIndexes
 29870  008272  6E15               	movwf	(??_fatfs_filename_to_lfn+1)& (0+255),c
 29871  008274  90D8               	bcf	status,0,c
 29872  008276  342C               	rlcf	fatfs_filename_to_lfn@i,w,c
 29873  008278  6ED9               	movwf	fsr2l,c
 29874  00827A  342D               	rlcf	fatfs_filename_to_lfn@i+1,w,c
 29875  00827C  6EDA               	movwf	fsr2h,c
 29876  00827E  5014               	movf	??_fatfs_filename_to_lfn,w,c
 29877  008280  26D9               	addwf	fsr2l,f,c
 29878  008282  5015               	movf	??_fatfs_filename_to_lfn+1,w,c
 29879  008284  22DA               	addwfc	fsr2h,f,c
 29880  008286  CFDE F016          	movff	postinc2,??_fatfs_filename_to_lfn+2
 29881  00828A  CFDD F017          	movff	postdec2,??_fatfs_filename_to_lfn+3
 29882  00828E  2A16               	incf	??_fatfs_filename_to_lfn+2,f,c
 29883  008290  0E00               	movlw	0
 29884  008292  2217               	addwfc	??_fatfs_filename_to_lfn+3,f,c
 29885  008294  5016               	movf	??_fatfs_filename_to_lfn+2,w,c
 29886  008296  240F               	addwf	fatfs_filename_to_lfn@buffer,w,c
 29887  008298  6ED9               	movwf	fsr2l,c
 29888  00829A  5017               	movf	??_fatfs_filename_to_lfn+3,w,c
 29889  00829C  2010               	addwfc	fatfs_filename_to_lfn@buffer+1,w,c
 29890  00829E  6EDA               	movwf	fsr2h,c
 29891  0082A0  0EFF               	movlw	255
 29892  0082A2                     L100:
 29893  0082A2  6EDF               	movwf	indf2,c
 29894  0082A4                     l10197:
 29895  0082A4  4A2C               	infsnz	fatfs_filename_to_lfn@i,f,c
 29896  0082A6  2A2D               	incf	fatfs_filename_to_lfn@i+1,f,c
 29897  0082A8  D761               	goto	L101
 29898  0082AA                     l1002:
 29899  0082AA  0012               	return	
 29900  0082AC                     __end_of_fatfs_filename_to_lfn:
 29901                           	opt stack 0
 29902                           tosu	equ	0xFFF
 29903                           tosh	equ	0xFFE
 29904                           tosl	equ	0xFFD
 29905                           pclath	equ	0xFFA
 29906                           tblptru	equ	0xFF8
 29907                           tblptrh	equ	0xFF7
 29908                           tblptrl	equ	0xFF6
 29909                           tablat	equ	0xFF5
 29910                           prodh	equ	0xFF4
 29911                           prodl	equ	0xFF3
 29912                           indf0	equ	0xFEF
 29913                           postinc0	equ	0xFEE
 29914                           fsr0h	equ	0xFEA
 29915                           fsr0l	equ	0xFE9
 29916                           wreg	equ	0xFE8
 29917                           indf1	equ	0xFE7
 29918                           postinc1	equ	0xFE6
 29919                           postdec1	equ	0xFE5
 29920                           fsr1h	equ	0xFE2
 29921                           fsr1l	equ	0xFE1
 29922                           indf2	equ	0xFDF
 29923                           postinc2	equ	0xFDE
 29924                           postdec2	equ	0xFDD
 29925                           fsr2h	equ	0xFDA
 29926                           fsr2l	equ	0xFD9
 29927                           status	equ	0xFD8
 29928                           
 29929 ;; *************** function _fatfs_lfn_entries_required *****************
 29930 ;; Defined at:
 29931 ;;		line 193 in file "fat_misc.c"
 29932 ;; Parameters:    Size  Location     Type
 29933 ;;  filename        2    8[COMRAM] PTR unsigned char 
 29934 ;;		 -> RAM(3967), NULL(0), 
 29935 ;; Auto vars:     Size  Location     Type
 29936 ;;  length          2   10[COMRAM] int 
 29937 ;; Return value:  Size  Location     Type
 29938 ;;                  2    8[COMRAM] int 
 29939 ;; Registers used:
 29940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 29941 ;; Tracked objects:
 29942 ;;		On entry : 0/0
 29943 ;;		On exit  : 0/0
 29944 ;;		Unchanged: 0/0
 29945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29949 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29950 ;;Total ram usage:        4 bytes
 29951 ;; Hardware stack levels used:    1
 29952 ;; Hardware stack levels required when called:    1
 29953 ;; This function calls:
 29954 ;;		___awdiv
 29955 ;;		_strlen
 29956 ;; This function is called by:
 29957 ;;		_fatfs_filename_to_lfn
 29958 ;;		_fatfs_add_file_entry
 29959 ;; This function uses a non-reentrant model
 29960 ;;
 29961                           
 29962                           	psect	text86
 29963  00429A                     __ptext86:
 29964                           	opt stack 0
 29965  00429A                     _fatfs_lfn_entries_required:
 29966                           	opt stack 23
 29967                           
 29968                           ;fat_misc.c: 195: int length = (int)strlen(filename);
 29969                           
 29970                           ;incstack = 0
 29971  00429A  C00A  F002         	movff	fatfs_lfn_entries_required@filename+1,strlen@s+1
 29972  00429E  C009  F001         	movff	fatfs_lfn_entries_required@filename,strlen@s
 29973  0042A2  EC7B  F022         	call	_strlen	;wreg free
 29974  0042A6  C001  F00B         	movff	?_strlen,fatfs_lfn_entries_required@length
 29975  0042AA  C002  F00C         	movff	?_strlen+1,fatfs_lfn_entries_required@length+1
 29976                           
 29977                           ;fat_misc.c: 197: if (length)
 29978  0042AE  500C               	movf	fatfs_lfn_entries_required@length+1,w,c
 29979  0042B0  100B               	iorwf	fatfs_lfn_entries_required@length,w,c
 29980  0042B2  E010               	bz	l9439
 29981                           
 29982                           ;fat_misc.c: 198: return (length + 5 - 1) / 5;
 29983  0042B4  0E04               	movlw	4
 29984  0042B6  240B               	addwf	fatfs_lfn_entries_required@length,w,c
 29985  0042B8  6E01               	movwf	___awdiv@dividend,c
 29986  0042BA  0E00               	movlw	0
 29987  0042BC  200C               	addwfc	fatfs_lfn_entries_required@length+1,w,c
 29988  0042BE  6E02               	movwf	___awdiv@dividend+1,c
 29989  0042C0  6A04               	clrf	___awdiv@divisor+1,c
 29990  0042C2  0E05               	movlw	5
 29991  0042C4  6E03               	movwf	___awdiv@divisor,c
 29992  0042C6  EC1A  F02A         	call	___awdiv	;wreg free
 29993  0042CA  C001  F009         	movff	?___awdiv,?_fatfs_lfn_entries_required
 29994  0042CE  C002  F00A         	movff	?___awdiv+1,?_fatfs_lfn_entries_required+1
 29995  0042D2  D003               	goto	l986
 29996  0042D4                     l9439:
 29997                           
 29998                           ;fat_misc.c: 199: else
 29999                           ;fat_misc.c: 200: return 0;
 30000  0042D4  0E00               	movlw	0
 30001  0042D6  6E0A               	movwf	?_fatfs_lfn_entries_required+1,c
 30002  0042D8  6E09               	movwf	?_fatfs_lfn_entries_required,c
 30003  0042DA                     l986:
 30004  0042DA  0012               	return	
 30005  0042DC                     __end_of_fatfs_lfn_entries_required:
 30006                           	opt stack 0
 30007                           tosu	equ	0xFFF
 30008                           tosh	equ	0xFFE
 30009                           tosl	equ	0xFFD
 30010                           pclath	equ	0xFFA
 30011                           tblptru	equ	0xFF8
 30012                           tblptrh	equ	0xFF7
 30013                           tblptrl	equ	0xFF6
 30014                           tablat	equ	0xFF5
 30015                           prodh	equ	0xFF4
 30016                           prodl	equ	0xFF3
 30017                           indf0	equ	0xFEF
 30018                           postinc0	equ	0xFEE
 30019                           fsr0h	equ	0xFEA
 30020                           fsr0l	equ	0xFE9
 30021                           wreg	equ	0xFE8
 30022                           indf1	equ	0xFE7
 30023                           postinc1	equ	0xFE6
 30024                           postdec1	equ	0xFE5
 30025                           fsr1h	equ	0xFE2
 30026                           fsr1l	equ	0xFE1
 30027                           indf2	equ	0xFDF
 30028                           postinc2	equ	0xFDE
 30029                           postdec2	equ	0xFDD
 30030                           fsr2h	equ	0xFDA
 30031                           fsr2l	equ	0xFD9
 30032                           status	equ	0xFD8
 30033                           
 30034 ;; *************** function ___awdiv *****************
 30035 ;; Defined at:
 30036 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 30037 ;; Parameters:    Size  Location     Type
 30038 ;;  dividend        2    0[COMRAM] int 
 30039 ;;  divisor         2    2[COMRAM] int 
 30040 ;; Auto vars:     Size  Location     Type
 30041 ;;  quotient        2    6[COMRAM] int 
 30042 ;;  sign            1    5[COMRAM] unsigned char 
 30043 ;;  counter         1    4[COMRAM] unsigned char 
 30044 ;; Return value:  Size  Location     Type
 30045 ;;                  2    0[COMRAM] int 
 30046 ;; Registers used:
 30047 ;;		wreg, status,2, status,0, prodl
 30048 ;; Tracked objects:
 30049 ;;		On entry : 0/0
 30050 ;;		On exit  : 0/0
 30051 ;;		Unchanged: 0/0
 30052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30053 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30054 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30056 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30057 ;;Total ram usage:        8 bytes
 30058 ;; Hardware stack levels used:    1
 30059 ;; This function calls:
 30060 ;;		Nothing
 30061 ;; This function is called by:
 30062 ;;		_fl_fread
 30063 ;;		_fatfs_lfn_entries_required
 30064 ;; This function uses a non-reentrant model
 30065 ;;
 30066                           
 30067                           	psect	text87
 30068  005434                     __ptext87:
 30069                           	opt stack 0
 30070  005434                     ___awdiv:
 30071                           	opt stack 23
 30072                           
 30073                           ;incstack = 0
 30074  005434  6A06               	clrf	___awdiv@sign,c
 30075  005436  5004               	movf	___awdiv@divisor+1,w,c
 30076  005438  0A80               	xorlw	128
 30077  00543A  6EF3               	movwf	prodl,c
 30078  00543C  0E80               	movlw	128
 30079  00543E  5CF3               	subwf	prodl,w,c
 30080  005440  0E00               	movlw	0
 30081  005442  B4D8               	btfsc	status,2,c
 30082  005444  5C03               	subwf	___awdiv@divisor,w,c
 30083  005446  E206               	bc	l8977
 30084  005448  6C03               	negf	___awdiv@divisor,c
 30085  00544A  1E04               	comf	___awdiv@divisor+1,f,c
 30086  00544C  B0D8               	btfsc	status,0,c
 30087  00544E  2A04               	incf	___awdiv@divisor+1,f,c
 30088  005450  0E01               	movlw	1
 30089  005452  6E06               	movwf	___awdiv@sign,c
 30090  005454                     l8977:
 30091  005454  5002               	movf	___awdiv@dividend+1,w,c
 30092  005456  0A80               	xorlw	128
 30093  005458  6EF3               	movwf	prodl,c
 30094  00545A  0E80               	movlw	128
 30095  00545C  5CF3               	subwf	prodl,w,c
 30096  00545E  0E00               	movlw	0
 30097  005460  B4D8               	btfsc	status,2,c
 30098  005462  5C01               	subwf	___awdiv@dividend,w,c
 30099  005464  E206               	bc	l8983
 30100  005466  6C01               	negf	___awdiv@dividend,c
 30101  005468  1E02               	comf	___awdiv@dividend+1,f,c
 30102  00546A  B0D8               	btfsc	status,0,c
 30103  00546C  2A02               	incf	___awdiv@dividend+1,f,c
 30104  00546E  0E01               	movlw	1
 30105  005470  1A06               	xorwf	___awdiv@sign,f,c
 30106  005472                     l8983:
 30107  005472  6A08               	clrf	___awdiv@quotient+1,c
 30108  005474  6A07               	clrf	___awdiv@quotient,c
 30109  005476  5004               	movf	___awdiv@divisor+1,w,c
 30110  005478  1003               	iorwf	___awdiv@divisor,w,c
 30111  00547A  E01B               	bz	l9005
 30112  00547C  0E01               	movlw	1
 30113  00547E  6E05               	movwf	___awdiv@counter,c
 30114  005480  D004               	goto	l8991
 30115  005482                     l8989:
 30116  005482  90D8               	bcf	status,0,c
 30117  005484  3603               	rlcf	___awdiv@divisor,f,c
 30118  005486  3604               	rlcf	___awdiv@divisor+1,f,c
 30119  005488  2A05               	incf	___awdiv@counter,f,c
 30120  00548A                     l8991:
 30121  00548A  AE04               	btfss	___awdiv@divisor+1,7,c
 30122  00548C  D7FA               	goto	l8989
 30123  00548E                     l8993:
 30124  00548E  90D8               	bcf	status,0,c
 30125  005490  3607               	rlcf	___awdiv@quotient,f,c
 30126  005492  3608               	rlcf	___awdiv@quotient+1,f,c
 30127  005494  5003               	movf	___awdiv@divisor,w,c
 30128  005496  5C01               	subwf	___awdiv@dividend,w,c
 30129  005498  5004               	movf	___awdiv@divisor+1,w,c
 30130  00549A  5802               	subwfb	___awdiv@dividend+1,w,c
 30131  00549C  E305               	bnc	l9001
 30132  00549E  5003               	movf	___awdiv@divisor,w,c
 30133  0054A0  5E01               	subwf	___awdiv@dividend,f,c
 30134  0054A2  5004               	movf	___awdiv@divisor+1,w,c
 30135  0054A4  5A02               	subwfb	___awdiv@dividend+1,f,c
 30136  0054A6  8007               	bsf	___awdiv@quotient,0,c
 30137  0054A8                     l9001:
 30138  0054A8  90D8               	bcf	status,0,c
 30139  0054AA  3204               	rrcf	___awdiv@divisor+1,f,c
 30140  0054AC  3203               	rrcf	___awdiv@divisor,f,c
 30141  0054AE  2E05               	decfsz	___awdiv@counter,f,c
 30142  0054B0  D7EE               	goto	l8993
 30143  0054B2                     l9005:
 30144  0054B2  5006               	movf	___awdiv@sign,w,c
 30145  0054B4  E004               	bz	l9009
 30146  0054B6  6C07               	negf	___awdiv@quotient,c
 30147  0054B8  1E08               	comf	___awdiv@quotient+1,f,c
 30148  0054BA  B0D8               	btfsc	status,0,c
 30149  0054BC  2A08               	incf	___awdiv@quotient+1,f,c
 30150  0054BE                     l9009:
 30151  0054BE  C007  F001         	movff	___awdiv@quotient,?___awdiv
 30152  0054C2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 30153  0054C6  0012               	return	
 30154  0054C8                     __end_of___awdiv:
 30155                           	opt stack 0
 30156                           tosu	equ	0xFFF
 30157                           tosh	equ	0xFFE
 30158                           tosl	equ	0xFFD
 30159                           pclath	equ	0xFFA
 30160                           tblptru	equ	0xFF8
 30161                           tblptrh	equ	0xFF7
 30162                           tblptrl	equ	0xFF6
 30163                           tablat	equ	0xFF5
 30164                           prodh	equ	0xFF4
 30165                           prodl	equ	0xFF3
 30166                           indf0	equ	0xFEF
 30167                           postinc0	equ	0xFEE
 30168                           fsr0h	equ	0xFEA
 30169                           fsr0l	equ	0xFE9
 30170                           wreg	equ	0xFE8
 30171                           indf1	equ	0xFE7
 30172                           postinc1	equ	0xFE6
 30173                           postdec1	equ	0xFE5
 30174                           fsr1h	equ	0xFE2
 30175                           fsr1l	equ	0xFE1
 30176                           indf2	equ	0xFDF
 30177                           postinc2	equ	0xFDE
 30178                           postdec2	equ	0xFDD
 30179                           fsr2h	equ	0xFDA
 30180                           fsr2l	equ	0xFD9
 30181                           status	equ	0xFD8
 30182                           
 30183 ;; *************** function __open_directory *****************
 30184 ;; Defined at:
 30185 ;;		line 128 in file "fat_filelib.c"
 30186 ;; Parameters:    Size  Location     Type
 30187 ;;  path            2   56[BANK0 ] PTR unsigned char 
 30188 ;;		 -> STR_67(2), STR_63(2), m(30), RAM(3967), 
 30189 ;;		 -> NULL(0), 
 30190 ;;  pathCluster     2   58[BANK0 ] PTR unsigned long 
 30191 ;;		 -> fl_opendir@cluster(4), RAM(3967), NULL(0), 
 30192 ;; Auto vars:     Size  Location     Type
 30193 ;;  sfEntry        32   82[BANK0 ] struct fat_dir_entry
 30194 ;;  currentfolde   10   64[BANK0 ] unsigned char [10]
 30195 ;;  startcluster    4   76[BANK0 ] unsigned long 
 30196 ;;  sublevel        2   80[BANK0 ] int 
 30197 ;;  levels          2   74[BANK0 ] int 
 30198 ;; Return value:  Size  Location     Type
 30199 ;;                  2   56[BANK0 ] int 
 30200 ;; Registers used:
 30201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30202 ;; Tracked objects:
 30203 ;;		On entry : 0/0
 30204 ;;		On exit  : 0/0
 30205 ;;		Unchanged: 0/0
 30206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30207 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30208 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30209 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30210 ;;      Totals:         0      58       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30211 ;;Total ram usage:       58 bytes
 30212 ;; Hardware stack levels used:    1
 30213 ;; Hardware stack levels required when called:    8
 30214 ;; This function calls:
 30215 ;;		_fatfs_entry_is_dir
 30216 ;;		_fatfs_get_file_entry
 30217 ;;		_fatfs_get_root_cluster
 30218 ;;		_fatfs_get_substring
 30219 ;;		_fatfs_total_path_levels
 30220 ;; This function is called by:
 30221 ;;		__create_directory
 30222 ;;		__open_file
 30223 ;;		__create_file
 30224 ;;		_fl_opendir
 30225 ;; This function uses a non-reentrant model
 30226 ;;
 30227                           
 30228                           	psect	text88
 30229  006820                     __ptext88:
 30230                           	opt stack 0
 30231  006820                     __open_directory:
 30232                           	opt stack 20
 30233                           
 30234                           ;fat_filelib.c: 130: int levels;
 30235                           ;fat_filelib.c: 131: int sublevel;
 30236                           ;fat_filelib.c: 132: char currentfolder[10];
 30237                           ;fat_filelib.c: 133: struct fat_dir_entry sfEntry;
 30238                           ;fat_filelib.c: 134: uint32 startcluster;
 30239                           ;fat_filelib.c: 137: startcluster = fatfs_get_root_cluster(&_fs);
 30240                           
 30241                           ;incstack = 0
 30242  006820  0E09               	movlw	high __fs
 30243  006822  6E02               	movwf	fatfs_get_root_cluster@fs+1,c
 30244  006824  0E78               	movlw	low __fs
 30245  006826  6E01               	movwf	fatfs_get_root_cluster@fs,c
 30246  006828  EC90  F01F         	call	_fatfs_get_root_cluster	;wreg free
 30247  00682C  C001  F0CC         	movff	?_fatfs_get_root_cluster,__open_directory@startcluster
 30248  006830  C002  F0CD         	movff	?_fatfs_get_root_cluster+1,__open_directory@startcluster+1
 30249  006834  C003  F0CE         	movff	?_fatfs_get_root_cluster+2,__open_directory@startcluster+2
 30250  006838  C004  F0CF         	movff	?_fatfs_get_root_cluster+3,__open_directory@startcluster+3
 30251                           
 30252                           ;fat_filelib.c: 140: levels = fatfs_total_path_levels(path);
 30253  00683C  C0B9  F002         	movff	__open_directory@path+1,fatfs_total_path_levels@path+1
 30254  006840  0100               	movlb	0	; () banked
 30255  006842  C0B8  F001         	movff	__open_directory@path,fatfs_total_path_levels@path
 30256  006846  EC71  F033         	call	_fatfs_total_path_levels	;wreg free
 30257  00684A  C001  F0CA         	movff	?_fatfs_total_path_levels,__open_directory@levels
 30258  00684E  C002  F0CB         	movff	?_fatfs_total_path_levels+1,__open_directory@levels+1
 30259                           
 30260                           ;fat_filelib.c: 143: for (sublevel=0;sublevel<(levels+1);sublevel++)
 30261  006852  0100               	movlb	0	; () banked
 30262  006854  6BD1               	clrf	(__open_directory@sublevel+1)& (0+255),b
 30263  006856  6BD0               	clrf	__open_directory@sublevel& (0+255),b
 30264  006858  D065               	goto	l10543
 30265  00685A                     l10521:
 30266                           
 30267                           ; BSR set to: 0
 30268                           ;fat_filelib.c: 144: {
 30269                           ;fat_filelib.c: 145: if (fatfs_get_substring(path, sublevel, currentfolder, sizeof(curre
      +                          ntfolder)) == -1)
 30270  00685A  C0B9  F008         	movff	__open_directory@path+1,fatfs_get_substring@path+1
 30271  00685E  C0B8  F007         	movff	__open_directory@path,fatfs_get_substring@path
 30272  006862  C0D0  F009         	movff	__open_directory@sublevel,fatfs_get_substring@levelreq
 30273  006866  C0D1  F00A         	movff	__open_directory@sublevel+1,fatfs_get_substring@levelreq+1
 30274  00686A  0E00               	movlw	high __open_directory@currentfolder
 30275  00686C  6E0C               	movwf	fatfs_get_substring@output+1,c
 30276  00686E  0100               	movlb	0	; () banked
 30277  006870  0EC0               	movlw	low __open_directory@currentfolder
 30278  006872  6E0B               	movwf	fatfs_get_substring@output,c
 30279  006874  6A0E               	clrf	fatfs_get_substring@max_len+1,c
 30280  006876  0E0A               	movlw	10
 30281  006878  6E0D               	movwf	fatfs_get_substring@max_len,c
 30282  00687A  EC62  F03D         	call	_fatfs_get_substring	;wreg free
 30283  00687E  2807               	incf	?_fatfs_get_substring,w,c
 30284  006880  B4D8               	btfsc	status,2,c
 30285  006882  2808               	incf	?_fatfs_get_substring+1,w,c
 30286  006884  E048               	bz	l10537
 30287                           
 30288                           ;fat_filelib.c: 149: if (fatfs_get_file_entry(&_fs, startcluster, currentfolder,&sfEntry
      +                          ))
 30289                           
 30290                           ; BSR set to: 0
 30291                           
 30292                           ; BSR set to: 0
 30293                           
 30294                           ;fat_filelib.c: 146: return 0;
 30295  006886  0E09               	movlw	high __fs
 30296  006888  0100               	movlb	0	; () banked
 30297  00688A  6FAD               	movwf	(fatfs_get_file_entry@fs+1)& (0+255),b
 30298  00688C  0E78               	movlw	low __fs
 30299  00688E  6FAC               	movwf	fatfs_get_file_entry@fs& (0+255),b
 30300  006890  C0CC  F0AE         	movff	__open_directory@startcluster,fatfs_get_file_entry@Cluster
 30301  006894  C0CD  F0AF         	movff	__open_directory@startcluster+1,fatfs_get_file_entry@Cluster+1
 30302  006898  C0CE  F0B0         	movff	__open_directory@startcluster+2,fatfs_get_file_entry@Cluster+2
 30303  00689C  C0CF  F0B1         	movff	__open_directory@startcluster+3,fatfs_get_file_entry@Cluster+3
 30304  0068A0  0E00               	movlw	high __open_directory@currentfolder
 30305  0068A2  6FB3               	movwf	(fatfs_get_file_entry@name_to_find+1)& (0+255),b
 30306  0068A4  0EC0               	movlw	low __open_directory@currentfolder
 30307  0068A6  6FB2               	movwf	fatfs_get_file_entry@name_to_find& (0+255),b
 30308  0068A8  0E00               	movlw	high __open_directory@sfEntry
 30309  0068AA  6FB5               	movwf	(fatfs_get_file_entry@sfEntry+1)& (0+255),b
 30310  0068AC  0ED2               	movlw	low __open_directory@sfEntry
 30311  0068AE  6FB4               	movwf	fatfs_get_file_entry@sfEntry& (0+255),b
 30312  0068B0  ECB6  F049         	call	_fatfs_get_file_entry	;wreg free
 30313  0068B4  C0AC  F0BC         	movff	?_fatfs_get_file_entry,??__open_directory
 30314  0068B8  C0AD  F0BD         	movff	?_fatfs_get_file_entry+1,??__open_directory+1
 30315  0068BC  C0AE  F0BE         	movff	?_fatfs_get_file_entry+2,??__open_directory+2
 30316  0068C0  C0AF  F0BF         	movff	?_fatfs_get_file_entry+3,??__open_directory+3
 30317  0068C4  0100               	movlb	0	; () banked
 30318  0068C6  51BF               	movf	(??__open_directory+3)& (0+255),w,b
 30319  0068C8  11BC               	iorwf	??__open_directory& (0+255),w,b
 30320  0068CA  11BD               	iorwf	(??__open_directory+1)& (0+255),w,b
 30321  0068CC  11BE               	iorwf	(??__open_directory+2)& (0+255),w,b
 30322  0068CE  E023               	bz	l10537
 30323                           
 30324                           ; BSR set to: 0
 30325                           ;fat_filelib.c: 150: {
 30326                           ;fat_filelib.c: 152: if (fatfs_entry_is_dir(&sfEntry))
 30327  0068D0  0E00               	movlw	high __open_directory@sfEntry
 30328  0068D2  6E02               	movwf	fatfs_entry_is_dir@entry+1,c
 30329  0068D4  0ED2               	movlw	low __open_directory@sfEntry
 30330  0068D6  6E01               	movwf	fatfs_entry_is_dir@entry,c
 30331  0068D8  ECB0  F01F         	call	_fatfs_entry_is_dir	;wreg free
 30332  0068DC  5002               	movf	?_fatfs_entry_is_dir+1,w,c
 30333  0068DE  1001               	iorwf	?_fatfs_entry_is_dir,w,c
 30334  0068E0  E01A               	bz	l10537
 30335                           
 30336                           ;fat_filelib.c: 153: startcluster = ((((uint32)sfEntry.FstClusHI))<<16) + (sfEntry.FstCl
      +                          usLO);
 30337  0068E2  0100               	movlb	0	; () banked
 30338  0068E4  51E6               	movf	(__open_directory@sfEntry+20)& (0+255),w,b
 30339  0068E6  6FBC               	movwf	??__open_directory& (0+255),b
 30340  0068E8  51E7               	movf	(__open_directory@sfEntry+21)& (0+255),w,b
 30341  0068EA  6FBD               	movwf	(??__open_directory+1)& (0+255),b
 30342  0068EC  6BBE               	clrf	(??__open_directory+2)& (0+255),b
 30343  0068EE  6BBF               	clrf	(??__open_directory+3)& (0+255),b
 30344  0068F0  C0BD  F0BF         	movff	??__open_directory+1,??__open_directory+3
 30345  0068F4  C0BC  F0BE         	movff	??__open_directory,??__open_directory+2
 30346  0068F8  6BBD               	clrf	(??__open_directory+1)& (0+255),b
 30347  0068FA  6BBC               	clrf	??__open_directory& (0+255),b
 30348  0068FC  51EC               	movf	(__open_directory@sfEntry+26)& (0+255),w,b
 30349  0068FE  25BC               	addwf	??__open_directory& (0+255),w,b
 30350  006900  6FCC               	movwf	__open_directory@startcluster& (0+255),b
 30351  006902  51ED               	movf	(__open_directory@sfEntry+27)& (0+255),w,b
 30352  006904  21BD               	addwfc	(??__open_directory+1)& (0+255),w,b
 30353  006906  6FCD               	movwf	(__open_directory@startcluster+1)& (0+255),b
 30354  006908  0E00               	movlw	0
 30355  00690A  21BE               	addwfc	(??__open_directory+2)& (0+255),w,b
 30356  00690C  6FCE               	movwf	(__open_directory@startcluster+2)& (0+255),b
 30357  00690E  0E00               	movlw	0
 30358  006910  21BF               	addwfc	(??__open_directory+3)& (0+255),w,b
 30359  006912  6FCF               	movwf	(__open_directory@startcluster+3)& (0+255),b
 30360  006914  D004               	goto	l10541
 30361  006916                     l10537:
 30362                           
 30363                           ; BSR set to: 0
 30364                           ;fat_filelib.c: 157: else
 30365                           ;fat_filelib.c: 158: return 0;
 30366  006916  0E00               	movlw	0
 30367  006918  0100               	movlb	0	; () banked
 30368  00691A  6FB9               	movwf	(?__open_directory+1)& (0+255),b
 30369  00691C  D022               	goto	L102
 30370  00691E                     l10541:
 30371                           
 30372                           ; BSR set to: 0
 30373  00691E  0100               	movlb	0	; () banked
 30374  006920  4BD0               	infsnz	__open_directory@sublevel& (0+255),f,b
 30375  006922  2BD1               	incf	(__open_directory@sublevel+1)& (0+255),f,b
 30376  006924                     l10543:
 30377                           
 30378                           ; BSR set to: 0
 30379  006924  0E01               	movlw	1
 30380  006926  0100               	movlb	0	; () banked
 30381  006928  25CA               	addwf	__open_directory@levels& (0+255),w,b
 30382  00692A  6FBC               	movwf	??__open_directory& (0+255),b
 30383  00692C  0E00               	movlw	0
 30384  00692E  21CB               	addwfc	(__open_directory@levels+1)& (0+255),w,b
 30385  006930  6FBD               	movwf	(??__open_directory+1)& (0+255),b
 30386  006932  51D1               	movf	(__open_directory@sublevel+1)& (0+255),w,b
 30387  006934  0A80               	xorlw	128
 30388  006936  6FBE               	movwf	(??__open_directory+2)& (0+255),b
 30389  006938  51BC               	movf	??__open_directory& (0+255),w,b
 30390  00693A  5DD0               	subwf	__open_directory@sublevel& (0+255),w,b
 30391  00693C  51BD               	movf	(??__open_directory+1)& (0+255),w,b
 30392  00693E  0A80               	xorlw	128
 30393  006940  59BE               	subwfb	(??__open_directory+2)& (0+255),w,b
 30394  006942  E38B               	bnc	l10521
 30395                           
 30396                           ; BSR set to: 0
 30397                           ;fat_filelib.c: 159: }
 30398                           ;fat_filelib.c: 161: *pathCluster = startcluster;
 30399                           
 30400                           ; BSR set to: 0
 30401  006944  C0BA  FFD9         	movff	__open_directory@pathCluster,fsr2l
 30402  006948  C0BB  FFDA         	movff	__open_directory@pathCluster+1,fsr2h
 30403  00694C  C0CC  FFDE         	movff	__open_directory@startcluster,postinc2
 30404  006950  C0CD  FFDE         	movff	__open_directory@startcluster+1,postinc2
 30405  006954  C0CE  FFDE         	movff	__open_directory@startcluster+2,postinc2
 30406  006958  C0CF  FFDE         	movff	__open_directory@startcluster+3,postinc2
 30407                           
 30408                           ; BSR set to: 0
 30409                           ;fat_filelib.c: 162: return 1;
 30410  00695C  0E00               	movlw	0
 30411  00695E  6FB9               	movwf	(?__open_directory+1)& (0+255),b
 30412  006960  0E01               	movlw	1
 30413  006962                     L102:
 30414  006962  0100               	movlb	0	; () banked
 30415  006964  6FB8               	movwf	?__open_directory& (0+255),b
 30416                           
 30417                           ; BSR set to: 0
 30418                           
 30419                           ; BSR set to: 0
 30420  006966  0012               	return	
 30421  006968                     __end_of__open_directory:
 30422                           	opt stack 0
 30423                           tosu	equ	0xFFF
 30424                           tosh	equ	0xFFE
 30425                           tosl	equ	0xFFD
 30426                           pclath	equ	0xFFA
 30427                           tblptru	equ	0xFF8
 30428                           tblptrh	equ	0xFF7
 30429                           tblptrl	equ	0xFF6
 30430                           tablat	equ	0xFF5
 30431                           prodh	equ	0xFF4
 30432                           prodl	equ	0xFF3
 30433                           indf0	equ	0xFEF
 30434                           postinc0	equ	0xFEE
 30435                           fsr0h	equ	0xFEA
 30436                           fsr0l	equ	0xFE9
 30437                           wreg	equ	0xFE8
 30438                           indf1	equ	0xFE7
 30439                           postinc1	equ	0xFE6
 30440                           postdec1	equ	0xFE5
 30441                           fsr1h	equ	0xFE2
 30442                           fsr1l	equ	0xFE1
 30443                           indf2	equ	0xFDF
 30444                           postinc2	equ	0xFDE
 30445                           postdec2	equ	0xFDD
 30446                           fsr2h	equ	0xFDA
 30447                           fsr2l	equ	0xFD9
 30448                           status	equ	0xFD8
 30449                           
 30450 ;; *************** function _fatfs_total_path_levels *****************
 30451 ;; Defined at:
 30452 ;;		line 44 in file "fat_string.c"
 30453 ;; Parameters:    Size  Location     Type
 30454 ;;  path            2    0[COMRAM] PTR unsigned char 
 30455 ;;		 -> STR_67(2), STR_63(2), s(17), m(30), 
 30456 ;;		 -> RAM(3967), NULL(0), 
 30457 ;; Auto vars:     Size  Location     Type
 30458 ;;  levels          2    4[COMRAM] int 
 30459 ;;  expectedchar    1    6[COMRAM] unsigned char 
 30460 ;; Return value:  Size  Location     Type
 30461 ;;                  2    0[COMRAM] int 
 30462 ;; Registers used:
 30463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 30464 ;; Tracked objects:
 30465 ;;		On entry : 0/0
 30466 ;;		On exit  : 0/0
 30467 ;;		Unchanged: 0/0
 30468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30470 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30472 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30473 ;;Total ram usage:        7 bytes
 30474 ;; Hardware stack levels used:    1
 30475 ;; This function calls:
 30476 ;;		Nothing
 30477 ;; This function is called by:
 30478 ;;		__open_directory
 30479 ;;		_fl_opendir
 30480 ;;		_fatfs_split_path
 30481 ;; This function uses a non-reentrant model
 30482 ;;
 30483                           
 30484                           	psect	text89
 30485  0066E2                     __ptext89:
 30486                           	opt stack 0
 30487  0066E2                     _fatfs_total_path_levels:
 30488                           	opt stack 28
 30489                           
 30490                           ;fat_string.c: 46: int levels = 0;
 30491                           
 30492                           ; BSR set to: 0
 30493                           ;incstack = 0
 30494  0066E2  6A06               	clrf	fatfs_total_path_levels@levels+1,c
 30495  0066E4  6A05               	clrf	fatfs_total_path_levels@levels,c
 30496                           
 30497                           ;fat_string.c: 47: char expectedchar;
 30498                           ;fat_string.c: 49: if (!path)
 30499  0066E6  5002               	movf	fatfs_total_path_levels@path+1,w,c
 30500  0066E8  1001               	iorwf	fatfs_total_path_levels@path,w,c
 30501  0066EA  E050               	bz	l1058
 30502                           
 30503                           ;fat_string.c: 55: if (*path == '/')
 30504                           
 30505                           ;fat_string.c: 50: return -1;
 30506  0066EC  C001  FFF6         	movff	fatfs_total_path_levels@path,tblptrl
 30507  0066F0  C002  FFF7         	movff	fatfs_total_path_levels@path+1,tblptrh
 30508  0066F4  0E00               	movlw	low (__mediumconst shr (0+16))
 30509  0066F6  6EF8               	movwf	tblptru,c
 30510  0066F8  0E0F               	movlw	(high __ramtop+-1)
 30511  0066FA  64F7               	cpfsgt	tblptrh,c
 30512  0066FC  D003               	bra	u10717
 30513  0066FE  0008               	tblrd		*
 30514  006700  50F5               	movf	tablat,w,c
 30515  006702  D005               	bra	u10710
 30516  006704                     u10717:
 30517  006704  CFF6 FFE9          	movff	tblptrl,fsr0l
 30518  006708  CFF7 FFEA          	movff	tblptrh,fsr0h
 30519  00670C  50EF               	movf	indf0,w,c
 30520  00670E                     u10710:
 30521  00670E  0A2F               	xorlw	47
 30522  006710  E105               	bnz	l9751
 30523                           
 30524                           ;fat_string.c: 56: {
 30525                           ;fat_string.c: 57: expectedchar = '/';
 30526  006712  0E2F               	movlw	47
 30527  006714  6E07               	movwf	fatfs_total_path_levels@expectedchar,c
 30528                           
 30529                           ;fat_string.c: 58: path++;
 30530  006716  4A01               	infsnz	fatfs_total_path_levels@path,f,c
 30531  006718  2A02               	incf	fatfs_total_path_levels@path+1,f,c
 30532                           
 30533                           ;fat_string.c: 59: }
 30534  00671A  D068               	goto	l9769
 30535  00671C                     l9751:
 30536                           
 30537                           ;fat_string.c: 60: else if (path[1] == ':' || path[2] == '\\')
 30538  00671C  2801               	incf	fatfs_total_path_levels@path,w,c
 30539  00671E  6E03               	movwf	??_fatfs_total_path_levels& (0+255),c
 30540  006720  0E00               	movlw	0
 30541  006722  2002               	addwfc	fatfs_total_path_levels@path+1,w,c
 30542  006724  6E04               	movwf	(??_fatfs_total_path_levels+1)& (0+255),c
 30543  006726  C003  FFF6         	movff	??_fatfs_total_path_levels,tblptrl
 30544  00672A  C004  FFF7         	movff	??_fatfs_total_path_levels+1,tblptrh
 30545  00672E  0E00               	movlw	low (__mediumconst shr (0+16))
 30546  006730  6EF8               	movwf	tblptru,c
 30547  006732  0E0F               	movlw	(high __ramtop+-1)
 30548  006734  64F7               	cpfsgt	tblptrh,c
 30549  006736  D003               	bra	u10737
 30550  006738  0008               	tblrd		*
 30551  00673A  50F5               	movf	tablat,w,c
 30552  00673C  D005               	bra	u10730
 30553  00673E                     u10737:
 30554  00673E  CFF6 FFE9          	movff	tblptrl,fsr0l
 30555  006742  CFF7 FFEA          	movff	tblptrh,fsr0h
 30556  006746  50EF               	movf	indf0,w,c
 30557  006748                     u10730:
 30558  006748  0A3A               	xorlw	58
 30559  00674A  E019               	bz	l9755
 30560  00674C  0E02               	movlw	2
 30561  00674E  2401               	addwf	fatfs_total_path_levels@path,w,c
 30562  006750  6E03               	movwf	??_fatfs_total_path_levels& (0+255),c
 30563  006752  0E00               	movlw	0
 30564  006754  2002               	addwfc	fatfs_total_path_levels@path+1,w,c
 30565  006756  6E04               	movwf	(??_fatfs_total_path_levels+1)& (0+255),c
 30566  006758  C003  FFF6         	movff	??_fatfs_total_path_levels,tblptrl
 30567  00675C  C004  FFF7         	movff	??_fatfs_total_path_levels+1,tblptrh
 30568  006760  0E00               	movlw	low (__mediumconst shr (0+16))
 30569  006762  6EF8               	movwf	tblptru,c
 30570  006764  0E0F               	movlw	(high __ramtop+-1)
 30571  006766  64F7               	cpfsgt	tblptrh,c
 30572  006768  D003               	bra	u10757
 30573  00676A  0008               	tblrd		*
 30574  00676C  50F5               	movf	tablat,w,c
 30575  00676E  D005               	bra	u10750
 30576  006770                     u10757:
 30577  006770  CFF6 FFE9          	movff	tblptrl,fsr0l
 30578  006774  CFF7 FFEA          	movff	tblptrh,fsr0h
 30579  006778  50EF               	movf	indf0,w,c
 30580  00677A                     u10750:
 30581  00677A  0A5C               	xorlw	92
 30582  00677C  E107               	bnz	l1058
 30583  00677E                     l9755:
 30584                           
 30585                           ;fat_string.c: 61: {
 30586                           ;fat_string.c: 62: expectedchar = '\\';
 30587  00677E  0E5C               	movlw	92
 30588  006780  6E07               	movwf	fatfs_total_path_levels@expectedchar,c
 30589                           
 30590                           ;fat_string.c: 63: path += 3;
 30591  006782  0E03               	movlw	3
 30592  006784  2601               	addwf	fatfs_total_path_levels@path,f,c
 30593  006786  0E00               	movlw	0
 30594  006788  2202               	addwfc	fatfs_total_path_levels@path+1,f,c
 30595                           
 30596                           ;fat_string.c: 64: }
 30597  00678A  D030               	goto	l9769
 30598  00678C                     l1058:
 30599                           
 30600                           ;fat_string.c: 65: else
 30601                           ;fat_string.c: 66: return -1;
 30602  00678C  6801               	setf	?_fatfs_total_path_levels,c
 30603  00678E  6802               	setf	?_fatfs_total_path_levels+1,c
 30604  006790  D046               	goto	l1055
 30605  006792                     l9759:
 30606                           
 30607                           ;fat_string.c: 73: {
 30608                           ;fat_string.c: 75: if (*path == expectedchar) { path++; break; }
 30609  006792  C001  FFF6         	movff	fatfs_total_path_levels@path,tblptrl
 30610  006796  C002  FFF7         	movff	fatfs_total_path_levels@path+1,tblptrh
 30611  00679A  0E00               	movlw	low (__mediumconst shr (0+16))
 30612  00679C  6EF8               	movwf	tblptru,c
 30613  00679E  0E0F               	movlw	(high __ramtop+-1)
 30614  0067A0  64F7               	cpfsgt	tblptrh,c
 30615  0067A2  D003               	bra	u10777
 30616  0067A4  0008               	tblrd		*
 30617  0067A6  50F5               	movf	tablat,w,c
 30618  0067A8  D005               	bra	u10770
 30619  0067AA                     u10777:
 30620  0067AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 30621  0067AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 30622  0067B2  50EF               	movf	indf0,w,c
 30623  0067B4                     u10770:
 30624  0067B4  1807               	xorwf	fatfs_total_path_levels@expectedchar,w,c
 30625  0067B6  E103               	bnz	l9763
 30626  0067B8  4A01               	infsnz	fatfs_total_path_levels@path,f,c
 30627  0067BA  2A02               	incf	fatfs_total_path_levels@path+1,f,c
 30628  0067BC  D015               	goto	l9767
 30629  0067BE                     l9763:
 30630                           
 30631                           ;fat_string.c: 76: path++;
 30632  0067BE  4A01               	infsnz	fatfs_total_path_levels@path,f,c
 30633  0067C0  2A02               	incf	fatfs_total_path_levels@path+1,f,c
 30634  0067C2                     l9765:
 30635  0067C2  C001  FFF6         	movff	fatfs_total_path_levels@path,tblptrl
 30636  0067C6  C002  FFF7         	movff	fatfs_total_path_levels@path+1,tblptrh
 30637  0067CA  0E00               	movlw	low (__mediumconst shr (0+16))
 30638  0067CC  6EF8               	movwf	tblptru,c
 30639  0067CE  0E0F               	movlw	(high __ramtop+-1)
 30640  0067D0  64F7               	cpfsgt	tblptrh,c
 30641  0067D2  D003               	bra	u10797
 30642  0067D4  0008               	tblrd		*
 30643  0067D6  50F5               	movf	tablat,w,c
 30644  0067D8  D005               	bra	u10790
 30645  0067DA                     u10797:
 30646  0067DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 30647  0067DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 30648  0067E2  50EF               	movf	indf0,w,c
 30649  0067E4                     u10790:
 30650  0067E4  0900               	iorlw	0
 30651  0067E6  E1D5               	bnz	l9759
 30652  0067E8                     l9767:
 30653                           
 30654                           ;fat_string.c: 77: }
 30655                           ;fat_string.c: 80: levels++;
 30656  0067E8  4A05               	infsnz	fatfs_total_path_levels@levels,f,c
 30657  0067EA  2A06               	incf	fatfs_total_path_levels@levels+1,f,c
 30658  0067EC                     l9769:
 30659  0067EC  C001  FFF6         	movff	fatfs_total_path_levels@path,tblptrl
 30660  0067F0  C002  FFF7         	movff	fatfs_total_path_levels@path+1,tblptrh
 30661  0067F4  0E00               	movlw	low (__mediumconst shr (0+16))
 30662  0067F6  6EF8               	movwf	tblptru,c
 30663  0067F8  0E0F               	movlw	(high __ramtop+-1)
 30664  0067FA  64F7               	cpfsgt	tblptrh,c
 30665  0067FC  D003               	bra	u10817
 30666  0067FE  0008               	tblrd		*
 30667  006800  50F5               	movf	tablat,w,c
 30668  006802  D005               	bra	u10810
 30669  006804                     u10817:
 30670  006804  CFF6 FFE9          	movff	tblptrl,fsr0l
 30671  006808  CFF7 FFEA          	movff	tblptrh,fsr0h
 30672  00680C  50EF               	movf	indf0,w,c
 30673  00680E                     u10810:
 30674  00680E  0900               	iorlw	0
 30675  006810  E1D8               	bnz	l9765
 30676                           
 30677                           ;fat_string.c: 81: }
 30678                           ;fat_string.c: 84: return levels-1;
 30679  006812  0EFF               	movlw	255
 30680  006814  2405               	addwf	fatfs_total_path_levels@levels,w,c
 30681  006816  6E01               	movwf	?_fatfs_total_path_levels,c
 30682  006818  0EFF               	movlw	255
 30683  00681A  2006               	addwfc	fatfs_total_path_levels@levels+1,w,c
 30684  00681C  6E02               	movwf	?_fatfs_total_path_levels+1,c
 30685  00681E                     l1055:
 30686  00681E  0012               	return	
 30687  006820                     __end_of_fatfs_total_path_levels:
 30688                           	opt stack 0
 30689                           tosu	equ	0xFFF
 30690                           tosh	equ	0xFFE
 30691                           tosl	equ	0xFFD
 30692                           pclath	equ	0xFFA
 30693                           tblptru	equ	0xFF8
 30694                           tblptrh	equ	0xFF7
 30695                           tblptrl	equ	0xFF6
 30696                           tablat	equ	0xFF5
 30697                           prodh	equ	0xFF4
 30698                           prodl	equ	0xFF3
 30699                           indf0	equ	0xFEF
 30700                           postinc0	equ	0xFEE
 30701                           fsr0h	equ	0xFEA
 30702                           fsr0l	equ	0xFE9
 30703                           wreg	equ	0xFE8
 30704                           indf1	equ	0xFE7
 30705                           postinc1	equ	0xFE6
 30706                           postdec1	equ	0xFE5
 30707                           fsr1h	equ	0xFE2
 30708                           fsr1l	equ	0xFE1
 30709                           indf2	equ	0xFDF
 30710                           postinc2	equ	0xFDE
 30711                           postdec2	equ	0xFDD
 30712                           fsr2h	equ	0xFDA
 30713                           fsr2l	equ	0xFD9
 30714                           status	equ	0xFD8
 30715                           
 30716 ;; *************** function _fatfs_get_substring *****************
 30717 ;; Defined at:
 30718 ;;		line 92 in file "fat_string.c"
 30719 ;; Parameters:    Size  Location     Type
 30720 ;;  path            2    6[COMRAM] PTR unsigned char 
 30721 ;;		 -> STR_67(2), STR_63(2), s(17), m(30), 
 30722 ;;		 -> RAM(3967), NULL(0), 
 30723 ;;  levelreq        2    8[COMRAM] int 
 30724 ;;  output          2   10[COMRAM] PTR unsigned char 
 30725 ;;		 -> _open_directory@currentfolder(10), RAM(3967), NULL(0), 
 30726 ;;  max_len         2   12[COMRAM] int 
 30727 ;; Auto vars:     Size  Location     Type
 30728 ;;  copypnt         2   26[COMRAM] int 
 30729 ;;  levels          2   23[COMRAM] int 
 30730 ;;  pathlen         2   21[COMRAM] int 
 30731 ;;  i               2   19[COMRAM] int 
 30732 ;;  expectedchar    1   25[COMRAM] unsigned char 
 30733 ;; Return value:  Size  Location     Type
 30734 ;;                  2    6[COMRAM] int 
 30735 ;; Registers used:
 30736 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 30737 ;; Tracked objects:
 30738 ;;		On entry : 0/0
 30739 ;;		On exit  : 0/0
 30740 ;;		Unchanged: 0/0
 30741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30742 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30743 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30744 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30745 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30746 ;;Total ram usage:       22 bytes
 30747 ;; Hardware stack levels used:    1
 30748 ;; Hardware stack levels required when called:    1
 30749 ;; This function calls:
 30750 ;;		_strlen
 30751 ;; This function is called by:
 30752 ;;		__open_directory
 30753 ;;		_fatfs_split_path
 30754 ;; This function uses a non-reentrant model
 30755 ;;
 30756                           
 30757                           	psect	text90
 30758  007AC4                     __ptext90:
 30759                           	opt stack 0
 30760  007AC4                     _fatfs_get_substring:
 30761                           	opt stack 26
 30762                           
 30763                           ;fat_string.c: 94: int i;
 30764                           ;fat_string.c: 95: int pathlen=0;
 30765                           
 30766                           ;incstack = 0
 30767  007AC4  6A17               	clrf	fatfs_get_substring@pathlen+1,c
 30768  007AC6  6A16               	clrf	fatfs_get_substring@pathlen,c
 30769                           
 30770                           ;fat_string.c: 96: int levels=0;
 30771  007AC8  6A19               	clrf	fatfs_get_substring@levels+1,c
 30772  007ACA  6A18               	clrf	fatfs_get_substring@levels,c
 30773                           
 30774                           ;fat_string.c: 97: int copypnt=0;
 30775  007ACC  6A1C               	clrf	fatfs_get_substring@copypnt+1,c
 30776  007ACE  6A1B               	clrf	fatfs_get_substring@copypnt,c
 30777                           
 30778                           ;fat_string.c: 98: char expectedchar;
 30779                           ;fat_string.c: 100: if (!path || max_len <= 0)
 30780  007AD0  5008               	movf	fatfs_get_substring@path+1,w,c
 30781  007AD2  1007               	iorwf	fatfs_get_substring@path,w,c
 30782  007AD4  E101 D0E1          	bz	l1086
 30783  007AD8  500E               	movf	fatfs_get_substring@max_len+1,w,c
 30784  007ADA  0A80               	xorlw	128
 30785  007ADC  6EF3               	movwf	prodl,c
 30786  007ADE  0E80               	movlw	128
 30787  007AE0  5CF3               	subwf	prodl,w,c
 30788  007AE2  0E01               	movlw	1
 30789  007AE4  B4D8               	btfsc	status,2,c
 30790  007AE6  5C0D               	subwf	fatfs_get_substring@max_len,w,c
 30791  007AE8  E201 D0D7          	bnc	l1086
 30792                           
 30793                           ;fat_string.c: 106: if (*path == '/')
 30794                           
 30795                           ;fat_string.c: 101: return -1;
 30796  007AEC  C007  FFF6         	movff	fatfs_get_substring@path,tblptrl
 30797  007AF0  C008  FFF7         	movff	fatfs_get_substring@path+1,tblptrh
 30798  007AF4  0E00               	movlw	low (__mediumconst shr (0+16))
 30799  007AF6  6EF8               	movwf	tblptru,c
 30800  007AF8  0E0F               	movlw	(high __ramtop+-1)
 30801  007AFA  64F7               	cpfsgt	tblptrh,c
 30802  007AFC  D003               	bra	u10857
 30803  007AFE  0008               	tblrd		*
 30804  007B00  50F5               	movf	tablat,w,c
 30805  007B02  D005               	bra	u10850
 30806  007B04                     u10857:
 30807  007B04  CFF6 FFE9          	movff	tblptrl,fsr0l
 30808  007B08  CFF7 FFEA          	movff	tblptrh,fsr0h
 30809  007B0C  50EF               	movf	indf0,w,c
 30810  007B0E                     u10850:
 30811  007B0E  0A2F               	xorlw	47
 30812  007B10  E105               	bnz	l9787
 30813                           
 30814                           ;fat_string.c: 107: {
 30815                           ;fat_string.c: 108: expectedchar = '/';
 30816  007B12  0E2F               	movlw	47
 30817  007B14  6E1A               	movwf	fatfs_get_substring@expectedchar,c
 30818                           
 30819                           ;fat_string.c: 109: path++;
 30820  007B16  4A07               	infsnz	fatfs_get_substring@path,f,c
 30821  007B18  2A08               	incf	fatfs_get_substring@path+1,f,c
 30822                           
 30823                           ;fat_string.c: 110: }
 30824  007B1A  D038               	goto	l9795
 30825  007B1C                     l9787:
 30826                           
 30827                           ;fat_string.c: 111: else if (path[1] == ':' || path[2] == '\\')
 30828  007B1C  2807               	incf	fatfs_get_substring@path,w,c
 30829  007B1E  6E0F               	movwf	??_fatfs_get_substring& (0+255),c
 30830  007B20  0E00               	movlw	0
 30831  007B22  2008               	addwfc	fatfs_get_substring@path+1,w,c
 30832  007B24  6E10               	movwf	(??_fatfs_get_substring+1)& (0+255),c
 30833  007B26  C00F  FFF6         	movff	??_fatfs_get_substring,tblptrl
 30834  007B2A  C010  FFF7         	movff	??_fatfs_get_substring+1,tblptrh
 30835  007B2E  0E00               	movlw	low (__mediumconst shr (0+16))
 30836  007B30  6EF8               	movwf	tblptru,c
 30837  007B32  0E0F               	movlw	(high __ramtop+-1)
 30838  007B34  64F7               	cpfsgt	tblptrh,c
 30839  007B36  D003               	bra	u10877
 30840  007B38  0008               	tblrd		*
 30841  007B3A  50F5               	movf	tablat,w,c
 30842  007B3C  D005               	bra	u10870
 30843  007B3E                     u10877:
 30844  007B3E  CFF6 FFE9          	movff	tblptrl,fsr0l
 30845  007B42  CFF7 FFEA          	movff	tblptrh,fsr0h
 30846  007B46  50EF               	movf	indf0,w,c
 30847  007B48                     u10870:
 30848  007B48  0A3A               	xorlw	58
 30849  007B4A  E01A               	bz	l9791
 30850  007B4C  0E02               	movlw	2
 30851  007B4E  2407               	addwf	fatfs_get_substring@path,w,c
 30852  007B50  6E0F               	movwf	??_fatfs_get_substring& (0+255),c
 30853  007B52  0E00               	movlw	0
 30854  007B54  2008               	addwfc	fatfs_get_substring@path+1,w,c
 30855  007B56  6E10               	movwf	(??_fatfs_get_substring+1)& (0+255),c
 30856  007B58  C00F  FFF6         	movff	??_fatfs_get_substring,tblptrl
 30857  007B5C  C010  FFF7         	movff	??_fatfs_get_substring+1,tblptrh
 30858  007B60  0E00               	movlw	low (__mediumconst shr (0+16))
 30859  007B62  6EF8               	movwf	tblptru,c
 30860  007B64  0E0F               	movlw	(high __ramtop+-1)
 30861  007B66  64F7               	cpfsgt	tblptrh,c
 30862  007B68  D003               	bra	u10897
 30863  007B6A  0008               	tblrd		*
 30864  007B6C  50F5               	movf	tablat,w,c
 30865  007B6E  D005               	bra	u10890
 30866  007B70                     u10897:
 30867  007B70  CFF6 FFE9          	movff	tblptrl,fsr0l
 30868  007B74  CFF7 FFEA          	movff	tblptrh,fsr0h
 30869  007B78  50EF               	movf	indf0,w,c
 30870  007B7A                     u10890:
 30871  007B7A  0A5C               	xorlw	92
 30872  007B7C  E001 D08D          	bnz	l1086
 30873  007B80                     l9791:
 30874                           
 30875                           ;fat_string.c: 112: {
 30876                           ;fat_string.c: 113: expectedchar = '\\';
 30877  007B80  0E5C               	movlw	92
 30878  007B82  6E1A               	movwf	fatfs_get_substring@expectedchar,c
 30879                           
 30880                           ;fat_string.c: 114: path += 3;
 30881  007B84  0E03               	movlw	3
 30882  007B86  2607               	addwf	fatfs_get_substring@path,f,c
 30883  007B88  0E00               	movlw	0
 30884  007B8A  2208               	addwfc	fatfs_get_substring@path+1,f,c
 30885  007B8C                     l9795:
 30886                           
 30887                           ;fat_string.c: 120: pathlen = (int)strlen (path);
 30888  007B8C  C008  F002         	movff	fatfs_get_substring@path+1,strlen@s+1
 30889  007B90  C007  F001         	movff	fatfs_get_substring@path,strlen@s
 30890  007B94  EC7B  F022         	call	_strlen	;wreg free
 30891  007B98  C001  F016         	movff	?_strlen,fatfs_get_substring@pathlen
 30892  007B9C  C002  F017         	movff	?_strlen+1,fatfs_get_substring@pathlen+1
 30893                           
 30894                           ;fat_string.c: 123: for (i = 0; i<pathlen; i++)
 30895  007BA0  6A15               	clrf	fatfs_get_substring@i+1,c
 30896  007BA2  6A14               	clrf	fatfs_get_substring@i,c
 30897  007BA4  D05F               	goto	l9817
 30898  007BA6                     l9799:
 30899                           
 30900                           ;fat_string.c: 124: {
 30901                           ;fat_string.c: 126: if (*path == expectedchar) levels++;
 30902  007BA6  C007  FFF6         	movff	fatfs_get_substring@path,tblptrl
 30903  007BAA  C008  FFF7         	movff	fatfs_get_substring@path+1,tblptrh
 30904  007BAE  0E00               	movlw	low (__mediumconst shr (0+16))
 30905  007BB0  6EF8               	movwf	tblptru,c
 30906  007BB2  0E0F               	movlw	(high __ramtop+-1)
 30907  007BB4  64F7               	cpfsgt	tblptrh,c
 30908  007BB6  D003               	bra	u10917
 30909  007BB8  0008               	tblrd		*
 30910  007BBA  50F5               	movf	tablat,w,c
 30911  007BBC  D005               	bra	u10910
 30912  007BBE                     u10917:
 30913  007BBE  CFF6 FFE9          	movff	tblptrl,fsr0l
 30914  007BC2  CFF7 FFEA          	movff	tblptrh,fsr0h
 30915  007BC6  50EF               	movf	indf0,w,c
 30916  007BC8                     u10910:
 30917  007BC8  181A               	xorwf	fatfs_get_substring@expectedchar,w,c
 30918  007BCA  E102               	bnz	l9803
 30919  007BCC  4A18               	infsnz	fatfs_get_substring@levels,f,c
 30920  007BCE  2A19               	incf	fatfs_get_substring@levels+1,f,c
 30921  007BD0                     l9803:
 30922                           
 30923                           ;fat_string.c: 129: if ( (levels == levelreq) && (*path != expectedchar) && (copypnt < (
      +                          max_len-1)))
 30924  007BD0  500A               	movf	fatfs_get_substring@levelreq+1,w,c
 30925  007BD2  1819               	xorwf	fatfs_get_substring@levels+1,w,c
 30926  007BD4  E102               	bnz	u10935
 30927  007BD6  5009               	movf	fatfs_get_substring@levelreq,w,c
 30928  007BD8  1818               	xorwf	fatfs_get_substring@levels,w,c
 30929  007BDA                     u10935:
 30930  007BDA  E140               	bnz	l9813
 30931  007BDC  C007  FFF6         	movff	fatfs_get_substring@path,tblptrl
 30932  007BE0  C008  FFF7         	movff	fatfs_get_substring@path+1,tblptrh
 30933  007BE4  0E00               	movlw	low (__mediumconst shr (0+16))
 30934  007BE6  6EF8               	movwf	tblptru,c
 30935  007BE8  0E0F               	movlw	(high __ramtop+-1)
 30936  007BEA  64F7               	cpfsgt	tblptrh,c
 30937  007BEC  D003               	bra	u10947
 30938  007BEE  0008               	tblrd		*
 30939  007BF0  50F5               	movf	tablat,w,c
 30940  007BF2  D005               	bra	u10940
 30941  007BF4                     u10947:
 30942  007BF4  CFF6 FFE9          	movff	tblptrl,fsr0l
 30943  007BF8  CFF7 FFEA          	movff	tblptrh,fsr0h
 30944  007BFC  50EF               	movf	indf0,w,c
 30945  007BFE                     u10940:
 30946  007BFE  181A               	xorwf	fatfs_get_substring@expectedchar,w,c
 30947  007C00  E02D               	bz	l9813
 30948  007C02  680F               	setf	??_fatfs_get_substring& (0+255),c
 30949  007C04  6810               	setf	(??_fatfs_get_substring+1)& (0+255),c
 30950  007C06  C00D  F011         	movff	fatfs_get_substring@max_len,??_fatfs_get_substring+2
 30951  007C0A  C00E  F012         	movff	fatfs_get_substring@max_len+1,??_fatfs_get_substring+3
 30952  007C0E  500F               	movf	??_fatfs_get_substring,w,c
 30953  007C10  2611               	addwf	??_fatfs_get_substring+2,f,c
 30954  007C12  5010               	movf	??_fatfs_get_substring+1,w,c
 30955  007C14  2212               	addwfc	??_fatfs_get_substring+3,f,c
 30956  007C16  501C               	movf	fatfs_get_substring@copypnt+1,w,c
 30957  007C18  0A80               	xorlw	128
 30958  007C1A  6E13               	movwf	(??_fatfs_get_substring+4)& (0+255),c
 30959  007C1C  5011               	movf	??_fatfs_get_substring+2,w,c
 30960  007C1E  5C1B               	subwf	fatfs_get_substring@copypnt,w,c
 30961  007C20  5012               	movf	??_fatfs_get_substring+3,w,c
 30962  007C22  0A80               	xorlw	128
 30963  007C24  5813               	subwfb	(??_fatfs_get_substring+4)& (0+255),w,c
 30964  007C26  E21A               	bc	l9813
 30965                           
 30966                           ;fat_string.c: 130: output[copypnt++] = *path;
 30967  007C28  C007  FFF6         	movff	fatfs_get_substring@path,tblptrl
 30968  007C2C  C008  FFF7         	movff	fatfs_get_substring@path+1,tblptrh
 30969  007C30  0E00               	movlw	low (__mediumconst shr (0+16))
 30970  007C32  6EF8               	movwf	tblptru,c
 30971  007C34  501B               	movf	fatfs_get_substring@copypnt,w,c
 30972  007C36  240B               	addwf	fatfs_get_substring@output,w,c
 30973  007C38  6ED9               	movwf	fsr2l,c
 30974  007C3A  501C               	movf	fatfs_get_substring@copypnt+1,w,c
 30975  007C3C  200C               	addwfc	fatfs_get_substring@output+1,w,c
 30976  007C3E  6EDA               	movwf	fsr2h,c
 30977  007C40  0E0F               	movlw	(high __ramtop+-1)
 30978  007C42  64F7               	cpfsgt	tblptrh,c
 30979  007C44  D003               	bra	u10977
 30980  007C46  0008               	tblrd		*
 30981  007C48  50F5               	movf	tablat,w,c
 30982  007C4A  D005               	bra	u10970
 30983  007C4C                     u10977:
 30984  007C4C  CFF6 FFE9          	movff	tblptrl,fsr0l
 30985  007C50  CFF7 FFEA          	movff	tblptrh,fsr0h
 30986  007C54  50EF               	movf	indf0,w,c
 30987  007C56                     u10970:
 30988  007C56  6EDF               	movwf	indf2,c
 30989  007C58  4A1B               	infsnz	fatfs_get_substring@copypnt,f,c
 30990  007C5A  2A1C               	incf	fatfs_get_substring@copypnt+1,f,c
 30991  007C5C                     l9813:
 30992                           
 30993                           ;fat_string.c: 133: path++;
 30994  007C5C  4A07               	infsnz	fatfs_get_substring@path,f,c
 30995  007C5E  2A08               	incf	fatfs_get_substring@path+1,f,c
 30996  007C60  4A14               	infsnz	fatfs_get_substring@i,f,c
 30997  007C62  2A15               	incf	fatfs_get_substring@i+1,f,c
 30998  007C64                     l9817:
 30999  007C64  5015               	movf	fatfs_get_substring@i+1,w,c
 31000  007C66  0A80               	xorlw	128
 31001  007C68  6E0F               	movwf	??_fatfs_get_substring& (0+255),c
 31002  007C6A  5016               	movf	fatfs_get_substring@pathlen,w,c
 31003  007C6C  5C14               	subwf	fatfs_get_substring@i,w,c
 31004  007C6E  5017               	movf	fatfs_get_substring@pathlen+1,w,c
 31005  007C70  0A80               	xorlw	128
 31006  007C72  580F               	subwfb	??_fatfs_get_substring& (0+255),w,c
 31007  007C74  E398               	bnc	l9799
 31008                           
 31009                           ;fat_string.c: 134: }
 31010                           ;fat_string.c: 137: output[copypnt] = '\0';
 31011  007C76  501B               	movf	fatfs_get_substring@copypnt,w,c
 31012  007C78  240B               	addwf	fatfs_get_substring@output,w,c
 31013  007C7A  6ED9               	movwf	fsr2l,c
 31014  007C7C  501C               	movf	fatfs_get_substring@copypnt+1,w,c
 31015  007C7E  200C               	addwfc	fatfs_get_substring@output+1,w,c
 31016  007C80  6EDA               	movwf	fsr2h,c
 31017  007C82  0E00               	movlw	0
 31018  007C84  6EDF               	movwf	indf2,c
 31019                           
 31020                           ;fat_string.c: 140: if (output[0] != '\0')
 31021  007C86  C00B  FFD9         	movff	fatfs_get_substring@output,fsr2l
 31022  007C8A  C00C  FFDA         	movff	fatfs_get_substring@output+1,fsr2h
 31023  007C8E  50DF               	movf	indf2,w,c
 31024  007C90  E004               	bz	l1086
 31025                           
 31026                           ;fat_string.c: 141: return 0;
 31027  007C92  0E00               	movlw	0
 31028  007C94  6E08               	movwf	?_fatfs_get_substring+1,c
 31029  007C96  6E07               	movwf	?_fatfs_get_substring,c
 31030  007C98  D002               	goto	l1074
 31031  007C9A                     l1086:
 31032                           
 31033                           ;fat_string.c: 142: else
 31034                           ;fat_string.c: 143: return -1;
 31035  007C9A  6807               	setf	?_fatfs_get_substring,c
 31036  007C9C  6808               	setf	?_fatfs_get_substring+1,c
 31037  007C9E                     l1074:
 31038  007C9E  0012               	return	
 31039  007CA0                     __end_of_fatfs_get_substring:
 31040                           	opt stack 0
 31041                           tosu	equ	0xFFF
 31042                           tosh	equ	0xFFE
 31043                           tosl	equ	0xFFD
 31044                           pclath	equ	0xFFA
 31045                           tblptru	equ	0xFF8
 31046                           tblptrh	equ	0xFF7
 31047                           tblptrl	equ	0xFF6
 31048                           tablat	equ	0xFF5
 31049                           prodh	equ	0xFF4
 31050                           prodl	equ	0xFF3
 31051                           indf0	equ	0xFEF
 31052                           postinc0	equ	0xFEE
 31053                           fsr0h	equ	0xFEA
 31054                           fsr0l	equ	0xFE9
 31055                           wreg	equ	0xFE8
 31056                           indf1	equ	0xFE7
 31057                           postinc1	equ	0xFE6
 31058                           postdec1	equ	0xFE5
 31059                           fsr1h	equ	0xFE2
 31060                           fsr1l	equ	0xFE1
 31061                           indf2	equ	0xFDF
 31062                           postinc2	equ	0xFDE
 31063                           postdec2	equ	0xFDD
 31064                           fsr2h	equ	0xFDA
 31065                           fsr2l	equ	0xFD9
 31066                           status	equ	0xFD8
 31067                           
 31068 ;; *************** function _fatfs_get_root_cluster *****************
 31069 ;; Defined at:
 31070 ;;		line 398 in file "fat_access.c"
 31071 ;; Parameters:    Size  Location     Type
 31072 ;;  fs              2    0[COMRAM] PTR struct fatfs
 31073 ;;		 -> _fs(1095), 
 31074 ;; Auto vars:     Size  Location     Type
 31075 ;;		None
 31076 ;; Return value:  Size  Location     Type
 31077 ;;                  4    0[COMRAM] unsigned long 
 31078 ;; Registers used:
 31079 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31080 ;; Tracked objects:
 31081 ;;		On entry : 0/0
 31082 ;;		On exit  : 0/0
 31083 ;;		Unchanged: 0/0
 31084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31088 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31089 ;;Total ram usage:        4 bytes
 31090 ;; Hardware stack levels used:    1
 31091 ;; This function calls:
 31092 ;;		Nothing
 31093 ;; This function is called by:
 31094 ;;		__open_directory
 31095 ;;		__create_directory
 31096 ;;		__open_file
 31097 ;;		__create_file
 31098 ;;		_fl_opendir
 31099 ;; This function uses a non-reentrant model
 31100 ;;
 31101                           
 31102                           	psect	text91
 31103  003F20                     __ptext91:
 31104                           	opt stack 0
 31105  003F20                     _fatfs_get_root_cluster:
 31106                           	opt stack 28
 31107                           
 31108                           ;fat_access.c: 401: return fs->rootdir_first_cluster;
 31109                           
 31110                           ;incstack = 0
 31111  003F20  EE20 F005          	lfsr	2,5
 31112  003F24  5001               	movf	fatfs_get_root_cluster@fs,w,c
 31113  003F26  26D9               	addwf	fsr2l,f,c
 31114  003F28  5002               	movf	fatfs_get_root_cluster@fs+1,w,c
 31115  003F2A  22DA               	addwfc	fsr2h,f,c
 31116  003F2C  CFDE F001          	movff	postinc2,?_fatfs_get_root_cluster
 31117  003F30  CFDE F002          	movff	postinc2,?_fatfs_get_root_cluster+1
 31118  003F34  CFDE F003          	movff	postinc2,?_fatfs_get_root_cluster+2
 31119  003F38  CFDE F004          	movff	postinc2,?_fatfs_get_root_cluster+3
 31120  003F3C  0012               	return	
 31121  003F3E                     __end_of_fatfs_get_root_cluster:
 31122                           	opt stack 0
 31123                           tosu	equ	0xFFF
 31124                           tosh	equ	0xFFE
 31125                           tosl	equ	0xFFD
 31126                           pclath	equ	0xFFA
 31127                           tblptru	equ	0xFF8
 31128                           tblptrh	equ	0xFF7
 31129                           tblptrl	equ	0xFF6
 31130                           tablat	equ	0xFF5
 31131                           prodh	equ	0xFF4
 31132                           prodl	equ	0xFF3
 31133                           indf0	equ	0xFEF
 31134                           postinc0	equ	0xFEE
 31135                           fsr0h	equ	0xFEA
 31136                           fsr0l	equ	0xFE9
 31137                           wreg	equ	0xFE8
 31138                           indf1	equ	0xFE7
 31139                           postinc1	equ	0xFE6
 31140                           postdec1	equ	0xFE5
 31141                           fsr1h	equ	0xFE2
 31142                           fsr1l	equ	0xFE1
 31143                           indf2	equ	0xFDF
 31144                           postinc2	equ	0xFDE
 31145                           postdec2	equ	0xFDD
 31146                           fsr2h	equ	0xFDA
 31147                           fsr2l	equ	0xFD9
 31148                           status	equ	0xFD8
 31149                           
 31150 ;; *************** function _fatfs_get_file_entry *****************
 31151 ;; Defined at:
 31152 ;;		line 406 in file "fat_access.c"
 31153 ;; Parameters:    Size  Location     Type
 31154 ;;  fs              2   44[BANK0 ] PTR struct fatfs
 31155 ;;		 -> _fs(1095), 
 31156 ;;  Cluster         4   46[BANK0 ] unsigned long 
 31157 ;;  name_to_find    2   50[BANK0 ] PTR unsigned char 
 31158 ;;		 -> _open_directory@currentfolder(10), RAM(3967), NULL(0), 
 31159 ;;  sfEntry         2   52[BANK0 ] PTR struct fat_dir_entry
 31160 ;;		 -> _create_file@sfEntry(32), _open_file@sfEntry(32), _create_directory@sfEntry(32), _open_directory@sfEntry(32), 
 31161 ;; Auto vars:     Size  Location     Type
 31162 ;;  lfn            52   25[BANK1 ] struct lfn_cache
 31163 ;;  short_filena   13    0[BANK1 ] unsigned char [13]
 31164 ;;  directoryEnt    2   22[BANK1 ] PTR struct fat_dir_entry
 31165 ;;		 -> _fs.currentsector.sector(512), 
 31166 ;;  recordoffset    2   19[BANK1 ] unsigned short 
 31167 ;;  dotRequired     2   17[BANK1 ] int 
 31168 ;;  long_filenam    2   15[BANK1 ] PTR unsigned char 
 31169 ;;		 -> lfn.String(50), lfn.String(50), fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
 31170 ;;		 -> NULL(0), 
 31171 ;;  x               2   13[BANK1 ] int 
 31172 ;;  i               1   24[BANK1 ] unsigned char 
 31173 ;;  item            1   21[BANK1 ] unsigned char 
 31174 ;; Return value:  Size  Location     Type
 31175 ;;                  4   44[BANK0 ] unsigned long 
 31176 ;; Registers used:
 31177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31178 ;; Tracked objects:
 31179 ;;		On entry : 0/0
 31180 ;;		On exit  : 0/0
 31181 ;;		Unchanged: 0/0
 31182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31183 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31184 ;;      Locals:         0       0      77       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31185 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31186 ;;      Totals:         0      12      77       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31187 ;;Total ram usage:       89 bytes
 31188 ;; Hardware stack levels used:    1
 31189 ;; Hardware stack levels required when called:    7
 31190 ;; This function calls:
 31191 ;;		_fatfs_compare_names
 31192 ;;		_fatfs_entry_lfn_exists
 31193 ;;		_fatfs_entry_lfn_invalid
 31194 ;;		_fatfs_entry_lfn_text
 31195 ;;		_fatfs_entry_sfn_only
 31196 ;;		_fatfs_lfn_cache_entry
 31197 ;;		_fatfs_lfn_cache_get
 31198 ;;		_fatfs_lfn_cache_init
 31199 ;;		_fatfs_sector_reader
 31200 ;;		_memcpy
 31201 ;;		_memset
 31202 ;; This function is called by:
 31203 ;;		__open_directory
 31204 ;;		__create_directory
 31205 ;;		__open_file
 31206 ;;		__create_file
 31207 ;; This function uses a non-reentrant model
 31208 ;;
 31209                           
 31210                           	psect	text92
 31211  00936C                     __ptext92:
 31212                           	opt stack 0
 31213  00936C                     _fatfs_get_file_entry:
 31214                           	opt stack 20
 31215                           
 31216                           ;fat_access.c: 408: uint8 item=0;
 31217                           
 31218                           ;incstack = 0
 31219  00936C  0101               	movlb	1	; () banked
 31220  00936E  6B15               	clrf	fatfs_get_file_entry@item& (0+255),b
 31221                           
 31222                           ;fat_access.c: 409: uint16 recordoffset = 0;
 31223  009370  6B14               	clrf	(fatfs_get_file_entry@recordoffset+1)& (0+255),b
 31224  009372  6B13               	clrf	fatfs_get_file_entry@recordoffset& (0+255),b
 31225                           
 31226                           ;fat_access.c: 410: uint8 i=0;
 31227  009374  6B18               	clrf	fatfs_get_file_entry@i& (0+255),b
 31228                           
 31229                           ;fat_access.c: 411: int x=0;
 31230  009376  6B0E               	clrf	(fatfs_get_file_entry@x+1)& (0+255),b
 31231  009378  6B0D               	clrf	fatfs_get_file_entry@x& (0+255),b
 31232                           
 31233                           ; BSR set to: 1
 31234                           ;fat_access.c: 412: char *long_filename = (0);
 31235  00937A  6B10               	clrf	(fatfs_get_file_entry@long_filename+1)& (0+255),b
 31236  00937C  6B0F               	clrf	fatfs_get_file_entry@long_filename& (0+255),b
 31237                           
 31238                           ; BSR set to: 1
 31239                           ;fat_access.c: 413: char short_filename[13];
 31240                           ;fat_access.c: 414: struct lfn_cache lfn;
 31241                           ;fat_access.c: 415: int dotRequired = 0;
 31242  00937E  6B12               	clrf	(fatfs_get_file_entry@dotRequired+1)& (0+255),b
 31243  009380  6B11               	clrf	fatfs_get_file_entry@dotRequired& (0+255),b
 31244                           
 31245                           ; BSR set to: 1
 31246                           ;fat_access.c: 416: struct fat_dir_entry *directoryEntry;
 31247                           ;fat_access.c: 418: fatfs_lfn_cache_init(&lfn, 1);
 31248  009382  0E01               	movlw	high fatfs_get_file_entry@lfn
 31249  009384  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
 31250  009386  0E19               	movlw	low fatfs_get_file_entry@lfn
 31251  009388  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
 31252  00938A  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
 31253  00938C  0E01               	movlw	1
 31254  00938E  6E0B               	movwf	fatfs_lfn_cache_init@wipeTable,c
 31255  009390  EC7F  F023         	call	_fatfs_lfn_cache_init	;wreg free
 31256  009394                     l9591:
 31257                           
 31258                           ;fat_access.c: 422: {
 31259                           ;fat_access.c: 424: if (fatfs_sector_reader(fs, Cluster, x++, 0))
 31260  009394  C0AD  F081         	movff	fatfs_get_file_entry@fs+1,fatfs_sector_reader@fs+1
 31261  009398  C0AC  F080         	movff	fatfs_get_file_entry@fs,fatfs_sector_reader@fs
 31262  00939C  C0AE  F082         	movff	fatfs_get_file_entry@Cluster,fatfs_sector_reader@start_cluster
 31263  0093A0  C0AF  F083         	movff	fatfs_get_file_entry@Cluster+1,fatfs_sector_reader@start_cluster+1
 31264  0093A4  C0B0  F084         	movff	fatfs_get_file_entry@Cluster+2,fatfs_sector_reader@start_cluster+2
 31265  0093A8  C0B1  F085         	movff	fatfs_get_file_entry@Cluster+3,fatfs_sector_reader@start_cluster+3
 31266  0093AC  0101               	movlb	1	; () banked
 31267  0093AE  510D               	movf	fatfs_get_file_entry@x& (0+255),w,b
 31268  0093B0  0100               	movlb	0	; () banked
 31269  0093B2  6FB6               	movwf	??_fatfs_get_file_entry& (0+255),b
 31270  0093B4  0101               	movlb	1	; () banked
 31271  0093B6  510E               	movf	(fatfs_get_file_entry@x+1)& (0+255),w,b
 31272  0093B8  0100               	movlb	0	; () banked
 31273  0093BA  6FB7               	movwf	(??_fatfs_get_file_entry+1)& (0+255),b
 31274  0093BC  0101               	movlb	1	; () banked
 31275  0093BE  4B0D               	infsnz	fatfs_get_file_entry@x& (0+255),f,b
 31276  0093C0  2B0E               	incf	(fatfs_get_file_entry@x+1)& (0+255),f,b
 31277  0093C2  C0B6  F086         	movff	??_fatfs_get_file_entry,fatfs_sector_reader@offset
 31278  0093C6  C0B7  F087         	movff	??_fatfs_get_file_entry+1,fatfs_sector_reader@offset+1
 31279  0093CA  0E00               	movlw	0
 31280  0093CC  0100               	movlb	0	; () banked
 31281  0093CE  BF87               	btfsc	(fatfs_sector_reader@offset+1)& (0+255),7,b
 31282  0093D0  0EFF               	movlw	-1
 31283  0093D2  6F88               	movwf	(fatfs_sector_reader@offset+2)& (0+255),b
 31284  0093D4  6F89               	movwf	(fatfs_sector_reader@offset+3)& (0+255),b
 31285  0093D6  0E00               	movlw	0
 31286  0093D8  6B8B               	clrf	(fatfs_sector_reader@target+1)& (0+255),b
 31287  0093DA  6B8A               	clrf	fatfs_sector_reader@target& (0+255),b
 31288  0093DC  ECD6  F052         	call	_fatfs_sector_reader	;wreg free
 31289  0093E0  0100               	movlb	0	; () banked
 31290  0093E2  5181               	movf	(?_fatfs_sector_reader+1)& (0+255),w,b
 31291  0093E4  1180               	iorwf	?_fatfs_sector_reader& (0+255),w,b
 31292  0093E6  E101 D138          	bz	l9681
 31293                           
 31294                           ; BSR set to: 0
 31295                           ;fat_access.c: 425: {
 31296                           ;fat_access.c: 427: for (item = 0; item < (512 / 32); item++)
 31297  0093EA  0101               	movlb	1	; () banked
 31298  0093EC  6B15               	clrf	fatfs_get_file_entry@item& (0+255),b
 31299                           
 31300                           ; BSR set to: 1
 31301  0093EE  0E0F               	movlw	15
 31302  0093F0  6515               	cpfsgt	fatfs_get_file_entry@item& (0+255),b
 31303  0093F2  D001               	goto	l9599
 31304  0093F4  D7CF               	goto	l9591
 31305  0093F6                     l9599:
 31306                           
 31307                           ; BSR set to: 1
 31308                           ;fat_access.c: 428: {
 31309                           ;fat_access.c: 430: recordoffset = 32 * item;
 31310  0093F6  0101               	movlb	1	; () banked
 31311  0093F8  5115               	movf	fatfs_get_file_entry@item& (0+255),w,b
 31312  0093FA  0D20               	mullw	32
 31313  0093FC  CFF3 F113          	movff	prodl,fatfs_get_file_entry@recordoffset
 31314  009400  CFF4 F114          	movff	prodh,fatfs_get_file_entry@recordoffset+1
 31315                           
 31316                           ; BSR set to: 1
 31317                           ;fat_access.c: 433: directoryEntry = (struct fat_dir_entry*)(fs->currentsector.sector+re
      +                          cordoffset);
 31318  009404  C0AC  F0B6         	movff	fatfs_get_file_entry@fs,??_fatfs_get_file_entry
 31319  009408  C0AD  F0B7         	movff	fatfs_get_file_entry@fs+1,??_fatfs_get_file_entry+1
 31320  00940C  5113               	movf	fatfs_get_file_entry@recordoffset& (0+255),w,b
 31321  00940E  0100               	movlb	0	; () banked
 31322  009410  27B6               	addwf	??_fatfs_get_file_entry& (0+255),f,b
 31323  009412  0101               	movlb	1	; () banked
 31324  009414  5114               	movf	(fatfs_get_file_entry@recordoffset+1)& (0+255),w,b
 31325  009416  0100               	movlb	0	; () banked
 31326  009418  23B7               	addwfc	(??_fatfs_get_file_entry+1)& (0+255),f,b
 31327  00941A  0E31               	movlw	49
 31328  00941C  25B6               	addwf	??_fatfs_get_file_entry& (0+255),w,b
 31329  00941E  0101               	movlb	1	; () banked
 31330  009420  6F16               	movwf	fatfs_get_file_entry@directoryEntry& (0+255),b
 31331  009422  0E00               	movlw	0
 31332  009424  0100               	movlb	0	; () banked
 31333  009426  21B7               	addwfc	(??_fatfs_get_file_entry+1)& (0+255),w,b
 31334  009428  0101               	movlb	1	; () banked
 31335  00942A  6F17               	movwf	(fatfs_get_file_entry@directoryEntry+1)& (0+255),b
 31336                           
 31337                           ; BSR set to: 1
 31338                           ;fat_access.c: 437: if (fatfs_entry_lfn_text(directoryEntry) )
 31339  00942C  C117  F002         	movff	fatfs_get_file_entry@directoryEntry+1,fatfs_entry_lfn_text@entry+1
 31340  009430  C116  F001         	movff	fatfs_get_file_entry@directoryEntry,fatfs_entry_lfn_text@entry
 31341  009434  ECFA  F01F         	call	_fatfs_entry_lfn_text	;wreg free
 31342  009438  5002               	movf	?_fatfs_entry_lfn_text+1,w,c
 31343  00943A  1001               	iorwf	?_fatfs_entry_lfn_text,w,c
 31344  00943C  E019               	bz	l9607
 31345                           
 31346                           ;fat_access.c: 438: fatfs_lfn_cache_entry(&lfn, fs->currentsector.sector+recordoffset);
 31347  00943E  0E01               	movlw	high fatfs_get_file_entry@lfn
 31348  009440  6E02               	movwf	fatfs_lfn_cache_entry@lfn+1,c
 31349  009442  0E19               	movlw	low fatfs_get_file_entry@lfn
 31350  009444  6E01               	movwf	fatfs_lfn_cache_entry@lfn,c
 31351  009446  C0AC  F0B6         	movff	fatfs_get_file_entry@fs,??_fatfs_get_file_entry
 31352  00944A  C0AD  F0B7         	movff	fatfs_get_file_entry@fs+1,??_fatfs_get_file_entry+1
 31353  00944E  0101               	movlb	1	; () banked
 31354  009450  5113               	movf	fatfs_get_file_entry@recordoffset& (0+255),w,b
 31355  009452  0100               	movlb	0	; () banked
 31356  009454  27B6               	addwf	??_fatfs_get_file_entry& (0+255),f,b
 31357  009456  0101               	movlb	1	; () banked
 31358  009458  5114               	movf	(fatfs_get_file_entry@recordoffset+1)& (0+255),w,b
 31359  00945A  0100               	movlb	0	; () banked
 31360  00945C  23B7               	addwfc	(??_fatfs_get_file_entry+1)& (0+255),f,b
 31361  00945E  0E31               	movlw	49
 31362  009460  25B6               	addwf	??_fatfs_get_file_entry& (0+255),w,b
 31363  009462  6E03               	movwf	fatfs_lfn_cache_entry@entryBuffer,c
 31364  009464  0E00               	movlw	0
 31365  009466  21B7               	addwfc	(??_fatfs_get_file_entry+1)& (0+255),w,b
 31366  009468  6E04               	movwf	fatfs_lfn_cache_entry@entryBuffer+1,c
 31367  00946A  EC9D  F067         	call	_fatfs_lfn_cache_entry	;wreg free
 31368  00946E  D0EF               	goto	l9677
 31369  009470                     l9607:
 31370                           
 31371                           ;fat_access.c: 441: else if (fatfs_entry_lfn_invalid(directoryEntry) )
 31372  009470  C117  F002         	movff	fatfs_get_file_entry@directoryEntry+1,fatfs_entry_lfn_invalid@entry+1
 31373  009474  0101               	movlb	1	; () banked
 31374  009476  C116  F001         	movff	fatfs_get_file_entry@directoryEntry,fatfs_entry_lfn_invalid@entry
 31375  00947A  ECA4  F022         	call	_fatfs_entry_lfn_invalid	;wreg free
 31376  00947E  5002               	movf	?_fatfs_entry_lfn_invalid+1,w,c
 31377  009480  1001               	iorwf	?_fatfs_entry_lfn_invalid,w,c
 31378  009482  E00B               	bz	l9611
 31379                           
 31380                           ;fat_access.c: 442: fatfs_lfn_cache_init(&lfn, 0);
 31381  009484  0E01               	movlw	high fatfs_get_file_entry@lfn
 31382  009486  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
 31383  009488  0101               	movlb	1	; () banked
 31384  00948A  0E19               	movlw	low fatfs_get_file_entry@lfn
 31385  00948C  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
 31386  00948E  0E00               	movlw	0
 31387  009490  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
 31388  009492  6A0B               	clrf	fatfs_lfn_cache_init@wipeTable,c
 31389  009494  EC7F  F023         	call	_fatfs_lfn_cache_init	;wreg free
 31390  009498  D0DA               	goto	l9677
 31391  00949A                     l9611:
 31392                           
 31393                           ;fat_access.c: 445: else if (fatfs_entry_lfn_exists(&lfn, directoryEntry) )
 31394  00949A  0E01               	movlw	high fatfs_get_file_entry@lfn
 31395  00949C  6E02               	movwf	fatfs_entry_lfn_exists@lfn+1,c
 31396  00949E  0E19               	movlw	low fatfs_get_file_entry@lfn
 31397  0094A0  6E01               	movwf	fatfs_entry_lfn_exists@lfn,c
 31398  0094A2  C117  F004         	movff	fatfs_get_file_entry@directoryEntry+1,fatfs_entry_lfn_exists@entry+1
 31399  0094A6  0101               	movlb	1	; () banked
 31400  0094A8  C116  F003         	movff	fatfs_get_file_entry@directoryEntry,fatfs_entry_lfn_exists@entry
 31401  0094AC  EC4B  F026         	call	_fatfs_entry_lfn_exists	;wreg free
 31402  0094B0  5002               	movf	?_fatfs_entry_lfn_exists+1,w,c
 31403  0094B2  1001               	iorwf	?_fatfs_entry_lfn_exists,w,c
 31404  0094B4  E034               	bz	l9625
 31405                           
 31406                           ;fat_access.c: 446: {
 31407                           ;fat_access.c: 447: long_filename = fatfs_lfn_cache_get(&lfn);
 31408  0094B6  0E01               	movlw	high fatfs_get_file_entry@lfn
 31409  0094B8  6E02               	movwf	fatfs_lfn_cache_get@lfn+1,c
 31410  0094BA  0101               	movlb	1	; () banked
 31411  0094BC  0E19               	movlw	low fatfs_get_file_entry@lfn
 31412  0094BE  6E01               	movwf	fatfs_lfn_cache_get@lfn,c
 31413  0094C0  EC02  F025         	call	_fatfs_lfn_cache_get	;wreg free
 31414  0094C4  C001  F10F         	movff	?_fatfs_lfn_cache_get,fatfs_get_file_entry@long_filename
 31415  0094C8  C002  F110         	movff	?_fatfs_lfn_cache_get+1,fatfs_get_file_entry@long_filename+1
 31416                           
 31417                           ;fat_access.c: 450: if (fatfs_compare_names(long_filename, name_to_find))
 31418  0094CC  C110  F014         	movff	fatfs_get_file_entry@long_filename+1,fatfs_compare_names@strA+1
 31419  0094D0  C10F  F013         	movff	fatfs_get_file_entry@long_filename,fatfs_compare_names@strA
 31420  0094D4  C0B3  F016         	movff	fatfs_get_file_entry@name_to_find+1,fatfs_compare_names@strB+1
 31421  0094D8  0100               	movlb	0	; () banked
 31422  0094DA  C0B2  F015         	movff	fatfs_get_file_entry@name_to_find,fatfs_compare_names@strB
 31423  0094DE  EC70  F037         	call	_fatfs_compare_names	;wreg free
 31424  0094E2  5014               	movf	?_fatfs_compare_names+1,w,c
 31425  0094E4  1013               	iorwf	?_fatfs_compare_names,w,c
 31426  0094E6  E010               	bz	l9623
 31427                           
 31428                           ;fat_access.c: 451: {
 31429                           ;fat_access.c: 452: memcpy(sfEntry,directoryEntry,sizeof(struct fat_dir_entry));
 31430  0094E8  C0B5  F002         	movff	fatfs_get_file_entry@sfEntry+1,memcpy@d1+1
 31431  0094EC  C0B4  F001         	movff	fatfs_get_file_entry@sfEntry,memcpy@d1
 31432  0094F0  0E20               	movlw	32
 31433  0094F2  6E05               	movwf	memcpy@s1+2,c
 31434  0094F4  C117  F004         	movff	fatfs_get_file_entry@directoryEntry+1,memcpy@s1+1
 31435  0094F8  0101               	movlb	1	; () banked
 31436  0094FA  C116  F003         	movff	fatfs_get_file_entry@directoryEntry,memcpy@s1
 31437  0094FE  6A07               	clrf	memcpy@n+1,c
 31438  009500  6E06               	movwf	memcpy@n,c
 31439  009502  ECAE  F023         	call	_memcpy	;wreg free
 31440  009506  D097               	goto	L103
 31441  009508                     l9623:
 31442                           
 31443                           ;fat_access.c: 454: }
 31444                           ;fat_access.c: 456: fatfs_lfn_cache_init(&lfn, 0);
 31445  009508  0E01               	movlw	high fatfs_get_file_entry@lfn
 31446  00950A  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
 31447  00950C  0101               	movlb	1	; () banked
 31448  00950E  0E19               	movlw	low fatfs_get_file_entry@lfn
 31449  009510  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
 31450  009512  0E00               	movlw	0
 31451  009514  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
 31452  009516  6A0B               	clrf	fatfs_lfn_cache_init@wipeTable,c
 31453  009518  EC7F  F023         	call	_fatfs_lfn_cache_init	;wreg free
 31454                           
 31455                           ;fat_access.c: 457: }
 31456  00951C  D098               	goto	l9677
 31457  00951E                     l9625:
 31458                           
 31459                           ;fat_access.c: 458: else
 31460                           ;fat_access.c: 461: if (fatfs_entry_sfn_only(directoryEntry) )
 31461  00951E  C117  F002         	movff	fatfs_get_file_entry@directoryEntry+1,fatfs_entry_sfn_only@entry+1
 31462  009522  0101               	movlb	1	; () banked
 31463  009524  C116  F001         	movff	fatfs_get_file_entry@directoryEntry,fatfs_entry_sfn_only@entry
 31464  009528  ECD0  F024         	call	_fatfs_entry_sfn_only	;wreg free
 31465  00952C  5002               	movf	?_fatfs_entry_sfn_only+1,w,c
 31466  00952E  1001               	iorwf	?_fatfs_entry_sfn_only,w,c
 31467  009530  E101 D08D          	bz	l9677
 31468                           
 31469                           ;fat_access.c: 462: {
 31470                           ;fat_access.c: 463: memset(short_filename, 0, sizeof(short_filename));
 31471  009534  0E01               	movlw	high fatfs_get_file_entry@short_filename
 31472  009536  6E02               	movwf	memset@p1+1,c
 31473  009538  0101               	movlb	1	; () banked
 31474  00953A  0E00               	movlw	low fatfs_get_file_entry@short_filename
 31475  00953C  6E01               	movwf	memset@p1,c
 31476  00953E  6A04               	clrf	memset@c+1,c
 31477  009540  6A03               	clrf	memset@c,c
 31478  009542  6A06               	clrf	memset@n+1,c
 31479  009544  0E0D               	movlw	13
 31480  009546  6E05               	movwf	memset@n,c
 31481  009548  EC24  F020         	call	_memset	;wreg free
 31482                           
 31483                           ;fat_access.c: 466: for (i=0; i<8; i++)
 31484  00954C  0101               	movlb	1	; () banked
 31485  00954E  6B18               	clrf	fatfs_get_file_entry@i& (0+255),b
 31486  009550  D014               	goto	L107
 31487  009552                     l9635:
 31488                           
 31489                           ; BSR set to: 1
 31490                           ;fat_access.c: 467: short_filename[i] = directoryEntry->Name[i];
 31491  009552  0101               	movlb	1	; () banked
 31492  009554  5118               	movf	fatfs_get_file_entry@i& (0+255),w,b
 31493  009556  0D01               	mullw	1
 31494  009558  50F3               	movf	prodl,w,c
 31495  00955A  2516               	addwf	fatfs_get_file_entry@directoryEntry& (0+255),w,b
 31496  00955C  6ED9               	movwf	fsr2l,c
 31497  00955E  50F4               	movf	prodh,w,c
 31498  009560  2117               	addwfc	(fatfs_get_file_entry@directoryEntry+1)& (0+255),w,b
 31499  009562  6EDA               	movwf	fsr2h,c
 31500  009564  5118               	movf	fatfs_get_file_entry@i& (0+255),w,b
 31501  009566  0D01               	mullw	1
 31502  009568  0E00               	movlw	low fatfs_get_file_entry@short_filename
 31503  00956A  24F3               	addwf	prodl,w,c
 31504  00956C  6EE1               	movwf	fsr1l,c
 31505  00956E  0E01               	movlw	high fatfs_get_file_entry@short_filename
 31506  009570  20F4               	addwfc	prodh,w,c
 31507  009572  6EE2               	movwf	fsr1h,c
 31508  009574  CFDF FFE7          	movff	indf2,indf1
 31509                           
 31510                           ; BSR set to: 1
 31511  009578  2B18               	incf	fatfs_get_file_entry@i& (0+255),f,b
 31512  00957A                     L107:
 31513                           
 31514                           ; BSR set to: 1
 31515  00957A  0E07               	movlw	7
 31516  00957C  0101               	movlb	1	; () banked
 31517  00957E  6518               	cpfsgt	fatfs_get_file_entry@i& (0+255),b
 31518  009580  D7E8               	goto	l9635
 31519                           
 31520                           ; BSR set to: 1
 31521                           ;fat_access.c: 470: dotRequired = 0;
 31522                           
 31523                           ; BSR set to: 1
 31524  009582  6B12               	clrf	(fatfs_get_file_entry@dotRequired+1)& (0+255),b
 31525  009584  6B11               	clrf	fatfs_get_file_entry@dotRequired& (0+255),b
 31526                           
 31527                           ;fat_access.c: 471: for (i=8; i<11; i++)
 31528  009586  0E08               	movlw	8
 31529  009588  6F18               	movwf	fatfs_get_file_entry@i& (0+255),b
 31530  00958A  D029               	goto	L108
 31531  00958C                     l9647:
 31532                           
 31533                           ; BSR set to: 1
 31534                           ;fat_access.c: 472: {
 31535                           ;fat_access.c: 473: short_filename[i+1] = directoryEntry->Name[i];
 31536  00958C  0101               	movlb	1	; () banked
 31537  00958E  5118               	movf	fatfs_get_file_entry@i& (0+255),w,b
 31538  009590  0D01               	mullw	1
 31539  009592  50F3               	movf	prodl,w,c
 31540  009594  2516               	addwf	fatfs_get_file_entry@directoryEntry& (0+255),w,b
 31541  009596  6ED9               	movwf	fsr2l,c
 31542  009598  50F4               	movf	prodh,w,c
 31543  00959A  2117               	addwfc	(fatfs_get_file_entry@directoryEntry+1)& (0+255),w,b
 31544  00959C  6EDA               	movwf	fsr2h,c
 31545  00959E  5118               	movf	fatfs_get_file_entry@i& (0+255),w,b
 31546  0095A0  0100               	movlb	0	; () banked
 31547  0095A2  6FB6               	movwf	??_fatfs_get_file_entry& (0+255),b
 31548  0095A4  6BB7               	clrf	(??_fatfs_get_file_entry+1)& (0+255),b
 31549  0095A6  2BB6               	incf	??_fatfs_get_file_entry& (0+255),f,b
 31550  0095A8  0E00               	movlw	0
 31551  0095AA  23B7               	addwfc	(??_fatfs_get_file_entry+1)& (0+255),f,b
 31552  0095AC  0E00               	movlw	low fatfs_get_file_entry@short_filename
 31553  0095AE  25B6               	addwf	??_fatfs_get_file_entry& (0+255),w,b
 31554  0095B0  6EE1               	movwf	fsr1l,c
 31555  0095B2  0E01               	movlw	high fatfs_get_file_entry@short_filename
 31556  0095B4  21B7               	addwfc	(??_fatfs_get_file_entry+1)& (0+255),w,b
 31557  0095B6  6EE2               	movwf	fsr1h,c
 31558  0095B8  CFDF FFE7          	movff	indf2,indf1
 31559                           
 31560                           ; BSR set to: 0
 31561                           ;fat_access.c: 474: if (directoryEntry->Name[i] != ' ')
 31562  0095BC  0101               	movlb	1	; () banked
 31563  0095BE  5118               	movf	fatfs_get_file_entry@i& (0+255),w,b
 31564  0095C0  0D01               	mullw	1
 31565  0095C2  50F3               	movf	prodl,w,c
 31566  0095C4  2516               	addwf	fatfs_get_file_entry@directoryEntry& (0+255),w,b
 31567  0095C6  6ED9               	movwf	fsr2l,c
 31568  0095C8  50F4               	movf	prodh,w,c
 31569  0095CA  2117               	addwfc	(fatfs_get_file_entry@directoryEntry+1)& (0+255),w,b
 31570  0095CC  6EDA               	movwf	fsr2h,c
 31571  0095CE  50DF               	movf	indf2,w,c
 31572  0095D0  0A20               	xorlw	32
 31573  0095D2  E003               	bz	l9653
 31574                           
 31575                           ; BSR set to: 1
 31576                           ;fat_access.c: 475: dotRequired = 1;
 31577  0095D4  6B12               	clrf	(fatfs_get_file_entry@dotRequired+1)& (0+255),b
 31578  0095D6  0E01               	movlw	1
 31579  0095D8  6F11               	movwf	fatfs_get_file_entry@dotRequired& (0+255),b
 31580  0095DA                     l9653:
 31581                           
 31582                           ; BSR set to: 1
 31583  0095DA  0101               	movlb	1	; () banked
 31584  0095DC  2B18               	incf	fatfs_get_file_entry@i& (0+255),f,b
 31585  0095DE                     L108:
 31586                           
 31587                           ; BSR set to: 1
 31588  0095DE  0E0A               	movlw	10
 31589  0095E0  0101               	movlb	1	; () banked
 31590  0095E2  6518               	cpfsgt	fatfs_get_file_entry@i& (0+255),b
 31591  0095E4  D7D3               	goto	l9647
 31592                           
 31593                           ; BSR set to: 1
 31594                           ;fat_access.c: 476: }
 31595                           ;fat_access.c: 479: if (dotRequired)
 31596                           
 31597                           ; BSR set to: 1
 31598  0095E6  5112               	movf	(fatfs_get_file_entry@dotRequired+1)& (0+255),w,b
 31599  0095E8  1111               	iorwf	fatfs_get_file_entry@dotRequired& (0+255),w,b
 31600  0095EA  E005               	bz	l9665
 31601                           
 31602                           ; BSR set to: 1
 31603                           ;fat_access.c: 480: {
 31604                           ;fat_access.c: 482: if (short_filename[0]!='.')
 31605  0095EC  5100               	movf	fatfs_get_file_entry@short_filename& (0+255),w,b
 31606  0095EE  0A2E               	xorlw	46
 31607  0095F0  E002               	bz	l9665
 31608                           
 31609                           ; BSR set to: 1
 31610                           ;fat_access.c: 483: short_filename[8] = '.';
 31611  0095F2  0E2E               	movlw	46
 31612  0095F4  D001               	goto	L106
 31613  0095F6                     l9665:
 31614                           
 31615                           ; BSR set to: 1
 31616                           ;fat_access.c: 487: else
 31617                           ;fat_access.c: 488: short_filename[8] = ' ';
 31618  0095F6  0E20               	movlw	32
 31619  0095F8                     L106:
 31620  0095F8  0101               	movlb	1	; () banked
 31621  0095FA  6F08               	movwf	(fatfs_get_file_entry@short_filename+8)& (0+255),b
 31622                           
 31623                           ; BSR set to: 1
 31624                           ;fat_access.c: 491: if (fatfs_compare_names(short_filename, name_to_find))
 31625                           
 31626                           ; BSR set to: 1
 31627  0095FC  0E01               	movlw	high fatfs_get_file_entry@short_filename
 31628  0095FE  6E14               	movwf	fatfs_compare_names@strA+1,c
 31629  009600  0E00               	movlw	low fatfs_get_file_entry@short_filename
 31630  009602  6E13               	movwf	fatfs_compare_names@strA,c
 31631  009604  C0B3  F016         	movff	fatfs_get_file_entry@name_to_find+1,fatfs_compare_names@strB+1
 31632  009608  0100               	movlb	0	; () banked
 31633  00960A  C0B2  F015         	movff	fatfs_get_file_entry@name_to_find,fatfs_compare_names@strB
 31634  00960E  EC70  F037         	call	_fatfs_compare_names	;wreg free
 31635  009612  5014               	movf	?_fatfs_compare_names+1,w,c
 31636  009614  1013               	iorwf	?_fatfs_compare_names,w,c
 31637  009616  E011               	bz	l9675
 31638                           
 31639                           ;fat_access.c: 492: {
 31640                           ;fat_access.c: 493: memcpy(sfEntry,directoryEntry,sizeof(struct fat_dir_entry));
 31641  009618  C0B5  F002         	movff	fatfs_get_file_entry@sfEntry+1,memcpy@d1+1
 31642  00961C  C0B4  F001         	movff	fatfs_get_file_entry@sfEntry,memcpy@d1
 31643  009620  0E20               	movlw	32
 31644  009622  6E05               	movwf	memcpy@s1+2,c
 31645  009624  C117  F004         	movff	fatfs_get_file_entry@directoryEntry+1,memcpy@s1+1
 31646  009628  0101               	movlb	1	; () banked
 31647  00962A  C116  F003         	movff	fatfs_get_file_entry@directoryEntry,memcpy@s1
 31648  00962E  6A07               	clrf	memcpy@n+1,c
 31649  009630  6E06               	movwf	memcpy@n,c
 31650  009632  ECAE  F023         	call	_memcpy	;wreg free
 31651  009636                     L103:
 31652                           
 31653                           ;fat_access.c: 494: return 1;
 31654  009636  0E01               	movlw	1
 31655  009638  D011               	goto	L105
 31656  00963A                     l9675:
 31657                           
 31658                           ;fat_access.c: 495: }
 31659                           ;fat_access.c: 497: fatfs_lfn_cache_init(&lfn, 0);
 31660  00963A  0E01               	movlw	high fatfs_get_file_entry@lfn
 31661  00963C  6E0A               	movwf	fatfs_lfn_cache_init@lfn+1,c
 31662  00963E  0101               	movlb	1	; () banked
 31663  009640  0E19               	movlw	low fatfs_get_file_entry@lfn
 31664  009642  6E09               	movwf	fatfs_lfn_cache_init@lfn,c
 31665  009644  0E00               	movlw	0
 31666  009646  6A0C               	clrf	fatfs_lfn_cache_init@wipeTable+1,c
 31667  009648  6A0B               	clrf	fatfs_lfn_cache_init@wipeTable,c
 31668  00964A  EC7F  F023         	call	_fatfs_lfn_cache_init	;wreg free
 31669  00964E                     l9677:
 31670  00964E  0101               	movlb	1	; () banked
 31671  009650  2B15               	incf	fatfs_get_file_entry@item& (0+255),f,b
 31672                           
 31673                           ; BSR set to: 1
 31674  009652  0E0F               	movlw	15
 31675  009654  6515               	cpfsgt	fatfs_get_file_entry@item& (0+255),b
 31676  009656  D6CF               	goto	l9599
 31677  009658  D69D               	goto	l9591
 31678  00965A                     l9681:
 31679                           
 31680                           ;fat_access.c: 503: }
 31681                           ;fat_access.c: 505: return 0;
 31682  00965A  0E00               	movlw	0
 31683  00965C                     L105:
 31684  00965C  0100               	movlb	0	; () banked
 31685  00965E  6FAC               	movwf	?_fatfs_get_file_entry& (0+255),b
 31686  009660  0E00               	movlw	0
 31687  009662  6FAD               	movwf	(?_fatfs_get_file_entry+1)& (0+255),b
 31688  009664  6FAE               	movwf	(?_fatfs_get_file_entry+2)& (0+255),b
 31689  009666  6FAF               	movwf	(?_fatfs_get_file_entry+3)& (0+255),b
 31690                           
 31691                           ; BSR set to: 0
 31692                           
 31693                           ; BSR set to: 0
 31694  009668  0C00               	retlw	0
 31695  00966A                     __end_of_fatfs_get_file_entry:
 31696                           	opt stack 0
 31697                           tosu	equ	0xFFF
 31698                           tosh	equ	0xFFE
 31699                           tosl	equ	0xFFD
 31700                           pclath	equ	0xFFA
 31701                           tblptru	equ	0xFF8
 31702                           tblptrh	equ	0xFF7
 31703                           tblptrl	equ	0xFF6
 31704                           tablat	equ	0xFF5
 31705                           prodh	equ	0xFF4
 31706                           prodl	equ	0xFF3
 31707                           indf0	equ	0xFEF
 31708                           postinc0	equ	0xFEE
 31709                           fsr0h	equ	0xFEA
 31710                           fsr0l	equ	0xFE9
 31711                           wreg	equ	0xFE8
 31712                           indf1	equ	0xFE7
 31713                           postinc1	equ	0xFE6
 31714                           postdec1	equ	0xFE5
 31715                           fsr1h	equ	0xFE2
 31716                           fsr1l	equ	0xFE1
 31717                           indf2	equ	0xFDF
 31718                           postinc2	equ	0xFDE
 31719                           postdec2	equ	0xFDD
 31720                           fsr2h	equ	0xFDA
 31721                           fsr2l	equ	0xFD9
 31722                           status	equ	0xFD8
 31723                           
 31724 ;; *************** function _memcpy *****************
 31725 ;; Defined at:
 31726 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
 31727 ;; Parameters:    Size  Location     Type
 31728 ;;  d1              2    0[COMRAM] PTR void 
 31729 ;;		 -> _fs.currentsector.sector(512), data(1), fl_fgetc@data(1), _create_file@sfEntry(32), 
 31730 ;;		 -> _open_file@sfEntry(32), _create_directory@sfEntry(32), _open_directory@sfEntry(32), RAM(3967), 
 31731 ;;		 -> NULL(0), 
 31732 ;;  s1              3    2[COMRAM] PTR const void 
 31733 ;;		 -> _fs.currentsector.sector(512), w(1), str_0(26), s(17), 
 31734 ;;		 -> data(1), m(30), fatfs_add_file_entry@shortEntry(32), fatfs_lfn_generate_tail@tail_str(12), 
 31735 ;;		 -> fl_fputc@data(1), ROM(65535), _create_file@shortFilename(11), sfEntry.Name(11), 
 31736 ;;		 -> _open_file@sfEntry(32), _create_directory@shortFilename(11), RAM(3967), NULL(0), 
 31737 ;;  n               2    5[COMRAM] unsigned int 
 31738 ;; Auto vars:     Size  Location     Type
 31739 ;;  s               3    7[COMRAM] PTR const unsigned char 
 31740 ;;		 -> _fs.currentsector.sector(512), w(1), str_0(26), s(17), 
 31741 ;;		 -> data(1), m(30), fatfs_add_file_entry@shortEntry(32), fatfs_lfn_generate_tail@tail_str(12), 
 31742 ;;		 -> fl_fputc@data(1), ROM(65535), _create_file@shortFilename(11), sfEntry.Name(11), 
 31743 ;;		 -> _open_file@sfEntry(32), _create_directory@shortFilename(11), RAM(3967), NULL(0), 
 31744 ;;  d               2   10[COMRAM] PTR unsigned char 
 31745 ;;		 -> _fs.currentsector.sector(512), data(1), fl_fgetc@data(1), _create_file@sfEntry(32), 
 31746 ;;		 -> _open_file@sfEntry(32), _create_directory@sfEntry(32), _open_directory@sfEntry(32), RAM(3967), 
 31747 ;;		 -> NULL(0), 
 31748 ;; Return value:  Size  Location     Type
 31749 ;;                  2    0[COMRAM] PTR void 
 31750 ;; Registers used:
 31751 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31752 ;; Tracked objects:
 31753 ;;		On entry : 0/0
 31754 ;;		On exit  : 0/0
 31755 ;;		Unchanged: 0/0
 31756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31757 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31758 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31760 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31761 ;;Total ram usage:       12 bytes
 31762 ;; Hardware stack levels used:    1
 31763 ;; This function calls:
 31764 ;;		Nothing
 31765 ;; This function is called by:
 31766 ;;		_fatfs_get_file_entry
 31767 ;;		_fatfs_update_file_length
 31768 ;;		_fatfs_mark_file_deleted
 31769 ;;		__create_directory
 31770 ;;		__open_file
 31771 ;;		__create_file
 31772 ;;		_fl_fread
 31773 ;;		_fl_fwrite
 31774 ;;		_fatfs_lfn_generate_tail
 31775 ;;		_fatfs_split_path
 31776 ;;		_fatfs_add_file_entry
 31777 ;; This function uses a non-reentrant model
 31778 ;;
 31779                           
 31780                           	psect	text93
 31781  00475C                     __ptext93:
 31782                           	opt stack 0
 31783  00475C                     _memcpy:
 31784                           	opt stack 26
 31785                           
 31786                           ; BSR set to: 0
 31787                           ;incstack = 0
 31788  00475C  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 31789  004760  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 31790  004764  C003  F008         	movff	memcpy@s1,memcpy@s
 31791  004768  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 31792  00476C  C001  F00B         	movff	memcpy@d1,memcpy@d
 31793  004770  D01B               	goto	l9343
 31794  004772                     l9337:
 31795  004772  C008  FFF6         	movff	memcpy@s,tblptrl
 31796  004776  C009  FFF7         	movff	memcpy@s+1,tblptrh
 31797  00477A  C00A  FFF8         	movff	memcpy@s+2,tblptru
 31798  00477E  BAF8               	btfsc	tblptru,5,c
 31799  004780  D003               	bra	u10097
 31800  004782  0008               	tblrd		*
 31801  004784  50F5               	movf	tablat,w,c
 31802  004786  D005               	bra	u10090
 31803  004788                     u10097:
 31804  004788  CFF6 FFE9          	movff	tblptrl,fsr0l
 31805  00478C  CFF7 FFEA          	movff	tblptrh,fsr0h
 31806  004790  50EF               	movf	indf0,w,c
 31807  004792                     u10090:
 31808  004792  C00B  FFD9         	movff	memcpy@d,fsr2l
 31809  004796  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 31810  00479A  6EDF               	movwf	indf2,c
 31811  00479C  2A08               	incf	memcpy@s,f,c
 31812  00479E  0E00               	movlw	0
 31813  0047A0  2209               	addwfc	memcpy@s+1,f,c
 31814  0047A2  220A               	addwfc	memcpy@s+2,f,c
 31815  0047A4  4A0B               	infsnz	memcpy@d,f,c
 31816  0047A6  2A0C               	incf	memcpy@d+1,f,c
 31817  0047A8                     l9343:
 31818  0047A8  0606               	decf	memcpy@n,f,c
 31819  0047AA  A0D8               	btfss	status,0,c
 31820  0047AC  0607               	decf	memcpy@n+1,f,c
 31821  0047AE  2806               	incf	memcpy@n& (0+255),w,c
 31822  0047B0  B4D8               	btfsc	status,2,c
 31823  0047B2  2807               	incf	(memcpy@n+1)& (0+255),w,c
 31824  0047B4  B4D8               	btfsc	status,2,c
 31825                           
 31826                           ;	Return value of _memcpy is never used
 31827  0047B6  0012               	return	
 31828  0047B8  D7DC               	goto	l9337
 31829  0047BA                     __end_of_memcpy:
 31830                           	opt stack 0
 31831                           tosu	equ	0xFFF
 31832                           tosh	equ	0xFFE
 31833                           tosl	equ	0xFFD
 31834                           pclath	equ	0xFFA
 31835                           tblptru	equ	0xFF8
 31836                           tblptrh	equ	0xFF7
 31837                           tblptrl	equ	0xFF6
 31838                           tablat	equ	0xFF5
 31839                           prodh	equ	0xFF4
 31840                           prodl	equ	0xFF3
 31841                           indf0	equ	0xFEF
 31842                           postinc0	equ	0xFEE
 31843                           fsr0h	equ	0xFEA
 31844                           fsr0l	equ	0xFE9
 31845                           wreg	equ	0xFE8
 31846                           indf1	equ	0xFE7
 31847                           postinc1	equ	0xFE6
 31848                           postdec1	equ	0xFE5
 31849                           fsr1h	equ	0xFE2
 31850                           fsr1l	equ	0xFE1
 31851                           indf2	equ	0xFDF
 31852                           postinc2	equ	0xFDE
 31853                           postdec2	equ	0xFDD
 31854                           fsr2h	equ	0xFDA
 31855                           fsr2l	equ	0xFD9
 31856                           status	equ	0xFD8
 31857                           
 31858 ;; *************** function _fatfs_sector_reader *****************
 31859 ;; Defined at:
 31860 ;;		line 219 in file "fat_access.c"
 31861 ;; Parameters:    Size  Location     Type
 31862 ;;  fs              2    0[BANK0 ] PTR struct fatfs
 31863 ;;		 -> _fs(1095), 
 31864 ;;  start_cluste    4    2[BANK0 ] unsigned long 
 31865 ;;  offset          4    6[BANK0 ] unsigned long 
 31866 ;;  target          2   10[BANK0 ] PTR unsigned char 
 31867 ;;		 -> NULL(0), 
 31868 ;; Auto vars:     Size  Location     Type
 31869 ;;  cluster_chai    4   40[BANK0 ] unsigned long 
 31870 ;;  lba             4   36[BANK0 ] unsigned long 
 31871 ;;  cluster_to_r    4   32[BANK0 ] unsigned long 
 31872 ;;  i               4   28[BANK0 ] unsigned long 
 31873 ;;  sector_to_re    4   24[BANK0 ] unsigned long 
 31874 ;; Return value:  Size  Location     Type
 31875 ;;                  2    0[BANK0 ] int 
 31876 ;; Registers used:
 31877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31878 ;; Tracked objects:
 31879 ;;		On entry : 0/0
 31880 ;;		On exit  : 0/0
 31881 ;;		Unchanged: 0/0
 31882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31883 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31884 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31885 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31886 ;;      Totals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31887 ;;Total ram usage:       44 bytes
 31888 ;; Hardware stack levels used:    1
 31889 ;; Hardware stack levels required when called:    6
 31890 ;; This function calls:
 31891 ;;		___lldiv
 31892 ;;		_fatfs_find_next_cluster
 31893 ;;		_fatfs_lba_of_cluster
 31894 ;;		_media_read
 31895 ;; This function is called by:
 31896 ;;		_fatfs_get_file_entry
 31897 ;;		_fatfs_sfn_exists
 31898 ;;		_fatfs_update_file_length
 31899 ;;		_fatfs_mark_file_deleted
 31900 ;;		_fatfs_list_directory_next
 31901 ;;		_fatfs_find_free_dir_offset
 31902 ;;		_fatfs_add_file_entry
 31903 ;; This function uses a non-reentrant model
 31904 ;;
 31905                           
 31906                           	psect	text94
 31907  00A5AC                     __ptext94:
 31908                           	opt stack 0
 31909  00A5AC                     _fatfs_sector_reader:
 31910                           	opt stack 21
 31911                           
 31912                           ;fat_access.c: 221: uint32 sector_to_read = 0;
 31913                           
 31914                           ;incstack = 0
 31915  00A5AC  0100               	movlb	0	; () banked
 31916  00A5AE  6B98               	clrf	fatfs_sector_reader@sector_to_read& (0+255),b
 31917  00A5B0  6B99               	clrf	(fatfs_sector_reader@sector_to_read+1)& (0+255),b
 31918  00A5B2  6B9A               	clrf	(fatfs_sector_reader@sector_to_read+2)& (0+255),b
 31919  00A5B4  6B9B               	clrf	(fatfs_sector_reader@sector_to_read+3)& (0+255),b
 31920                           
 31921                           ;fat_access.c: 222: uint32 cluster_to_read = 0;
 31922  00A5B6  6BA0               	clrf	fatfs_sector_reader@cluster_to_read& (0+255),b
 31923  00A5B8  6BA1               	clrf	(fatfs_sector_reader@cluster_to_read+1)& (0+255),b
 31924  00A5BA  6BA2               	clrf	(fatfs_sector_reader@cluster_to_read+2)& (0+255),b
 31925  00A5BC  6BA3               	clrf	(fatfs_sector_reader@cluster_to_read+3)& (0+255),b
 31926                           
 31927                           ;fat_access.c: 223: uint32 cluster_chain = 0;
 31928  00A5BE  6BA8               	clrf	fatfs_sector_reader@cluster_chain& (0+255),b
 31929  00A5C0  6BA9               	clrf	(fatfs_sector_reader@cluster_chain+1)& (0+255),b
 31930  00A5C2  6BAA               	clrf	(fatfs_sector_reader@cluster_chain+2)& (0+255),b
 31931  00A5C4  6BAB               	clrf	(fatfs_sector_reader@cluster_chain+3)& (0+255),b
 31932                           
 31933                           ; BSR set to: 0
 31934                           ;fat_access.c: 224: uint32 i;
 31935                           ;fat_access.c: 225: uint32 lba;
 31936                           ;fat_access.c: 228: if (fs->fat_type == FAT_TYPE_16 && start_cluster == 0)
 31937  00A5C6  EE20 F028          	lfsr	2,40
 31938  00A5CA  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 31939  00A5CC  26D9               	addwf	fsr2l,f,c
 31940  00A5CE  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 31941  00A5D0  22DA               	addwfc	fsr2h,f,c
 31942  00A5D2  50DF               	movf	indf2,w,c
 31943  00A5D4  E151               	bnz	l86
 31944                           
 31945                           ; BSR set to: 0
 31946  00A5D6  5185               	movf	(fatfs_sector_reader@start_cluster+3)& (0+255),w,b
 31947  00A5D8  1182               	iorwf	fatfs_sector_reader@start_cluster& (0+255),w,b
 31948  00A5DA  1183               	iorwf	(fatfs_sector_reader@start_cluster+1)& (0+255),w,b
 31949  00A5DC  1184               	iorwf	(fatfs_sector_reader@start_cluster+2)& (0+255),w,b
 31950  00A5DE  E14C               	bnz	l86
 31951                           
 31952                           ; BSR set to: 0
 31953                           ;fat_access.c: 229: {
 31954                           ;fat_access.c: 230: if (offset < fs->rootdir_sectors)
 31955  00A5E0  EE20 F00D          	lfsr	2,13
 31956  00A5E4  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 31957  00A5E6  26D9               	addwf	fsr2l,f,c
 31958  00A5E8  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 31959  00A5EA  22DA               	addwfc	fsr2h,f,c
 31960  00A5EC  CFDE F08C          	movff	postinc2,??_fatfs_sector_reader
 31961  00A5F0  CFDE F08D          	movff	postinc2,??_fatfs_sector_reader+1
 31962  00A5F4  CFDE F08E          	movff	postinc2,??_fatfs_sector_reader+2
 31963  00A5F8  CFDE F08F          	movff	postinc2,??_fatfs_sector_reader+3
 31964  00A5FC  518C               	movf	??_fatfs_sector_reader& (0+255),w,b
 31965  00A5FE  5D86               	subwf	fatfs_sector_reader@offset& (0+255),w,b
 31966  00A600  518D               	movf	(??_fatfs_sector_reader+1)& (0+255),w,b
 31967  00A602  5987               	subwfb	(fatfs_sector_reader@offset+1)& (0+255),w,b
 31968  00A604  518E               	movf	(??_fatfs_sector_reader+2)& (0+255),w,b
 31969  00A606  5988               	subwfb	(fatfs_sector_reader@offset+2)& (0+255),w,b
 31970  00A608  518F               	movf	(??_fatfs_sector_reader+3)& (0+255),w,b
 31971  00A60A  5989               	subwfb	(fatfs_sector_reader@offset+3)& (0+255),w,b
 31972  00A60C  E301 D0E8          	bc	u9630
 31973                           
 31974                           ; BSR set to: 0
 31975                           ;fat_access.c: 231: lba = fs->lba_begin + fs->rootdir_first_sector + offset;
 31976  00A610  EE20 F009          	lfsr	2,9
 31977  00A614  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 31978  00A616  26D9               	addwf	fsr2l,f,c
 31979  00A618  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 31980  00A61A  22DA               	addwfc	fsr2h,f,c
 31981  00A61C  CFDE F08C          	movff	postinc2,??_fatfs_sector_reader
 31982  00A620  CFDE F08D          	movff	postinc2,??_fatfs_sector_reader+1
 31983  00A624  CFDE F08E          	movff	postinc2,??_fatfs_sector_reader+2
 31984  00A628  CFDE F08F          	movff	postinc2,??_fatfs_sector_reader+3
 31985  00A62C  EE20 F017          	lfsr	2,23
 31986  00A630  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 31987  00A632  26D9               	addwf	fsr2l,f,c
 31988  00A634  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 31989  00A636  22DA               	addwfc	fsr2h,f,c
 31990  00A638  CFDE F090          	movff	postinc2,??_fatfs_sector_reader+4
 31991  00A63C  CFDE F091          	movff	postinc2,??_fatfs_sector_reader+5
 31992  00A640  CFDE F092          	movff	postinc2,??_fatfs_sector_reader+6
 31993  00A644  CFDE F093          	movff	postinc2,??_fatfs_sector_reader+7
 31994  00A648  518C               	movf	??_fatfs_sector_reader& (0+255),w,b
 31995  00A64A  2590               	addwf	(??_fatfs_sector_reader+4)& (0+255),w,b
 31996  00A64C  6F94               	movwf	(??_fatfs_sector_reader+8)& (0+255),b
 31997  00A64E  518D               	movf	(??_fatfs_sector_reader+1)& (0+255),w,b
 31998  00A650  2191               	addwfc	(??_fatfs_sector_reader+5)& (0+255),w,b
 31999  00A652  6F95               	movwf	(??_fatfs_sector_reader+9)& (0+255),b
 32000  00A654  518E               	movf	(??_fatfs_sector_reader+2)& (0+255),w,b
 32001  00A656  2192               	addwfc	(??_fatfs_sector_reader+6)& (0+255),w,b
 32002  00A658  6F96               	movwf	(??_fatfs_sector_reader+10)& (0+255),b
 32003  00A65A  518F               	movf	(??_fatfs_sector_reader+3)& (0+255),w,b
 32004  00A65C  2193               	addwfc	(??_fatfs_sector_reader+7)& (0+255),w,b
 32005  00A65E  6F97               	movwf	(??_fatfs_sector_reader+11)& (0+255),b
 32006  00A660  5186               	movf	fatfs_sector_reader@offset& (0+255),w,b
 32007  00A662  2594               	addwf	(??_fatfs_sector_reader+8)& (0+255),w,b
 32008  00A664  6FA4               	movwf	fatfs_sector_reader@lba& (0+255),b
 32009  00A666  5187               	movf	(fatfs_sector_reader@offset+1)& (0+255),w,b
 32010  00A668  2195               	addwfc	(??_fatfs_sector_reader+9)& (0+255),w,b
 32011  00A66A  6FA5               	movwf	(fatfs_sector_reader@lba+1)& (0+255),b
 32012  00A66C  5188               	movf	(fatfs_sector_reader@offset+2)& (0+255),w,b
 32013  00A66E  2196               	addwfc	(??_fatfs_sector_reader+10)& (0+255),w,b
 32014  00A670  6FA6               	movwf	(fatfs_sector_reader@lba+2)& (0+255),b
 32015  00A672  5189               	movf	(fatfs_sector_reader@offset+3)& (0+255),w,b
 32016  00A674  2197               	addwfc	(??_fatfs_sector_reader+11)& (0+255),w,b
 32017  00A676  D0DB               	goto	L109
 32018  00A678                     l86:
 32019                           
 32020                           ; BSR set to: 0
 32021                           ;fat_access.c: 236: else
 32022                           ;fat_access.c: 237: {
 32023                           ;fat_access.c: 239: cluster_chain = start_cluster;
 32024  00A678  C082  F0A8         	movff	fatfs_sector_reader@start_cluster,fatfs_sector_reader@cluster_chain
 32025  00A67C  C083  F0A9         	movff	fatfs_sector_reader@start_cluster+1,fatfs_sector_reader@cluster_chain+1
 32026  00A680  C084  F0AA         	movff	fatfs_sector_reader@start_cluster+2,fatfs_sector_reader@cluster_chain+2
 32027  00A684  C085  F0AB         	movff	fatfs_sector_reader@start_cluster+3,fatfs_sector_reader@cluster_chain+3
 32028                           
 32029                           ; BSR set to: 0
 32030                           ;fat_access.c: 242: cluster_to_read = offset / fs->sectors_per_cluster;
 32031  00A688  C086  F001         	movff	fatfs_sector_reader@offset,___lldiv@dividend
 32032  00A68C  C087  F002         	movff	fatfs_sector_reader@offset+1,___lldiv@dividend+1
 32033  00A690  C088  F003         	movff	fatfs_sector_reader@offset+2,___lldiv@dividend+2
 32034  00A694  C089  F004         	movff	fatfs_sector_reader@offset+3,___lldiv@dividend+3
 32035  00A698  C080  FFD9         	movff	fatfs_sector_reader@fs,fsr2l
 32036  00A69C  C081  FFDA         	movff	fatfs_sector_reader@fs+1,fsr2h
 32037  00A6A0  50DF               	movf	indf2,w,c
 32038  00A6A2  0100               	movlb	0	; () banked
 32039  00A6A4  6F8C               	movwf	??_fatfs_sector_reader& (0+255),b
 32040  00A6A6  518C               	movf	??_fatfs_sector_reader& (0+255),w,b
 32041  00A6A8  6E05               	movwf	___lldiv@divisor,c
 32042  00A6AA  6A06               	clrf	___lldiv@divisor+1,c
 32043  00A6AC  6A07               	clrf	___lldiv@divisor+2,c
 32044  00A6AE  6A08               	clrf	___lldiv@divisor+3,c
 32045  00A6B0  EC85  F026         	call	___lldiv	;wreg free
 32046  00A6B4  C001  F0A0         	movff	?___lldiv,fatfs_sector_reader@cluster_to_read
 32047  00A6B8  C002  F0A1         	movff	?___lldiv+1,fatfs_sector_reader@cluster_to_read+1
 32048  00A6BC  C003  F0A2         	movff	?___lldiv+2,fatfs_sector_reader@cluster_to_read+2
 32049  00A6C0  C004  F0A3         	movff	?___lldiv+3,fatfs_sector_reader@cluster_to_read+3
 32050                           
 32051                           ;fat_access.c: 243: sector_to_read = offset - (cluster_to_read*fs->sectors_per_cluster);
 32052  00A6C4  C080  FFD9         	movff	fatfs_sector_reader@fs,fsr2l
 32053  00A6C8  C081  FFDA         	movff	fatfs_sector_reader@fs+1,fsr2h
 32054  00A6CC  50DF               	movf	indf2,w,c
 32055  00A6CE  0100               	movlb	0	; () banked
 32056  00A6D0  6F8C               	movwf	??_fatfs_sector_reader& (0+255),b
 32057  00A6D2  C08C  F08D         	movff	??_fatfs_sector_reader,??_fatfs_sector_reader+1
 32058  00A6D6  6B8E               	clrf	(??_fatfs_sector_reader+2)& (0+255),b
 32059  00A6D8  6B8F               	clrf	(??_fatfs_sector_reader+3)& (0+255),b
 32060  00A6DA  6B90               	clrf	(??_fatfs_sector_reader+4)& (0+255),b
 32061  00A6DC  518D               	movf	(??_fatfs_sector_reader+1)& (0+255),w,b
 32062  00A6DE  03A0               	mulwf	fatfs_sector_reader@cluster_to_read& (0+255),b
 32063  00A6E0  CFF3 F091          	movff	prodl,??_fatfs_sector_reader+5
 32064  00A6E4  CFF4 F092          	movff	prodh,??_fatfs_sector_reader+6
 32065  00A6E8  6B93               	clrf	(??_fatfs_sector_reader+7)& (0+255),b
 32066  00A6EA  6B94               	clrf	(??_fatfs_sector_reader+8)& (0+255),b
 32067  00A6EC  03A1               	mulwf	(fatfs_sector_reader@cluster_to_read+1)& (0+255),b
 32068  00A6EE  50F3               	movf	243,w,c
 32069  00A6F0  2792               	addwf	(??_fatfs_sector_reader+6)& (0+255),f,b
 32070  00A6F2  50F4               	movf	244,w,c
 32071  00A6F4  2393               	addwfc	(??_fatfs_sector_reader+7)& (0+255),f,b
 32072  00A6F6  0E00               	movlw	0
 32073  00A6F8  2394               	addwfc	(??_fatfs_sector_reader+8)& (0+255),f,b
 32074  00A6FA  518E               	movf	(??_fatfs_sector_reader+2)& (0+255),w,b
 32075  00A6FC  03A0               	mulwf	fatfs_sector_reader@cluster_to_read& (0+255),b
 32076  00A6FE  50F3               	movf	243,w,c
 32077  00A700  2792               	addwf	(??_fatfs_sector_reader+6)& (0+255),f,b
 32078  00A702  50F4               	movf	244,w,c
 32079  00A704  2393               	addwfc	(??_fatfs_sector_reader+7)& (0+255),f,b
 32080  00A706  0E00               	movlw	0
 32081  00A708  2394               	addwfc	(??_fatfs_sector_reader+8)& (0+255),f,b
 32082  00A70A  518D               	movf	(??_fatfs_sector_reader+1)& (0+255),w,b
 32083  00A70C  03A2               	mulwf	(fatfs_sector_reader@cluster_to_read+2)& (0+255),b
 32084  00A70E  50F3               	movf	243,w,c
 32085  00A710  2793               	addwf	(??_fatfs_sector_reader+7)& (0+255),f,b
 32086  00A712  50F4               	movf	244,w,c
 32087  00A714  2394               	addwfc	(??_fatfs_sector_reader+8)& (0+255),f,b
 32088  00A716  518E               	movf	(??_fatfs_sector_reader+2)& (0+255),w,b
 32089  00A718  03A1               	mulwf	(fatfs_sector_reader@cluster_to_read+1)& (0+255),b
 32090  00A71A  50F3               	movf	243,w,c
 32091  00A71C  2793               	addwf	(??_fatfs_sector_reader+7)& (0+255),f,b
 32092  00A71E  50F4               	movf	244,w,c
 32093  00A720  2394               	addwfc	(??_fatfs_sector_reader+8)& (0+255),f,b
 32094  00A722  518F               	movf	(??_fatfs_sector_reader+3)& (0+255),w,b
 32095  00A724  03A0               	mulwf	fatfs_sector_reader@cluster_to_read& (0+255),b
 32096  00A726  50F3               	movf	243,w,c
 32097  00A728  2793               	addwf	(??_fatfs_sector_reader+7)& (0+255),f,b
 32098  00A72A  50F4               	movf	244,w,c
 32099  00A72C  2394               	addwfc	(??_fatfs_sector_reader+8)& (0+255),f,b
 32100  00A72E  51A3               	movf	(fatfs_sector_reader@cluster_to_read+3)& (0+255),w,b
 32101  00A730  038D               	mulwf	(??_fatfs_sector_reader+1)& (0+255),b
 32102  00A732  50F3               	movf	243,w,c
 32103  00A734  2794               	addwf	(??_fatfs_sector_reader+8)& (0+255),f,b
 32104  00A736  518E               	movf	(??_fatfs_sector_reader+2)& (0+255),w,b
 32105  00A738  03A2               	mulwf	(fatfs_sector_reader@cluster_to_read+2)& (0+255),b
 32106  00A73A  50F3               	movf	243,w,c
 32107  00A73C  2794               	addwf	(??_fatfs_sector_reader+8)& (0+255),f,b
 32108  00A73E  518F               	movf	(??_fatfs_sector_reader+3)& (0+255),w,b
 32109  00A740  03A1               	mulwf	(fatfs_sector_reader@cluster_to_read+1)& (0+255),b
 32110  00A742  50F3               	movf	243,w,c
 32111  00A744  2794               	addwf	(??_fatfs_sector_reader+8)& (0+255),f,b
 32112  00A746  5190               	movf	(??_fatfs_sector_reader+4)& (0+255),w,b
 32113  00A748  03A0               	mulwf	fatfs_sector_reader@cluster_to_read& (0+255),b
 32114  00A74A  50F3               	movf	243,w,c
 32115  00A74C  2794               	addwf	(??_fatfs_sector_reader+8)& (0+255),f,b
 32116  00A74E  1F91               	comf	(??_fatfs_sector_reader+5)& (0+255),f,b
 32117  00A750  1F92               	comf	(??_fatfs_sector_reader+6)& (0+255),f,b
 32118  00A752  1F93               	comf	(??_fatfs_sector_reader+7)& (0+255),f,b
 32119  00A754  1F94               	comf	(??_fatfs_sector_reader+8)& (0+255),f,b
 32120  00A756  2B91               	incf	(??_fatfs_sector_reader+5)& (0+255),f,b
 32121  00A758  0E00               	movlw	0
 32122  00A75A  2392               	addwfc	(??_fatfs_sector_reader+6)& (0+255),f,b
 32123  00A75C  2393               	addwfc	(??_fatfs_sector_reader+7)& (0+255),f,b
 32124  00A75E  2394               	addwfc	(??_fatfs_sector_reader+8)& (0+255),f,b
 32125  00A760  5186               	movf	fatfs_sector_reader@offset& (0+255),w,b
 32126  00A762  2591               	addwf	(??_fatfs_sector_reader+5)& (0+255),w,b
 32127  00A764  6F98               	movwf	fatfs_sector_reader@sector_to_read& (0+255),b
 32128  00A766  5187               	movf	(fatfs_sector_reader@offset+1)& (0+255),w,b
 32129  00A768  2192               	addwfc	(??_fatfs_sector_reader+6)& (0+255),w,b
 32130  00A76A  6F99               	movwf	(fatfs_sector_reader@sector_to_read+1)& (0+255),b
 32131  00A76C  5188               	movf	(fatfs_sector_reader@offset+2)& (0+255),w,b
 32132  00A76E  2193               	addwfc	(??_fatfs_sector_reader+7)& (0+255),w,b
 32133  00A770  6F9A               	movwf	(fatfs_sector_reader@sector_to_read+2)& (0+255),b
 32134  00A772  5189               	movf	(fatfs_sector_reader@offset+3)& (0+255),w,b
 32135  00A774  2194               	addwfc	(??_fatfs_sector_reader+8)& (0+255),w,b
 32136  00A776  6F9B               	movwf	(fatfs_sector_reader@sector_to_read+3)& (0+255),b
 32137                           
 32138                           ; BSR set to: 0
 32139                           ;fat_access.c: 246: for (i=0; i<cluster_to_read; i++)
 32140  00A778  6B9C               	clrf	fatfs_sector_reader@i& (0+255),b
 32141  00A77A  6B9D               	clrf	(fatfs_sector_reader@i+1)& (0+255),b
 32142  00A77C  6B9E               	clrf	(fatfs_sector_reader@i+2)& (0+255),b
 32143  00A77E  6B9F               	clrf	(fatfs_sector_reader@i+3)& (0+255),b
 32144  00A780  D01D               	goto	l9059
 32145  00A782                     l9055:
 32146                           
 32147                           ; BSR set to: 0
 32148                           ;fat_access.c: 247: cluster_chain = fatfs_find_next_cluster(fs, cluster_chain);
 32149  00A782  C081  F047         	movff	fatfs_sector_reader@fs+1,fatfs_find_next_cluster@fs+1
 32150  00A786  0100               	movlb	0	; () banked
 32151  00A788  C080  F046         	movff	fatfs_sector_reader@fs,fatfs_find_next_cluster@fs
 32152  00A78C  C0A8  F048         	movff	fatfs_sector_reader@cluster_chain,fatfs_find_next_cluster@current_cluster
 32153  00A790  C0A9  F049         	movff	fatfs_sector_reader@cluster_chain+1,fatfs_find_next_cluster@current_cluster+1
 32154  00A794  C0AA  F04A         	movff	fatfs_sector_reader@cluster_chain+2,fatfs_find_next_cluster@current_cluster+2
 32155  00A798  C0AB  F04B         	movff	fatfs_sector_reader@cluster_chain+3,fatfs_find_next_cluster@current_cluster+3
 32156  00A79C  EC9F  F054         	call	_fatfs_find_next_cluster	;wreg free
 32157  00A7A0  C046  F0A8         	movff	?_fatfs_find_next_cluster,fatfs_sector_reader@cluster_chain
 32158  00A7A4  C047  F0A9         	movff	?_fatfs_find_next_cluster+1,fatfs_sector_reader@cluster_chain+1
 32159  00A7A8  C048  F0AA         	movff	?_fatfs_find_next_cluster+2,fatfs_sector_reader@cluster_chain+2
 32160  00A7AC  C049  F0AB         	movff	?_fatfs_find_next_cluster+3,fatfs_sector_reader@cluster_chain+3
 32161  00A7B0  0100               	movlb	0	; () banked
 32162  00A7B2  2B9C               	incf	fatfs_sector_reader@i& (0+255),f,b
 32163  00A7B4  0E00               	movlw	0
 32164  00A7B6  239D               	addwfc	(fatfs_sector_reader@i+1)& (0+255),f,b
 32165  00A7B8  239E               	addwfc	(fatfs_sector_reader@i+2)& (0+255),f,b
 32166  00A7BA  239F               	addwfc	(fatfs_sector_reader@i+3)& (0+255),f,b
 32167  00A7BC                     l9059:
 32168                           
 32169                           ; BSR set to: 0
 32170  00A7BC  0100               	movlb	0	; () banked
 32171  00A7BE  51A0               	movf	fatfs_sector_reader@cluster_to_read& (0+255),w,b
 32172  00A7C0  5D9C               	subwf	fatfs_sector_reader@i& (0+255),w,b
 32173  00A7C2  51A1               	movf	(fatfs_sector_reader@cluster_to_read+1)& (0+255),w,b
 32174  00A7C4  599D               	subwfb	(fatfs_sector_reader@i+1)& (0+255),w,b
 32175  00A7C6  51A2               	movf	(fatfs_sector_reader@cluster_to_read+2)& (0+255),w,b
 32176  00A7C8  599E               	subwfb	(fatfs_sector_reader@i+2)& (0+255),w,b
 32177  00A7CA  51A3               	movf	(fatfs_sector_reader@cluster_to_read+3)& (0+255),w,b
 32178  00A7CC  599F               	subwfb	(fatfs_sector_reader@i+3)& (0+255),w,b
 32179  00A7CE  E3D9               	bnc	l9055
 32180                           
 32181                           ; BSR set to: 0
 32182                           ;fat_access.c: 250: if (cluster_chain == 0xFFFFFFFF)
 32183                           
 32184                           ; BSR set to: 0
 32185  00A7D0  29A8               	incf	fatfs_sector_reader@cluster_chain& (0+255),w,b
 32186  00A7D2  B4D8               	btfsc	status,2,c
 32187  00A7D4  29A9               	incf	(fatfs_sector_reader@cluster_chain+1)& (0+255),w,b
 32188  00A7D6  B4D8               	btfsc	status,2,c
 32189  00A7D8  29AA               	incf	(fatfs_sector_reader@cluster_chain+2)& (0+255),w,b
 32190  00A7DA  B4D8               	btfsc	status,2,c
 32191  00A7DC  29AB               	incf	(fatfs_sector_reader@cluster_chain+3)& (0+255),w,b
 32192  00A7DE  E104               	bnz	l9067
 32193  00A7E0                     u9630:
 32194                           
 32195                           ; BSR set to: 0
 32196                           ;fat_access.c: 251: return 0;
 32197  00A7E0  0E00               	movlw	0
 32198  00A7E2  0100               	movlb	0	; () banked
 32199  00A7E4  6F81               	movwf	(?_fatfs_sector_reader+1)& (0+255),b
 32200  00A7E6  D0A8               	goto	L110
 32201  00A7E8                     l9067:
 32202                           
 32203                           ; BSR set to: 0
 32204                           ;fat_access.c: 254: lba = fatfs_lba_of_cluster(fs, cluster_chain)+sector_to_read;
 32205  00A7E8  C081  F002         	movff	fatfs_sector_reader@fs+1,fatfs_lba_of_cluster@fs+1
 32206  00A7EC  0100               	movlb	0	; () banked
 32207  00A7EE  C080  F001         	movff	fatfs_sector_reader@fs,fatfs_lba_of_cluster@fs
 32208  00A7F2  C0A8  F003         	movff	fatfs_sector_reader@cluster_chain,fatfs_lba_of_cluster@Cluster_Number
 32209  00A7F6  C0A9  F004         	movff	fatfs_sector_reader@cluster_chain+1,fatfs_lba_of_cluster@Cluster_Number+1
 32210  00A7FA  C0AA  F005         	movff	fatfs_sector_reader@cluster_chain+2,fatfs_lba_of_cluster@Cluster_Number+2
 32211  00A7FE  C0AB  F006         	movff	fatfs_sector_reader@cluster_chain+3,fatfs_lba_of_cluster@Cluster_Number+3
 32212  00A802  EC4C  F03F         	call	_fatfs_lba_of_cluster	;wreg free
 32213  00A806  C001  F08C         	movff	?_fatfs_lba_of_cluster,??_fatfs_sector_reader
 32214  00A80A  C002  F08D         	movff	?_fatfs_lba_of_cluster+1,??_fatfs_sector_reader+1
 32215  00A80E  C003  F08E         	movff	?_fatfs_lba_of_cluster+2,??_fatfs_sector_reader+2
 32216  00A812  C004  F08F         	movff	?_fatfs_lba_of_cluster+3,??_fatfs_sector_reader+3
 32217  00A816  0100               	movlb	0	; () banked
 32218  00A818  5198               	movf	fatfs_sector_reader@sector_to_read& (0+255),w,b
 32219  00A81A  258C               	addwf	??_fatfs_sector_reader& (0+255),w,b
 32220  00A81C  6FA4               	movwf	fatfs_sector_reader@lba& (0+255),b
 32221  00A81E  5199               	movf	(fatfs_sector_reader@sector_to_read+1)& (0+255),w,b
 32222  00A820  218D               	addwfc	(??_fatfs_sector_reader+1)& (0+255),w,b
 32223  00A822  6FA5               	movwf	(fatfs_sector_reader@lba+1)& (0+255),b
 32224  00A824  519A               	movf	(fatfs_sector_reader@sector_to_read+2)& (0+255),w,b
 32225  00A826  218E               	addwfc	(??_fatfs_sector_reader+2)& (0+255),w,b
 32226  00A828  6FA6               	movwf	(fatfs_sector_reader@lba+2)& (0+255),b
 32227  00A82A  519B               	movf	(fatfs_sector_reader@sector_to_read+3)& (0+255),w,b
 32228  00A82C  218F               	addwfc	(??_fatfs_sector_reader+3)& (0+255),w,b
 32229  00A82E                     L109:
 32230  00A82E  0100               	movlb	0	; () banked
 32231  00A830  6FA7               	movwf	(fatfs_sector_reader@lba+3)& (0+255),b
 32232                           
 32233                           ; BSR set to: 0
 32234                           ;fat_access.c: 255: }
 32235                           ;fat_access.c: 258: if (target)
 32236                           
 32237                           ; BSR set to: 0
 32238  00A832  518B               	movf	(fatfs_sector_reader@target+1)& (0+255),w,b
 32239  00A834  118A               	iorwf	fatfs_sector_reader@target& (0+255),w,b
 32240  00A836  E023               	bz	l9077
 32241                           
 32242                           ; BSR set to: 0
 32243                           ;fat_access.c: 259: return fs->disk_io.read_media(lba, target, 1);
 32244  00A838  C0A4  F009         	movff	fatfs_sector_reader@lba,media_read@sector
 32245  00A83C  C0A5  F00A         	movff	fatfs_sector_reader@lba+1,media_read@sector+1
 32246  00A840  C0A6  F00B         	movff	fatfs_sector_reader@lba+2,media_read@sector+2
 32247  00A844  C0A7  F00C         	movff	fatfs_sector_reader@lba+3,media_read@sector+3
 32248  00A848  C08B  F00E         	movff	fatfs_sector_reader@target+1,media_read@buffer+1
 32249  00A84C  C08A  F00D         	movff	fatfs_sector_reader@target,media_read@buffer
 32250  00A850  0E01               	movlw	1
 32251  00A852  6E0F               	movwf	media_read@sector_count,c
 32252  00A854  6A10               	clrf	media_read@sector_count+1,c
 32253  00A856  6A11               	clrf	media_read@sector_count+2,c
 32254  00A858  6A12               	clrf	media_read@sector_count+3,c
 32255  00A85A  EE20 F029          	lfsr	2,41
 32256  00A85E  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 32257  00A860  26D9               	addwf	fsr2l,f,c
 32258  00A862  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 32259  00A864  22DA               	addwfc	fsr2h,f,c
 32260  00A866  CFDE F08C          	movff	postinc2,??_fatfs_sector_reader
 32261  00A86A  CFDD F08D          	movff	postdec2,??_fatfs_sector_reader+1
 32262  00A86E  D801               	call	u9658
 32263  00A870  D001               	goto	u9659
 32264  00A872                     u9658:
 32265  00A872  D054               	goto	u9678
 32266  00A874                     u9659:
 32267  00A874  C009  F080         	movff	?_media_read,?_fatfs_sector_reader
 32268  00A878  C00A  F081         	movff	?_media_read+1,?_fatfs_sector_reader+1
 32269  00A87C  D05F               	goto	l89
 32270  00A87E                     l9077:
 32271                           
 32272                           ;fat_access.c: 261: else if (lba != fs->currentsector.address)
 32273  00A87E  EE22 F031          	lfsr	2,561
 32274  00A882  0100               	movlb	0	; () banked
 32275  00A884  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 32276  00A886  26D9               	addwf	fsr2l,f,c
 32277  00A888  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 32278  00A88A  22DA               	addwfc	fsr2h,f,c
 32279  00A88C  CFDE F08C          	movff	postinc2,??_fatfs_sector_reader
 32280  00A890  CFDE F08D          	movff	postinc2,??_fatfs_sector_reader+1
 32281  00A894  CFDE F08E          	movff	postinc2,??_fatfs_sector_reader+2
 32282  00A898  CFDE F08F          	movff	postinc2,??_fatfs_sector_reader+3
 32283  00A89C  51A7               	movf	(fatfs_sector_reader@lba+3)& (0+255),w,b
 32284  00A89E  198F               	xorwf	(??_fatfs_sector_reader+3)& (0+255),w,b
 32285  00A8A0  E108               	bnz	u9665
 32286  00A8A2  51A6               	movf	(fatfs_sector_reader@lba+2)& (0+255),w,b
 32287  00A8A4  198E               	xorwf	(??_fatfs_sector_reader+2)& (0+255),w,b
 32288  00A8A6  E105               	bnz	u9665
 32289  00A8A8  51A5               	movf	(fatfs_sector_reader@lba+1)& (0+255),w,b
 32290  00A8AA  198D               	xorwf	(??_fatfs_sector_reader+1)& (0+255),w,b
 32291  00A8AC  E102               	bnz	u9665
 32292  00A8AE  51A4               	movf	fatfs_sector_reader@lba& (0+255),w,b
 32293  00A8B0  198C               	xorwf	??_fatfs_sector_reader& (0+255),w,b
 32294  00A8B2                     u9665:
 32295  00A8B2  E03E               	bz	l9087
 32296                           
 32297                           ; BSR set to: 0
 32298                           ;fat_access.c: 262: {
 32299                           ;fat_access.c: 263: fs->currentsector.address = lba;
 32300  00A8B4  EE22 F031          	lfsr	2,561
 32301  00A8B8  0100               	movlb	0	; () banked
 32302  00A8BA  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 32303  00A8BC  26D9               	addwf	fsr2l,f,c
 32304  00A8BE  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 32305  00A8C0  22DA               	addwfc	fsr2h,f,c
 32306  00A8C2  C0A4  FFDE         	movff	fatfs_sector_reader@lba,postinc2
 32307  00A8C6  C0A5  FFDE         	movff	fatfs_sector_reader@lba+1,postinc2
 32308  00A8CA  C0A6  FFDE         	movff	fatfs_sector_reader@lba+2,postinc2
 32309  00A8CE  C0A7  FFDE         	movff	fatfs_sector_reader@lba+3,postinc2
 32310                           
 32311                           ; BSR set to: 0
 32312                           ;fat_access.c: 264: return fs->disk_io.read_media(fs->currentsector.address, fs->current
      +                          sector.sector, 1);
 32313  00A8D2  EE22 F031          	lfsr	2,561
 32314  00A8D6  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 32315  00A8D8  26D9               	addwf	fsr2l,f,c
 32316  00A8DA  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 32317  00A8DC  22DA               	addwfc	fsr2h,f,c
 32318  00A8DE  CFDE F009          	movff	postinc2,media_read@sector
 32319  00A8E2  CFDE F00A          	movff	postinc2,media_read@sector+1
 32320  00A8E6  CFDE F00B          	movff	postinc2,media_read@sector+2
 32321  00A8EA  CFDE F00C          	movff	postinc2,media_read@sector+3
 32322  00A8EE  0E31               	movlw	49
 32323  00A8F0  2580               	addwf	fatfs_sector_reader@fs& (0+255),w,b
 32324  00A8F2  6E0D               	movwf	media_read@buffer,c
 32325  00A8F4  0E00               	movlw	0
 32326  00A8F6  2181               	addwfc	(fatfs_sector_reader@fs+1)& (0+255),w,b
 32327  00A8F8  6E0E               	movwf	media_read@buffer+1,c
 32328  00A8FA  0E01               	movlw	1
 32329  00A8FC  6E0F               	movwf	media_read@sector_count,c
 32330  00A8FE  6A10               	clrf	media_read@sector_count+1,c
 32331  00A900  6A11               	clrf	media_read@sector_count+2,c
 32332  00A902  6A12               	clrf	media_read@sector_count+3,c
 32333  00A904  EE20 F029          	lfsr	2,41
 32334  00A908  5180               	movf	fatfs_sector_reader@fs& (0+255),w,b
 32335  00A90A  26D9               	addwf	fsr2l,f,c
 32336  00A90C  5181               	movf	(fatfs_sector_reader@fs+1)& (0+255),w,b
 32337  00A90E  22DA               	addwfc	fsr2h,f,c
 32338  00A910  CFDE F08C          	movff	postinc2,??_fatfs_sector_reader
 32339  00A914  CFDD F08D          	movff	postdec2,??_fatfs_sector_reader+1
 32340  00A918  D801               	call	u9678
 32341  00A91A  D7AC               	goto	u9659
 32342  00A91C                     u9678:
 32343  00A91C  0005               	push	
 32344  00A91E  6EFA               	movwf	pclath,c
 32345  00A920  0100               	movlb	0	; () banked
 32346  00A922  518C               	movf	??_fatfs_sector_reader& (0+255),w,b
 32347  00A924  6EFD               	movwf	tosl,c
 32348  00A926  518D               	movf	(??_fatfs_sector_reader+1)& (0+255),w,b
 32349  00A928  6EFE               	movwf	tosh,c
 32350  00A92A  6AFF               	clrf	tosu,c
 32351  00A92C  50FA               	movf	pclath,w,c
 32352  00A92E  0012               	return		;indir
 32353  00A930                     l9087:
 32354                           
 32355                           ;fat_access.c: 266: else
 32356                           ;fat_access.c: 267: return 1;
 32357  00A930  0E00               	movlw	0
 32358  00A932  0100               	movlb	0	; () banked
 32359  00A934  6F81               	movwf	(?_fatfs_sector_reader+1)& (0+255),b
 32360  00A936  0E01               	movlw	1
 32361  00A938                     L110:
 32362  00A938  0100               	movlb	0	; () banked
 32363  00A93A  6F80               	movwf	?_fatfs_sector_reader& (0+255),b
 32364  00A93C                     l89:
 32365  00A93C  0012               	return	
 32366  00A93E                     __end_of_fatfs_sector_reader:
 32367                           	opt stack 0
 32368                           tosu	equ	0xFFF
 32369                           tosh	equ	0xFFE
 32370                           tosl	equ	0xFFD
 32371                           pclath	equ	0xFFA
 32372                           tblptru	equ	0xFF8
 32373                           tblptrh	equ	0xFF7
 32374                           tblptrl	equ	0xFF6
 32375                           tablat	equ	0xFF5
 32376                           prodh	equ	0xFF4
 32377                           prodl	equ	0xFF3
 32378                           indf0	equ	0xFEF
 32379                           postinc0	equ	0xFEE
 32380                           fsr0h	equ	0xFEA
 32381                           fsr0l	equ	0xFE9
 32382                           wreg	equ	0xFE8
 32383                           indf1	equ	0xFE7
 32384                           postinc1	equ	0xFE6
 32385                           postdec1	equ	0xFE5
 32386                           fsr1h	equ	0xFE2
 32387                           fsr1l	equ	0xFE1
 32388                           indf2	equ	0xFDF
 32389                           postinc2	equ	0xFDE
 32390                           postdec2	equ	0xFDD
 32391                           fsr2h	equ	0xFDA
 32392                           fsr2l	equ	0xFD9
 32393                           status	equ	0xFD8
 32394                           
 32395 ;; *************** function _fatfs_lba_of_cluster *****************
 32396 ;; Defined at:
 32397 ;;		line 194 in file "fat_access.c"
 32398 ;; Parameters:    Size  Location     Type
 32399 ;;  fs              2    0[COMRAM] PTR struct fatfs
 32400 ;;		 -> _fs(1095), 
 32401 ;;  Cluster_Numb    4    2[COMRAM] unsigned long 
 32402 ;; Auto vars:     Size  Location     Type
 32403 ;;		None
 32404 ;; Return value:  Size  Location     Type
 32405 ;;                  4    0[COMRAM] unsigned long 
 32406 ;; Registers used:
 32407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32408 ;; Tracked objects:
 32409 ;;		On entry : 0/0
 32410 ;;		On exit  : 0/0
 32411 ;;		Unchanged: 0/0
 32412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32413 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32415 ;;      Temps:         24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32416 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32417 ;;Total ram usage:       30 bytes
 32418 ;; Hardware stack levels used:    1
 32419 ;; This function calls:
 32420 ;;		Nothing
 32421 ;; This function is called by:
 32422 ;;		_fatfs_sector_reader
 32423 ;;		_fatfs_write_sector
 32424 ;;		__read_sectors
 32425 ;;		__write_sectors
 32426 ;;		_fatfs_format_fat32
 32427 ;;		_fatfs_read_sector
 32428 ;; This function uses a non-reentrant model
 32429 ;;
 32430                           
 32431                           	psect	text95
 32432  007E98                     __ptext95:
 32433                           	opt stack 0
 32434  007E98                     _fatfs_lba_of_cluster:
 32435                           	opt stack 26
 32436                           
 32437                           ;fat_access.c: 196: if (fs->fat_type == FAT_TYPE_16)
 32438                           
 32439                           ;incstack = 0
 32440  007E98  EE20 F028          	lfsr	2,40
 32441  007E9C  5001               	movf	fatfs_lba_of_cluster@fs,w,c
 32442  007E9E  26D9               	addwf	fsr2l,f,c
 32443  007EA0  5002               	movf	fatfs_lba_of_cluster@fs+1,w,c
 32444  007EA2  22DA               	addwfc	fsr2h,f,c
 32445  007EA4  50DF               	movf	indf2,w,c
 32446  007EA6  E001 D08A          	bnz	l8805
 32447                           
 32448                           ;fat_access.c: 197: return (fs->cluster_begin_lba + (fs->root_entry_count * 32 / 512) + 
      +                          ((Cluster_Number-2) * fs->sectors_per_cluster));
 32449  007EAA  EE20 F001          	lfsr	2,1
 32450  007EAE  5001               	movf	fatfs_lba_of_cluster@fs,w,c
 32451  007EB0  26D9               	addwf	fsr2l,f,c
 32452  007EB2  5002               	movf	fatfs_lba_of_cluster@fs+1,w,c
 32453  007EB4  22DA               	addwfc	fsr2h,f,c
 32454  007EB6  CFDE F007          	movff	postinc2,??_fatfs_lba_of_cluster
 32455  007EBA  CFDE F008          	movff	postinc2,??_fatfs_lba_of_cluster+1
 32456  007EBE  CFDE F009          	movff	postinc2,??_fatfs_lba_of_cluster+2
 32457  007EC2  CFDE F00A          	movff	postinc2,??_fatfs_lba_of_cluster+3
 32458  007EC6  C001  FFD9         	movff	fatfs_lba_of_cluster@fs,fsr2l
 32459  007ECA  C002  FFDA         	movff	fatfs_lba_of_cluster@fs+1,fsr2h
 32460  007ECE  50DF               	movf	indf2,w,c
 32461  007ED0  6E0B               	movwf	(??_fatfs_lba_of_cluster+4)& (0+255),c
 32462  007ED2  C00B  F00C         	movff	??_fatfs_lba_of_cluster+4,??_fatfs_lba_of_cluster+5
 32463  007ED6  6A0D               	clrf	(??_fatfs_lba_of_cluster+6)& (0+255),c
 32464  007ED8  6A0E               	clrf	(??_fatfs_lba_of_cluster+7)& (0+255),c
 32465  007EDA  6A0F               	clrf	(??_fatfs_lba_of_cluster+8)& (0+255),c
 32466  007EDC  0EFE               	movlw	254
 32467  007EDE  2403               	addwf	fatfs_lba_of_cluster@Cluster_Number,w,c
 32468  007EE0  6E10               	movwf	(??_fatfs_lba_of_cluster+9)& (0+255),c
 32469  007EE2  0EFF               	movlw	255
 32470  007EE4  2004               	addwfc	fatfs_lba_of_cluster@Cluster_Number+1,w,c
 32471  007EE6  6E11               	movwf	(??_fatfs_lba_of_cluster+10)& (0+255),c
 32472  007EE8  0EFF               	movlw	255
 32473  007EEA  2005               	addwfc	fatfs_lba_of_cluster@Cluster_Number+2,w,c
 32474  007EEC  6E12               	movwf	(??_fatfs_lba_of_cluster+11)& (0+255),c
 32475  007EEE  0EFF               	movlw	255
 32476  007EF0  2006               	addwfc	fatfs_lba_of_cluster@Cluster_Number+3,w,c
 32477  007EF2  6E13               	movwf	(??_fatfs_lba_of_cluster+12)& (0+255),c
 32478  007EF4  5010               	movf	??_fatfs_lba_of_cluster+9,w,c
 32479  007EF6  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32480  007EF8  CFF3 F014          	movff	prodl,??_fatfs_lba_of_cluster+13
 32481  007EFC  CFF4 F015          	movff	prodh,??_fatfs_lba_of_cluster+14
 32482  007F00  6A16               	clrf	(??_fatfs_lba_of_cluster+15)& (0+255),c
 32483  007F02  6A17               	clrf	(??_fatfs_lba_of_cluster+16)& (0+255),c
 32484  007F04  020D               	mulwf	??_fatfs_lba_of_cluster+6,c
 32485  007F06  50F3               	movf	243,w,c
 32486  007F08  2615               	addwf	(??_fatfs_lba_of_cluster+14)& (0+255),f,c
 32487  007F0A  50F4               	movf	244,w,c
 32488  007F0C  2216               	addwfc	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32489  007F0E  0E00               	movlw	0
 32490  007F10  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32491  007F12  5011               	movf	??_fatfs_lba_of_cluster+10,w,c
 32492  007F14  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32493  007F16  50F3               	movf	243,w,c
 32494  007F18  2615               	addwf	(??_fatfs_lba_of_cluster+14)& (0+255),f,c
 32495  007F1A  50F4               	movf	244,w,c
 32496  007F1C  2216               	addwfc	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32497  007F1E  0E00               	movlw	0
 32498  007F20  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32499  007F22  5010               	movf	??_fatfs_lba_of_cluster+9,w,c
 32500  007F24  020E               	mulwf	??_fatfs_lba_of_cluster+7,c
 32501  007F26  50F3               	movf	243,w,c
 32502  007F28  2616               	addwf	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32503  007F2A  50F4               	movf	244,w,c
 32504  007F2C  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32505  007F2E  5011               	movf	??_fatfs_lba_of_cluster+10,w,c
 32506  007F30  020D               	mulwf	??_fatfs_lba_of_cluster+6,c
 32507  007F32  50F3               	movf	243,w,c
 32508  007F34  2616               	addwf	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32509  007F36  50F4               	movf	244,w,c
 32510  007F38  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32511  007F3A  5012               	movf	??_fatfs_lba_of_cluster+11,w,c
 32512  007F3C  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32513  007F3E  50F3               	movf	243,w,c
 32514  007F40  2616               	addwf	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32515  007F42  50F4               	movf	244,w,c
 32516  007F44  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32517  007F46  500F               	movf	??_fatfs_lba_of_cluster+8,w,c
 32518  007F48  0210               	mulwf	??_fatfs_lba_of_cluster+9,c
 32519  007F4A  50F3               	movf	243,w,c
 32520  007F4C  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32521  007F4E  5011               	movf	??_fatfs_lba_of_cluster+10,w,c
 32522  007F50  020E               	mulwf	??_fatfs_lba_of_cluster+7,c
 32523  007F52  50F3               	movf	243,w,c
 32524  007F54  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32525  007F56  5012               	movf	??_fatfs_lba_of_cluster+11,w,c
 32526  007F58  020D               	mulwf	??_fatfs_lba_of_cluster+6,c
 32527  007F5A  50F3               	movf	243,w,c
 32528  007F5C  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32529  007F5E  5013               	movf	??_fatfs_lba_of_cluster+12,w,c
 32530  007F60  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32531  007F62  50F3               	movf	243,w,c
 32532  007F64  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32533  007F66  EE20 F023          	lfsr	2,35
 32534  007F6A  5001               	movf	fatfs_lba_of_cluster@fs,w,c
 32535  007F6C  26D9               	addwf	fsr2l,f,c
 32536  007F6E  5002               	movf	fatfs_lba_of_cluster@fs+1,w,c
 32537  007F70  22DA               	addwfc	fsr2h,f,c
 32538  007F72  CFDE F018          	movff	postinc2,??_fatfs_lba_of_cluster+17
 32539  007F76  CFDD F019          	movff	postdec2,??_fatfs_lba_of_cluster+18
 32540  007F7A  0E04               	movlw	4
 32541  007F7C  6E1A               	movwf	(??_fatfs_lba_of_cluster+19)& (0+255),c
 32542  007F7E                     u9165:
 32543  007F7E  90D8               	bcf	status,0,c
 32544  007F80  3219               	rrcf	??_fatfs_lba_of_cluster+18,f,c
 32545  007F82  3218               	rrcf	??_fatfs_lba_of_cluster+17,f,c
 32546  007F84  2E1A               	decfsz	(??_fatfs_lba_of_cluster+19)& (0+255),f,c
 32547  007F86  D7FB               	goto	u9165
 32548  007F88  0E7F               	movlw	127
 32549  007F8A  1618               	andwf	??_fatfs_lba_of_cluster+17,f,c
 32550  007F8C  6A19               	clrf	??_fatfs_lba_of_cluster+18,c
 32551  007F8E  5018               	movf	??_fatfs_lba_of_cluster+17,w,c
 32552  007F90  2414               	addwf	??_fatfs_lba_of_cluster+13,w,c
 32553  007F92  6E1B               	movwf	(??_fatfs_lba_of_cluster+20)& (0+255),c
 32554  007F94  5019               	movf	??_fatfs_lba_of_cluster+18,w,c
 32555  007F96  2015               	addwfc	??_fatfs_lba_of_cluster+14,w,c
 32556  007F98  6E1C               	movwf	(??_fatfs_lba_of_cluster+21)& (0+255),c
 32557  007F9A  0E00               	movlw	0
 32558  007F9C  2016               	addwfc	??_fatfs_lba_of_cluster+15,w,c
 32559  007F9E  6E1D               	movwf	(??_fatfs_lba_of_cluster+22)& (0+255),c
 32560  007FA0  0E00               	movlw	0
 32561  007FA2  2017               	addwfc	??_fatfs_lba_of_cluster+16,w,c
 32562  007FA4  6E1E               	movwf	(??_fatfs_lba_of_cluster+23)& (0+255),c
 32563  007FA6  5007               	movf	??_fatfs_lba_of_cluster,w,c
 32564  007FA8  241B               	addwf	??_fatfs_lba_of_cluster+20,w,c
 32565  007FAA  6E01               	movwf	?_fatfs_lba_of_cluster,c
 32566  007FAC  5008               	movf	??_fatfs_lba_of_cluster+1,w,c
 32567  007FAE  201C               	addwfc	??_fatfs_lba_of_cluster+21,w,c
 32568  007FB0  6E02               	movwf	?_fatfs_lba_of_cluster+1,c
 32569  007FB2  5009               	movf	??_fatfs_lba_of_cluster+2,w,c
 32570  007FB4  201D               	addwfc	??_fatfs_lba_of_cluster+22,w,c
 32571  007FB6  6E03               	movwf	?_fatfs_lba_of_cluster+2,c
 32572  007FB8  500A               	movf	??_fatfs_lba_of_cluster+3,w,c
 32573  007FBA  201E               	addwfc	??_fatfs_lba_of_cluster+23,w,c
 32574  007FBC  D069               	goto	L111
 32575  007FBE                     l8805:
 32576                           
 32577                           ;fat_access.c: 198: else
 32578                           ;fat_access.c: 199: return ((fs->cluster_begin_lba + ((Cluster_Number-2)*fs->sectors_per
      +                          _cluster)));
 32579  007FBE  EE20 F001          	lfsr	2,1
 32580  007FC2  5001               	movf	fatfs_lba_of_cluster@fs,w,c
 32581  007FC4  26D9               	addwf	fsr2l,f,c
 32582  007FC6  5002               	movf	fatfs_lba_of_cluster@fs+1,w,c
 32583  007FC8  22DA               	addwfc	fsr2h,f,c
 32584  007FCA  CFDE F007          	movff	postinc2,??_fatfs_lba_of_cluster
 32585  007FCE  CFDE F008          	movff	postinc2,??_fatfs_lba_of_cluster+1
 32586  007FD2  CFDE F009          	movff	postinc2,??_fatfs_lba_of_cluster+2
 32587  007FD6  CFDE F00A          	movff	postinc2,??_fatfs_lba_of_cluster+3
 32588  007FDA  C001  FFD9         	movff	fatfs_lba_of_cluster@fs,fsr2l
 32589  007FDE  C002  FFDA         	movff	fatfs_lba_of_cluster@fs+1,fsr2h
 32590  007FE2  50DF               	movf	indf2,w,c
 32591  007FE4  6E0B               	movwf	(??_fatfs_lba_of_cluster+4)& (0+255),c
 32592  007FE6  C00B  F00C         	movff	??_fatfs_lba_of_cluster+4,??_fatfs_lba_of_cluster+5
 32593  007FEA  6A0D               	clrf	(??_fatfs_lba_of_cluster+6)& (0+255),c
 32594  007FEC  6A0E               	clrf	(??_fatfs_lba_of_cluster+7)& (0+255),c
 32595  007FEE  6A0F               	clrf	(??_fatfs_lba_of_cluster+8)& (0+255),c
 32596  007FF0  0EFE               	movlw	254
 32597  007FF2  2403               	addwf	fatfs_lba_of_cluster@Cluster_Number,w,c
 32598  007FF4  6E10               	movwf	(??_fatfs_lba_of_cluster+9)& (0+255),c
 32599  007FF6  0EFF               	movlw	255
 32600  007FF8  2004               	addwfc	fatfs_lba_of_cluster@Cluster_Number+1,w,c
 32601  007FFA  6E11               	movwf	(??_fatfs_lba_of_cluster+10)& (0+255),c
 32602  007FFC  0EFF               	movlw	255
 32603  007FFE  2005               	addwfc	fatfs_lba_of_cluster@Cluster_Number+2,w,c
 32604  008000  6E12               	movwf	(??_fatfs_lba_of_cluster+11)& (0+255),c
 32605  008002  0EFF               	movlw	255
 32606  008004  2006               	addwfc	fatfs_lba_of_cluster@Cluster_Number+3,w,c
 32607  008006  6E13               	movwf	(??_fatfs_lba_of_cluster+12)& (0+255),c
 32608  008008  5010               	movf	??_fatfs_lba_of_cluster+9,w,c
 32609  00800A  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32610  00800C  CFF3 F014          	movff	prodl,??_fatfs_lba_of_cluster+13
 32611  008010  CFF4 F015          	movff	prodh,??_fatfs_lba_of_cluster+14
 32612  008014  6A16               	clrf	(??_fatfs_lba_of_cluster+15)& (0+255),c
 32613  008016  6A17               	clrf	(??_fatfs_lba_of_cluster+16)& (0+255),c
 32614  008018  020D               	mulwf	??_fatfs_lba_of_cluster+6,c
 32615  00801A  50F3               	movf	243,w,c
 32616  00801C  2615               	addwf	(??_fatfs_lba_of_cluster+14)& (0+255),f,c
 32617  00801E  50F4               	movf	244,w,c
 32618  008020  2216               	addwfc	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32619  008022  0E00               	movlw	0
 32620  008024  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32621  008026  5011               	movf	??_fatfs_lba_of_cluster+10,w,c
 32622  008028  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32623  00802A  50F3               	movf	243,w,c
 32624  00802C  2615               	addwf	(??_fatfs_lba_of_cluster+14)& (0+255),f,c
 32625  00802E  50F4               	movf	244,w,c
 32626  008030  2216               	addwfc	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32627  008032  0E00               	movlw	0
 32628  008034  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32629  008036  5010               	movf	??_fatfs_lba_of_cluster+9,w,c
 32630  008038  020E               	mulwf	??_fatfs_lba_of_cluster+7,c
 32631  00803A  50F3               	movf	243,w,c
 32632  00803C  2616               	addwf	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32633  00803E  50F4               	movf	244,w,c
 32634  008040  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32635  008042  5011               	movf	??_fatfs_lba_of_cluster+10,w,c
 32636  008044  020D               	mulwf	??_fatfs_lba_of_cluster+6,c
 32637  008046  50F3               	movf	243,w,c
 32638  008048  2616               	addwf	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32639  00804A  50F4               	movf	244,w,c
 32640  00804C  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32641  00804E  5012               	movf	??_fatfs_lba_of_cluster+11,w,c
 32642  008050  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32643  008052  50F3               	movf	243,w,c
 32644  008054  2616               	addwf	(??_fatfs_lba_of_cluster+15)& (0+255),f,c
 32645  008056  50F4               	movf	244,w,c
 32646  008058  2217               	addwfc	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32647  00805A  500F               	movf	??_fatfs_lba_of_cluster+8,w,c
 32648  00805C  0210               	mulwf	??_fatfs_lba_of_cluster+9,c
 32649  00805E  50F3               	movf	243,w,c
 32650  008060  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32651  008062  5011               	movf	??_fatfs_lba_of_cluster+10,w,c
 32652  008064  020E               	mulwf	??_fatfs_lba_of_cluster+7,c
 32653  008066  50F3               	movf	243,w,c
 32654  008068  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32655  00806A  5012               	movf	??_fatfs_lba_of_cluster+11,w,c
 32656  00806C  020D               	mulwf	??_fatfs_lba_of_cluster+6,c
 32657  00806E  50F3               	movf	243,w,c
 32658  008070  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32659  008072  5013               	movf	??_fatfs_lba_of_cluster+12,w,c
 32660  008074  020C               	mulwf	??_fatfs_lba_of_cluster+5,c
 32661  008076  50F3               	movf	243,w,c
 32662  008078  2617               	addwf	(??_fatfs_lba_of_cluster+16)& (0+255),f,c
 32663  00807A  5007               	movf	??_fatfs_lba_of_cluster,w,c
 32664  00807C  2414               	addwf	??_fatfs_lba_of_cluster+13,w,c
 32665  00807E  6E01               	movwf	?_fatfs_lba_of_cluster,c
 32666  008080  5008               	movf	??_fatfs_lba_of_cluster+1,w,c
 32667  008082  2015               	addwfc	??_fatfs_lba_of_cluster+14,w,c
 32668  008084  6E02               	movwf	?_fatfs_lba_of_cluster+1,c
 32669  008086  5009               	movf	??_fatfs_lba_of_cluster+2,w,c
 32670  008088  2016               	addwfc	??_fatfs_lba_of_cluster+15,w,c
 32671  00808A  6E03               	movwf	?_fatfs_lba_of_cluster+2,c
 32672  00808C  500A               	movf	??_fatfs_lba_of_cluster+3,w,c
 32673  00808E  2017               	addwfc	??_fatfs_lba_of_cluster+16,w,c
 32674  008090                     L111:
 32675  008090  6E04               	movwf	?_fatfs_lba_of_cluster+3,c
 32676  008092  0012               	return	
 32677  008094                     __end_of_fatfs_lba_of_cluster:
 32678                           	opt stack 0
 32679                           tosu	equ	0xFFF
 32680                           tosh	equ	0xFFE
 32681                           tosl	equ	0xFFD
 32682                           pclath	equ	0xFFA
 32683                           tblptru	equ	0xFF8
 32684                           tblptrh	equ	0xFF7
 32685                           tblptrl	equ	0xFF6
 32686                           tablat	equ	0xFF5
 32687                           prodh	equ	0xFF4
 32688                           prodl	equ	0xFF3
 32689                           indf0	equ	0xFEF
 32690                           postinc0	equ	0xFEE
 32691                           fsr0h	equ	0xFEA
 32692                           fsr0l	equ	0xFE9
 32693                           wreg	equ	0xFE8
 32694                           indf1	equ	0xFE7
 32695                           postinc1	equ	0xFE6
 32696                           postdec1	equ	0xFE5
 32697                           fsr1h	equ	0xFE2
 32698                           fsr1l	equ	0xFE1
 32699                           indf2	equ	0xFDF
 32700                           postinc2	equ	0xFDE
 32701                           postdec2	equ	0xFDD
 32702                           fsr2h	equ	0xFDA
 32703                           fsr2l	equ	0xFD9
 32704                           status	equ	0xFD8
 32705                           
 32706 ;; *************** function _fatfs_find_next_cluster *****************
 32707 ;; Defined at:
 32708 ;;		line 205 in file "fat_table.c"
 32709 ;; Parameters:    Size  Location     Type
 32710 ;;  fs              2   69[COMRAM] PTR struct fatfs
 32711 ;;		 -> _fs(1095), 
 32712 ;;  current_clus    4   71[COMRAM] unsigned long 
 32713 ;; Auto vars:     Size  Location     Type
 32714 ;;  nextcluster     4  121[COMRAM] unsigned long 
 32715 ;;  position        4  117[COMRAM] unsigned long 
 32716 ;;  fat_sector_o    4  113[COMRAM] unsigned long 
 32717 ;;  pbuf            2  125[COMRAM] PTR struct fat_buffer
 32718 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 32719 ;;		 -> NULL(0), 
 32720 ;; Return value:  Size  Location     Type
 32721 ;;                  4   69[COMRAM] unsigned long 
 32722 ;; Registers used:
 32723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 32724 ;; Tracked objects:
 32725 ;;		On entry : 0/0
 32726 ;;		On exit  : 0/0
 32727 ;;		Unchanged: 0/0
 32728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32729 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32730 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32731 ;;      Temps:         38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32732 ;;      Totals:        58       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32733 ;;Total ram usage:       58 bytes
 32734 ;; Hardware stack levels used:    1
 32735 ;; Hardware stack levels required when called:    5
 32736 ;; This function calls:
 32737 ;;		_fatfs_fat_read_sector
 32738 ;; This function is called by:
 32739 ;;		_fatfs_sector_reader
 32740 ;;		__read_sectors
 32741 ;;		__write_sectors
 32742 ;;		_fatfs_free_cluster_chain
 32743 ;;		_fatfs_fat_add_cluster_to_chain
 32744 ;; This function uses a non-reentrant model
 32745 ;;
 32746                           
 32747                           	psect	text96
 32748  00A93E                     __ptext96:
 32749                           	opt stack 0
 32750  00A93E                     _fatfs_find_next_cluster:
 32751                           	opt stack 21
 32752                           
 32753                           ;fat_table.c: 207: uint32 fat_sector_offset, position;
 32754                           ;fat_table.c: 208: uint32 nextcluster;
 32755                           ;fat_table.c: 209: struct fat_buffer *pbuf;
 32756                           ;fat_table.c: 212: if (current_cluster == 0)
 32757                           
 32758                           ;incstack = 0
 32759  00A93E  504B               	movf	fatfs_find_next_cluster@current_cluster+3,w,c
 32760  00A940  1048               	iorwf	fatfs_find_next_cluster@current_cluster,w,c
 32761  00A942  1049               	iorwf	fatfs_find_next_cluster@current_cluster+1,w,c
 32762  00A944  104A               	iorwf	fatfs_find_next_cluster@current_cluster+2,w,c
 32763  00A946  E105               	bnz	l8813
 32764                           
 32765                           ;fat_table.c: 213: current_cluster = 2;
 32766  00A948  0E02               	movlw	2
 32767  00A94A  6E48               	movwf	fatfs_find_next_cluster@current_cluster,c
 32768  00A94C  6A49               	clrf	fatfs_find_next_cluster@current_cluster+1,c
 32769  00A94E  6A4A               	clrf	fatfs_find_next_cluster@current_cluster+2,c
 32770  00A950  6A4B               	clrf	fatfs_find_next_cluster@current_cluster+3,c
 32771  00A952                     l8813:
 32772                           
 32773                           ;fat_table.c: 216: if (fs->fat_type == FAT_TYPE_16)
 32774  00A952  EE20 F028          	lfsr	2,40
 32775  00A956  5046               	movf	fatfs_find_next_cluster@fs,w,c
 32776  00A958  26D9               	addwf	fsr2l,f,c
 32777  00A95A  5047               	movf	fatfs_find_next_cluster@fs+1,w,c
 32778  00A95C  22DA               	addwfc	fsr2h,f,c
 32779  00A95E  50DF               	movf	indf2,w,c
 32780  00A960  E110               	bnz	l8817
 32781                           
 32782                           ;fat_table.c: 217: fat_sector_offset = current_cluster / 256;
 32783  00A962  C048  F04C         	movff	fatfs_find_next_cluster@current_cluster,??_fatfs_find_next_cluster
 32784  00A966  C049  F04D         	movff	fatfs_find_next_cluster@current_cluster+1,??_fatfs_find_next_cluster+1
 32785  00A96A  C04A  F04E         	movff	fatfs_find_next_cluster@current_cluster+2,??_fatfs_find_next_cluster+2
 32786  00A96E  C04B  F04F         	movff	fatfs_find_next_cluster@current_cluster+3,??_fatfs_find_next_cluster+3
 32787  00A972  C04D  F04C         	movff	??_fatfs_find_next_cluster+1,??_fatfs_find_next_cluster
 32788  00A976  C04E  F04D         	movff	??_fatfs_find_next_cluster+2,??_fatfs_find_next_cluster+1
 32789  00A97A  C04F  F04E         	movff	??_fatfs_find_next_cluster+3,??_fatfs_find_next_cluster+2
 32790  00A97E  6A4F               	clrf	??_fatfs_find_next_cluster+3,c
 32791  00A980  D011               	goto	L112
 32792  00A982                     l8817:
 32793                           
 32794                           ;fat_table.c: 218: else
 32795                           ;fat_table.c: 219: fat_sector_offset = current_cluster / 128;
 32796  00A982  C048  F04C         	movff	fatfs_find_next_cluster@current_cluster,??_fatfs_find_next_cluster
 32797  00A986  C049  F04D         	movff	fatfs_find_next_cluster@current_cluster+1,??_fatfs_find_next_cluster+1
 32798  00A98A  C04A  F04E         	movff	fatfs_find_next_cluster@current_cluster+2,??_fatfs_find_next_cluster+2
 32799  00A98E  C04B  F04F         	movff	fatfs_find_next_cluster@current_cluster+3,??_fatfs_find_next_cluster+3
 32800  00A992  0E08               	movlw	8
 32801  00A994  D005               	goto	u9190
 32802  00A996                     u9195:
 32803  00A996  90D8               	bcf	status,0,c
 32804  00A998  324F               	rrcf	??_fatfs_find_next_cluster+3,f,c
 32805  00A99A  324E               	rrcf	??_fatfs_find_next_cluster+2,f,c
 32806  00A99C  324D               	rrcf	??_fatfs_find_next_cluster+1,f,c
 32807  00A99E  324C               	rrcf	??_fatfs_find_next_cluster,f,c
 32808  00A9A0                     u9190:
 32809  00A9A0  2EE8               	decfsz	wreg,f,c
 32810  00A9A2  D7F9               	goto	u9195
 32811  00A9A4                     L112:
 32812  00A9A4  C04C  F072         	movff	??_fatfs_find_next_cluster,fatfs_find_next_cluster@fat_sector_offset
 32813  00A9A8  C04D  F073         	movff	??_fatfs_find_next_cluster+1,fatfs_find_next_cluster@fat_sector_offset+1
 32814  00A9AC  C04E  F074         	movff	??_fatfs_find_next_cluster+2,fatfs_find_next_cluster@fat_sector_offset+2
 32815  00A9B0  C04F  F075         	movff	??_fatfs_find_next_cluster+3,fatfs_find_next_cluster@fat_sector_offset+3
 32816                           
 32817                           ;fat_table.c: 222: pbuf = fatfs_fat_read_sector(fs, fs->fat_begin_lba+fat_sector_offset)
      +                          ;
 32818  00A9B4  C047  F035         	movff	fatfs_find_next_cluster@fs+1,fatfs_fat_read_sector@fs+1
 32819  00A9B8  C046  F034         	movff	fatfs_find_next_cluster@fs,fatfs_fat_read_sector@fs
 32820  00A9BC  EE20 F011          	lfsr	2,17
 32821  00A9C0  5046               	movf	fatfs_find_next_cluster@fs,w,c
 32822  00A9C2  26D9               	addwf	fsr2l,f,c
 32823  00A9C4  5047               	movf	fatfs_find_next_cluster@fs+1,w,c
 32824  00A9C6  22DA               	addwfc	fsr2h,f,c
 32825  00A9C8  CFDE F04C          	movff	postinc2,??_fatfs_find_next_cluster
 32826  00A9CC  CFDE F04D          	movff	postinc2,??_fatfs_find_next_cluster+1
 32827  00A9D0  CFDE F04E          	movff	postinc2,??_fatfs_find_next_cluster+2
 32828  00A9D4  CFDE F04F          	movff	postinc2,??_fatfs_find_next_cluster+3
 32829  00A9D8  5072               	movf	fatfs_find_next_cluster@fat_sector_offset,w,c
 32830  00A9DA  244C               	addwf	??_fatfs_find_next_cluster,w,c
 32831  00A9DC  6E36               	movwf	fatfs_fat_read_sector@sector,c
 32832  00A9DE  5073               	movf	fatfs_find_next_cluster@fat_sector_offset+1,w,c
 32833  00A9E0  204D               	addwfc	??_fatfs_find_next_cluster+1,w,c
 32834  00A9E2  6E37               	movwf	fatfs_fat_read_sector@sector+1,c
 32835  00A9E4  5074               	movf	fatfs_find_next_cluster@fat_sector_offset+2,w,c
 32836  00A9E6  204E               	addwfc	??_fatfs_find_next_cluster+2,w,c
 32837  00A9E8  6E38               	movwf	fatfs_fat_read_sector@sector+2,c
 32838  00A9EA  5075               	movf	fatfs_find_next_cluster@fat_sector_offset+3,w,c
 32839  00A9EC  204F               	addwfc	??_fatfs_find_next_cluster+3,w,c
 32840  00A9EE  6E39               	movwf	fatfs_fat_read_sector@sector+3,c
 32841  00A9F0  EC82  F043         	call	_fatfs_fat_read_sector	;wreg free
 32842  00A9F4  C034  F07E         	movff	?_fatfs_fat_read_sector,fatfs_find_next_cluster@pbuf
 32843  00A9F8  C035  F07F         	movff	?_fatfs_fat_read_sector+1,fatfs_find_next_cluster@pbuf+1
 32844                           
 32845                           ;fat_table.c: 223: if (!pbuf)
 32846  00A9FC  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 32847  00A9FE  107E               	iorwf	fatfs_find_next_cluster@pbuf,w,c
 32848  00AA00  E101 D162          	bz	u9270
 32849                           
 32850                           ;fat_table.c: 226: if (fs->fat_type == FAT_TYPE_16)
 32851                           
 32852                           ;fat_table.c: 224: return (0xFFFFFFFF);
 32853  00AA04  EE20 F028          	lfsr	2,40
 32854  00AA08  5046               	movf	fatfs_find_next_cluster@fs,w,c
 32855  00AA0A  26D9               	addwf	fsr2l,f,c
 32856  00AA0C  5047               	movf	fatfs_find_next_cluster@fs+1,w,c
 32857  00AA0E  22DA               	addwfc	fsr2h,f,c
 32858  00AA10  50DF               	movf	indf2,w,c
 32859  00AA12  E16B               	bnz	l8837
 32860                           
 32861                           ;fat_table.c: 227: {
 32862                           ;fat_table.c: 229: position = (current_cluster - (fat_sector_offset * 256)) * 2;
 32863  00AA14  C072  F04D         	movff	fatfs_find_next_cluster@fat_sector_offset,??_fatfs_find_next_cluster+1
 32864  00AA18  C073  F04E         	movff	fatfs_find_next_cluster@fat_sector_offset+1,??_fatfs_find_next_cluster+2
 32865  00AA1C  C074  F04F         	movff	fatfs_find_next_cluster@fat_sector_offset+2,??_fatfs_find_next_cluster+3
 32866  00AA20  6A4C               	clrf	??_fatfs_find_next_cluster& (0+255),c
 32867  00AA22  1E4C               	comf	??_fatfs_find_next_cluster,f,c
 32868  00AA24  1E4D               	comf	??_fatfs_find_next_cluster+1,f,c
 32869  00AA26  1E4E               	comf	??_fatfs_find_next_cluster+2,f,c
 32870  00AA28  1E4F               	comf	??_fatfs_find_next_cluster+3,f,c
 32871  00AA2A  2A4C               	incf	??_fatfs_find_next_cluster,f,c
 32872  00AA2C  0E00               	movlw	0
 32873  00AA2E  224D               	addwfc	??_fatfs_find_next_cluster+1,f,c
 32874  00AA30  224E               	addwfc	??_fatfs_find_next_cluster+2,f,c
 32875  00AA32  224F               	addwfc	??_fatfs_find_next_cluster+3,f,c
 32876  00AA34  5048               	movf	fatfs_find_next_cluster@current_cluster,w,c
 32877  00AA36  244C               	addwf	??_fatfs_find_next_cluster,w,c
 32878  00AA38  6E50               	movwf	(??_fatfs_find_next_cluster+4)& (0+255),c
 32879  00AA3A  5049               	movf	fatfs_find_next_cluster@current_cluster+1,w,c
 32880  00AA3C  204D               	addwfc	??_fatfs_find_next_cluster+1,w,c
 32881  00AA3E  6E51               	movwf	(??_fatfs_find_next_cluster+5)& (0+255),c
 32882  00AA40  504A               	movf	fatfs_find_next_cluster@current_cluster+2,w,c
 32883  00AA42  204E               	addwfc	??_fatfs_find_next_cluster+2,w,c
 32884  00AA44  6E52               	movwf	(??_fatfs_find_next_cluster+6)& (0+255),c
 32885  00AA46  504B               	movf	fatfs_find_next_cluster@current_cluster+3,w,c
 32886  00AA48  204F               	addwfc	??_fatfs_find_next_cluster+3,w,c
 32887  00AA4A  6E53               	movwf	(??_fatfs_find_next_cluster+7)& (0+255),c
 32888  00AA4C  90D8               	bcf	status,0,c
 32889  00AA4E  3450               	rlcf	??_fatfs_find_next_cluster+4,w,c
 32890  00AA50  6E76               	movwf	fatfs_find_next_cluster@position,c
 32891  00AA52  3451               	rlcf	??_fatfs_find_next_cluster+5,w,c
 32892  00AA54  6E77               	movwf	fatfs_find_next_cluster@position+1,c
 32893  00AA56  3452               	rlcf	??_fatfs_find_next_cluster+6,w,c
 32894  00AA58  6E78               	movwf	fatfs_find_next_cluster@position+2,c
 32895  00AA5A  3453               	rlcf	??_fatfs_find_next_cluster+7,w,c
 32896  00AA5C  6E79               	movwf	fatfs_find_next_cluster@position+3,c
 32897                           
 32898                           ;fat_table.c: 232: nextcluster = ( ( ((uint16)pbuf->ptr[(uint16)position+1]<<8) + (uint1
      +                          6)pbuf->ptr[(uint16)position+0] ) );
 32899  00AA5E  2876               	incf	fatfs_find_next_cluster@position,w,c
 32900  00AA60  6E4C               	movwf	??_fatfs_find_next_cluster& (0+255),c
 32901  00AA62  0E00               	movlw	0
 32902  00AA64  2077               	addwfc	fatfs_find_next_cluster@position+1,w,c
 32903  00AA66  6E4D               	movwf	(??_fatfs_find_next_cluster+1)& (0+255),c
 32904  00AA68  EE22 F006          	lfsr	2,518
 32905  00AA6C  507E               	movf	fatfs_find_next_cluster@pbuf,w,c
 32906  00AA6E  26D9               	addwf	fsr2l,f,c
 32907  00AA70  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 32908  00AA72  22DA               	addwfc	fsr2h,f,c
 32909  00AA74  CFDE F04E          	movff	postinc2,??_fatfs_find_next_cluster+2
 32910  00AA78  CFDD F04F          	movff	postdec2,??_fatfs_find_next_cluster+3
 32911  00AA7C  504C               	movf	??_fatfs_find_next_cluster,w,c
 32912  00AA7E  244E               	addwf	??_fatfs_find_next_cluster+2,w,c
 32913  00AA80  6ED9               	movwf	fsr2l,c
 32914  00AA82  504D               	movf	??_fatfs_find_next_cluster+1,w,c
 32915  00AA84  204F               	addwfc	??_fatfs_find_next_cluster+3,w,c
 32916  00AA86  6EDA               	movwf	fsr2h,c
 32917  00AA88  50DF               	movf	indf2,w,c
 32918  00AA8A  6E50               	movwf	(??_fatfs_find_next_cluster+4)& (0+255),c
 32919  00AA8C  5050               	movf	??_fatfs_find_next_cluster+4,w,c
 32920  00AA8E  6E52               	movwf	(??_fatfs_find_next_cluster+6)& (0+255),c
 32921  00AA90  6A51               	clrf	(??_fatfs_find_next_cluster+5)& (0+255),c
 32922  00AA92  EE22 F006          	lfsr	2,518
 32923  00AA96  507E               	movf	fatfs_find_next_cluster@pbuf,w,c
 32924  00AA98  26D9               	addwf	fsr2l,f,c
 32925  00AA9A  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 32926  00AA9C  22DA               	addwfc	fsr2h,f,c
 32927  00AA9E  CFDE F053          	movff	postinc2,??_fatfs_find_next_cluster+7
 32928  00AAA2  CFDD F054          	movff	postdec2,??_fatfs_find_next_cluster+8
 32929  00AAA6  5076               	movf	fatfs_find_next_cluster@position,w,c
 32930  00AAA8  2453               	addwf	??_fatfs_find_next_cluster+7,w,c
 32931  00AAAA  6ED9               	movwf	fsr2l,c
 32932  00AAAC  5077               	movf	fatfs_find_next_cluster@position+1,w,c
 32933  00AAAE  2054               	addwfc	??_fatfs_find_next_cluster+8,w,c
 32934  00AAB0  6EDA               	movwf	fsr2h,c
 32935  00AAB2  50DF               	movf	indf2,w,c
 32936  00AAB4  6E55               	movwf	(??_fatfs_find_next_cluster+9)& (0+255),c
 32937  00AAB6  5055               	movf	??_fatfs_find_next_cluster+9,w,c
 32938  00AAB8  2651               	addwf	??_fatfs_find_next_cluster+5,f,c
 32939  00AABA  0E00               	movlw	0
 32940  00AABC  2252               	addwfc	??_fatfs_find_next_cluster+6,f,c
 32941  00AABE  C051  F07A         	movff	??_fatfs_find_next_cluster+5,fatfs_find_next_cluster@nextcluster
 32942  00AAC2  C052  F07B         	movff	??_fatfs_find_next_cluster+6,fatfs_find_next_cluster@nextcluster+1
 32943  00AAC6  6A7C               	clrf	fatfs_find_next_cluster@nextcluster+2,c
 32944  00AAC8  6A7D               	clrf	fatfs_find_next_cluster@nextcluster+3,c
 32945                           
 32946                           ;fat_table.c: 235: if (nextcluster >= 0xFFF8 && nextcluster <= 0xFFFF)
 32947  00AACA  0EF8               	movlw	248
 32948  00AACC  5C7A               	subwf	fatfs_find_next_cluster@nextcluster,w,c
 32949  00AACE  0EFF               	movlw	255
 32950  00AAD0  587B               	subwfb	fatfs_find_next_cluster@nextcluster+1,w,c
 32951  00AAD2  0E00               	movlw	0
 32952  00AAD4  587C               	subwfb	fatfs_find_next_cluster@nextcluster+2,w,c
 32953  00AAD6  0E00               	movlw	0
 32954  00AAD8  587D               	subwfb	fatfs_find_next_cluster@nextcluster+3,w,c
 32955  00AADA  E201 D0FA          	bnc	l1231
 32956  00AADE  6A4C               	clrf	??_fatfs_find_next_cluster& (0+255),c
 32957  00AAE0  6A4D               	clrf	(??_fatfs_find_next_cluster+1)& (0+255),c
 32958  00AAE2  0E01               	movlw	1
 32959  00AAE4  6E4E               	movwf	(??_fatfs_find_next_cluster+2)& (0+255),c
 32960  00AAE6  0E00               	movlw	0
 32961  00AAE8  D0E5               	goto	L113
 32962  00AAEA                     l8837:
 32963                           
 32964                           ;fat_table.c: 238: else
 32965                           ;fat_table.c: 239: {
 32966                           ;fat_table.c: 241: position = (current_cluster - (fat_sector_offset * 128)) * 4;
 32967  00AAEA  C072  F04C         	movff	fatfs_find_next_cluster@fat_sector_offset,??_fatfs_find_next_cluster
 32968  00AAEE  C073  F04D         	movff	fatfs_find_next_cluster@fat_sector_offset+1,??_fatfs_find_next_cluster+1
 32969  00AAF2  C074  F04E         	movff	fatfs_find_next_cluster@fat_sector_offset+2,??_fatfs_find_next_cluster+2
 32970  00AAF6  C075  F04F         	movff	fatfs_find_next_cluster@fat_sector_offset+3,??_fatfs_find_next_cluster+3
 32971  00AAFA  0E07               	movlw	7
 32972  00AAFC                     u9245:
 32973  00AAFC  90D8               	bcf	status,0,c
 32974  00AAFE  364C               	rlcf	??_fatfs_find_next_cluster,f,c
 32975  00AB00  364D               	rlcf	??_fatfs_find_next_cluster+1,f,c
 32976  00AB02  364E               	rlcf	??_fatfs_find_next_cluster+2,f,c
 32977  00AB04  364F               	rlcf	??_fatfs_find_next_cluster+3,f,c
 32978  00AB06  2EE8               	decfsz	wreg,f,c
 32979  00AB08  D7F9               	goto	u9245
 32980  00AB0A  1E4C               	comf	??_fatfs_find_next_cluster,f,c
 32981  00AB0C  1E4D               	comf	??_fatfs_find_next_cluster+1,f,c
 32982  00AB0E  1E4E               	comf	??_fatfs_find_next_cluster+2,f,c
 32983  00AB10  1E4F               	comf	??_fatfs_find_next_cluster+3,f,c
 32984  00AB12  2A4C               	incf	??_fatfs_find_next_cluster,f,c
 32985  00AB14  0E00               	movlw	0
 32986  00AB16  224D               	addwfc	??_fatfs_find_next_cluster+1,f,c
 32987  00AB18  224E               	addwfc	??_fatfs_find_next_cluster+2,f,c
 32988  00AB1A  224F               	addwfc	??_fatfs_find_next_cluster+3,f,c
 32989  00AB1C  5048               	movf	fatfs_find_next_cluster@current_cluster,w,c
 32990  00AB1E  244C               	addwf	??_fatfs_find_next_cluster,w,c
 32991  00AB20  6E50               	movwf	(??_fatfs_find_next_cluster+4)& (0+255),c
 32992  00AB22  5049               	movf	fatfs_find_next_cluster@current_cluster+1,w,c
 32993  00AB24  204D               	addwfc	??_fatfs_find_next_cluster+1,w,c
 32994  00AB26  6E51               	movwf	(??_fatfs_find_next_cluster+5)& (0+255),c
 32995  00AB28  504A               	movf	fatfs_find_next_cluster@current_cluster+2,w,c
 32996  00AB2A  204E               	addwfc	??_fatfs_find_next_cluster+2,w,c
 32997  00AB2C  6E52               	movwf	(??_fatfs_find_next_cluster+6)& (0+255),c
 32998  00AB2E  504B               	movf	fatfs_find_next_cluster@current_cluster+3,w,c
 32999  00AB30  204F               	addwfc	??_fatfs_find_next_cluster+3,w,c
 33000  00AB32  6E53               	movwf	(??_fatfs_find_next_cluster+7)& (0+255),c
 33001  00AB34  0E02               	movlw	2
 33002  00AB36                     u9255:
 33003  00AB36  90D8               	bcf	status,0,c
 33004  00AB38  3650               	rlcf	??_fatfs_find_next_cluster+4,f,c
 33005  00AB3A  3651               	rlcf	??_fatfs_find_next_cluster+5,f,c
 33006  00AB3C  3652               	rlcf	??_fatfs_find_next_cluster+6,f,c
 33007  00AB3E  3653               	rlcf	??_fatfs_find_next_cluster+7,f,c
 33008  00AB40  2EE8               	decfsz	wreg,f,c
 33009  00AB42  D7F9               	goto	u9255
 33010  00AB44  C050  F076         	movff	??_fatfs_find_next_cluster+4,fatfs_find_next_cluster@position
 33011  00AB48  C051  F077         	movff	??_fatfs_find_next_cluster+5,fatfs_find_next_cluster@position+1
 33012  00AB4C  C052  F078         	movff	??_fatfs_find_next_cluster+6,fatfs_find_next_cluster@position+2
 33013  00AB50  C053  F079         	movff	??_fatfs_find_next_cluster+7,fatfs_find_next_cluster@position+3
 33014                           
 33015                           ;fat_table.c: 244: nextcluster = ( ( ((uint32)pbuf->ptr[(uint16)position+3]<<24) + ((uin
      +                          t32)pbuf->ptr[(uint16)position+2]<<16) + ((uint32)pbuf->ptr[(uint16)position+1]<<8) + (u
      +                          int32)pbuf->ptr[(uint16)position+0] ) );
 33016  00AB54  2876               	incf	fatfs_find_next_cluster@position,w,c
 33017  00AB56  6E4C               	movwf	??_fatfs_find_next_cluster& (0+255),c
 33018  00AB58  0E00               	movlw	0
 33019  00AB5A  2077               	addwfc	fatfs_find_next_cluster@position+1,w,c
 33020  00AB5C  6E4D               	movwf	(??_fatfs_find_next_cluster+1)& (0+255),c
 33021  00AB5E  EE22 F006          	lfsr	2,518
 33022  00AB62  507E               	movf	fatfs_find_next_cluster@pbuf,w,c
 33023  00AB64  26D9               	addwf	fsr2l,f,c
 33024  00AB66  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 33025  00AB68  22DA               	addwfc	fsr2h,f,c
 33026  00AB6A  CFDE F04E          	movff	postinc2,??_fatfs_find_next_cluster+2
 33027  00AB6E  CFDD F04F          	movff	postdec2,??_fatfs_find_next_cluster+3
 33028  00AB72  504C               	movf	??_fatfs_find_next_cluster,w,c
 33029  00AB74  244E               	addwf	??_fatfs_find_next_cluster+2,w,c
 33030  00AB76  6ED9               	movwf	fsr2l,c
 33031  00AB78  504D               	movf	??_fatfs_find_next_cluster+1,w,c
 33032  00AB7A  204F               	addwfc	??_fatfs_find_next_cluster+3,w,c
 33033  00AB7C  6EDA               	movwf	fsr2h,c
 33034  00AB7E  50DF               	movf	indf2,w,c
 33035  00AB80  6E50               	movwf	(??_fatfs_find_next_cluster+4)& (0+255),c
 33036  00AB82  C050  F051         	movff	??_fatfs_find_next_cluster+4,??_fatfs_find_next_cluster+5
 33037  00AB86  6A52               	clrf	(??_fatfs_find_next_cluster+6)& (0+255),c
 33038  00AB88  6A53               	clrf	(??_fatfs_find_next_cluster+7)& (0+255),c
 33039  00AB8A  6A54               	clrf	(??_fatfs_find_next_cluster+8)& (0+255),c
 33040  00AB8C  C053  F054         	movff	??_fatfs_find_next_cluster+7,??_fatfs_find_next_cluster+8
 33041  00AB90  C052  F053         	movff	??_fatfs_find_next_cluster+6,??_fatfs_find_next_cluster+7
 33042  00AB94  C051  F052         	movff	??_fatfs_find_next_cluster+5,??_fatfs_find_next_cluster+6
 33043  00AB98  6A51               	clrf	??_fatfs_find_next_cluster+5,c
 33044  00AB9A  0E02               	movlw	2
 33045  00AB9C  2476               	addwf	fatfs_find_next_cluster@position,w,c
 33046  00AB9E  6E55               	movwf	(??_fatfs_find_next_cluster+9)& (0+255),c
 33047  00ABA0  0E00               	movlw	0
 33048  00ABA2  2077               	addwfc	fatfs_find_next_cluster@position+1,w,c
 33049  00ABA4  6E56               	movwf	(??_fatfs_find_next_cluster+10)& (0+255),c
 33050  00ABA6  EE22 F006          	lfsr	2,518
 33051  00ABAA  507E               	movf	fatfs_find_next_cluster@pbuf,w,c
 33052  00ABAC  26D9               	addwf	fsr2l,f,c
 33053  00ABAE  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 33054  00ABB0  22DA               	addwfc	fsr2h,f,c
 33055  00ABB2  CFDE F057          	movff	postinc2,??_fatfs_find_next_cluster+11
 33056  00ABB6  CFDD F058          	movff	postdec2,??_fatfs_find_next_cluster+12
 33057  00ABBA  5055               	movf	??_fatfs_find_next_cluster+9,w,c
 33058  00ABBC  2457               	addwf	??_fatfs_find_next_cluster+11,w,c
 33059  00ABBE  6ED9               	movwf	fsr2l,c
 33060  00ABC0  5056               	movf	??_fatfs_find_next_cluster+10,w,c
 33061  00ABC2  2058               	addwfc	??_fatfs_find_next_cluster+12,w,c
 33062  00ABC4  6EDA               	movwf	fsr2h,c
 33063  00ABC6  50DF               	movf	indf2,w,c
 33064  00ABC8  6E59               	movwf	(??_fatfs_find_next_cluster+13)& (0+255),c
 33065  00ABCA  C059  F05A         	movff	??_fatfs_find_next_cluster+13,??_fatfs_find_next_cluster+14
 33066  00ABCE  6A5B               	clrf	(??_fatfs_find_next_cluster+15)& (0+255),c
 33067  00ABD0  6A5C               	clrf	(??_fatfs_find_next_cluster+16)& (0+255),c
 33068  00ABD2  6A5D               	clrf	(??_fatfs_find_next_cluster+17)& (0+255),c
 33069  00ABD4  C05B  F05D         	movff	??_fatfs_find_next_cluster+15,??_fatfs_find_next_cluster+17
 33070  00ABD8  C05A  F05C         	movff	??_fatfs_find_next_cluster+14,??_fatfs_find_next_cluster+16
 33071  00ABDC  6A5B               	clrf	??_fatfs_find_next_cluster+15,c
 33072  00ABDE  6A5A               	clrf	??_fatfs_find_next_cluster+14,c
 33073  00ABE0  0E03               	movlw	3
 33074  00ABE2  2476               	addwf	fatfs_find_next_cluster@position,w,c
 33075  00ABE4  6E5E               	movwf	(??_fatfs_find_next_cluster+18)& (0+255),c
 33076  00ABE6  0E00               	movlw	0
 33077  00ABE8  2077               	addwfc	fatfs_find_next_cluster@position+1,w,c
 33078  00ABEA  6E5F               	movwf	(??_fatfs_find_next_cluster+19)& (0+255),c
 33079  00ABEC  EE22 F006          	lfsr	2,518
 33080  00ABF0  507E               	movf	fatfs_find_next_cluster@pbuf,w,c
 33081  00ABF2  26D9               	addwf	fsr2l,f,c
 33082  00ABF4  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 33083  00ABF6  22DA               	addwfc	fsr2h,f,c
 33084  00ABF8  CFDE F060          	movff	postinc2,??_fatfs_find_next_cluster+20
 33085  00ABFC  CFDD F061          	movff	postdec2,??_fatfs_find_next_cluster+21
 33086  00AC00  505E               	movf	??_fatfs_find_next_cluster+18,w,c
 33087  00AC02  2460               	addwf	??_fatfs_find_next_cluster+20,w,c
 33088  00AC04  6ED9               	movwf	fsr2l,c
 33089  00AC06  505F               	movf	??_fatfs_find_next_cluster+19,w,c
 33090  00AC08  2061               	addwfc	??_fatfs_find_next_cluster+21,w,c
 33091  00AC0A  6EDA               	movwf	fsr2h,c
 33092  00AC0C  50DF               	movf	indf2,w,c
 33093  00AC0E  6E62               	movwf	(??_fatfs_find_next_cluster+22)& (0+255),c
 33094  00AC10  C062  F063         	movff	??_fatfs_find_next_cluster+22,??_fatfs_find_next_cluster+23
 33095  00AC14  6A64               	clrf	(??_fatfs_find_next_cluster+24)& (0+255),c
 33096  00AC16  6A65               	clrf	(??_fatfs_find_next_cluster+25)& (0+255),c
 33097  00AC18  6A66               	clrf	(??_fatfs_find_next_cluster+26)& (0+255),c
 33098  00AC1A  C063  F066         	movff	??_fatfs_find_next_cluster+23,??_fatfs_find_next_cluster+26
 33099  00AC1E  6A65               	clrf	??_fatfs_find_next_cluster+25,c
 33100  00AC20  6A64               	clrf	??_fatfs_find_next_cluster+24,c
 33101  00AC22  6A63               	clrf	??_fatfs_find_next_cluster+23,c
 33102  00AC24  505A               	movf	??_fatfs_find_next_cluster+14,w,c
 33103  00AC26  2463               	addwf	??_fatfs_find_next_cluster+23,w,c
 33104  00AC28  6E67               	movwf	(??_fatfs_find_next_cluster+27)& (0+255),c
 33105  00AC2A  505B               	movf	??_fatfs_find_next_cluster+15,w,c
 33106  00AC2C  2064               	addwfc	??_fatfs_find_next_cluster+24,w,c
 33107  00AC2E  6E68               	movwf	(??_fatfs_find_next_cluster+28)& (0+255),c
 33108  00AC30  505C               	movf	??_fatfs_find_next_cluster+16,w,c
 33109  00AC32  2065               	addwfc	??_fatfs_find_next_cluster+25,w,c
 33110  00AC34  6E69               	movwf	(??_fatfs_find_next_cluster+29)& (0+255),c
 33111  00AC36  505D               	movf	??_fatfs_find_next_cluster+17,w,c
 33112  00AC38  2066               	addwfc	??_fatfs_find_next_cluster+26,w,c
 33113  00AC3A  6E6A               	movwf	(??_fatfs_find_next_cluster+30)& (0+255),c
 33114  00AC3C  5051               	movf	??_fatfs_find_next_cluster+5,w,c
 33115  00AC3E  2467               	addwf	??_fatfs_find_next_cluster+27,w,c
 33116  00AC40  6E6B               	movwf	(??_fatfs_find_next_cluster+31)& (0+255),c
 33117  00AC42  5052               	movf	??_fatfs_find_next_cluster+6,w,c
 33118  00AC44  2068               	addwfc	??_fatfs_find_next_cluster+28,w,c
 33119  00AC46  6E6C               	movwf	(??_fatfs_find_next_cluster+32)& (0+255),c
 33120  00AC48  5053               	movf	??_fatfs_find_next_cluster+7,w,c
 33121  00AC4A  2069               	addwfc	??_fatfs_find_next_cluster+29,w,c
 33122  00AC4C  6E6D               	movwf	(??_fatfs_find_next_cluster+33)& (0+255),c
 33123  00AC4E  5054               	movf	??_fatfs_find_next_cluster+8,w,c
 33124  00AC50  206A               	addwfc	??_fatfs_find_next_cluster+30,w,c
 33125  00AC52  6E6E               	movwf	(??_fatfs_find_next_cluster+34)& (0+255),c
 33126  00AC54  EE22 F006          	lfsr	2,518
 33127  00AC58  507E               	movf	fatfs_find_next_cluster@pbuf,w,c
 33128  00AC5A  26D9               	addwf	fsr2l,f,c
 33129  00AC5C  507F               	movf	fatfs_find_next_cluster@pbuf+1,w,c
 33130  00AC5E  22DA               	addwfc	fsr2h,f,c
 33131  00AC60  CFDE F06F          	movff	postinc2,??_fatfs_find_next_cluster+35
 33132  00AC64  CFDD F070          	movff	postdec2,??_fatfs_find_next_cluster+36
 33133  00AC68  5076               	movf	fatfs_find_next_cluster@position,w,c
 33134  00AC6A  246F               	addwf	??_fatfs_find_next_cluster+35,w,c
 33135  00AC6C  6ED9               	movwf	fsr2l,c
 33136  00AC6E  5077               	movf	fatfs_find_next_cluster@position+1,w,c
 33137  00AC70  2070               	addwfc	??_fatfs_find_next_cluster+36,w,c
 33138  00AC72  6EDA               	movwf	fsr2h,c
 33139  00AC74  50DF               	movf	indf2,w,c
 33140  00AC76  6E71               	movwf	(??_fatfs_find_next_cluster+37)& (0+255),c
 33141  00AC78  5071               	movf	??_fatfs_find_next_cluster+37,w,c
 33142  00AC7A  246B               	addwf	??_fatfs_find_next_cluster+31,w,c
 33143  00AC7C  6E7A               	movwf	fatfs_find_next_cluster@nextcluster,c
 33144  00AC7E  0E00               	movlw	0
 33145  00AC80  206C               	addwfc	??_fatfs_find_next_cluster+32,w,c
 33146  00AC82  6E7B               	movwf	fatfs_find_next_cluster@nextcluster+1,c
 33147  00AC84  0E00               	movlw	0
 33148  00AC86  206D               	addwfc	??_fatfs_find_next_cluster+33,w,c
 33149  00AC88  6E7C               	movwf	fatfs_find_next_cluster@nextcluster+2,c
 33150  00AC8A  0E00               	movlw	0
 33151  00AC8C  206E               	addwfc	??_fatfs_find_next_cluster+34,w,c
 33152  00AC8E  6E7D               	movwf	fatfs_find_next_cluster@nextcluster+3,c
 33153                           
 33154                           ;fat_table.c: 247: nextcluster = nextcluster & 0x0FFFFFFF;
 33155  00AC90  507A               	movf	fatfs_find_next_cluster@nextcluster,w,c
 33156  00AC92  507B               	movf	fatfs_find_next_cluster@nextcluster+1,w,c
 33157  00AC94  507C               	movf	fatfs_find_next_cluster@nextcluster+2,w,c
 33158  00AC96  0E0F               	movlw	15
 33159  00AC98  167D               	andwf	fatfs_find_next_cluster@nextcluster+3,f,c
 33160                           
 33161                           ;fat_table.c: 250: if (nextcluster >= 0x0FFFFFF8 && nextcluster <= 0x0FFFFFFF)
 33162  00AC9A  0EF8               	movlw	248
 33163  00AC9C  5C7A               	subwf	fatfs_find_next_cluster@nextcluster,w,c
 33164  00AC9E  0EFF               	movlw	255
 33165  00ACA0  587B               	subwfb	fatfs_find_next_cluster@nextcluster+1,w,c
 33166  00ACA2  0EFF               	movlw	255
 33167  00ACA4  587C               	subwfb	fatfs_find_next_cluster@nextcluster+2,w,c
 33168  00ACA6  0E0F               	movlw	15
 33169  00ACA8  587D               	subwfb	fatfs_find_next_cluster@nextcluster+3,w,c
 33170  00ACAA  E313               	bnc	l1231
 33171  00ACAC  6A4C               	clrf	??_fatfs_find_next_cluster& (0+255),c
 33172  00ACAE  6A4D               	clrf	(??_fatfs_find_next_cluster+1)& (0+255),c
 33173  00ACB0  6A4E               	clrf	(??_fatfs_find_next_cluster+2)& (0+255),c
 33174  00ACB2  0E10               	movlw	16
 33175  00ACB4                     L113:
 33176  00ACB4  6E4F               	movwf	(??_fatfs_find_next_cluster+3)& (0+255),c
 33177  00ACB6  504C               	movf	??_fatfs_find_next_cluster,w,c
 33178  00ACB8  5C7A               	subwf	fatfs_find_next_cluster@nextcluster,w,c
 33179  00ACBA  504D               	movf	??_fatfs_find_next_cluster+1,w,c
 33180  00ACBC  587B               	subwfb	fatfs_find_next_cluster@nextcluster+1,w,c
 33181  00ACBE  504E               	movf	??_fatfs_find_next_cluster+2,w,c
 33182  00ACC0  587C               	subwfb	fatfs_find_next_cluster@nextcluster+2,w,c
 33183  00ACC2  504F               	movf	??_fatfs_find_next_cluster+3,w,c
 33184  00ACC4  587D               	subwfb	fatfs_find_next_cluster@nextcluster+3,w,c
 33185  00ACC6  E205               	bc	l1231
 33186  00ACC8                     u9270:
 33187                           
 33188                           ;fat_table.c: 251: return (0xFFFFFFFF);
 33189  00ACC8  6846               	setf	?_fatfs_find_next_cluster,c
 33190  00ACCA  6847               	setf	?_fatfs_find_next_cluster+1,c
 33191  00ACCC  6848               	setf	?_fatfs_find_next_cluster+2,c
 33192  00ACCE  6849               	setf	?_fatfs_find_next_cluster+3,c
 33193  00ACD0  D008               	goto	l1228
 33194  00ACD2                     l1231:
 33195                           
 33196                           ;fat_table.c: 252: }
 33197                           ;fat_table.c: 255: return (nextcluster);
 33198  00ACD2  C07A  F046         	movff	fatfs_find_next_cluster@nextcluster,?_fatfs_find_next_cluster
 33199  00ACD6  C07B  F047         	movff	fatfs_find_next_cluster@nextcluster+1,?_fatfs_find_next_cluster+1
 33200  00ACDA  C07C  F048         	movff	fatfs_find_next_cluster@nextcluster+2,?_fatfs_find_next_cluster+2
 33201  00ACDE  C07D  F049         	movff	fatfs_find_next_cluster@nextcluster+3,?_fatfs_find_next_cluster+3
 33202  00ACE2                     l1228:
 33203  00ACE2  0012               	return	
 33204  00ACE4                     __end_of_fatfs_find_next_cluster:
 33205                           	opt stack 0
 33206                           tosu	equ	0xFFF
 33207                           tosh	equ	0xFFE
 33208                           tosl	equ	0xFFD
 33209                           pclath	equ	0xFFA
 33210                           tblptru	equ	0xFF8
 33211                           tblptrh	equ	0xFF7
 33212                           tblptrl	equ	0xFF6
 33213                           tablat	equ	0xFF5
 33214                           prodh	equ	0xFF4
 33215                           prodl	equ	0xFF3
 33216                           indf0	equ	0xFEF
 33217                           postinc0	equ	0xFEE
 33218                           fsr0h	equ	0xFEA
 33219                           fsr0l	equ	0xFE9
 33220                           wreg	equ	0xFE8
 33221                           indf1	equ	0xFE7
 33222                           postinc1	equ	0xFE6
 33223                           postdec1	equ	0xFE5
 33224                           fsr1h	equ	0xFE2
 33225                           fsr1l	equ	0xFE1
 33226                           indf2	equ	0xFDF
 33227                           postinc2	equ	0xFDE
 33228                           postdec2	equ	0xFDD
 33229                           fsr2h	equ	0xFDA
 33230                           fsr2l	equ	0xFD9
 33231                           status	equ	0xFD8
 33232                           
 33233 ;; *************** function _fatfs_fat_read_sector *****************
 33234 ;; Defined at:
 33235 ;;		line 116 in file "fat_table.c"
 33236 ;; Parameters:    Size  Location     Type
 33237 ;;  fs              2   51[COMRAM] PTR struct fatfs
 33238 ;;		 -> _fs(1095), 
 33239 ;;  sector          4   53[COMRAM] unsigned long 
 33240 ;; Auto vars:     Size  Location     Type
 33241 ;;  pcur            2   67[COMRAM] PTR struct fat_buffer
 33242 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 33243 ;;		 -> NULL(0), 
 33244 ;;  last            2   65[COMRAM] PTR struct fat_buffer
 33245 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 33246 ;;		 -> NULL(0), 
 33247 ;; Return value:  Size  Location     Type
 33248 ;;                  2   51[COMRAM] PTR struct fat_buffer
 33249 ;; Registers used:
 33250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 33251 ;; Tracked objects:
 33252 ;;		On entry : 0/0
 33253 ;;		On exit  : 0/0
 33254 ;;		Unchanged: 0/0
 33255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33256 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33257 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33258 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33259 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33260 ;;Total ram usage:       18 bytes
 33261 ;; Hardware stack levels used:    1
 33262 ;; Hardware stack levels required when called:    4
 33263 ;; This function calls:
 33264 ;;		_fatfs_fat_writeback
 33265 ;;		_media_read
 33266 ;; This function is called by:
 33267 ;;		_fatfs_find_next_cluster
 33268 ;;		_fatfs_set_fs_info_next_free_cluster
 33269 ;;		_fatfs_find_blank_cluster
 33270 ;;		_fatfs_fat_set_cluster
 33271 ;;		_fatfs_count_free_clusters
 33272 ;; This function uses a non-reentrant model
 33273 ;;
 33274                           
 33275                           	psect	text97
 33276  008704                     __ptext97:
 33277                           	opt stack 0
 33278  008704                     _fatfs_fat_read_sector:
 33279                           	opt stack 21
 33280                           
 33281                           ;fat_table.c: 118: struct fat_buffer *last = (0);
 33282                           
 33283                           ;incstack = 0
 33284  008704  6A43               	clrf	fatfs_fat_read_sector@last+1,c
 33285  008706  6A42               	clrf	fatfs_fat_read_sector@last,c
 33286                           
 33287                           ;fat_table.c: 119: struct fat_buffer *pcur = fs->fat_buffer_head;
 33288  008708  EE22 F03B          	lfsr	2,571
 33289  00870C  5034               	movf	fatfs_fat_read_sector@fs,w,c
 33290  00870E  26D9               	addwf	fsr2l,f,c
 33291  008710  5035               	movf	fatfs_fat_read_sector@fs+1,w,c
 33292  008712  D05C               	goto	L114
 33293  008714                     l8741:
 33294                           
 33295                           ;fat_table.c: 123: {
 33296                           ;fat_table.c: 125: if ((sector >= pcur->address) && (sector < (pcur->address + 1)))
 33297  008714  EE22 F000          	lfsr	2,512
 33298  008718  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33299  00871A  26D9               	addwf	fsr2l,f,c
 33300  00871C  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33301  00871E  22DA               	addwfc	fsr2h,f,c
 33302  008720  CFDE F03A          	movff	postinc2,??_fatfs_fat_read_sector
 33303  008724  CFDE F03B          	movff	postinc2,??_fatfs_fat_read_sector+1
 33304  008728  CFDE F03C          	movff	postinc2,??_fatfs_fat_read_sector+2
 33305  00872C  CFDE F03D          	movff	postinc2,??_fatfs_fat_read_sector+3
 33306  008730  503A               	movf	??_fatfs_fat_read_sector,w,c
 33307  008732  5C36               	subwf	fatfs_fat_read_sector@sector,w,c
 33308  008734  503B               	movf	??_fatfs_fat_read_sector+1,w,c
 33309  008736  5837               	subwfb	fatfs_fat_read_sector@sector+1,w,c
 33310  008738  503C               	movf	??_fatfs_fat_read_sector+2,w,c
 33311  00873A  5838               	subwfb	fatfs_fat_read_sector@sector+2,w,c
 33312  00873C  503D               	movf	??_fatfs_fat_read_sector+3,w,c
 33313  00873E  5839               	subwfb	fatfs_fat_read_sector@sector+3,w,c
 33314  008740  E322               	bnc	l8747
 33315  008742  EE22 F000          	lfsr	2,512
 33316  008746  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33317  008748  26D9               	addwf	fsr2l,f,c
 33318  00874A  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33319  00874C  22DA               	addwfc	fsr2h,f,c
 33320  00874E  CFDE F03A          	movff	postinc2,??_fatfs_fat_read_sector
 33321  008752  CFDE F03B          	movff	postinc2,??_fatfs_fat_read_sector+1
 33322  008756  CFDE F03C          	movff	postinc2,??_fatfs_fat_read_sector+2
 33323  00875A  CFDE F03D          	movff	postinc2,??_fatfs_fat_read_sector+3
 33324  00875E  283A               	incf	??_fatfs_fat_read_sector,w,c
 33325  008760  6E3E               	movwf	(??_fatfs_fat_read_sector+4)& (0+255),c
 33326  008762  0E00               	movlw	0
 33327  008764  203B               	addwfc	??_fatfs_fat_read_sector+1,w,c
 33328  008766  6E3F               	movwf	(??_fatfs_fat_read_sector+5)& (0+255),c
 33329  008768  0E00               	movlw	0
 33330  00876A  203C               	addwfc	??_fatfs_fat_read_sector+2,w,c
 33331  00876C  6E40               	movwf	(??_fatfs_fat_read_sector+6)& (0+255),c
 33332  00876E  0E00               	movlw	0
 33333  008770  203D               	addwfc	??_fatfs_fat_read_sector+3,w,c
 33334  008772  6E41               	movwf	(??_fatfs_fat_read_sector+7)& (0+255),c
 33335  008774  503E               	movf	??_fatfs_fat_read_sector+4,w,c
 33336  008776  5C36               	subwf	fatfs_fat_read_sector@sector,w,c
 33337  008778  503F               	movf	??_fatfs_fat_read_sector+5,w,c
 33338  00877A  5837               	subwfb	fatfs_fat_read_sector@sector+1,w,c
 33339  00877C  5040               	movf	??_fatfs_fat_read_sector+6,w,c
 33340  00877E  5838               	subwfb	fatfs_fat_read_sector@sector+2,w,c
 33341  008780  5041               	movf	??_fatfs_fat_read_sector+7,w,c
 33342  008782  5839               	subwfb	fatfs_fat_read_sector@sector+3,w,c
 33343  008784  E32B               	bnc	l8759
 33344  008786                     l8747:
 33345                           
 33346                           ;fat_table.c: 129: if (pcur->next == (0))
 33347  008786  EE22 F008          	lfsr	2,520
 33348  00878A  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33349  00878C  26D9               	addwf	fsr2l,f,c
 33350  00878E  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33351  008790  22DA               	addwfc	fsr2h,f,c
 33352  008792  50DE               	movf	postinc2,w,c
 33353  008794  10DD               	iorwf	postdec2,w,c
 33354  008796  E111               	bnz	l8755
 33355                           
 33356                           ;fat_table.c: 130: {
 33357                           ;fat_table.c: 132: if (last)
 33358  008798  5043               	movf	fatfs_fat_read_sector@last+1,w,c
 33359  00879A  1042               	iorwf	fatfs_fat_read_sector@last,w,c
 33360  00879C  E006               	bz	l8753
 33361                           
 33362                           ;fat_table.c: 133: last->next = (0);
 33363  00879E  EE22 F008          	lfsr	2,520
 33364  0087A2  5042               	movf	fatfs_fat_read_sector@last,w,c
 33365  0087A4  26D9               	addwf	fsr2l,f,c
 33366  0087A6  5043               	movf	fatfs_fat_read_sector@last+1,w,c
 33367  0087A8  D005               	goto	L115
 33368  0087AA                     l8753:
 33369                           
 33370                           ;fat_table.c: 135: else
 33371                           ;fat_table.c: 136: fs->fat_buffer_head = (0);
 33372  0087AA  EE22 F03B          	lfsr	2,571
 33373  0087AE  5034               	movf	fatfs_fat_read_sector@fs,w,c
 33374  0087B0  26D9               	addwf	fsr2l,f,c
 33375  0087B2  5035               	movf	fatfs_fat_read_sector@fs+1,w,c
 33376  0087B4                     L115:
 33377  0087B4  22DA               	addwfc	fsr2h,f,c
 33378  0087B6  6ADE               	clrf	postinc2,c
 33379  0087B8  6ADD               	clrf	postdec2,c
 33380  0087BA                     l8755:
 33381                           
 33382                           ;fat_table.c: 137: }
 33383                           ;fat_table.c: 139: last = pcur;
 33384  0087BA  C045  F043         	movff	fatfs_fat_read_sector@pcur+1,fatfs_fat_read_sector@last+1
 33385  0087BE  C044  F042         	movff	fatfs_fat_read_sector@pcur,fatfs_fat_read_sector@last
 33386                           
 33387                           ;fat_table.c: 140: pcur = pcur->next;
 33388  0087C2  EE22 F008          	lfsr	2,520
 33389  0087C6  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33390  0087C8  26D9               	addwf	fsr2l,f,c
 33391  0087CA  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33392  0087CC                     L114:
 33393  0087CC  22DA               	addwfc	fsr2h,f,c
 33394  0087CE  CFDE F044          	movff	postinc2,fatfs_fat_read_sector@pcur
 33395  0087D2  CFDD F045          	movff	postdec2,fatfs_fat_read_sector@pcur+1
 33396  0087D6  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33397  0087D8  1044               	iorwf	fatfs_fat_read_sector@pcur,w,c
 33398  0087DA  E19C               	bnz	l8741
 33399  0087DC                     l8759:
 33400                           
 33401                           ;fat_table.c: 141: }
 33402                           ;fat_table.c: 144: if (pcur)
 33403  0087DC  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33404  0087DE  1044               	iorwf	fatfs_fat_read_sector@pcur,w,c
 33405  0087E0  E02B               	bz	l8767
 33406                           
 33407                           ;fat_table.c: 145: {
 33408                           ;fat_table.c: 146: pcur->ptr = (uint8 *)(pcur->sector + ((sector - pcur->address) * 512)
      +                          );
 33409  0087E2  EE22 F000          	lfsr	2,512
 33410  0087E6  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33411  0087E8  26D9               	addwf	fsr2l,f,c
 33412  0087EA  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33413  0087EC  22DA               	addwfc	fsr2h,f,c
 33414  0087EE  CFDE F03A          	movff	postinc2,??_fatfs_fat_read_sector
 33415  0087F2  CFDD F03B          	movff	postdec2,??_fatfs_fat_read_sector+1
 33416  0087F6  1E3A               	comf	??_fatfs_fat_read_sector,f,c
 33417  0087F8  1E3B               	comf	??_fatfs_fat_read_sector+1,f,c
 33418  0087FA  4A3A               	infsnz	??_fatfs_fat_read_sector,f,c
 33419  0087FC  2A3B               	incf	??_fatfs_fat_read_sector+1,f,c
 33420  0087FE  5036               	movf	fatfs_fat_read_sector@sector,w,c
 33421  008800  263A               	addwf	??_fatfs_fat_read_sector,f,c
 33422  008802  5037               	movf	fatfs_fat_read_sector@sector+1,w,c
 33423  008804  223B               	addwfc	??_fatfs_fat_read_sector+1,f,c
 33424  008806  0E09               	movlw	9
 33425  008808                     u9105:
 33426  008808  90D8               	bcf	status,0,c
 33427  00880A  363A               	rlcf	??_fatfs_fat_read_sector,f,c
 33428  00880C  363B               	rlcf	??_fatfs_fat_read_sector+1,f,c
 33429  00880E  2EE8               	decfsz	wreg,f,c
 33430  008810  D7FB               	goto	u9105
 33431  008812  C044  F03C         	movff	fatfs_fat_read_sector@pcur,??_fatfs_fat_read_sector+2
 33432  008816  C045  F03D         	movff	fatfs_fat_read_sector@pcur+1,??_fatfs_fat_read_sector+3
 33433  00881A  503A               	movf	??_fatfs_fat_read_sector,w,c
 33434  00881C  263C               	addwf	??_fatfs_fat_read_sector+2,f,c
 33435  00881E  503B               	movf	??_fatfs_fat_read_sector+1,w,c
 33436  008820  223D               	addwfc	??_fatfs_fat_read_sector+3,f,c
 33437  008822  EE22 F006          	lfsr	2,518
 33438  008826  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33439  008828  26D9               	addwf	fsr2l,f,c
 33440  00882A  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33441  00882C  22DA               	addwfc	fsr2h,f,c
 33442  00882E  C03C  FFDE         	movff	??_fatfs_fat_read_sector+2,postinc2
 33443  008832  C03D  FFDD         	movff	??_fatfs_fat_read_sector+3,postdec2
 33444  008836  D08B               	goto	L116
 33445  008838                     l8767:
 33446                           
 33447                           ;fat_table.c: 148: }
 33448                           ;fat_table.c: 151: pcur = last;
 33449  008838  C043  F045         	movff	fatfs_fat_read_sector@last+1,fatfs_fat_read_sector@pcur+1
 33450  00883C  C042  F044         	movff	fatfs_fat_read_sector@last,fatfs_fat_read_sector@pcur
 33451                           
 33452                           ;fat_table.c: 154: pcur->next = fs->fat_buffer_head;
 33453  008840  EE22 F03B          	lfsr	2,571
 33454  008844  5034               	movf	fatfs_fat_read_sector@fs,w,c
 33455  008846  26D9               	addwf	fsr2l,f,c
 33456  008848  5035               	movf	fatfs_fat_read_sector@fs+1,w,c
 33457  00884A  22DA               	addwfc	fsr2h,f,c
 33458  00884C  EE12 F008          	lfsr	1,520
 33459  008850  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33460  008852  26E1               	addwf	fsr1l,f,c
 33461  008854  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33462  008856  22E2               	addwfc	fsr1h,f,c
 33463  008858  CFDE FFE6          	movff	postinc2,postinc1
 33464  00885C  CFDD FFE5          	movff	postdec2,postdec1
 33465                           
 33466                           ;fat_table.c: 155: fs->fat_buffer_head = pcur;
 33467  008860  EE22 F03B          	lfsr	2,571
 33468  008864  5034               	movf	fatfs_fat_read_sector@fs,w,c
 33469  008866  26D9               	addwf	fsr2l,f,c
 33470  008868  5035               	movf	fatfs_fat_read_sector@fs+1,w,c
 33471  00886A  22DA               	addwfc	fsr2h,f,c
 33472  00886C  C044  FFDE         	movff	fatfs_fat_read_sector@pcur,postinc2
 33473  008870  C045  FFDD         	movff	fatfs_fat_read_sector@pcur+1,postdec2
 33474                           
 33475                           ;fat_table.c: 158: if (pcur->dirty)
 33476  008874  EE22 F004          	lfsr	2,516
 33477  008878  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33478  00887A  26D9               	addwf	fsr2l,f,c
 33479  00887C  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33480  00887E  22DA               	addwfc	fsr2h,f,c
 33481  008880  50DE               	movf	postinc2,w,c
 33482  008882  10DD               	iorwf	postdec2,w,c
 33483  008884  E00D               	bz	l8781
 33484                           
 33485                           ;fat_table.c: 159: if (!fatfs_fat_writeback(fs, pcur))
 33486  008886  C035  F021         	movff	fatfs_fat_read_sector@fs+1,fatfs_fat_writeback@fs+1
 33487  00888A  C034  F020         	movff	fatfs_fat_read_sector@fs,fatfs_fat_writeback@fs
 33488  00888E  C045  F023         	movff	fatfs_fat_read_sector@pcur+1,fatfs_fat_writeback@pcur+1
 33489  008892  C044  F022         	movff	fatfs_fat_read_sector@pcur,fatfs_fat_writeback@pcur
 33490  008896  EC7C  F03C         	call	_fatfs_fat_writeback	;wreg free
 33491  00889A  5021               	movf	?_fatfs_fat_writeback+1,w,c
 33492  00889C  1020               	iorwf	?_fatfs_fat_writeback,w,c
 33493  00889E  E049               	bz	L117
 33494  0088A0                     l8781:
 33495                           
 33496                           ;fat_table.c: 163: pcur->address = sector;
 33497  0088A0  EE22 F000          	lfsr	2,512
 33498  0088A4  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33499  0088A6  26D9               	addwf	fsr2l,f,c
 33500  0088A8  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33501  0088AA  22DA               	addwfc	fsr2h,f,c
 33502  0088AC  C036  FFDE         	movff	fatfs_fat_read_sector@sector,postinc2
 33503  0088B0  C037  FFDE         	movff	fatfs_fat_read_sector@sector+1,postinc2
 33504  0088B4  C038  FFDE         	movff	fatfs_fat_read_sector@sector+2,postinc2
 33505  0088B8  C039  FFDE         	movff	fatfs_fat_read_sector@sector+3,postinc2
 33506                           
 33507                           ;fat_table.c: 166: if (!fs->disk_io.read_media(pcur->address, pcur->sector, 1))
 33508  0088BC  EE22 F000          	lfsr	2,512
 33509  0088C0  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33510  0088C2  26D9               	addwf	fsr2l,f,c
 33511  0088C4  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33512  0088C6  22DA               	addwfc	fsr2h,f,c
 33513  0088C8  CFDE F009          	movff	postinc2,media_read@sector
 33514  0088CC  CFDE F00A          	movff	postinc2,media_read@sector+1
 33515  0088D0  CFDE F00B          	movff	postinc2,media_read@sector+2
 33516  0088D4  CFDE F00C          	movff	postinc2,media_read@sector+3
 33517  0088D8  C045  F00E         	movff	fatfs_fat_read_sector@pcur+1,media_read@buffer+1
 33518  0088DC  C044  F00D         	movff	fatfs_fat_read_sector@pcur,media_read@buffer
 33519  0088E0  0E01               	movlw	1
 33520  0088E2  6E0F               	movwf	media_read@sector_count,c
 33521  0088E4  6A10               	clrf	media_read@sector_count+1,c
 33522  0088E6  6A11               	clrf	media_read@sector_count+2,c
 33523  0088E8  6A12               	clrf	media_read@sector_count+3,c
 33524  0088EA  EE20 F029          	lfsr	2,41
 33525  0088EE  5034               	movf	fatfs_fat_read_sector@fs,w,c
 33526  0088F0  26D9               	addwf	fsr2l,f,c
 33527  0088F2  5035               	movf	fatfs_fat_read_sector@fs+1,w,c
 33528  0088F4  22DA               	addwfc	fsr2h,f,c
 33529  0088F6  CFDE F03A          	movff	postinc2,??_fatfs_fat_read_sector
 33530  0088FA  CFDD F03B          	movff	postdec2,??_fatfs_fat_read_sector+1
 33531  0088FE  D801               	call	u9138
 33532  008900  D009               	goto	u9139
 33533  008902                     u9138:
 33534  008902  0005               	push	
 33535  008904  6EFA               	movwf	pclath,c
 33536  008906  503A               	movf	??_fatfs_fat_read_sector,w,c
 33537  008908  6EFD               	movwf	tosl,c
 33538  00890A  503B               	movf	??_fatfs_fat_read_sector+1,w,c
 33539  00890C  6EFE               	movwf	tosh,c
 33540  00890E  6AFF               	clrf	tosu,c
 33541  008910  50FA               	movf	pclath,w,c
 33542  008912  0012               	return		;indir
 33543  008914                     u9139:
 33544  008914  500A               	movf	?_media_read+1,w,c
 33545  008916  1009               	iorwf	?_media_read,w,c
 33546  008918  E110               	bnz	l8791
 33547                           
 33548                           ;fat_table.c: 167: {
 33549                           ;fat_table.c: 169: pcur->address = 0xFFFFFFFF;
 33550  00891A  EE22 F000          	lfsr	2,512
 33551  00891E  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33552  008920  26D9               	addwf	fsr2l,f,c
 33553  008922  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33554  008924  22DA               	addwfc	fsr2h,f,c
 33555  008926  68DE               	setf	postinc2,c
 33556  008928  68DE               	setf	postinc2,c
 33557  00892A  68DE               	setf	postinc2,c
 33558  00892C  68DD               	setf	postdec2,c
 33559  00892E  52DD               	movf	postdec2,f,c
 33560  008930  52DD               	movf	postdec2,f,c
 33561  008932                     L117:
 33562                           
 33563                           ;fat_table.c: 170: return (0);
 33564  008932  0E00               	movlw	0
 33565  008934  6E35               	movwf	?_fatfs_fat_read_sector+1,c
 33566  008936  6E34               	movwf	?_fatfs_fat_read_sector,c
 33567  008938  D00E               	goto	l1210
 33568  00893A                     l8791:
 33569                           
 33570                           ;fat_table.c: 171: }
 33571                           ;fat_table.c: 173: pcur->ptr = pcur->sector;
 33572  00893A  EE22 F006          	lfsr	2,518
 33573  00893E  5044               	movf	fatfs_fat_read_sector@pcur,w,c
 33574  008940  26D9               	addwf	fsr2l,f,c
 33575  008942  5045               	movf	fatfs_fat_read_sector@pcur+1,w,c
 33576  008944  22DA               	addwfc	fsr2h,f,c
 33577  008946  C044  FFDE         	movff	fatfs_fat_read_sector@pcur,postinc2
 33578  00894A  C045  FFDD         	movff	fatfs_fat_read_sector@pcur+1,postdec2
 33579  00894E                     L116:
 33580                           
 33581                           ;fat_table.c: 174: return pcur;
 33582  00894E  C045  F035         	movff	fatfs_fat_read_sector@pcur+1,?_fatfs_fat_read_sector+1
 33583  008952  C044  F034         	movff	fatfs_fat_read_sector@pcur,?_fatfs_fat_read_sector
 33584  008956                     l1210:
 33585  008956  0012               	return	
 33586  008958                     __end_of_fatfs_fat_read_sector:
 33587                           	opt stack 0
 33588                           tosu	equ	0xFFF
 33589                           tosh	equ	0xFFE
 33590                           tosl	equ	0xFFD
 33591                           pclath	equ	0xFFA
 33592                           tblptru	equ	0xFF8
 33593                           tblptrh	equ	0xFF7
 33594                           tblptrl	equ	0xFF6
 33595                           tablat	equ	0xFF5
 33596                           prodh	equ	0xFF4
 33597                           prodl	equ	0xFF3
 33598                           indf0	equ	0xFEF
 33599                           postinc0	equ	0xFEE
 33600                           fsr0h	equ	0xFEA
 33601                           fsr0l	equ	0xFE9
 33602                           wreg	equ	0xFE8
 33603                           indf1	equ	0xFE7
 33604                           postinc1	equ	0xFE6
 33605                           postdec1	equ	0xFE5
 33606                           fsr1h	equ	0xFE2
 33607                           fsr1l	equ	0xFE1
 33608                           indf2	equ	0xFDF
 33609                           postinc2	equ	0xFDE
 33610                           postdec2	equ	0xFDD
 33611                           fsr2h	equ	0xFDA
 33612                           fsr2l	equ	0xFD9
 33613                           status	equ	0xFD8
 33614                           
 33615 ;; *************** function _media_read *****************
 33616 ;; Defined at:
 33617 ;;		line 159 in file "main.c"
 33618 ;; Parameters:    Size  Location     Type
 33619 ;;  sector          4    8[COMRAM] unsigned long 
 33620 ;;  buffer          2   12[COMRAM] PTR unsigned char 
 33621 ;;		 -> _fs.currentsector(524), data(1), fatfs_add_file_entry@shortEntry(32), fl_fgetc@data(1), 
 33622 ;;		 -> _open_file@sfEntry(32), _fs(1095), RAM(3967), NULL(0), 
 33623 ;;  sector_count    4   14[COMRAM] unsigned long 
 33624 ;; Auto vars:     Size  Location     Type
 33625 ;;  i               4   26[COMRAM] unsigned long 
 33626 ;;  Start_Addr      4   22[COMRAM] unsigned long 
 33627 ;; Return value:  Size  Location     Type
 33628 ;;                  2    8[COMRAM] int 
 33629 ;; Registers used:
 33630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33631 ;; Tracked objects:
 33632 ;;		On entry : 0/0
 33633 ;;		On exit  : 0/0
 33634 ;;		Unchanged: 0/0
 33635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33636 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33637 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33638 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33639 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33640 ;;Total ram usage:       22 bytes
 33641 ;; Hardware stack levels used:    1
 33642 ;; Hardware stack levels required when called:    2
 33643 ;; This function calls:
 33644 ;;		_Command
 33645 ;;		_ReadSPI_
 33646 ;;		_WriteSPI_
 33647 ;; This function is called by:
 33648 ;;		_main
 33649 ;;		_fatfs_fat_read_sector
 33650 ;;		_fatfs_sector_reader
 33651 ;;		_fatfs_sector_read
 33652 ;;		_fatfs_init
 33653 ;; This function uses a non-reentrant model
 33654 ;;
 33655                           
 33656                           	psect	text98
 33657  00626E                     __ptext98:
 33658                           	opt stack 0
 33659  00626E                     _media_read:
 33660                           	opt stack 24
 33661                           
 33662                           ;main.c: 161: unsigned long i, Start_Addr;
 33663                           ;main.c: 163: Start_Addr = sector * 512;
 33664                           
 33665                           ;incstack = 0
 33666  00626E  C009  F013         	movff	media_read@sector,??_media_read
 33667  006272  C00A  F014         	movff	media_read@sector+1,??_media_read+1
 33668  006276  C00B  F015         	movff	media_read@sector+2,??_media_read+2
 33669  00627A  C00C  F016         	movff	media_read@sector+3,??_media_read+3
 33670  00627E  0E09               	movlw	9
 33671  006280                     u8965:
 33672  006280  90D8               	bcf	status,0,c
 33673  006282  3613               	rlcf	??_media_read,f,c
 33674  006284  3614               	rlcf	??_media_read+1,f,c
 33675  006286  3615               	rlcf	??_media_read+2,f,c
 33676  006288  3616               	rlcf	??_media_read+3,f,c
 33677  00628A  2EE8               	decfsz	wreg,f,c
 33678  00628C  D7F9               	goto	u8965
 33679  00628E  C013  F017         	movff	??_media_read,media_read@Start_Addr
 33680  006292  C014  F018         	movff	??_media_read+1,media_read@Start_Addr+1
 33681  006296  C015  F019         	movff	??_media_read+2,media_read@Start_Addr+2
 33682  00629A  C016  F01A         	movff	??_media_read+3,media_read@Start_Addr+3
 33683                           
 33684                           ;main.c: 164: Command(18, Start_Addr, 0xff);
 33685  00629E  C017  F003         	movff	media_read@Start_Addr,Command@arg
 33686  0062A2  C018  F004         	movff	media_read@Start_Addr+1,Command@arg+1
 33687  0062A6  C019  F005         	movff	media_read@Start_Addr+2,Command@arg+2
 33688  0062AA  C01A  F006         	movff	media_read@Start_Addr+3,Command@arg+3
 33689  0062AE  6807               	setf	Command@CRCbits,c
 33690  0062B0  0E12               	movlw	18
 33691  0062B2  EC90  F021         	call	_Command
 33692                           
 33693                           ;main.c: 165: while (response != 0)
 33694  0062B6  D002               	goto	l8693
 33695  0062B8                     l8691:
 33696                           
 33697                           ;main.c: 166: {
 33698                           ;main.c: 167: ReadSPI_();
 33699  0062B8  EC4F  F01F         	call	_ReadSPI_	;wreg free
 33700  0062BC                     l8693:
 33701  0062BC  0101               	movlb	1	; () banked
 33702  0062BE  67AB               	tstfsz	_response& (0+255),b
 33703  0062C0  D7FB               	goto	l8691
 33704  0062C2  D002               	goto	L118
 33705  0062C4                     l8695:
 33706                           
 33707                           ; BSR set to: 1
 33708                           ;main.c: 170: {
 33709                           ;main.c: 171: ReadSPI_();
 33710  0062C4  EC4F  F01F         	call	_ReadSPI_	;wreg free
 33711  0062C8                     L118:
 33712  0062C8  0101               	movlb	1	; () banked
 33713  0062CA  51AB               	movf	_response& (0+255),w,b
 33714  0062CC  0AFE               	xorlw	254
 33715  0062CE  E1FA               	bnz	l8695
 33716                           
 33717                           ; BSR set to: 1
 33718                           ;main.c: 172: }
 33719                           ;main.c: 173: for (i=0;i<sector_count;i++)
 33720                           
 33721                           ; BSR set to: 1
 33722  0062D0  6A1B               	clrf	media_read@i,c
 33723  0062D2  6A1C               	clrf	media_read@i+1,c
 33724  0062D4  6A1D               	clrf	media_read@i+2,c
 33725  0062D6  6A1E               	clrf	media_read@i+3,c
 33726  0062D8  D022               	goto	l1596
 33727  0062DA                     l8701:
 33728                           
 33729                           ; BSR set to: 1
 33730                           ;main.c: 174: {
 33731                           ;main.c: 175: for (n = 0; n < 512; n++)
 33732  0062DA  0101               	movlb	1	; () banked
 33733  0062DC  6BA0               	clrf	(_n+1)& (0+255),b
 33734  0062DE  6B9F               	clrf	_n& (0+255),b
 33735  0062E0                     
 33736                           ; BSR set to: 1
 33737  0062E0  0101               	movlb	1	; () banked
 33738  0062E2  51A0               	movf	(_n+1)& (0+255),w,b
 33739  0062E4  0A80               	xorlw	128
 33740  0062E6  0F7E               	addlw	-130
 33741  0062E8  0E00               	movlw	0
 33742  0062EA  B4D8               	btfsc	status,2,c
 33743  0062EC  5D9F               	subwf	_n& (0+255),w,b
 33744  0062EE  E20E               	bc	l8717
 33745                           
 33746                           ; BSR set to: 1
 33747                           ;main.c: 176: {
 33748                           ;main.c: 177: ReadSPI_();
 33749                           
 33750                           ; BSR set to: 1
 33751                           
 33752                           ; BSR set to: 1
 33753  0062F0  EC4F  F01F         	call	_ReadSPI_	;wreg free
 33754                           
 33755                           ;main.c: 178: *buffer = response;
 33756  0062F4  C00D  FFD9         	movff	media_read@buffer,fsr2l
 33757  0062F8  C00E  FFDA         	movff	media_read@buffer+1,fsr2h
 33758  0062FC  C1AB  FFDF         	movff	_response,indf2
 33759                           
 33760                           ; BSR set to: 1
 33761                           ;main.c: 179: buffer++;
 33762  006300  4A0D               	infsnz	media_read@buffer,f,c
 33763  006302  2A0E               	incf	media_read@buffer+1,f,c
 33764                           
 33765                           ; BSR set to: 1
 33766  006304  0101               	movlb	1	; () banked
 33767  006306  4B9F               	infsnz	_n& (0+255),f,b
 33768  006308  2BA0               	incf	(_n+1)& (0+255),f,b
 33769  00630A  D7EA               	goto	L119
 33770  00630C                     l8717:
 33771                           
 33772                           ; BSR set to: 1
 33773                           ;main.c: 180: }
 33774                           ;main.c: 181: sector ++;
 33775  00630C  2A09               	incf	media_read@sector,f,c
 33776  00630E  0E00               	movlw	0
 33777  006310  220A               	addwfc	media_read@sector+1,f,c
 33778  006312  220B               	addwfc	media_read@sector+2,f,c
 33779  006314  220C               	addwfc	media_read@sector+3,f,c
 33780  006316  2A1B               	incf	media_read@i,f,c
 33781  006318  221C               	addwfc	media_read@i+1,f,c
 33782  00631A  221D               	addwfc	media_read@i+2,f,c
 33783  00631C  221E               	addwfc	media_read@i+3,f,c
 33784  00631E                     l1596:
 33785                           
 33786                           ; BSR set to: 1
 33787  00631E  500F               	movf	media_read@sector_count,w,c
 33788  006320  5C1B               	subwf	media_read@i,w,c
 33789  006322  5010               	movf	media_read@sector_count+1,w,c
 33790  006324  581C               	subwfb	media_read@i+1,w,c
 33791  006326  5011               	movf	media_read@sector_count+2,w,c
 33792  006328  581D               	subwfb	media_read@i+2,w,c
 33793  00632A  5012               	movf	media_read@sector_count+3,w,c
 33794  00632C  581E               	subwfb	media_read@i+3,w,c
 33795  00632E  E3D5               	bnc	l8701
 33796                           
 33797                           ; BSR set to: 1
 33798                           ;main.c: 182: }
 33799                           ;main.c: 183: WriteSPI_(0xff);
 33800                           
 33801                           ; BSR set to: 1
 33802  006330  0EFF               	movlw	255
 33803  006332  EC81  F01F         	call	_WriteSPI_
 33804                           
 33805                           ;main.c: 184: WriteSPI_(0xff);
 33806  006336  0EFF               	movlw	255
 33807  006338  EC81  F01F         	call	_WriteSPI_
 33808                           
 33809                           ;main.c: 186: Command(12, 0, 0xff);
 33810  00633C  6A03               	clrf	Command@arg,c
 33811  00633E  6A04               	clrf	Command@arg+1,c
 33812  006340  6A05               	clrf	Command@arg+2,c
 33813  006342  6A06               	clrf	Command@arg+3,c
 33814  006344  6807               	setf	Command@CRCbits,c
 33815  006346  0E0C               	movlw	12
 33816  006348  EC90  F021         	call	_Command
 33817                           
 33818                           ;main.c: 187: ReadSPI_();
 33819  00634C  EC4F  F01F         	call	_ReadSPI_	;wreg free
 33820                           
 33821                           ;main.c: 188: while (response != 0)
 33822  006350  D002               	goto	l8727
 33823  006352                     l8725:
 33824                           
 33825                           ;main.c: 189: {
 33826                           ;main.c: 190: ReadSPI_();
 33827  006352  EC4F  F01F         	call	_ReadSPI_	;wreg free
 33828  006356                     l8727:
 33829  006356  0101               	movlb	1	; () banked
 33830  006358  67AB               	tstfsz	_response& (0+255),b
 33831  00635A  D7FB               	goto	l8725
 33832  00635C  D002               	goto	L120
 33833  00635E                     l8729:
 33834                           
 33835                           ; BSR set to: 1
 33836                           ;main.c: 193: {
 33837                           ;main.c: 194: ReadSPI_();
 33838  00635E  EC4F  F01F         	call	_ReadSPI_	;wreg free
 33839  006362                     L120:
 33840  006362  0101               	movlb	1	; () banked
 33841  006364  29AB               	incf	_response& (0+255),w,b
 33842  006366  E1FB               	bnz	l8729
 33843                           
 33844                           ; BSR set to: 1
 33845                           ;main.c: 195: }
 33846                           ;main.c: 196: return 1;
 33847                           
 33848                           ; BSR set to: 1
 33849  006368  0E00               	movlw	0
 33850  00636A  6E0A               	movwf	?_media_read+1,c
 33851  00636C  0E01               	movlw	1
 33852  00636E  6E09               	movwf	?_media_read,c
 33853                           
 33854                           ; BSR set to: 1
 33855                           
 33856                           ; BSR set to: 1
 33857  006370  0C01               	retlw	1
 33858  006372                     __end_of_media_read:
 33859                           	opt stack 0
 33860                           tosu	equ	0xFFF
 33861                           tosh	equ	0xFFE
 33862                           tosl	equ	0xFFD
 33863                           pclath	equ	0xFFA
 33864                           tblptru	equ	0xFF8
 33865                           tblptrh	equ	0xFF7
 33866                           tblptrl	equ	0xFF6
 33867                           tablat	equ	0xFF5
 33868                           prodh	equ	0xFF4
 33869                           prodl	equ	0xFF3
 33870                           indf0	equ	0xFEF
 33871                           postinc0	equ	0xFEE
 33872                           fsr0h	equ	0xFEA
 33873                           fsr0l	equ	0xFE9
 33874                           wreg	equ	0xFE8
 33875                           indf1	equ	0xFE7
 33876                           postinc1	equ	0xFE6
 33877                           postdec1	equ	0xFE5
 33878                           fsr1h	equ	0xFE2
 33879                           fsr1l	equ	0xFE1
 33880                           indf2	equ	0xFDF
 33881                           postinc2	equ	0xFDE
 33882                           postdec2	equ	0xFDD
 33883                           fsr2h	equ	0xFDA
 33884                           fsr2l	equ	0xFD9
 33885                           status	equ	0xFD8
 33886                           
 33887 ;; *************** function _fatfs_fat_writeback *****************
 33888 ;; Defined at:
 33889 ;;		line 83 in file "fat_table.c"
 33890 ;; Parameters:    Size  Location     Type
 33891 ;;  fs              2   31[COMRAM] PTR struct fatfs
 33892 ;;		 -> _fs(1095), 
 33893 ;;  pcur            2   33[COMRAM] PTR struct fat_buffer
 33894 ;;		 -> fatfs_add_file_entry@shortEntry(32), _open_file@sfEntry(32), _fs(1095), RAM(3967), 
 33895 ;;		 -> NULL(0), 
 33896 ;; Auto vars:     Size  Location     Type
 33897 ;;  offset          4   47[COMRAM] unsigned long 
 33898 ;;  sectors         4   43[COMRAM] unsigned long 
 33899 ;; Return value:  Size  Location     Type
 33900 ;;                  2   31[COMRAM] int 
 33901 ;; Registers used:
 33902 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 33903 ;; Tracked objects:
 33904 ;;		On entry : 0/0
 33905 ;;		On exit  : 0/0
 33906 ;;		Unchanged: 0/0
 33907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33908 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33909 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33910 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33911 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33912 ;;Total ram usage:       20 bytes
 33913 ;; Hardware stack levels used:    1
 33914 ;; Hardware stack levels required when called:    3
 33915 ;; This function calls:
 33916 ;;		_media_write
 33917 ;; This function is called by:
 33918 ;;		_fatfs_fat_read_sector
 33919 ;;		_fatfs_fat_purge
 33920 ;; This function uses a non-reentrant model
 33921 ;;
 33922                           
 33923                           	psect	text99
 33924  0078F8                     __ptext99:
 33925                           	opt stack 0
 33926  0078F8                     _fatfs_fat_writeback:
 33927                           	opt stack 25
 33928                           
 33929                           ;fat_table.c: 85: if (pcur)
 33930                           
 33931                           ; BSR set to: 1
 33932                           ;incstack = 0
 33933  0078F8  5023               	movf	fatfs_fat_writeback@pcur+1,w,c
 33934  0078FA  1022               	iorwf	fatfs_fat_writeback@pcur,w,c
 33935  0078FC  E101 D0DE          	bz	l8683
 33936                           
 33937                           ;fat_table.c: 86: {
 33938                           ;fat_table.c: 88: if (pcur->dirty)
 33939  007900  EE22 F004          	lfsr	2,516
 33940  007904  5022               	movf	fatfs_fat_writeback@pcur,w,c
 33941  007906  26D9               	addwf	fsr2l,f,c
 33942  007908  5023               	movf	fatfs_fat_writeback@pcur+1,w,c
 33943  00790A  22DA               	addwfc	fsr2h,f,c
 33944  00790C  50DE               	movf	postinc2,w,c
 33945  00790E  10DD               	iorwf	postdec2,w,c
 33946  007910  E101 D0D0          	bz	l8677
 33947                           
 33948                           ;fat_table.c: 89: {
 33949                           ;fat_table.c: 90: if (fs->disk_io.write_media)
 33950  007914  EE20 F02B          	lfsr	2,43
 33951  007918  5020               	movf	fatfs_fat_writeback@fs,w,c
 33952  00791A  26D9               	addwf	fsr2l,f,c
 33953  00791C  5021               	movf	fatfs_fat_writeback@fs+1,w,c
 33954  00791E  22DA               	addwfc	fsr2h,f,c
 33955  007920  50DE               	movf	postinc2,w,c
 33956  007922  10DD               	iorwf	postdec2,w,c
 33957  007924  E101 D0BD          	bz	l8675
 33958                           
 33959                           ;fat_table.c: 91: {
 33960                           ;fat_table.c: 92: uint32 sectors = 1;
 33961  007928  0E01               	movlw	1
 33962  00792A  6E2C               	movwf	fatfs_fat_writeback@sectors,c
 33963  00792C  6A2D               	clrf	fatfs_fat_writeback@sectors+1,c
 33964  00792E  6A2E               	clrf	fatfs_fat_writeback@sectors+2,c
 33965  007930  6A2F               	clrf	fatfs_fat_writeback@sectors+3,c
 33966                           
 33967                           ;fat_table.c: 93: uint32 offset = pcur->address - fs->fat_begin_lba;
 33968  007932  EE22 F000          	lfsr	2,512
 33969  007936  5022               	movf	fatfs_fat_writeback@pcur,w,c
 33970  007938  26D9               	addwf	fsr2l,f,c
 33971  00793A  5023               	movf	fatfs_fat_writeback@pcur+1,w,c
 33972  00793C  22DA               	addwfc	fsr2h,f,c
 33973  00793E  CFDE F024          	movff	postinc2,??_fatfs_fat_writeback
 33974  007942  CFDE F025          	movff	postinc2,??_fatfs_fat_writeback+1
 33975  007946  CFDE F026          	movff	postinc2,??_fatfs_fat_writeback+2
 33976  00794A  CFDE F027          	movff	postinc2,??_fatfs_fat_writeback+3
 33977  00794E  EE20 F011          	lfsr	2,17
 33978  007952  5020               	movf	fatfs_fat_writeback@fs,w,c
 33979  007954  26D9               	addwf	fsr2l,f,c
 33980  007956  5021               	movf	fatfs_fat_writeback@fs+1,w,c
 33981  007958  22DA               	addwfc	fsr2h,f,c
 33982  00795A  CFDE F028          	movff	postinc2,??_fatfs_fat_writeback+4
 33983  00795E  CFDE F029          	movff	postinc2,??_fatfs_fat_writeback+5
 33984  007962  CFDE F02A          	movff	postinc2,??_fatfs_fat_writeback+6
 33985  007966  CFDE F02B          	movff	postinc2,??_fatfs_fat_writeback+7
 33986  00796A  1E28               	comf	??_fatfs_fat_writeback+4,f,c
 33987  00796C  1E29               	comf	??_fatfs_fat_writeback+5,f,c
 33988  00796E  1E2A               	comf	??_fatfs_fat_writeback+6,f,c
 33989  007970  1E2B               	comf	??_fatfs_fat_writeback+7,f,c
 33990  007972  2A28               	incf	??_fatfs_fat_writeback+4,f,c
 33991  007974  0E00               	movlw	0
 33992  007976  2229               	addwfc	??_fatfs_fat_writeback+5,f,c
 33993  007978  222A               	addwfc	??_fatfs_fat_writeback+6,f,c
 33994  00797A  222B               	addwfc	??_fatfs_fat_writeback+7,f,c
 33995  00797C  5024               	movf	??_fatfs_fat_writeback,w,c
 33996  00797E  2428               	addwf	??_fatfs_fat_writeback+4,w,c
 33997  007980  6E30               	movwf	fatfs_fat_writeback@offset,c
 33998  007982  5025               	movf	??_fatfs_fat_writeback+1,w,c
 33999  007984  2029               	addwfc	??_fatfs_fat_writeback+5,w,c
 34000  007986  6E31               	movwf	fatfs_fat_writeback@offset+1,c
 34001  007988  5026               	movf	??_fatfs_fat_writeback+2,w,c
 34002  00798A  202A               	addwfc	??_fatfs_fat_writeback+6,w,c
 34003  00798C  6E32               	movwf	fatfs_fat_writeback@offset+2,c
 34004  00798E  5027               	movf	??_fatfs_fat_writeback+3,w,c
 34005  007990  202B               	addwfc	??_fatfs_fat_writeback+7,w,c
 34006  007992  6E33               	movwf	fatfs_fat_writeback@offset+3,c
 34007                           
 34008                           ;fat_table.c: 96: if ((offset + 1) <= fs->fat_sectors)
 34009  007994  2830               	incf	fatfs_fat_writeback@offset,w,c
 34010  007996  6E24               	movwf	??_fatfs_fat_writeback& (0+255),c
 34011  007998  0E00               	movlw	0
 34012  00799A  2031               	addwfc	fatfs_fat_writeback@offset+1,w,c
 34013  00799C  6E25               	movwf	(??_fatfs_fat_writeback+1)& (0+255),c
 34014  00799E  0E00               	movlw	0
 34015  0079A0  2032               	addwfc	fatfs_fat_writeback@offset+2,w,c
 34016  0079A2  6E26               	movwf	(??_fatfs_fat_writeback+2)& (0+255),c
 34017  0079A4  0E00               	movlw	0
 34018  0079A6  2033               	addwfc	fatfs_fat_writeback@offset+3,w,c
 34019  0079A8  6E27               	movwf	(??_fatfs_fat_writeback+3)& (0+255),c
 34020  0079AA  EE20 F01B          	lfsr	2,27
 34021  0079AE  5020               	movf	fatfs_fat_writeback@fs,w,c
 34022  0079B0  26D9               	addwf	fsr2l,f,c
 34023  0079B2  5021               	movf	fatfs_fat_writeback@fs+1,w,c
 34024  0079B4  22DA               	addwfc	fsr2h,f,c
 34025  0079B6  CFDE F028          	movff	postinc2,??_fatfs_fat_writeback+4
 34026  0079BA  CFDE F029          	movff	postinc2,??_fatfs_fat_writeback+5
 34027  0079BE  CFDE F02A          	movff	postinc2,??_fatfs_fat_writeback+6
 34028  0079C2  CFDE F02B          	movff	postinc2,??_fatfs_fat_writeback+7
 34029  0079C6  5024               	movf	??_fatfs_fat_writeback,w,c
 34030  0079C8  5C28               	subwf	??_fatfs_fat_writeback+4,w,c
 34031  0079CA  5025               	movf	??_fatfs_fat_writeback+1,w,c
 34032  0079CC  5829               	subwfb	??_fatfs_fat_writeback+5,w,c
 34033  0079CE  5026               	movf	??_fatfs_fat_writeback+2,w,c
 34034  0079D0  582A               	subwfb	??_fatfs_fat_writeback+6,w,c
 34035  0079D2  5027               	movf	??_fatfs_fat_writeback+3,w,c
 34036  0079D4  582B               	subwfb	??_fatfs_fat_writeback+7,w,c
 34037  0079D6  E306               	bnc	l8667
 34038                           
 34039                           ;fat_table.c: 97: sectors = 1;
 34040  0079D8  0E01               	movlw	1
 34041  0079DA  6E2C               	movwf	fatfs_fat_writeback@sectors,c
 34042  0079DC  0E00               	movlw	0
 34043  0079DE  6A2D               	clrf	fatfs_fat_writeback@sectors+1,c
 34044  0079E0  6A2E               	clrf	fatfs_fat_writeback@sectors+2,c
 34045  0079E2  D02A               	goto	L121
 34046  0079E4                     l8667:
 34047                           
 34048                           ;fat_table.c: 98: else
 34049                           ;fat_table.c: 99: sectors = fs->fat_sectors - offset;
 34050  0079E4  EE20 F01B          	lfsr	2,27
 34051  0079E8  5020               	movf	fatfs_fat_writeback@fs,w,c
 34052  0079EA  26D9               	addwf	fsr2l,f,c
 34053  0079EC  5021               	movf	fatfs_fat_writeback@fs+1,w,c
 34054  0079EE  22DA               	addwfc	fsr2h,f,c
 34055  0079F0  CFDE F024          	movff	postinc2,??_fatfs_fat_writeback
 34056  0079F4  CFDE F025          	movff	postinc2,??_fatfs_fat_writeback+1
 34057  0079F8  CFDE F026          	movff	postinc2,??_fatfs_fat_writeback+2
 34058  0079FC  CFDE F027          	movff	postinc2,??_fatfs_fat_writeback+3
 34059  007A00  C030  F028         	movff	fatfs_fat_writeback@offset,??_fatfs_fat_writeback+4
 34060  007A04  C031  F029         	movff	fatfs_fat_writeback@offset+1,??_fatfs_fat_writeback+5
 34061  007A08  C032  F02A         	movff	fatfs_fat_writeback@offset+2,??_fatfs_fat_writeback+6
 34062  007A0C  C033  F02B         	movff	fatfs_fat_writeback@offset+3,??_fatfs_fat_writeback+7
 34063  007A10  1E28               	comf	??_fatfs_fat_writeback+4,f,c
 34064  007A12  1E29               	comf	??_fatfs_fat_writeback+5,f,c
 34065  007A14  1E2A               	comf	??_fatfs_fat_writeback+6,f,c
 34066  007A16  1E2B               	comf	??_fatfs_fat_writeback+7,f,c
 34067  007A18  2A28               	incf	??_fatfs_fat_writeback+4,f,c
 34068  007A1A  0E00               	movlw	0
 34069  007A1C  2229               	addwfc	??_fatfs_fat_writeback+5,f,c
 34070  007A1E  222A               	addwfc	??_fatfs_fat_writeback+6,f,c
 34071  007A20  222B               	addwfc	??_fatfs_fat_writeback+7,f,c
 34072  007A22  5024               	movf	??_fatfs_fat_writeback,w,c
 34073  007A24  2428               	addwf	??_fatfs_fat_writeback+4,w,c
 34074  007A26  6E2C               	movwf	fatfs_fat_writeback@sectors,c
 34075  007A28  5025               	movf	??_fatfs_fat_writeback+1,w,c
 34076  007A2A  2029               	addwfc	??_fatfs_fat_writeback+5,w,c
 34077  007A2C  6E2D               	movwf	fatfs_fat_writeback@sectors+1,c
 34078  007A2E  5026               	movf	??_fatfs_fat_writeback+2,w,c
 34079  007A30  202A               	addwfc	??_fatfs_fat_writeback+6,w,c
 34080  007A32  6E2E               	movwf	fatfs_fat_writeback@sectors+2,c
 34081  007A34  5027               	movf	??_fatfs_fat_writeback+3,w,c
 34082  007A36  202B               	addwfc	??_fatfs_fat_writeback+7,w,c
 34083  007A38                     L121:
 34084  007A38  6E2F               	movwf	fatfs_fat_writeback@sectors+3,c
 34085                           
 34086                           ;fat_table.c: 101: if (!fs->disk_io.write_media(pcur->address, pcur->sector, sectors))
 34087  007A3A  EE22 F000          	lfsr	2,512
 34088  007A3E  5022               	movf	fatfs_fat_writeback@pcur,w,c
 34089  007A40  26D9               	addwf	fsr2l,f,c
 34090  007A42  5023               	movf	fatfs_fat_writeback@pcur+1,w,c
 34091  007A44  22DA               	addwfc	fsr2h,f,c
 34092  007A46  CFDE F009          	movff	postinc2,media_write@sector
 34093  007A4A  CFDE F00A          	movff	postinc2,media_write@sector+1
 34094  007A4E  CFDE F00B          	movff	postinc2,media_write@sector+2
 34095  007A52  CFDE F00C          	movff	postinc2,media_write@sector+3
 34096  007A56  0E20               	movlw	32
 34097  007A58  6E0F               	movwf	media_write@buffer+2,c
 34098  007A5A  C023  F00E         	movff	fatfs_fat_writeback@pcur+1,media_write@buffer+1
 34099  007A5E  C022  F00D         	movff	fatfs_fat_writeback@pcur,media_write@buffer
 34100  007A62  C02C  F010         	movff	fatfs_fat_writeback@sectors,media_write@sector_count
 34101  007A66  C02D  F011         	movff	fatfs_fat_writeback@sectors+1,media_write@sector_count+1
 34102  007A6A  C02E  F012         	movff	fatfs_fat_writeback@sectors+2,media_write@sector_count+2
 34103  007A6E  C02F  F013         	movff	fatfs_fat_writeback@sectors+3,media_write@sector_count+3
 34104  007A72  EE20 F02B          	lfsr	2,43
 34105  007A76  5020               	movf	fatfs_fat_writeback@fs,w,c
 34106  007A78  26D9               	addwf	fsr2l,f,c
 34107  007A7A  5021               	movf	fatfs_fat_writeback@fs+1,w,c
 34108  007A7C  22DA               	addwfc	fsr2h,f,c
 34109  007A7E  CFDE F024          	movff	postinc2,??_fatfs_fat_writeback
 34110  007A82  CFDD F025          	movff	postdec2,??_fatfs_fat_writeback+1
 34111  007A86  D801               	call	u8948
 34112  007A88  D009               	goto	u8949
 34113  007A8A                     u8948:
 34114  007A8A  0005               	push	
 34115  007A8C  6EFA               	movwf	pclath,c
 34116  007A8E  5024               	movf	??_fatfs_fat_writeback,w,c
 34117  007A90  6EFD               	movwf	tosl,c
 34118  007A92  5025               	movf	??_fatfs_fat_writeback+1,w,c
 34119  007A94  6EFE               	movwf	tosh,c
 34120  007A96  6AFF               	clrf	tosu,c
 34121  007A98  50FA               	movf	pclath,w,c
 34122  007A9A  0012               	return		;indir
 34123  007A9C                     u8949:
 34124  007A9C  500A               	movf	?_media_write+1,w,c
 34125  007A9E  1009               	iorwf	?_media_write,w,c
 34126  007AA0  E00D               	bz	l8683
 34127  007AA2                     l8675:
 34128                           
 34129                           ;fat_table.c: 103: }
 34130                           ;fat_table.c: 105: pcur->dirty = 0;
 34131  007AA2  EE22 F004          	lfsr	2,516
 34132  007AA6  5022               	movf	fatfs_fat_writeback@pcur,w,c
 34133  007AA8  26D9               	addwf	fsr2l,f,c
 34134  007AAA  5023               	movf	fatfs_fat_writeback@pcur+1,w,c
 34135  007AAC  22DA               	addwfc	fsr2h,f,c
 34136  007AAE  0E00               	movlw	0
 34137  007AB0  6EDE               	movwf	postinc2,c
 34138  007AB2  6EDD               	movwf	postdec2,c
 34139  007AB4                     l8677:
 34140                           
 34141                           ;fat_table.c: 106: }
 34142                           ;fat_table.c: 108: return 1;
 34143  007AB4  0E00               	movlw	0
 34144  007AB6  6E21               	movwf	?_fatfs_fat_writeback+1,c
 34145  007AB8  0E01               	movlw	1
 34146  007ABA  D002               	goto	L123
 34147  007ABC                     l8683:
 34148                           
 34149                           ;fat_table.c: 110: else
 34150                           ;fat_table.c: 111: return 0;
 34151  007ABC  0E00               	movlw	0
 34152  007ABE  6E21               	movwf	?_fatfs_fat_writeback+1,c
 34153  007AC0                     L123:
 34154  007AC0  6E20               	movwf	?_fatfs_fat_writeback,c
 34155  007AC2  0012               	return	
 34156  007AC4                     __end_of_fatfs_fat_writeback:
 34157                           	opt stack 0
 34158                           tosu	equ	0xFFF
 34159                           tosh	equ	0xFFE
 34160                           tosl	equ	0xFFD
 34161                           pclath	equ	0xFFA
 34162                           tblptru	equ	0xFF8
 34163                           tblptrh	equ	0xFF7
 34164                           tblptrl	equ	0xFF6
 34165                           tablat	equ	0xFF5
 34166                           prodh	equ	0xFF4
 34167                           prodl	equ	0xFF3
 34168                           indf0	equ	0xFEF
 34169                           postinc0	equ	0xFEE
 34170                           fsr0h	equ	0xFEA
 34171                           fsr0l	equ	0xFE9
 34172                           wreg	equ	0xFE8
 34173                           indf1	equ	0xFE7
 34174                           postinc1	equ	0xFE6
 34175                           postdec1	equ	0xFE5
 34176                           fsr1h	equ	0xFE2
 34177                           fsr1l	equ	0xFE1
 34178                           indf2	equ	0xFDF
 34179                           postinc2	equ	0xFDE
 34180                           postdec2	equ	0xFDD
 34181                           fsr2h	equ	0xFDA
 34182                           fsr2l	equ	0xFD9
 34183                           status	equ	0xFD8
 34184                           
 34185 ;; *************** function _media_write *****************
 34186 ;; Defined at:
 34187 ;;		line 215 in file "main.c"
 34188 ;; Parameters:    Size  Location     Type
 34189 ;;  sector          4    8[COMRAM] unsigned long 
 34190 ;;  buffer          3   12[COMRAM] PTR unsigned char 
 34191 ;;		 -> _fs.currentsector(524), w(1), str_0(26), data(1), 
 34192 ;;		 -> fatfs_add_file_entry@shortEntry(32), fl_fputc@data(1), ROM(65535), _open_file@sfEntry(32), 
 34193 ;;		 -> _fs(1095), RAM(3967), NULL(0), 
 34194 ;;  sector_count    4   15[COMRAM] unsigned long 
 34195 ;; Auto vars:     Size  Location     Type
 34196 ;;  i               4   27[COMRAM] unsigned long 
 34197 ;;  Start_Addr      4   23[COMRAM] unsigned long 
 34198 ;;  End_Addr        4    0        unsigned long 
 34199 ;; Return value:  Size  Location     Type
 34200 ;;                  2    8[COMRAM] int 
 34201 ;; Registers used:
 34202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34203 ;; Tracked objects:
 34204 ;;		On entry : 0/0
 34205 ;;		On exit  : 0/0
 34206 ;;		Unchanged: 0/0
 34207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34208 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34209 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34210 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34211 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34212 ;;Total ram usage:       23 bytes
 34213 ;; Hardware stack levels used:    1
 34214 ;; Hardware stack levels required when called:    2
 34215 ;; This function calls:
 34216 ;;		_Command
 34217 ;;		_ReadSPI_
 34218 ;;		_WriteSPI_
 34219 ;; This function is called by:
 34220 ;;		_main
 34221 ;;		_fatfs_fat_writeback
 34222 ;;		_fatfs_write_sector
 34223 ;;		_fatfs_set_fs_info_next_free_cluster
 34224 ;;		_fatfs_sector_write
 34225 ;;		_fatfs_erase_sectors
 34226 ;;		_fatfs_create_boot_sector
 34227 ;;		_fatfs_create_fsinfo_sector
 34228 ;;		_fatfs_erase_fat
 34229 ;;		_fatfs_add_file_entry
 34230 ;;		_fatfs_update_file_length
 34231 ;;		_fatfs_mark_file_deleted
 34232 ;; This function uses a non-reentrant model
 34233 ;;
 34234                           
 34235                           	psect	text100
 34236  0065A4                     __ptext100:
 34237                           	opt stack 0
 34238  0065A4                     _media_write:
 34239                           	opt stack 25
 34240                           
 34241                           ;main.c: 217: unsigned long i, Start_Addr, End_Addr;
 34242                           ;main.c: 218: Start_Addr = sector * 512;
 34243                           
 34244                           ;incstack = 0
 34245  0065A4  C009  F014         	movff	media_write@sector,??_media_write
 34246  0065A8  C00A  F015         	movff	media_write@sector+1,??_media_write+1
 34247  0065AC  C00B  F016         	movff	media_write@sector+2,??_media_write+2
 34248  0065B0  C00C  F017         	movff	media_write@sector+3,??_media_write+3
 34249  0065B4  0E09               	movlw	9
 34250  0065B6                     u8815:
 34251  0065B6  90D8               	bcf	status,0,c
 34252  0065B8  3614               	rlcf	??_media_write,f,c
 34253  0065BA  3615               	rlcf	??_media_write+1,f,c
 34254  0065BC  3616               	rlcf	??_media_write+2,f,c
 34255  0065BE  3617               	rlcf	??_media_write+3,f,c
 34256  0065C0  2EE8               	decfsz	wreg,f,c
 34257  0065C2  D7F9               	goto	u8815
 34258  0065C4  C014  F018         	movff	??_media_write,media_write@Start_Addr
 34259  0065C8  C015  F019         	movff	??_media_write+1,media_write@Start_Addr+1
 34260  0065CC  C016  F01A         	movff	??_media_write+2,media_write@Start_Addr+2
 34261  0065D0  C017  F01B         	movff	??_media_write+3,media_write@Start_Addr+3
 34262                           
 34263                           ;main.c: 219: Command(25, Start_Addr, 0xff);
 34264  0065D4  C018  F003         	movff	media_write@Start_Addr,Command@arg
 34265  0065D8  C019  F004         	movff	media_write@Start_Addr+1,Command@arg+1
 34266  0065DC  C01A  F005         	movff	media_write@Start_Addr+2,Command@arg+2
 34267  0065E0  C01B  F006         	movff	media_write@Start_Addr+3,Command@arg+3
 34268  0065E4  6807               	setf	Command@CRCbits,c
 34269  0065E6  0E19               	movlw	25
 34270  0065E8  EC90  F021         	call	_Command
 34271                           
 34272                           ;main.c: 220: while (response != 0)
 34273  0065EC  D002               	goto	l8611
 34274  0065EE                     l8609:
 34275                           
 34276                           ;main.c: 221: {
 34277                           ;main.c: 222: ReadSPI_();
 34278  0065EE  EC4F  F01F         	call	_ReadSPI_	;wreg free
 34279  0065F2                     l8611:
 34280  0065F2  0101               	movlb	1	; () banked
 34281  0065F4  67AB               	tstfsz	_response& (0+255),b
 34282  0065F6  D7FB               	goto	l8609
 34283                           
 34284                           ; BSR set to: 1
 34285                           ;main.c: 223: }
 34286                           ;main.c: 224: WriteSPI_(0xff);
 34287                           
 34288                           ; BSR set to: 1
 34289  0065F8  0EFF               	movlw	255
 34290  0065FA  EC81  F01F         	call	_WriteSPI_
 34291                           
 34292                           ;main.c: 225: WriteSPI_(0xff);
 34293  0065FE  0EFF               	movlw	255
 34294  006600  EC81  F01F         	call	_WriteSPI_
 34295                           
 34296                           ;main.c: 226: WriteSPI_(0b11111100);
 34297  006604  0EFC               	movlw	252
 34298  006606  EC81  F01F         	call	_WriteSPI_
 34299                           
 34300                           ;main.c: 227: for (i=0;i<sector_count;i++)
 34301  00660A  6A1C               	clrf	media_write@i,c
 34302  00660C  6A1D               	clrf	media_write@i+1,c
 34303  00660E  6A1E               	clrf	media_write@i+2,c
 34304  006610  6A1F               	clrf	media_write@i+3,c
 34305  006612  D02E               	goto	l1613
 34306  006614                     l8617:
 34307                           
 34308                           ;main.c: 228: {
 34309                           ;main.c: 229: for ( n = 0; n <512; n++)
 34310  006614  0101               	movlb	1	; () banked
 34311  006616  6BA0               	clrf	(_n+1)& (0+255),b
 34312  006618  6B9F               	clrf	_n& (0+255),b
 34313  00661A                     
 34314                           ; BSR set to: 1
 34315  00661A  0101               	movlb	1	; () banked
 34316  00661C  51A0               	movf	(_n+1)& (0+255),w,b
 34317  00661E  0A80               	xorlw	128
 34318  006620  0F7E               	addlw	-130
 34319  006622  0E00               	movlw	0
 34320  006624  B4D8               	btfsc	status,2,c
 34321  006626  5D9F               	subwf	_n& (0+255),w,b
 34322  006628  E21A               	bc	l8631
 34323                           
 34324                           ; BSR set to: 1
 34325                           ;main.c: 230: {
 34326                           ;main.c: 231: WriteSPI_(*buffer);
 34327                           
 34328                           ; BSR set to: 1
 34329                           
 34330                           ; BSR set to: 1
 34331  00662A  C00D  FFF6         	movff	media_write@buffer,tblptrl
 34332  00662E  C00E  FFF7         	movff	media_write@buffer+1,tblptrh
 34333  006632  C00F  FFF8         	movff	media_write@buffer+2,tblptru
 34334  006636  BAF8               	btfsc	tblptru,5,c
 34335  006638  D003               	bra	u8847
 34336  00663A  0008               	tblrd		*
 34337  00663C  50F5               	movf	tablat,w,c
 34338  00663E  D005               	bra	u8840
 34339  006640                     u8847:
 34340  006640  CFF6 FFE9          	movff	tblptrl,fsr0l
 34341  006644  CFF7 FFEA          	movff	tblptrh,fsr0h
 34342  006648  50EF               	movf	indf0,w,c
 34343  00664A                     u8840:
 34344  00664A  EC81  F01F         	call	_WriteSPI_
 34345                           
 34346                           ;main.c: 232: buffer++;
 34347  00664E  2A0D               	incf	media_write@buffer,f,c
 34348  006650  0E00               	movlw	0
 34349  006652  220E               	addwfc	media_write@buffer+1,f,c
 34350  006654  220F               	addwfc	media_write@buffer+2,f,c
 34351  006656  0101               	movlb	1	; () banked
 34352  006658  4B9F               	infsnz	_n& (0+255),f,b
 34353  00665A  2BA0               	incf	(_n+1)& (0+255),f,b
 34354  00665C  D7DE               	goto	L124
 34355  00665E                     l8631:
 34356                           
 34357                           ; BSR set to: 1
 34358                           ;main.c: 233: }
 34359                           ;main.c: 234: sector ++;
 34360  00665E  2A09               	incf	media_write@sector,f,c
 34361  006660  0E00               	movlw	0
 34362  006662  220A               	addwfc	media_write@sector+1,f,c
 34363  006664  220B               	addwfc	media_write@sector+2,f,c
 34364  006666  220C               	addwfc	media_write@sector+3,f,c
 34365  006668  2A1C               	incf	media_write@i,f,c
 34366  00666A  221D               	addwfc	media_write@i+1,f,c
 34367  00666C  221E               	addwfc	media_write@i+2,f,c
 34368  00666E  221F               	addwfc	media_write@i+3,f,c
 34369  006670                     l1613:
 34370  006670  5010               	movf	media_write@sector_count,w,c
 34371  006672  5C1C               	subwf	media_write@i,w,c
 34372  006674  5011               	movf	media_write@sector_count+1,w,c
 34373  006676  581D               	subwfb	media_write@i+1,w,c
 34374  006678  5012               	movf	media_write@sector_count+2,w,c
 34375  00667A  581E               	subwfb	media_write@i+2,w,c
 34376  00667C  5013               	movf	media_write@sector_count+3,w,c
 34377  00667E  581F               	subwfb	media_write@i+3,w,c
 34378  006680  E3C9               	bnc	l8617
 34379                           
 34380                           ;main.c: 235: }
 34381                           ;main.c: 237: WriteSPI_(0xff);
 34382  006682  0EFF               	movlw	255
 34383  006684  EC81  F01F         	call	_WriteSPI_
 34384                           
 34385                           ;main.c: 238: WriteSPI_(0xff);
 34386  006688  0EFF               	movlw	255
 34387  00668A  EC81  F01F         	call	_WriteSPI_
 34388                           
 34389                           ;main.c: 239: ReadSPI_();
 34390  00668E  EC4F  F01F         	call	_ReadSPI_	;wreg free
 34391                           
 34392                           ;main.c: 240: while ((response & 0b00011111) != 0x05)
 34393  006692  D002               	goto	l8637
 34394  006694                     l8635:
 34395                           
 34396                           ;main.c: 241: {
 34397                           ;main.c: 242: ReadSPI_();
 34398  006694  EC4F  F01F         	call	_ReadSPI_	;wreg free
 34399  006698                     l8637:
 34400  006698  C1AB  F014         	movff	_response,??_media_write
 34401  00669C  0E1F               	movlw	31
 34402  00669E  1614               	andwf	??_media_write,f,c
 34403  0066A0  5014               	movf	??_media_write,w,c
 34404  0066A2  0A05               	xorlw	5
 34405  0066A4  E003               	bz	l8641
 34406  0066A6  D7F6               	goto	l8635
 34407  0066A8                     l8639:
 34408                           
 34409                           ;main.c: 245: {
 34410                           ;main.c: 246: ReadSPI_();
 34411  0066A8  EC4F  F01F         	call	_ReadSPI_	;wreg free
 34412  0066AC                     l8641:
 34413  0066AC  0101               	movlb	1	; () banked
 34414  0066AE  29AB               	incf	_response& (0+255),w,b
 34415  0066B0  E1FB               	bnz	l8639
 34416                           
 34417                           ; BSR set to: 1
 34418                           ;main.c: 247: }
 34419                           ;main.c: 248: WriteSPI_(0xff);
 34420                           
 34421                           ; BSR set to: 1
 34422  0066B2  0EFF               	movlw	255
 34423  0066B4  EC81  F01F         	call	_WriteSPI_
 34424                           
 34425                           ;main.c: 249: WriteSPI_(0xff);
 34426  0066B8  0EFF               	movlw	255
 34427  0066BA  EC81  F01F         	call	_WriteSPI_
 34428                           
 34429                           ;main.c: 250: WriteSPI_(0b11111101);
 34430  0066BE  0EFD               	movlw	253
 34431  0066C0  EC81  F01F         	call	_WriteSPI_
 34432                           
 34433                           ;main.c: 251: ReadSPI_();
 34434  0066C4  EC4F  F01F         	call	_ReadSPI_	;wreg free
 34435                           
 34436                           ;main.c: 252: ReadSPI_();
 34437  0066C8  EC4F  F01F         	call	_ReadSPI_	;wreg free
 34438                           
 34439                           ;main.c: 253: while (response != 0xff)
 34440  0066CC  D002               	goto	l8647
 34441  0066CE                     l8645:
 34442                           
 34443                           ;main.c: 254: {
 34444                           ;main.c: 255: ReadSPI_();
 34445  0066CE  EC4F  F01F         	call	_ReadSPI_	;wreg free
 34446  0066D2                     l8647:
 34447  0066D2  0101               	movlb	1	; () banked
 34448  0066D4  29AB               	incf	_response& (0+255),w,b
 34449  0066D6  E1FB               	bnz	l8645
 34450                           
 34451                           ; BSR set to: 1
 34452                           ;main.c: 256: }
 34453                           ;main.c: 257: return 1;
 34454                           
 34455                           ; BSR set to: 1
 34456  0066D8  0E00               	movlw	0
 34457  0066DA  6E0A               	movwf	?_media_write+1,c
 34458  0066DC  0E01               	movlw	1
 34459  0066DE  6E09               	movwf	?_media_write,c
 34460                           
 34461                           ; BSR set to: 1
 34462                           
 34463                           ; BSR set to: 1
 34464  0066E0  0C01               	retlw	1
 34465  0066E2                     __end_of_media_write:
 34466                           	opt stack 0
 34467                           tosu	equ	0xFFF
 34468                           tosh	equ	0xFFE
 34469                           tosl	equ	0xFFD
 34470                           pclath	equ	0xFFA
 34471                           tblptru	equ	0xFF8
 34472                           tblptrh	equ	0xFF7
 34473                           tblptrl	equ	0xFF6
 34474                           tablat	equ	0xFF5
 34475                           prodh	equ	0xFF4
 34476                           prodl	equ	0xFF3
 34477                           indf0	equ	0xFEF
 34478                           postinc0	equ	0xFEE
 34479                           fsr0h	equ	0xFEA
 34480                           fsr0l	equ	0xFE9
 34481                           wreg	equ	0xFE8
 34482                           indf1	equ	0xFE7
 34483                           postinc1	equ	0xFE6
 34484                           postdec1	equ	0xFE5
 34485                           fsr1h	equ	0xFE2
 34486                           fsr1l	equ	0xFE1
 34487                           indf2	equ	0xFDF
 34488                           postinc2	equ	0xFDE
 34489                           postdec2	equ	0xFDD
 34490                           fsr2h	equ	0xFDA
 34491                           fsr2l	equ	0xFD9
 34492                           status	equ	0xFD8
 34493                           
 34494 ;; *************** function _Command *****************
 34495 ;; Defined at:
 34496 ;;		line 92 in file "main.c"
 34497 ;; Parameters:    Size  Location     Type
 34498 ;;  cmd             1    wreg     unsigned char 
 34499 ;;  arg             4    2[COMRAM] unsigned long 
 34500 ;;  CRCbits         1    6[COMRAM] unsigned char 
 34501 ;; Auto vars:     Size  Location     Type
 34502 ;;  cmd             1    7[COMRAM] unsigned char 
 34503 ;; Return value:  Size  Location     Type
 34504 ;;		None               void
 34505 ;; Registers used:
 34506 ;;		wreg, status,2, status,0, cstack
 34507 ;; Tracked objects:
 34508 ;;		On entry : 0/0
 34509 ;;		On exit  : 0/0
 34510 ;;		Unchanged: 0/0
 34511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34512 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34515 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34516 ;;Total ram usage:        6 bytes
 34517 ;; Hardware stack levels used:    1
 34518 ;; Hardware stack levels required when called:    1
 34519 ;; This function calls:
 34520 ;;		_ReadBUF
 34521 ;;		_ReadSPI_
 34522 ;;		_WriteSPI_
 34523 ;; This function is called by:
 34524 ;;		_SD_init
 34525 ;;		_media_read
 34526 ;;		_media_write
 34527 ;; This function uses a non-reentrant model
 34528 ;;
 34529                           
 34530                           	psect	text101
 34531  004320                     __ptext101:
 34532                           	opt stack 0
 34533  004320                     _Command:
 34534                           	opt stack 25
 34535                           
 34536                           ; BSR set to: 1
 34537                           ;incstack = 0
 34538                           ;Command@cmd stored from wreg
 34539  004320  6E08               	movwf	Command@cmd,c
 34540                           
 34541                           ;main.c: 94: WriteSPI_(0xff);
 34542  004322  0EFF               	movlw	255
 34543  004324  EC81  F01F         	call	_WriteSPI_
 34544                           
 34545                           ;main.c: 95: ReadBUF();
 34546  004328  EC30  F01F         	call	_ReadBUF	;wreg free
 34547                           
 34548                           ;main.c: 96: WriteSPI_(0b01000000 | cmd);
 34549  00432C  5008               	movf	Command@cmd,w,c
 34550  00432E  0940               	iorlw	64
 34551  004330  EC81  F01F         	call	_WriteSPI_
 34552                           
 34553                           ;main.c: 97: ReadBUF();
 34554  004334  EC30  F01F         	call	_ReadBUF	;wreg free
 34555                           
 34556                           ;main.c: 98: WriteSPI_((unsigned char) (arg >> 24));
 34557  004338  5006               	movf	Command@arg+3,w,c
 34558  00433A  EC81  F01F         	call	_WriteSPI_
 34559                           
 34560                           ;main.c: 99: ReadBUF();
 34561  00433E  EC30  F01F         	call	_ReadBUF	;wreg free
 34562                           
 34563                           ;main.c: 100: WriteSPI_((unsigned char) (arg >> 16));
 34564  004342  5005               	movf	Command@arg+2,w,c
 34565  004344  EC81  F01F         	call	_WriteSPI_
 34566                           
 34567                           ;main.c: 101: ReadBUF();
 34568  004348  EC30  F01F         	call	_ReadBUF	;wreg free
 34569                           
 34570                           ;main.c: 102: WriteSPI_((unsigned char) (arg >> 8));
 34571  00434C  5004               	movf	Command@arg+1,w,c
 34572  00434E  EC81  F01F         	call	_WriteSPI_
 34573                           
 34574                           ;main.c: 103: ReadBUF();
 34575  004352  EC30  F01F         	call	_ReadBUF	;wreg free
 34576                           
 34577                           ;main.c: 104: WriteSPI_((unsigned char) arg);
 34578  004356  5003               	movf	Command@arg,w,c
 34579  004358  EC81  F01F         	call	_WriteSPI_
 34580                           
 34581                           ;main.c: 105: ReadBUF();
 34582  00435C  EC30  F01F         	call	_ReadBUF	;wreg free
 34583                           
 34584                           ;main.c: 106: WriteSPI_(CRCbits);
 34585  004360  5007               	movf	Command@CRCbits,w,c
 34586  004362  EC81  F01F         	call	_WriteSPI_
 34587                           
 34588                           ;main.c: 107: ReadSPI_();
 34589  004366  EF4F  F01F         	goto	_ReadSPI_	;wreg free
 34590  00436A                     __end_of_Command:
 34591                           	opt stack 0
 34592                           tosu	equ	0xFFF
 34593                           tosh	equ	0xFFE
 34594                           tosl	equ	0xFFD
 34595                           pclath	equ	0xFFA
 34596                           tblptru	equ	0xFF8
 34597                           tblptrh	equ	0xFF7
 34598                           tblptrl	equ	0xFF6
 34599                           tablat	equ	0xFF5
 34600                           prodh	equ	0xFF4
 34601                           prodl	equ	0xFF3
 34602                           indf0	equ	0xFEF
 34603                           postinc0	equ	0xFEE
 34604                           fsr0h	equ	0xFEA
 34605                           fsr0l	equ	0xFE9
 34606                           wreg	equ	0xFE8
 34607                           indf1	equ	0xFE7
 34608                           postinc1	equ	0xFE6
 34609                           postdec1	equ	0xFE5
 34610                           fsr1h	equ	0xFE2
 34611                           fsr1l	equ	0xFE1
 34612                           indf2	equ	0xFDF
 34613                           postinc2	equ	0xFDE
 34614                           postdec2	equ	0xFDD
 34615                           fsr2h	equ	0xFDA
 34616                           fsr2l	equ	0xFD9
 34617                           status	equ	0xFD8
 34618                           
 34619 ;; *************** function _WriteSPI_ *****************
 34620 ;; Defined at:
 34621 ;;		line 68 in file "spi_1.c"
 34622 ;; Parameters:    Size  Location     Type
 34623 ;;  data_out        1    wreg     unsigned char 
 34624 ;; Auto vars:     Size  Location     Type
 34625 ;;  data_out        1    1[COMRAM] unsigned char 
 34626 ;;  TempVar         1    0[COMRAM] unsigned char 
 34627 ;; Return value:  Size  Location     Type
 34628 ;;                  1    wreg      char 
 34629 ;; Registers used:
 34630 ;;		wreg
 34631 ;; Tracked objects:
 34632 ;;		On entry : 0/0
 34633 ;;		On exit  : 0/0
 34634 ;;		Unchanged: 0/0
 34635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34640 ;;Total ram usage:        2 bytes
 34641 ;; Hardware stack levels used:    1
 34642 ;; This function calls:
 34643 ;;		Nothing
 34644 ;; This function is called by:
 34645 ;;		_Command
 34646 ;;		_SD_init
 34647 ;;		_media_read
 34648 ;;		_media_write
 34649 ;;		_wait_ready
 34650 ;;		_deselect
 34651 ;;		_select
 34652 ;;		_rcvr_datablock
 34653 ;;		_xmit_datablock
 34654 ;;		_send_cmd
 34655 ;;		_disk_initialize
 34656 ;;		_disk_ioctl
 34657 ;; This function uses a non-reentrant model
 34658 ;;
 34659                           
 34660                           	psect	text102
 34661  003F02                     __ptext102:
 34662                           	opt stack 0
 34663  003F02                     _WriteSPI_:
 34664                           	opt stack 26
 34665                           
 34666                           ;incstack = 0
 34667                           ;WriteSPI_@data_out stored from wreg
 34668  003F02  6E02               	movwf	WriteSPI_@data_out,c
 34669                           
 34670                           ;spi_1.c: 70: unsigned char TempVar;
 34671                           ;spi_1.c: 71: TempVar = SSPBUF;
 34672  003F04  CFC9 F001          	movff	4041,WriteSPI_@TempVar	;volatile
 34673                           
 34674                           ;spi_1.c: 72: PIR1bits.SSPIF = 0;
 34675  003F08  969E               	bcf	3998,3,c	;volatile
 34676                           
 34677                           ;spi_1.c: 73: SSPCON1bits.WCOL = 0;
 34678  003F0A  9EC6               	bcf	4038,7,c	;volatile
 34679                           
 34680                           ;spi_1.c: 74: SSPBUF = data_out;
 34681  003F0C  C002  FFC9         	movff	WriteSPI_@data_out,4041	;volatile
 34682                           
 34683                           ;spi_1.c: 75: if ( SSPCON1 & 0x80 )
 34684  003F10  AEC6               	btfss	4038,7,c	;volatile
 34685  003F12  D002               	goto	l2113
 34686                           
 34687                           ;spi_1.c: 76: return ( -1 );
 34688  003F14  0EFF               	movlw	255
 34689  003F16  D003               	goto	l2111
 34690  003F18                     l2113:
 34691  003F18  A69E               	btfss	3998,3,c	;volatile
 34692  003F1A  D7FE               	goto	l2113
 34693                           
 34694                           ;spi_1.c: 79: return ( 0 );
 34695  003F1C  0E00               	movlw	0
 34696  003F1E                     l2111:
 34697  003F1E  0012               	return	
 34698  003F20                     __end_of_WriteSPI_:
 34699                           	opt stack 0
 34700                           tosu	equ	0xFFF
 34701                           tosh	equ	0xFFE
 34702                           tosl	equ	0xFFD
 34703                           pclath	equ	0xFFA
 34704                           tblptru	equ	0xFF8
 34705                           tblptrh	equ	0xFF7
 34706                           tblptrl	equ	0xFF6
 34707                           tablat	equ	0xFF5
 34708                           prodh	equ	0xFF4
 34709                           prodl	equ	0xFF3
 34710                           indf0	equ	0xFEF
 34711                           postinc0	equ	0xFEE
 34712                           fsr0h	equ	0xFEA
 34713                           fsr0l	equ	0xFE9
 34714                           wreg	equ	0xFE8
 34715                           indf1	equ	0xFE7
 34716                           postinc1	equ	0xFE6
 34717                           postdec1	equ	0xFE5
 34718                           fsr1h	equ	0xFE2
 34719                           fsr1l	equ	0xFE1
 34720                           indf2	equ	0xFDF
 34721                           postinc2	equ	0xFDE
 34722                           postdec2	equ	0xFDD
 34723                           fsr2h	equ	0xFDA
 34724                           fsr2l	equ	0xFD9
 34725                           status	equ	0xFD8
 34726                           
 34727 ;; *************** function _ReadSPI_ *****************
 34728 ;; Defined at:
 34729 ;;		line 23 in file "spi_1.c"
 34730 ;; Parameters:    Size  Location     Type
 34731 ;;		None
 34732 ;; Auto vars:     Size  Location     Type
 34733 ;;  Temp            1    0[COMRAM] unsigned char 
 34734 ;; Return value:  Size  Location     Type
 34735 ;;                  1    wreg      unsigned char 
 34736 ;; Registers used:
 34737 ;;		wreg
 34738 ;; Tracked objects:
 34739 ;;		On entry : 0/0
 34740 ;;		On exit  : 0/0
 34741 ;;		Unchanged: 0/0
 34742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34747 ;;Total ram usage:        1 bytes
 34748 ;; Hardware stack levels used:    1
 34749 ;; This function calls:
 34750 ;;		Nothing
 34751 ;; This function is called by:
 34752 ;;		_Command
 34753 ;;		_SD_init
 34754 ;;		_media_read
 34755 ;;		_media_write
 34756 ;; This function uses a non-reentrant model
 34757 ;;
 34758                           
 34759                           	psect	text103
 34760  003E9E                     __ptext103:
 34761                           	opt stack 0
 34762  003E9E                     _ReadSPI_:
 34763                           	opt stack 26
 34764                           
 34765                           ;spi_1.c: 25: unsigned char Temp;
 34766                           ;spi_1.c: 26: Temp = SSPBUF;
 34767                           
 34768                           ;incstack = 0
 34769  003E9E  CFC9 F001          	movff	4041,ReadSPI_@Temp	;volatile
 34770                           
 34771                           ;spi_1.c: 27: SSPBUF = 0xFF;
 34772  003EA2  68C9               	setf	4041,c	;volatile
 34773                           
 34774                           ;spi_1.c: 28: PIR1bits.SSPIF = 0;
 34775  003EA4  969E               	bcf	3998,3,c	;volatile
 34776  003EA6                     l2098:
 34777  003EA6  A69E               	btfss	3998,3,c	;volatile
 34778  003EA8  D7FE               	goto	l2098
 34779                           
 34780                           ;spi_1.c: 30: response = SSPBUF;
 34781  003EAA  CFC9 F1AB          	movff	4041,_response	;volatile
 34782                           
 34783                           ;spi_1.c: 31: return ( SSPBUF );
 34784                           ;	Return value of _ReadSPI_ is never used
 34785  003EAE  50C9               	movf	4041,w,c	;volatile
 34786  003EB0  0012               	return	
 34787  003EB2                     __end_of_ReadSPI_:
 34788                           	opt stack 0
 34789                           tosu	equ	0xFFF
 34790                           tosh	equ	0xFFE
 34791                           tosl	equ	0xFFD
 34792                           pclath	equ	0xFFA
 34793                           tblptru	equ	0xFF8
 34794                           tblptrh	equ	0xFF7
 34795                           tblptrl	equ	0xFF6
 34796                           tablat	equ	0xFF5
 34797                           prodh	equ	0xFF4
 34798                           prodl	equ	0xFF3
 34799                           indf0	equ	0xFEF
 34800                           postinc0	equ	0xFEE
 34801                           fsr0h	equ	0xFEA
 34802                           fsr0l	equ	0xFE9
 34803                           wreg	equ	0xFE8
 34804                           indf1	equ	0xFE7
 34805                           postinc1	equ	0xFE6
 34806                           postdec1	equ	0xFE5
 34807                           fsr1h	equ	0xFE2
 34808                           fsr1l	equ	0xFE1
 34809                           indf2	equ	0xFDF
 34810                           postinc2	equ	0xFDE
 34811                           postdec2	equ	0xFDD
 34812                           fsr2h	equ	0xFDA
 34813                           fsr2l	equ	0xFD9
 34814                           status	equ	0xFD8
 34815                           
 34816 ;; *************** function _ReadBUF *****************
 34817 ;; Defined at:
 34818 ;;		line 16 in file "spi_1.c"
 34819 ;; Parameters:    Size  Location     Type
 34820 ;;		None
 34821 ;; Auto vars:     Size  Location     Type
 34822 ;;  u               1    0[COMRAM] unsigned char 
 34823 ;; Return value:  Size  Location     Type
 34824 ;;		None               void
 34825 ;; Registers used:
 34826 ;;		None
 34827 ;; Tracked objects:
 34828 ;;		On entry : 0/0
 34829 ;;		On exit  : 0/0
 34830 ;;		Unchanged: 0/0
 34831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34836 ;;Total ram usage:        1 bytes
 34837 ;; Hardware stack levels used:    1
 34838 ;; This function calls:
 34839 ;;		Nothing
 34840 ;; This function is called by:
 34841 ;;		_Command
 34842 ;; This function uses a non-reentrant model
 34843 ;;
 34844                           
 34845                           	psect	text104
 34846  003E60                     __ptext104:
 34847                           	opt stack 0
 34848  003E60                     _ReadBUF:
 34849                           	opt stack 25
 34850                           
 34851                           ;spi_1.c: 18: unsigned char u;
 34852                           ;spi_1.c: 19: u = SSPBUF;
 34853                           
 34854                           ;incstack = 0
 34855  003E60  CFC9 F001          	movff	4041,ReadBUF@u	;volatile
 34856                           
 34857                           ;spi_1.c: 20: u = SSPBUF;
 34858  003E64  CFC9 F001          	movff	4041,ReadBUF@u	;volatile
 34859  003E68  0012               	return	
 34860  003E6A                     __end_of_ReadBUF:
 34861                           	opt stack 0
 34862                           tosu	equ	0xFFF
 34863                           tosh	equ	0xFFE
 34864                           tosl	equ	0xFFD
 34865                           pclath	equ	0xFFA
 34866                           tblptru	equ	0xFF8
 34867                           tblptrh	equ	0xFF7
 34868                           tblptrl	equ	0xFF6
 34869                           tablat	equ	0xFF5
 34870                           prodh	equ	0xFF4
 34871                           prodl	equ	0xFF3
 34872                           indf0	equ	0xFEF
 34873                           postinc0	equ	0xFEE
 34874                           fsr0h	equ	0xFEA
 34875                           fsr0l	equ	0xFE9
 34876                           wreg	equ	0xFE8
 34877                           indf1	equ	0xFE7
 34878                           postinc1	equ	0xFE6
 34879                           postdec1	equ	0xFE5
 34880                           fsr1h	equ	0xFE2
 34881                           fsr1l	equ	0xFE1
 34882                           indf2	equ	0xFDF
 34883                           postinc2	equ	0xFDE
 34884                           postdec2	equ	0xFDD
 34885                           fsr2h	equ	0xFDA
 34886                           fsr2l	equ	0xFD9
 34887                           status	equ	0xFD8
 34888                           
 34889 ;; *************** function ___lldiv *****************
 34890 ;; Defined at:
 34891 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lldiv.c"
 34892 ;; Parameters:    Size  Location     Type
 34893 ;;  dividend        4    0[COMRAM] unsigned long 
 34894 ;;  divisor         4    4[COMRAM] unsigned long 
 34895 ;; Auto vars:     Size  Location     Type
 34896 ;;  quotient        4    8[COMRAM] unsigned long 
 34897 ;;  counter         1   12[COMRAM] unsigned char 
 34898 ;; Return value:  Size  Location     Type
 34899 ;;                  4    0[COMRAM] unsigned long 
 34900 ;; Registers used:
 34901 ;;		wreg, status,2, status,0
 34902 ;; Tracked objects:
 34903 ;;		On entry : 0/0
 34904 ;;		On exit  : 0/0
 34905 ;;		Unchanged: 0/0
 34906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34907 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34908 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34910 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34911 ;;Total ram usage:       13 bytes
 34912 ;; Hardware stack levels used:    1
 34913 ;; This function calls:
 34914 ;;		Nothing
 34915 ;; This function is called by:
 34916 ;;		_fatfs_init
 34917 ;;		_fatfs_sector_reader
 34918 ;;		__read_sectors
 34919 ;;		__write_sectors
 34920 ;;		_fatfs_create_boot_sector
 34921 ;;		_fatfs_itoa
 34922 ;;		_fatfs_allocate_free_space
 34923 ;; This function uses a non-reentrant model
 34924 ;;
 34925                           
 34926                           	psect	text105
 34927  004D0A                     __ptext105:
 34928                           	opt stack 0
 34929  004D0A                     ___lldiv:
 34930                           	opt stack 26
 34931                           
 34932                           ;incstack = 0
 34933  004D0A  6A09               	clrf	___lldiv@quotient,c
 34934  004D0C  6A0A               	clrf	___lldiv@quotient+1,c
 34935  004D0E  6A0B               	clrf	___lldiv@quotient+2,c
 34936  004D10  6A0C               	clrf	___lldiv@quotient+3,c
 34937  004D12  5008               	movf	___lldiv@divisor+3,w,c
 34938  004D14  1005               	iorwf	___lldiv@divisor,w,c
 34939  004D16  1006               	iorwf	___lldiv@divisor+1,w,c
 34940  004D18  1007               	iorwf	___lldiv@divisor+2,w,c
 34941  004D1A  E029               	bz	l2770
 34942  004D1C  0E01               	movlw	1
 34943  004D1E  6E0D               	movwf	___lldiv@counter,c
 34944  004D20  D006               	goto	l9021
 34945  004D22                     l9019:
 34946  004D22  90D8               	bcf	status,0,c
 34947  004D24  3605               	rlcf	___lldiv@divisor,f,c
 34948  004D26  3606               	rlcf	___lldiv@divisor+1,f,c
 34949  004D28  3607               	rlcf	___lldiv@divisor+2,f,c
 34950  004D2A  3608               	rlcf	___lldiv@divisor+3,f,c
 34951  004D2C  2A0D               	incf	___lldiv@counter,f,c
 34952  004D2E                     l9021:
 34953  004D2E  AE08               	btfss	___lldiv@divisor+3,7,c
 34954  004D30  D7F8               	goto	l9019
 34955  004D32                     l9023:
 34956  004D32  90D8               	bcf	status,0,c
 34957  004D34  3609               	rlcf	___lldiv@quotient,f,c
 34958  004D36  360A               	rlcf	___lldiv@quotient+1,f,c
 34959  004D38  360B               	rlcf	___lldiv@quotient+2,f,c
 34960  004D3A  360C               	rlcf	___lldiv@quotient+3,f,c
 34961  004D3C  5005               	movf	___lldiv@divisor,w,c
 34962  004D3E  5C01               	subwf	___lldiv@dividend,w,c
 34963  004D40  5006               	movf	___lldiv@divisor+1,w,c
 34964  004D42  5802               	subwfb	___lldiv@dividend+1,w,c
 34965  004D44  5007               	movf	___lldiv@divisor+2,w,c
 34966  004D46  5803               	subwfb	___lldiv@dividend+2,w,c
 34967  004D48  5008               	movf	___lldiv@divisor+3,w,c
 34968  004D4A  5804               	subwfb	___lldiv@dividend+3,w,c
 34969  004D4C  E309               	bnc	l9031
 34970  004D4E  5005               	movf	___lldiv@divisor,w,c
 34971  004D50  5E01               	subwf	___lldiv@dividend,f,c
 34972  004D52  5006               	movf	___lldiv@divisor+1,w,c
 34973  004D54  5A02               	subwfb	___lldiv@dividend+1,f,c
 34974  004D56  5007               	movf	___lldiv@divisor+2,w,c
 34975  004D58  5A03               	subwfb	___lldiv@dividend+2,f,c
 34976  004D5A  5008               	movf	___lldiv@divisor+3,w,c
 34977  004D5C  5A04               	subwfb	___lldiv@dividend+3,f,c
 34978  004D5E  8009               	bsf	___lldiv@quotient,0,c
 34979  004D60                     l9031:
 34980  004D60  90D8               	bcf	status,0,c
 34981  004D62  3208               	rrcf	___lldiv@divisor+3,f,c
 34982  004D64  3207               	rrcf	___lldiv@divisor+2,f,c
 34983  004D66  3206               	rrcf	___lldiv@divisor+1,f,c
 34984  004D68  3205               	rrcf	___lldiv@divisor,f,c
 34985  004D6A  2E0D               	decfsz	___lldiv@counter,f,c
 34986  004D6C  D7E2               	goto	l9023
 34987  004D6E                     l2770:
 34988  004D6E  C009  F001         	movff	___lldiv@quotient,?___lldiv
 34989  004D72  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 34990  004D76  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 34991  004D7A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 34992  004D7E  0012               	return	
 34993  004D80                     __end_of___lldiv:
 34994                           	opt stack 0
 34995                           tosu	equ	0xFFF
 34996                           tosh	equ	0xFFE
 34997                           tosl	equ	0xFFD
 34998                           pclath	equ	0xFFA
 34999                           tblptru	equ	0xFF8
 35000                           tblptrh	equ	0xFF7
 35001                           tblptrl	equ	0xFF6
 35002                           tablat	equ	0xFF5
 35003                           prodh	equ	0xFF4
 35004                           prodl	equ	0xFF3
 35005                           indf0	equ	0xFEF
 35006                           postinc0	equ	0xFEE
 35007                           fsr0h	equ	0xFEA
 35008                           fsr0l	equ	0xFE9
 35009                           wreg	equ	0xFE8
 35010                           indf1	equ	0xFE7
 35011                           postinc1	equ	0xFE6
 35012                           postdec1	equ	0xFE5
 35013                           fsr1h	equ	0xFE2
 35014                           fsr1l	equ	0xFE1
 35015                           indf2	equ	0xFDF
 35016                           postinc2	equ	0xFDE
 35017                           postdec2	equ	0xFDD
 35018                           fsr2h	equ	0xFDA
 35019                           fsr2l	equ	0xFD9
 35020                           status	equ	0xFD8
 35021                           
 35022 ;; *************** function _fatfs_lfn_cache_init *****************
 35023 ;; Defined at:
 35024 ;;		line 39 in file "fat_misc.c"
 35025 ;; Parameters:    Size  Location     Type
 35026 ;;  lfn             2    8[COMRAM] PTR struct lfn_cache
 35027 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
 35028 ;;  wipeTable       2   10[COMRAM] int 
 35029 ;; Auto vars:     Size  Location     Type
 35030 ;;  i               2   14[COMRAM] int 
 35031 ;; Return value:  Size  Location     Type
 35032 ;;		None               void
 35033 ;; Registers used:
 35034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35035 ;; Tracked objects:
 35036 ;;		On entry : 0/0
 35037 ;;		On exit  : 0/0
 35038 ;;		Unchanged: 0/0
 35039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35040 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35041 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35042 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35043 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35044 ;;Total ram usage:        8 bytes
 35045 ;; Hardware stack levels used:    1
 35046 ;; Hardware stack levels required when called:    1
 35047 ;; This function calls:
 35048 ;;		_memset
 35049 ;; This function is called by:
 35050 ;;		_fatfs_get_file_entry
 35051 ;;		_fatfs_list_directory_next
 35052 ;; This function uses a non-reentrant model
 35053 ;;
 35054                           
 35055                           	psect	text106
 35056  0046FE                     __ptext106:
 35057                           	opt stack 0
 35058  0046FE                     _fatfs_lfn_cache_init:
 35059                           	opt stack 26
 35060                           
 35061                           ;fat_misc.c: 41: int i = 0;
 35062                           
 35063                           ;incstack = 0
 35064  0046FE  6A10               	clrf	fatfs_lfn_cache_init@i+1,c
 35065  004700  6A0F               	clrf	fatfs_lfn_cache_init@i,c
 35066                           
 35067                           ;fat_misc.c: 43: lfn->no_of_strings = 0;
 35068  004702  EE20 F033          	lfsr	2,51
 35069  004706  5009               	movf	fatfs_lfn_cache_init@lfn,w,c
 35070  004708  26D9               	addwf	fsr2l,f,c
 35071  00470A  500A               	movf	fatfs_lfn_cache_init@lfn+1,w,c
 35072  00470C  22DA               	addwfc	fsr2h,f,c
 35073  00470E  6ADF               	clrf	indf2,c
 35074                           
 35075                           ;fat_misc.c: 48: if (wipeTable)
 35076  004710  500C               	movf	fatfs_lfn_cache_init@wipeTable+1,w,c
 35077  004712  100B               	iorwf	fatfs_lfn_cache_init@wipeTable,w,c
 35078  004714  E022               	bz	l934
 35079                           
 35080                           ;fat_misc.c: 49: for (i=0;i<10;i++)
 35081  004716  6A10               	clrf	fatfs_lfn_cache_init@i+1,c
 35082  004718  6A0F               	clrf	fatfs_lfn_cache_init@i,c
 35083  00471A  5010               	movf	fatfs_lfn_cache_init@i+1,w,c
 35084  00471C  0A80               	xorlw	128
 35085  00471E  0F80               	addlw	-128
 35086  004720  0E0A               	movlw	10
 35087  004722  B4D8               	btfsc	status,2,c
 35088  004724  5C0F               	subwf	fatfs_lfn_cache_init@i,w,c
 35089  004726  E219               	bc	l934
 35090                           
 35091                           ;fat_misc.c: 50: memset(lfn->String[i], 0x00, 5);
 35092  004728  0E05               	movlw	5
 35093  00472A  020F               	mulwf	fatfs_lfn_cache_init@i,c
 35094  00472C  CFF3 F00D          	movff	prodl,??_fatfs_lfn_cache_init
 35095  004730  CFF4 F00E          	movff	prodh,??_fatfs_lfn_cache_init+1
 35096  004734  0210               	mulwf	fatfs_lfn_cache_init@i+1,c
 35097  004736  50F3               	movf	243,w,c
 35098  004738  260E               	addwf	(??_fatfs_lfn_cache_init+1)& (0+255),f,c
 35099  00473A  500D               	movf	??_fatfs_lfn_cache_init,w,c
 35100  00473C  2409               	addwf	fatfs_lfn_cache_init@lfn,w,c
 35101  00473E  6E01               	movwf	memset@p1,c
 35102  004740  500E               	movf	??_fatfs_lfn_cache_init+1,w,c
 35103  004742  200A               	addwfc	fatfs_lfn_cache_init@lfn+1,w,c
 35104  004744  6E02               	movwf	memset@p1+1,c
 35105  004746  6A04               	clrf	memset@c+1,c
 35106  004748  6A03               	clrf	memset@c,c
 35107  00474A  6A06               	clrf	memset@n+1,c
 35108  00474C  0E05               	movlw	5
 35109  00474E  6E05               	movwf	memset@n,c
 35110  004750  EC24  F020         	call	_memset	;wreg free
 35111  004754  4A0F               	infsnz	fatfs_lfn_cache_init@i,f,c
 35112  004756  2A10               	incf	fatfs_lfn_cache_init@i+1,f,c
 35113  004758  D7E0               	goto	L125
 35114  00475A                     l934:
 35115  00475A  0012               	return	
 35116  00475C                     __end_of_fatfs_lfn_cache_init:
 35117                           	opt stack 0
 35118                           tosu	equ	0xFFF
 35119                           tosh	equ	0xFFE
 35120                           tosl	equ	0xFFD
 35121                           pclath	equ	0xFFA
 35122                           tblptru	equ	0xFF8
 35123                           tblptrh	equ	0xFF7
 35124                           tblptrl	equ	0xFF6
 35125                           tablat	equ	0xFF5
 35126                           prodh	equ	0xFF4
 35127                           prodl	equ	0xFF3
 35128                           indf0	equ	0xFEF
 35129                           postinc0	equ	0xFEE
 35130                           fsr0h	equ	0xFEA
 35131                           fsr0l	equ	0xFE9
 35132                           wreg	equ	0xFE8
 35133                           indf1	equ	0xFE7
 35134                           postinc1	equ	0xFE6
 35135                           postdec1	equ	0xFE5
 35136                           fsr1h	equ	0xFE2
 35137                           fsr1l	equ	0xFE1
 35138                           indf2	equ	0xFDF
 35139                           postinc2	equ	0xFDE
 35140                           postdec2	equ	0xFDD
 35141                           fsr2h	equ	0xFDA
 35142                           fsr2l	equ	0xFD9
 35143                           status	equ	0xFD8
 35144                           
 35145 ;; *************** function _memset *****************
 35146 ;; Defined at:
 35147 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memset.c"
 35148 ;; Parameters:    Size  Location     Type
 35149 ;;  p1              2    0[COMRAM] PTR void 
 35150 ;;		 -> _fs.currentsector.sector.String(50), _fs.currentsector.sector(512), _fs.fat_buffers(522), _fs.currentsector(524)
      +, 
 35151 ;;		 -> fatfs_lfn_generate_tail@tail_str(12), fatfs_lfn_create_sfn@ext(3), _create_file@shortFilename(11), _create_direc
      +tory@shortFilename(11), 
 35152 ;;		 -> _fs(1095), RAM(3967), fatfs_list_directory_next@short_filename(13), fatfs_list_directory_next@lfn(52), 
 35153 ;;		 -> fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0), 
 35154 ;;  c               2    2[COMRAM] int 
 35155 ;;  n               2    4[COMRAM] unsigned int 
 35156 ;; Auto vars:     Size  Location     Type
 35157 ;;  p               2    6[COMRAM] PTR unsigned char 
 35158 ;;		 -> _fs.currentsector.sector.String(50), _fs.currentsector.sector(512), _fs.fat_buffers(522), _fs.currentsector(524)
      +, 
 35159 ;;		 -> fatfs_lfn_generate_tail@tail_str(12), fatfs_lfn_create_sfn@ext(3), _create_file@shortFilename(11), _create_direc
      +tory@shortFilename(11), 
 35160 ;;		 -> _fs(1095), RAM(3967), fatfs_list_directory_next@short_filename(13), fatfs_list_directory_next@lfn(52), 
 35161 ;;		 -> fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0), 
 35162 ;; Return value:  Size  Location     Type
 35163 ;;                  2    0[COMRAM] PTR void 
 35164 ;; Registers used:
 35165 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35166 ;; Tracked objects:
 35167 ;;		On entry : 0/0
 35168 ;;		On exit  : 0/0
 35169 ;;		Unchanged: 0/0
 35170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35171 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35174 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35175 ;;Total ram usage:        8 bytes
 35176 ;; Hardware stack levels used:    1
 35177 ;; This function calls:
 35178 ;;		Nothing
 35179 ;; This function is called by:
 35180 ;;		_fatfs_get_file_entry
 35181 ;;		_fatfs_list_directory_next
 35182 ;;		__create_directory
 35183 ;;		__open_file
 35184 ;;		__create_file
 35185 ;;		_fl_fwrite
 35186 ;;		_fatfs_erase_sectors
 35187 ;;		_fatfs_create_boot_sector
 35188 ;;		_fatfs_create_fsinfo_sector
 35189 ;;		_fatfs_erase_fat
 35190 ;;		_fatfs_lfn_cache_init
 35191 ;;		_fatfs_filename_to_lfn
 35192 ;;		_fatfs_lfn_create_sfn
 35193 ;;		_fatfs_lfn_generate_tail
 35194 ;;		_fatfs_fat_init
 35195 ;;		_fatfs_find_free_dir_offset
 35196 ;; This function uses a non-reentrant model
 35197 ;;
 35198                           
 35199                           	psect	text107
 35200  004048                     __ptext107:
 35201                           	opt stack 0
 35202  004048                     _memset:
 35203                           	opt stack 27
 35204                           
 35205                           ;incstack = 0
 35206  004048  C002  F008         	movff	memset@p1+1,memset@p+1
 35207  00404C  C001  F007         	movff	memset@p1,memset@p
 35208  004050  D008               	goto	l8855
 35209  004052                     l8851:
 35210  004052  C007  FFD9         	movff	memset@p,fsr2l
 35211  004056  C008  FFDA         	movff	memset@p+1,fsr2h
 35212  00405A  C003  FFDF         	movff	memset@c,indf2
 35213  00405E  4A07               	infsnz	memset@p,f,c
 35214  004060  2A08               	incf	memset@p+1,f,c
 35215  004062                     l8855:
 35216  004062  0605               	decf	memset@n,f,c
 35217  004064  A0D8               	btfss	status,0,c
 35218  004066  0606               	decf	memset@n+1,f,c
 35219  004068  2805               	incf	memset@n& (0+255),w,c
 35220  00406A  B4D8               	btfsc	status,2,c
 35221  00406C  2806               	incf	(memset@n+1)& (0+255),w,c
 35222  00406E  B4D8               	btfsc	status,2,c
 35223                           
 35224                           ;	Return value of _memset is never used
 35225  004070  0012               	return	
 35226  004072  D7EF               	goto	l8851
 35227  004074                     __end_of_memset:
 35228                           	opt stack 0
 35229                           tosu	equ	0xFFF
 35230                           tosh	equ	0xFFE
 35231                           tosl	equ	0xFFD
 35232                           pclath	equ	0xFFA
 35233                           tblptru	equ	0xFF8
 35234                           tblptrh	equ	0xFF7
 35235                           tblptrl	equ	0xFF6
 35236                           tablat	equ	0xFF5
 35237                           prodh	equ	0xFF4
 35238                           prodl	equ	0xFF3
 35239                           indf0	equ	0xFEF
 35240                           postinc0	equ	0xFEE
 35241                           fsr0h	equ	0xFEA
 35242                           fsr0l	equ	0xFE9
 35243                           wreg	equ	0xFE8
 35244                           indf1	equ	0xFE7
 35245                           postinc1	equ	0xFE6
 35246                           postdec1	equ	0xFE5
 35247                           fsr1h	equ	0xFE2
 35248                           fsr1l	equ	0xFE1
 35249                           indf2	equ	0xFDF
 35250                           postinc2	equ	0xFDE
 35251                           postdec2	equ	0xFDD
 35252                           fsr2h	equ	0xFDA
 35253                           fsr2l	equ	0xFD9
 35254                           status	equ	0xFD8
 35255                           
 35256 ;; *************** function _fatfs_lfn_cache_get *****************
 35257 ;; Defined at:
 35258 ;;		line 97 in file "fat_misc.c"
 35259 ;; Parameters:    Size  Location     Type
 35260 ;;  lfn             2    0[COMRAM] PTR struct lfn_cache
 35261 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
 35262 ;; Auto vars:     Size  Location     Type
 35263 ;;		None
 35264 ;; Return value:  Size  Location     Type
 35265 ;;                  2    0[COMRAM] PTR unsigned char 
 35266 ;; Registers used:
 35267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35268 ;; Tracked objects:
 35269 ;;		On entry : 0/0
 35270 ;;		On exit  : 0/0
 35271 ;;		Unchanged: 0/0
 35272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35275 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35276 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35277 ;;Total ram usage:        3 bytes
 35278 ;; Hardware stack levels used:    1
 35279 ;; This function calls:
 35280 ;;		Nothing
 35281 ;; This function is called by:
 35282 ;;		_fatfs_get_file_entry
 35283 ;;		_fatfs_list_directory_next
 35284 ;; This function uses a non-reentrant model
 35285 ;;
 35286                           
 35287                           	psect	text108
 35288  004A04                     __ptext108:
 35289                           	opt stack 0
 35290  004A04                     _fatfs_lfn_cache_get:
 35291                           	opt stack 27
 35292                           
 35293                           ;fat_misc.c: 100: if (lfn->no_of_strings == 10)
 35294                           
 35295                           ;incstack = 0
 35296  004A04  EE20 F033          	lfsr	2,51
 35297  004A08  5001               	movf	fatfs_lfn_cache_get@lfn,w,c
 35298  004A0A  26D9               	addwf	fsr2l,f,c
 35299  004A0C  5002               	movf	fatfs_lfn_cache_get@lfn+1,w,c
 35300  004A0E  22DA               	addwfc	fsr2h,f,c
 35301  004A10  0E0A               	movlw	10
 35302  004A12  62DF               	cpfseq	indf2,c
 35303  004A14  D007               	goto	l9265
 35304                           
 35305                           ;fat_misc.c: 101: lfn->Null = '\0';
 35306  004A16  EE20 F032          	lfsr	2,50
 35307  004A1A  5001               	movf	fatfs_lfn_cache_get@lfn,w,c
 35308  004A1C  26D9               	addwf	fsr2l,f,c
 35309  004A1E  5002               	movf	fatfs_lfn_cache_get@lfn+1,w,c
 35310  004A20  22DA               	addwfc	fsr2h,f,c
 35311  004A22  D01D               	goto	L127
 35312  004A24                     l9265:
 35313                           
 35314                           ;fat_misc.c: 102: else if (lfn->no_of_strings)
 35315  004A24  EE20 F033          	lfsr	2,51
 35316  004A28  5001               	movf	fatfs_lfn_cache_get@lfn,w,c
 35317  004A2A  26D9               	addwf	fsr2l,f,c
 35318  004A2C  5002               	movf	fatfs_lfn_cache_get@lfn+1,w,c
 35319  004A2E  22DA               	addwfc	fsr2h,f,c
 35320  004A30  50DF               	movf	indf2,w,c
 35321  004A32  E011               	bz	l9269
 35322                           
 35323                           ;fat_misc.c: 103: lfn->String[lfn->no_of_strings][0] = '\0';
 35324  004A34  EE20 F033          	lfsr	2,51
 35325  004A38  5001               	movf	fatfs_lfn_cache_get@lfn,w,c
 35326  004A3A  26D9               	addwf	fsr2l,f,c
 35327  004A3C  5002               	movf	fatfs_lfn_cache_get@lfn+1,w,c
 35328  004A3E  22DA               	addwfc	fsr2h,f,c
 35329  004A40  50DF               	movf	indf2,w,c
 35330  004A42  6E03               	movwf	??_fatfs_lfn_cache_get& (0+255),c
 35331  004A44  5003               	movf	??_fatfs_lfn_cache_get,w,c
 35332  004A46  0D05               	mullw	5
 35333  004A48  50F3               	movf	prodl,w,c
 35334  004A4A  2401               	addwf	fatfs_lfn_cache_get@lfn,w,c
 35335  004A4C  6ED9               	movwf	fsr2l,c
 35336  004A4E  50F4               	movf	prodh,w,c
 35337  004A50  2002               	addwfc	fatfs_lfn_cache_get@lfn+1,w,c
 35338  004A52  6EDA               	movwf	fsr2h,c
 35339  004A54  D004               	goto	L127
 35340  004A56                     l9269:
 35341                           
 35342                           ;fat_misc.c: 104: else
 35343                           ;fat_misc.c: 105: lfn->String[0][0] = '\0';
 35344  004A56  C001  FFD9         	movff	fatfs_lfn_cache_get@lfn,fsr2l
 35345  004A5A  C002  FFDA         	movff	fatfs_lfn_cache_get@lfn+1,fsr2h
 35346  004A5E                     L127:
 35347  004A5E  0E00               	movlw	0
 35348  004A60  6EDF               	movwf	indf2,c
 35349                           
 35350                           ;fat_misc.c: 107: return (char*)&lfn->String[0][0];
 35351  004A62  C002  F002         	movff	fatfs_lfn_cache_get@lfn+1,?_fatfs_lfn_cache_get+1
 35352  004A66  C001  F001         	movff	fatfs_lfn_cache_get@lfn,?_fatfs_lfn_cache_get
 35353  004A6A  0C00               	retlw	0
 35354  004A6C                     __end_of_fatfs_lfn_cache_get:
 35355                           	opt stack 0
 35356                           tosu	equ	0xFFF
 35357                           tosh	equ	0xFFE
 35358                           tosl	equ	0xFFD
 35359                           pclath	equ	0xFFA
 35360                           tblptru	equ	0xFF8
 35361                           tblptrh	equ	0xFF7
 35362                           tblptrl	equ	0xFF6
 35363                           tablat	equ	0xFF5
 35364                           prodh	equ	0xFF4
 35365                           prodl	equ	0xFF3
 35366                           indf0	equ	0xFEF
 35367                           postinc0	equ	0xFEE
 35368                           fsr0h	equ	0xFEA
 35369                           fsr0l	equ	0xFE9
 35370                           wreg	equ	0xFE8
 35371                           indf1	equ	0xFE7
 35372                           postinc1	equ	0xFE6
 35373                           postdec1	equ	0xFE5
 35374                           fsr1h	equ	0xFE2
 35375                           fsr1l	equ	0xFE1
 35376                           indf2	equ	0xFDF
 35377                           postinc2	equ	0xFDE
 35378                           postdec2	equ	0xFDD
 35379                           fsr2h	equ	0xFDA
 35380                           fsr2l	equ	0xFD9
 35381                           status	equ	0xFD8
 35382                           
 35383 ;; *************** function _fatfs_lfn_cache_entry *****************
 35384 ;; Defined at:
 35385 ;;		line 58 in file "fat_misc.c"
 35386 ;; Parameters:    Size  Location     Type
 35387 ;;  lfn             2    0[COMRAM] PTR struct lfn_cache
 35388 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
 35389 ;;  entryBuffer     2    2[COMRAM] PTR unsigned char 
 35390 ;;		 -> _fs.currentsector.sector(512), 
 35391 ;; Auto vars:     Size  Location     Type
 35392 ;;  LFNIndex        1   15[COMRAM] unsigned char 
 35393 ;;  i               1   14[COMRAM] unsigned char 
 35394 ;; Return value:  Size  Location     Type
 35395 ;;		None               void
 35396 ;; Registers used:
 35397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35398 ;; Tracked objects:
 35399 ;;		On entry : 0/0
 35400 ;;		On exit  : 0/0
 35401 ;;		Unchanged: 0/0
 35402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35405 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35406 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35407 ;;Total ram usage:       16 bytes
 35408 ;; Hardware stack levels used:    1
 35409 ;; This function calls:
 35410 ;;		Nothing
 35411 ;; This function is called by:
 35412 ;;		_fatfs_get_file_entry
 35413 ;;		_fatfs_list_directory_next
 35414 ;; This function uses a non-reentrant model
 35415 ;;
 35416                           
 35417                           	psect	text109
 35418  00CF3A                     __ptext109:
 35419                           	opt stack 0
 35420  00CF3A                     _fatfs_lfn_cache_entry:
 35421                           	opt stack 27
 35422                           
 35423                           ;fat_misc.c: 60: uint8 LFNIndex, i;
 35424                           ;fat_misc.c: 61: LFNIndex = entryBuffer[0] & 0x1F;
 35425                           
 35426                           ;incstack = 0
 35427  00CF3A  C003  FFD9         	movff	fatfs_lfn_cache_entry@entryBuffer,fsr2l
 35428  00CF3E  C004  FFDA         	movff	fatfs_lfn_cache_entry@entryBuffer+1,fsr2h
 35429  00CF42  50DF               	movf	indf2,w,c
 35430  00CF44  0B1F               	andlw	31
 35431  00CF46  6E10               	movwf	fatfs_lfn_cache_entry@LFNIndex,c
 35432                           
 35433                           ;fat_misc.c: 64: if (LFNIndex > 10)
 35434  00CF48  0E0A               	movlw	10
 35435  00CF4A  6410               	cpfsgt	fatfs_lfn_cache_entry@LFNIndex,c
 35436  00CF4C  D001               	goto	l937
 35437  00CF4E  D29B               	goto	l938
 35438  00CF50                     l937:
 35439                           
 35440                           ;fat_misc.c: 68: if (LFNIndex == 0)
 35441  00CF50  6610               	tstfsz	fatfs_lfn_cache_entry@LFNIndex,c
 35442  00CF52  D001               	goto	l9177
 35443  00CF54  D298               	goto	l938
 35444  00CF56                     l9177:
 35445                           
 35446                           ;fat_misc.c: 71: if (lfn->no_of_strings == 0)
 35447  00CF56  EE20 F033          	lfsr	2,51
 35448  00CF5A  5001               	movf	fatfs_lfn_cache_entry@lfn,w,c
 35449  00CF5C  26D9               	addwf	fsr2l,f,c
 35450  00CF5E  5002               	movf	fatfs_lfn_cache_entry@lfn+1,w,c
 35451  00CF60  22DA               	addwfc	fsr2h,f,c
 35452  00CF62  50DF               	movf	indf2,w,c
 35453  00CF64  E108               	bnz	l9181
 35454                           
 35455                           ;fat_misc.c: 72: lfn->no_of_strings = LFNIndex;
 35456  00CF66  EE20 F033          	lfsr	2,51
 35457  00CF6A  5001               	movf	fatfs_lfn_cache_entry@lfn,w,c
 35458  00CF6C  26D9               	addwf	fsr2l,f,c
 35459  00CF6E  5002               	movf	fatfs_lfn_cache_entry@lfn+1,w,c
 35460  00CF70  22DA               	addwfc	fsr2h,f,c
 35461  00CF72  C010  FFDF         	movff	fatfs_lfn_cache_entry@LFNIndex,indf2
 35462  00CF76                     l9181:
 35463                           
 35464                           ;fat_misc.c: 74: lfn->String[LFNIndex-1][0] = entryBuffer[1];
 35465  00CF76  EE20 F001          	lfsr	2,1
 35466  00CF7A  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35467  00CF7C  26D9               	addwf	fsr2l,f,c
 35468  00CF7E  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35469  00CF80  22DA               	addwfc	fsr2h,f,c
 35470  00CF82  0E05               	movlw	5
 35471  00CF84  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35472  00CF86  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35473  00CF88  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35474  00CF8A  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35475  00CF8C  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35476  00CF8E  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35477  00CF90  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35478  00CF92  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35479  00CF94  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35480  00CF96  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35481  00CF98  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35482  00CF9A  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35483  00CF9C  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35484  00CF9E  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35485  00CFA2  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35486  00CFA6  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35487  00CFA8  50F3               	movf	243,w,c
 35488  00CFAA  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35489  00CFAC  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35490  00CFAE  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35491  00CFB0  50F3               	movf	243,w,c
 35492  00CFB2  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35493  00CFB4  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35494  00CFB6  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35495  00CFB8  6EE1               	movwf	fsr1l,c
 35496  00CFBA  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35497  00CFBC  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35498  00CFBE  6EE2               	movwf	fsr1h,c
 35499  00CFC0  CFDF FFE7          	movff	indf2,indf1
 35500                           
 35501                           ;fat_misc.c: 75: lfn->String[LFNIndex-1][1] = entryBuffer[3];
 35502  00CFC4  EE20 F003          	lfsr	2,3
 35503  00CFC8  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35504  00CFCA  26D9               	addwf	fsr2l,f,c
 35505  00CFCC  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35506  00CFCE  22DA               	addwfc	fsr2h,f,c
 35507  00CFD0  0E05               	movlw	5
 35508  00CFD2  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35509  00CFD4  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35510  00CFD6  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35511  00CFD8  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35512  00CFDA  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35513  00CFDC  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35514  00CFDE  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35515  00CFE0  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35516  00CFE2  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35517  00CFE4  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35518  00CFE6  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35519  00CFE8  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35520  00CFEA  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35521  00CFEC  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35522  00CFF0  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35523  00CFF4  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35524  00CFF6  50F3               	movf	243,w,c
 35525  00CFF8  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35526  00CFFA  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35527  00CFFC  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35528  00CFFE  50F3               	movf	243,w,c
 35529  00D000  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35530  00D002  2A0B               	incf	??_fatfs_lfn_cache_entry+6,f,c
 35531  00D004  0E00               	movlw	0
 35532  00D006  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35533  00D008  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35534  00D00A  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35535  00D00C  6EE1               	movwf	fsr1l,c
 35536  00D00E  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35537  00D010  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35538  00D012  6EE2               	movwf	fsr1h,c
 35539  00D014  CFDF FFE7          	movff	indf2,indf1
 35540                           
 35541                           ;fat_misc.c: 76: lfn->String[LFNIndex-1][2] = entryBuffer[5];
 35542  00D018  EE20 F005          	lfsr	2,5
 35543  00D01C  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35544  00D01E  26D9               	addwf	fsr2l,f,c
 35545  00D020  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35546  00D022  22DA               	addwfc	fsr2h,f,c
 35547  00D024  0E05               	movlw	5
 35548  00D026  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35549  00D028  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35550  00D02A  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35551  00D02C  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35552  00D02E  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35553  00D030  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35554  00D032  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35555  00D034  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35556  00D036  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35557  00D038  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35558  00D03A  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35559  00D03C  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35560  00D03E  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35561  00D040  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35562  00D044  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35563  00D048  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35564  00D04A  50F3               	movf	243,w,c
 35565  00D04C  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35566  00D04E  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35567  00D050  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35568  00D052  50F3               	movf	243,w,c
 35569  00D054  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35570  00D056  0E02               	movlw	2
 35571  00D058  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35572  00D05A  0E00               	movlw	0
 35573  00D05C  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35574  00D05E  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35575  00D060  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35576  00D062  6EE1               	movwf	fsr1l,c
 35577  00D064  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35578  00D066  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35579  00D068  6EE2               	movwf	fsr1h,c
 35580  00D06A  CFDF FFE7          	movff	indf2,indf1
 35581                           
 35582                           ;fat_misc.c: 77: lfn->String[LFNIndex-1][3] = entryBuffer[7];
 35583  00D06E  EE20 F007          	lfsr	2,7
 35584  00D072  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35585  00D074  26D9               	addwf	fsr2l,f,c
 35586  00D076  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35587  00D078  22DA               	addwfc	fsr2h,f,c
 35588  00D07A  0E05               	movlw	5
 35589  00D07C  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35590  00D07E  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35591  00D080  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35592  00D082  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35593  00D084  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35594  00D086  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35595  00D088  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35596  00D08A  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35597  00D08C  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35598  00D08E  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35599  00D090  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35600  00D092  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35601  00D094  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35602  00D096  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35603  00D09A  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35604  00D09E  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35605  00D0A0  50F3               	movf	243,w,c
 35606  00D0A2  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35607  00D0A4  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35608  00D0A6  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35609  00D0A8  50F3               	movf	243,w,c
 35610  00D0AA  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35611  00D0AC  0E03               	movlw	3
 35612  00D0AE  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35613  00D0B0  0E00               	movlw	0
 35614  00D0B2  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35615  00D0B4  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35616  00D0B6  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35617  00D0B8  6EE1               	movwf	fsr1l,c
 35618  00D0BA  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35619  00D0BC  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35620  00D0BE  6EE2               	movwf	fsr1h,c
 35621  00D0C0  CFDF FFE7          	movff	indf2,indf1
 35622                           
 35623                           ;fat_misc.c: 78: lfn->String[LFNIndex-1][4] = entryBuffer[9];
 35624  00D0C4  EE20 F009          	lfsr	2,9
 35625  00D0C8  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35626  00D0CA  26D9               	addwf	fsr2l,f,c
 35627  00D0CC  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35628  00D0CE  22DA               	addwfc	fsr2h,f,c
 35629  00D0D0  0E05               	movlw	5
 35630  00D0D2  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35631  00D0D4  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35632  00D0D6  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35633  00D0D8  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35634  00D0DA  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35635  00D0DC  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35636  00D0DE  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35637  00D0E0  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35638  00D0E2  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35639  00D0E4  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35640  00D0E6  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35641  00D0E8  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35642  00D0EA  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35643  00D0EC  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35644  00D0F0  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35645  00D0F4  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35646  00D0F6  50F3               	movf	243,w,c
 35647  00D0F8  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35648  00D0FA  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35649  00D0FC  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35650  00D0FE  50F3               	movf	243,w,c
 35651  00D100  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35652  00D102  0E04               	movlw	4
 35653  00D104  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35654  00D106  0E00               	movlw	0
 35655  00D108  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35656  00D10A  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35657  00D10C  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35658  00D10E  6EE1               	movwf	fsr1l,c
 35659  00D110  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35660  00D112  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35661  00D114  6EE2               	movwf	fsr1h,c
 35662  00D116  CFDF FFE7          	movff	indf2,indf1
 35663                           
 35664                           ;fat_misc.c: 79: lfn->String[LFNIndex-1][5] = entryBuffer[0x0E];
 35665  00D11A  EE20 F00E          	lfsr	2,14
 35666  00D11E  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35667  00D120  26D9               	addwf	fsr2l,f,c
 35668  00D122  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35669  00D124  22DA               	addwfc	fsr2h,f,c
 35670  00D126  0E05               	movlw	5
 35671  00D128  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35672  00D12A  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35673  00D12C  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35674  00D12E  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35675  00D130  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35676  00D132  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35677  00D134  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35678  00D136  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35679  00D138  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35680  00D13A  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35681  00D13C  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35682  00D13E  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35683  00D140  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35684  00D142  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35685  00D146  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35686  00D14A  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35687  00D14C  50F3               	movf	243,w,c
 35688  00D14E  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35689  00D150  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35690  00D152  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35691  00D154  50F3               	movf	243,w,c
 35692  00D156  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35693  00D158  0E05               	movlw	5
 35694  00D15A  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35695  00D15C  0E00               	movlw	0
 35696  00D15E  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35697  00D160  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35698  00D162  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35699  00D164  6EE1               	movwf	fsr1l,c
 35700  00D166  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35701  00D168  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35702  00D16A  6EE2               	movwf	fsr1h,c
 35703  00D16C  CFDF FFE7          	movff	indf2,indf1
 35704                           
 35705                           ;fat_misc.c: 80: lfn->String[LFNIndex-1][6] = entryBuffer[0x10];
 35706  00D170  EE20 F010          	lfsr	2,16
 35707  00D174  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35708  00D176  26D9               	addwf	fsr2l,f,c
 35709  00D178  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35710  00D17A  22DA               	addwfc	fsr2h,f,c
 35711  00D17C  0E05               	movlw	5
 35712  00D17E  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35713  00D180  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35714  00D182  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35715  00D184  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35716  00D186  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35717  00D188  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35718  00D18A  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35719  00D18C  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35720  00D18E  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35721  00D190  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35722  00D192  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35723  00D194  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35724  00D196  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35725  00D198  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35726  00D19C  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35727  00D1A0  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35728  00D1A2  50F3               	movf	243,w,c
 35729  00D1A4  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35730  00D1A6  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35731  00D1A8  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35732  00D1AA  50F3               	movf	243,w,c
 35733  00D1AC  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35734  00D1AE  0E06               	movlw	6
 35735  00D1B0  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35736  00D1B2  0E00               	movlw	0
 35737  00D1B4  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35738  00D1B6  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35739  00D1B8  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35740  00D1BA  6EE1               	movwf	fsr1l,c
 35741  00D1BC  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35742  00D1BE  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35743  00D1C0  6EE2               	movwf	fsr1h,c
 35744  00D1C2  CFDF FFE7          	movff	indf2,indf1
 35745                           
 35746                           ;fat_misc.c: 81: lfn->String[LFNIndex-1][7] = entryBuffer[0x12];
 35747  00D1C6  EE20 F012          	lfsr	2,18
 35748  00D1CA  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35749  00D1CC  26D9               	addwf	fsr2l,f,c
 35750  00D1CE  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35751  00D1D0  22DA               	addwfc	fsr2h,f,c
 35752  00D1D2  0E05               	movlw	5
 35753  00D1D4  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35754  00D1D6  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35755  00D1D8  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35756  00D1DA  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35757  00D1DC  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35758  00D1DE  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35759  00D1E0  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35760  00D1E2  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35761  00D1E4  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35762  00D1E6  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35763  00D1E8  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35764  00D1EA  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35765  00D1EC  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35766  00D1EE  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35767  00D1F2  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35768  00D1F6  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35769  00D1F8  50F3               	movf	243,w,c
 35770  00D1FA  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35771  00D1FC  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35772  00D1FE  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35773  00D200  50F3               	movf	243,w,c
 35774  00D202  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35775  00D204  0E07               	movlw	7
 35776  00D206  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35777  00D208  0E00               	movlw	0
 35778  00D20A  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35779  00D20C  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35780  00D20E  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35781  00D210  6EE1               	movwf	fsr1l,c
 35782  00D212  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35783  00D214  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35784  00D216  6EE2               	movwf	fsr1h,c
 35785  00D218  CFDF FFE7          	movff	indf2,indf1
 35786                           
 35787                           ;fat_misc.c: 82: lfn->String[LFNIndex-1][8] = entryBuffer[0x14];
 35788  00D21C  EE20 F014          	lfsr	2,20
 35789  00D220  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35790  00D222  26D9               	addwf	fsr2l,f,c
 35791  00D224  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35792  00D226  22DA               	addwfc	fsr2h,f,c
 35793  00D228  0E05               	movlw	5
 35794  00D22A  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35795  00D22C  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35796  00D22E  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35797  00D230  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35798  00D232  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35799  00D234  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35800  00D236  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35801  00D238  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35802  00D23A  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35803  00D23C  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35804  00D23E  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35805  00D240  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35806  00D242  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35807  00D244  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35808  00D248  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35809  00D24C  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35810  00D24E  50F3               	movf	243,w,c
 35811  00D250  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35812  00D252  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35813  00D254  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35814  00D256  50F3               	movf	243,w,c
 35815  00D258  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35816  00D25A  0E08               	movlw	8
 35817  00D25C  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35818  00D25E  0E00               	movlw	0
 35819  00D260  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35820  00D262  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35821  00D264  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35822  00D266  6EE1               	movwf	fsr1l,c
 35823  00D268  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35824  00D26A  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35825  00D26C  6EE2               	movwf	fsr1h,c
 35826  00D26E  CFDF FFE7          	movff	indf2,indf1
 35827                           
 35828                           ;fat_misc.c: 83: lfn->String[LFNIndex-1][9] = entryBuffer[0x16];
 35829  00D272  EE20 F016          	lfsr	2,22
 35830  00D276  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35831  00D278  26D9               	addwf	fsr2l,f,c
 35832  00D27A  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35833  00D27C  22DA               	addwfc	fsr2h,f,c
 35834  00D27E  0E05               	movlw	5
 35835  00D280  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35836  00D282  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35837  00D284  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35838  00D286  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35839  00D288  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35840  00D28A  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35841  00D28C  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35842  00D28E  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35843  00D290  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35844  00D292  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35845  00D294  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35846  00D296  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35847  00D298  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35848  00D29A  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35849  00D29E  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35850  00D2A2  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35851  00D2A4  50F3               	movf	243,w,c
 35852  00D2A6  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35853  00D2A8  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35854  00D2AA  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35855  00D2AC  50F3               	movf	243,w,c
 35856  00D2AE  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35857  00D2B0  0E09               	movlw	9
 35858  00D2B2  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35859  00D2B4  0E00               	movlw	0
 35860  00D2B6  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35861  00D2B8  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35862  00D2BA  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35863  00D2BC  6EE1               	movwf	fsr1l,c
 35864  00D2BE  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35865  00D2C0  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35866  00D2C2  6EE2               	movwf	fsr1h,c
 35867  00D2C4  CFDF FFE7          	movff	indf2,indf1
 35868                           
 35869                           ;fat_misc.c: 84: lfn->String[LFNIndex-1][10] = entryBuffer[0x18];
 35870  00D2C8  EE20 F018          	lfsr	2,24
 35871  00D2CC  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35872  00D2CE  26D9               	addwf	fsr2l,f,c
 35873  00D2D0  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35874  00D2D2  22DA               	addwfc	fsr2h,f,c
 35875  00D2D4  0E05               	movlw	5
 35876  00D2D6  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35877  00D2D8  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35878  00D2DA  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35879  00D2DC  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35880  00D2DE  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35881  00D2E0  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35882  00D2E2  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35883  00D2E4  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35884  00D2E6  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35885  00D2E8  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35886  00D2EA  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35887  00D2EC  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35888  00D2EE  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35889  00D2F0  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35890  00D2F4  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35891  00D2F8  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35892  00D2FA  50F3               	movf	243,w,c
 35893  00D2FC  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35894  00D2FE  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35895  00D300  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35896  00D302  50F3               	movf	243,w,c
 35897  00D304  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35898  00D306  0E0A               	movlw	10
 35899  00D308  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35900  00D30A  0E00               	movlw	0
 35901  00D30C  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35902  00D30E  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35903  00D310  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35904  00D312  6EE1               	movwf	fsr1l,c
 35905  00D314  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35906  00D316  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35907  00D318  6EE2               	movwf	fsr1h,c
 35908  00D31A  CFDF FFE7          	movff	indf2,indf1
 35909                           
 35910                           ;fat_misc.c: 85: lfn->String[LFNIndex-1][11] = entryBuffer[0x1C];
 35911  00D31E  EE20 F01C          	lfsr	2,28
 35912  00D322  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35913  00D324  26D9               	addwf	fsr2l,f,c
 35914  00D326  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35915  00D328  22DA               	addwfc	fsr2h,f,c
 35916  00D32A  0E05               	movlw	5
 35917  00D32C  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35918  00D32E  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35919  00D330  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35920  00D332  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35921  00D334  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35922  00D336  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35923  00D338  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35924  00D33A  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35925  00D33C  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35926  00D33E  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35927  00D340  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35928  00D342  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35929  00D344  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35930  00D346  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35931  00D34A  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35932  00D34E  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35933  00D350  50F3               	movf	243,w,c
 35934  00D352  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35935  00D354  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35936  00D356  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35937  00D358  50F3               	movf	243,w,c
 35938  00D35A  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35939  00D35C  0E0B               	movlw	11
 35940  00D35E  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35941  00D360  0E00               	movlw	0
 35942  00D362  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35943  00D364  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35944  00D366  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35945  00D368  6EE1               	movwf	fsr1l,c
 35946  00D36A  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35947  00D36C  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35948  00D36E  6EE2               	movwf	fsr1h,c
 35949  00D370  CFDF FFE7          	movff	indf2,indf1
 35950                           
 35951                           ;fat_misc.c: 86: lfn->String[LFNIndex-1][12] = entryBuffer[0x1E];
 35952  00D374  EE20 F01E          	lfsr	2,30
 35953  00D378  5003               	movf	fatfs_lfn_cache_entry@entryBuffer,w,c
 35954  00D37A  26D9               	addwf	fsr2l,f,c
 35955  00D37C  5004               	movf	fatfs_lfn_cache_entry@entryBuffer+1,w,c
 35956  00D37E  22DA               	addwfc	fsr2h,f,c
 35957  00D380  0E05               	movlw	5
 35958  00D382  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 35959  00D384  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 35960  00D386  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 35961  00D388  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 35962  00D38A  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 35963  00D38C  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35964  00D38E  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35965  00D390  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 35966  00D392  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 35967  00D394  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 35968  00D396  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 35969  00D398  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 35970  00D39A  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35971  00D39C  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 35972  00D3A0  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 35973  00D3A4  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 35974  00D3A6  50F3               	movf	243,w,c
 35975  00D3A8  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35976  00D3AA  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 35977  00D3AC  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 35978  00D3AE  50F3               	movf	243,w,c
 35979  00D3B0  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 35980  00D3B2  0E0C               	movlw	12
 35981  00D3B4  260B               	addwf	??_fatfs_lfn_cache_entry+6,f,c
 35982  00D3B6  0E00               	movlw	0
 35983  00D3B8  220C               	addwfc	??_fatfs_lfn_cache_entry+7,f,c
 35984  00D3BA  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 35985  00D3BC  2401               	addwf	fatfs_lfn_cache_entry@lfn,w,c
 35986  00D3BE  6EE1               	movwf	fsr1l,c
 35987  00D3C0  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 35988  00D3C2  2002               	addwfc	fatfs_lfn_cache_entry@lfn+1,w,c
 35989  00D3C4  6EE2               	movwf	fsr1h,c
 35990  00D3C6  CFDF FFE7          	movff	indf2,indf1
 35991                           
 35992                           ;fat_misc.c: 88: for (i=0; i<5; i++)
 35993  00D3CA  0E00               	movlw	0
 35994  00D3CC  6E0F               	movwf	fatfs_lfn_cache_entry@i,c
 35995  00D3CE  D058               	goto	L128
 35996  00D3D0                     l9213:
 35997                           
 35998                           ;fat_misc.c: 89: if (lfn->String[LFNIndex-1][i]==0xFF)
 35999  00D3D0  0E05               	movlw	5
 36000  00D3D2  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 36001  00D3D4  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 36002  00D3D6  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 36003  00D3D8  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 36004  00D3DA  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 36005  00D3DC  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 36006  00D3DE  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 36007  00D3E0  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 36008  00D3E2  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 36009  00D3E4  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 36010  00D3E6  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 36011  00D3E8  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 36012  00D3EA  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 36013  00D3EC  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 36014  00D3F0  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 36015  00D3F4  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 36016  00D3F6  50F3               	movf	243,w,c
 36017  00D3F8  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 36018  00D3FA  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 36019  00D3FC  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 36020  00D3FE  50F3               	movf	243,w,c
 36021  00D400  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 36022  00D402  C001  F00D         	movff	fatfs_lfn_cache_entry@lfn,??_fatfs_lfn_cache_entry+8
 36023  00D406  C002  F00E         	movff	fatfs_lfn_cache_entry@lfn+1,??_fatfs_lfn_cache_entry+9
 36024  00D40A  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 36025  00D40C  260D               	addwf	??_fatfs_lfn_cache_entry+8,f,c
 36026  00D40E  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 36027  00D410  220E               	addwfc	??_fatfs_lfn_cache_entry+9,f,c
 36028  00D412  500F               	movf	fatfs_lfn_cache_entry@i,w,c
 36029  00D414  0D01               	mullw	1
 36030  00D416  50F3               	movf	prodl,w,c
 36031  00D418  240D               	addwf	??_fatfs_lfn_cache_entry+8,w,c
 36032  00D41A  6ED9               	movwf	fsr2l,c
 36033  00D41C  50F4               	movf	prodh,w,c
 36034  00D41E  200E               	addwfc	??_fatfs_lfn_cache_entry+9,w,c
 36035  00D420  6EDA               	movwf	fsr2h,c
 36036  00D422  0EFF               	movlw	255
 36037  00D424  62DF               	cpfseq	indf2,c
 36038  00D426  D02B               	goto	l9217
 36039                           
 36040                           ;fat_misc.c: 90: lfn->String[LFNIndex-1][i] = 0x20;
 36041  00D428  0E05               	movlw	5
 36042  00D42A  6E05               	movwf	??_fatfs_lfn_cache_entry& (0+255),c
 36043  00D42C  6A06               	clrf	(??_fatfs_lfn_cache_entry+1)& (0+255),c
 36044  00D42E  6807               	setf	(??_fatfs_lfn_cache_entry+2)& (0+255),c
 36045  00D430  6808               	setf	(??_fatfs_lfn_cache_entry+3)& (0+255),c
 36046  00D432  5010               	movf	fatfs_lfn_cache_entry@LFNIndex,w,c
 36047  00D434  6E09               	movwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 36048  00D436  6A0A               	clrf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 36049  00D438  5007               	movf	??_fatfs_lfn_cache_entry+2,w,c
 36050  00D43A  2609               	addwf	??_fatfs_lfn_cache_entry+4,f,c
 36051  00D43C  5008               	movf	??_fatfs_lfn_cache_entry+3,w,c
 36052  00D43E  220A               	addwfc	??_fatfs_lfn_cache_entry+5,f,c
 36053  00D440  5005               	movf	??_fatfs_lfn_cache_entry& (0+255),w,c
 36054  00D442  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 36055  00D444  CFF3 F00B          	movff	prodl,??_fatfs_lfn_cache_entry+6
 36056  00D448  CFF4 F00C          	movff	prodh,??_fatfs_lfn_cache_entry+7
 36057  00D44C  020A               	mulwf	(??_fatfs_lfn_cache_entry+5)& (0+255),c
 36058  00D44E  50F3               	movf	243,w,c
 36059  00D450  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 36060  00D452  5006               	movf	(??_fatfs_lfn_cache_entry+1)& (0+255),w,c
 36061  00D454  0209               	mulwf	(??_fatfs_lfn_cache_entry+4)& (0+255),c
 36062  00D456  50F3               	movf	243,w,c
 36063  00D458  260C               	addwf	(??_fatfs_lfn_cache_entry+7)& (0+255),f,c
 36064  00D45A  C001  F00D         	movff	fatfs_lfn_cache_entry@lfn,??_fatfs_lfn_cache_entry+8
 36065  00D45E  C002  F00E         	movff	fatfs_lfn_cache_entry@lfn+1,??_fatfs_lfn_cache_entry+9
 36066  00D462  500B               	movf	??_fatfs_lfn_cache_entry+6,w,c
 36067  00D464  260D               	addwf	??_fatfs_lfn_cache_entry+8,f,c
 36068  00D466  500C               	movf	??_fatfs_lfn_cache_entry+7,w,c
 36069  00D468  220E               	addwfc	??_fatfs_lfn_cache_entry+9,f,c
 36070  00D46A  500F               	movf	fatfs_lfn_cache_entry@i,w,c
 36071  00D46C  0D01               	mullw	1
 36072  00D46E  50F3               	movf	prodl,w,c
 36073  00D470  240D               	addwf	??_fatfs_lfn_cache_entry+8,w,c
 36074  00D472  6ED9               	movwf	fsr2l,c
 36075  00D474  50F4               	movf	prodh,w,c
 36076  00D476  200E               	addwfc	??_fatfs_lfn_cache_entry+9,w,c
 36077  00D478  6EDA               	movwf	fsr2h,c
 36078  00D47A  0E20               	movlw	32
 36079  00D47C  6EDF               	movwf	indf2,c
 36080  00D47E                     l9217:
 36081  00D47E  2A0F               	incf	fatfs_lfn_cache_entry@i,f,c
 36082  00D480                     L128:
 36083  00D480  0E04               	movlw	4
 36084  00D482  640F               	cpfsgt	fatfs_lfn_cache_entry@i,c
 36085  00D484  D7A5               	goto	l9213
 36086  00D486                     l938:
 36087  00D486  0012               	return	
 36088  00D488                     __end_of_fatfs_lfn_cache_entry:
 36089                           	opt stack 0
 36090                           tosu	equ	0xFFF
 36091                           tosh	equ	0xFFE
 36092                           tosl	equ	0xFFD
 36093                           pclath	equ	0xFFA
 36094                           tblptru	equ	0xFF8
 36095                           tblptrh	equ	0xFF7
 36096                           tblptrl	equ	0xFF6
 36097                           tablat	equ	0xFF5
 36098                           prodh	equ	0xFF4
 36099                           prodl	equ	0xFF3
 36100                           indf0	equ	0xFEF
 36101                           postinc0	equ	0xFEE
 36102                           fsr0h	equ	0xFEA
 36103                           fsr0l	equ	0xFE9
 36104                           wreg	equ	0xFE8
 36105                           indf1	equ	0xFE7
 36106                           postinc1	equ	0xFE6
 36107                           postdec1	equ	0xFE5
 36108                           fsr1h	equ	0xFE2
 36109                           fsr1l	equ	0xFE1
 36110                           indf2	equ	0xFDF
 36111                           postinc2	equ	0xFDE
 36112                           postdec2	equ	0xFDD
 36113                           fsr2h	equ	0xFDA
 36114                           fsr2l	equ	0xFD9
 36115                           status	equ	0xFD8
 36116                           
 36117 ;; *************** function _fatfs_entry_sfn_only *****************
 36118 ;; Defined at:
 36119 ;;		line 157 in file "fat_misc.c"
 36120 ;; Parameters:    Size  Location     Type
 36121 ;;  entry           2    0[COMRAM] PTR struct fat_dir_entry
 36122 ;;		 -> _fs.currentsector.sector(512), 
 36123 ;; Auto vars:     Size  Location     Type
 36124 ;;		None
 36125 ;; Return value:  Size  Location     Type
 36126 ;;                  2    0[COMRAM] int 
 36127 ;; Registers used:
 36128 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36129 ;; Tracked objects:
 36130 ;;		On entry : 0/0
 36131 ;;		On exit  : 0/0
 36132 ;;		Unchanged: 0/0
 36133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36137 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36138 ;;Total ram usage:        3 bytes
 36139 ;; Hardware stack levels used:    1
 36140 ;; This function calls:
 36141 ;;		Nothing
 36142 ;; This function is called by:
 36143 ;;		_fatfs_get_file_entry
 36144 ;;		_fatfs_sfn_exists
 36145 ;;		_fatfs_update_file_length
 36146 ;;		_fatfs_mark_file_deleted
 36147 ;;		_fatfs_list_directory_next
 36148 ;; This function uses a non-reentrant model
 36149 ;;
 36150                           
 36151                           	psect	text110
 36152  0049A0                     __ptext110:
 36153                           	opt stack 0
 36154  0049A0                     _fatfs_entry_sfn_only:
 36155                           	opt stack 27
 36156                           
 36157                           ;fat_misc.c: 159: if ( (entry->Attr!=0x0F) &&
 36158                           ;fat_misc.c: 160: (entry->Name[0]!=0x00) &&
 36159                           ;fat_misc.c: 161: (entry->Name[0]!=0xE5) &&
 36160                           ;fat_misc.c: 162: (entry->Attr!=0x08) &&
 36161                           ;fat_misc.c: 163: (!(entry->Attr&0x06)) )
 36162                           
 36163                           ;incstack = 0
 36164  0049A0  EE20 F00B          	lfsr	2,11
 36165  0049A4  5001               	movf	fatfs_entry_sfn_only@entry,w,c
 36166  0049A6  26D9               	addwf	fsr2l,f,c
 36167  0049A8  5002               	movf	fatfs_entry_sfn_only@entry+1,w,c
 36168  0049AA  22DA               	addwfc	fsr2h,f,c
 36169  0049AC  50DF               	movf	indf2,w,c
 36170  0049AE  0A0F               	xorlw	15
 36171  0049B0  E025               	bz	l9361
 36172  0049B2  C001  FFD9         	movff	fatfs_entry_sfn_only@entry,fsr2l
 36173  0049B6  C002  FFDA         	movff	fatfs_entry_sfn_only@entry+1,fsr2h
 36174  0049BA  50DF               	movf	indf2,w,c
 36175  0049BC  E01F               	bz	l9361
 36176  0049BE  C001  FFD9         	movff	fatfs_entry_sfn_only@entry,fsr2l
 36177  0049C2  C002  FFDA         	movff	fatfs_entry_sfn_only@entry+1,fsr2h
 36178  0049C6  50DF               	movf	indf2,w,c
 36179  0049C8  0AE5               	xorlw	229
 36180  0049CA  E018               	bz	l9361
 36181  0049CC  EE20 F00B          	lfsr	2,11
 36182  0049D0  5001               	movf	fatfs_entry_sfn_only@entry,w,c
 36183  0049D2  26D9               	addwf	fsr2l,f,c
 36184  0049D4  5002               	movf	fatfs_entry_sfn_only@entry+1,w,c
 36185  0049D6  22DA               	addwfc	fsr2h,f,c
 36186  0049D8  50DF               	movf	indf2,w,c
 36187  0049DA  0A08               	xorlw	8
 36188  0049DC  E00F               	bz	l9361
 36189  0049DE  EE20 F00B          	lfsr	2,11
 36190  0049E2  5001               	movf	fatfs_entry_sfn_only@entry,w,c
 36191  0049E4  26D9               	addwf	fsr2l,f,c
 36192  0049E6  5002               	movf	fatfs_entry_sfn_only@entry+1,w,c
 36193  0049E8  22DA               	addwfc	fsr2h,f,c
 36194  0049EA  50DF               	movf	indf2,w,c
 36195  0049EC  6E03               	movwf	??_fatfs_entry_sfn_only& (0+255),c
 36196  0049EE  0E06               	movlw	6
 36197  0049F0  1603               	andwf	??_fatfs_entry_sfn_only,f,c
 36198  0049F2  E104               	bnz	l9361
 36199                           
 36200                           ;fat_misc.c: 164: return 1;
 36201  0049F4  0E00               	movlw	0
 36202  0049F6  6E02               	movwf	?_fatfs_entry_sfn_only+1,c
 36203  0049F8  0E01               	movlw	1
 36204  0049FA  D002               	goto	L129
 36205  0049FC                     l9361:
 36206                           
 36207                           ;fat_misc.c: 165: else
 36208                           ;fat_misc.c: 166: return 0;
 36209  0049FC  0E00               	movlw	0
 36210  0049FE  6E02               	movwf	?_fatfs_entry_sfn_only+1,c
 36211  004A00                     L129:
 36212  004A00  6E01               	movwf	?_fatfs_entry_sfn_only,c
 36213  004A02  0012               	return	
 36214  004A04                     __end_of_fatfs_entry_sfn_only:
 36215                           	opt stack 0
 36216                           tosu	equ	0xFFF
 36217                           tosh	equ	0xFFE
 36218                           tosl	equ	0xFFD
 36219                           pclath	equ	0xFFA
 36220                           tblptru	equ	0xFF8
 36221                           tblptrh	equ	0xFF7
 36222                           tblptrl	equ	0xFF6
 36223                           tablat	equ	0xFF5
 36224                           prodh	equ	0xFF4
 36225                           prodl	equ	0xFF3
 36226                           indf0	equ	0xFEF
 36227                           postinc0	equ	0xFEE
 36228                           fsr0h	equ	0xFEA
 36229                           fsr0l	equ	0xFE9
 36230                           wreg	equ	0xFE8
 36231                           indf1	equ	0xFE7
 36232                           postinc1	equ	0xFE6
 36233                           postdec1	equ	0xFE5
 36234                           fsr1h	equ	0xFE2
 36235                           fsr1l	equ	0xFE1
 36236                           indf2	equ	0xFDF
 36237                           postinc2	equ	0xFDE
 36238                           postdec2	equ	0xFDD
 36239                           fsr2h	equ	0xFDA
 36240                           fsr2l	equ	0xFD9
 36241                           status	equ	0xFD8
 36242                           
 36243 ;; *************** function _fatfs_entry_lfn_text *****************
 36244 ;; Defined at:
 36245 ;;		line 114 in file "fat_misc.c"
 36246 ;; Parameters:    Size  Location     Type
 36247 ;;  entry           2    0[COMRAM] PTR struct fat_dir_entry
 36248 ;;		 -> _fs.currentsector.sector(512), 
 36249 ;; Auto vars:     Size  Location     Type
 36250 ;;		None
 36251 ;; Return value:  Size  Location     Type
 36252 ;;                  2    0[COMRAM] int 
 36253 ;; Registers used:
 36254 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36255 ;; Tracked objects:
 36256 ;;		On entry : 0/0
 36257 ;;		On exit  : 0/0
 36258 ;;		Unchanged: 0/0
 36259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36262 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36263 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36264 ;;Total ram usage:        3 bytes
 36265 ;; Hardware stack levels used:    1
 36266 ;; This function calls:
 36267 ;;		Nothing
 36268 ;; This function is called by:
 36269 ;;		_fatfs_get_file_entry
 36270 ;;		_fatfs_sfn_exists
 36271 ;;		_fatfs_update_file_length
 36272 ;;		_fatfs_mark_file_deleted
 36273 ;;		_fatfs_list_directory_next
 36274 ;;		_fatfs_find_free_dir_offset
 36275 ;; This function uses a non-reentrant model
 36276 ;;
 36277                           
 36278                           	psect	text111
 36279  003FF4                     __ptext111:
 36280                           	opt stack 0
 36281  003FF4                     _fatfs_entry_lfn_text:
 36282                           	opt stack 27
 36283                           
 36284                           ;fat_misc.c: 116: if ((entry->Attr & 0x0F) == 0x0F)
 36285                           
 36286                           ;incstack = 0
 36287  003FF4  EE20 F00B          	lfsr	2,11
 36288  003FF8  5001               	movf	fatfs_entry_lfn_text@entry,w,c
 36289  003FFA  26D9               	addwf	fsr2l,f,c
 36290  003FFC  5002               	movf	fatfs_entry_lfn_text@entry+1,w,c
 36291  003FFE  22DA               	addwfc	fsr2h,f,c
 36292  004000  50DF               	movf	indf2,w,c
 36293  004002  6E03               	movwf	??_fatfs_entry_lfn_text& (0+255),c
 36294  004004  0E0F               	movlw	15
 36295  004006  1603               	andwf	??_fatfs_entry_lfn_text,f,c
 36296  004008  5003               	movf	??_fatfs_entry_lfn_text,w,c
 36297  00400A  0A0F               	xorlw	15
 36298  00400C  E104               	bnz	l9165
 36299                           
 36300                           ;fat_misc.c: 117: return 1;
 36301  00400E  0E00               	movlw	0
 36302  004010  6E02               	movwf	?_fatfs_entry_lfn_text+1,c
 36303  004012  0E01               	movlw	1
 36304  004014  D002               	goto	L130
 36305  004016                     l9165:
 36306                           
 36307                           ;fat_misc.c: 118: else
 36308                           ;fat_misc.c: 119: return 0;
 36309  004016  0E00               	movlw	0
 36310  004018  6E02               	movwf	?_fatfs_entry_lfn_text+1,c
 36311  00401A                     L130:
 36312  00401A  6E01               	movwf	?_fatfs_entry_lfn_text,c
 36313  00401C  0012               	return	
 36314  00401E                     __end_of_fatfs_entry_lfn_text:
 36315                           	opt stack 0
 36316                           tosu	equ	0xFFF
 36317                           tosh	equ	0xFFE
 36318                           tosl	equ	0xFFD
 36319                           pclath	equ	0xFFA
 36320                           tblptru	equ	0xFF8
 36321                           tblptrh	equ	0xFF7
 36322                           tblptrl	equ	0xFF6
 36323                           tablat	equ	0xFF5
 36324                           prodh	equ	0xFF4
 36325                           prodl	equ	0xFF3
 36326                           indf0	equ	0xFEF
 36327                           postinc0	equ	0xFEE
 36328                           fsr0h	equ	0xFEA
 36329                           fsr0l	equ	0xFE9
 36330                           wreg	equ	0xFE8
 36331                           indf1	equ	0xFE7
 36332                           postinc1	equ	0xFE6
 36333                           postdec1	equ	0xFE5
 36334                           fsr1h	equ	0xFE2
 36335                           fsr1l	equ	0xFE1
 36336                           indf2	equ	0xFDF
 36337                           postinc2	equ	0xFDE
 36338                           postdec2	equ	0xFDD
 36339                           fsr2h	equ	0xFDA
 36340                           fsr2l	equ	0xFD9
 36341                           status	equ	0xFD8
 36342                           
 36343 ;; *************** function _fatfs_entry_lfn_invalid *****************
 36344 ;; Defined at:
 36345 ;;		line 126 in file "fat_misc.c"
 36346 ;; Parameters:    Size  Location     Type
 36347 ;;  entry           2    0[COMRAM] PTR struct fat_dir_entry
 36348 ;;		 -> _fs.currentsector.sector(512), 
 36349 ;; Auto vars:     Size  Location     Type
 36350 ;;		None
 36351 ;; Return value:  Size  Location     Type
 36352 ;;                  2    0[COMRAM] int 
 36353 ;; Registers used:
 36354 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36355 ;; Tracked objects:
 36356 ;;		On entry : 0/0
 36357 ;;		On exit  : 0/0
 36358 ;;		Unchanged: 0/0
 36359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36363 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36364 ;;Total ram usage:        3 bytes
 36365 ;; Hardware stack levels used:    1
 36366 ;; This function calls:
 36367 ;;		Nothing
 36368 ;; This function is called by:
 36369 ;;		_fatfs_get_file_entry
 36370 ;;		_fatfs_sfn_exists
 36371 ;;		_fatfs_update_file_length
 36372 ;;		_fatfs_mark_file_deleted
 36373 ;;		_fatfs_list_directory_next
 36374 ;; This function uses a non-reentrant model
 36375 ;;
 36376                           
 36377                           	psect	text112
 36378  004548                     __ptext112:
 36379                           	opt stack 0
 36380  004548                     _fatfs_entry_lfn_invalid:
 36381                           	opt stack 27
 36382                           
 36383                           ;fat_misc.c: 128: if ( (entry->Name[0]==0x00) ||
 36384                           ;fat_misc.c: 129: (entry->Name[0]==0xE5)||
 36385                           ;fat_misc.c: 130: (entry->Attr==0x08) ||
 36386                           ;fat_misc.c: 131: (entry->Attr & 0x06) )
 36387                           
 36388                           ;incstack = 0
 36389  004548  C001  FFD9         	movff	fatfs_entry_lfn_invalid@entry,fsr2l
 36390  00454C  C002  FFDA         	movff	fatfs_entry_lfn_invalid@entry+1,fsr2h
 36391  004550  50DF               	movf	indf2,w,c
 36392  004552  E01B               	bz	l9229
 36393  004554  C001  FFD9         	movff	fatfs_entry_lfn_invalid@entry,fsr2l
 36394  004558  C002  FFDA         	movff	fatfs_entry_lfn_invalid@entry+1,fsr2h
 36395  00455C  50DF               	movf	indf2,w,c
 36396  00455E  0AE5               	xorlw	229
 36397  004560  E014               	bz	l9229
 36398  004562  EE20 F00B          	lfsr	2,11
 36399  004566  5001               	movf	fatfs_entry_lfn_invalid@entry,w,c
 36400  004568  26D9               	addwf	fsr2l,f,c
 36401  00456A  5002               	movf	fatfs_entry_lfn_invalid@entry+1,w,c
 36402  00456C  22DA               	addwfc	fsr2h,f,c
 36403  00456E  50DF               	movf	indf2,w,c
 36404  004570  0A08               	xorlw	8
 36405  004572  E00B               	bz	l9229
 36406  004574  EE20 F00B          	lfsr	2,11
 36407  004578  5001               	movf	fatfs_entry_lfn_invalid@entry,w,c
 36408  00457A  26D9               	addwf	fsr2l,f,c
 36409  00457C  5002               	movf	fatfs_entry_lfn_invalid@entry+1,w,c
 36410  00457E  22DA               	addwfc	fsr2h,f,c
 36411  004580  50DF               	movf	indf2,w,c
 36412  004582  6E03               	movwf	??_fatfs_entry_lfn_invalid& (0+255),c
 36413  004584  0E06               	movlw	6
 36414  004586  1603               	andwf	??_fatfs_entry_lfn_invalid,f,c
 36415  004588  E004               	bz	l9235
 36416  00458A                     l9229:
 36417                           
 36418                           ;fat_misc.c: 132: return 1;
 36419  00458A  0E00               	movlw	0
 36420  00458C  6E02               	movwf	?_fatfs_entry_lfn_invalid+1,c
 36421  00458E  0E01               	movlw	1
 36422  004590  D002               	goto	L131
 36423  004592                     l9235:
 36424                           
 36425                           ;fat_misc.c: 133: else
 36426                           ;fat_misc.c: 134: return 0;
 36427  004592  0E00               	movlw	0
 36428  004594  6E02               	movwf	?_fatfs_entry_lfn_invalid+1,c
 36429  004596                     L131:
 36430  004596  6E01               	movwf	?_fatfs_entry_lfn_invalid,c
 36431  004598  0012               	return	
 36432  00459A                     __end_of_fatfs_entry_lfn_invalid:
 36433                           	opt stack 0
 36434                           tosu	equ	0xFFF
 36435                           tosh	equ	0xFFE
 36436                           tosl	equ	0xFFD
 36437                           pclath	equ	0xFFA
 36438                           tblptru	equ	0xFF8
 36439                           tblptrh	equ	0xFF7
 36440                           tblptrl	equ	0xFF6
 36441                           tablat	equ	0xFF5
 36442                           prodh	equ	0xFF4
 36443                           prodl	equ	0xFF3
 36444                           indf0	equ	0xFEF
 36445                           postinc0	equ	0xFEE
 36446                           fsr0h	equ	0xFEA
 36447                           fsr0l	equ	0xFE9
 36448                           wreg	equ	0xFE8
 36449                           indf1	equ	0xFE7
 36450                           postinc1	equ	0xFE6
 36451                           postdec1	equ	0xFE5
 36452                           fsr1h	equ	0xFE2
 36453                           fsr1l	equ	0xFE1
 36454                           indf2	equ	0xFDF
 36455                           postinc2	equ	0xFDE
 36456                           postdec2	equ	0xFDD
 36457                           fsr2h	equ	0xFDA
 36458                           fsr2l	equ	0xFD9
 36459                           status	equ	0xFD8
 36460                           
 36461 ;; *************** function _fatfs_entry_lfn_exists *****************
 36462 ;; Defined at:
 36463 ;;		line 141 in file "fat_misc.c"
 36464 ;; Parameters:    Size  Location     Type
 36465 ;;  lfn             2    0[COMRAM] PTR struct lfn_cache
 36466 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@lfn(52), 
 36467 ;;  entry           2    2[COMRAM] PTR struct fat_dir_entry
 36468 ;;		 -> _fs.currentsector.sector(512), 
 36469 ;; Auto vars:     Size  Location     Type
 36470 ;;		None
 36471 ;; Return value:  Size  Location     Type
 36472 ;;                  2    0[COMRAM] int 
 36473 ;; Registers used:
 36474 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36475 ;; Tracked objects:
 36476 ;;		On entry : 0/0
 36477 ;;		On exit  : 0/0
 36478 ;;		Unchanged: 0/0
 36479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36480 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36483 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36484 ;;Total ram usage:        5 bytes
 36485 ;; Hardware stack levels used:    1
 36486 ;; This function calls:
 36487 ;;		Nothing
 36488 ;; This function is called by:
 36489 ;;		_fatfs_get_file_entry
 36490 ;;		_fatfs_list_directory_next
 36491 ;; This function uses a non-reentrant model
 36492 ;;
 36493                           
 36494                           	psect	text113
 36495  004C96                     __ptext113:
 36496                           	opt stack 0
 36497  004C96                     _fatfs_entry_lfn_exists:
 36498                           	opt stack 27
 36499                           
 36500                           ;fat_misc.c: 143: if ( (entry->Attr!=0x0F) &&
 36501                           ;fat_misc.c: 144: (entry->Name[0]!=0x00) &&
 36502                           ;fat_misc.c: 145: (entry->Name[0]!=0xE5) &&
 36503                           ;fat_misc.c: 146: (entry->Attr!=0x08) &&
 36504                           ;fat_misc.c: 147: (!(entry->Attr&0x06)) &&
 36505                           ;fat_misc.c: 148: (lfn->no_of_strings) )
 36506                           
 36507                           ;incstack = 0
 36508  004C96  EE20 F00B          	lfsr	2,11
 36509  004C9A  5003               	movf	fatfs_entry_lfn_exists@entry,w,c
 36510  004C9C  26D9               	addwf	fsr2l,f,c
 36511  004C9E  5004               	movf	fatfs_entry_lfn_exists@entry+1,w,c
 36512  004CA0  22DA               	addwfc	fsr2h,f,c
 36513  004CA2  50DF               	movf	indf2,w,c
 36514  004CA4  0A0F               	xorlw	15
 36515  004CA6  E02D               	bz	l9257
 36516  004CA8  C003  FFD9         	movff	fatfs_entry_lfn_exists@entry,fsr2l
 36517  004CAC  C004  FFDA         	movff	fatfs_entry_lfn_exists@entry+1,fsr2h
 36518  004CB0  50DF               	movf	indf2,w,c
 36519  004CB2  E027               	bz	l9257
 36520  004CB4  C003  FFD9         	movff	fatfs_entry_lfn_exists@entry,fsr2l
 36521  004CB8  C004  FFDA         	movff	fatfs_entry_lfn_exists@entry+1,fsr2h
 36522  004CBC  50DF               	movf	indf2,w,c
 36523  004CBE  0AE5               	xorlw	229
 36524  004CC0  E020               	bz	l9257
 36525  004CC2  EE20 F00B          	lfsr	2,11
 36526  004CC6  5003               	movf	fatfs_entry_lfn_exists@entry,w,c
 36527  004CC8  26D9               	addwf	fsr2l,f,c
 36528  004CCA  5004               	movf	fatfs_entry_lfn_exists@entry+1,w,c
 36529  004CCC  22DA               	addwfc	fsr2h,f,c
 36530  004CCE  50DF               	movf	indf2,w,c
 36531  004CD0  0A08               	xorlw	8
 36532  004CD2  E017               	bz	l9257
 36533  004CD4  EE20 F00B          	lfsr	2,11
 36534  004CD8  5003               	movf	fatfs_entry_lfn_exists@entry,w,c
 36535  004CDA  26D9               	addwf	fsr2l,f,c
 36536  004CDC  5004               	movf	fatfs_entry_lfn_exists@entry+1,w,c
 36537  004CDE  22DA               	addwfc	fsr2h,f,c
 36538  004CE0  50DF               	movf	indf2,w,c
 36539  004CE2  6E05               	movwf	??_fatfs_entry_lfn_exists& (0+255),c
 36540  004CE4  0E06               	movlw	6
 36541  004CE6  1605               	andwf	??_fatfs_entry_lfn_exists,f,c
 36542  004CE8  E10C               	bnz	l9257
 36543  004CEA  EE20 F033          	lfsr	2,51
 36544  004CEE  5001               	movf	fatfs_entry_lfn_exists@lfn,w,c
 36545  004CF0  26D9               	addwf	fsr2l,f,c
 36546  004CF2  5002               	movf	fatfs_entry_lfn_exists@lfn+1,w,c
 36547  004CF4  22DA               	addwfc	fsr2h,f,c
 36548  004CF6  50DF               	movf	indf2,w,c
 36549  004CF8  E004               	bz	l9257
 36550                           
 36551                           ;fat_misc.c: 149: return 1;
 36552  004CFA  0E00               	movlw	0
 36553  004CFC  6E02               	movwf	?_fatfs_entry_lfn_exists+1,c
 36554  004CFE  0E01               	movlw	1
 36555  004D00  D002               	goto	L132
 36556  004D02                     l9257:
 36557                           
 36558                           ;fat_misc.c: 150: else
 36559                           ;fat_misc.c: 151: return 0;
 36560  004D02  0E00               	movlw	0
 36561  004D04  6E02               	movwf	?_fatfs_entry_lfn_exists+1,c
 36562  004D06                     L132:
 36563  004D06  6E01               	movwf	?_fatfs_entry_lfn_exists,c
 36564  004D08  0012               	return	
 36565  004D0A                     __end_of_fatfs_entry_lfn_exists:
 36566                           	opt stack 0
 36567                           tosu	equ	0xFFF
 36568                           tosh	equ	0xFFE
 36569                           tosl	equ	0xFFD
 36570                           pclath	equ	0xFFA
 36571                           tblptru	equ	0xFF8
 36572                           tblptrh	equ	0xFF7
 36573                           tblptrl	equ	0xFF6
 36574                           tablat	equ	0xFF5
 36575                           prodh	equ	0xFF4
 36576                           prodl	equ	0xFF3
 36577                           indf0	equ	0xFEF
 36578                           postinc0	equ	0xFEE
 36579                           fsr0h	equ	0xFEA
 36580                           fsr0l	equ	0xFE9
 36581                           wreg	equ	0xFE8
 36582                           indf1	equ	0xFE7
 36583                           postinc1	equ	0xFE6
 36584                           postdec1	equ	0xFE5
 36585                           fsr1h	equ	0xFE2
 36586                           fsr1l	equ	0xFE1
 36587                           indf2	equ	0xFDF
 36588                           postinc2	equ	0xFDE
 36589                           postdec2	equ	0xFDD
 36590                           fsr2h	equ	0xFDA
 36591                           fsr2l	equ	0xFD9
 36592                           status	equ	0xFD8
 36593                           
 36594 ;; *************** function _fatfs_entry_is_dir *****************
 36595 ;; Defined at:
 36596 ;;		line 172 in file "fat_misc.c"
 36597 ;; Parameters:    Size  Location     Type
 36598 ;;  entry           2    0[COMRAM] PTR struct fat_dir_entry
 36599 ;;		 -> _fs.currentsector.sector(512), _open_directory@sfEntry(32), 
 36600 ;; Auto vars:     Size  Location     Type
 36601 ;;		None
 36602 ;; Return value:  Size  Location     Type
 36603 ;;                  2    0[COMRAM] int 
 36604 ;; Registers used:
 36605 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36606 ;; Tracked objects:
 36607 ;;		On entry : 0/0
 36608 ;;		On exit  : 0/0
 36609 ;;		Unchanged: 0/0
 36610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36614 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36615 ;;Total ram usage:        3 bytes
 36616 ;; Hardware stack levels used:    1
 36617 ;; This function calls:
 36618 ;;		Nothing
 36619 ;; This function is called by:
 36620 ;;		_fatfs_list_directory_next
 36621 ;;		__open_directory
 36622 ;; This function uses a non-reentrant model
 36623 ;;
 36624                           
 36625                           	psect	text114
 36626  003F60                     __ptext114:
 36627                           	opt stack 0
 36628  003F60                     _fatfs_entry_is_dir:
 36629                           	opt stack 27
 36630                           
 36631                           ;fat_misc.c: 174: if (entry->Attr & 0x10)
 36632                           
 36633                           ;incstack = 0
 36634  003F60  EE20 F00B          	lfsr	2,11
 36635  003F64  5001               	movf	fatfs_entry_is_dir@entry,w,c
 36636  003F66  26D9               	addwf	fsr2l,f,c
 36637  003F68  5002               	movf	fatfs_entry_is_dir@entry+1,w,c
 36638  003F6A  22DA               	addwfc	fsr2h,f,c
 36639  003F6C  50DF               	movf	indf2,w,c
 36640  003F6E  6E03               	movwf	??_fatfs_entry_is_dir& (0+255),c
 36641  003F70  A803               	btfss	??_fatfs_entry_is_dir,4,c
 36642  003F72  D004               	goto	l9711
 36643                           
 36644                           ;fat_misc.c: 175: return 1;
 36645  003F74  0E00               	movlw	0
 36646  003F76  6E02               	movwf	?_fatfs_entry_is_dir+1,c
 36647  003F78  0E01               	movlw	1
 36648  003F7A  D002               	goto	L133
 36649  003F7C                     l9711:
 36650                           
 36651                           ;fat_misc.c: 176: else
 36652                           ;fat_misc.c: 177: return 0;
 36653  003F7C  0E00               	movlw	0
 36654  003F7E  6E02               	movwf	?_fatfs_entry_is_dir+1,c
 36655  003F80                     L133:
 36656  003F80  6E01               	movwf	?_fatfs_entry_is_dir,c
 36657  003F82  0012               	return	
 36658  003F84                     __end_of_fatfs_entry_is_dir:
 36659                           	opt stack 0
 36660                           tosu	equ	0xFFF
 36661                           tosh	equ	0xFFE
 36662                           tosl	equ	0xFFD
 36663                           pclath	equ	0xFFA
 36664                           tblptru	equ	0xFF8
 36665                           tblptrh	equ	0xFF7
 36666                           tblptrl	equ	0xFF6
 36667                           tablat	equ	0xFF5
 36668                           prodh	equ	0xFF4
 36669                           prodl	equ	0xFF3
 36670                           indf0	equ	0xFEF
 36671                           postinc0	equ	0xFEE
 36672                           fsr0h	equ	0xFEA
 36673                           fsr0l	equ	0xFE9
 36674                           wreg	equ	0xFE8
 36675                           indf1	equ	0xFE7
 36676                           postinc1	equ	0xFE6
 36677                           postdec1	equ	0xFE5
 36678                           fsr1h	equ	0xFE2
 36679                           fsr1l	equ	0xFE1
 36680                           indf2	equ	0xFDF
 36681                           postinc2	equ	0xFDE
 36682                           postdec2	equ	0xFDD
 36683                           fsr2h	equ	0xFDA
 36684                           fsr2l	equ	0xFD9
 36685                           status	equ	0xFD8
 36686                           
 36687 ;; *************** function __free_file *****************
 36688 ;; Defined at:
 36689 ;;		line 111 in file "fat_filelib.c"
 36690 ;; Parameters:    Size  Location     Type
 36691 ;;  file            2   14[COMRAM] PTR struct sFL_FILE
 36692 ;;		 -> RAM(3967), NULL(0), 
 36693 ;; Auto vars:     Size  Location     Type
 36694 ;;		None
 36695 ;; Return value:  Size  Location     Type
 36696 ;;		None               void
 36697 ;; Registers used:
 36698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36699 ;; Tracked objects:
 36700 ;;		On entry : 0/0
 36701 ;;		On exit  : 0/0
 36702 ;;		Unchanged: 0/0
 36703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36708 ;;Total ram usage:        2 bytes
 36709 ;; Hardware stack levels used:    1
 36710 ;; Hardware stack levels required when called:    3
 36711 ;; This function calls:
 36712 ;;		fat_list@fat_list_insert_last
 36713 ;;		fat_list@fat_list_remove
 36714 ;; This function is called by:
 36715 ;;		__create_directory
 36716 ;;		__open_file
 36717 ;;		__create_file
 36718 ;;		_fl_fclose
 36719 ;; This function uses a non-reentrant model
 36720 ;;
 36721                           
 36722                           	psect	text115
 36723  004132                     __ptext115:
 36724                           	opt stack 0
 36725  004132                     __free_file:
 36726                           	opt stack 22
 36727                           
 36728                           ;fat_filelib.c: 114: fat_list_remove(&_open_file_list, &file->list_node);
 36729                           
 36730                           ;incstack = 0
 36731  004132  0E01               	movlw	high __open_file_list
 36732  004134  6E02               	movwf	fat_list@fat_list_remove@list+1,c
 36733  004136  0101               	movlb	1	; () banked
 36734  004138  0EDA               	movlw	low __open_file_list
 36735  00413A  6E01               	movwf	fat_list@fat_list_remove@list,c
 36736  00413C  0E40               	movlw	64
 36737  00413E  240F               	addwf	__free_file@file,w,c
 36738  004140  6E03               	movwf	fat_list@fat_list_remove@node,c
 36739  004142  0E02               	movlw	2
 36740  004144  2010               	addwfc	__free_file@file+1,w,c
 36741  004146  6E04               	movwf	fat_list@fat_list_remove@node+1,c
 36742  004148  ECEA  F02B         	call	fat_list@fat_list_remove	;wreg free
 36743                           
 36744                           ;fat_filelib.c: 117: fat_list_insert_last(&_free_file_list, &file->list_node);
 36745  00414C  0E01               	movlw	high __free_file_list
 36746  00414E  6E0C               	movwf	fat_list@fat_list_insert_last@list+1,c
 36747  004150  0101               	movlb	1	; () banked
 36748  004152  0ED6               	movlw	low __free_file_list
 36749  004154  6E0B               	movwf	fat_list@fat_list_insert_last@list,c
 36750  004156  0E40               	movlw	64
 36751  004158  240F               	addwf	__free_file@file,w,c
 36752  00415A  6E0D               	movwf	fat_list@fat_list_insert_last@node,c
 36753  00415C  0E02               	movlw	2
 36754  00415E  2010               	addwfc	__free_file@file+1,w,c
 36755  004160  6E0E               	movwf	fat_list@fat_list_insert_last@node+1,c
 36756  004162  EF29  F022         	goto	fat_list@fat_list_insert_last	;wreg free
 36757  004166                     __end_of__free_file:
 36758                           	opt stack 0
 36759                           tosu	equ	0xFFF
 36760                           tosh	equ	0xFFE
 36761                           tosl	equ	0xFFD
 36762                           pclath	equ	0xFFA
 36763                           tblptru	equ	0xFF8
 36764                           tblptrh	equ	0xFF7
 36765                           tblptrl	equ	0xFF6
 36766                           tablat	equ	0xFF5
 36767                           prodh	equ	0xFF4
 36768                           prodl	equ	0xFF3
 36769                           indf0	equ	0xFEF
 36770                           postinc0	equ	0xFEE
 36771                           fsr0h	equ	0xFEA
 36772                           fsr0l	equ	0xFE9
 36773                           wreg	equ	0xFE8
 36774                           indf1	equ	0xFE7
 36775                           postinc1	equ	0xFE6
 36776                           postdec1	equ	0xFE5
 36777                           fsr1h	equ	0xFE2
 36778                           fsr1l	equ	0xFE1
 36779                           indf2	equ	0xFDF
 36780                           postinc2	equ	0xFDE
 36781                           postdec2	equ	0xFDD
 36782                           fsr2h	equ	0xFDA
 36783                           fsr2l	equ	0xFD9
 36784                           status	equ	0xFD8
 36785                           
 36786 ;; *************** function __check_file_open *****************
 36787 ;; Defined at:
 36788 ;;		line 88 in file "fat_filelib.c"
 36789 ;; Parameters:    Size  Location     Type
 36790 ;;  file            2   36[COMRAM] PTR struct sFL_FILE
 36791 ;;		 -> RAM(3967), NULL(0), 
 36792 ;; Auto vars:     Size  Location     Type
 36793 ;;  openFile        2   38[COMRAM] PTR struct sFL_FILE
 36794 ;;		 -> RAM(3967), NULL(0), 
 36795 ;;  node            2   40[COMRAM] PTR struct fat_node
 36796 ;;		 -> fatfs_add_file_entry@shortEntry(32), _files(1160), _open_file@sfEntry(32), _fs(1095), 
 36797 ;;		 -> RAM(3967), NULL(0), 
 36798 ;; Return value:  Size  Location     Type
 36799 ;;                  2   36[COMRAM] int 
 36800 ;; Registers used:
 36801 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36802 ;; Tracked objects:
 36803 ;;		On entry : 0/0
 36804 ;;		On exit  : 0/0
 36805 ;;		Unchanged: 0/0
 36806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36808 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36810 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36811 ;;Total ram usage:        6 bytes
 36812 ;; Hardware stack levels used:    1
 36813 ;; Hardware stack levels required when called:    2
 36814 ;; This function calls:
 36815 ;;		_fatfs_compare_names
 36816 ;; This function is called by:
 36817 ;;		__create_directory
 36818 ;;		__open_file
 36819 ;;		__create_file
 36820 ;; This function uses a non-reentrant model
 36821 ;;
 36822                           
 36823                           	psect	text116
 36824  0055F8                     __ptext116:
 36825                           	opt stack 0
 36826  0055F8                     __check_file_open:
 36827                           	opt stack 23
 36828                           
 36829                           ;fat_filelib.c: 90: struct fat_node *node;
 36830                           ;fat_filelib.c: 93: for ((node) = (&_open_file_list)->head; (node); (node) = (node)->nex
      +                          t)
 36831                           
 36832                           ;incstack = 0
 36833  0055F8  C1DB  F02A         	movff	__open_file_list+1,__check_file_open@node+1
 36834  0055FC  0101               	movlb	1	; () banked
 36835  0055FE  C1DA  F029         	movff	__open_file_list,__check_file_open@node
 36836  005602  D042               	goto	l10505
 36837  005604                     l10489:
 36838                           
 36839                           ;fat_filelib.c: 94: {
 36840                           ;fat_filelib.c: 95: FL_FILE* openFile = node ? ((FL_FILE *)((char *)(node)-(char*)(&((FL
      +                          _FILE *)0)->list_node))) : 0;
 36841  005604  502A               	movf	__check_file_open@node+1,w,c
 36842  005606  1029               	iorwf	__check_file_open@node,w,c
 36843  005608  E103               	bnz	l10493
 36844  00560A  6A28               	clrf	__check_file_open@openFile+1,c
 36845  00560C  6A27               	clrf	__check_file_open@openFile,c
 36846  00560E  D006               	goto	l431
 36847  005610                     l10493:
 36848  005610  0EC0               	movlw	192
 36849  005612  2429               	addwf	__check_file_open@node,w,c
 36850  005614  6E27               	movwf	__check_file_open@openFile,c
 36851  005616  0EFD               	movlw	253
 36852  005618  202A               	addwfc	__check_file_open@node+1,w,c
 36853  00561A  6E28               	movwf	__check_file_open@openFile+1,c
 36854  00561C                     l431:
 36855                           
 36856                           ;fat_filelib.c: 98: if (openFile != file)
 36857  00561C  5026               	movf	__check_file_open@file+1,w,c
 36858  00561E  1828               	xorwf	__check_file_open@openFile+1,w,c
 36859  005620  E102               	bnz	u11825
 36860  005622  5025               	movf	__check_file_open@file,w,c
 36861  005624  1827               	xorwf	__check_file_open@openFile,w,c
 36862  005626                     u11825:
 36863  005626  E026               	bz	l10503
 36864                           
 36865                           ;fat_filelib.c: 99: {
 36866                           ;fat_filelib.c: 101: if ( (fatfs_compare_names(openFile->path,file->path)) && (fatfs_com
      +                          pare_names(openFile->filename,file->filename)) )
 36867  005628  0E12               	movlw	18
 36868  00562A  2427               	addwf	__check_file_open@openFile,w,c
 36869  00562C  6E13               	movwf	fatfs_compare_names@strA,c
 36870  00562E  0E00               	movlw	0
 36871  005630  2028               	addwfc	__check_file_open@openFile+1,w,c
 36872  005632  6E14               	movwf	fatfs_compare_names@strA+1,c
 36873  005634  0E12               	movlw	18
 36874  005636  2425               	addwf	__check_file_open@file,w,c
 36875  005638  6E15               	movwf	fatfs_compare_names@strB,c
 36876  00563A  0E00               	movlw	0
 36877  00563C  2026               	addwfc	__check_file_open@file+1,w,c
 36878  00563E  6E16               	movwf	fatfs_compare_names@strB+1,c
 36879  005640  EC70  F037         	call	_fatfs_compare_names	;wreg free
 36880  005644  5014               	movf	?_fatfs_compare_names+1,w,c
 36881  005646  1013               	iorwf	?_fatfs_compare_names,w,c
 36882  005648  E015               	bz	l10503
 36883  00564A  0E1C               	movlw	28
 36884  00564C  2427               	addwf	__check_file_open@openFile,w,c
 36885  00564E  6E13               	movwf	fatfs_compare_names@strA,c
 36886  005650  0E00               	movlw	0
 36887  005652  2028               	addwfc	__check_file_open@openFile+1,w,c
 36888  005654  6E14               	movwf	fatfs_compare_names@strA+1,c
 36889  005656  0E1C               	movlw	28
 36890  005658  2425               	addwf	__check_file_open@file,w,c
 36891  00565A  6E15               	movwf	fatfs_compare_names@strB,c
 36892  00565C  0E00               	movlw	0
 36893  00565E  2026               	addwfc	__check_file_open@file+1,w,c
 36894  005660  6E16               	movwf	fatfs_compare_names@strB+1,c
 36895  005662  EC70  F037         	call	_fatfs_compare_names	;wreg free
 36896  005666  5014               	movf	?_fatfs_compare_names+1,w,c
 36897  005668  1013               	iorwf	?_fatfs_compare_names,w,c
 36898  00566A  E004               	bz	l10503
 36899                           
 36900                           ;fat_filelib.c: 102: return 1;
 36901  00566C  0E00               	movlw	0
 36902  00566E  6E26               	movwf	?__check_file_open+1,c
 36903  005670  0E01               	movlw	1
 36904  005672  D00F               	goto	L134
 36905  005674                     l10503:
 36906  005674  EE20 F002          	lfsr	2,2
 36907  005678  5029               	movf	__check_file_open@node,w,c
 36908  00567A  26D9               	addwf	fsr2l,f,c
 36909  00567C  502A               	movf	__check_file_open@node+1,w,c
 36910  00567E  22DA               	addwfc	fsr2h,f,c
 36911  005680  CFDE F029          	movff	postinc2,__check_file_open@node
 36912  005684  CFDD F02A          	movff	postdec2,__check_file_open@node+1
 36913  005688                     l10505:
 36914  005688  502A               	movf	__check_file_open@node+1,w,c
 36915  00568A  1029               	iorwf	__check_file_open@node,w,c
 36916  00568C  E1BB               	bnz	l10489
 36917                           
 36918                           ;fat_filelib.c: 103: }
 36919                           ;fat_filelib.c: 104: }
 36920                           ;fat_filelib.c: 106: return 0;
 36921  00568E  0E00               	movlw	0
 36922  005690  6E26               	movwf	?__check_file_open+1,c
 36923  005692                     L134:
 36924  005692  6E25               	movwf	?__check_file_open,c
 36925  005694  0012               	return	
 36926  005696                     __end_of__check_file_open:
 36927                           	opt stack 0
 36928                           tosu	equ	0xFFF
 36929                           tosh	equ	0xFFE
 36930                           tosl	equ	0xFFD
 36931                           pclath	equ	0xFFA
 36932                           tblptru	equ	0xFF8
 36933                           tblptrh	equ	0xFF7
 36934                           tblptrl	equ	0xFF6
 36935                           tablat	equ	0xFF5
 36936                           prodh	equ	0xFF4
 36937                           prodl	equ	0xFF3
 36938                           indf0	equ	0xFEF
 36939                           postinc0	equ	0xFEE
 36940                           fsr0h	equ	0xFEA
 36941                           fsr0l	equ	0xFE9
 36942                           wreg	equ	0xFE8
 36943                           indf1	equ	0xFE7
 36944                           postinc1	equ	0xFE6
 36945                           postdec1	equ	0xFE5
 36946                           fsr1h	equ	0xFE2
 36947                           fsr1l	equ	0xFE1
 36948                           indf2	equ	0xFDF
 36949                           postinc2	equ	0xFDE
 36950                           postdec2	equ	0xFDD
 36951                           fsr2h	equ	0xFDA
 36952                           fsr2l	equ	0xFD9
 36953                           status	equ	0xFD8
 36954                           
 36955 ;; *************** function _fatfs_compare_names *****************
 36956 ;; Defined at:
 36957 ;;		line 260 in file "fat_string.c"
 36958 ;; Parameters:    Size  Location     Type
 36959 ;;  strA            2   18[COMRAM] PTR unsigned char 
 36960 ;;		 -> lfn.String(50), lfn.String(50), RAM(3967), fatfs_list_directory_next@lfn(52), 
 36961 ;;		 -> fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0), 
 36962 ;;  strB            2   20[COMRAM] PTR unsigned char 
 36963 ;;		 -> _open_directory@currentfolder(10), RAM(3967), NULL(0), 
 36964 ;; Auto vars:     Size  Location     Type
 36965 ;;  ext1Pos         2   34[COMRAM] int 
 36966 ;;  ext2Pos         2   32[COMRAM] int 
 36967 ;;  file1Len        2   30[COMRAM] int 
 36968 ;;  ext1            2   28[COMRAM] PTR unsigned char 
 36969 ;;		 -> lfn.String(50), lfn.String(50), RAM(3967), fatfs_list_directory_next@lfn(52), 
 36970 ;;		 -> fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0), 
 36971 ;;  file2Len        2   26[COMRAM] int 
 36972 ;;  ext2            2   24[COMRAM] PTR unsigned char 
 36973 ;;		 -> _open_directory@currentfolder(10), RAM(3967), NULL(0), 
 36974 ;; Return value:  Size  Location     Type
 36975 ;;                  2   18[COMRAM] int 
 36976 ;; Registers used:
 36977 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36978 ;; Tracked objects:
 36979 ;;		On entry : 0/0
 36980 ;;		On exit  : 0/0
 36981 ;;		Unchanged: 0/0
 36982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36984 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36985 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36986 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36987 ;;Total ram usage:       18 bytes
 36988 ;; Hardware stack levels used:    1
 36989 ;; Hardware stack levels required when called:    1
 36990 ;; This function calls:
 36991 ;;		_FileString_GetExtension
 36992 ;;		_FileString_StrCmpNoCase
 36993 ;;		_FileString_TrimLength
 36994 ;;		_strlen
 36995 ;; This function is called by:
 36996 ;;		_fatfs_get_file_entry
 36997 ;;		__check_file_open
 36998 ;; This function uses a non-reentrant model
 36999 ;;
 37000                           
 37001                           	psect	text117
 37002  006EE0                     __ptext117:
 37003                           	opt stack 0
 37004  006EE0                     _fatfs_compare_names:
 37005                           	opt stack 25
 37006                           
 37007                           ;fat_string.c: 262: char *ext1 = (0);
 37008                           
 37009                           ;incstack = 0
 37010  006EE0  0E00               	movlw	0
 37011  006EE2  6A1E               	clrf	fatfs_compare_names@ext1+1,c
 37012  006EE4  6A1D               	clrf	fatfs_compare_names@ext1,c
 37013                           
 37014                           ;fat_string.c: 263: char *ext2 = (0);
 37015  006EE6  6A1A               	clrf	fatfs_compare_names@ext2+1,c
 37016  006EE8  6A19               	clrf	fatfs_compare_names@ext2,c
 37017                           
 37018                           ;fat_string.c: 264: int ext1Pos, ext2Pos;
 37019                           ;fat_string.c: 265: int file1Len, file2Len;
 37020                           ;fat_string.c: 268: ext1Pos = FileString_GetExtension(strA);
 37021  006EEA  C014  F002         	movff	fatfs_compare_names@strA+1,FileString_GetExtension@str+1
 37022  006EEE  C013  F001         	movff	fatfs_compare_names@strA,FileString_GetExtension@str
 37023  006EF2  EC52  F022         	call	_FileString_GetExtension	;wreg free
 37024  006EF6  C001  F023         	movff	?_FileString_GetExtension,fatfs_compare_names@ext1Pos
 37025  006EFA  C002  F024         	movff	?_FileString_GetExtension+1,fatfs_compare_names@ext1Pos+1
 37026                           
 37027                           ;fat_string.c: 269: ext2Pos = FileString_GetExtension(strB);
 37028  006EFE  C016  F002         	movff	fatfs_compare_names@strB+1,FileString_GetExtension@str+1
 37029  006F02  C015  F001         	movff	fatfs_compare_names@strB,FileString_GetExtension@str
 37030  006F06  EC52  F022         	call	_FileString_GetExtension	;wreg free
 37031  006F0A  C001  F021         	movff	?_FileString_GetExtension,fatfs_compare_names@ext2Pos
 37032  006F0E  C002  F022         	movff	?_FileString_GetExtension+1,fatfs_compare_names@ext2Pos+1
 37033                           
 37034                           ;fat_string.c: 274: if ((ext1Pos==-1) && (ext2Pos!=-1))
 37035  006F12  2823               	incf	fatfs_compare_names@ext1Pos,w,c
 37036  006F14  B4D8               	btfsc	status,2,c
 37037  006F16  2824               	incf	fatfs_compare_names@ext1Pos+1,w,c
 37038  006F18  E105               	bnz	l9287
 37039  006F1A  2821               	incf	fatfs_compare_names@ext2Pos,w,c
 37040  006F1C  B4D8               	btfsc	status,2,c
 37041  006F1E  2822               	incf	fatfs_compare_names@ext2Pos+1,w,c
 37042  006F20  E001 D0A4          	bnz	u10080
 37043  006F24                     l9287:
 37044                           
 37045                           ;fat_string.c: 276: if ((ext2Pos==-1) && (ext1Pos!=-1))
 37046  006F24  2821               	incf	fatfs_compare_names@ext2Pos,w,c
 37047  006F26  B4D8               	btfsc	status,2,c
 37048  006F28  2822               	incf	fatfs_compare_names@ext2Pos+1,w,c
 37049  006F2A  E105               	bnz	l9295
 37050  006F2C  2823               	incf	fatfs_compare_names@ext1Pos,w,c
 37051  006F2E  B4D8               	btfsc	status,2,c
 37052  006F30  2824               	incf	fatfs_compare_names@ext1Pos+1,w,c
 37053  006F32  E001 D09B          	bnz	u10080
 37054  006F36                     l9295:
 37055                           
 37056                           ;fat_string.c: 280: if (ext1Pos!=-1)
 37057  006F36  2823               	incf	fatfs_compare_names@ext1Pos,w,c
 37058  006F38  B4D8               	btfsc	status,2,c
 37059  006F3A  2824               	incf	fatfs_compare_names@ext1Pos+1,w,c
 37060  006F3C  E050               	bz	l9311
 37061                           
 37062                           ;fat_string.c: 281: {
 37063                           ;fat_string.c: 283: ext1 = strA+ext1Pos+1;
 37064  006F3E  C013  F017         	movff	fatfs_compare_names@strA,??_fatfs_compare_names
 37065  006F42  C014  F018         	movff	fatfs_compare_names@strA+1,??_fatfs_compare_names+1
 37066  006F46  5023               	movf	fatfs_compare_names@ext1Pos,w,c
 37067  006F48  2617               	addwf	??_fatfs_compare_names,f,c
 37068  006F4A  5024               	movf	fatfs_compare_names@ext1Pos+1,w,c
 37069  006F4C  2218               	addwfc	??_fatfs_compare_names+1,f,c
 37070  006F4E  2817               	incf	??_fatfs_compare_names,w,c
 37071  006F50  6E1D               	movwf	fatfs_compare_names@ext1,c
 37072  006F52  0E00               	movlw	0
 37073  006F54  2018               	addwfc	??_fatfs_compare_names+1,w,c
 37074  006F56  6E1E               	movwf	fatfs_compare_names@ext1+1,c
 37075                           
 37076                           ;fat_string.c: 284: ext2 = strB+ext2Pos+1;
 37077  006F58  C015  F017         	movff	fatfs_compare_names@strB,??_fatfs_compare_names
 37078  006F5C  C016  F018         	movff	fatfs_compare_names@strB+1,??_fatfs_compare_names+1
 37079  006F60  5021               	movf	fatfs_compare_names@ext2Pos,w,c
 37080  006F62  2617               	addwf	??_fatfs_compare_names,f,c
 37081  006F64  5022               	movf	fatfs_compare_names@ext2Pos+1,w,c
 37082  006F66  2218               	addwfc	??_fatfs_compare_names+1,f,c
 37083  006F68  2817               	incf	??_fatfs_compare_names,w,c
 37084  006F6A  6E19               	movwf	fatfs_compare_names@ext2,c
 37085  006F6C  0E00               	movlw	0
 37086  006F6E  2018               	addwfc	??_fatfs_compare_names+1,w,c
 37087  006F70  6E1A               	movwf	fatfs_compare_names@ext2+1,c
 37088                           
 37089                           ;fat_string.c: 287: if (strlen(ext1) != strlen(ext2))
 37090  006F72  C01E  F002         	movff	fatfs_compare_names@ext1+1,strlen@s+1
 37091  006F76  C01D  F001         	movff	fatfs_compare_names@ext1,strlen@s
 37092  006F7A  EC7B  F022         	call	_strlen	;wreg free
 37093  006F7E  C001  F017         	movff	?_strlen,??_fatfs_compare_names
 37094  006F82  C002  F018         	movff	?_strlen+1,??_fatfs_compare_names+1
 37095  006F86  C01A  F002         	movff	fatfs_compare_names@ext2+1,strlen@s+1
 37096  006F8A  C019  F001         	movff	fatfs_compare_names@ext2,strlen@s
 37097  006F8E  EC7B  F022         	call	_strlen	;wreg free
 37098  006F92  5002               	movf	?_strlen+1,w,c
 37099  006F94  1818               	xorwf	??_fatfs_compare_names+1,w,c
 37100  006F96  E102               	bnz	u10055
 37101  006F98  5001               	movf	?_strlen,w,c
 37102  006F9A  1817               	xorwf	??_fatfs_compare_names,w,c
 37103  006F9C                     u10055:
 37104  006F9C  E167               	bnz	u10080
 37105                           
 37106                           ;fat_string.c: 291: if (FileString_StrCmpNoCase(ext1, ext2, (int)strlen(ext1))!=0)
 37107                           
 37108                           ;fat_string.c: 288: return 0;
 37109  006F9E  C01E  F008         	movff	fatfs_compare_names@ext1+1,FileString_StrCmpNoCase@s1+1
 37110  006FA2  C01D  F007         	movff	fatfs_compare_names@ext1,FileString_StrCmpNoCase@s1
 37111  006FA6  C01A  F00A         	movff	fatfs_compare_names@ext2+1,FileString_StrCmpNoCase@s2+1
 37112  006FAA  C019  F009         	movff	fatfs_compare_names@ext2,FileString_StrCmpNoCase@s2
 37113  006FAE  C01E  F002         	movff	fatfs_compare_names@ext1+1,strlen@s+1
 37114  006FB2  C01D  F001         	movff	fatfs_compare_names@ext1,strlen@s
 37115  006FB6  EC7B  F022         	call	_strlen	;wreg free
 37116  006FBA  C001  F00B         	movff	?_strlen,FileString_StrCmpNoCase@n
 37117  006FBE  C002  F00C         	movff	?_strlen+1,FileString_StrCmpNoCase@n+1
 37118  006FC2  ECAF  F02A         	call	_FileString_StrCmpNoCase	;wreg free
 37119  006FC6  5008               	movf	?_FileString_StrCmpNoCase+1,w,c
 37120  006FC8  1007               	iorwf	?_FileString_StrCmpNoCase,w,c
 37121  006FCA  E150               	bnz	u10080
 37122                           
 37123                           ;fat_string.c: 295: file1Len = ext1Pos;
 37124                           
 37125                           ;fat_string.c: 292: return 0;
 37126  006FCC  C023  F01F         	movff	fatfs_compare_names@ext1Pos,fatfs_compare_names@file1Len
 37127  006FD0  C024  F020         	movff	fatfs_compare_names@ext1Pos+1,fatfs_compare_names@file1Len+1
 37128                           
 37129                           ;fat_string.c: 296: file2Len = ext2Pos;
 37130  006FD4  C021  F01B         	movff	fatfs_compare_names@ext2Pos,fatfs_compare_names@file2Len
 37131  006FD8  C022  F01C         	movff	fatfs_compare_names@ext2Pos+1,fatfs_compare_names@file2Len+1
 37132                           
 37133                           ;fat_string.c: 297: }
 37134  006FDC  D014               	goto	l9313
 37135  006FDE                     l9311:
 37136                           
 37137                           ;fat_string.c: 299: else
 37138                           ;fat_string.c: 300: {
 37139                           ;fat_string.c: 302: file1Len = (int)strlen(strA);
 37140  006FDE  C014  F002         	movff	fatfs_compare_names@strA+1,strlen@s+1
 37141  006FE2  C013  F001         	movff	fatfs_compare_names@strA,strlen@s
 37142  006FE6  EC7B  F022         	call	_strlen	;wreg free
 37143  006FEA  C001  F01F         	movff	?_strlen,fatfs_compare_names@file1Len
 37144  006FEE  C002  F020         	movff	?_strlen+1,fatfs_compare_names@file1Len+1
 37145                           
 37146                           ;fat_string.c: 303: file2Len = (int)strlen(strB);
 37147  006FF2  C016  F002         	movff	fatfs_compare_names@strB+1,strlen@s+1
 37148  006FF6  C015  F001         	movff	fatfs_compare_names@strB,strlen@s
 37149  006FFA  EC7B  F022         	call	_strlen	;wreg free
 37150  006FFE  C001  F01B         	movff	?_strlen,fatfs_compare_names@file2Len
 37151  007002  C002  F01C         	movff	?_strlen+1,fatfs_compare_names@file2Len+1
 37152  007006                     l9313:
 37153                           
 37154                           ;fat_string.c: 304: }
 37155                           ;fat_string.c: 307: file1Len = FileString_TrimLength(strA, file1Len);
 37156  007006  C014  F002         	movff	fatfs_compare_names@strA+1,FileString_TrimLength@str+1
 37157  00700A  C013  F001         	movff	fatfs_compare_names@strA,FileString_TrimLength@str
 37158  00700E  C01F  F003         	movff	fatfs_compare_names@file1Len,FileString_TrimLength@strLen
 37159  007012  C020  F004         	movff	fatfs_compare_names@file1Len+1,FileString_TrimLength@strLen+1
 37160  007016  EC6B  F025         	call	_FileString_TrimLength	;wreg free
 37161  00701A  C001  F01F         	movff	?_FileString_TrimLength,fatfs_compare_names@file1Len
 37162  00701E  C002  F020         	movff	?_FileString_TrimLength+1,fatfs_compare_names@file1Len+1
 37163                           
 37164                           ;fat_string.c: 308: file2Len = FileString_TrimLength(strB, file2Len);
 37165  007022  C016  F002         	movff	fatfs_compare_names@strB+1,FileString_TrimLength@str+1
 37166  007026  C015  F001         	movff	fatfs_compare_names@strB,FileString_TrimLength@str
 37167  00702A  C01B  F003         	movff	fatfs_compare_names@file2Len,FileString_TrimLength@strLen
 37168  00702E  C01C  F004         	movff	fatfs_compare_names@file2Len+1,FileString_TrimLength@strLen+1
 37169  007032  EC6B  F025         	call	_FileString_TrimLength	;wreg free
 37170  007036  C001  F01B         	movff	?_FileString_TrimLength,fatfs_compare_names@file2Len
 37171  00703A  C002  F01C         	movff	?_FileString_TrimLength+1,fatfs_compare_names@file2Len+1
 37172                           
 37173                           ;fat_string.c: 311: if (file1Len!=file2Len)
 37174  00703E  501C               	movf	fatfs_compare_names@file2Len+1,w,c
 37175  007040  1820               	xorwf	fatfs_compare_names@file1Len+1,w,c
 37176  007042  E102               	bnz	u10075
 37177  007044  501B               	movf	fatfs_compare_names@file2Len,w,c
 37178  007046  181F               	xorwf	fatfs_compare_names@file1Len,w,c
 37179  007048                     u10075:
 37180  007048  E111               	bnz	u10080
 37181                           
 37182                           ;fat_string.c: 315: if (FileString_StrCmpNoCase(strA, strB, file1Len)!=0)
 37183                           
 37184                           ;fat_string.c: 312: return 0;
 37185  00704A  C014  F008         	movff	fatfs_compare_names@strA+1,FileString_StrCmpNoCase@s1+1
 37186  00704E  C013  F007         	movff	fatfs_compare_names@strA,FileString_StrCmpNoCase@s1
 37187  007052  C016  F00A         	movff	fatfs_compare_names@strB+1,FileString_StrCmpNoCase@s2+1
 37188  007056  C015  F009         	movff	fatfs_compare_names@strB,FileString_StrCmpNoCase@s2
 37189  00705A  C01F  F00B         	movff	fatfs_compare_names@file1Len,FileString_StrCmpNoCase@n
 37190  00705E  C020  F00C         	movff	fatfs_compare_names@file1Len+1,FileString_StrCmpNoCase@n+1
 37191  007062  ECAF  F02A         	call	_FileString_StrCmpNoCase	;wreg free
 37192  007066  5008               	movf	?_FileString_StrCmpNoCase+1,w,c
 37193  007068  1007               	iorwf	?_FileString_StrCmpNoCase,w,c
 37194  00706A  E003               	bz	l9331
 37195  00706C                     u10080:
 37196                           
 37197                           ;fat_string.c: 316: return 0;
 37198  00706C  0E00               	movlw	0
 37199  00706E  6E14               	movwf	?_fatfs_compare_names+1,c
 37200  007070  D003               	goto	L135
 37201  007072                     l9331:
 37202                           
 37203                           ;fat_string.c: 317: else
 37204                           ;fat_string.c: 318: return 1;
 37205  007072  0E00               	movlw	0
 37206  007074  6E14               	movwf	?_fatfs_compare_names+1,c
 37207  007076  0E01               	movlw	1
 37208  007078                     L135:
 37209  007078  6E13               	movwf	?_fatfs_compare_names,c
 37210  00707A  0012               	return	
 37211  00707C                     __end_of_fatfs_compare_names:
 37212                           	opt stack 0
 37213                           tosu	equ	0xFFF
 37214                           tosh	equ	0xFFE
 37215                           tosl	equ	0xFFD
 37216                           pclath	equ	0xFFA
 37217                           tblptru	equ	0xFF8
 37218                           tblptrh	equ	0xFF7
 37219                           tblptrl	equ	0xFF6
 37220                           tablat	equ	0xFF5
 37221                           prodh	equ	0xFF4
 37222                           prodl	equ	0xFF3
 37223                           indf0	equ	0xFEF
 37224                           postinc0	equ	0xFEE
 37225                           fsr0h	equ	0xFEA
 37226                           fsr0l	equ	0xFE9
 37227                           wreg	equ	0xFE8
 37228                           indf1	equ	0xFE7
 37229                           postinc1	equ	0xFE6
 37230                           postdec1	equ	0xFE5
 37231                           fsr1h	equ	0xFE2
 37232                           fsr1l	equ	0xFE1
 37233                           indf2	equ	0xFDF
 37234                           postinc2	equ	0xFDE
 37235                           postdec2	equ	0xFDD
 37236                           fsr2h	equ	0xFDA
 37237                           fsr2l	equ	0xFD9
 37238                           status	equ	0xFD8
 37239                           
 37240 ;; *************** function _strlen *****************
 37241 ;; Defined at:
 37242 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strlen.c"
 37243 ;; Parameters:    Size  Location     Type
 37244 ;;  s               2    0[COMRAM] PTR const unsigned char 
 37245 ;;		 -> lfn.String(50), lfn.String(50), STR_67(2), STR_63(2), 
 37246 ;;		 -> STR_60(6), STR_43(2), STR_36(2), STR_29(2), 
 37247 ;;		 -> s(17), STR_23(2), STR_21(2), STR_18(2), 
 37248 ;;		 -> m(30), fatfs_lfn_generate_tail@tail_str(12), STR_10(2), _open_directory@currentfolder(10), 
 37249 ;;		 -> RAM(3967), fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(
      +52), 
 37250 ;;		 -> NULL(0), 
 37251 ;; Auto vars:     Size  Location     Type
 37252 ;;  cp              2    4[COMRAM] PTR const unsigned char 
 37253 ;;		 -> lfn.String(50), lfn.String(50), STR_67(2), STR_63(2), 
 37254 ;;		 -> STR_60(6), STR_43(2), STR_36(2), STR_29(2), 
 37255 ;;		 -> s(17), STR_23(2), STR_21(2), STR_18(2), 
 37256 ;;		 -> m(30), fatfs_lfn_generate_tail@tail_str(12), STR_10(2), _open_directory@currentfolder(10), 
 37257 ;;		 -> RAM(3967), fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(
      +52), 
 37258 ;;		 -> NULL(0), 
 37259 ;; Return value:  Size  Location     Type
 37260 ;;                  2    0[COMRAM] unsigned int 
 37261 ;; Registers used:
 37262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 37263 ;; Tracked objects:
 37264 ;;		On entry : 0/0
 37265 ;;		On exit  : 0/0
 37266 ;;		Unchanged: 0/0
 37267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37269 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37270 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37271 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37272 ;;Total ram usage:        6 bytes
 37273 ;; Hardware stack levels used:    1
 37274 ;; This function calls:
 37275 ;;		Nothing
 37276 ;; This function is called by:
 37277 ;;		_fl_fopen
 37278 ;;		_fatfs_create_boot_sector
 37279 ;;		_fatfs_lfn_entries_required
 37280 ;;		_fatfs_filename_to_lfn
 37281 ;;		_fatfs_lfn_create_sfn
 37282 ;;		_fatfs_lfn_generate_tail
 37283 ;;		_fatfs_get_substring
 37284 ;;		_fatfs_split_path
 37285 ;;		_fatfs_compare_names
 37286 ;;		_fl_fputs
 37287 ;; This function uses a non-reentrant model
 37288 ;;
 37289                           
 37290                           	psect	text118
 37291  0044F6                     __ptext118:
 37292                           	opt stack 0
 37293  0044F6                     _strlen:
 37294                           	opt stack 26
 37295                           
 37296                           ;incstack = 0
 37297  0044F6  C002  F006         	movff	strlen@s+1,strlen@cp+1
 37298  0044FA  C001  F005         	movff	strlen@s,strlen@cp
 37299  0044FE  D002               	goto	l8873
 37300  004500                     l8871:
 37301  004500  4A05               	infsnz	strlen@cp,f,c
 37302  004502  2A06               	incf	strlen@cp+1,f,c
 37303  004504                     l8873:
 37304  004504  C005  FFF6         	movff	strlen@cp,tblptrl
 37305  004508  C006  FFF7         	movff	strlen@cp+1,tblptrh
 37306  00450C  0E00               	movlw	low (__mediumconst shr (0+16))
 37307  00450E  6EF8               	movwf	tblptru,c
 37308  004510  0E0F               	movlw	(high __ramtop+-1)
 37309  004512  64F7               	cpfsgt	tblptrh,c
 37310  004514  D003               	bra	u9307
 37311  004516  0008               	tblrd		*
 37312  004518  50F5               	movf	tablat,w,c
 37313  00451A  D005               	bra	u9300
 37314  00451C                     u9307:
 37315  00451C  CFF6 FFE9          	movff	tblptrl,fsr0l
 37316  004520  CFF7 FFEA          	movff	tblptrh,fsr0h
 37317  004524  50EF               	movf	indf0,w,c
 37318  004526                     u9300:
 37319  004526  0900               	iorlw	0
 37320  004528  E1EB               	bnz	l8871
 37321  00452A  C001  F003         	movff	strlen@s,??_strlen
 37322  00452E  C002  F004         	movff	strlen@s+1,??_strlen+1
 37323  004532  1E03               	comf	??_strlen,f,c
 37324  004534  1E04               	comf	??_strlen+1,f,c
 37325  004536  4A03               	infsnz	??_strlen,f,c
 37326  004538  2A04               	incf	??_strlen+1,f,c
 37327  00453A  5005               	movf	strlen@cp,w,c
 37328  00453C  2403               	addwf	??_strlen,w,c
 37329  00453E  6E01               	movwf	?_strlen,c
 37330  004540  5006               	movf	strlen@cp+1,w,c
 37331  004542  2004               	addwfc	??_strlen+1,w,c
 37332  004544  6E02               	movwf	?_strlen+1,c
 37333  004546  0012               	return	
 37334  004548                     __end_of_strlen:
 37335                           	opt stack 0
 37336                           tosu	equ	0xFFF
 37337                           tosh	equ	0xFFE
 37338                           tosl	equ	0xFFD
 37339                           pclath	equ	0xFFA
 37340                           tblptru	equ	0xFF8
 37341                           tblptrh	equ	0xFF7
 37342                           tblptrl	equ	0xFF6
 37343                           tablat	equ	0xFF5
 37344                           prodh	equ	0xFF4
 37345                           prodl	equ	0xFF3
 37346                           indf0	equ	0xFEF
 37347                           postinc0	equ	0xFEE
 37348                           fsr0h	equ	0xFEA
 37349                           fsr0l	equ	0xFE9
 37350                           wreg	equ	0xFE8
 37351                           indf1	equ	0xFE7
 37352                           postinc1	equ	0xFE6
 37353                           postdec1	equ	0xFE5
 37354                           fsr1h	equ	0xFE2
 37355                           fsr1l	equ	0xFE1
 37356                           indf2	equ	0xFDF
 37357                           postinc2	equ	0xFDE
 37358                           postdec2	equ	0xFDD
 37359                           fsr2h	equ	0xFDA
 37360                           fsr2l	equ	0xFD9
 37361                           status	equ	0xFD8
 37362                           
 37363 ;; *************** function _FileString_TrimLength *****************
 37364 ;; Defined at:
 37365 ;;		line 237 in file "fat_string.c"
 37366 ;; Parameters:    Size  Location     Type
 37367 ;;  str             2    0[COMRAM] PTR unsigned char 
 37368 ;;		 -> lfn.String(50), lfn.String(50), _open_directory@currentfolder(10), RAM(3967), 
 37369 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0
      +), 
 37370 ;;  strLen          2    2[COMRAM] int 
 37371 ;; Auto vars:     Size  Location     Type
 37372 ;;  strSrc          2    8[COMRAM] PTR unsigned char 
 37373 ;;		 -> lfn.String(50), lfn.String(50), _open_directory@currentfolder(10), RAM(3967), 
 37374 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0
      +), 
 37375 ;;  length          2    6[COMRAM] int 
 37376 ;; Return value:  Size  Location     Type
 37377 ;;                  2    0[COMRAM] int 
 37378 ;; Registers used:
 37379 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37380 ;; Tracked objects:
 37381 ;;		On entry : 0/0
 37382 ;;		On exit  : 0/0
 37383 ;;		Unchanged: 0/0
 37384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37386 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37388 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37389 ;;Total ram usage:       10 bytes
 37390 ;; Hardware stack levels used:    1
 37391 ;; This function calls:
 37392 ;;		Nothing
 37393 ;; This function is called by:
 37394 ;;		_fatfs_compare_names
 37395 ;; This function uses a non-reentrant model
 37396 ;;
 37397                           
 37398                           	psect	text119
 37399  004AD6                     __ptext119:
 37400                           	opt stack 0
 37401  004AD6                     _FileString_TrimLength:
 37402                           	opt stack 25
 37403                           
 37404                           ;fat_string.c: 239: int length = strLen;
 37405                           
 37406                           ;incstack = 0
 37407  004AD6  C003  F007         	movff	FileString_TrimLength@strLen,FileString_TrimLength@length
 37408  004ADA  C004  F008         	movff	FileString_TrimLength@strLen+1,FileString_TrimLength@length+1
 37409                           
 37410                           ;fat_string.c: 240: char *strSrc = str+strLen-1;
 37411  004ADE  C001  F005         	movff	FileString_TrimLength@str,??_FileString_TrimLength
 37412  004AE2  C002  F006         	movff	FileString_TrimLength@str+1,??_FileString_TrimLength+1
 37413  004AE6  5003               	movf	FileString_TrimLength@strLen,w,c
 37414  004AE8  2605               	addwf	??_FileString_TrimLength,f,c
 37415  004AEA  5004               	movf	FileString_TrimLength@strLen+1,w,c
 37416  004AEC  2206               	addwfc	??_FileString_TrimLength+1,f,c
 37417  004AEE  0EFF               	movlw	255
 37418  004AF0  2405               	addwf	??_FileString_TrimLength,w,c
 37419  004AF2  6E09               	movwf	FileString_TrimLength@strSrc,c
 37420  004AF4  0EFF               	movlw	255
 37421  004AF6  2006               	addwfc	??_FileString_TrimLength+1,w,c
 37422  004AF8  6E0A               	movwf	FileString_TrimLength@strSrc+1,c
 37423                           
 37424                           ;fat_string.c: 243: while (strLen != 0)
 37425  004AFA  D01B               	goto	l8931
 37426  004AFC                     l8925:
 37427                           
 37428                           ;fat_string.c: 244: {
 37429                           ;fat_string.c: 245: if (*strSrc == ' ')
 37430  004AFC  0E20               	movlw	32
 37431  004AFE  C009  FFD9         	movff	FileString_TrimLength@strSrc,fsr2l
 37432  004B02  C00A  FFDA         	movff	FileString_TrimLength@strSrc+1,fsr2h
 37433  004B06  62DF               	cpfseq	indf2,c
 37434  004B08  D017               	goto	l1121
 37435                           
 37436                           ;fat_string.c: 246: length = (int)(strSrc - str);
 37437  004B0A  C001  F005         	movff	FileString_TrimLength@str,??_FileString_TrimLength
 37438  004B0E  C002  F006         	movff	FileString_TrimLength@str+1,??_FileString_TrimLength+1
 37439  004B12  1E05               	comf	??_FileString_TrimLength,f,c
 37440  004B14  1E06               	comf	??_FileString_TrimLength+1,f,c
 37441  004B16  4A05               	infsnz	??_FileString_TrimLength,f,c
 37442  004B18  2A06               	incf	??_FileString_TrimLength+1,f,c
 37443  004B1A  5009               	movf	FileString_TrimLength@strSrc,w,c
 37444  004B1C  2405               	addwf	??_FileString_TrimLength,w,c
 37445  004B1E  6E07               	movwf	FileString_TrimLength@length,c
 37446  004B20  500A               	movf	FileString_TrimLength@strSrc+1,w,c
 37447  004B22  2006               	addwfc	??_FileString_TrimLength+1,w,c
 37448  004B24  6E08               	movwf	FileString_TrimLength@length+1,c
 37449                           
 37450                           ;fat_string.c: 250: strSrc--;
 37451                           
 37452                           ;fat_string.c: 247: else
 37453                           ;fat_string.c: 248: break;
 37454  004B26  0609               	decf	FileString_TrimLength@strSrc,f,c
 37455  004B28  A0D8               	btfss	status,0,c
 37456  004B2A  060A               	decf	FileString_TrimLength@strSrc+1,f,c
 37457                           
 37458                           ;fat_string.c: 251: strLen--;
 37459  004B2C  0603               	decf	FileString_TrimLength@strLen,f,c
 37460  004B2E  A0D8               	btfss	status,0,c
 37461  004B30  0604               	decf	FileString_TrimLength@strLen+1,f,c
 37462  004B32                     l8931:
 37463  004B32  5004               	movf	FileString_TrimLength@strLen+1,w,c
 37464  004B34  1003               	iorwf	FileString_TrimLength@strLen,w,c
 37465  004B36  E1E2               	bnz	l8925
 37466  004B38                     l1121:
 37467                           
 37468                           ;fat_string.c: 252: }
 37469                           ;fat_string.c: 254: return length;
 37470  004B38  C007  F001         	movff	FileString_TrimLength@length,?_FileString_TrimLength
 37471  004B3C  C008  F002         	movff	FileString_TrimLength@length+1,?_FileString_TrimLength+1
 37472  004B40  0012               	return	
 37473  004B42                     __end_of_FileString_TrimLength:
 37474                           	opt stack 0
 37475                           tosu	equ	0xFFF
 37476                           tosh	equ	0xFFE
 37477                           tosl	equ	0xFFD
 37478                           pclath	equ	0xFFA
 37479                           tblptru	equ	0xFF8
 37480                           tblptrh	equ	0xFF7
 37481                           tblptrl	equ	0xFF6
 37482                           tablat	equ	0xFF5
 37483                           prodh	equ	0xFF4
 37484                           prodl	equ	0xFF3
 37485                           indf0	equ	0xFEF
 37486                           postinc0	equ	0xFEE
 37487                           fsr0h	equ	0xFEA
 37488                           fsr0l	equ	0xFE9
 37489                           wreg	equ	0xFE8
 37490                           indf1	equ	0xFE7
 37491                           postinc1	equ	0xFE6
 37492                           postdec1	equ	0xFE5
 37493                           fsr1h	equ	0xFE2
 37494                           fsr1l	equ	0xFE1
 37495                           indf2	equ	0xFDF
 37496                           postinc2	equ	0xFDE
 37497                           postdec2	equ	0xFDD
 37498                           fsr2h	equ	0xFDA
 37499                           fsr2l	equ	0xFD9
 37500                           status	equ	0xFD8
 37501                           
 37502 ;; *************** function _FileString_StrCmpNoCase *****************
 37503 ;; Defined at:
 37504 ;;		line 182 in file "fat_string.c"
 37505 ;; Parameters:    Size  Location     Type
 37506 ;;  s1              2    6[COMRAM] PTR unsigned char 
 37507 ;;		 -> lfn.String(50), lfn.String(50), RAM(3967), fatfs_list_directory_next@lfn(52), 
 37508 ;;		 -> fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0), 
 37509 ;;  s2              2    8[COMRAM] PTR unsigned char 
 37510 ;;		 -> _open_directory@currentfolder(10), RAM(3967), NULL(0), 
 37511 ;;  n               2   10[COMRAM] int 
 37512 ;; Auto vars:     Size  Location     Type
 37513 ;;  diff            2   14[COMRAM] int 
 37514 ;;  b               1   17[COMRAM] unsigned char 
 37515 ;;  a               1   16[COMRAM] unsigned char 
 37516 ;; Return value:  Size  Location     Type
 37517 ;;                  2    6[COMRAM] int 
 37518 ;; Registers used:
 37519 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37520 ;; Tracked objects:
 37521 ;;		On entry : 0/0
 37522 ;;		On exit  : 0/0
 37523 ;;		Unchanged: 0/0
 37524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37525 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37526 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37527 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37528 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37529 ;;Total ram usage:       12 bytes
 37530 ;; Hardware stack levels used:    1
 37531 ;; This function calls:
 37532 ;;		Nothing
 37533 ;; This function is called by:
 37534 ;;		_fatfs_compare_names
 37535 ;; This function uses a non-reentrant model
 37536 ;;
 37537                           
 37538                           	psect	text120
 37539  00555E                     __ptext120:
 37540                           	opt stack 0
 37541  00555E                     _FileString_StrCmpNoCase:
 37542                           	opt stack 25
 37543                           
 37544                           ;fat_string.c: 184: int diff;
 37545                           ;fat_string.c: 185: char a,b;
 37546                           ;fat_string.c: 187: while (n--)
 37547                           
 37548                           ;incstack = 0
 37549  00555E  D041               	goto	l8903
 37550  005560                     l8881:
 37551                           
 37552                           ;fat_string.c: 188: {
 37553                           ;fat_string.c: 189: a = *s1;
 37554  005560  C007  FFD9         	movff	FileString_StrCmpNoCase@s1,fsr2l
 37555  005564  C008  FFDA         	movff	FileString_StrCmpNoCase@s1+1,fsr2h
 37556  005568  50DF               	movf	indf2,w,c
 37557  00556A  6E11               	movwf	FileString_StrCmpNoCase@a,c
 37558                           
 37559                           ;fat_string.c: 190: b = *s2;
 37560  00556C  C009  FFD9         	movff	FileString_StrCmpNoCase@s2,fsr2l
 37561  005570  C00A  FFDA         	movff	FileString_StrCmpNoCase@s2+1,fsr2h
 37562  005574  50DF               	movf	indf2,w,c
 37563  005576  6E12               	movwf	FileString_StrCmpNoCase@b,c
 37564                           
 37565                           ;fat_string.c: 193: if ((a>='A') && (a<='Z'))
 37566  005578  0E40               	movlw	64
 37567  00557A  6411               	cpfsgt	FileString_StrCmpNoCase@a,c
 37568  00557C  D005               	goto	l8889
 37569  00557E  0E5B               	movlw	91
 37570  005580  5C11               	subwf	FileString_StrCmpNoCase@a,w,c
 37571  005582  E202               	bc	l8889
 37572                           
 37573                           ;fat_string.c: 194: a+= 32;
 37574  005584  0E20               	movlw	32
 37575  005586  2611               	addwf	FileString_StrCmpNoCase@a,f,c
 37576  005588                     l8889:
 37577                           
 37578                           ;fat_string.c: 195: if ((b>='A') && (b<='Z'))
 37579  005588  0E40               	movlw	64
 37580  00558A  6412               	cpfsgt	FileString_StrCmpNoCase@b,c
 37581  00558C  D005               	goto	l1101
 37582  00558E  0E5B               	movlw	91
 37583  005590  5C12               	subwf	FileString_StrCmpNoCase@b,w,c
 37584  005592  E202               	bc	l1101
 37585                           
 37586                           ;fat_string.c: 196: b+= 32;
 37587  005594  0E20               	movlw	32
 37588  005596  2612               	addwf	FileString_StrCmpNoCase@b,f,c
 37589  005598                     l1101:
 37590                           
 37591                           ;fat_string.c: 198: diff = a - b;
 37592  005598  5012               	movf	FileString_StrCmpNoCase@b,w,c
 37593  00559A  6E0D               	movwf	??_FileString_StrCmpNoCase& (0+255),c
 37594  00559C  6A0E               	clrf	(??_FileString_StrCmpNoCase+1)& (0+255),c
 37595  00559E  1E0D               	comf	??_FileString_StrCmpNoCase,f,c
 37596  0055A0  1E0E               	comf	??_FileString_StrCmpNoCase+1,f,c
 37597  0055A2  4A0D               	infsnz	??_FileString_StrCmpNoCase,f,c
 37598  0055A4  2A0E               	incf	??_FileString_StrCmpNoCase+1,f,c
 37599  0055A6  5011               	movf	FileString_StrCmpNoCase@a,w,c
 37600  0055A8  240D               	addwf	??_FileString_StrCmpNoCase,w,c
 37601  0055AA  6E0F               	movwf	FileString_StrCmpNoCase@diff,c
 37602  0055AC  0E00               	movlw	0
 37603  0055AE  200E               	addwfc	??_FileString_StrCmpNoCase+1,w,c
 37604  0055B0  6E10               	movwf	FileString_StrCmpNoCase@diff+1,c
 37605                           
 37606                           ;fat_string.c: 201: if (diff)
 37607  0055B2  5010               	movf	FileString_StrCmpNoCase@diff+1,w,c
 37608  0055B4  100F               	iorwf	FileString_StrCmpNoCase@diff,w,c
 37609  0055B6  E005               	bz	l8897
 37610                           
 37611                           ;fat_string.c: 202: return diff;
 37612  0055B8  C00F  F007         	movff	FileString_StrCmpNoCase@diff,?_FileString_StrCmpNoCase
 37613  0055BC  C010  F008         	movff	FileString_StrCmpNoCase@diff+1,?_FileString_StrCmpNoCase+1
 37614  0055C0  D01A               	goto	l1103
 37615  0055C2                     l8897:
 37616                           
 37617                           ;fat_string.c: 205: if ( (*s1 == 0) || (*s2 == 0) )
 37618  0055C2  C007  FFD9         	movff	FileString_StrCmpNoCase@s1,fsr2l
 37619  0055C6  C008  FFDA         	movff	FileString_StrCmpNoCase@s1+1,fsr2h
 37620  0055CA  50DF               	movf	indf2,w,c
 37621  0055CC  E011               	bz	l8905
 37622  0055CE  C009  FFD9         	movff	FileString_StrCmpNoCase@s2,fsr2l
 37623  0055D2  C00A  FFDA         	movff	FileString_StrCmpNoCase@s2+1,fsr2h
 37624  0055D6  50DF               	movf	indf2,w,c
 37625  0055D8  E00B               	bz	l8905
 37626                           
 37627                           ;fat_string.c: 208: s1++;
 37628                           
 37629                           ;fat_string.c: 206: break;
 37630  0055DA  4A07               	infsnz	FileString_StrCmpNoCase@s1,f,c
 37631  0055DC  2A08               	incf	FileString_StrCmpNoCase@s1+1,f,c
 37632                           
 37633                           ;fat_string.c: 209: s2++;
 37634  0055DE  4A09               	infsnz	FileString_StrCmpNoCase@s2,f,c
 37635  0055E0  2A0A               	incf	FileString_StrCmpNoCase@s2+1,f,c
 37636  0055E2                     l8903:
 37637  0055E2  060B               	decf	FileString_StrCmpNoCase@n,f,c
 37638  0055E4  A0D8               	btfss	status,0,c
 37639  0055E6  060C               	decf	FileString_StrCmpNoCase@n+1,f,c
 37640  0055E8  280B               	incf	FileString_StrCmpNoCase@n& (0+255),w,c
 37641  0055EA  B4D8               	btfsc	status,2,c
 37642  0055EC  280C               	incf	(FileString_StrCmpNoCase@n+1)& (0+255),w,c
 37643  0055EE  E1B8               	bnz	l8881
 37644  0055F0                     l8905:
 37645                           
 37646                           ;fat_string.c: 210: }
 37647                           ;fat_string.c: 211: return 0;
 37648  0055F0  0E00               	movlw	0
 37649  0055F2  6E08               	movwf	?_FileString_StrCmpNoCase+1,c
 37650  0055F4  6E07               	movwf	?_FileString_StrCmpNoCase,c
 37651  0055F6                     l1103:
 37652  0055F6  0012               	return	
 37653  0055F8                     __end_of_FileString_StrCmpNoCase:
 37654                           	opt stack 0
 37655                           tosu	equ	0xFFF
 37656                           tosh	equ	0xFFE
 37657                           tosl	equ	0xFFD
 37658                           pclath	equ	0xFFA
 37659                           tblptru	equ	0xFF8
 37660                           tblptrh	equ	0xFF7
 37661                           tblptrl	equ	0xFF6
 37662                           tablat	equ	0xFF5
 37663                           prodh	equ	0xFF4
 37664                           prodl	equ	0xFF3
 37665                           indf0	equ	0xFEF
 37666                           postinc0	equ	0xFEE
 37667                           fsr0h	equ	0xFEA
 37668                           fsr0l	equ	0xFE9
 37669                           wreg	equ	0xFE8
 37670                           indf1	equ	0xFE7
 37671                           postinc1	equ	0xFE6
 37672                           postdec1	equ	0xFE5
 37673                           fsr1h	equ	0xFE2
 37674                           fsr1l	equ	0xFE1
 37675                           indf2	equ	0xFDF
 37676                           postinc2	equ	0xFDE
 37677                           postdec2	equ	0xFDD
 37678                           fsr2h	equ	0xFDA
 37679                           fsr2l	equ	0xFD9
 37680                           status	equ	0xFD8
 37681                           
 37682 ;; *************** function _FileString_GetExtension *****************
 37683 ;; Defined at:
 37684 ;;		line 217 in file "fat_string.c"
 37685 ;; Parameters:    Size  Location     Type
 37686 ;;  str             2    0[COMRAM] PTR unsigned char 
 37687 ;;		 -> lfn.String(50), lfn.String(50), _open_directory@currentfolder(10), RAM(3967), 
 37688 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0
      +), 
 37689 ;; Auto vars:     Size  Location     Type
 37690 ;;  strSrc          2    6[COMRAM] PTR unsigned char 
 37691 ;;		 -> lfn.String(50), lfn.String(50), _open_directory@currentfolder(10), RAM(3967), 
 37692 ;;		 -> fatfs_list_directory_next@lfn(52), fatfs_get_file_entry@short_filename(13), fatfs_get_file_entry@lfn(52), NULL(0
      +), 
 37693 ;;  dotPos          2    4[COMRAM] int 
 37694 ;; Return value:  Size  Location     Type
 37695 ;;                  2    0[COMRAM] int 
 37696 ;; Registers used:
 37697 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37698 ;; Tracked objects:
 37699 ;;		On entry : 0/0
 37700 ;;		On exit  : 0/0
 37701 ;;		Unchanged: 0/0
 37702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37704 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37706 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37707 ;;Total ram usage:        8 bytes
 37708 ;; Hardware stack levels used:    1
 37709 ;; This function calls:
 37710 ;;		Nothing
 37711 ;; This function is called by:
 37712 ;;		_fatfs_compare_names
 37713 ;;		_fatfs_get_extension
 37714 ;; This function uses a non-reentrant model
 37715 ;;
 37716                           
 37717                           	psect	text121
 37718  0044A4                     __ptext121:
 37719                           	opt stack 0
 37720  0044A4                     _FileString_GetExtension:
 37721                           	opt stack 25
 37722                           
 37723                           ;fat_string.c: 219: int dotPos = -1;
 37724                           
 37725                           ;incstack = 0
 37726  0044A4  6805               	setf	FileString_GetExtension@dotPos,c
 37727  0044A6  6806               	setf	FileString_GetExtension@dotPos+1,c
 37728                           
 37729                           ;fat_string.c: 220: char *strSrc = str;
 37730  0044A8  C002  F008         	movff	FileString_GetExtension@str+1,FileString_GetExtension@strSrc+1
 37731  0044AC  C001  F007         	movff	FileString_GetExtension@str,FileString_GetExtension@strSrc
 37732                           
 37733                           ;fat_string.c: 223: while (*strSrc)
 37734  0044B0  D017               	goto	l8919
 37735  0044B2                     l8913:
 37736                           
 37737                           ;fat_string.c: 224: {
 37738                           ;fat_string.c: 225: if (*strSrc=='.')
 37739  0044B2  0E2E               	movlw	46
 37740  0044B4  C007  FFD9         	movff	FileString_GetExtension@strSrc,fsr2l
 37741  0044B8  C008  FFDA         	movff	FileString_GetExtension@strSrc+1,fsr2h
 37742  0044BC  62DF               	cpfseq	indf2,c
 37743  0044BE  D00E               	goto	l8917
 37744                           
 37745                           ;fat_string.c: 226: dotPos = (int)(strSrc-str);
 37746  0044C0  C001  F003         	movff	FileString_GetExtension@str,??_FileString_GetExtension
 37747  0044C4  C002  F004         	movff	FileString_GetExtension@str+1,??_FileString_GetExtension+1
 37748  0044C8  1E03               	comf	??_FileString_GetExtension,f,c
 37749  0044CA  1E04               	comf	??_FileString_GetExtension+1,f,c
 37750  0044CC  4A03               	infsnz	??_FileString_GetExtension,f,c
 37751  0044CE  2A04               	incf	??_FileString_GetExtension+1,f,c
 37752  0044D0  5007               	movf	FileString_GetExtension@strSrc,w,c
 37753  0044D2  2403               	addwf	??_FileString_GetExtension,w,c
 37754  0044D4  6E05               	movwf	FileString_GetExtension@dotPos,c
 37755  0044D6  5008               	movf	FileString_GetExtension@strSrc+1,w,c
 37756  0044D8  2004               	addwfc	??_FileString_GetExtension+1,w,c
 37757  0044DA  6E06               	movwf	FileString_GetExtension@dotPos+1,c
 37758  0044DC                     l8917:
 37759                           
 37760                           ;fat_string.c: 228: strSrc++;
 37761  0044DC  4A07               	infsnz	FileString_GetExtension@strSrc,f,c
 37762  0044DE  2A08               	incf	FileString_GetExtension@strSrc+1,f,c
 37763  0044E0                     l8919:
 37764  0044E0  C007  FFD9         	movff	FileString_GetExtension@strSrc,fsr2l
 37765  0044E4  C008  FFDA         	movff	FileString_GetExtension@strSrc+1,fsr2h
 37766  0044E8  50DF               	movf	indf2,w,c
 37767  0044EA  E1E3               	bnz	l8913
 37768                           
 37769                           ;fat_string.c: 229: }
 37770                           ;fat_string.c: 231: return dotPos;
 37771  0044EC  C005  F001         	movff	FileString_GetExtension@dotPos,?_FileString_GetExtension
 37772  0044F0  C006  F002         	movff	FileString_GetExtension@dotPos+1,?_FileString_GetExtension+1
 37773  0044F4  0012               	return	
 37774  0044F6                     __end_of_FileString_GetExtension:
 37775                           	opt stack 0
 37776                           tosu	equ	0xFFF
 37777                           tosh	equ	0xFFE
 37778                           tosl	equ	0xFFD
 37779                           pclath	equ	0xFFA
 37780                           tblptru	equ	0xFF8
 37781                           tblptrh	equ	0xFF7
 37782                           tblptrl	equ	0xFF6
 37783                           tablat	equ	0xFF5
 37784                           prodh	equ	0xFF4
 37785                           prodl	equ	0xFF3
 37786                           indf0	equ	0xFEF
 37787                           postinc0	equ	0xFEE
 37788                           fsr0h	equ	0xFEA
 37789                           fsr0l	equ	0xFE9
 37790                           wreg	equ	0xFE8
 37791                           indf1	equ	0xFE7
 37792                           postinc1	equ	0xFE6
 37793                           postdec1	equ	0xFE5
 37794                           fsr1h	equ	0xFE2
 37795                           fsr1l	equ	0xFE1
 37796                           indf2	equ	0xFDF
 37797                           postinc2	equ	0xFDE
 37798                           postdec2	equ	0xFDD
 37799                           fsr2h	equ	0xFDA
 37800                           fsr2l	equ	0xFD9
 37801                           status	equ	0xFD8
 37802                           
 37803 ;; *************** function __allocate_file *****************
 37804 ;; Defined at:
 37805 ;;		line 74 in file "fat_filelib.c"
 37806 ;; Parameters:    Size  Location     Type
 37807 ;;		None
 37808 ;; Auto vars:     Size  Location     Type
 37809 ;;  node            2   16[COMRAM] PTR struct fat_node
 37810 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 37811 ;; Return value:  Size  Location     Type
 37812 ;;                  2   14[COMRAM] PTR struct sFL_FILE
 37813 ;; Registers used:
 37814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37815 ;; Tracked objects:
 37816 ;;		On entry : 0/0
 37817 ;;		On exit  : 0/0
 37818 ;;		Unchanged: 0/0
 37819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37823 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37824 ;;Total ram usage:        4 bytes
 37825 ;; Hardware stack levels used:    1
 37826 ;; Hardware stack levels required when called:    3
 37827 ;; This function calls:
 37828 ;;		fat_list@fat_list_insert_last
 37829 ;;		fat_list@fat_list_pop_head
 37830 ;; This function is called by:
 37831 ;;		__create_directory
 37832 ;;		__open_file
 37833 ;;		__create_file
 37834 ;; This function uses a non-reentrant model
 37835 ;;
 37836                           
 37837                           	psect	text122
 37838  0043B4                     __ptext122:
 37839                           	opt stack 0
 37840  0043B4                     __allocate_file:
 37841                           	opt stack 22
 37842                           
 37843                           ;fat_filelib.c: 77: struct fat_node *node = fat_list_pop_head(&_free_file_list);
 37844                           
 37845                           ;incstack = 0
 37846  0043B4  0E01               	movlw	high __free_file_list
 37847  0043B6  6E08               	movwf	fat_list@fat_list_pop_head@list+1,c
 37848  0043B8  0101               	movlb	1	; () banked
 37849  0043BA  0ED6               	movlw	low __free_file_list
 37850  0043BC  6E07               	movwf	fat_list@fat_list_pop_head@list,c
 37851  0043BE  EC7F  F020         	call	fat_list@fat_list_pop_head	;wreg free
 37852  0043C2  C007  F011         	movff	?fat_list@fat_list_pop_head,__allocate_file@node
 37853  0043C6  C008  F012         	movff	?fat_list@fat_list_pop_head+1,__allocate_file@node+1
 37854                           
 37855                           ;fat_filelib.c: 80: if (node)
 37856  0043CA  5012               	movf	__allocate_file@node+1,w,c
 37857  0043CC  1011               	iorwf	__allocate_file@node,w,c
 37858  0043CE  E00B               	bz	l10479
 37859                           
 37860                           ;fat_filelib.c: 81: fat_list_insert_last(&_open_file_list, node);
 37861  0043D0  0E01               	movlw	high __open_file_list
 37862  0043D2  6E0C               	movwf	fat_list@fat_list_insert_last@list+1,c
 37863  0043D4  0101               	movlb	1	; () banked
 37864  0043D6  0EDA               	movlw	low __open_file_list
 37865  0043D8  6E0B               	movwf	fat_list@fat_list_insert_last@list,c
 37866  0043DA  C012  F00E         	movff	__allocate_file@node+1,fat_list@fat_list_insert_last@node+1
 37867  0043DE  C011  F00D         	movff	__allocate_file@node,fat_list@fat_list_insert_last@node
 37868  0043E2  EC29  F022         	call	fat_list@fat_list_insert_last	;wreg free
 37869  0043E6                     l10479:
 37870                           
 37871                           ;fat_filelib.c: 83: return node ? ((FL_FILE *)((char *)(node)-(char*)(&((FL_FILE *)0)->l
      +                          ist_node))) : 0;
 37872  0043E6  5012               	movf	__allocate_file@node+1,w,c
 37873  0043E8  1011               	iorwf	__allocate_file@node,w,c
 37874  0043EA  E104               	bnz	l10483
 37875  0043EC  0E00               	movlw	0
 37876  0043EE  6E10               	movwf	?__allocate_file+1,c
 37877  0043F0  6E0F               	movwf	?__allocate_file,c
 37878  0043F2  D006               	goto	l423
 37879  0043F4                     l10483:
 37880  0043F4  0EC0               	movlw	192
 37881  0043F6  2411               	addwf	__allocate_file@node,w,c
 37882  0043F8  6E0F               	movwf	?__allocate_file,c
 37883  0043FA  0EFD               	movlw	253
 37884  0043FC  2012               	addwfc	__allocate_file@node+1,w,c
 37885  0043FE  6E10               	movwf	?__allocate_file+1,c
 37886  004400                     l423:
 37887  004400  0012               	return	
 37888  004402                     __end_of__allocate_file:
 37889                           	opt stack 0
 37890                           tosu	equ	0xFFF
 37891                           tosh	equ	0xFFE
 37892                           tosl	equ	0xFFD
 37893                           pclath	equ	0xFFA
 37894                           tblptru	equ	0xFF8
 37895                           tblptrh	equ	0xFF7
 37896                           tblptrl	equ	0xFF6
 37897                           tablat	equ	0xFF5
 37898                           prodh	equ	0xFF4
 37899                           prodl	equ	0xFF3
 37900                           indf0	equ	0xFEF
 37901                           postinc0	equ	0xFEE
 37902                           fsr0h	equ	0xFEA
 37903                           fsr0l	equ	0xFE9
 37904                           wreg	equ	0xFE8
 37905                           indf1	equ	0xFE7
 37906                           postinc1	equ	0xFE6
 37907                           postdec1	equ	0xFE5
 37908                           fsr1h	equ	0xFE2
 37909                           fsr1l	equ	0xFE1
 37910                           indf2	equ	0xFDF
 37911                           postinc2	equ	0xFDE
 37912                           postdec2	equ	0xFDD
 37913                           fsr2h	equ	0xFDA
 37914                           fsr2l	equ	0xFD9
 37915                           status	equ	0xFD8
 37916                           
 37917 ;; *************** function fat_list@fat_list_pop_head *****************
 37918 ;; Defined at:
 37919 ;;		line 147 in file "fat_list.h"
 37920 ;; Parameters:    Size  Location     Type
 37921 ;;  list            2    6[COMRAM] PTR struct fat_list
 37922 ;;		 -> _free_file_list(4), 
 37923 ;; Auto vars:     Size  Location     Type
 37924 ;;  node            2    8[COMRAM] PTR struct fat_node
 37925 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 37926 ;; Return value:  Size  Location     Type
 37927 ;;                  2    6[COMRAM] PTR struct fat_node
 37928 ;; Registers used:
 37929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37930 ;; Tracked objects:
 37931 ;;		On entry : 0/0
 37932 ;;		On exit  : 0/0
 37933 ;;		Unchanged: 0/0
 37934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37936 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37938 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37939 ;;Total ram usage:        4 bytes
 37940 ;; Hardware stack levels used:    1
 37941 ;; Hardware stack levels required when called:    1
 37942 ;; This function calls:
 37943 ;;		fat_list@fat_list_remove
 37944 ;; This function is called by:
 37945 ;;		__allocate_file
 37946 ;; This function uses a non-reentrant model
 37947 ;;
 37948                           
 37949                           	psect	text123
 37950  0040FE                     __ptext123:
 37951                           	opt stack 0
 37952  0040FE                     fat_list@fat_list_pop_head:
 37953                           	opt stack 23
 37954                           
 37955                           ;fat_list.h: 149: struct fat_node * node;
 37956                           ;fat_list.h: 151: ;
 37957                           ;fat_list.h: 153: node = (list)->head;
 37958                           
 37959                           ;incstack = 0
 37960  0040FE  C007  FFD9         	movff	fat_list@fat_list_pop_head@list,fsr2l
 37961  004102  C008  FFDA         	movff	fat_list@fat_list_pop_head@list+1,fsr2h
 37962  004106  CFDE F009          	movff	postinc2,fat_list@fat_list_pop_head@node
 37963  00410A  CFDD F00A          	movff	postdec2,fat_list@fat_list_pop_head@node+1
 37964                           
 37965                           ;fat_list.h: 154: if (node)
 37966  00410E  500A               	movf	fat_list@fat_list_pop_head@node+1,w,c
 37967  004110  1009               	iorwf	fat_list@fat_list_pop_head@node,w,c
 37968  004112  E00A               	bz	l9735
 37969                           
 37970                           ;fat_list.h: 155: fat_list_remove(list, node);
 37971  004114  C008  F002         	movff	fat_list@fat_list_pop_head@list+1,fat_list@fat_list_remove@list+1
 37972  004118  C007  F001         	movff	fat_list@fat_list_pop_head@list,fat_list@fat_list_remove@list
 37973  00411C  C00A  F004         	movff	fat_list@fat_list_pop_head@node+1,fat_list@fat_list_remove@node+1
 37974  004120  C009  F003         	movff	fat_list@fat_list_pop_head@node,fat_list@fat_list_remove@node
 37975  004124  ECEA  F02B         	call	fat_list@fat_list_remove	;wreg free
 37976  004128                     l9735:
 37977                           
 37978                           ;fat_list.h: 157: return node;
 37979  004128  C00A  F008         	movff	fat_list@fat_list_pop_head@node+1,?fat_list@fat_list_pop_head+1
 37980  00412C  C009  F007         	movff	fat_list@fat_list_pop_head@node,?fat_list@fat_list_pop_head
 37981  004130  0012               	return	
 37982  004132                     __end_offat_list@fat_list_pop_head:
 37983                           	opt stack 0
 37984                           tosu	equ	0xFFF
 37985                           tosh	equ	0xFFE
 37986                           tosl	equ	0xFFD
 37987                           pclath	equ	0xFFA
 37988                           tblptru	equ	0xFF8
 37989                           tblptrh	equ	0xFF7
 37990                           tblptrl	equ	0xFF6
 37991                           tablat	equ	0xFF5
 37992                           prodh	equ	0xFF4
 37993                           prodl	equ	0xFF3
 37994                           indf0	equ	0xFEF
 37995                           postinc0	equ	0xFEE
 37996                           fsr0h	equ	0xFEA
 37997                           fsr0l	equ	0xFE9
 37998                           wreg	equ	0xFE8
 37999                           indf1	equ	0xFE7
 38000                           postinc1	equ	0xFE6
 38001                           postdec1	equ	0xFE5
 38002                           fsr1h	equ	0xFE2
 38003                           fsr1l	equ	0xFE1
 38004                           indf2	equ	0xFDF
 38005                           postinc2	equ	0xFDE
 38006                           postdec2	equ	0xFDD
 38007                           fsr2h	equ	0xFDA
 38008                           fsr2l	equ	0xFD9
 38009                           status	equ	0xFD8
 38010                           
 38011 ;; *************** function fat_list@fat_list_remove *****************
 38012 ;; Defined at:
 38013 ;;		line 55 in file "fat_list.h"
 38014 ;; Parameters:    Size  Location     Type
 38015 ;;  list            2    0[COMRAM] PTR struct fat_list
 38016 ;;		 -> _open_file_list(4), _free_file_list(4), 
 38017 ;;  node            2    2[COMRAM] PTR struct fat_node
 38018 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 38019 ;; Auto vars:     Size  Location     Type
 38020 ;;		None
 38021 ;; Return value:  Size  Location     Type
 38022 ;;		None               void
 38023 ;; Registers used:
 38024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 38025 ;; Tracked objects:
 38026 ;;		On entry : 0/0
 38027 ;;		On exit  : 0/0
 38028 ;;		Unchanged: 0/0
 38029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38032 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38033 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38034 ;;Total ram usage:        6 bytes
 38035 ;; Hardware stack levels used:    1
 38036 ;; This function calls:
 38037 ;;		Nothing
 38038 ;; This function is called by:
 38039 ;;		fat_list@fat_list_pop_head
 38040 ;;		__free_file
 38041 ;; This function uses a non-reentrant model
 38042 ;;
 38043                           
 38044                           	psect	text124
 38045  0057D4                     __ptext124:
 38046                           	opt stack 0
 38047  0057D4                     fat_list@fat_list_remove:
 38048                           	opt stack 24
 38049                           
 38050                           ;fat_list.h: 57: ;
 38051                           ;fat_list.h: 58: ;
 38052                           ;fat_list.h: 60: if(!node->previous)
 38053                           
 38054                           ;incstack = 0
 38055  0057D4  C003  FFD9         	movff	fat_list@fat_list_remove@node,fsr2l
 38056  0057D8  C004  FFDA         	movff	fat_list@fat_list_remove@node+1,fsr2h
 38057  0057DC  50DE               	movf	postinc2,w,c
 38058  0057DE  10DD               	iorwf	postdec2,w,c
 38059  0057E0  E10F               	bnz	l9369
 38060                           
 38061                           ;fat_list.h: 61: list->head = node->next;
 38062  0057E2  EE20 F002          	lfsr	2,2
 38063  0057E6  5003               	movf	fat_list@fat_list_remove@node,w,c
 38064  0057E8  26D9               	addwf	fsr2l,f,c
 38065  0057EA  5004               	movf	fat_list@fat_list_remove@node+1,w,c
 38066  0057EC  22DA               	addwfc	fsr2h,f,c
 38067  0057EE  C001  FFE1         	movff	fat_list@fat_list_remove@list,fsr1l
 38068  0057F2  C002  FFE2         	movff	fat_list@fat_list_remove@list+1,fsr1h
 38069  0057F6  CFDE FFE6          	movff	postinc2,postinc1
 38070  0057FA  CFDD FFE5          	movff	postdec2,postdec1
 38071  0057FE  D014               	goto	l9371
 38072  005800                     l9369:
 38073                           
 38074                           ;fat_list.h: 62: else
 38075                           ;fat_list.h: 63: node->previous->next = node->next;
 38076  005800  EE20 F002          	lfsr	2,2
 38077  005804  5003               	movf	fat_list@fat_list_remove@node,w,c
 38078  005806  26D9               	addwf	fsr2l,f,c
 38079  005808  5004               	movf	fat_list@fat_list_remove@node+1,w,c
 38080  00580A  22DA               	addwfc	fsr2h,f,c
 38081  00580C  C003  FFE1         	movff	fat_list@fat_list_remove@node,fsr1l
 38082  005810  C004  FFE2         	movff	fat_list@fat_list_remove@node+1,fsr1h
 38083  005814  EE00 F002          	lfsr	0,2
 38084  005818  50E6               	movf	postinc1,w,c
 38085  00581A  26E9               	addwf	fsr0l,f,c
 38086  00581C  50E5               	movf	postdec1,w,c
 38087  00581E  22EA               	addwfc	fsr0h,f,c
 38088  005820  CFDE FFEE          	movff	postinc2,postinc0
 38089  005824  CFDD FFED          	movff	postdec2,postdec0
 38090  005828                     l9371:
 38091                           
 38092                           ;fat_list.h: 65: if(!node->next)
 38093  005828  EE20 F002          	lfsr	2,2
 38094  00582C  5003               	movf	fat_list@fat_list_remove@node,w,c
 38095  00582E  26D9               	addwf	fsr2l,f,c
 38096  005830  5004               	movf	fat_list@fat_list_remove@node+1,w,c
 38097  005832  22DA               	addwfc	fsr2h,f,c
 38098  005834  50DE               	movf	postinc2,w,c
 38099  005836  10DD               	iorwf	postdec2,w,c
 38100  005838  E10B               	bnz	l9375
 38101                           
 38102                           ;fat_list.h: 66: list->tail = node->previous;
 38103  00583A  C003  FFD9         	movff	fat_list@fat_list_remove@node,fsr2l
 38104  00583E  C004  FFDA         	movff	fat_list@fat_list_remove@node+1,fsr2h
 38105  005842  EE10 F002          	lfsr	1,2
 38106  005846  5001               	movf	fat_list@fat_list_remove@list,w,c
 38107  005848  26E1               	addwf	fsr1l,f,c
 38108  00584A  5002               	movf	fat_list@fat_list_remove@list+1,w,c
 38109  00584C  22E2               	addwfc	fsr1h,f,c
 38110  00584E  D012               	goto	L136
 38111  005850                     l9375:
 38112                           
 38113                           ;fat_list.h: 67: else
 38114                           ;fat_list.h: 68: node->next->previous = node->previous;
 38115  005850  C003  FFD9         	movff	fat_list@fat_list_remove@node,fsr2l
 38116  005854  C004  FFDA         	movff	fat_list@fat_list_remove@node+1,fsr2h
 38117  005858  EE10 F002          	lfsr	1,2
 38118  00585C  5003               	movf	fat_list@fat_list_remove@node,w,c
 38119  00585E  26E1               	addwf	fsr1l,f,c
 38120  005860  5004               	movf	fat_list@fat_list_remove@node+1,w,c
 38121  005862  22E2               	addwfc	fsr1h,f,c
 38122  005864  CFE6 F005          	movff	postinc1,??fat_list@fat_list_remove
 38123  005868  CFE5 F006          	movff	postdec1,??fat_list@fat_list_remove+1
 38124  00586C  C005  FFE1         	movff	??fat_list@fat_list_remove,fsr1l
 38125  005870  C006  FFE2         	movff	??fat_list@fat_list_remove+1,fsr1h
 38126  005874                     L136:
 38127  005874  CFDE FFE6          	movff	postinc2,postinc1
 38128  005878  CFDD FFE5          	movff	postdec2,postdec1
 38129  00587C  0012               	return	
 38130  00587E                     __end_offat_list@fat_list_remove:
 38131                           	opt stack 0
 38132                           tosu	equ	0xFFF
 38133                           tosh	equ	0xFFE
 38134                           tosl	equ	0xFFD
 38135                           pclath	equ	0xFFA
 38136                           tblptru	equ	0xFF8
 38137                           tblptrh	equ	0xFF7
 38138                           tblptrl	equ	0xFF6
 38139                           tablat	equ	0xFF5
 38140                           prodh	equ	0xFF4
 38141                           prodl	equ	0xFF3
 38142                           indf0	equ	0xFEF
 38143                           postinc0	equ	0xFEE
 38144                           postdec0	equ	0xFED
 38145                           fsr0h	equ	0xFEA
 38146                           fsr0l	equ	0xFE9
 38147                           wreg	equ	0xFE8
 38148                           indf1	equ	0xFE7
 38149                           postinc1	equ	0xFE6
 38150                           postdec1	equ	0xFE5
 38151                           fsr1h	equ	0xFE2
 38152                           fsr1l	equ	0xFE1
 38153                           indf2	equ	0xFDF
 38154                           postinc2	equ	0xFDE
 38155                           postdec2	equ	0xFDD
 38156                           fsr2h	equ	0xFDA
 38157                           fsr2l	equ	0xFD9
 38158                           status	equ	0xFD8
 38159                           
 38160 ;; *************** function fat_list@fat_list_insert_last *****************
 38161 ;; Defined at:
 38162 ;;		line 125 in file "fat_list.h"
 38163 ;; Parameters:    Size  Location     Type
 38164 ;;  list            2   10[COMRAM] PTR struct fat_list
 38165 ;;		 -> _open_file_list(4), _free_file_list(4), 
 38166 ;;  node            2   12[COMRAM] PTR struct fat_node
 38167 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 38168 ;; Auto vars:     Size  Location     Type
 38169 ;;		None
 38170 ;; Return value:  Size  Location     Type
 38171 ;;		None               void
 38172 ;; Registers used:
 38173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38174 ;; Tracked objects:
 38175 ;;		On entry : 0/0
 38176 ;;		On exit  : 0/0
 38177 ;;		Unchanged: 0/0
 38178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38179 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38182 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38183 ;;Total ram usage:        4 bytes
 38184 ;; Hardware stack levels used:    1
 38185 ;; Hardware stack levels required when called:    2
 38186 ;; This function calls:
 38187 ;;		fat_list@fat_list_insert_after
 38188 ;;		fat_list@fat_list_insert_first
 38189 ;; This function is called by:
 38190 ;;		__allocate_file
 38191 ;;		__free_file
 38192 ;;		_fl_init
 38193 ;; This function uses a non-reentrant model
 38194 ;;
 38195                           
 38196                           	psect	text125
 38197  004452                     __ptext125:
 38198                           	opt stack 0
 38199  004452                     fat_list@fat_list_insert_last:
 38200                           	opt stack 26
 38201                           
 38202                           ;fat_list.h: 127: ;
 38203                           ;fat_list.h: 128: ;
 38204                           ;fat_list.h: 130: if (!list->tail)
 38205                           
 38206                           ;incstack = 0
 38207  004452  EE20 F002          	lfsr	2,2
 38208  004456  500B               	movf	fat_list@fat_list_insert_last@list,w,c
 38209  004458  26D9               	addwf	fsr2l,f,c
 38210  00445A  500C               	movf	fat_list@fat_list_insert_last@list+1,w,c
 38211  00445C  22DA               	addwfc	fsr2h,f,c
 38212  00445E  50DE               	movf	postinc2,w,c
 38213  004460  10DD               	iorwf	postdec2,w,c
 38214  004462  E10B               	bnz	l9727
 38215                           
 38216                           ;fat_list.h: 131: fat_list_insert_first(list, node);
 38217  004464  C00C  F008         	movff	fat_list@fat_list_insert_last@list+1,fat_list@fat_list_insert_first@list+1
 38218  004468  C00B  F007         	movff	fat_list@fat_list_insert_last@list,fat_list@fat_list_insert_first@list
 38219  00446C  C00E  F00A         	movff	fat_list@fat_list_insert_last@node+1,fat_list@fat_list_insert_first@node+1
 38220  004470  C00D  F009         	movff	fat_list@fat_list_insert_last@node,fat_list@fat_list_insert_first@node
 38221  004474  ECC0  F026         	call	fat_list@fat_list_insert_first	;wreg free
 38222  004478  D014               	goto	l396
 38223  00447A                     l9727:
 38224                           
 38225                           ;fat_list.h: 132: else
 38226                           ;fat_list.h: 133: fat_list_insert_after(list, list->tail, node);
 38227  00447A  C00C  F002         	movff	fat_list@fat_list_insert_last@list+1,fat_list@fat_list_insert_after@list+1
 38228  00447E  C00B  F001         	movff	fat_list@fat_list_insert_last@list,fat_list@fat_list_insert_after@list
 38229  004482  EE20 F002          	lfsr	2,2
 38230  004486  500B               	movf	fat_list@fat_list_insert_last@list,w,c
 38231  004488  26D9               	addwf	fsr2l,f,c
 38232  00448A  500C               	movf	fat_list@fat_list_insert_last@list+1,w,c
 38233  00448C  22DA               	addwfc	fsr2h,f,c
 38234  00448E  CFDE F003          	movff	postinc2,fat_list@fat_list_insert_after@node
 38235  004492  CFDD F004          	movff	postdec2,fat_list@fat_list_insert_after@node+1
 38236  004496  C00E  F006         	movff	fat_list@fat_list_insert_last@node+1,fat_list@fat_list_insert_after@new_node+1
 38237  00449A  C00D  F005         	movff	fat_list@fat_list_insert_last@node,fat_list@fat_list_insert_after@new_node
 38238  00449E  ECBA  F028         	call	fat_list@fat_list_insert_after	;wreg free
 38239  0044A2                     l396:
 38240  0044A2  0012               	return	
 38241  0044A4                     __end_offat_list@fat_list_insert_last:
 38242                           	opt stack 0
 38243                           tosu	equ	0xFFF
 38244                           tosh	equ	0xFFE
 38245                           tosl	equ	0xFFD
 38246                           pclath	equ	0xFFA
 38247                           tblptru	equ	0xFF8
 38248                           tblptrh	equ	0xFF7
 38249                           tblptrl	equ	0xFF6
 38250                           tablat	equ	0xFF5
 38251                           prodh	equ	0xFF4
 38252                           prodl	equ	0xFF3
 38253                           indf0	equ	0xFEF
 38254                           postinc0	equ	0xFEE
 38255                           postdec0	equ	0xFED
 38256                           fsr0h	equ	0xFEA
 38257                           fsr0l	equ	0xFE9
 38258                           wreg	equ	0xFE8
 38259                           indf1	equ	0xFE7
 38260                           postinc1	equ	0xFE6
 38261                           postdec1	equ	0xFE5
 38262                           fsr1h	equ	0xFE2
 38263                           fsr1l	equ	0xFE1
 38264                           indf2	equ	0xFDF
 38265                           postinc2	equ	0xFDE
 38266                           postdec2	equ	0xFDD
 38267                           fsr2h	equ	0xFDA
 38268                           fsr2l	equ	0xFD9
 38269                           status	equ	0xFD8
 38270                           
 38271 ;; *************** function fat_list@fat_list_insert_first *****************
 38272 ;; Defined at:
 38273 ;;		line 107 in file "fat_list.h"
 38274 ;; Parameters:    Size  Location     Type
 38275 ;;  list            2    6[COMRAM] PTR struct fat_list
 38276 ;;		 -> _open_file_list(4), _free_file_list(4), 
 38277 ;;  node            2    8[COMRAM] PTR struct fat_node
 38278 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 38279 ;; Auto vars:     Size  Location     Type
 38280 ;;		None
 38281 ;; Return value:  Size  Location     Type
 38282 ;;		None               void
 38283 ;; Registers used:
 38284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38285 ;; Tracked objects:
 38286 ;;		On entry : 0/0
 38287 ;;		On exit  : 0/0
 38288 ;;		Unchanged: 0/0
 38289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38293 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38294 ;;Total ram usage:        4 bytes
 38295 ;; Hardware stack levels used:    1
 38296 ;; Hardware stack levels required when called:    1
 38297 ;; This function calls:
 38298 ;;		fat_list@fat_list_insert_before
 38299 ;; This function is called by:
 38300 ;;		fat_list@fat_list_insert_last
 38301 ;; This function uses a non-reentrant model
 38302 ;;
 38303                           
 38304                           	psect	text126
 38305  004D80                     __ptext126:
 38306                           	opt stack 0
 38307  004D80                     fat_list@fat_list_insert_first:
 38308                           	opt stack 26
 38309                           
 38310                           ;fat_list.h: 109: ;
 38311                           ;fat_list.h: 110: ;
 38312                           ;fat_list.h: 112: if (!list->head)
 38313                           
 38314                           ;incstack = 0
 38315  004D80  C007  FFD9         	movff	fat_list@fat_list_insert_first@list,fsr2l
 38316  004D84  C008  FFDA         	movff	fat_list@fat_list_insert_first@list+1,fsr2h
 38317  004D88  50DE               	movf	postinc2,w,c
 38318  004D8A  10DD               	iorwf	postdec2,w,c
 38319  004D8C  E122               	bnz	l9397
 38320                           
 38321                           ;fat_list.h: 113: {
 38322                           ;fat_list.h: 114: list->head = node;
 38323  004D8E  C007  FFD9         	movff	fat_list@fat_list_insert_first@list,fsr2l
 38324  004D92  C008  FFDA         	movff	fat_list@fat_list_insert_first@list+1,fsr2h
 38325  004D96  C009  FFDE         	movff	fat_list@fat_list_insert_first@node,postinc2
 38326  004D9A  C00A  FFDD         	movff	fat_list@fat_list_insert_first@node+1,postdec2
 38327                           
 38328                           ;fat_list.h: 115: list->tail = node;
 38329  004D9E  EE20 F002          	lfsr	2,2
 38330  004DA2  5007               	movf	fat_list@fat_list_insert_first@list,w,c
 38331  004DA4  26D9               	addwf	fsr2l,f,c
 38332  004DA6  5008               	movf	fat_list@fat_list_insert_first@list+1,w,c
 38333  004DA8  22DA               	addwfc	fsr2h,f,c
 38334  004DAA  C009  FFDE         	movff	fat_list@fat_list_insert_first@node,postinc2
 38335  004DAE  C00A  FFDD         	movff	fat_list@fat_list_insert_first@node+1,postdec2
 38336                           
 38337                           ;fat_list.h: 116: node->previous = 0;
 38338  004DB2  C009  FFD9         	movff	fat_list@fat_list_insert_first@node,fsr2l
 38339  004DB6  C00A  FFDA         	movff	fat_list@fat_list_insert_first@node+1,fsr2h
 38340  004DBA  6ADE               	clrf	postinc2,c
 38341  004DBC  6ADD               	clrf	postdec2,c
 38342                           
 38343                           ;fat_list.h: 117: node->next = 0;
 38344  004DBE  EE20 F002          	lfsr	2,2
 38345  004DC2  5009               	movf	fat_list@fat_list_insert_first@node,w,c
 38346  004DC4  26D9               	addwf	fsr2l,f,c
 38347  004DC6  500A               	movf	fat_list@fat_list_insert_first@node+1,w,c
 38348  004DC8  22DA               	addwfc	fsr2h,f,c
 38349  004DCA  0E00               	movlw	0
 38350  004DCC  6EDE               	movwf	postinc2,c
 38351  004DCE  6EDD               	movwf	postdec2,c
 38352                           
 38353                           ;fat_list.h: 118: }
 38354  004DD0  D012               	goto	l391
 38355  004DD2                     l9397:
 38356                           
 38357                           ;fat_list.h: 119: else
 38358                           ;fat_list.h: 120: fat_list_insert_before(list, list->head, node);
 38359  004DD2  C008  F002         	movff	fat_list@fat_list_insert_first@list+1,fat_list@fat_list_insert_before@list+1
 38360  004DD6  C007  F001         	movff	fat_list@fat_list_insert_first@list,fat_list@fat_list_insert_before@list
 38361  004DDA  C007  FFD9         	movff	fat_list@fat_list_insert_first@list,fsr2l
 38362  004DDE  C008  FFDA         	movff	fat_list@fat_list_insert_first@list+1,fsr2h
 38363  004DE2  CFDE F003          	movff	postinc2,fat_list@fat_list_insert_before@node
 38364  004DE6  CFDD F004          	movff	postdec2,fat_list@fat_list_insert_before@node+1
 38365  004DEA  C00A  F006         	movff	fat_list@fat_list_insert_first@node+1,fat_list@fat_list_insert_before@new_node+1
 38366  004DEE  C009  F005         	movff	fat_list@fat_list_insert_first@node,fat_list@fat_list_insert_before@new_node
 38367  004DF2  ECFC  F026         	call	fat_list@fat_list_insert_before	;wreg free
 38368  004DF6                     l391:
 38369  004DF6  0012               	return	
 38370  004DF8                     __end_offat_list@fat_list_insert_first:
 38371                           	opt stack 0
 38372                           tosu	equ	0xFFF
 38373                           tosh	equ	0xFFE
 38374                           tosl	equ	0xFFD
 38375                           pclath	equ	0xFFA
 38376                           tblptru	equ	0xFF8
 38377                           tblptrh	equ	0xFF7
 38378                           tblptrl	equ	0xFF6
 38379                           tablat	equ	0xFF5
 38380                           prodh	equ	0xFF4
 38381                           prodl	equ	0xFF3
 38382                           indf0	equ	0xFEF
 38383                           postinc0	equ	0xFEE
 38384                           postdec0	equ	0xFED
 38385                           fsr0h	equ	0xFEA
 38386                           fsr0l	equ	0xFE9
 38387                           wreg	equ	0xFE8
 38388                           indf1	equ	0xFE7
 38389                           postinc1	equ	0xFE6
 38390                           postdec1	equ	0xFE5
 38391                           fsr1h	equ	0xFE2
 38392                           fsr1l	equ	0xFE1
 38393                           indf2	equ	0xFDF
 38394                           postinc2	equ	0xFDE
 38395                           postdec2	equ	0xFDD
 38396                           fsr2h	equ	0xFDA
 38397                           fsr2l	equ	0xFD9
 38398                           status	equ	0xFD8
 38399                           
 38400 ;; *************** function fat_list@fat_list_insert_before *****************
 38401 ;; Defined at:
 38402 ;;		line 90 in file "fat_list.h"
 38403 ;; Parameters:    Size  Location     Type
 38404 ;;  list            2    0[COMRAM] PTR struct fat_list
 38405 ;;		 -> _open_file_list(4), _free_file_list(4), 
 38406 ;;  node            2    2[COMRAM] PTR struct fat_node
 38407 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 38408 ;;  new_node        2    4[COMRAM] PTR struct fat_node
 38409 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 38410 ;; Auto vars:     Size  Location     Type
 38411 ;;		None
 38412 ;; Return value:  Size  Location     Type
 38413 ;;		None               void
 38414 ;; Registers used:
 38415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 38416 ;; Tracked objects:
 38417 ;;		On entry : 0/0
 38418 ;;		On exit  : 0/0
 38419 ;;		Unchanged: 0/0
 38420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38421 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38424 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38425 ;;Total ram usage:        6 bytes
 38426 ;; Hardware stack levels used:    1
 38427 ;; This function calls:
 38428 ;;		Nothing
 38429 ;; This function is called by:
 38430 ;;		fat_list@fat_list_insert_first
 38431 ;; This function uses a non-reentrant model
 38432 ;;
 38433                           
 38434                           	psect	text127
 38435  004DF8                     __ptext127:
 38436                           	opt stack 0
 38437  004DF8                     fat_list@fat_list_insert_before:
 38438                           	opt stack 26
 38439                           
 38440                           ;fat_list.h: 92: ;
 38441                           ;fat_list.h: 93: ;
 38442                           ;fat_list.h: 94: ;
 38443                           ;fat_list.h: 96: new_node->previous = node->previous;
 38444                           
 38445                           ;incstack = 0
 38446  004DF8  C003  FFD9         	movff	fat_list@fat_list_insert_before@node,fsr2l
 38447  004DFC  C004  FFDA         	movff	fat_list@fat_list_insert_before@node+1,fsr2h
 38448  004E00  C005  FFE1         	movff	fat_list@fat_list_insert_before@new_node,fsr1l
 38449  004E04  C006  FFE2         	movff	fat_list@fat_list_insert_before@new_node+1,fsr1h
 38450  004E08  CFDE FFE6          	movff	postinc2,postinc1
 38451  004E0C  CFDD FFE5          	movff	postdec2,postdec1
 38452                           
 38453                           ;fat_list.h: 97: new_node->next = node;
 38454  004E10  EE20 F002          	lfsr	2,2
 38455  004E14  5005               	movf	fat_list@fat_list_insert_before@new_node,w,c
 38456  004E16  26D9               	addwf	fsr2l,f,c
 38457  004E18  5006               	movf	fat_list@fat_list_insert_before@new_node+1,w,c
 38458  004E1A  22DA               	addwfc	fsr2h,f,c
 38459  004E1C  C003  FFDE         	movff	fat_list@fat_list_insert_before@node,postinc2
 38460  004E20  C004  FFDD         	movff	fat_list@fat_list_insert_before@node+1,postdec2
 38461                           
 38462                           ;fat_list.h: 98: if (!node->previous)
 38463  004E24  C003  FFD9         	movff	fat_list@fat_list_insert_before@node,fsr2l
 38464  004E28  C004  FFDA         	movff	fat_list@fat_list_insert_before@node+1,fsr2h
 38465  004E2C  50DE               	movf	postinc2,w,c
 38466  004E2E  10DD               	iorwf	postdec2,w,c
 38467  004E30  E109               	bnz	l8865
 38468                           
 38469                           ;fat_list.h: 99: list->head = new_node;
 38470  004E32  C001  FFD9         	movff	fat_list@fat_list_insert_before@list,fsr2l
 38471  004E36  C002  FFDA         	movff	fat_list@fat_list_insert_before@list+1,fsr2h
 38472  004E3A  C005  FFDE         	movff	fat_list@fat_list_insert_before@new_node,postinc2
 38473  004E3E  C006  FFDD         	movff	fat_list@fat_list_insert_before@new_node+1,postdec2
 38474  004E42  D00E               	goto	l8867
 38475  004E44                     l8865:
 38476                           
 38477                           ;fat_list.h: 100: else
 38478                           ;fat_list.h: 101: node->previous->next = new_node;
 38479  004E44  C003  FFD9         	movff	fat_list@fat_list_insert_before@node,fsr2l
 38480  004E48  C004  FFDA         	movff	fat_list@fat_list_insert_before@node+1,fsr2h
 38481  004E4C  EE10 F002          	lfsr	1,2
 38482  004E50  50DE               	movf	postinc2,w,c
 38483  004E52  26E1               	addwf	fsr1l,f,c
 38484  004E54  50DD               	movf	postdec2,w,c
 38485  004E56  22E2               	addwfc	fsr1h,f,c
 38486  004E58  C005  FFE6         	movff	fat_list@fat_list_insert_before@new_node,postinc1
 38487  004E5C  C006  FFE5         	movff	fat_list@fat_list_insert_before@new_node+1,postdec1
 38488  004E60                     l8867:
 38489                           
 38490                           ;fat_list.h: 102: node->previous = new_node;
 38491  004E60  C003  FFD9         	movff	fat_list@fat_list_insert_before@node,fsr2l
 38492  004E64  C004  FFDA         	movff	fat_list@fat_list_insert_before@node+1,fsr2h
 38493  004E68  C005  FFDE         	movff	fat_list@fat_list_insert_before@new_node,postinc2
 38494  004E6C  C006  FFDD         	movff	fat_list@fat_list_insert_before@new_node+1,postdec2
 38495  004E70  0012               	return	
 38496  004E72                     __end_offat_list@fat_list_insert_before:
 38497                           	opt stack 0
 38498                           tosu	equ	0xFFF
 38499                           tosh	equ	0xFFE
 38500                           tosl	equ	0xFFD
 38501                           pclath	equ	0xFFA
 38502                           tblptru	equ	0xFF8
 38503                           tblptrh	equ	0xFF7
 38504                           tblptrl	equ	0xFF6
 38505                           tablat	equ	0xFF5
 38506                           prodh	equ	0xFF4
 38507                           prodl	equ	0xFF3
 38508                           indf0	equ	0xFEF
 38509                           postinc0	equ	0xFEE
 38510                           postdec0	equ	0xFED
 38511                           fsr0h	equ	0xFEA
 38512                           fsr0l	equ	0xFE9
 38513                           wreg	equ	0xFE8
 38514                           indf1	equ	0xFE7
 38515                           postinc1	equ	0xFE6
 38516                           postdec1	equ	0xFE5
 38517                           fsr1h	equ	0xFE2
 38518                           fsr1l	equ	0xFE1
 38519                           indf2	equ	0xFDF
 38520                           postinc2	equ	0xFDE
 38521                           postdec2	equ	0xFDD
 38522                           fsr2h	equ	0xFDA
 38523                           fsr2l	equ	0xFD9
 38524                           status	equ	0xFD8
 38525                           
 38526 ;; *************** function fat_list@fat_list_insert_after *****************
 38527 ;; Defined at:
 38528 ;;		line 73 in file "fat_list.h"
 38529 ;; Parameters:    Size  Location     Type
 38530 ;;  list            2    0[COMRAM] PTR struct fat_list
 38531 ;;		 -> _open_file_list(4), _free_file_list(4), 
 38532 ;;  node            2    2[COMRAM] PTR struct fat_node
 38533 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 38534 ;;  new_node        2    4[COMRAM] PTR struct fat_node
 38535 ;;		 -> _files(1160), RAM(3967), NULL(0), 
 38536 ;; Auto vars:     Size  Location     Type
 38537 ;;		None
 38538 ;; Return value:  Size  Location     Type
 38539 ;;		None               void
 38540 ;; Registers used:
 38541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 38542 ;; Tracked objects:
 38543 ;;		On entry : 0/0
 38544 ;;		On exit  : 0/0
 38545 ;;		Unchanged: 0/0
 38546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38547 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38550 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38551 ;;Total ram usage:        8 bytes
 38552 ;; Hardware stack levels used:    1
 38553 ;; This function calls:
 38554 ;;		Nothing
 38555 ;; This function is called by:
 38556 ;;		fat_list@fat_list_insert_last
 38557 ;; This function uses a non-reentrant model
 38558 ;;
 38559                           
 38560                           	psect	text128
 38561  005174                     __ptext128:
 38562                           	opt stack 0
 38563  005174                     fat_list@fat_list_insert_after:
 38564                           	opt stack 27
 38565                           
 38566                           ;fat_list.h: 75: ;
 38567                           ;fat_list.h: 76: ;
 38568                           ;fat_list.h: 77: ;
 38569                           ;fat_list.h: 79: new_node->previous = node;
 38570                           
 38571                           ;incstack = 0
 38572  005174  C005  FFD9         	movff	fat_list@fat_list_insert_after@new_node,fsr2l
 38573  005178  C006  FFDA         	movff	fat_list@fat_list_insert_after@new_node+1,fsr2h
 38574  00517C  C003  FFDE         	movff	fat_list@fat_list_insert_after@node,postinc2
 38575  005180  C004  FFDD         	movff	fat_list@fat_list_insert_after@node+1,postdec2
 38576                           
 38577                           ;fat_list.h: 80: new_node->next = node->next;
 38578  005184  EE20 F002          	lfsr	2,2
 38579  005188  5003               	movf	fat_list@fat_list_insert_after@node,w,c
 38580  00518A  26D9               	addwf	fsr2l,f,c
 38581  00518C  5004               	movf	fat_list@fat_list_insert_after@node+1,w,c
 38582  00518E  22DA               	addwfc	fsr2h,f,c
 38583  005190  EE10 F002          	lfsr	1,2
 38584  005194  5005               	movf	fat_list@fat_list_insert_after@new_node,w,c
 38585  005196  26E1               	addwf	fsr1l,f,c
 38586  005198  5006               	movf	fat_list@fat_list_insert_after@new_node+1,w,c
 38587  00519A  22E2               	addwfc	fsr1h,f,c
 38588  00519C  CFDE FFE6          	movff	postinc2,postinc1
 38589  0051A0  CFDD FFE5          	movff	postdec2,postdec1
 38590                           
 38591                           ;fat_list.h: 81: if (!node->next)
 38592  0051A4  EE20 F002          	lfsr	2,2
 38593  0051A8  5003               	movf	fat_list@fat_list_insert_after@node,w,c
 38594  0051AA  26D9               	addwf	fsr2l,f,c
 38595  0051AC  5004               	movf	fat_list@fat_list_insert_after@node+1,w,c
 38596  0051AE  22DA               	addwfc	fsr2h,f,c
 38597  0051B0  50DE               	movf	postinc2,w,c
 38598  0051B2  10DD               	iorwf	postdec2,w,c
 38599  0051B4  E107               	bnz	l9385
 38600                           
 38601                           ;fat_list.h: 82: list->tail = new_node;
 38602  0051B6  EE20 F002          	lfsr	2,2
 38603  0051BA  5001               	movf	fat_list@fat_list_insert_after@list,w,c
 38604  0051BC  26D9               	addwf	fsr2l,f,c
 38605  0051BE  5002               	movf	fat_list@fat_list_insert_after@list+1,w,c
 38606  0051C0  22DA               	addwfc	fsr2h,f,c
 38607  0051C2  D00E               	goto	L137
 38608  0051C4                     l9385:
 38609                           
 38610                           ;fat_list.h: 83: else
 38611                           ;fat_list.h: 84: node->next->previous = new_node;
 38612  0051C4  EE20 F002          	lfsr	2,2
 38613  0051C8  5003               	movf	fat_list@fat_list_insert_after@node,w,c
 38614  0051CA  26D9               	addwf	fsr2l,f,c
 38615  0051CC  5004               	movf	fat_list@fat_list_insert_after@node+1,w,c
 38616  0051CE  22DA               	addwfc	fsr2h,f,c
 38617  0051D0  CFDE F007          	movff	postinc2,??fat_list@fat_list_insert_after
 38618  0051D4  CFDD F008          	movff	postdec2,??fat_list@fat_list_insert_after+1
 38619  0051D8  C007  FFD9         	movff	??fat_list@fat_list_insert_after,fsr2l
 38620  0051DC  C008  FFDA         	movff	??fat_list@fat_list_insert_after+1,fsr2h
 38621  0051E0                     L137:
 38622  0051E0  C005  FFDE         	movff	fat_list@fat_list_insert_after@new_node,postinc2
 38623  0051E4  C006  FFDD         	movff	fat_list@fat_list_insert_after@new_node+1,postdec2
 38624                           
 38625                           ;fat_list.h: 85: node->next = new_node;
 38626  0051E8  EE20 F002          	lfsr	2,2
 38627  0051EC  5003               	movf	fat_list@fat_list_insert_after@node,w,c
 38628  0051EE  26D9               	addwf	fsr2l,f,c
 38629  0051F0  5004               	movf	fat_list@fat_list_insert_after@node+1,w,c
 38630  0051F2  22DA               	addwfc	fsr2h,f,c
 38631  0051F4  C005  FFDE         	movff	fat_list@fat_list_insert_after@new_node,postinc2
 38632  0051F8  C006  FFDD         	movff	fat_list@fat_list_insert_after@new_node+1,postdec2
 38633  0051FC  0012               	return	
 38634  0051FE                     __end_offat_list@fat_list_insert_after:
 38635                           	opt stack 0
 38636                           tosu	equ	0xFFF
 38637                           tosh	equ	0xFFE
 38638                           tosl	equ	0xFFD
 38639                           pclath	equ	0xFFA
 38640                           tblptru	equ	0xFF8
 38641                           tblptrh	equ	0xFF7
 38642                           tblptrl	equ	0xFF6
 38643                           tablat	equ	0xFF5
 38644                           prodh	equ	0xFF4
 38645                           prodl	equ	0xFF3
 38646                           indf0	equ	0xFEF
 38647                           postinc0	equ	0xFEE
 38648                           postdec0	equ	0xFED
 38649                           fsr0h	equ	0xFEA
 38650                           fsr0l	equ	0xFE9
 38651                           wreg	equ	0xFE8
 38652                           indf1	equ	0xFE7
 38653                           postinc1	equ	0xFE6
 38654                           postdec1	equ	0xFE5
 38655                           fsr1h	equ	0xFE2
 38656                           fsr1l	equ	0xFE1
 38657                           indf2	equ	0xFDF
 38658                           postinc2	equ	0xFDE
 38659                           postdec2	equ	0xFDD
 38660                           fsr2h	equ	0xFDA
 38661                           fsr2l	equ	0xFD9
 38662                           status	equ	0xFD8
 38663                           
 38664 ;; *************** function _Switch *****************
 38665 ;; Defined at:
 38666 ;;		line 328 in file "main.c"
 38667 ;; Parameters:    Size  Location     Type
 38668 ;;  c               1    wreg     unsigned char 
 38669 ;; Auto vars:     Size  Location     Type
 38670 ;;  c               1   26[COMRAM] unsigned char 
 38671 ;;  exit            5   21[COMRAM] unsigned char [5]
 38672 ;; Return value:  Size  Location     Type
 38673 ;;                  1    wreg      unsigned char 
 38674 ;; Registers used:
 38675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38676 ;; Tracked objects:
 38677 ;;		On entry : 0/0
 38678 ;;		On exit  : 0/0
 38679 ;;		Unchanged: 0/0
 38680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38682 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38685 ;;Total ram usage:        6 bytes
 38686 ;; Hardware stack levels used:    1
 38687 ;; Hardware stack levels required when called:    4
 38688 ;; This function calls:
 38689 ;;		_Check_extension
 38690 ;;		_Format_string
 38691 ;;		_Write_str
 38692 ;;		_strcmp
 38693 ;; This function is called by:
 38694 ;;		_File_write
 38695 ;;		_File_append
 38696 ;;		_File_read
 38697 ;;		_File_delete
 38698 ;;		_Create_folder
 38699 ;;		_Open_dir
 38700 ;;		_File_read_
 38701 ;; This function uses a non-reentrant model
 38702 ;;
 38703                           
 38704                           	psect	text129
 38705  00616E                     __ptext129:
 38706                           	opt stack 0
 38707  00616E                     _Switch:
 38708                           	opt stack 24
 38709                           
 38710                           ;incstack = 0
 38711                           ;Switch@c stored from wreg
 38712  00616E  6E1B               	movwf	Switch@c,c
 38713                           
 38714                           ;main.c: 330: unsigned char exit[5]="exit";
 38715  006170  EE21  F0E8         	lfsr	2,Switch@F4804
 38716  006174  EE10  F016         	lfsr	1,Switch@exit
 38717  006178  0E05               	movlw	5
 38718  00617A                     u14851:
 38719  00617A  CFDE FFE6          	movff	postinc2,postinc1
 38720  00617E  2EE8               	decfsz	wreg,f,c
 38721  006180  D7FC               	goto	u14851
 38722                           
 38723                           ;main.c: 331: i=0;
 38724  006182  0101               	movlb	1	; () banked
 38725  006184  6B9C               	clrf	(_i+1)& (0+255),b
 38726  006186  6B9B               	clrf	_i& (0+255),b
 38727                           
 38728                           ; BSR set to: 1
 38729                           ;main.c: 332: if(!(strcmp(string, exit)))
 38730  006188  0E01               	movlw	high _string
 38731  00618A  6E02               	movwf	strcmp@s1+1,c
 38732  00618C  0EAF               	movlw	low _string
 38733  00618E  6E01               	movwf	strcmp@s1,c
 38734  006190  0E00               	movlw	high Switch@exit
 38735  006192  6E04               	movwf	strcmp@s2+1,c
 38736  006194  0E16               	movlw	low Switch@exit
 38737  006196  6E03               	movwf	strcmp@s2,c
 38738  006198  EC8A  F029         	call	_strcmp	;wreg free
 38739  00619C  5002               	movf	?_strcmp+1,w,c
 38740  00619E  1001               	iorwf	?_strcmp,w,c
 38741  0061A0  E109               	bnz	l12431
 38742                           
 38743                           ;main.c: 333: {
 38744                           ;main.c: 334: Write_str(string);
 38745  0061A2  0E01               	movlw	high _string
 38746  0061A4  6E07               	movwf	Write_str@str+1,c
 38747  0061A6  0101               	movlb	1	; () banked
 38748  0061A8  0EAF               	movlw	low _string
 38749  0061AA  6E06               	movwf	Write_str@str,c
 38750  0061AC  EC3C  F01F         	call	_Write_str	;wreg free
 38751                           
 38752                           ;main.c: 335: return(2);
 38753  0061B0  0E02               	movlw	2
 38754  0061B2  D05C               	goto	l1678
 38755  0061B4                     l12431:
 38756                           
 38757                           ;main.c: 337: else if(c=='w')
 38758  0061B4  501B               	movf	Switch@c,w,c
 38759  0061B6  0A77               	xorlw	119
 38760  0061B8  E004               	bz	l12437
 38761  0061BA  D04A               	goto	l12467
 38762  0061BC                     l12435:
 38763                           
 38764                           ;main.c: 340: i++;
 38765  0061BC  0101               	movlb	1	; () banked
 38766  0061BE  4B9B               	infsnz	_i& (0+255),f,b
 38767  0061C0  2B9C               	incf	(_i+1)& (0+255),f,b
 38768  0061C2                     l12437:
 38769  0061C2  0EAF               	movlw	low _string
 38770  0061C4  0101               	movlb	1	; () banked
 38771  0061C6  259B               	addwf	_i& (0+255),w,b
 38772  0061C8  6ED9               	movwf	fsr2l,c
 38773  0061CA  0E01               	movlw	high _string
 38774  0061CC  219C               	addwfc	(_i+1)& (0+255),w,b
 38775  0061CE  6EDA               	movwf	fsr2h,c
 38776  0061D0  50DF               	movf	indf2,w,c
 38777  0061D2  0A2E               	xorlw	46
 38778  0061D4  E008               	bz	l12441
 38779                           
 38780                           ; BSR set to: 1
 38781  0061D6  0EAF               	movlw	low _string
 38782  0061D8  259B               	addwf	_i& (0+255),w,b
 38783  0061DA  6ED9               	movwf	fsr2l,c
 38784  0061DC  0E01               	movlw	high _string
 38785  0061DE  219C               	addwfc	(_i+1)& (0+255),w,b
 38786  0061E0  6EDA               	movwf	fsr2h,c
 38787  0061E2  50DF               	movf	indf2,w,c
 38788  0061E4  E1EB               	bnz	l12435
 38789  0061E6                     l12441:
 38790                           
 38791                           ; BSR set to: 1
 38792                           ;main.c: 341: if(string[i] == '.')
 38793  0061E6  0EAF               	movlw	low _string
 38794  0061E8  0101               	movlb	1	; () banked
 38795  0061EA  259B               	addwf	_i& (0+255),w,b
 38796  0061EC  6ED9               	movwf	fsr2l,c
 38797  0061EE  0E01               	movlw	high _string
 38798  0061F0  219C               	addwfc	(_i+1)& (0+255),w,b
 38799  0061F2  6EDA               	movwf	fsr2h,c
 38800  0061F4  0E2E               	movlw	46
 38801  0061F6  62DF               	cpfseq	indf2,c
 38802  0061F8  D023               	goto	l12461
 38803                           
 38804                           ; BSR set to: 1
 38805                           ;main.c: 342: {
 38806                           ;main.c: 343: i++;
 38807  0061FA  4B9B               	infsnz	_i& (0+255),f,b
 38808  0061FC  2B9C               	incf	(_i+1)& (0+255),f,b
 38809                           
 38810                           ; BSR set to: 1
 38811                           ;main.c: 344: if(Check_extension(string+i, string))
 38812  0061FE  0EAF               	movlw	low _string
 38813  006200  259B               	addwf	_i& (0+255),w,b
 38814  006202  6E0A               	movwf	Check_extension@xtn,c
 38815  006204  0E01               	movlw	high _string
 38816  006206  219C               	addwfc	(_i+1)& (0+255),w,b
 38817  006208  6E0B               	movwf	Check_extension@xtn+1,c
 38818  00620A  0EAF               	movlw	low _string
 38819  00620C  6E0C               	movwf	Check_extension@str_1,c
 38820  00620E  ECD1  F029         	call	_Check_extension	;wreg free
 38821  006212  0900               	iorlw	0
 38822  006214  E00E               	bz	l12455
 38823                           
 38824                           ;main.c: 345: {
 38825                           ;main.c: 346: Format_string(m, string, 'w');
 38826  006216  0E02               	movlw	high _m
 38827  006218  6E02               	movwf	Format_string@buf_1+1,c
 38828  00621A  0E89               	movlw	low _m
 38829  00621C  6E01               	movwf	Format_string@buf_1,c
 38830  00621E  0E01               	movlw	high _string
 38831  006220  6E04               	movwf	Format_string@buf_2+1,c
 38832  006222  0101               	movlb	1	; () banked
 38833  006224  0EAF               	movlw	low _string
 38834  006226  6E03               	movwf	Format_string@buf_2,c
 38835  006228  0E77               	movlw	119
 38836  00622A  6E05               	movwf	Format_string@c,c
 38837  00622C  EC34  F028         	call	_Format_string	;wreg free
 38838  006230  D01C               	goto	L138
 38839  006232                     l12455:
 38840                           
 38841                           ;main.c: 349: else
 38842                           ;main.c: 350: {
 38843                           ;main.c: 351: Write_str("\n\rFile extension error!");
 38844  006232  0EFE               	movlw	high STR_15
 38845  006234  6E07               	movwf	Write_str@str+1,c
 38846  006236  0E53               	movlw	low STR_15
 38847  006238  6E06               	movwf	Write_str@str,c
 38848  00623A  EC3C  F01F         	call	_Write_str	;wreg free
 38849  00623E  D006               	goto	L139
 38850  006240                     l12461:
 38851                           
 38852                           ;main.c: 355: else
 38853                           ;main.c: 356: {
 38854                           ;main.c: 357: Write_str("\n\rFile extension error!");
 38855  006240  0EFE               	movlw	high STR_15
 38856  006242  6E07               	movwf	Write_str@str+1,c
 38857  006244  0E53               	movlw	low STR_15
 38858  006246  6E06               	movwf	Write_str@str,c
 38859  006248  EC3C  F01F         	call	_Write_str	;wreg free
 38860  00624C                     L139:
 38861                           
 38862                           ;main.c: 358: return(0);
 38863  00624C  0E00               	movlw	0
 38864  00624E  D00E               	goto	l1678
 38865  006250                     l12467:
 38866                           
 38867                           ;main.c: 361: else
 38868                           ;main.c: 362: {
 38869                           ;main.c: 363: Format_string(m, string, 'r');
 38870  006250  0E02               	movlw	high _m
 38871  006252  6E02               	movwf	Format_string@buf_1+1,c
 38872  006254  0E89               	movlw	low _m
 38873  006256  6E01               	movwf	Format_string@buf_1,c
 38874  006258  0E01               	movlw	high _string
 38875  00625A  6E04               	movwf	Format_string@buf_2+1,c
 38876  00625C  0101               	movlb	1	; () banked
 38877  00625E  0EAF               	movlw	low _string
 38878  006260  6E03               	movwf	Format_string@buf_2,c
 38879  006262  0E72               	movlw	114
 38880  006264  6E05               	movwf	Format_string@c,c
 38881  006266  EC34  F028         	call	_Format_string	;wreg free
 38882  00626A                     L138:
 38883                           
 38884                           ;main.c: 364: return (1);
 38885  00626A  0E01               	movlw	1
 38886  00626C                     l1678:
 38887  00626C  0012               	return	
 38888  00626E                     __end_of_Switch:
 38889                           	opt stack 0
 38890                           tosu	equ	0xFFF
 38891                           tosh	equ	0xFFE
 38892                           tosl	equ	0xFFD
 38893                           pclath	equ	0xFFA
 38894                           tblptru	equ	0xFF8
 38895                           tblptrh	equ	0xFF7
 38896                           tblptrl	equ	0xFF6
 38897                           tablat	equ	0xFF5
 38898                           prodh	equ	0xFF4
 38899                           prodl	equ	0xFF3
 38900                           indf0	equ	0xFEF
 38901                           postinc0	equ	0xFEE
 38902                           postdec0	equ	0xFED
 38903                           fsr0h	equ	0xFEA
 38904                           fsr0l	equ	0xFE9
 38905                           wreg	equ	0xFE8
 38906                           indf1	equ	0xFE7
 38907                           postinc1	equ	0xFE6
 38908                           postdec1	equ	0xFE5
 38909                           fsr1h	equ	0xFE2
 38910                           fsr1l	equ	0xFE1
 38911                           indf2	equ	0xFDF
 38912                           postinc2	equ	0xFDE
 38913                           postdec2	equ	0xFDD
 38914                           fsr2h	equ	0xFDA
 38915                           fsr2l	equ	0xFD9
 38916                           status	equ	0xFD8
 38917                           
 38918 ;; *************** function _strcmp *****************
 38919 ;; Defined at:
 38920 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strcmp.c"
 38921 ;; Parameters:    Size  Location     Type
 38922 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 38923 ;;		 -> string(30), 
 38924 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 38925 ;;		 -> Switch@exit(5), 
 38926 ;; Auto vars:     Size  Location     Type
 38927 ;;  t1              1    8[COMRAM] unsigned char 
 38928 ;;  t2              1    7[COMRAM] unsigned char 
 38929 ;;  t0              1    6[COMRAM] unsigned char 
 38930 ;; Return value:  Size  Location     Type
 38931 ;;                  2    0[COMRAM] int 
 38932 ;; Registers used:
 38933 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38934 ;; Tracked objects:
 38935 ;;		On entry : 0/0
 38936 ;;		On exit  : 0/0
 38937 ;;		Unchanged: 0/0
 38938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38939 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38940 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38942 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38943 ;;Total ram usage:        9 bytes
 38944 ;; Hardware stack levels used:    1
 38945 ;; This function calls:
 38946 ;;		Nothing
 38947 ;; This function is called by:
 38948 ;;		_Switch
 38949 ;; This function uses a non-reentrant model
 38950 ;;
 38951                           
 38952                           	psect	text130
 38953  005314                     __ptext130:
 38954                           	opt stack 0
 38955  005314                     _strcmp:
 38956                           	opt stack 27
 38957                           
 38958                           ;incstack = 0
 38959  005314  C001  FFD9         	movff	strcmp@s1,fsr2l
 38960  005318  C002  FFDA         	movff	strcmp@s1+1,fsr2h
 38961  00531C  50DF               	movf	indf2,w,c
 38962  00531E  6E07               	movwf	strcmp@t0,c
 38963  005320  C003  FFD9         	movff	strcmp@s2,fsr2l
 38964  005324  C004  FFDA         	movff	strcmp@s2+1,fsr2h
 38965  005328  50DF               	movf	indf2,w,c
 38966  00532A  6E09               	movwf	strcmp@t1,c
 38967  00532C  6607               	tstfsz	strcmp@t0,c
 38968  00532E  D001               	goto	l12099
 38969  005330  D02A               	goto	l12123
 38970  005332                     l12099:
 38971  005332  0E02               	movlw	2
 38972  005334  2601               	addwf	strcmp@s1,f,c
 38973  005336  0E00               	movlw	0
 38974  005338  2202               	addwfc	strcmp@s1+1,f,c
 38975  00533A  5007               	movf	strcmp@t0,w,c
 38976  00533C  1809               	xorwf	strcmp@t1,w,c
 38977  00533E  E123               	bnz	l12123
 38978  005340  EE2F F0FF          	lfsr	2,-1
 38979  005344  5001               	movf	strcmp@s1,w,c
 38980  005346  26D9               	addwf	fsr2l,f,c
 38981  005348  5002               	movf	strcmp@s1+1,w,c
 38982  00534A  22DA               	addwfc	fsr2h,f,c
 38983  00534C  50DF               	movf	indf2,w,c
 38984  00534E  6E08               	movwf	strcmp@t2,c
 38985  005350  EE20 F001          	lfsr	2,1
 38986  005354  5003               	movf	strcmp@s2,w,c
 38987  005356  26D9               	addwf	fsr2l,f,c
 38988  005358  5004               	movf	strcmp@s2+1,w,c
 38989  00535A  22DA               	addwfc	fsr2h,f,c
 38990  00535C  50DF               	movf	indf2,w,c
 38991  00535E  6E09               	movwf	strcmp@t1,c
 38992  005360  6608               	tstfsz	strcmp@t2,c
 38993  005362  D001               	goto	l12113
 38994  005364  D007               	goto	u14360
 38995  005366                     l12113:
 38996  005366  0E02               	movlw	2
 38997  005368  2603               	addwf	strcmp@s2,f,c
 38998  00536A  0E00               	movlw	0
 38999  00536C  2204               	addwfc	strcmp@s2+1,f,c
 39000  00536E  5009               	movf	strcmp@t1,w,c
 39001  005370  1808               	xorwf	strcmp@t2,w,c
 39002  005372  E0D0               	bz	_strcmp
 39003  005374                     u14360:
 39004  005374  5009               	movf	strcmp@t1,w,c
 39005  005376  6E05               	movwf	??_strcmp& (0+255),c
 39006  005378  6A06               	clrf	(??_strcmp+1)& (0+255),c
 39007  00537A  1E05               	comf	??_strcmp,f,c
 39008  00537C  1E06               	comf	??_strcmp+1,f,c
 39009  00537E  4A05               	infsnz	??_strcmp,f,c
 39010  005380  2A06               	incf	??_strcmp+1,f,c
 39011  005382  5008               	movf	strcmp@t2,w,c
 39012  005384  D008               	goto	L140
 39013  005386                     l12123:
 39014  005386  5009               	movf	strcmp@t1,w,c
 39015  005388  6E05               	movwf	??_strcmp& (0+255),c
 39016  00538A  6A06               	clrf	(??_strcmp+1)& (0+255),c
 39017  00538C  1E05               	comf	??_strcmp,f,c
 39018  00538E  1E06               	comf	??_strcmp+1,f,c
 39019  005390  4A05               	infsnz	??_strcmp,f,c
 39020  005392  2A06               	incf	??_strcmp+1,f,c
 39021  005394  5007               	movf	strcmp@t0,w,c
 39022  005396                     L140:
 39023  005396  2405               	addwf	??_strcmp,w,c
 39024  005398  6E01               	movwf	?_strcmp,c
 39025  00539A  0E00               	movlw	0
 39026  00539C  2006               	addwfc	??_strcmp+1,w,c
 39027  00539E  6E02               	movwf	?_strcmp+1,c
 39028  0053A0  0012               	return	
 39029  0053A2                     __end_of_strcmp:
 39030                           	opt stack 0
 39031                           tosu	equ	0xFFF
 39032                           tosh	equ	0xFFE
 39033                           tosl	equ	0xFFD
 39034                           pclath	equ	0xFFA
 39035                           tblptru	equ	0xFF8
 39036                           tblptrh	equ	0xFF7
 39037                           tblptrl	equ	0xFF6
 39038                           tablat	equ	0xFF5
 39039                           prodh	equ	0xFF4
 39040                           prodl	equ	0xFF3
 39041                           indf0	equ	0xFEF
 39042                           postinc0	equ	0xFEE
 39043                           postdec0	equ	0xFED
 39044                           fsr0h	equ	0xFEA
 39045                           fsr0l	equ	0xFE9
 39046                           wreg	equ	0xFE8
 39047                           indf1	equ	0xFE7
 39048                           postinc1	equ	0xFE6
 39049                           postdec1	equ	0xFE5
 39050                           fsr1h	equ	0xFE2
 39051                           fsr1l	equ	0xFE1
 39052                           indf2	equ	0xFDF
 39053                           postinc2	equ	0xFDE
 39054                           postdec2	equ	0xFDD
 39055                           fsr2h	equ	0xFDA
 39056                           fsr2l	equ	0xFD9
 39057                           status	equ	0xFD8
 39058                           
 39059 ;; *************** function _Format_string *****************
 39060 ;; Defined at:
 39061 ;;		line 307 in file "main.c"
 39062 ;; Parameters:    Size  Location     Type
 39063 ;;  buf_1           2    0[COMRAM] PTR unsigned char 
 39064 ;;		 -> m(30), 
 39065 ;;  buf_2           2    2[COMRAM] PTR unsigned char 
 39066 ;;		 -> string(30), 
 39067 ;;  c               1    4[COMRAM] unsigned char 
 39068 ;; Auto vars:     Size  Location     Type
 39069 ;;		None
 39070 ;; Return value:  Size  Location     Type
 39071 ;;		None               void
 39072 ;; Registers used:
 39073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 39074 ;; Tracked objects:
 39075 ;;		On entry : 0/0
 39076 ;;		On exit  : 0/0
 39077 ;;		Unchanged: 0/0
 39078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39079 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39082 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39083 ;;Total ram usage:        5 bytes
 39084 ;; Hardware stack levels used:    1
 39085 ;; This function calls:
 39086 ;;		Nothing
 39087 ;; This function is called by:
 39088 ;;		_Switch
 39089 ;; This function uses a non-reentrant model
 39090 ;;
 39091                           
 39092                           	psect	text131
 39093  005068                     __ptext131:
 39094                           	opt stack 0
 39095  005068                     _Format_string:
 39096                           	opt stack 27
 39097                           
 39098                           ;main.c: 309: *buf_1 = '/';
 39099                           
 39100                           ;incstack = 0
 39101  005068  C001  FFD9         	movff	Format_string@buf_1,fsr2l
 39102  00506C  C002  FFDA         	movff	Format_string@buf_1+1,fsr2h
 39103  005070  0E2F               	movlw	47
 39104  005072  6EDF               	movwf	indf2,c
 39105                           
 39106                           ;main.c: 310: buf_1++;
 39107  005074  4A01               	infsnz	Format_string@buf_1,f,c
 39108  005076  2A02               	incf	Format_string@buf_1+1,f,c
 39109                           
 39110                           ;main.c: 311: for(i=0;*buf_2!='\0';i++)
 39111  005078  0E00               	movlw	0
 39112  00507A  0101               	movlb	1	; () banked
 39113  00507C  6F9C               	movwf	(_i+1)& (0+255),b
 39114  00507E  6F9B               	movwf	_i& (0+255),b
 39115  005080  D028               	goto	l12089
 39116  005082                     l12071:
 39117                           
 39118                           ; BSR set to: 1
 39119                           ;main.c: 312: {
 39120                           ;main.c: 313: if(*buf_2=='.')
 39121  005082  0E2E               	movlw	46
 39122  005084  C003  FFD9         	movff	Format_string@buf_2,fsr2l
 39123  005088  C004  FFDA         	movff	Format_string@buf_2+1,fsr2h
 39124  00508C  62DF               	cpfseq	indf2,c
 39125  00508E  D010               	goto	l12081
 39126                           
 39127                           ; BSR set to: 1
 39128                           ;main.c: 314: {
 39129                           ;main.c: 315: if((c == 'r') || (c == 'd') || (c=='n'))
 39130  005090  5005               	movf	Format_string@c,w,c
 39131  005092  0A72               	xorlw	114
 39132  005094  E006               	bz	l12079
 39133                           
 39134                           ; BSR set to: 1
 39135  005096  5005               	movf	Format_string@c,w,c
 39136  005098  0A64               	xorlw	100
 39137  00509A  E003               	bz	l12079
 39138                           
 39139                           ; BSR set to: 1
 39140  00509C  5005               	movf	Format_string@c,w,c
 39141  00509E  0A6E               	xorlw	110
 39142  0050A0  E107               	bnz	l12081
 39143  0050A2                     l12079:
 39144                           
 39145                           ; BSR set to: 1
 39146                           ;main.c: 316: {
 39147                           ;main.c: 317: *buf_1='\0';
 39148  0050A2  C001  FFD9         	movff	Format_string@buf_1,fsr2l
 39149  0050A6  C002  FFDA         	movff	Format_string@buf_1+1,fsr2h
 39150  0050AA  0E00               	movlw	0
 39151  0050AC  6EDF               	movwf	indf2,c
 39152                           
 39153                           ;main.c: 318: break;
 39154  0050AE  D017               	goto	l12091
 39155  0050B0                     l12081:
 39156                           
 39157                           ; BSR set to: 1
 39158                           ;main.c: 319: }
 39159                           ;main.c: 320: }
 39160                           ;main.c: 321: *buf_1 = *buf_2;
 39161  0050B0  C003  FFD9         	movff	Format_string@buf_2,fsr2l
 39162  0050B4  C004  FFDA         	movff	Format_string@buf_2+1,fsr2h
 39163  0050B8  C001  FFE1         	movff	Format_string@buf_1,fsr1l
 39164  0050BC  C002  FFE2         	movff	Format_string@buf_1+1,fsr1h
 39165  0050C0  CFDF FFE7          	movff	indf2,indf1
 39166                           
 39167                           ; BSR set to: 1
 39168                           ;main.c: 322: buf_1++;
 39169  0050C4  4A01               	infsnz	Format_string@buf_1,f,c
 39170  0050C6  2A02               	incf	Format_string@buf_1+1,f,c
 39171                           
 39172                           ; BSR set to: 1
 39173                           ;main.c: 323: buf_2++;
 39174  0050C8  4A03               	infsnz	Format_string@buf_2,f,c
 39175  0050CA  2A04               	incf	Format_string@buf_2+1,f,c
 39176                           
 39177                           ; BSR set to: 1
 39178  0050CC  0101               	movlb	1	; () banked
 39179  0050CE  4B9B               	infsnz	_i& (0+255),f,b
 39180  0050D0  2B9C               	incf	(_i+1)& (0+255),f,b
 39181  0050D2                     l12089:
 39182                           
 39183                           ; BSR set to: 1
 39184  0050D2  C003  FFD9         	movff	Format_string@buf_2,fsr2l
 39185  0050D6  C004  FFDA         	movff	Format_string@buf_2+1,fsr2h
 39186  0050DA  50DF               	movf	indf2,w,c
 39187  0050DC  E1D2               	bnz	l12071
 39188  0050DE                     l12091:
 39189                           
 39190                           ; BSR set to: 1
 39191                           ;main.c: 324: }
 39192                           ;main.c: 325: *buf_1 = '\0';
 39193  0050DE  C001  FFD9         	movff	Format_string@buf_1,fsr2l
 39194  0050E2  C002  FFDA         	movff	Format_string@buf_1+1,fsr2h
 39195  0050E6  0E00               	movlw	0
 39196  0050E8  6EDF               	movwf	indf2,c
 39197                           
 39198                           ; BSR set to: 1
 39199  0050EA  0C00               	retlw	0
 39200  0050EC                     __end_of_Format_string:
 39201                           	opt stack 0
 39202                           tosu	equ	0xFFF
 39203                           tosh	equ	0xFFE
 39204                           tosl	equ	0xFFD
 39205                           pclath	equ	0xFFA
 39206                           tblptru	equ	0xFF8
 39207                           tblptrh	equ	0xFF7
 39208                           tblptrl	equ	0xFF6
 39209                           tablat	equ	0xFF5
 39210                           prodh	equ	0xFF4
 39211                           prodl	equ	0xFF3
 39212                           indf0	equ	0xFEF
 39213                           postinc0	equ	0xFEE
 39214                           postdec0	equ	0xFED
 39215                           fsr0h	equ	0xFEA
 39216                           fsr0l	equ	0xFE9
 39217                           wreg	equ	0xFE8
 39218                           indf1	equ	0xFE7
 39219                           postinc1	equ	0xFE6
 39220                           postdec1	equ	0xFE5
 39221                           fsr1h	equ	0xFE2
 39222                           fsr1l	equ	0xFE1
 39223                           indf2	equ	0xFDF
 39224                           postinc2	equ	0xFDE
 39225                           postdec2	equ	0xFDD
 39226                           fsr2h	equ	0xFDA
 39227                           fsr2l	equ	0xFD9
 39228                           status	equ	0xFD8
 39229                           
 39230 ;; *************** function _Check_extension *****************
 39231 ;; Defined at:
 39232 ;;		line 292 in file "main.c"
 39233 ;; Parameters:    Size  Location     Type
 39234 ;;  xtn             2    9[COMRAM] PTR unsigned char 
 39235 ;;		 -> string(30), 
 39236 ;;  str_1           1   11[COMRAM] unsigned char 
 39237 ;; Auto vars:     Size  Location     Type
 39238 ;;  s_2             4   16[COMRAM] unsigned char [4]
 39239 ;;  s_1             4   12[COMRAM] unsigned char [4]
 39240 ;;  j               1   20[COMRAM] unsigned char 
 39241 ;; Return value:  Size  Location     Type
 39242 ;;                  1    wreg      unsigned char 
 39243 ;; Registers used:
 39244 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39245 ;; Tracked objects:
 39246 ;;		On entry : 0/0
 39247 ;;		On exit  : 0/0
 39248 ;;		Unchanged: 0/0
 39249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39250 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39251 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39253 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39254 ;;Total ram usage:       12 bytes
 39255 ;; Hardware stack levels used:    1
 39256 ;; Hardware stack levels required when called:    3
 39257 ;; This function calls:
 39258 ;;		_Write_str
 39259 ;;		_strncmp
 39260 ;; This function is called by:
 39261 ;;		_Switch
 39262 ;; This function uses a non-reentrant model
 39263 ;;
 39264                           
 39265                           	psect	text132
 39266  0053A2                     __ptext132:
 39267                           	opt stack 0
 39268  0053A2                     _Check_extension:
 39269                           	opt stack 24
 39270                           
 39271                           ;main.c: 294: unsigned char s_1[4]= "bin", s_2[4]="txt", j;
 39272                           
 39273                           ; BSR set to: 1
 39274                           ;incstack = 0
 39275  0053A2  C1ED  F00D         	movff	Check_extension@F4793,Check_extension@s_1
 39276  0053A6  C1EE  F00E         	movff	Check_extension@F4793+1,Check_extension@s_1+1
 39277  0053AA  C1EF  F00F         	movff	Check_extension@F4793+2,Check_extension@s_1+2
 39278  0053AE  C1F0  F010         	movff	Check_extension@F4793+3,Check_extension@s_1+3
 39279  0053B2  C1F1  F011         	movff	Check_extension@F4795,Check_extension@s_2
 39280  0053B6  C1F2  F012         	movff	Check_extension@F4795+1,Check_extension@s_2+1
 39281  0053BA  C1F3  F013         	movff	Check_extension@F4795+2,Check_extension@s_2+2
 39282  0053BE  C1F4  F014         	movff	Check_extension@F4795+3,Check_extension@s_2+3
 39283                           
 39284                           ;main.c: 295: if(!(strncmp(xtn, s_1, 3)) || !(strncmp(xtn, s_2, 3)))
 39285  0053C2  C00B  F002         	movff	Check_extension@xtn+1,strncmp@s1+1
 39286  0053C6  C00A  F001         	movff	Check_extension@xtn,strncmp@s1
 39287  0053CA  0E00               	movlw	high Check_extension@s_1
 39288  0053CC  6E04               	movwf	strncmp@s2+1,c
 39289  0053CE  0E0D               	movlw	low Check_extension@s_1
 39290  0053D0  6E03               	movwf	strncmp@s2,c
 39291  0053D2  6A06               	clrf	strncmp@len+1,c
 39292  0053D4  0E03               	movlw	3
 39293  0053D6  6E05               	movwf	strncmp@len,c
 39294  0053D8  EC11  F026         	call	_strncmp	;wreg free
 39295  0053DC  5002               	movf	?_strncmp+1,w,c
 39296  0053DE  1001               	iorwf	?_strncmp,w,c
 39297  0053E0  E010               	bz	l12041
 39298  0053E2  C00B  F002         	movff	Check_extension@xtn+1,strncmp@s1+1
 39299  0053E6  C00A  F001         	movff	Check_extension@xtn,strncmp@s1
 39300  0053EA  0E00               	movlw	high Check_extension@s_2
 39301  0053EC  6E04               	movwf	strncmp@s2+1,c
 39302  0053EE  0E11               	movlw	low Check_extension@s_2
 39303  0053F0  6E03               	movwf	strncmp@s2,c
 39304  0053F2  6A06               	clrf	strncmp@len+1,c
 39305  0053F4  0E03               	movlw	3
 39306  0053F6  6E05               	movwf	strncmp@len,c
 39307  0053F8  EC11  F026         	call	_strncmp	;wreg free
 39308  0053FC  5002               	movf	?_strncmp+1,w,c
 39309  0053FE  1001               	iorwf	?_strncmp,w,c
 39310  005400  E111               	bnz	l12059
 39311  005402                     l12041:
 39312                           
 39313                           ;main.c: 296: {
 39314                           ;main.c: 297: for(j=0;j<3;j++)
 39315  005402  0E00               	movlw	0
 39316  005404  6E15               	movwf	Check_extension@j,c
 39317  005406  D003               	goto	L141
 39318  005408                     l12047:
 39319                           
 39320                           ;main.c: 298: xtn++;
 39321  005408  4A0A               	infsnz	Check_extension@xtn,f,c
 39322  00540A  2A0B               	incf	Check_extension@xtn+1,f,c
 39323  00540C  2A15               	incf	Check_extension@j,f,c
 39324  00540E                     L141:
 39325  00540E  0E02               	movlw	2
 39326  005410  6415               	cpfsgt	Check_extension@j,c
 39327  005412  D7FA               	goto	l12047
 39328                           
 39329                           ;main.c: 299: *xtn = '\0';
 39330  005414  C00A  FFD9         	movff	Check_extension@xtn,fsr2l
 39331  005418  C00B  FFDA         	movff	Check_extension@xtn+1,fsr2h
 39332  00541C  0E00               	movlw	0
 39333  00541E  6EDF               	movwf	indf2,c
 39334                           
 39335                           ;main.c: 300: return(1);
 39336  005420  0E01               	movlw	1
 39337  005422  D007               	goto	l1661
 39338  005424                     l12059:
 39339                           
 39340                           ;main.c: 302: else
 39341                           ;main.c: 303: Write_str("\n\rExtension Failed");
 39342  005424  0EFF               	movlw	high STR_14
 39343  005426  6E07               	movwf	Write_str@str+1,c
 39344  005428  0E3E               	movlw	low STR_14
 39345  00542A  6E06               	movwf	Write_str@str,c
 39346  00542C  EC3C  F01F         	call	_Write_str	;wreg free
 39347                           
 39348                           ;main.c: 304: return(0);
 39349  005430  0E00               	movlw	0
 39350  005432                     l1661:
 39351  005432  0012               	return	
 39352  005434                     __end_of_Check_extension:
 39353                           	opt stack 0
 39354                           tosu	equ	0xFFF
 39355                           tosh	equ	0xFFE
 39356                           tosl	equ	0xFFD
 39357                           pclath	equ	0xFFA
 39358                           tblptru	equ	0xFF8
 39359                           tblptrh	equ	0xFF7
 39360                           tblptrl	equ	0xFF6
 39361                           tablat	equ	0xFF5
 39362                           prodh	equ	0xFF4
 39363                           prodl	equ	0xFF3
 39364                           indf0	equ	0xFEF
 39365                           postinc0	equ	0xFEE
 39366                           postdec0	equ	0xFED
 39367                           fsr0h	equ	0xFEA
 39368                           fsr0l	equ	0xFE9
 39369                           wreg	equ	0xFE8
 39370                           indf1	equ	0xFE7
 39371                           postinc1	equ	0xFE6
 39372                           postdec1	equ	0xFE5
 39373                           fsr1h	equ	0xFE2
 39374                           fsr1l	equ	0xFE1
 39375                           indf2	equ	0xFDF
 39376                           postinc2	equ	0xFDE
 39377                           postdec2	equ	0xFDD
 39378                           fsr2h	equ	0xFDA
 39379                           fsr2l	equ	0xFD9
 39380                           status	equ	0xFD8
 39381                           
 39382 ;; *************** function _strncmp *****************
 39383 ;; Defined at:
 39384 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\strncmp.c"
 39385 ;; Parameters:    Size  Location     Type
 39386 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 39387 ;;		 -> _fs.currentsector.sector.Name(11), string(30), 
 39388 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 39389 ;;		 -> Check_extension@s_2(4), Check_extension@s_1(4), RAM(3967), NULL(0), 
 39390 ;;  len             2    4[COMRAM] unsigned int 
 39391 ;; Auto vars:     Size  Location     Type
 39392 ;;		None
 39393 ;; Return value:  Size  Location     Type
 39394 ;;                  2    0[COMRAM] int 
 39395 ;; Registers used:
 39396 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39397 ;; Tracked objects:
 39398 ;;		On entry : 0/0
 39399 ;;		On exit  : 0/0
 39400 ;;		Unchanged: 0/0
 39401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39402 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39404 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39405 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39406 ;;Total ram usage:        9 bytes
 39407 ;; Hardware stack levels used:    1
 39408 ;; This function calls:
 39409 ;;		Nothing
 39410 ;; This function is called by:
 39411 ;;		_fatfs_sfn_exists
 39412 ;;		_fatfs_update_file_length
 39413 ;;		_fatfs_mark_file_deleted
 39414 ;;		_Check_extension
 39415 ;; This function uses a non-reentrant model
 39416 ;;
 39417                           
 39418                           	psect	text133
 39419  004C22                     __ptext133:
 39420                           	opt stack 0
 39421  004C22                     _strncmp:
 39422                           	opt stack 26
 39423                           
 39424                           ;incstack = 0
 39425  004C22  D02E               	goto	l9697
 39426  004C24                     l9687:
 39427  004C24  C001  FFD9         	movff	strncmp@s1,fsr2l
 39428  004C28  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 39429  004C2C  50DF               	movf	indf2,w,c
 39430  004C2E  E00C               	bz	l9691
 39431  004C30  C003  FFD9         	movff	strncmp@s2,fsr2l
 39432  004C34  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 39433  004C38  50DF               	movf	indf2,w,c
 39434  004C3A  6E07               	movwf	??_strncmp& (0+255),c
 39435  004C3C  C001  FFD9         	movff	strncmp@s1,fsr2l
 39436  004C40  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 39437  004C44  18DF               	xorwf	indf2,w,c
 39438  004C46  E018               	bz	l9695
 39439  004C48                     l9691:
 39440  004C48  C003  FFD9         	movff	strncmp@s2,fsr2l
 39441  004C4C  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 39442  004C50  50DF               	movf	indf2,w,c
 39443  004C52  6E07               	movwf	??_strncmp& (0+255),c
 39444  004C54  6A08               	clrf	(??_strncmp+1)& (0+255),c
 39445  004C56  1E07               	comf	??_strncmp,f,c
 39446  004C58  1E08               	comf	??_strncmp+1,f,c
 39447  004C5A  4A07               	infsnz	??_strncmp,f,c
 39448  004C5C  2A08               	incf	??_strncmp+1,f,c
 39449  004C5E  C001  FFD9         	movff	strncmp@s1,fsr2l
 39450  004C62  C002  FFDA         	movff	strncmp@s1+1,fsr2h
 39451  004C66  50DF               	movf	indf2,w,c
 39452  004C68  6E09               	movwf	(??_strncmp+2)& (0+255),c
 39453  004C6A  5009               	movf	??_strncmp+2,w,c
 39454  004C6C  2407               	addwf	??_strncmp,w,c
 39455  004C6E  6E01               	movwf	?_strncmp,c
 39456  004C70  0E00               	movlw	0
 39457  004C72  2008               	addwfc	??_strncmp+1,w,c
 39458  004C74  6E02               	movwf	?_strncmp+1,c
 39459  004C76  D00E               	goto	l2896
 39460  004C78                     l9695:
 39461  004C78  4A01               	infsnz	strncmp@s1,f,c
 39462  004C7A  2A02               	incf	strncmp@s1+1,f,c
 39463  004C7C  4A03               	infsnz	strncmp@s2,f,c
 39464  004C7E  2A04               	incf	strncmp@s2+1,f,c
 39465  004C80                     l9697:
 39466  004C80  0605               	decf	strncmp@len,f,c
 39467  004C82  A0D8               	btfss	status,0,c
 39468  004C84  0606               	decf	strncmp@len+1,f,c
 39469  004C86  2805               	incf	strncmp@len& (0+255),w,c
 39470  004C88  B4D8               	btfsc	status,2,c
 39471  004C8A  2806               	incf	(strncmp@len+1)& (0+255),w,c
 39472  004C8C  E1CB               	bnz	l9687
 39473  004C8E  0E00               	movlw	0
 39474  004C90  6E02               	movwf	?_strncmp+1,c
 39475  004C92  6E01               	movwf	?_strncmp,c
 39476  004C94                     l2896:
 39477  004C94  0012               	return	
 39478  004C96                     __end_of_strncmp:
 39479                           	opt stack 0
 39480                           tosu	equ	0xFFF
 39481                           tosh	equ	0xFFE
 39482                           tosl	equ	0xFFD
 39483                           pclath	equ	0xFFA
 39484                           tblptru	equ	0xFF8
 39485                           tblptrh	equ	0xFF7
 39486                           tblptrl	equ	0xFF6
 39487                           tablat	equ	0xFF5
 39488                           prodh	equ	0xFF4
 39489                           prodl	equ	0xFF3
 39490                           indf0	equ	0xFEF
 39491                           postinc0	equ	0xFEE
 39492                           postdec0	equ	0xFED
 39493                           fsr0h	equ	0xFEA
 39494                           fsr0l	equ	0xFE9
 39495                           wreg	equ	0xFE8
 39496                           indf1	equ	0xFE7
 39497                           postinc1	equ	0xFE6
 39498                           postdec1	equ	0xFE5
 39499                           fsr1h	equ	0xFE2
 39500                           fsr1l	equ	0xFE1
 39501                           indf2	equ	0xFDF
 39502                           postinc2	equ	0xFDE
 39503                           postdec2	equ	0xFDD
 39504                           fsr2h	equ	0xFDA
 39505                           fsr2l	equ	0xFD9
 39506                           status	equ	0xFD8
 39507                           
 39508 ;; *************** function _Write_str *****************
 39509 ;; Defined at:
 39510 ;;		line 29 in file "uart.c"
 39511 ;; Parameters:    Size  Location     Type
 39512 ;;  str             2    5[COMRAM] PTR unsigned char 
 39513 ;;		 -> STR_66(28), STR_65(32), STR_64(22), STR_62(19), 
 39514 ;;		 -> STR_61(146), STR_59(31), STR_58(48), STR_57(19), 
 39515 ;;		 -> STR_56(21), STR_54(36), STR_53(34), STR_52(24), 
 39516 ;;		 -> STR_51(3), STR_50(23), STR_49(33), STR_48(28), 
 39517 ;;		 -> STR_47(43), STR_46(20), STR_45(13), STR_44(25), 
 39518 ;;		 -> STR_42(38), STR_41(3), str_1(240), STR_40(20), 
 39519 ;;		 -> STR_39(33), STR_38(13), STR_37(25), STR_35(38), 
 39520 ;;		 -> STR_34(19), STR_33(26), STR_32(22), STR_31(33), 
 39521 ;;		 -> STR_30(48), STR_28(38), STR_27(39), STR_26(28), 
 39522 ;;		 -> STR_25(18), STR_24(37), STR_22(20), STR_20(21), 
 39523 ;;		 -> STR_19(54), STR_17(78), STR_16(24), STR_15(24), 
 39524 ;;		 -> m(30), string(30), STR_14(19), 
 39525 ;; Auto vars:     Size  Location     Type
 39526 ;;		None
 39527 ;; Return value:  Size  Location     Type
 39528 ;;		None               void
 39529 ;; Registers used:
 39530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39531 ;; Tracked objects:
 39532 ;;		On entry : 0/0
 39533 ;;		On exit  : 0/0
 39534 ;;		Unchanged: 0/0
 39535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39540 ;;Total ram usage:        2 bytes
 39541 ;; Hardware stack levels used:    1
 39542 ;; Hardware stack levels required when called:    2
 39543 ;; This function calls:
 39544 ;;		_putsUSART
 39545 ;; This function is called by:
 39546 ;;		_Check_extension
 39547 ;;		_Switch
 39548 ;;		_File_write
 39549 ;;		_File_append
 39550 ;;		_File_read
 39551 ;;		_File_delete
 39552 ;;		_Create_folder
 39553 ;;		_Open_dir
 39554 ;;		_File_format
 39555 ;;		_Format_drive
 39556 ;;		_File_IO
 39557 ;;		_main
 39558 ;;		_File_read_
 39559 ;; This function uses a non-reentrant model
 39560 ;;
 39561                           
 39562                           	psect	text134
 39563  003E78                     __ptext134:
 39564                           	opt stack 0
 39565  003E78                     _Write_str:
 39566                           	opt stack 28
 39567                           
 39568                           ;uart.c: 31: putsUSART((char *)str);
 39569                           
 39570                           ;incstack = 0
 39571  003E78  C007  F003         	movff	Write_str@str+1,putsUSART@data+1
 39572  003E7C  C006  F002         	movff	Write_str@str,putsUSART@data
 39573  003E80  ECDD  F023         	call	_putsUSART	;wreg free
 39574  003E84                     l2144:
 39575  003E84  B2AC               	btfsc	4012,1,c	;volatile
 39576  003E86  0012               	return	
 39577  003E88  D7FD               	goto	l2144
 39578  003E8A                     __end_of_Write_str:
 39579                           	opt stack 0
 39580                           tosu	equ	0xFFF
 39581                           tosh	equ	0xFFE
 39582                           tosl	equ	0xFFD
 39583                           pclath	equ	0xFFA
 39584                           tblptru	equ	0xFF8
 39585                           tblptrh	equ	0xFF7
 39586                           tblptrl	equ	0xFF6
 39587                           tablat	equ	0xFF5
 39588                           prodh	equ	0xFF4
 39589                           prodl	equ	0xFF3
 39590                           indf0	equ	0xFEF
 39591                           postinc0	equ	0xFEE
 39592                           postdec0	equ	0xFED
 39593                           fsr0h	equ	0xFEA
 39594                           fsr0l	equ	0xFE9
 39595                           wreg	equ	0xFE8
 39596                           indf1	equ	0xFE7
 39597                           postinc1	equ	0xFE6
 39598                           postdec1	equ	0xFE5
 39599                           fsr1h	equ	0xFE2
 39600                           fsr1l	equ	0xFE1
 39601                           indf2	equ	0xFDF
 39602                           postinc2	equ	0xFDE
 39603                           postdec2	equ	0xFDD
 39604                           fsr2h	equ	0xFDA
 39605                           fsr2l	equ	0xFD9
 39606                           status	equ	0xFD8
 39607                           
 39608 ;; *************** function _putsUSART *****************
 39609 ;; Defined at:
 39610 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uputs.c"
 39611 ;; Parameters:    Size  Location     Type
 39612 ;;  data            2    1[COMRAM] PTR unsigned char 
 39613 ;;		 -> STR_66(28), STR_65(32), STR_64(22), STR_62(19), 
 39614 ;;		 -> STR_61(146), STR_59(31), STR_58(48), STR_57(19), 
 39615 ;;		 -> STR_56(21), STR_54(36), STR_53(34), STR_52(24), 
 39616 ;;		 -> STR_51(3), STR_50(23), STR_49(33), STR_48(28), 
 39617 ;;		 -> STR_47(43), STR_46(20), STR_45(13), STR_44(25), 
 39618 ;;		 -> STR_42(38), STR_41(3), str_1(240), STR_40(20), 
 39619 ;;		 -> STR_39(33), STR_38(13), STR_37(25), STR_35(38), 
 39620 ;;		 -> STR_34(19), STR_33(26), STR_32(22), STR_31(33), 
 39621 ;;		 -> STR_30(48), STR_28(38), STR_27(39), STR_26(28), 
 39622 ;;		 -> STR_25(18), STR_24(37), STR_22(20), STR_20(21), 
 39623 ;;		 -> STR_19(54), STR_17(78), STR_16(24), STR_15(24), 
 39624 ;;		 -> m(30), string(30), STR_14(19), 
 39625 ;; Auto vars:     Size  Location     Type
 39626 ;;		None
 39627 ;; Return value:  Size  Location     Type
 39628 ;;		None               void
 39629 ;; Registers used:
 39630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39631 ;; Tracked objects:
 39632 ;;		On entry : 0/0
 39633 ;;		On exit  : 0/0
 39634 ;;		Unchanged: 0/0
 39635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39639 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39640 ;;Total ram usage:        4 bytes
 39641 ;; Hardware stack levels used:    1
 39642 ;; Hardware stack levels required when called:    1
 39643 ;; This function calls:
 39644 ;;		_WriteUSART
 39645 ;; This function is called by:
 39646 ;;		_Write_str
 39647 ;; This function uses a non-reentrant model
 39648 ;;
 39649                           
 39650                           	psect	text135
 39651  0047BA                     __ptext135:
 39652                           	opt stack 0
 39653  0047BA                     _putsUSART:
 39654                           	opt stack 28
 39655  0047BA                     l2280:
 39656  0047BA  A2AC               	btfss	4012,1,c	;volatile
 39657  0047BC  D7FE               	goto	l2280
 39658  0047BE  C002  FFF6         	movff	putsUSART@data,tblptrl
 39659  0047C2  C003  FFF7         	movff	putsUSART@data+1,tblptrh
 39660  0047C6  0E00               	movlw	low (__mediumconst shr (0+16))
 39661  0047C8  6EF8               	movwf	tblptru,c
 39662  0047CA  0E0F               	movlw	(high __ramtop+-1)
 39663  0047CC  64F7               	cpfsgt	tblptrh,c
 39664  0047CE  D003               	bra	u12727
 39665  0047D0  0008               	tblrd		*
 39666  0047D2  50F5               	movf	tablat,w,c
 39667  0047D4  D005               	bra	u12720
 39668  0047D6                     u12727:
 39669  0047D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 39670  0047DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 39671  0047DE  50EF               	movf	indf0,w,c
 39672  0047E0                     u12720:
 39673  0047E0  EC45  F01F         	call	_WriteUSART
 39674  0047E4  5002               	movf	putsUSART@data,w,c
 39675  0047E6  6E04               	movwf	??_putsUSART& (0+255),c
 39676  0047E8  5003               	movf	putsUSART@data+1,w,c
 39677  0047EA  6E05               	movwf	(??_putsUSART+1)& (0+255),c
 39678  0047EC  4A02               	infsnz	putsUSART@data,f,c
 39679  0047EE  2A03               	incf	putsUSART@data+1,f,c
 39680  0047F0  C004  FFF6         	movff	??_putsUSART,tblptrl
 39681  0047F4  C005  FFF7         	movff	??_putsUSART+1,tblptrh
 39682  0047F8  0E00               	movlw	low (__mediumconst shr (0+16))
 39683  0047FA  6EF8               	movwf	tblptru,c
 39684  0047FC  0E0F               	movlw	(high __ramtop+-1)
 39685  0047FE  64F7               	cpfsgt	tblptrh,c
 39686  004800  D003               	bra	u12737
 39687  004802  0008               	tblrd		*
 39688  004804  50F5               	movf	tablat,w,c
 39689  004806  D005               	bra	u12730
 39690  004808                     u12737:
 39691  004808  CFF6 FFE9          	movff	tblptrl,fsr0l
 39692  00480C  CFF7 FFEA          	movff	tblptrh,fsr0h
 39693  004810  50EF               	movf	indf0,w,c
 39694  004812                     u12730:
 39695  004812  0900               	iorlw	0
 39696  004814  B4D8               	btfsc	status,2,c
 39697  004816  0012               	return	
 39698  004818  D7D0               	goto	l2280
 39699  00481A                     __end_of_putsUSART:
 39700                           	opt stack 0
 39701                           tosu	equ	0xFFF
 39702                           tosh	equ	0xFFE
 39703                           tosl	equ	0xFFD
 39704                           pclath	equ	0xFFA
 39705                           tblptru	equ	0xFF8
 39706                           tblptrh	equ	0xFF7
 39707                           tblptrl	equ	0xFF6
 39708                           tablat	equ	0xFF5
 39709                           prodh	equ	0xFF4
 39710                           prodl	equ	0xFF3
 39711                           indf0	equ	0xFEF
 39712                           postinc0	equ	0xFEE
 39713                           postdec0	equ	0xFED
 39714                           fsr0h	equ	0xFEA
 39715                           fsr0l	equ	0xFE9
 39716                           wreg	equ	0xFE8
 39717                           indf1	equ	0xFE7
 39718                           postinc1	equ	0xFE6
 39719                           postdec1	equ	0xFE5
 39720                           fsr1h	equ	0xFE2
 39721                           fsr1l	equ	0xFE1
 39722                           indf2	equ	0xFDF
 39723                           postinc2	equ	0xFDE
 39724                           postdec2	equ	0xFDD
 39725                           fsr2h	equ	0xFDA
 39726                           fsr2l	equ	0xFD9
 39727                           status	equ	0xFD8
 39728                           
 39729 ;; *************** function _Read_str *****************
 39730 ;; Defined at:
 39731 ;;		line 67 in file "uart.c"
 39732 ;; Parameters:    Size  Location     Type
 39733 ;;  buffer          2    1[COMRAM] PTR unsigned char 
 39734 ;;		 -> string(30), 
 39735 ;; Auto vars:     Size  Location     Type
 39736 ;;  data            1    4[COMRAM] unsigned char 
 39737 ;;  i               1    3[COMRAM] unsigned char 
 39738 ;; Return value:  Size  Location     Type
 39739 ;;		None               void
 39740 ;; Registers used:
 39741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39742 ;; Tracked objects:
 39743 ;;		On entry : 0/0
 39744 ;;		On exit  : 0/0
 39745 ;;		Unchanged: 0/0
 39746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39748 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39750 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39751 ;;Total ram usage:        4 bytes
 39752 ;; Hardware stack levels used:    1
 39753 ;; Hardware stack levels required when called:    1
 39754 ;; This function calls:
 39755 ;;		_ReadUSART
 39756 ;;		_WriteUSART
 39757 ;; This function is called by:
 39758 ;;		_File_write
 39759 ;;		_File_append
 39760 ;;		_File_read
 39761 ;;		_File_delete
 39762 ;;		_Create_folder
 39763 ;;		_Open_dir
 39764 ;;		_Format_drive
 39765 ;;		_File_read_
 39766 ;; This function uses a non-reentrant model
 39767 ;;
 39768                           
 39769                           	psect	text136
 39770  004258                     __ptext136:
 39771                           	opt stack 0
 39772  004258                     _Read_str:
 39773                           	opt stack 27
 39774                           
 39775                           ;uart.c: 69: char i;
 39776                           ;uart.c: 70: unsigned char data;
 39777                           ;uart.c: 71: for(i=0;data!=0x0D;i++)
 39778                           
 39779                           ;incstack = 0
 39780  004258  6A04               	clrf	Read_str@i,c
 39781  00425A  5005               	movf	Read_str@data,w,c
 39782  00425C  0A0D               	xorlw	13
 39783  00425E  E017               	bz	l12491
 39784  004260                     l2178:
 39785  004260  AA9E               	btfss	3998,5,c	;volatile
 39786  004262  D7FE               	goto	l2178
 39787                           
 39788                           ;uart.c: 74: data = ReadUSART();
 39789  004264  ECE6  F01F         	call	_ReadUSART	;wreg free
 39790  004268  6E05               	movwf	Read_str@data,c
 39791                           
 39792                           ;uart.c: 75: if(data!=0x0D)
 39793  00426A  5005               	movf	Read_str@data,w,c
 39794  00426C  0A0D               	xorlw	13
 39795  00426E  E006               	bz	l12485
 39796                           
 39797                           ;uart.c: 76: *buffer = data;
 39798  004270  C002  FFD9         	movff	Read_str@buffer,fsr2l
 39799  004274  C003  FFDA         	movff	Read_str@buffer+1,fsr2h
 39800  004278  C005  FFDF         	movff	Read_str@data,indf2
 39801  00427C                     l12485:
 39802                           
 39803                           ;uart.c: 77: WriteUSART(data);
 39804  00427C  5005               	movf	Read_str@data,w,c
 39805  00427E  EC45  F01F         	call	_WriteUSART
 39806  004282                     l2182:
 39807  004282  A2AC               	btfss	4012,1,c	;volatile
 39808  004284  D7FE               	goto	l2182
 39809                           
 39810                           ;uart.c: 79: buffer++;
 39811  004286  4A02               	infsnz	Read_str@buffer,f,c
 39812  004288  2A03               	incf	Read_str@buffer+1,f,c
 39813  00428A  2A04               	incf	Read_str@i,f,c
 39814  00428C  D7E6               	goto	L142
 39815  00428E                     l12491:
 39816                           
 39817                           ;uart.c: 80: }
 39818                           ;uart.c: 81: WriteUSART(0x0D);
 39819  00428E  0E0D               	movlw	13
 39820  004290  EC45  F01F         	call	_WriteUSART
 39821  004294                     l2185:
 39822  004294  B2AC               	btfsc	4012,1,c	;volatile
 39823  004296  0012               	return	
 39824  004298  D7FD               	goto	l2185
 39825  00429A                     __end_of_Read_str:
 39826                           	opt stack 0
 39827                           tosu	equ	0xFFF
 39828                           tosh	equ	0xFFE
 39829                           tosl	equ	0xFFD
 39830                           pclath	equ	0xFFA
 39831                           tblptru	equ	0xFF8
 39832                           tblptrh	equ	0xFF7
 39833                           tblptrl	equ	0xFF6
 39834                           tablat	equ	0xFF5
 39835                           prodh	equ	0xFF4
 39836                           prodl	equ	0xFF3
 39837                           indf0	equ	0xFEF
 39838                           postinc0	equ	0xFEE
 39839                           postdec0	equ	0xFED
 39840                           fsr0h	equ	0xFEA
 39841                           fsr0l	equ	0xFE9
 39842                           wreg	equ	0xFE8
 39843                           indf1	equ	0xFE7
 39844                           postinc1	equ	0xFE6
 39845                           postdec1	equ	0xFE5
 39846                           fsr1h	equ	0xFE2
 39847                           fsr1l	equ	0xFE1
 39848                           indf2	equ	0xFDF
 39849                           postinc2	equ	0xFDE
 39850                           postdec2	equ	0xFDD
 39851                           fsr2h	equ	0xFDA
 39852                           fsr2l	equ	0xFD9
 39853                           status	equ	0xFD8
 39854                           
 39855 ;; *************** function _WriteUSART *****************
 39856 ;; Defined at:
 39857 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uwrite.c"
 39858 ;; Parameters:    Size  Location     Type
 39859 ;;  data            1    wreg     unsigned char 
 39860 ;; Auto vars:     Size  Location     Type
 39861 ;;  data            1    0[COMRAM] unsigned char 
 39862 ;; Return value:  Size  Location     Type
 39863 ;;		None               void
 39864 ;; Registers used:
 39865 ;;		wreg
 39866 ;; Tracked objects:
 39867 ;;		On entry : 0/0
 39868 ;;		On exit  : 0/0
 39869 ;;		Unchanged: 0/0
 39870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39874 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39875 ;;Total ram usage:        1 bytes
 39876 ;; Hardware stack levels used:    1
 39877 ;; This function calls:
 39878 ;;		Nothing
 39879 ;; This function is called by:
 39880 ;;		_Write
 39881 ;;		_Read_str
 39882 ;;		_putsUSART
 39883 ;;		_Read_string
 39884 ;; This function uses a non-reentrant model
 39885 ;;
 39886                           
 39887                           	psect	text137
 39888  003E8A                     __ptext137:
 39889                           	opt stack 0
 39890  003E8A                     _WriteUSART:
 39891                           	opt stack 26
 39892                           
 39893                           ;incstack = 0
 39894                           ;WriteUSART@data stored from wreg
 39895  003E8A  6E01               	movwf	WriteUSART@data,c
 39896  003E8C  ACAC               	btfss	4012,6,c	;volatile
 39897  003E8E  D004               	goto	l10379
 39898  003E90  90AC               	bcf	4012,0,c	;volatile
 39899  003E92  0101               	movlb	1	; () banked
 39900  003E94  B3A5               	btfsc	_USART_Status& (0+255),1,b
 39901                           
 39902                           ; BSR set to: 1
 39903  003E96  80AC               	bsf	4012,0,c	;volatile
 39904  003E98                     l10379:
 39905  003E98  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
 39906  003E9C  0012               	return	
 39907  003E9E                     __end_of_WriteUSART:
 39908                           	opt stack 0
 39909                           tosu	equ	0xFFF
 39910                           tosh	equ	0xFFE
 39911                           tosl	equ	0xFFD
 39912                           pclath	equ	0xFFA
 39913                           tblptru	equ	0xFF8
 39914                           tblptrh	equ	0xFF7
 39915                           tblptrl	equ	0xFF6
 39916                           tablat	equ	0xFF5
 39917                           prodh	equ	0xFF4
 39918                           prodl	equ	0xFF3
 39919                           indf0	equ	0xFEF
 39920                           postinc0	equ	0xFEE
 39921                           postdec0	equ	0xFED
 39922                           fsr0h	equ	0xFEA
 39923                           fsr0l	equ	0xFE9
 39924                           wreg	equ	0xFE8
 39925                           indf1	equ	0xFE7
 39926                           postinc1	equ	0xFE6
 39927                           postdec1	equ	0xFE5
 39928                           fsr1h	equ	0xFE2
 39929                           fsr1l	equ	0xFE1
 39930                           indf2	equ	0xFDF
 39931                           postinc2	equ	0xFDE
 39932                           postdec2	equ	0xFDD
 39933                           fsr2h	equ	0xFDA
 39934                           fsr2l	equ	0xFD9
 39935                           status	equ	0xFD8
 39936                           
 39937 ;; *************** function _ReadUSART *****************
 39938 ;; Defined at:
 39939 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
 39940 ;; Parameters:    Size  Location     Type
 39941 ;;		None
 39942 ;; Auto vars:     Size  Location     Type
 39943 ;;  data            1    0[COMRAM] unsigned char 
 39944 ;; Return value:  Size  Location     Type
 39945 ;;                  1    wreg      unsigned char 
 39946 ;; Registers used:
 39947 ;;		wreg, status,2, status,0
 39948 ;; Tracked objects:
 39949 ;;		On entry : 0/0
 39950 ;;		On exit  : 0/0
 39951 ;;		Unchanged: 0/0
 39952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39957 ;;Total ram usage:        1 bytes
 39958 ;; Hardware stack levels used:    1
 39959 ;; This function calls:
 39960 ;;		Nothing
 39961 ;; This function is called by:
 39962 ;;		_ReadUART
 39963 ;;		_Read_str
 39964 ;;		_Read_string
 39965 ;; This function uses a non-reentrant model
 39966 ;;
 39967                           
 39968                           	psect	text138
 39969  003FCC                     __ptext138:
 39970                           	opt stack 0
 39971  003FCC                     _ReadUSART:
 39972                           	opt stack 28
 39973                           
 39974                           ;incstack = 0
 39975  003FCC  0EF2               	movlw	242
 39976  003FCE  0101               	movlb	1	; () banked
 39977  003FD0  17A5               	andwf	_USART_Status& (0+255),f,b
 39978                           
 39979                           ; BSR set to: 1
 39980  003FD2  ACAB               	btfss	4011,6,c	;volatile
 39981  003FD4  D003               	goto	l2293
 39982                           
 39983                           ; BSR set to: 1
 39984  003FD6  91A5               	bcf	_USART_Status& (0+255),0,b
 39985  003FD8  B0AB               	btfsc	4011,0,c	;volatile
 39986                           
 39987                           ; BSR set to: 1
 39988  003FDA  81A5               	bsf	_USART_Status& (0+255),0,b
 39989  003FDC                     l2293:
 39990                           
 39991                           ; BSR set to: 1
 39992  003FDC  A4AB               	btfss	4011,2,c	;volatile
 39993  003FDE  D002               	goto	l2295
 39994                           
 39995                           ; BSR set to: 1
 39996  003FE0  0101               	movlb	1	; () banked
 39997  003FE2  85A5               	bsf	_USART_Status& (0+255),2,b
 39998  003FE4                     l2295:
 39999                           
 40000                           ; BSR set to: 1
 40001  003FE4  A2AB               	btfss	4011,1,c	;volatile
 40002  003FE6  D002               	goto	l2296
 40003                           
 40004                           ; BSR set to: 1
 40005  003FE8  0101               	movlb	1	; () banked
 40006  003FEA  87A5               	bsf	_USART_Status& (0+255),3,b
 40007  003FEC                     l2296:
 40008                           
 40009                           ; BSR set to: 1
 40010  003FEC  CFAE F001          	movff	4014,ReadUSART@data	;volatile
 40011                           
 40012                           ; BSR set to: 1
 40013  003FF0  5001               	movf	ReadUSART@data,w,c
 40014                           
 40015                           ; BSR set to: 1
 40016                           
 40017                           ; BSR set to: 1
 40018  003FF2  0012               	return	
 40019  003FF4                     __end_of_ReadUSART:
 40020                           	opt stack 0
 40021                           tosu	equ	0xFFF
 40022                           tosh	equ	0xFFE
 40023                           tosl	equ	0xFFD
 40024                           pclath	equ	0xFFA
 40025                           tblptru	equ	0xFF8
 40026                           tblptrh	equ	0xFF7
 40027                           tblptrl	equ	0xFF6
 40028                           tablat	equ	0xFF5
 40029                           prodh	equ	0xFF4
 40030                           prodl	equ	0xFF3
 40031                           indf0	equ	0xFEF
 40032                           postinc0	equ	0xFEE
 40033                           postdec0	equ	0xFED
 40034                           fsr0h	equ	0xFEA
 40035                           fsr0l	equ	0xFE9
 40036                           wreg	equ	0xFE8
 40037                           indf1	equ	0xFE7
 40038                           postinc1	equ	0xFE6
 40039                           postdec1	equ	0xFE5
 40040                           fsr1h	equ	0xFE2
 40041                           fsr1l	equ	0xFE1
 40042                           indf2	equ	0xFDF
 40043                           postinc2	equ	0xFDE
 40044                           postdec2	equ	0xFDD
 40045                           fsr2h	equ	0xFDA
 40046                           fsr2l	equ	0xFD9
 40047                           status	equ	0xFD8
 40048                           
 40049 ;; *************** function _Clr_str *****************
 40050 ;; Defined at:
 40051 ;;		line 262 in file "main.c"
 40052 ;; Parameters:    Size  Location     Type
 40053 ;;  buffer          2    0[COMRAM] PTR unsigned char 
 40054 ;;		 -> str_1(240), m(30), string(30), 
 40055 ;; Auto vars:     Size  Location     Type
 40056 ;;		None
 40057 ;; Return value:  Size  Location     Type
 40058 ;;		None               void
 40059 ;; Registers used:
 40060 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40061 ;; Tracked objects:
 40062 ;;		On entry : 0/0
 40063 ;;		On exit  : 0/0
 40064 ;;		Unchanged: 0/0
 40065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40070 ;;Total ram usage:        2 bytes
 40071 ;; Hardware stack levels used:    1
 40072 ;; This function calls:
 40073 ;;		Nothing
 40074 ;; This function is called by:
 40075 ;;		_File_write
 40076 ;;		_File_append
 40077 ;;		_File_read
 40078 ;;		_File_delete
 40079 ;;		_Create_folder
 40080 ;;		_Open_dir
 40081 ;;		_Format_drive
 40082 ;;		_File_read_
 40083 ;; This function uses a non-reentrant model
 40084 ;;
 40085                           
 40086                           	psect	text139
 40087  003F3E                     __ptext139:
 40088                           	opt stack 0
 40089  003F3E                     _Clr_str:
 40090                           	opt stack 28
 40091                           
 40092                           ;main.c: 264: while(*buffer)
 40093                           
 40094                           ; BSR set to: 1
 40095                           ;incstack = 0
 40096  003F3E  D008               	goto	l12391
 40097  003F40                     l12387:
 40098                           
 40099                           ;main.c: 265: {
 40100                           ;main.c: 266: *buffer = ' ';
 40101  003F40  C001  FFD9         	movff	Clr_str@buffer,fsr2l
 40102  003F44  C002  FFDA         	movff	Clr_str@buffer+1,fsr2h
 40103  003F48  0E20               	movlw	32
 40104  003F4A  6EDF               	movwf	indf2,c
 40105                           
 40106                           ;main.c: 267: buffer++;
 40107  003F4C  4A01               	infsnz	Clr_str@buffer,f,c
 40108  003F4E  2A02               	incf	Clr_str@buffer+1,f,c
 40109  003F50                     l12391:
 40110  003F50  C001  FFD9         	movff	Clr_str@buffer,fsr2l
 40111  003F54  C002  FFDA         	movff	Clr_str@buffer+1,fsr2h
 40112  003F58  50DF               	movf	indf2,w,c
 40113  003F5A  B4D8               	btfsc	status,2,c
 40114  003F5C  0012               	return	
 40115  003F5E  D7F0               	goto	l12387
 40116  003F60                     __end_of_Clr_str:
 40117                           	opt stack 0
 40118                           tosu	equ	0xFFF
 40119                           tosh	equ	0xFFE
 40120                           tosl	equ	0xFFD
 40121                           pclath	equ	0xFFA
 40122                           tblptru	equ	0xFF8
 40123                           tblptrh	equ	0xFF7
 40124                           tblptrl	equ	0xFF6
 40125                           tablat	equ	0xFF5
 40126                           prodh	equ	0xFF4
 40127                           prodl	equ	0xFF3
 40128                           indf0	equ	0xFEF
 40129                           postinc0	equ	0xFEE
 40130                           postdec0	equ	0xFED
 40131                           fsr0h	equ	0xFEA
 40132                           fsr0l	equ	0xFE9
 40133                           wreg	equ	0xFE8
 40134                           indf1	equ	0xFE7
 40135                           postinc1	equ	0xFE6
 40136                           postdec1	equ	0xFE5
 40137                           fsr1h	equ	0xFE2
 40138                           fsr1l	equ	0xFE1
 40139                           indf2	equ	0xFDF
 40140                           postinc2	equ	0xFDE
 40141                           postdec2	equ	0xFDD
 40142                           fsr2h	equ	0xFDA
 40143                           fsr2l	equ	0xFD9
 40144                           status	equ	0xFD8
 40145                           
 40146 ;; *************** function _ConfigUSART *****************
 40147 ;; Defined at:
 40148 ;;		line 18 in file "uart.c"
 40149 ;; Parameters:    Size  Location     Type
 40150 ;;  config_1        1    wreg     unsigned char 
 40151 ;;  config_2        1    6[COMRAM] unsigned char 
 40152 ;; Auto vars:     Size  Location     Type
 40153 ;;  config_1        1    7[COMRAM] unsigned char 
 40154 ;; Return value:  Size  Location     Type
 40155 ;;		None               void
 40156 ;; Registers used:
 40157 ;;		wreg, status,2, cstack
 40158 ;; Tracked objects:
 40159 ;;		On entry : 0/0
 40160 ;;		On exit  : 0/0
 40161 ;;		Unchanged: 0/0
 40162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40163 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40167 ;;Total ram usage:        2 bytes
 40168 ;; Hardware stack levels used:    1
 40169 ;; Hardware stack levels required when called:    1
 40170 ;; This function calls:
 40171 ;;		_OpenUSART
 40172 ;; This function is called by:
 40173 ;;		_main
 40174 ;; This function uses a non-reentrant model
 40175 ;;
 40176                           
 40177                           	psect	text140
 40178  003E6A                     __ptext140:
 40179                           	opt stack 0
 40180  003E6A                     _ConfigUSART:
 40181                           	opt stack 29
 40182                           
 40183                           ;incstack = 0
 40184                           ;ConfigUSART@config_1 stored from wreg
 40185  003E6A  6E08               	movwf	ConfigUSART@config_1,c
 40186                           
 40187                           ;uart.c: 20: OpenUSART(config_1, config_2);
 40188  003E6C  C007  F001         	movff	ConfigUSART@config_2,OpenUSART@spbrg
 40189  003E70  6A02               	clrf	OpenUSART@spbrg+1,c
 40190  003E72  5008               	movf	ConfigUSART@config_1,w,c
 40191  003E74  EF9E  F024         	goto	_OpenUSART
 40192  003E78                     __end_of_ConfigUSART:
 40193                           	opt stack 0
 40194                           tosu	equ	0xFFF
 40195                           tosh	equ	0xFFE
 40196                           tosl	equ	0xFFD
 40197                           pclath	equ	0xFFA
 40198                           tblptru	equ	0xFF8
 40199                           tblptrh	equ	0xFF7
 40200                           tblptrl	equ	0xFF6
 40201                           tablat	equ	0xFF5
 40202                           prodh	equ	0xFF4
 40203                           prodl	equ	0xFF3
 40204                           indf0	equ	0xFEF
 40205                           postinc0	equ	0xFEE
 40206                           postdec0	equ	0xFED
 40207                           fsr0h	equ	0xFEA
 40208                           fsr0l	equ	0xFE9
 40209                           wreg	equ	0xFE8
 40210                           indf1	equ	0xFE7
 40211                           postinc1	equ	0xFE6
 40212                           postdec1	equ	0xFE5
 40213                           fsr1h	equ	0xFE2
 40214                           fsr1l	equ	0xFE1
 40215                           indf2	equ	0xFDF
 40216                           postinc2	equ	0xFDE
 40217                           postdec2	equ	0xFDD
 40218                           fsr2h	equ	0xFDA
 40219                           fsr2l	equ	0xFD9
 40220                           status	equ	0xFD8
 40221                           
 40222 ;; *************** function _OpenUSART *****************
 40223 ;; Defined at:
 40224 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
 40225 ;; Parameters:    Size  Location     Type
 40226 ;;  config          1    wreg     unsigned char 
 40227 ;;  spbrg           2    0[COMRAM] unsigned int 
 40228 ;; Auto vars:     Size  Location     Type
 40229 ;;  config          1    5[COMRAM] unsigned char 
 40230 ;; Return value:  Size  Location     Type
 40231 ;;		None               void
 40232 ;; Registers used:
 40233 ;;		wreg, status,2
 40234 ;; Tracked objects:
 40235 ;;		On entry : 0/0
 40236 ;;		On exit  : 0/0
 40237 ;;		Unchanged: 0/0
 40238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40241 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40242 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40243 ;;Total ram usage:        6 bytes
 40244 ;; Hardware stack levels used:    1
 40245 ;; This function calls:
 40246 ;;		Nothing
 40247 ;; This function is called by:
 40248 ;;		_ConfigUSART
 40249 ;; This function uses a non-reentrant model
 40250 ;;
 40251                           
 40252                           	psect	text141
 40253  00493C                     __ptext141:
 40254                           	opt stack 0
 40255  00493C                     _OpenUSART:
 40256                           	opt stack 29
 40257                           
 40258                           ;incstack = 0
 40259                           ;OpenUSART@config stored from wreg
 40260  00493C  6E06               	movwf	OpenUSART@config,c
 40261  00493E  6AAC               	clrf	4012,c	;volatile
 40262  004940  6AAB               	clrf	4011,c	;volatile
 40263  004942  B006               	btfsc	OpenUSART@config,0,c
 40264  004944  88AC               	bsf	4012,4,c	;volatile
 40265  004946  A206               	btfss	OpenUSART@config,1,c
 40266  004948  D002               	goto	l12969
 40267  00494A  8CAC               	bsf	4012,6,c	;volatile
 40268  00494C  8CAB               	bsf	4011,6,c	;volatile
 40269  00494E                     l12969:
 40270  00494E  B406               	btfsc	OpenUSART@config,2,c
 40271  004950  8EAC               	bsf	4012,7,c	;volatile
 40272  004952  A606               	btfss	OpenUSART@config,3,c
 40273  004954  D002               	goto	l2263
 40274  004956  88AB               	bsf	4011,4,c	;volatile
 40275  004958  D001               	goto	l12977
 40276  00495A                     l2263:
 40277  00495A  8AAB               	bsf	4011,5,c	;volatile
 40278  00495C                     l12977:
 40279  00495C  B806               	btfsc	OpenUSART@config,4,c
 40280  00495E  84AC               	bsf	4012,2,c	;volatile
 40281  004960  989E               	bcf	3998,4,c	;volatile
 40282  004962  BA06               	btfsc	OpenUSART@config,5,c
 40283  004964  86AB               	bsf	4011,3,c	;volatile
 40284  004966  AC06               	btfss	OpenUSART@config,6,c
 40285  004968  D002               	goto	l2267
 40286  00496A  8A9D               	bsf	3997,5,c	;volatile
 40287  00496C  D001               	goto	l2268
 40288  00496E                     l2267:
 40289  00496E  9A9D               	bcf	3997,5,c	;volatile
 40290  004970                     l2268:
 40291  004970  9A9E               	bcf	3998,5,c	;volatile
 40292  004972  AE06               	btfss	OpenUSART@config,7,c
 40293  004974  D002               	goto	l2269
 40294  004976  889D               	bsf	3997,4,c	;volatile
 40295  004978  D001               	goto	l2270
 40296  00497A                     l2269:
 40297  00497A  989D               	bcf	3997,4,c	;volatile
 40298  00497C                     l2270:
 40299  00497C  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 40300  004980  C002  F003         	movff	OpenUSART@spbrg+1,??_OpenUSART
 40301  004984  C003  F004         	movff	??_OpenUSART,??_OpenUSART+1
 40302  004988  6A05               	clrf	(??_OpenUSART+2)& (0+255),c
 40303  00498A  5004               	movf	??_OpenUSART+1,w,c
 40304  00498C  6EB0               	movwf	4016,c	;volatile
 40305  00498E  8AAC               	bsf	4012,5,c	;volatile
 40306  004990  8EAB               	bsf	4011,7,c	;volatile
 40307  004992  9C94               	bcf	3988,6,c	;volatile
 40308  004994  8E94               	bsf	3988,7,c	;volatile
 40309  004996  B8AC               	btfsc	4012,4,c	;volatile
 40310  004998  BEAC               	btfsc	4012,7,c	;volatile
 40311  00499A  D001               	goto	l2272
 40312  00499C  8C94               	bsf	3988,6,c	;volatile
 40313  00499E                     l2272:
 40314  00499E  0012               	return	
 40315  0049A0                     __end_of_OpenUSART:
 40316                           	opt stack 0
 40317                           tosu	equ	0xFFF
 40318                           tosh	equ	0xFFE
 40319                           tosl	equ	0xFFD
 40320                           pclath	equ	0xFFA
 40321                           tblptru	equ	0xFF8
 40322                           tblptrh	equ	0xFF7
 40323                           tblptrl	equ	0xFF6
 40324                           tablat	equ	0xFF5
 40325                           prodh	equ	0xFF4
 40326                           prodl	equ	0xFF3
 40327                           indf0	equ	0xFEF
 40328                           postinc0	equ	0xFEE
 40329                           postdec0	equ	0xFED
 40330                           fsr0h	equ	0xFEA
 40331                           fsr0l	equ	0xFE9
 40332                           wreg	equ	0xFE8
 40333                           indf1	equ	0xFE7
 40334                           postinc1	equ	0xFE6
 40335                           postdec1	equ	0xFE5
 40336                           fsr1h	equ	0xFE2
 40337                           fsr1l	equ	0xFE1
 40338                           indf2	equ	0xFDF
 40339                           postinc2	equ	0xFDE
 40340                           postdec2	equ	0xFDD
 40341                           fsr2h	equ	0xFDA
 40342                           fsr2l	equ	0xFD9
 40343                           status	equ	0xFD8
 40344                           tosu	equ	0xFFF
 40345                           tosh	equ	0xFFE
 40346                           tosl	equ	0xFFD
 40347                           pclath	equ	0xFFA
 40348                           tblptru	equ	0xFF8
 40349                           tblptrh	equ	0xFF7
 40350                           tblptrl	equ	0xFF6
 40351                           tablat	equ	0xFF5
 40352                           prodh	equ	0xFF4
 40353                           prodl	equ	0xFF3
 40354                           indf0	equ	0xFEF
 40355                           postinc0	equ	0xFEE
 40356                           postdec0	equ	0xFED
 40357                           fsr0h	equ	0xFEA
 40358                           fsr0l	equ	0xFE9
 40359                           wreg	equ	0xFE8
 40360                           indf1	equ	0xFE7
 40361                           postinc1	equ	0xFE6
 40362                           postdec1	equ	0xFE5
 40363                           fsr1h	equ	0xFE2
 40364                           fsr1l	equ	0xFE1
 40365                           indf2	equ	0xFDF
 40366                           postinc2	equ	0xFDE
 40367                           postdec2	equ	0xFDD
 40368                           fsr2h	equ	0xFDA
 40369                           fsr2l	equ	0xFD9
 40370                           status	equ	0xFD8
 40371                           
 40372                           	psect	text142
 40373  000000                     __ptext142:
 40374                           	opt stack 0
 40375                           tosu	equ	0xFFF
 40376                           tosh	equ	0xFFE
 40377                           tosl	equ	0xFFD
 40378                           pclath	equ	0xFFA
 40379                           tblptru	equ	0xFF8
 40380                           tblptrh	equ	0xFF7
 40381                           tblptrl	equ	0xFF6
 40382                           tablat	equ	0xFF5
 40383                           prodh	equ	0xFF4
 40384                           prodl	equ	0xFF3
 40385                           indf0	equ	0xFEF
 40386                           postinc0	equ	0xFEE
 40387                           postdec0	equ	0xFED
 40388                           fsr0h	equ	0xFEA
 40389                           fsr0l	equ	0xFE9
 40390                           wreg	equ	0xFE8
 40391                           indf1	equ	0xFE7
 40392                           postinc1	equ	0xFE6
 40393                           postdec1	equ	0xFE5
 40394                           fsr1h	equ	0xFE2
 40395                           fsr1l	equ	0xFE1
 40396                           indf2	equ	0xFDF
 40397                           postinc2	equ	0xFDE
 40398                           postdec2	equ	0xFDD
 40399                           fsr2h	equ	0xFDA
 40400                           fsr2l	equ	0xFD9
 40401                           status	equ	0xFD8
 40402                           
 40403                           	psect	rparam
 40404  0000                     tosu	equ	0xFFF
 40405                           tosh	equ	0xFFE
 40406                           tosl	equ	0xFFD
 40407                           pclath	equ	0xFFA
 40408                           tblptru	equ	0xFF8
 40409                           tblptrh	equ	0xFF7
 40410                           tblptrl	equ	0xFF6
 40411                           tablat	equ	0xFF5
 40412                           prodh	equ	0xFF4
 40413                           prodl	equ	0xFF3
 40414                           indf0	equ	0xFEF
 40415                           postinc0	equ	0xFEE
 40416                           postdec0	equ	0xFED
 40417                           fsr0h	equ	0xFEA
 40418                           fsr0l	equ	0xFE9
 40419                           wreg	equ	0xFE8
 40420                           indf1	equ	0xFE7
 40421                           postinc1	equ	0xFE6
 40422                           postdec1	equ	0xFE5
 40423                           fsr1h	equ	0xFE2
 40424                           fsr1l	equ	0xFE1
 40425                           indf2	equ	0xFDF
 40426                           postinc2	equ	0xFDE
 40427                           postdec2	equ	0xFDD
 40428                           fsr2h	equ	0xFDA
 40429                           fsr2l	equ	0xFD9
 40430                           status	equ	0xFD8


Data Sizes:
    Strings     1427
    Constant    35
    Data        123
    BSS         2906
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128    128     128
    BANK1           256    139     249
    BANK2           256      0     184
    BANK3           256      0     240
    BANK4           256      0     240
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    _fs.fat_buffer_head.next	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.fat_buffer_head.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _open_file@sfEntry.next	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _open_file@sfEntry.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.next	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.next	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.fat_buffers.next	PTR struct fat_buffer size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.fat_buffers.ptr	PTR unsigned char  size(2) Largest target is 0
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _open_file_list.tail.list_node.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file_list.tail.list_node.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.tail.list_node.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.tail.list_node.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file_list.head.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file_list.head.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.head.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.head.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file_list.tail.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file_list.tail.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.tail.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.tail.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.next.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.next.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@sfEntry.next.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@sfEntry.next.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.next.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.next.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.next.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.next.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.previous.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.previous.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.previous.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.previous.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@sfEntry.previous.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@sfEntry.previous.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.previous.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.previous.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@sfEntry.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@sfEntry.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortEntry.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.next	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.previous	PTR struct fat_node size(2) Largest target is 0
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    rd$1	PTR unsigned char  size(2) Largest target is 3967
		 -> data(BANK1[1]), fl_fgetc@data(BANK0[1]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    wr$1	PTR unsigned char  size(3) Largest target is 65535
		 -> w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), fl_fputc@data(COMRAM[1]), 
		 -> ROM(CODE[65535]), _fs(BIGRAM[1095]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?udefs@fat_list@fat_list_pop_head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?udefs@fat_list@fat_list_pop_head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?udefs@fat_list@fat_list_is_empty.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?udefs@fat_list@fat_list_is_empty.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?_fatfs_fat_read_sector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    ?_fatfs_fat_read_sector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_list_directory_start@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fl_closedir@dir	PTR struct fs_dir_list_status size(2) Largest target is 9
		 -> dptr(BANK1[9]), fl_is_dir@dir(COMRAM[9]), fl_listdirectory@dirstat(BANK1[9]), 

    ?_fl_fopen.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?_fl_fopen.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_cache_set_next_cluster@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_cache_set_next_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_cache_get_next_cluster@pNextCluster	PTR unsigned long  size(2) Largest target is 4
		 -> _write_sectors@nextCluster(BANK0[4]), _read_sectors@nextCluster(BANK0[4]), 

    fatfs_cache_get_next_cluster@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_cache_get_next_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    ?__create_file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?__create_file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?__open_file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?__open_file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_cache_init@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_cache_init@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    ?fat_list@fat_list_pop_head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?fat_list@fat_list_pop_head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?fat_list@fat_list_is_empty.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?fat_list@fat_list_is_empty.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?_fat_list_pop_head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?_fat_list_pop_head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?_fat_list_is_empty.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    ?_fat_list_is_empty.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    S26$1$1	PTR unsigned char  size(3) Largest target is 65535
		 -> w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), fl_fputc@data(COMRAM[1]), 
		 -> ROM(CODE[65535]), _fs(BIGRAM[1095]), RAM(DATA[3967]), NULL(NULL[0]), 

    S26$0$1	PTR unsigned char  size(2) Largest target is 3967
		 -> data(BANK1[1]), fl_fgetc@data(BANK0[1]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 52
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 
		 -> NULL(NULL[0]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 19
		 -> fl_listdirectory@dirent(BANK1[19]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 19
		 -> fl_listdirectory@dirent(BANK1[19]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 3967
		 -> Check_extension@s_2(COMRAM[4]), Check_extension@s_1(COMRAM[4]), RAM(DATA[3967]), NULL(NULL[0]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 30
		 -> _fs.currentsector.sector.Name(BIGRAM[11]), string(BANK1[30]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), STR_67(CODE[2]), STR_63(CODE[2]), 
		 -> STR_60(CODE[6]), STR_43(CODE[2]), STR_36(CODE[2]), STR_29(CODE[2]), 
		 -> s(BANK2[17]), STR_23(CODE[2]), STR_21(CODE[2]), STR_18(CODE[2]), 
		 -> m(BANK2[30]), fatfs_lfn_generate_tail@tail_str(COMRAM[12]), STR_10(CODE[2]), _open_directory@currentfolder(BANK0[10]), 
		 -> RAM(DATA[3967]), fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), 
		 -> NULL(NULL[0]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), STR_67(CODE[2]), STR_63(CODE[2]), 
		 -> STR_60(CODE[6]), STR_43(CODE[2]), STR_36(CODE[2]), STR_29(CODE[2]), 
		 -> s(BANK2[17]), STR_23(CODE[2]), STR_21(CODE[2]), STR_18(CODE[2]), 
		 -> m(BANK2[30]), fatfs_lfn_generate_tail@tail_str(COMRAM[12]), STR_10(CODE[2]), _open_directory@currentfolder(BANK0[10]), 
		 -> RAM(DATA[3967]), fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), 
		 -> NULL(NULL[0]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> Switch@exit(COMRAM[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    memset@p1	PTR void  size(2) Largest target is 3967
		 -> _fs.currentsector.sector.String(BIGRAM[50]), _fs.currentsector.sector(BIGRAM[512]), _fs.fat_buffers(BIGRAM[522]), _fs.currentsector(BIGRAM[524]), 
		 -> fatfs_lfn_generate_tail@tail_str(COMRAM[12]), fatfs_lfn_create_sfn@ext(COMRAM[3]), _create_file@shortFilename(BANK1[11]), _create_directory@shortFilename(BANK1[11]), 
		 -> _fs(BIGRAM[1095]), RAM(DATA[3967]), fatfs_list_directory_next@short_filename(BANK1[13]), fatfs_list_directory_next@lfn(BANK1[52]), 
		 -> fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    memset@p	PTR unsigned char  size(2) Largest target is 3967
		 -> _fs.currentsector.sector.String(BIGRAM[50]), _fs.currentsector.sector(BIGRAM[512]), _fs.fat_buffers(BIGRAM[522]), _fs.currentsector(BIGRAM[524]), 
		 -> fatfs_lfn_generate_tail@tail_str(COMRAM[12]), fatfs_lfn_create_sfn@ext(COMRAM[3]), _create_file@shortFilename(BANK1[11]), _create_directory@shortFilename(BANK1[11]), 
		 -> _fs(BIGRAM[1095]), RAM(DATA[3967]), fatfs_list_directory_next@short_filename(BANK1[13]), fatfs_list_directory_next@lfn(BANK1[52]), 
		 -> fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 3967
		 -> _fs.currentsector.sector(BIGRAM[512]), data(BANK1[1]), fl_fgetc@data(BANK0[1]), _create_file@sfEntry(BANK1[32]), 
		 -> _open_file@sfEntry(BANK1[32]), _create_directory@sfEntry(BANK1[32]), _open_directory@sfEntry(BANK0[32]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3967
		 -> _fs.currentsector.sector(BIGRAM[512]), data(BANK1[1]), fl_fgetc@data(BANK0[1]), _create_file@sfEntry(BANK1[32]), 
		 -> _open_file@sfEntry(BANK1[32]), _create_directory@sfEntry(BANK1[32]), _open_directory@sfEntry(BANK0[32]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(3) Largest target is 65535
		 -> _fs.currentsector.sector(BIGRAM[512]), w(BANK1[1]), str_0(BANK2[26]), s(BANK2[17]), 
		 -> data(BANK1[1]), m(BANK2[30]), fatfs_add_file_entry@shortEntry(BANK1[32]), fatfs_lfn_generate_tail@tail_str(COMRAM[12]), 
		 -> fl_fputc@data(COMRAM[1]), ROM(CODE[65535]), _create_file@shortFilename(BANK1[11]), sfEntry.Name(COMRAM[11]), 
		 -> _open_file@sfEntry(BANK1[32]), _create_directory@shortFilename(BANK1[11]), RAM(DATA[3967]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 65535
		 -> _fs.currentsector.sector(BIGRAM[512]), w(BANK1[1]), str_0(BANK2[26]), s(BANK2[17]), 
		 -> data(BANK1[1]), m(BANK2[30]), fatfs_add_file_entry@shortEntry(BANK1[32]), fatfs_lfn_generate_tail@tail_str(COMRAM[12]), 
		 -> fl_fputc@data(COMRAM[1]), ROM(CODE[65535]), _create_file@shortFilename(BANK1[11]), sfEntry.Name(COMRAM[11]), 
		 -> _open_file@sfEntry(BANK1[32]), _create_directory@shortFilename(BANK1[11]), RAM(DATA[3967]), NULL(NULL[0]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 240
		 -> STR_66(CODE[28]), STR_65(CODE[32]), STR_64(CODE[22]), STR_62(CODE[19]), 
		 -> STR_61(CODE[146]), STR_59(CODE[31]), STR_58(CODE[48]), STR_57(CODE[19]), 
		 -> STR_56(CODE[21]), STR_54(CODE[36]), STR_53(CODE[34]), STR_52(CODE[24]), 
		 -> STR_51(CODE[3]), STR_50(CODE[23]), STR_49(CODE[33]), STR_48(CODE[28]), 
		 -> STR_47(CODE[43]), STR_46(CODE[20]), STR_45(CODE[13]), STR_44(CODE[25]), 
		 -> STR_42(CODE[38]), STR_41(CODE[3]), str_1(BANK3[240]), STR_40(CODE[20]), 
		 -> STR_39(CODE[33]), STR_38(CODE[13]), STR_37(CODE[25]), STR_35(CODE[38]), 
		 -> STR_34(CODE[19]), STR_33(CODE[26]), STR_32(CODE[22]), STR_31(CODE[33]), 
		 -> STR_30(CODE[48]), STR_28(CODE[38]), STR_27(CODE[39]), STR_26(CODE[28]), 
		 -> STR_25(CODE[18]), STR_24(CODE[37]), STR_22(CODE[20]), STR_20(CODE[21]), 
		 -> STR_19(CODE[54]), STR_17(CODE[78]), STR_16(CODE[24]), STR_15(CODE[24]), 
		 -> m(BANK2[30]), string(BANK1[30]), STR_14(CODE[19]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_55(CODE[5]), STR_13(CODE[16]), STR_12(CODE[11]), STR_11(CODE[17]), 
		 -> STR_9(CODE[49]), STR_8(CODE[28]), STR_7(CODE[28]), STR_6(CODE[24]), 
		 -> STR_5(CODE[31]), STR_2(CODE[10]), STR_1(CODE[15]), 

    printf@_val._cp	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_68(CODE[7]), STR_67(CODE[2]), STR_63(CODE[2]), m(BANK2[30]), 
		 -> dirent.filename(COMRAM[10]), fl_listdirectory@dirent(BANK1[19]), STR_4(CODE[6]), STR_3(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S4500$_cp	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_68(CODE[7]), STR_67(CODE[2]), STR_63(CODE[2]), m(BANK2[30]), 
		 -> fl_listdirectory@dirent(BANK1[19]), STR_4(CODE[6]), STR_3(CODE[6]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_68(CODE[7]), STR_67(CODE[2]), STR_63(CODE[2]), m(BANK2[30]), 
		 -> fl_listdirectory@dirent(BANK1[19]), STR_4(CODE[6]), STR_3(CODE[6]), 

    Read_str@buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    Write_str@str	PTR unsigned char  size(2) Largest target is 240
		 -> STR_66(CODE[28]), STR_65(CODE[32]), STR_64(CODE[22]), STR_62(CODE[19]), 
		 -> STR_61(CODE[146]), STR_59(CODE[31]), STR_58(CODE[48]), STR_57(CODE[19]), 
		 -> STR_56(CODE[21]), STR_54(CODE[36]), STR_53(CODE[34]), STR_52(CODE[24]), 
		 -> STR_51(CODE[3]), STR_50(CODE[23]), STR_49(CODE[33]), STR_48(CODE[28]), 
		 -> STR_47(CODE[43]), STR_46(CODE[20]), STR_45(CODE[13]), STR_44(CODE[25]), 
		 -> STR_42(CODE[38]), STR_41(CODE[3]), str_1(BANK3[240]), STR_40(CODE[20]), 
		 -> STR_39(CODE[33]), STR_38(CODE[13]), STR_37(CODE[25]), STR_35(CODE[38]), 
		 -> STR_34(CODE[19]), STR_33(CODE[26]), STR_32(CODE[22]), STR_31(CODE[33]), 
		 -> STR_30(CODE[48]), STR_28(CODE[38]), STR_27(CODE[39]), STR_26(CODE[28]), 
		 -> STR_25(CODE[18]), STR_24(CODE[37]), STR_22(CODE[20]), STR_20(CODE[21]), 
		 -> STR_19(CODE[54]), STR_17(CODE[78]), STR_16(CODE[24]), STR_15(CODE[24]), 
		 -> m(BANK2[30]), string(BANK1[30]), STR_14(CODE[19]), 

    File_format@name	PTR unsigned char  size(2) Largest target is 6
		 -> STR_60(CODE[6]), 

    fptr.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fptr.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fptr	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    Format_string@buf_2	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    Format_string@buf_1	PTR unsigned char  size(2) Largest target is 30
		 -> m(BANK2[30]), 

    Check_extension@xtn	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    Clr_str@buffer	PTR unsigned char  size(2) Largest target is 240
		 -> str_1(BANK3[240]), m(BANK2[30]), string(BANK1[30]), 

    media_write@buffer	PTR unsigned char  size(3) Largest target is 65535
		 -> _fs.currentsector(BIGRAM[524]), w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), 
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), fl_fputc@data(COMRAM[1]), ROM(CODE[65535]), _open_file@sfEntry(BANK1[32]), 
		 -> _fs(BIGRAM[1095]), RAM(DATA[3967]), NULL(NULL[0]), 

    media_read@buffer	PTR unsigned char  size(2) Largest target is 3967
		 -> _fs.currentsector(BIGRAM[524]), data(BANK1[1]), fatfs_add_file_entry@shortEntry(BANK1[32]), fl_fgetc@data(BANK0[1]), 
		 -> _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp_fat_list@fat_list_pop_head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp_fat_list@fat_list_pop_head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp_fat_list@fat_list_pop_head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@node_3569.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@node_3569.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@list_3568.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@list_3568.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_is_empty@list_3564.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_is_empty@list_3564.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_last@list_3557.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_last@list_3557.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@node_3546.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@node_3546.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list_3545.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list_3545.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list_3545.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list_3545.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list_3545.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list_3545.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node_3526.previous.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node_3526.previous.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node_3526.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node_3526.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list_3525.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list_3525.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list_3525.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list_3525.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node_3527.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node_3527.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node_3527.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node_3527.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node_3526.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node_3526.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node_3527.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node_3527.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node_3506.next.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node_3506.next.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node_3506.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node_3506.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list_3505.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list_3505.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list_3505.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list_3505.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node_3507.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node_3507.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node_3506.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node_3506.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node_3507.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node_3507.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node_3507.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node_3507.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.next.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.next.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list_3486.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list_3486.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.previous.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.previous.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list_3486.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list_3486.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list_3486.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list_3486.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node_3487.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list_3480.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list_3480.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list_3480.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list_3480.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@shortfilename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@pSname	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@filename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_add_file_entry@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_file_entry@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_file_entry@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_file_entry@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_add_file_entry@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_add_file_entry@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_add_file_entry@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_add_file_entry@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_find_free_dir_offset@pOffset	PTR unsigned char  size(2) Largest target is 1
		 -> fatfs_add_file_entry@dirOffset(BANK1[1]), 

    fatfs_find_free_dir_offset@pSector	PTR unsigned long  size(2) Largest target is 4
		 -> fatfs_add_file_entry@dirSector(BANK1[4]), 

    fatfs_find_free_dir_offset@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_free_dir_offset@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_free_dir_offset@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_free_dir_offset@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_find_free_dir_offset@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_find_free_dir_offset@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_find_free_dir_offset@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_find_free_dir_offset@directoryEntry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_find_free_dir_offset@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_allocate_free_space@startCluster	PTR unsigned long  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_allocate_free_space@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_allocate_free_space@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_allocate_free_space@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_allocate_free_space@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_allocate_free_space@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_allocate_free_space@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_allocate_free_space@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_allocate_free_space@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_add_free_space@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_free_space@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_free_space@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_add_free_space@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_add_free_space@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_add_free_space@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_add_free_space@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_add_free_space@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_add_free_space@startCluster	PTR unsigned long  size(2) Largest target is 4
		 -> fatfs_allocate_free_space@nextcluster(BANK0[4]), _write_sectors@LastCluster(BANK0[4]), 

    fatfs_count_free_clusters@pbuf.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_count_free_clusters@pbuf.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_count_free_clusters@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_count_free_clusters@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_count_free_clusters@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_count_free_clusters@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_count_free_clusters@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_count_free_clusters@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_count_free_clusters@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_fat_add_cluster_to_chain@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_free_cluster_chain@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_fat_set_cluster@pbuf.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_set_cluster@pbuf.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_set_cluster@pbuf	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_fat_set_cluster@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_set_cluster@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_set_cluster@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_set_cluster@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_set_cluster@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_set_cluster@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_fat_set_cluster@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_fat_set_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_find_blank_cluster@free_cluster	PTR unsigned long  size(2) Largest target is 4
		 -> fatfs_find_free_dir_offset@newCluster(BANK0[4]), fatfs_allocate_free_space@nextcluster(BANK0[4]), fatfs_add_free_space@nextcluster(BANK0[4]), 

    fatfs_find_blank_cluster@pbuf.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_blank_cluster@pbuf.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_blank_cluster@pbuf	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_find_blank_cluster@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_blank_cluster@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_blank_cluster@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_blank_cluster@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_find_blank_cluster@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_find_blank_cluster@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_find_blank_cluster@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_find_blank_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_set_fs_info_next_free_cluster@pbuf.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_set_fs_info_next_free_cluster@pbuf.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_set_fs_info_next_free_cluster@pbuf	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_set_fs_info_next_free_cluster@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_set_fs_info_next_free_cluster@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_set_fs_info_next_free_cluster@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_set_fs_info_next_free_cluster@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_set_fs_info_next_free_cluster@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_set_fs_info_next_free_cluster@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_set_fs_info_next_free_cluster@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_set_fs_info_next_free_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_find_next_cluster@pbuf.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_next_cluster@pbuf.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_next_cluster@pbuf	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_find_next_cluster@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_next_cluster@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_next_cluster@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_find_next_cluster@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_find_next_cluster@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_find_next_cluster@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_find_next_cluster@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_find_next_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_fat_purge@pcur.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_purge@pcur.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_purge@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_purge@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_purge@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_purge@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_purge@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_purge@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_fat_purge@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_fat_purge@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_fat_purge@pcur	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_fat_read_sector@fs.fat_buffer_head.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@fs.fat_buffer_head.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@pcur.next.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@pcur.next.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    sp__fatfs_fat_read_sector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    sp__fatfs_fat_read_sector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    sp__fatfs_fat_read_sector	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_fat_read_sector@last.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@last.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@pcur.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@pcur.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_read_sector@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_read_sector@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_read_sector@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_fat_read_sector@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_fat_read_sector@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_fat_read_sector@pcur	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_fat_read_sector@last	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_fat_writeback@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_writeback@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_writeback@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_writeback@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_writeback@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_writeback@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_fat_writeback@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_fat_writeback@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_fat_writeback@pcur.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_writeback@pcur.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_writeback@pcur	PTR struct fat_buffer size(2) Largest target is 1100
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_fat_init@fs.fat_buffers.next.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.fat_buffers.next.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.fat_buffers.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.fat_buffers.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_fat_init@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_init@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_fat_init@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_fat_init@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_fat_init@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_get_sfn_display_name@out	PTR unsigned char  size(2) Largest target is 19
		 -> fl_listdirectory@dirent(BANK1[19]), 

    fatfs_get_sfn_display_name@in	PTR unsigned char  size(2) Largest target is 13
		 -> fatfs_list_directory_next@short_filename(BANK1[13]), 

    fatfs_compare_names@strB	PTR unsigned char  size(2) Largest target is 3967
		 -> _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_compare_names@strA	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), RAM(DATA[3967]), fatfs_list_directory_next@lfn(BANK1[52]), 
		 -> fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    fatfs_compare_names@ext2	PTR unsigned char  size(2) Largest target is 3967
		 -> _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_compare_names@ext1	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), RAM(DATA[3967]), fatfs_list_directory_next@lfn(BANK1[52]), 
		 -> fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    FileString_TrimLength@str	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), 
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    FileString_TrimLength@strSrc	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), 
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    FileString_GetExtension@str	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), 
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    FileString_GetExtension@strSrc	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), 
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    FileString_StrCmpNoCase@s2	PTR unsigned char  size(2) Largest target is 3967
		 -> _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), NULL(NULL[0]), 

    FileString_StrCmpNoCase@s1	PTR unsigned char  size(2) Largest target is 3967
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), RAM(DATA[3967]), fatfs_list_directory_next@lfn(BANK1[52]), 
		 -> fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    fatfs_split_path@path	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_split_path@filename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_split_path@full_path	PTR unsigned char  size(2) Largest target is 30
		 -> s(BANK2[17]), m(BANK2[30]), 

    fatfs_get_substring@output	PTR unsigned char  size(2) Largest target is 3967
		 -> _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_get_substring@path	PTR unsigned char  size(2) Largest target is 3967
		 -> STR_67(CODE[2]), STR_63(CODE[2]), s(BANK2[17]), m(BANK2[30]), 
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_total_path_levels@path	PTR unsigned char  size(2) Largest target is 3967
		 -> STR_67(CODE[2]), STR_63(CODE[2]), s(BANK2[17]), m(BANK2[30]), 
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_lfn_generate_tail@sfn_input	PTR unsigned char  size(2) Largest target is 11
		 -> _create_file@shortFilename(BANK1[11]), _create_directory@shortFilename(BANK1[11]), 

    fatfs_lfn_generate_tail@sfn_output	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_itoa@s	PTR unsigned char  size(2) Largest target is 12
		 -> fatfs_lfn_generate_tail@tail_str(COMRAM[12]), 

    fatfs_itoa@cp	PTR unsigned char  size(2) Largest target is 12
		 -> fatfs_itoa@outbuf(COMRAM[12]), 

    fatfs_lfn_create_sfn@sfn_output	PTR unsigned char  size(2) Largest target is 11
		 -> _create_file@shortFilename(BANK1[11]), _create_directory@shortFilename(BANK1[11]), 

    fatfs_lfn_create_sfn@filename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_sfn_create_entry@shortfilename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_sfn_create_entry@entry	PTR struct fat_dir_entry size(2) Largest target is 32
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), 

    fatfs_filename_to_lfn@buffer	PTR unsigned char  size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_filename_to_lfn@filename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_lfn_entries_required@filename	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_entry_is_file@entry	PTR struct fat_dir_entry size(2) Largest target is 32
		 -> _open_file@sfEntry(BANK1[32]), 

    fatfs_entry_is_dir@entry	PTR struct fat_dir_entry size(2) Largest target is 32
		 -> _fs.currentsector.sector(BIGRAM[512]), _open_directory@sfEntry(BANK0[32]), 

    fatfs_entry_sfn_only@entry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_entry_lfn_exists@lfn	PTR struct lfn_cache size(2) Largest target is 52
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 

    fatfs_entry_lfn_exists@entry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_entry_lfn_invalid@entry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_entry_lfn_text@entry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_lfn_cache_get@lfn	PTR struct lfn_cache size(2) Largest target is 52
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 

    fatfs_lfn_cache_entry@lfn	PTR struct lfn_cache size(2) Largest target is 52
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 

    fatfs_lfn_cache_entry@entryBuffer	PTR unsigned char  size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_lfn_cache_init@lfn	PTR struct lfn_cache size(2) Largest target is 52
		 -> fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 

    fatfs_format@name	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_60(CODE[6]), 

    fatfs_format@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_format_fat32@name	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_60(CODE[6]), 

    fatfs_format_fat32@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_format_fat32@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_format_fat32@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_format_fat32@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_format_fat32@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_format_fat32@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_format_fat32@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_format_fat32@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_format_fat16@name	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_60(CODE[6]), 

    fatfs_format_fat16@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_format_fat16@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_format_fat16@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_format_fat16@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_format_fat16@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_format_fat16@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_format_fat16@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_format_fat16@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_erase_fat@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_erase_fat@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_erase_fat@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_erase_fat@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_erase_fat@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_erase_fat@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_erase_fat@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_erase_fat@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_create_fsinfo_sector@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_create_fsinfo_sector@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_create_fsinfo_sector@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_create_fsinfo_sector@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_create_fsinfo_sector@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_create_fsinfo_sector@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_create_fsinfo_sector@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_create_fsinfo_sector@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_create_boot_sector@name	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_60(CODE[6]), 

    fatfs_create_boot_sector@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_create_boot_sector@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_create_boot_sector@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_create_boot_sector@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_create_boot_sector@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_create_boot_sector@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_create_boot_sector@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_create_boot_sector@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_erase_sectors@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_erase_sectors@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_erase_sectors@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_erase_sectors@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_erase_sectors@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_erase_sectors@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_erase_sectors@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_erase_sectors@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fl_format@name	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_60(CODE[6]), 

    fl_readdir@entry	PTR struct fs_dir_ent size(2) Largest target is 19
		 -> fl_listdirectory@dirent(BANK1[19]), 

    fl_readdir@dirls	PTR struct fs_dir_list_status size(2) Largest target is 9
		 -> fl_listdirectory@dirstat(BANK1[9]), 

    fl_opendir@dir	PTR struct fs_dir_list_status size(2) Largest target is 9
		 -> dptr(BANK1[9]), fl_is_dir@dir(COMRAM[9]), fl_listdirectory@dirstat(BANK1[9]), 

    fl_opendir@path	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_67(CODE[2]), STR_63(CODE[2]), m(BANK2[30]), 

    sp__fl_opendir	PTR struct fs_dir_list_status size(2) Largest target is 3967
		 -> dptr(BANK1[9]), fatfs_add_file_entry@shortEntry(BANK1[32]), fl_is_dir@dir(COMRAM[9]), fl_listdirectory@dirstat(BANK1[9]), 
		 -> _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_listdirectory@path	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_67(CODE[2]), STR_63(CODE[2]), m(BANK2[30]), 

    fl_createdirectory@path	PTR const unsigned char  size(2) Largest target is 30
		 -> m(BANK2[30]), 

    fl_remove@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_remove@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_remove@filename	PTR const unsigned char  size(2) Largest target is 30
		 -> m(BANK2[30]), 

    fl_remove@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fwrite@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fwrite@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fwrite@data	PTR const void  size(3) Largest target is 65535
		 -> w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), fl_fputc@data(COMRAM[1]), 
		 -> ROM(CODE[65535]), 

    fl_fwrite@buffer	PTR unsigned char  size(3) Largest target is 65535
		 -> w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), fl_fputc@data(COMRAM[1]), 
		 -> ROM(CODE[65535]), 

    fl_fwrite@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fwrite@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_feof@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_feof@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_feof@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_feof@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_ftell@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fgetpos@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fgetpos@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fgetpos@position	PTR unsigned long  size(2) Largest target is 4
		 -> fl_ftell@pos(COMRAM[4]), 

    fl_fgetpos@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fgetpos@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fseek@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fseek@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fseek@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fseek@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fread@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fread@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fread@buffer	PTR void  size(2) Largest target is 1
		 -> data(BANK1[1]), fl_fgetc@data(BANK0[1]), 

    fl_fread@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fread@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    sp__fl_fgets	PTR unsigned char  size(2) Largest target is 3967
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fl_fgetc@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fclose@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fclose@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fclose@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fclose@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fflush@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fflush@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fflush@f	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fflush@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _write_sectors@buf	PTR unsigned char  size(3) Largest target is 65535
		 -> w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), fl_fputc@data(COMRAM[1]), 
		 -> ROM(CODE[65535]), RAM(DATA[3967]), NULL(NULL[0]), 

    _write_sectors@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _write_sectors@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _write_sectors@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    sp__fl_fopen.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp__fl_fopen.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fopen@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fopen@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fopen@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_fopen@mode	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_43(CODE[2]), STR_36(CODE[2]), STR_29(CODE[2]), STR_23(CODE[2]), 
		 -> STR_21(CODE[2]), STR_18(CODE[2]), STR_10(CODE[2]), 

    fl_fopen@path	PTR const unsigned char  size(2) Largest target is 30
		 -> s(BANK2[17]), m(BANK2[30]), 

    sp__fl_fopen	PTR void  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fl_attach_media@wr	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fl_attach_media@rd	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    _files.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _files.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _read_sectors@buffer	PTR unsigned char  size(2) Largest target is 3967
		 -> data(BANK1[1]), fl_fgetc@data(BANK0[1]), RAM(DATA[3967]), NULL(NULL[0]), 

    _read_sectors@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _read_sectors@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _read_sectors@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    sp___create_file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp___create_file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _create_file@filename	PTR const unsigned char  size(2) Largest target is 30
		 -> s(BANK2[17]), m(BANK2[30]), 

    _create_file@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _create_file@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _create_file@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    sp___create_file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    sp___open_file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp___open_file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@path	PTR const unsigned char  size(2) Largest target is 30
		 -> s(BANK2[17]), m(BANK2[30]), 

    sp___open_file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _create_directory@path	PTR unsigned char  size(2) Largest target is 30
		 -> m(BANK2[30]), 

    _create_directory@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _create_directory@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _create_directory@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _open_directory@pathCluster	PTR unsigned long  size(2) Largest target is 3967
		 -> fl_opendir@cluster(BANK0[4]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_directory@path	PTR unsigned char  size(2) Largest target is 3967
		 -> STR_67(CODE[2]), STR_63(CODE[2]), m(BANK2[30]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    _free_file@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@file.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@file.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@openFile.list_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@openFile.list_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@openFile	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _check_file_open@node	PTR struct fat_node size(2) Largest target is 3967
		 -> fatfs_add_file_entry@shortEntry(BANK1[32]), _files(BIGRAM[1160]), _open_file@sfEntry(BANK1[32]), _fs(BIGRAM[1095]), 
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    sp___allocate_file	PTR struct sFL_FILE size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    _allocate_file@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _allocate_file@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _allocate_file@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _free_file_list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file_list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _open_file_list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    _fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    _fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    _fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    _fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    _fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    sp_fat_list@fat_list_pop_head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp_fat_list@fat_list_pop_head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp_fat_list@fat_list_pop_head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_pop_head@list	PTR struct fat_list size(2) Largest target is 6
		 -> _free_file_list(BANK1[4]), 

    fat_list@fat_list_pop_head@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_is_empty@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_is_empty@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_last@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_last@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_last@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_last@list	PTR struct fat_list size(2) Largest target is 6
		 -> _open_file_list(BANK1[4]), _free_file_list(BANK1[4]), 

    fat_list@fat_list_insert_first@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_first@list	PTR struct fat_list size(2) Largest target is 6
		 -> _open_file_list(BANK1[4]), _free_file_list(BANK1[4]), 

    fat_list@fat_list_insert_before@node.previous.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node.previous.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@list	PTR struct fat_list size(2) Largest target is 6
		 -> _open_file_list(BANK1[4]), _free_file_list(BANK1[4]), 

    fat_list@fat_list_insert_before@new_node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_before@new_node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node.next.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node.next.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@list	PTR struct fat_list size(2) Largest target is 6
		 -> _open_file_list(BANK1[4]), _free_file_list(BANK1[4]), 

    fat_list@fat_list_insert_after@new_node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_insert_after@new_node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.next.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.next.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.previous.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.previous.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@list	PTR struct fat_list size(2) Largest target is 6
		 -> _open_file_list(BANK1[4]), _free_file_list(BANK1[4]), 

    fat_list@fat_list_remove@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_remove@node	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list@fat_list_init@list	PTR struct fat_list size(2) Largest target is 6
		 -> _open_file_list(BANK1[4]), _free_file_list(BANK1[4]), 

    sp__fat_list_pop_head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp__fat_list_pop_head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp__fat_list_pop_head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_pop_head@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_pop_head@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_pop_head@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_pop_head@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_is_empty@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_is_empty@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_last@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_last@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@list.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@list.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_first@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@node.previous.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@node.previous.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@new_node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@new_node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@new_node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@new_node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@new_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_before@new_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@node.next.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@node.next.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@list.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@list.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@new_node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@new_node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@new_node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@new_node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@new_node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_insert_after@new_node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.next.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.next.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@list.tail.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@list.tail.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.previous.next.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.previous.next.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.previous.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.previous.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_remove@node.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    S777fat_node$next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_init@list.head.next	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    S777fat_node$previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_init@list.head.previous	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    S780fat_list$tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_init@list.tail	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    S780fat_list$head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    fat_list_init@list.head	PTR struct fat_node size(2) Largest target is 3967
		 -> _files(BIGRAM[1160]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 19
		 -> fl_listdirectory@dirent(BANK1[19]), 

    fatfs_list_directory_next@entry	PTR struct fs_dir_ent size(2) Largest target is 19
		 -> fl_listdirectory@dirent(BANK1[19]), 

    fatfs_list_directory_next@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_list_directory_next@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_list_directory_next@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_list_directory_next@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_list_directory_next@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_list_directory_next@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_list_directory_next@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_list_directory_next@directoryEntry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_list_directory_next@dirls	PTR struct fs_dir_list_status size(2) Largest target is 9
		 -> fl_listdirectory@dirstat(BANK1[9]), 

    fatfs_list_directory_next@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_list_directory_next@long_filename	PTR unsigned char  size(2) Largest target is 52
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 
		 -> NULL(NULL[0]), 

    fatfs_list_directory_start@dirls	PTR struct fs_dir_list_status size(2) Largest target is 9
		 -> dptr(BANK1[9]), fl_is_dir@dir(COMRAM[9]), fl_listdirectory@dirstat(BANK1[9]), 

    fatfs_mark_file_deleted@shortname	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_mark_file_deleted@directoryEntry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_mark_file_deleted@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_mark_file_deleted@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_mark_file_deleted@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_mark_file_deleted@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_mark_file_deleted@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_mark_file_deleted@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_mark_file_deleted@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_mark_file_deleted@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_update_file_length@shortname	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_update_file_length@directoryEntry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_update_file_length@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_update_file_length@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_update_file_length@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_update_file_length@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_update_file_length@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_update_file_length@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_update_file_length@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_update_file_length@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_sfn_exists@shortname	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_sfn_exists@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sfn_exists@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sfn_exists@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sfn_exists@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sfn_exists@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sfn_exists@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_sfn_exists@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_sfn_exists@directoryEntry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_sfn_exists@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    sp__memset	PTR void  size(2) Largest target is 3967
		 -> _fs.currentsector.sector.String(BIGRAM[50]), _fs.currentsector.sector(BIGRAM[512]), _fs.fat_buffers(BIGRAM[522]), _fs.currentsector(BIGRAM[524]), 
		 -> fatfs_lfn_generate_tail@tail_str(COMRAM[12]), fatfs_lfn_create_sfn@ext(COMRAM[3]), _create_file@shortFilename(BANK1[11]), _create_directory@shortFilename(BANK1[11]), 
		 -> _fs(BIGRAM[1095]), RAM(DATA[3967]), fatfs_list_directory_next@short_filename(BANK1[13]), fatfs_list_directory_next@lfn(BANK1[52]), 
		 -> fatfs_get_file_entry@short_filename(BANK1[13]), fatfs_get_file_entry@lfn(BANK1[52]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 3967
		 -> _fs.currentsector.sector(BIGRAM[512]), data(BANK1[1]), fl_fgetc@data(BANK0[1]), _create_file@sfEntry(BANK1[32]), 
		 -> _open_file@sfEntry(BANK1[32]), _create_directory@sfEntry(BANK1[32]), _open_directory@sfEntry(BANK0[32]), RAM(DATA[3967]), 
		 -> NULL(NULL[0]), 

    fatfs_get_file_entry@sfEntry	PTR struct fat_dir_entry size(2) Largest target is 32
		 -> _create_file@sfEntry(BANK1[32]), _open_file@sfEntry(BANK1[32]), _create_directory@sfEntry(BANK1[32]), _open_directory@sfEntry(BANK0[32]), 

    fatfs_get_file_entry@name_to_find	PTR unsigned char  size(2) Largest target is 3967
		 -> _open_directory@currentfolder(BANK0[10]), RAM(DATA[3967]), NULL(NULL[0]), 

    sp__fatfs_lfn_cache_get	PTR unsigned char  size(2) Largest target is 52
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 

    fatfs_get_file_entry@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_get_file_entry@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_get_file_entry@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_get_file_entry@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_get_file_entry@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_get_file_entry@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_get_file_entry@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_get_file_entry@directoryEntry	PTR struct fat_dir_entry size(2) Largest target is 0
		 -> _fs.currentsector.sector(BIGRAM[512]), 

    fatfs_get_file_entry@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_get_file_entry@long_filename	PTR unsigned char  size(2) Largest target is 52
		 -> lfn.String(COMRAM[50]), lfn.String(COMRAM[50]), fatfs_list_directory_next@lfn(BANK1[52]), fatfs_get_file_entry@lfn(BANK1[52]), 
		 -> NULL(NULL[0]), 

    fatfs_get_root_cluster@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_get_root_cluster@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_get_root_cluster@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_get_root_cluster@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_get_root_cluster@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_get_root_cluster@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_get_root_cluster@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_get_root_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_show_details@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_show_details@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_show_details@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_show_details@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_show_details@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_show_details@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_show_details@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_write_sector@target	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_write_sector@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_write_sector@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_write_sector@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_write_sector@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_write_sector@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_write_sector@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_write_sector@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_write_sector@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_read_sector@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_read_sector@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_read_sector@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_read_sector@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_read_sector@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_read_sector@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_read_sector@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_sector_reader@target	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fatfs_sector_reader@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_reader@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_reader@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_reader@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sector_reader@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sector_reader@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_sector_reader@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_sector_reader@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_sector_write@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_write@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_write@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_write@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sector_write@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sector_write@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_sector_write@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_sector_write@target	PTR unsigned char  size(3) Largest target is 65535
		 -> w(BANK1[1]), str_0(BANK2[26]), data(BANK1[1]), fl_fputc@data(COMRAM[1]), 
		 -> ROM(CODE[65535]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_sector_write@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_sector_read@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_read@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_read@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_sector_read@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sector_read@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_sector_read@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_sector_read@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_sector_read@target	PTR unsigned char  size(2) Largest target is 3967
		 -> data(BANK1[1]), fl_fgetc@data(BANK0[1]), RAM(DATA[3967]), NULL(NULL[0]), 

    fatfs_sector_read@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    fatfs_lba_of_cluster@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_lba_of_cluster@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_lba_of_cluster@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_lba_of_cluster@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_lba_of_cluster@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_lba_of_cluster@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_lba_of_cluster@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_lba_of_cluster@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 

    S49fatfs$fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_init@fs.fat_buffer_head	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    S43fat_buffer$next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_init@fs.currentsector.next	PTR struct fat_buffer size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    S43fat_buffer$ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    fatfs_init@fs.currentsector.ptr	PTR unsigned char  size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), NULL(NULL[0]), 

    S49fatfs$fl_unlock	PTR FTN()void  size(2) Largest target is 0

    fatfs_init@fs.fl_unlock	PTR FTN()void  size(2) Largest target is 0

    S49fatfs$fl_lock	PTR FTN()void  size(2) Largest target is 0

    fatfs_init@fs.fl_lock	PTR FTN()void  size(2) Largest target is 0

    S26disk_if$write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    fatfs_init@fs.disk_io.write_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_write(), 

    S26disk_if$read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_init@fs.disk_io.read_media	PTR FTN(unsigned long ,PTR unsigned char ,unsigned long ,)int  size(2) Largest target is 2
		 -> media_read(), 

    fatfs_init@fs	PTR struct fatfs size(2) Largest target is 1100
		 -> _fs(BIGRAM[1095]), 


Critical Paths under _main in COMRAM

    _fl_shutdown->_fatfs_fat_purge
    _fl_attach_media->_fatfs_init
    _fatfs_init->_media_read
    _SD_init->_Command
    _printf->___lwmod
    _putch->_Write
    ___lwmod->___lwdiv
    _Format_drive->_File_format
    _File_format->_fl_format
    _fl_format->_fatfs_format
    _fatfs_format->_fatfs_format_fat16
    _fatfs_format->_fatfs_format_fat32
    _fatfs_format_fat32->_fatfs_create_boot_sector
    _fatfs_create_fsinfo_sector->_media_write
    _fatfs_format_fat16->_fatfs_create_boot_sector
    _fatfs_fat_init->_memset
    _fatfs_erase_sectors->_media_write
    _fatfs_erase_fat->_media_write
    _fatfs_create_boot_sector->_media_write
    _Draw_Line->_Write
    _fl_ftell->_fl_fgetpos
    _fl_fseek->_fl_init
    __read_sectors->_fatfs_find_next_cluster
    _fatfs_sector_read->_media_read
    __write_sectors->_fatfs_add_free_space
    __write_sectors->_fatfs_find_next_cluster
    _fatfs_sector_write->_media_write
    _Write->_WriteUSART
    _ReadUART->_ReadUSART
    _fl_init->fat_list@fat_list_insert_last
    _fatfs_split_path->_fatfs_get_substring
    _fatfs_lfn_generate_tail->_fatfs_itoa
    _fatfs_itoa->___lldiv
    _fatfs_lfn_create_sfn->_memset
    _fatfs_free_cluster_chain->_fatfs_find_next_cluster
    _fatfs_fat_purge->_fatfs_fat_writeback
    _fatfs_allocate_free_space->_fatfs_add_free_space
    _fatfs_add_free_space->_fatfs_find_blank_cluster
    _fatfs_set_fs_info_next_free_cluster->_fatfs_fat_read_sector
    _fatfs_write_sector->_media_write
    _fatfs_find_blank_cluster->_fatfs_fat_read_sector
    _fatfs_fat_add_cluster_to_chain->_fatfs_find_next_cluster
    _fatfs_fat_set_cluster->_fatfs_fat_read_sector
    _fatfs_filename_to_lfn->_fatfs_lfn_entries_required
    _fatfs_lfn_entries_required->___awdiv
    _fatfs_get_substring->_strlen
    _fatfs_sector_reader->_fatfs_find_next_cluster
    _fatfs_find_next_cluster->_fatfs_fat_read_sector
    _fatfs_fat_read_sector->_fatfs_fat_writeback
    _media_read->_Command
    _fatfs_fat_writeback->_media_write
    _media_write->_Command
    _Command->_WriteSPI_
    _fatfs_lfn_cache_init->_memset
    __free_file->fat_list@fat_list_insert_last
    __check_file_open->_fatfs_compare_names
    _fatfs_compare_names->_FileString_StrCmpNoCase
    _FileString_StrCmpNoCase->_strlen
    __allocate_file->fat_list@fat_list_insert_last
    fat_list@fat_list_pop_head->fat_list@fat_list_remove
    fat_list@fat_list_insert_last->fat_list@fat_list_insert_first
    fat_list@fat_list_insert_first->fat_list@fat_list_insert_before
    _Switch->_Check_extension
    _Check_extension->_strncmp
    _Write_str->_putsUSART
    _putsUSART->_WriteUSART
    _Read_str->_ReadUSART
    _Read_str->_WriteUSART
    _ConfigUSART->_OpenUSART

Critical Paths under _main in BANK0

    _Open_dir->_fl_opendir
    _fl_listdirectory->_fl_opendir
    _fl_readdir->_fatfs_list_directory_next
    _fatfs_list_directory_next->_fatfs_sector_reader
    _fl_opendir->__open_directory
    _File_write->_fl_fopen
    _File_read->_fl_fopen
    _fl_fgetc->_fl_fread
    _fl_remove->_fl_fopen
    _fatfs_mark_file_deleted->_fatfs_sector_reader
    _File_append->_fl_fopen
    _fl_fwrite->_fl_fflush
    _fl_fread->_fl_fflush
    _fl_fopen->__open_file
    __open_file->__open_directory
    __create_file->__open_directory
    _fl_fclose->_fl_fflush
    _fl_fflush->__write_sectors
    __write_sectors->_fatfs_add_free_space
    _fatfs_update_file_length->_fatfs_sector_reader
    _Create_folder->_fl_createdirectory
    _fl_createdirectory->__create_directory
    __create_directory->__open_directory
    _fatfs_sfn_exists->_fatfs_sector_reader
    _fatfs_allocate_free_space->_fatfs_add_free_space
    _fatfs_add_free_space->_fatfs_find_blank_cluster
    _fatfs_add_file_entry->_fatfs_find_free_dir_offset
    _fatfs_find_free_dir_offset->_fatfs_sector_reader
    __open_directory->_fatfs_get_file_entry
    _fatfs_get_file_entry->_fatfs_sector_reader

Critical Paths under _main in BANK1

    _File_IO->_File_write
    _Open_dir->_fl_listdirectory
    _fl_readdir->_fatfs_list_directory_next
    _File_write->_fl_remove
    _File_read->_fl_fopen
    _fl_fgetc->_fl_fread
    _File_delete->_fl_remove
    _fl_remove->_fl_fopen
    _File_append->_fl_fopen
    _fl_fopen->__create_file
    __open_file->_fatfs_get_file_entry
    __create_file->_fatfs_get_file_entry
    _fl_createdirectory->__create_directory
    __create_directory->_fatfs_get_file_entry
    __open_directory->_fatfs_get_file_entry

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 3880180
                                            138 BANK1      1     1      0
                        _ConfigUSART
                            _File_IO
                            _SD_init
                          _Write_str
                    _fl_attach_media
                            _fl_init
                   _fl_listdirectory
                        _fl_shutdown
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fl_shutdown                                          0     0      0    6251
                    _fatfs_fat_purge
                            _fl_init
 ---------------------------------------------------------------------------------
 (1) _fl_attach_media                                      6     2      4   15325
                                             84 COMRAM     6     2      4
                         _fatfs_init
                            _fl_init
                             _printf
 ---------------------------------------------------------------------------------
 (2) _fatfs_init                                          54    52      2   10860
                                             30 COMRAM    54    52      2
                            ___lldiv
                            ___lwdiv
                     _fatfs_fat_init
                         _media_read *
 ---------------------------------------------------------------------------------
 (1) _SD_init                                              3     3      0    1125
                                              8 COMRAM     3     3      0
                            _Command
                           _ReadSPI_
                          _WriteSPI_
 ---------------------------------------------------------------------------------
 (1) _File_IO                                              0     0      0 3768651
                      _Create_folder
                        _File_append
                        _File_delete
                          _File_read
                         _File_write
                       _Format_drive
                           _Open_dir
                           _ReadUART
                          _Write_str
                   _fl_listdirectory
 ---------------------------------------------------------------------------------
 (2) _Open_dir                                             0     0      0  144080
                            _Clr_str
                           _Read_str
                             _Switch
                          _Write_str
                        _fl_closedir
                   _fl_listdirectory
                         _fl_opendir
                             _printf
 ---------------------------------------------------------------------------------
 (1) _fl_listdirectory                                    30    28      2   83176
                                             77 BANK1     30    28      2
                        _fl_closedir
                            _fl_init
                         _fl_opendir
                         _fl_readdir
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              20    12      8    2276
                                             12 COMRAM    20    12      8
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      88
                                              2 COMRAM     1     1      0
                              _Write
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     470
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _fl_readdir                                           6     2      4   33633
                                             58 BANK0      6     2      4
          _fatfs_list_directory_next
                            _fl_init
 ---------------------------------------------------------------------------------
 (3) _fatfs_list_directory_next                           91    85      6   31465
                                             44 BANK0     14     8      6
                                              0 BANK1     77    77      0
                 _fatfs_entry_is_dir
             _fatfs_entry_lfn_exists
            _fatfs_entry_lfn_invalid
               _fatfs_entry_lfn_text
               _fatfs_entry_sfn_only
         _fatfs_get_sfn_display_name
              _fatfs_lfn_cache_entry
                _fatfs_lfn_cache_get
               _fatfs_lfn_cache_init
                _fatfs_sector_reader
                             _memset
                            _strncpy
 ---------------------------------------------------------------------------------
 (4) _strncpy                                              8     2      6     525
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _fatfs_get_sfn_display_name                           7     3      4     332
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _fl_opendir                                          12     8      4   44646
                                            114 BANK0     12     8      4
                    __open_directory
             _fatfs_get_root_cluster
         _fatfs_list_directory_start
            _fatfs_total_path_levels
                            _fl_init
 ---------------------------------------------------------------------------------
 (3) _fatfs_list_directory_start                           8     0      8     280
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (2) _fl_closedir                                          2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Format_drive                                         0     0      0   91594
                            _Clr_str
                        _File_format
                           _ReadUART
                           _Read_str
                          _Write_str
 ---------------------------------------------------------------------------------
 (3) _File_format                                          6     0      6   86905
                                            106 COMRAM     6     0      6
                          _Write_str
                          _fl_format
 ---------------------------------------------------------------------------------
 (4) _fl_format                                            6     0      6   83445
                                            100 COMRAM     6     0      6
                       _fatfs_format
 ---------------------------------------------------------------------------------
 (5) _fatfs_format                                        12     4      8   83273
                                             88 COMRAM    12     4      8
                 _fatfs_format_fat16
                 _fatfs_format_fat32
 ---------------------------------------------------------------------------------
 (6) _fatfs_format_fat32                                  29    21      8   46114
                                             59 COMRAM    29    21      8
           _fatfs_create_boot_sector
         _fatfs_create_fsinfo_sector
                    _fatfs_erase_fat
                _fatfs_erase_sectors
                     _fatfs_fat_init
               _fatfs_lba_of_cluster
 ---------------------------------------------------------------------------------
 (7) _fatfs_create_fsinfo_sector                          10     4      6    8189
                                             31 COMRAM    10     4      6
                        _media_write *
                             _memset
 ---------------------------------------------------------------------------------
 (6) _fatfs_format_fat16                                  29    21      8   36813
                                             59 COMRAM    29    21      8
           _fatfs_create_boot_sector
                    _fatfs_erase_fat
                _fatfs_erase_sectors
                     _fatfs_fat_init
 ---------------------------------------------------------------------------------
 (3) _fatfs_fat_init                                      12    10      2    4888
                                              8 COMRAM    12    10      2
                             _memset
 ---------------------------------------------------------------------------------
 (7) _fatfs_erase_sectors                                 18    10      8    8117
                                             31 COMRAM    18    10      8
               _fatfs_lba_of_cluster (ARG)
                        _media_write *
                             _memset
 ---------------------------------------------------------------------------------
 (7) _fatfs_erase_fat                                     21    17      4    8473
                                             31 COMRAM    21    17      4
                        _media_write *
                             _memset
 ---------------------------------------------------------------------------------
 (7) _fatfs_create_boot_sector                            28    14     14   14439
                                             31 COMRAM    28    14     14
                            ___lldiv
            _fatfs_calc_cluster_size
                        _media_write *
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _fatfs_calc_cluster_size                             14     8      6     330
                                              0 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (2) _File_write                                           1     1      0 1208714
                                            137 BANK1      1     1      0
                            _Clr_str
                           _ReadUART
                           _Read_str
                             _Switch
                              _Write
                          _Write_str
                          _fl_fclose
                           _fl_fopen
                          _fl_fwrite
                          _fl_remove
 ---------------------------------------------------------------------------------
 (2) _File_read                                            0     0      0  601510
                            _Clr_str
                          _Draw_Line
                           _Read_str
                             _Switch
                              _Write
                          _Write_str
                          _fl_fclose
                            _fl_feof
                           _fl_fgetc
                           _fl_fopen
 ---------------------------------------------------------------------------------
 (3) _fl_fgetc                                             5     3      2   73865
                                            118 BANK0      5     3      2
                           _fl_fread
 ---------------------------------------------------------------------------------
 (3) _fl_feof                                             14    12      2     433
                                              0 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (3) _Draw_Line                                            5     4      1     516
                                              2 COMRAM     5     4      1
                              _Write
 ---------------------------------------------------------------------------------
 (2) _File_delete                                          0     0      0  570250
                            _Clr_str
                           _Read_str
                             _Switch
                          _Write_str
                          _fl_remove
 ---------------------------------------------------------------------------------
 (3) _fl_remove                                            6     4      2  556460
                                            131 BANK1      6     4      2
           _fatfs_free_cluster_chain
            _fatfs_mark_file_deleted
                          _fl_fclose
                           _fl_fopen
 ---------------------------------------------------------------------------------
 (4) _fatfs_mark_file_deleted                             19    11      8   24502
                                             44 BANK0     19    11      8
            _fatfs_entry_lfn_invalid
               _fatfs_entry_lfn_text
               _fatfs_entry_sfn_only
                _fatfs_sector_reader
                        _media_write *
                             _memcpy
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _File_append                                          4     4      0  730022
                                            131 BANK1      4     4      0
                            _Clr_str
                           _ReadUART
                           _Read_str
                             _Switch
                              _Write
                          _Write_str
                          _fl_fclose
                           _fl_fopen
                           _fl_fread
                           _fl_fseek
                           _fl_ftell
                          _fl_fwrite
 ---------------------------------------------------------------------------------
 (3) _fl_fwrite                                           46    37      9  125535
                                             94 BANK0     17     8      9
                                              0 BANK1     29    29      0
                      __read_sectors
                     __write_sectors
                          _fl_fflush
                            _fl_init
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _fl_ftell                                             8     4      4     414
                                              6 COMRAM     8     4      4
                         _fl_fgetpos
 ---------------------------------------------------------------------------------
 (4) _fl_fgetpos                                           6     2      4     217
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _fl_fseek                                            20    12      8    3797
                                             22 COMRAM    20    12      8
                           _fl_ftell (ARG)
                            _fl_init
 ---------------------------------------------------------------------------------
 (4) _fl_fread                                            44    36      8   73557
                                             94 BANK0     24    16      8
                                              0 BANK1     20    20      0
                            ___awdiv
                      __read_sectors
                          _fl_fflush
                            _fl_init
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __read_sectors                                       45    33     12   16088
                                              0 BANK0     45    33     12
                            ___awdiv (ARG)
                            ___lldiv
       _fatfs_cache_get_next_cluster
       _fatfs_cache_set_next_cluster
            _fatfs_find_next_cluster
               _fatfs_lba_of_cluster
                  _fatfs_sector_read
 ---------------------------------------------------------------------------------
 (5) _fatfs_sector_read                                   14     2     12    2515
                                             30 COMRAM    14     2     12
                         _media_read *
 ---------------------------------------------------------------------------------
 (4) _fl_fopen                                            11     7      4  428062
                                            124 BANK0      4     0      4
                                            124 BANK1      7     7      0
                       __create_file
                         __open_file
                            _fl_init
                             _strlen
 ---------------------------------------------------------------------------------
 (5) __open_file                                          44    42      2  108936
                                            114 BANK0     10     8      2
                                             77 BANK1     34    34      0
                     __allocate_file
                   __check_file_open
                         __free_file
                    __open_directory
                   _fatfs_cache_init
                _fatfs_entry_is_file
                    _fatfs_fat_purge
               _fatfs_get_file_entry
             _fatfs_get_root_cluster
                   _fatfs_split_path
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (6) _fatfs_entry_is_file                                  3     1      2      86
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) __create_file                                        53    51      2  314614
                                            114 BANK0      6     4      2
                                             77 BANK1     47    47      0
                     __allocate_file
                   __check_file_open
                         __free_file
                    __open_directory
               _fatfs_add_file_entry
          _fatfs_allocate_free_space
                   _fatfs_cache_init
                    _fatfs_fat_purge
           _fatfs_free_cluster_chain
               _fatfs_get_file_entry
             _fatfs_get_root_cluster
               _fatfs_lfn_create_sfn
            _fatfs_lfn_generate_tail
                   _fatfs_sfn_exists
                   _fatfs_split_path
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (6) _fatfs_cache_init                                     4     0      4     256
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _fl_fclose                                            4     2      2   84778
                                             94 BANK0      4     2      2
                         __free_file
                    _fatfs_fat_purge
           _fatfs_update_file_length
                          _fl_fflush
                            _fl_init
 ---------------------------------------------------------------------------------
 (5) _fl_fflush                                           10     8      2   49564
                                             84 BANK0     10     8      2
                     __write_sectors
                            _fl_init
 ---------------------------------------------------------------------------------
 (6) __write_sectors                                      54    41     13   47181
                                             30 BANK0     54    41     13
                            ___lldiv
               _fatfs_add_free_space
       _fatfs_cache_get_next_cluster
       _fatfs_cache_set_next_cluster
            _fatfs_find_next_cluster
               _fatfs_lba_of_cluster
                 _fatfs_sector_write
 ---------------------------------------------------------------------------------
 (7) _fatfs_sector_write                                  15     2     13    3601
                                             31 COMRAM    15     2     13
                        _media_write *
 ---------------------------------------------------------------------------------
 (7) _fatfs_cache_set_next_cluster                        12     0     12     512
                                              0 COMRAM    12     0     12
 ---------------------------------------------------------------------------------
 (7) _fatfs_cache_get_next_cluster                        10     0     10     512
                                              0 COMRAM    10     0     10
 ---------------------------------------------------------------------------------
 (5) _fatfs_update_file_length                            23    11     12   24588
                                             44 BANK0     23    11     12
            _fatfs_entry_lfn_invalid
               _fatfs_entry_lfn_text
               _fatfs_entry_sfn_only
                _fatfs_sector_reader
                        _media_write *
                             _memcpy
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _Write                                                1     1      0      66
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _ReadUART                                             0     0      0      23
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (2) _Create_folder                                        0     0      0  335994
                            _Clr_str
                           _Read_str
                             _Switch
                          _Write_str
                 _fl_createdirectory
 ---------------------------------------------------------------------------------
 (3) _fl_createdirectory                                   4     2      2  322204
                                            120 BANK0      4     2      2
                  __create_directory
                            _fl_init
 ---------------------------------------------------------------------------------
 (2) _fl_init                                              8     8      0    1972
                                             14 COMRAM     8     8      0
              fat_list@fat_list_init
       fat_list@fat_list_insert_last
 ---------------------------------------------------------------------------------
 (3) fat_list@fat_list_init                                2     0      2     172
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __create_directory                                   55    53      2  320123
                                            114 BANK0      6     4      2
                                             77 BANK1     49    49      0
                     __allocate_file
                   __check_file_open
                         __free_file
                    __open_directory
               _fatfs_add_file_entry
          _fatfs_allocate_free_space
                    _fatfs_fat_purge
           _fatfs_free_cluster_chain
               _fatfs_get_file_entry
             _fatfs_get_root_cluster
               _fatfs_lfn_create_sfn
            _fatfs_lfn_generate_tail
                   _fatfs_sfn_exists
                   _fatfs_split_path
                 _fatfs_write_sector
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (6) _fatfs_split_path                                    18     8     10    7610
                                             28 COMRAM    18     8     10
                _fatfs_get_substring
            _fatfs_total_path_levels
                             _memcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fatfs_sfn_exists                                    17     9      8   18645
                                             44 BANK0     17     9      8
            _fatfs_entry_lfn_invalid
               _fatfs_entry_lfn_text
               _fatfs_entry_sfn_only
                _fatfs_sector_reader
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _fatfs_lfn_generate_tail                             24    16      8   10366
                                             54 COMRAM    24    16      8
                         _fatfs_itoa
                             _memcpy
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _fatfs_itoa                                          41    35      6    1680
                                             13 COMRAM    41    35      6
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (8) ___llmod                                              9     1      8     287
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) _fatfs_lfn_create_sfn                                20    16      4    6901
                                              8 COMRAM    20    16      4
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fatfs_free_cluster_chain                            14     8      6   18833
                                              0 BANK0     14     8      6
              _fatfs_fat_set_cluster
            _fatfs_find_next_cluster
 ---------------------------------------------------------------------------------
 (2) _fatfs_fat_purge                                      4     2      2    4279
                                             51 COMRAM     4     2      2
                _fatfs_fat_writeback
 ---------------------------------------------------------------------------------
 (6) _fatfs_allocate_free_space                           30    20     10   61543
                                             30 BANK0     30    20     10
                            ___lldiv
               _fatfs_add_free_space
              _fatfs_fat_set_cluster
           _fatfs_find_blank_cluster
_fatfs_set_fs_info_next_free_cluster
 ---------------------------------------------------------------------------------
 (7) _fatfs_add_free_space                                24    16      8   30146
                                            115 COMRAM    12     4      8
                                             18 BANK0     12    12      0
                            ___lldiv (ARG)
              _fatfs_fat_set_cluster
           _fatfs_find_blank_cluster
_fatfs_set_fs_info_next_free_cluster
 ---------------------------------------------------------------------------------
 (7) _fatfs_set_fs_info_next_free_cluster                 14     8      6   11409
                                             69 COMRAM    14     8      6
              _fatfs_fat_read_sector
                        _media_write *
 ---------------------------------------------------------------------------------
 (6) _fatfs_add_file_entry                                80    60     20   89308
                                             76 BANK0     24     4     20
                                              0 BANK1     56    56      0
              _fatfs_filename_to_lfn
         _fatfs_find_free_dir_offset
         _fatfs_lfn_entries_required
                _fatfs_sector_reader
             _fatfs_sfn_create_entry
                        _media_write *
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _fatfs_sfn_create_entry                              16     2     14     916
                                              0 COMRAM    16     2     14
 ---------------------------------------------------------------------------------
 (7) _fatfs_find_free_dir_offset                          32    20     12   54605
                                             44 BANK0     32    20     12
               _fatfs_entry_lfn_text
     _fatfs_fat_add_cluster_to_chain
           _fatfs_find_blank_cluster
                _fatfs_sector_reader
                 _fatfs_write_sector
                             _memset
 ---------------------------------------------------------------------------------
 (8) _fatfs_write_sector                                  32    20     12    5653
                                             31 COMRAM    32    20     12
               _fatfs_lba_of_cluster
                        _media_write *
 ---------------------------------------------------------------------------------
 (7) _fatfs_find_blank_cluster                            64    56      8    8701
                                             69 COMRAM    46    38      8
                                              0 BANK0     18    18      0
              _fatfs_fat_read_sector
 ---------------------------------------------------------------------------------
 (8) _fatfs_fat_add_cluster_to_chain                      18     8     10   18474
                                              0 BANK0     18     8     10
              _fatfs_fat_set_cluster
            _fatfs_find_next_cluster
 ---------------------------------------------------------------------------------
 (7) _fatfs_fat_set_cluster                               28    18     10    9272
                                             69 COMRAM    28    18     10
              _fatfs_fat_read_sector
 ---------------------------------------------------------------------------------
 (7) _fatfs_filename_to_lfn                               33    26      7    8239
                                             12 COMRAM    33    26      7
         _fatfs_lfn_entries_required
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _fatfs_lfn_entries_required                           4     2      2    1865
                                              8 COMRAM     4     2      2
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     556
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __open_directory                                     58    54      4   41065
                                             56 BANK0     58    54      4
                 _fatfs_entry_is_dir
               _fatfs_get_file_entry
             _fatfs_get_root_cluster
                _fatfs_get_substring
            _fatfs_total_path_levels
 ---------------------------------------------------------------------------------
 (3) _fatfs_total_path_levels                              7     5      2     398
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _fatfs_get_substring                                 22    14      8    2123
                                              6 COMRAM    22    14      8
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _fatfs_get_root_cluster                               4     0      4     342
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _fatfs_get_file_entry                                89    79     10   37147
                                             44 BANK0     12     2     10
                                              0 BANK1     77    77      0
                _fatfs_compare_names
             _fatfs_entry_lfn_exists
            _fatfs_entry_lfn_invalid
               _fatfs_entry_lfn_text
               _fatfs_entry_sfn_only
              _fatfs_lfn_cache_entry
                _fatfs_lfn_cache_get
               _fatfs_lfn_cache_init
                _fatfs_sector_reader
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              12     5      7    2616
                                              0 COMRAM    12     5      7
 ---------------------------------------------------------------------------------
 (4) _fatfs_sector_reader                                 44    32     12   15630
                                              0 BANK0     44    32     12
                            ___lldiv
            _fatfs_find_next_cluster
               _fatfs_lba_of_cluster
                         _media_read *
 ---------------------------------------------------------------------------------
 (5) _fatfs_lba_of_cluster                                30    24      6    1200
                                              0 COMRAM    30    24      6
 ---------------------------------------------------------------------------------
 (5) _fatfs_find_next_cluster                             58    52      6    8742
                                             69 COMRAM    58    52      6
              _fatfs_fat_read_sector
 ---------------------------------------------------------------------------------
 (6) _fatfs_fat_read_sector                               18    12      6    7411
                                             51 COMRAM    18    12      6
                _fatfs_fat_writeback
                         _media_read *
 ---------------------------------------------------------------------------------
 (5) _media_read                                          22    12     10    2171
                                              8 COMRAM    22    12     10
                            _Command
                           _ReadSPI_
                          _WriteSPI_
 ---------------------------------------------------------------------------------
 (3) _fatfs_fat_writeback                                 20    16      4    3825
                                             31 COMRAM    20    16      4
                        _media_write *
 ---------------------------------------------------------------------------------
 (4) _media_write                                         27    16     11    3257
                                              8 COMRAM    23    12     11
                            _Command
                           _ReadSPI_
                          _WriteSPI_
 ---------------------------------------------------------------------------------
 (5) _Command                                              6     1      5    1054
                                              2 COMRAM     6     1      5
                            _ReadBUF
                           _ReadSPI_
                          _WriteSPI_
 ---------------------------------------------------------------------------------
 (5) _WriteSPI_                                            2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _ReadSPI_                                             1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadBUF                                              1     1      0       2
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1010
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _fatfs_lfn_cache_init                                 8     4      4    5351
                                              8 COMRAM     8     4      4
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    4320
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _fatfs_lfn_cache_get                                  3     1      2     282
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _fatfs_lfn_cache_entry                               16    12      4    1425
                                              0 COMRAM    16    12      4
 ---------------------------------------------------------------------------------
 (4) _fatfs_entry_sfn_only                                 3     1      2     430
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _fatfs_entry_lfn_text                                 3     1      2     406
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _fatfs_entry_lfn_invalid                              3     1      2     408
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _fatfs_entry_lfn_exists                               5     1      4     388
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _fatfs_entry_is_dir                                   3     1      2     214
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (6) __free_file                                           2     0      2    3596
                                             14 COMRAM     2     0      2
       fat_list@fat_list_insert_last
            fat_list@fat_list_remove
 ---------------------------------------------------------------------------------
 (6) __check_file_open                                     6     4      2    4134
                                             36 COMRAM     6     4      2
                _fatfs_compare_names
 ---------------------------------------------------------------------------------
 (5) _fatfs_compare_names                                 18    14      4    3718
                                             18 COMRAM    18    14      4
            _FileString_GetExtension
            _FileString_StrCmpNoCase
              _FileString_TrimLength
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2    1114
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _FileString_TrimLength                               10     6      4     437
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _FileString_StrCmpNoCase                             12     6      6     677
                                              6 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _FileString_GetExtension                              8     6      2     328
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (6) __allocate_file                                       4     2      2    2472
                                             14 COMRAM     4     2      2
       fat_list@fat_list_insert_last
          fat_list@fat_list_pop_head
 ---------------------------------------------------------------------------------
 (7) fat_list@fat_list_pop_head                            4     2      2     651
                                              6 COMRAM     4     2      2
            fat_list@fat_list_remove
 ---------------------------------------------------------------------------------
 (7) fat_list@fat_list_remove                              6     2      4     476
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) fat_list@fat_list_insert_last                         4     0      4    1732
                                             10 COMRAM     4     0      4
      fat_list@fat_list_insert_after
      fat_list@fat_list_insert_first
 ---------------------------------------------------------------------------------
 (4) fat_list@fat_list_insert_first                        4     0      4     782
                                              6 COMRAM     4     0      4
     fat_list@fat_list_insert_before
 ---------------------------------------------------------------------------------
 (5) fat_list@fat_list_insert_before                       6     0      6     434
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (4) fat_list@fat_list_insert_after                        8     2      6     434
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (3) _Switch                                               6     6      0    9124
                                             21 COMRAM     6     6      0
                    _Check_extension
                      _Format_string
                          _Write_str
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               9     5      4     509
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) _Format_string                                        5     0      5     607
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (4) _Check_extension                                     12     9      3    4673
                                              9 COMRAM    12     9      3
                          _Write_str
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              9     3      6    1094
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _Write_str                                            2     0      2    3288
                                              5 COMRAM     2     0      2
                          _putsUSART
 ---------------------------------------------------------------------------------
 (2) _putsUSART                                            4     2      2     130
                                              1 COMRAM     4     2      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _Read_str                                             4     2      2     693
                                              1 COMRAM     4     2      2
                          _ReadUSART
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (5) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Clr_str                                              2     0      2     685
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ConfigUSART                                          2     1      1     392
                                              6 COMRAM     2     1      1
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     284
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigUSART
     _OpenUSART
   _File_IO
     _Create_folder
       _Clr_str
       _Read_str
         _ReadUSART
         _WriteUSART
       _Switch
         _Check_extension
           _Write_str
             _putsUSART
               _WriteUSART
           _strncmp
         _Format_string
         _Write_str
           _putsUSART
             _WriteUSART
         _strcmp
       _Write_str
         _putsUSART
           _WriteUSART
       _fl_createdirectory
         __create_directory
           __allocate_file
             fat_list@fat_list_insert_last
               fat_list@fat_list_insert_after
               fat_list@fat_list_insert_first
                 fat_list@fat_list_insert_before
             fat_list@fat_list_pop_head
               fat_list@fat_list_remove
           __check_file_open
             _fatfs_compare_names
               _FileString_GetExtension
               _FileString_StrCmpNoCase
                 _strlen (ARG)
               _FileString_TrimLength
               _strlen
           __free_file
             fat_list@fat_list_insert_last
               fat_list@fat_list_insert_after
               fat_list@fat_list_insert_first
                 fat_list@fat_list_insert_before
             fat_list@fat_list_remove
           __open_directory
             _fatfs_entry_is_dir
             _fatfs_get_file_entry
               _fatfs_compare_names
                 _FileString_GetExtension
                 _FileString_StrCmpNoCase
                   _strlen (ARG)
                 _FileString_TrimLength
                 _strlen
               _fatfs_entry_lfn_exists
               _fatfs_entry_lfn_invalid
               _fatfs_entry_lfn_text
               _fatfs_entry_sfn_only
               _fatfs_lfn_cache_entry
               _fatfs_lfn_cache_get
               _fatfs_lfn_cache_init
                 _memset
               _fatfs_sector_reader
                 ___lldiv
                 _fatfs_find_next_cluster
                   _fatfs_fat_read_sector
                     _fatfs_fat_writeback
                       _media_write *
                         _Command
                           _ReadBUF
                           _ReadSPI_
                           _WriteSPI_
                         _ReadSPI_
                         _WriteSPI_
                     _media_read *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                 _fatfs_lba_of_cluster
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
               _memcpy
               _memset
             _fatfs_get_root_cluster
             _fatfs_get_substring
               _strlen
             _fatfs_total_path_levels
           _fatfs_add_file_entry
             _fatfs_filename_to_lfn
               _fatfs_lfn_entries_required
                 ___awdiv
                 _strlen
               _memset
               _strlen
             _fatfs_find_free_dir_offset
               _fatfs_entry_lfn_text
               _fatfs_fat_add_cluster_to_chain
                 _fatfs_fat_set_cluster
                   _fatfs_fat_read_sector
                     _fatfs_fat_writeback
                       _media_write *
                         _Command
                           _ReadBUF
                           _ReadSPI_
                           _WriteSPI_
                         _ReadSPI_
                         _WriteSPI_
                     _media_read *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                 _fatfs_find_next_cluster
                   _fatfs_fat_read_sector
                     _fatfs_fat_writeback
                       _media_write *
                         _Command
                           _ReadBUF
                           _ReadSPI_
                           _WriteSPI_
                         _ReadSPI_
                         _WriteSPI_
                     _media_read *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
               _fatfs_find_blank_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_sector_reader
                 ___lldiv
                 _fatfs_find_next_cluster
                   _fatfs_fat_read_sector
                     _fatfs_fat_writeback
                       _media_write *
                         _Command
                           _ReadBUF
                           _ReadSPI_
                           _WriteSPI_
                         _ReadSPI_
                         _WriteSPI_
                     _media_read *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                 _fatfs_lba_of_cluster
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
               _fatfs_write_sector
                 _fatfs_lba_of_cluster
                 _media_write *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
               _memset
             _fatfs_lfn_entries_required
               ___awdiv
               _strlen
             _fatfs_sector_reader
               ___lldiv
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_lba_of_cluster
               _media_read *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
             _fatfs_sfn_create_entry
             _media_write *
               _Command
                 _ReadBUF
                 _ReadSPI_
                 _WriteSPI_
               _ReadSPI_
               _WriteSPI_
             _memcpy *
           _fatfs_allocate_free_space
             ___lldiv
             _fatfs_add_free_space
               ___lldiv (ARG)
               _fatfs_fat_set_cluster (ARG)
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_find_blank_cluster (ARG)
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_set_fs_info_next_free_cluster (ARG)
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_write *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
             _fatfs_fat_set_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
             _fatfs_find_blank_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
             _fatfs_set_fs_info_next_free_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
               _media_write *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
           _fatfs_fat_purge
             _fatfs_fat_writeback
               _media_write *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
           _fatfs_free_cluster_chain
             _fatfs_fat_set_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
             _fatfs_find_next_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
           _fatfs_get_file_entry
             _fatfs_compare_names
               _FileString_GetExtension
               _FileString_StrCmpNoCase
                 _strlen (ARG)
               _FileString_TrimLength
               _strlen
             _fatfs_entry_lfn_exists
             _fatfs_entry_lfn_invalid
             _fatfs_entry_lfn_text
             _fatfs_entry_sfn_only
             _fatfs_lfn_cache_entry
             _fatfs_lfn_cache_get
             _fatfs_lfn_cache_init
               _memset
             _fatfs_sector_reader
               ___lldiv
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_lba_of_cluster
               _media_read *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
             _memcpy
             _memset
           _fatfs_get_root_cluster
           _fatfs_lfn_create_sfn
             _memset
             _strlen
           _fatfs_lfn_generate_tail
             _fatfs_itoa
               ___lldiv
               ___llmod
             _memcpy
             _memset
             _strlen
           _fatfs_sfn_exists
             _fatfs_entry_lfn_invalid
             _fatfs_entry_lfn_text
             _fatfs_entry_sfn_only
             _fatfs_sector_reader
               ___lldiv
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_lba_of_cluster
               _media_read *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
             _strncmp
           _fatfs_split_path
             _fatfs_get_substring
               _strlen
             _fatfs_total_path_levels
             _memcpy
             _strlen
           _fatfs_write_sector
             _fatfs_lba_of_cluster
             _media_write *
               _Command
                 _ReadBUF
                 _ReadSPI_
                 _WriteSPI_
               _ReadSPI_
               _WriteSPI_
           _memcpy
           _memset
         _fl_init
           fat_list@fat_list_init
           fat_list@fat_list_insert_last
             fat_list@fat_list_insert_after
             fat_list@fat_list_insert_first
               fat_list@fat_list_insert_before
     _File_append
       _Clr_str
       _ReadUART
         _ReadUSART
       _Read_str
         _ReadUSART
         _WriteUSART
       _Switch
         _Check_extension
           _Write_str
             _putsUSART
               _WriteUSART
           _strncmp
         _Format_string
         _Write_str
           _putsUSART
             _WriteUSART
         _strcmp
       _Write
         _WriteUSART
       _Write_str
         _putsUSART
           _WriteUSART
       _fl_fclose
         __free_file
           fat_list@fat_list_insert_last
             fat_list@fat_list_insert_after
             fat_list@fat_list_insert_first
               fat_list@fat_list_insert_before
           fat_list@fat_list_remove
         _fatfs_fat_purge
           _fatfs_fat_writeback
             _media_write *
               _Command
                 _ReadBUF
                 _ReadSPI_
                 _WriteSPI_
               _ReadSPI_
               _WriteSPI_
         _fatfs_update_file_length
           _fatfs_entry_lfn_invalid
           _fatfs_entry_lfn_text
           _fatfs_entry_sfn_only
           _fatfs_sector_reader
             ___lldiv
             _fatfs_find_next_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
             _fatfs_lba_of_cluster
             _media_read *
               _Command
                 _ReadBUF
                 _ReadSPI_
                 _WriteSPI_
               _ReadSPI_
               _WriteSPI_
           _media_write *
             _Command
               _ReadBUF
               _ReadSPI_
               _WriteSPI_
             _ReadSPI_
             _WriteSPI_
           _memcpy *
           _strncmp *
         _fl_fflush
           __write_sectors
             ___lldiv
             _fatfs_add_free_space
               ___lldiv (ARG)
               _fatfs_fat_set_cluster (ARG)
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_find_blank_cluster (ARG)
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_set_fs_info_next_free_cluster (ARG)
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_write *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
             _fatfs_cache_get_next_cluster
             _fatfs_cache_set_next_cluster
             _fatfs_find_next_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
             _fatfs_lba_of_cluster
             _fatfs_sector_write
               _media_write *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
           _fl_init
             fat_list@fat_list_init
             fat_list@fat_list_insert_last
               fat_list@fat_list_insert_after
               fat_list@fat_list_insert_first
                 fat_list@fat_list_insert_before
         _fl_init
           fat_list@fat_list_init
           fat_list@fat_list_insert_last
             fat_list@fat_list_insert_after
             fat_list@fat_list_insert_first
               fat_list@fat_list_insert_before
       _fl_fopen
         __create_file
           __allocate_file
             fat_list@fat_list_insert_last
               fat_list@fat_list_insert_after
               fat_list@fat_list_insert_first
                 fat_list@fat_list_insert_before
             fat_list@fat_list_pop_head
               fat_list@fat_list_remove
           __check_file_open
             _fatfs_compare_names
               _FileString_GetExtension
               _FileString_StrCmpNoCase
                 _strlen (ARG)
               _FileString_TrimLength
               _strlen
           __free_file
             fat_list@fat_list_insert_last
               fat_list@fat_list_insert_after
               fat_list@fat_list_insert_first
                 fat_list@fat_list_insert_before
             fat_list@fat_list_remove
           __open_directory
             _fatfs_entry_is_dir
             _fatfs_get_file_entry
               _fatfs_compare_names
                 _FileString_GetExtension
                 _FileString_StrCmpNoCase
                   _strlen (ARG)
                 _FileString_TrimLength
                 _strlen
               _fatfs_entry_lfn_exists
               _fatfs_entry_lfn_invalid
               _fatfs_entry_lfn_text
               _fatfs_entry_sfn_only
               _fatfs_lfn_cache_entry
               _fatfs_lfn_cache_get
               _fatfs_lfn_cache_init
                 _memset
               _fatfs_sector_reader
                 ___lldiv
                 _fatfs_find_next_cluster
                   _fatfs_fat_read_sector
                     _fatfs_fat_writeback
                       _media_write *
                         _Command
                           _ReadBUF
                           _ReadSPI_
                           _WriteSPI_
                         _ReadSPI_
                         _WriteSPI_
                     _media_read *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                 _fatfs_lba_of_cluster
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
               _memcpy
               _memset
             _fatfs_get_root_cluster
             _fatfs_get_substring
               _strlen
             _fatfs_total_path_levels
           _fatfs_add_file_entry
             _fatfs_filename_to_lfn
               _fatfs_lfn_entries_required
                 ___awdiv
                 _strlen
               _memset
               _strlen
             _fatfs_find_free_dir_offset
               _fatfs_entry_lfn_text
               _fatfs_fat_add_cluster_to_chain
                 _fatfs_fat_set_cluster
                   _fatfs_fat_read_sector
                     _fatfs_fat_writeback
                       _media_write *
                         _Command
                           _ReadBUF
                           _ReadSPI_
                           _WriteSPI_
                         _ReadSPI_
                         _WriteSPI_
                     _media_read *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                 _fatfs_find_next_cluster
                   _fatfs_fat_read_sector
                     _fatfs_fat_writeback
                       _media_write *
                         _Command
                           _ReadBUF
                           _ReadSPI_
                           _WriteSPI_
                         _ReadSPI_
                         _WriteSPI_
                     _media_read *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
               _fatfs_find_blank_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_sector_reader
                 ___lldiv
                 _fatfs_find_next_cluster
                   _fatfs_fat_read_sector
                     _fatfs_fat_writeback
                       _media_write *
                         _Command
                           _ReadBUF
                           _ReadSPI_
                           _WriteSPI_
                         _ReadSPI_
                         _WriteSPI_
                     _media_read *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                 _fatfs_lba_of_cluster
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
               _fatfs_write_sector
                 _fatfs_lba_of_cluster
                 _media_write *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
               _memset
             _fatfs_lfn_entries_required
               ___awdiv
               _strlen
             _fatfs_sector_reader
               ___lldiv
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_lba_of_cluster
               _media_read *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
             _fatfs_sfn_create_entry
             _media_write *
               _Command
                 _ReadBUF
                 _ReadSPI_
                 _WriteSPI_
               _ReadSPI_
               _WriteSPI_
             _memcpy *
           _fatfs_allocate_free_space
             ___lldiv
             _fatfs_add_free_space
               ___lldiv (ARG)
               _fatfs_fat_set_cluster (ARG)
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_find_blank_cluster (ARG)
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_set_fs_info_next_free_cluster (ARG)
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_write *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
             _fatfs_fat_set_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
             _fatfs_find_blank_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
             _fatfs_set_fs_info_next_free_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
               _media_write *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
           _fatfs_cache_init
           _fatfs_fat_purge
             _fatfs_fat_writeback
               _media_write *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
           _fatfs_free_cluster_chain
             _fatfs_fat_set_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
             _fatfs_find_next_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
           _fatfs_get_file_entry
             _fatfs_compare_names
               _FileString_GetExtension
               _FileString_StrCmpNoCase
                 _strlen (ARG)
               _FileString_TrimLength
               _strlen
             _fatfs_entry_lfn_exists
             _fatfs_entry_lfn_invalid
             _fatfs_entry_lfn_text
             _fatfs_entry_sfn_only
             _fatfs_lfn_cache_entry
             _fatfs_lfn_cache_get
             _fatfs_lfn_cache_init
               _memset
             _fatfs_sector_reader
               ___lldiv
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_lba_of_cluster
               _media_read *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
             _memcpy
             _memset
           _fatfs_get_root_cluster
           _fatfs_lfn_create_sfn
             _memset
             _strlen
           _fatfs_lfn_generate_tail
             _fatfs_itoa
               ___lldiv
               ___llmod
             _memcpy
             _memset
             _strlen
           _fatfs_sfn_exists
             _fatfs_entry_lfn_invalid
             _fatfs_entry_lfn_text
             _fatfs_entry_sfn_only
             _fatfs_sector_reader
               ___lldiv
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_lba_of_cluster
               _media_read *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
             _strncmp
           _fatfs_split_path
             _fatfs_get_substring
               _strlen
             _fatfs_total_path_levels
             _memcpy
             _strlen
           _memcpy
           _memset
         __open_file
           __allocate_file
             fat_list@fat_list_insert_last
               fat_list@fat_list_insert_after
               fat_list@fat_list_insert_first
                 fat_list@fat_list_insert_before
             fat_list@fat_list_pop_head
               fat_list@fat_list_remove
           __check_file_open
             _fatfs_compare_names
               _FileString_GetExtension
               _FileString_StrCmpNoCase
                 _strlen (ARG)
               _FileString_TrimLength
               _strlen
           __free_file
             fat_list@fat_list_insert_last
               fat_list@fat_list_insert_after
               fat_list@fat_list_insert_first
                 fat_list@fat_list_insert_before
             fat_list@fat_list_remove
           __open_directory
             _fatfs_entry_is_dir
             _fatfs_get_file_entry
               _fatfs_compare_names
                 _FileString_GetExtension
                 _FileString_StrCmpNoCase
                   _strlen (ARG)
                 _FileString_TrimLength
                 _strlen
               _fatfs_entry_lfn_exists
               _fatfs_entry_lfn_invalid
               _fatfs_entry_lfn_text
               _fatfs_entry_sfn_only
               _fatfs_lfn_cache_entry
               _fatfs_lfn_cache_get
               _fatfs_lfn_cache_init
                 _memset
               _fatfs_sector_reader
                 ___lldiv
                 _fatfs_find_next_cluster
                   _fatfs_fat_read_sector
                     _fatfs_fat_writeback
                       _media_write *
                         _Command
                           _ReadBUF
                           _ReadSPI_
                           _WriteSPI_
                         _ReadSPI_
                         _WriteSPI_
                     _media_read *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                 _fatfs_lba_of_cluster
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
               _memcpy
               _memset
             _fatfs_get_root_cluster
             _fatfs_get_substring
               _strlen
             _fatfs_total_path_levels
           _fatfs_cache_init
           _fatfs_entry_is_file
           _fatfs_fat_purge
             _fatfs_fat_writeback
               _media_write *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
           _fatfs_get_file_entry
             _fatfs_compare_names
               _FileString_GetExtension
               _FileString_StrCmpNoCase
                 _strlen (ARG)
               _FileString_TrimLength
               _strlen
             _fatfs_entry_lfn_exists
             _fatfs_entry_lfn_invalid
             _fatfs_entry_lfn_text
             _fatfs_entry_sfn_only
             _fatfs_lfn_cache_entry
             _fatfs_lfn_cache_get
             _fatfs_lfn_cache_init
               _memset
             _fatfs_sector_reader
               ___lldiv
               _fatfs_find_next_cluster
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_lba_of_cluster
               _media_read *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
             _memcpy
             _memset
           _fatfs_get_root_cluster
           _fatfs_split_path
             _fatfs_get_substring
               _strlen
             _fatfs_total_path_levels
             _memcpy
             _strlen
           _memcpy
           _memset
         _fl_init
           fat_list@fat_list_init
           fat_list@fat_list_insert_last
             fat_list@fat_list_insert_after
             fat_list@fat_list_insert_first
               fat_list@fat_list_insert_before
         _strlen
       _fl_fread
         ___awdiv
         __read_sectors
           ___awdiv (ARG)
           ___lldiv (ARG)
           _fatfs_cache_get_next_cluster (ARG)
           _fatfs_cache_set_next_cluster (ARG)
           _fatfs_find_next_cluster (ARG)
             _fatfs_fat_read_sector
               _fatfs_fat_writeback
                 _media_write *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
               _media_read *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
           _fatfs_lba_of_cluster (ARG)
           _fatfs_sector_read (ARG)
             _media_read *
               _Command
                 _ReadBUF
                 _ReadSPI_
                 _WriteSPI_
               _ReadSPI_
               _WriteSPI_
         _fl_fflush
           __write_sectors
             ___lldiv
             _fatfs_add_free_space
               ___lldiv (ARG)
               _fatfs_fat_set_cluster (ARG)
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_find_blank_cluster (ARG)
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
               _fatfs_set_fs_info_next_free_cluster (ARG)
                 _fatfs_fat_read_sector
                   _fatfs_fat_writeback
                     _media_write *
                       _Command
                         _ReadBUF
                         _ReadSPI_
                         _WriteSPI_
                       _ReadSPI_
                       _WriteSPI_
                   _media_read *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_write *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
             _fatfs_cache_get_next_cluster
             _fatfs_cache_set_next_cluster
             _fatfs_find_next_cluster
               _fatfs_fat_read_sector
                 _fatfs_fat_writeback
                   _media_write *
                     _Command
                       _ReadBUF
                       _ReadSPI_
                       _WriteSPI_
                     _ReadSPI_
                     _WriteSPI_
                 _media_read *
                   _Command
                     _ReadBUF
                     _ReadSPI_
                     _WriteSPI_
                   _ReadSPI_
                   _WriteSPI_
             _fatfs_lba_of_cluster
             _fatfs_sector_write
               _media_write *
                 _Command
                   _ReadBUF
                   _ReadSPI_
                   _WriteSPI_
                 _ReadSPI_
                 _WriteSPI_
           _fl_init
             fat_list@fat_list_init


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Jun 02 12:23:27 2015

                              fl_fwrite@count 00E3                                 fl_fwrite@size 00E1  
                      ??_fatfs_entry_lfn_text 0003                               fl_fwrite@buffer 0100  
        fatfs_filename_to_lfn@entriesRequired 0024                               fl_fwrite@length 010F  
                          _fatfs_write_sector 9F76                                             _c 01A6  
                                           _d 01A7                                             _f 01A8  
                                           _i 019B                                             _j 019D  
                                           _m 0289                                             _n 019F  
                                           _s 02A7                                             _t 01AC  
                                           _v 01A3                                             _w 01F8  
                                           _x 01AD                                             _z 01AE  
                          fl_fgetpos@position 0003                               fl_fwrite@offset 0107  
                  __size_of_fatfs_sector_read 005C                      ??_fatfs_entry_lfn_exists 0005  
               FileString_GetExtension@dotPos 0005                               fl_fwrite@sector 010B  
                 __end_of_fatfs_compare_names 707C                   ?_fatfs_get_sfn_display_name 0001  
                                 _SSPSTATbits 000FC7                   __end_of_fatfs_get_substring 7CA0  
                 fatfs_mark_file_deleted@item 00BC                                            l38 FA46  
                                          l64 F738                                            l86 A678  
                                          l89 A93C                     fatfs_create_boot_sector@i 003A  
              __end_of_fatfs_get_root_cluster 3F3E                                  ___awdiv@sign 0006  
              fatfs_add_file_entry@dirCluster 00CE                                   __CFG_BORV$3 000000  
                 fatfs_get_file_entry@Cluster 00AE                    __size_of__create_directory 0554  
                 fatfs_find_next_cluster@pbuf 007E                       fatfs_sector_read@target 0025  
                  fat_list@fat_list_init@list 0001                      __size_of_Check_extension 0092  
                      ??_fatfs_entry_sfn_only 0003                 FileString_GetExtension@strSrc 0007  
                            ?__open_directory 00B8                __size_of_fatfs_fat_read_sector 0254  
                                 __CFG_OSC$HS 000000                         __create_file@filename 00F2  
                 __size_of_fatfs_sector_write 0060                 __end_of_fatfs_fat_read_sector 8958  
                                         l113 A288                                           l241 B442  
                                         l226 B44A                                           l423 4400  
                                         l431 561C                                           l610 5926  
                                         l530 4BAE                                           l179 772E  
                                         l515 BC32                                           l196 78F6  
                                         l622 65A2                                           l391 4DF6  
                                         l560 6DAE                                           l712 4EE2  
                                         l704 4EEA                                           l545 6EDE  
                                         l625 4316                                           l562 6DB8  
                                         l722 E0BC                                           l626 431E  
                                         l475 9F74                                           l571 6E50  
                                         l396 44A2                                           l652 CBA8  
                                         l661 CD76                                           l821 4450  
                                         l486 C546                                           l734 DBEC  
                                         l559 6DA4                                           l903 BC9C  
                                         l807 5D9E                                           l648 CF38  
                                         l904 C092                                           l912 A2F2  
                                         l729 DA50                                           l913 A5AA  
                                         l921 4F64                                           l658 CF30  
                                         l850 6AB0                                           l595 CA1A  
                                         l683 73BA                                           l691 419C  
                                         l763 5B48                                           l588 C898  
                                         l668 73BE                           ?_fatfs_write_sector 0020  
                                         l934 475A                                           l790 59D8  
                                         _CKE 007E3E                                           l937 CF50  
                                         l938 D486              fatfs_fat_add_cluster_to_chain@fs 0080  
                                         l986 42DA                                           _CKP 007E34  
          __size_of_fatfs_list_directory_next 03BA                                  fl_remove@res 0185  
                                         _SMP 007E3F                 __size_of_fatfs_lfn_cache_init 005E  
                        _fatfs_get_file_entry 936C                                           __fs 0978  
                                         _res 01A1                                           fsr2 000FD9  
                                         _str 0400                                           prod 000FF3  
                                         tosl 000FFD                                           wreg 000FE8  
                          fl_fwrite@copyCount 0117                  __size_of_fatfs_sector_reader 0392  
                   __size_of_fatfs_cache_init 0002                        __open_directory@levels 00CA  
                                __CFG_LVP$OFF 000000         fatfs_set_fs_info_next_free_cluster@fs 0046  
                                ?_media_write 0009                                  __CFG_WDT$OFF 000000  
                                        l1002 82AA                                          l1101 5598  
                                        l1013 936A                                          l1103 55F6  
                                        l1121 4B38                                          l1210 8956  
                                        l1220 45EC                                          l2111 3F1E  
                                        l1231 ACD2                                          l1055 681E  
                                        l1047 5A90                                 fl_opendir@dir 00F4  
                                        l2113 3F18                                          l1074 7C9E  
                                        l1058 678C                                          l1091 6074  
                                        l1228 ACE2                                          l1317 6D3E  
                                        l1086 7C9A                                          l1238 7568  
                                        l2151 402C                                          l2144 3E84  
                                        l1264 5746                                          l1329 8AD0  
                                        l2161 4046                                          l2209 8C7C  
                                        l1258 90CA                                          l1274 5DCA  
                                        l1370 AD94                                          l2138 3E48  
                                        l2155 4038                                          l1613 6670  
                                        l1189 8702                                          l2270 497C  
                                        l2182 4282                                          l2158 4042  
                                        l2263 495A                                          l1367 B090  
                                        l2239 8E2E                                          l2272 499E  
                                        l2280 47BA                                          l1720 7E96  
                                        l2185 4294                                          l2178 4260  
                                        l2098 3EA6                                          l2267 496E  
                                        l2268 4970                                          l2269 497A  
                                        l2293 3FDC                                          l1661 5432  
                                        l1805 5696                                          l2295 3FE4  
                                        l2296 3FEC                                          l1584 5C04  
                                        l1826 5558                                          l1596 631E  
                                        l1678 626C                                          l1783 5172  
                                        l1792 41DA                                          l2833 43AA  
                                        l2770 4D6E                                          l1778 5066  
                                        l2843 424E                                          l1787 4FE4  
                                        l2780 492A                                          l1799 46FC  
                                        l2896 4C94                                          l9001 54A8  
                               fl_opendir@res 00F8                                          l9021 4D2E  
                                        l9005 54B2                                          l9031 4D60  
                                        l9023 4D32                                          l9009 54BE  
                                        l9105 A03E                                          l9019 4D22  
                                        l9123 A11A                                          l9213 D3D0  
                                        l9133 A1B4                                          l9117 A096  
                                        l9109 A046                                          l9311 6FDE  
                                        l9055 A782                                          l9313 7006  
                                        l9217 D47E                                          l9331 7072  
                                        l9235 4592                                          l8611 65F2  
                                        l9067 A7E8                                          l9059 A7BC  
                                        l9403 6974                                          l9411 69DE  
                                        l9229 458A                                          l9165 4016  
                                        l9181 CF76                                          l8701 62DA  
                                        l9077 A87E                                          l9501 B7D8  
                                        l9421 6A7E                                          l9413 6A0C  
                                        l8631 665E                                          l9087 A930  
                                        l9343 47A8                                          l9415 6A12  
                                        l9423 6A82                                          l9257 4D02  
                                        l9361 49FC                                          l9177 CF56  
                                        l9265 4A24                                          l8641 66AC  
                                        l8617 6614                                          l8609 65EE  
                                        l9337 4772                                          l9505 B7DE  
                                        l9425 6AAE                                          l9409 69DA  
                                        l9371 5828                                          l8635 6694  
                                        l9611 949A                                          l9269 4A56  
                                        l8645 66CE                                          l8637 6698  
                                        l8725 6352                                          l8717 630C  
                                        l8741 8714                                          l8813 A952  
                                        l8805 7FBE                                          l9541 48EA  
                                        l9375 5850                                          l8903 55E2  
                                        l9295 6F36                                          l9287 6F24  
                                        l9711 3F7C                                          l8647 66D2  
                                        l8639 66A8                                          l8727 6356  
                                        l9623 9508                                          l9607 9470  
                                        l9439 42D4                                          l9463 7542  
                                        l9543 48F6                                          l9385 51C4  
                                        l9369 5800                                          l8913 44B2  
                                        l8905 55F0                                          l8729 635E  
                                        l8753 87AA                                          l8817 A982  
                                        l9625 951E                                          l9529 5E1C  
                                        l9473 B48C                                          l9545 48FA  
                                        l8931 4B32                                          l8851 4052  
                                        l8667 79E4                                          l8675 7AA2  
                                        l8683 7ABC                                          l8691 62B8  
                                        l8755 87BA                                          l8747 8786  
                                        l9635 9552                                          l9803 7BD0  
                                        l9491 B60A                                          l9397 4DD2  
                                        l8917 44DC                                          l8925 4AFC  
                                        l8677 7AB4                                          l8693 62BC  
                                        l8781 88A0                                          l8837 AAEA  
                                        l9653 95DA                                          l9813 7C5C  
                                        l9469 B45C                                          l9549 491C  
                                        l9727 447A                                          l9735 4128  
                                        l8919 44E0                                          l8871 4500  
                                        l8855 4062                                          l8695 62C4  
                                        l8791 893A                                          l8767 8838  
                                        l8759 87DC                                          l9647 958C  
                                        l9591 9394                                          l9751 671C  
                                        l8865 4E44                                          l8881 5560  
                                        l8873 4504                                          l9665 95F6  
                                        l9681 965A                                          l9817 7C64  
                                        l8937 8E60                                          l9497 B7C0  
                                        l9691 4C48                                          l8867 4E60  
                                        l9675 963A                                          l9763 67BE  
                                        l9755 677E                                          l8955 8F9A  
                                        l9851 6D32                                          l9835 6C60  
                                        l9677 964E                                          l9765 67C2  
                                        l9837 6C6C                                          l9933 E2EE  
                                        l9917 E20C                                          l9861 5C34  
                                        l9695 4C78                                          l9687 4C24  
                                        l9599 93F6                                          l9791 7B80  
                                        l9767 67E8                                          l9759 6792  
                                        l8991 548A                                          l8983 5472  
                                        l9847 6D2C                                          STR_1 FFA8  
                                        STR_2 FFCF                                          l9697 4C80  
                                        l8897 55C2                                          l8889 5588  
                                        l9769 67EC                                          l8993 548E  
                                        l8977 5454                                          STR_3 FFE6  
                                        STR_4 FFEC                                          l9795 7B8C  
                                        l9787 7B1C                                          l9867 5CB6  
                                        STR_5 FD77                                          STR_6 FE6B  
                                        l8989 5482                                          l9869 5CBA  
                                        STR_7 FE06                                          STR_8 FDEA  
                                        l9799 7BA6                                          STR_9 FB82  
                                        l9993 E5E4                   fatfs_entry_lfn_exists@entry 0003  
                                        l9995 E610                                          l9999 E616  
                                        _LATE 000F8D                                 fl_remove@file 0187  
                                        u9105 8808                                          u9300 4526  
                                        u9138 8902                                          u9307 451C  
                                        u9139 8914                                          u9245 AAFC  
                                        u9165 7F7E                       _fatfs_mark_file_deleted 7730  
                                        u9270 ACC8                                          u9190 A9A0  
                                        u9255 AB36                                          u9450 8E7E  
                                        u9195 A996                                          u9630 A7E0  
                                        u8815 65B6                                          u9455 8E74  
                                        u8840 664A                                          u9485 8FAC  
                                        u8847 6640                                          u9495 8FE6  
                                        u9665 A8B2                                          u9658 A872  
                                        u9738 A08A                                          u9659 A874  
                                        u8948 7A8A                                          u9748 A108  
                                        u8949 7A9C                                          u8965 6280  
                                        u9678 A91C                                          u9768 A1A2  
                                        u9778 A26E                                          u9779 A280  
                         fatfs_fat_purge@pcur 0036           __size_of_fatfs_list_directory_start 003E  
                           WriteSPI_@data_out 0002                  fatfs_entry_lfn_invalid@entry 0001  
                 fatfs_get_file_entry@sfEntry 00B4                                          _Stat 01F5  
                         __end_of_File_delete 5068                    ??_fatfs_update_file_length 00B8  
                                        _data 01F7                                          _flag 01A9  
                                        _file 0197                           __end_of_File_append 84D8  
         fatfs_sfn_create_entry@shortfilename 0001                                          _main 54C8  
                                        _dptr 01CD                                          _fptr 0199  
                        ??_fatfs_write_sector 002C                                          fsr0h 000FEA  
                                        fsr1h 000FE2                                          indf0 000FEF  
                                        fsr0l 000FE9                                          fsr2h 000FDA  
                                        indf1 000FE7                                          fsr1l 000FE1  
                                        indf2 000FDF                            __open_file@sfEntry 014F  
                                        fsr2l 000FD9                           __end_of_File_format 41DC  
                               __CFG_BOREN$ON 000000                               __end_of_SD_init 5C12  
                        fatfs_cache_init@file 0003                  fatfs_add_file_entry@checksum 010F  
                                        prodh 000FF4                                          prodl 000FF3  
                                        start 0000                           __allocate_file@node 0011  
                       _fatfs_filename_to_lfn 8094                     fatfs_update_file_length@x 00BC  
                               __CFG_IESO$OFF 000000                           __end_of_ConfigUSART 3E78  
          fatfs_lba_of_cluster@Cluster_Number 0003     fatfs_find_free_dir_offset@possible_spaces 00C9  
                             __end_of_File_IO 5734                   __end_of_fatfs_erase_sectors 5CD6  
                    fatfs_entry_is_file@entry 0001                                 __CFG_MCLRE$ON 000000  
                             __end_of_Clr_str 3F60           __size_of_fatfs_create_fsinfo_sector 019E  
                             __end_of_Command 436A                        _fatfs_sfn_create_entry 6AB2  
                fatfs_add_file_entry@filename 00D2                               __end_of_ReadBUF 3E6A  
            fatfs_mark_file_deleted@shortname 00B2                       __open_directory@sfEntry 00D2  
                       __end_of__read_sectors BC34                                 ?_Format_drive 0001  
           fatfs_sector_reader@sector_to_read 0098          fatfs_allocate_free_space@nextcluster 00B8  
                   fatfs_add_free_space@start 0092                  fatfs_add_file_entry@foundEnd 010C  
                    ?_fatfs_lfn_generate_tail 0037                       ??_FileString_TrimLength 0005  
                 fatfs_find_free_dir_offset@i 00C0                   fatfs_find_free_dir_offset@x 00C7  
                                       l10001 E68C                                         l10213 6AE6  
                                       l10061 EB1A                                         l10231 6BA0  
                                       l10063 EB46                                         l10127 7212  
                                       l11025 4032                                         l10137 96C8  
                                       l11017 A5A2                                         l12001 5D7A  
                                       l11105 B192                                         l10307 9A98  
                                       l10331 9B36                                         l10067 EB4C  
                                       l10155 9898                                         l10317 9B06  
                                       l10325 9B20                                         l10253 5F6A  
                                       l10237 5EB4                                         l10077 EC56  
                                       l10149 980C                                         l10157 98A2  
                                       l12005 5D94                                         l11109 B1BC  
                                       l10503 5674                                         l10191 81EE  
                                       l10327 9B2A                                         l10247 5F4C  
                                       l10415 6462                                         l11071 7722  
                                       l11047 75E0                                         l11039 758A  
                                       l11231 9D26                                         l11223 9D02  
                                       l10431 461E                                         l11135 B232  
                                       l12041 5402                                         l12113 5366  
                                       l10505 5688                                         l10521 685A  
                                       l10177 8128                                         l10273 99E2  
                                       l10265 998C                                         l11313 C160  
                                       l11305 C13C                                         l11401 B97C  
                                       l10441 4A74                                         l10433 4626  
                                       l10425 45F8                                         l12025 4448  
                                       l12123 5386                                         l10195 823C  
                                       l10347 9BCA                                         l10355 9C04  
                                       l10603 8B16                                         l10419 646E  
                                       l11243 9DAA                                         l11235 9D72  
                                       l11411 BA4A                                         l11147 B27A  
                                       l10541 691E                                         l10197 82A4  
                                       l10365 9C5E                                         l10621 8BA6  
                                       l10613 8B62                                         l11333 C252  
                                       l11325 C1E4                                         l11317 C1AC  
                                       l11421 BB0A                                         l11405 B9D2  
                                       l12221 4E86                                         l10437 4634  
                                       l11165 B302                                         l12047 5408  
                                       l12071 5082                                         l10543 6924  
                                       l10287 9A6A                                         l10615 8B7A  
                                       l11351 C308                                         l11343 C2B4  
                                       l11415 BA74                                         l11431 BB82  
                                       l12303 DF18                                         l10463 4AAE  
                                       l11159 B2B4                                         l12081 50B0  
                                       l10537 6916                                         l10289 9A72  
                                       l10641 9144                                         l10633 90F4  
                                       l10561 5FCE                                         l11361 C382  
                                       l11353 C32C                                         l11345 C2BA  
                                       l11273 9F5E                                         l11425 BB26  
                                       l12321 E00E                                         l12401 4BC8  
                                       l12225 4EDC                                         l10457 4A9A  
                                       l11185 B34E                                         l11177 B31E  
                                       l11097 B118                                         l11089 B0B2  
                                       l11513 4244                                         l11505 4226  
                                       l13121 5BD2                                         l10379 3E98  
                                       l12059 5424                                         l12091 50DE  
                                       l10483 43F4                                         l10723 57AC  
                                       l10643 9148                                         l10395 63D2  
                                       l10387 637E                                         l10571 602C  
                                       l11371 C3CE                                         l12171 724E  
                                       l12307 DF46                                         l12251 DA58  
                                       l12403 4BE4                                         l10467 4AC8  
                                       l11507 422E                                         l11523 8BCC  
                                       l11611 8E16                                         l13131 5BF6  
                                       l10493 5610                                         l10813 AFFA  
                                       l10653 91B6                                         l10637 912A  
                                       l10565 5FDE                                         l11701 D5CE  
                                       l11381 C496                                         l11445 BC26  
                                       l12181 7296                                         l11621 7750  
                                       l12405 4BEC                                         l12413 4C14  
                                       l11509 4232                                         l11605 8E00  
                                       l11525 8BD0                                         l13117 5BC0  
                                       l13109 5BAE                                         l12079 50A2  
                                       l12431 61B4                                         l10479 43E6  
                                       l10807 AFB0                                         l10727 57C8  
                                       l10671 9256                                         l10655 91BA  
                                       l10903 C7C6                                         l12319 DFF8  
                                       l12255 DA9E                                         l12415 4C1C  
                                       l11471 4F38                                         l12503 41CE  
                                       l11199 B412                                         l11607 8E0A  
                                       l11535 8BFC                                         l11527 8BD4  
                                       l11543 8C50                                         l11519 8BBE  
                                       l13119 5BC2                                         l12089 50D2  
                                       l12441 61E6                                         l10489 5604  
                                       l10681 9282                                         l10649 916E  
                                       l10657 91E0                                         l12329 E098  
                                       l12409 4BF8                                         l11609 8E10  
                                       l13161 56BE                                         l13129 5BE6  
                                       l13049 4B9E                                         l12099 5332  
                                       l12435 61BC                                         l10827 B088  
                                       l10843 45D2                                         l10683 9294  
                                       l10675 9276                                         l10659 91EA  
                                       l11731 D722                                         l11723 D6C4  
                                       l11803 6D8A                                         l12195 735C  
                                       l12291 DE30                                         l12259 DB06  
                                       l11555 8CB8                                         l11539 8C26  
                                       l13163 56C4                                         l13155 56AC  
                                       l12461 6240                                         l12437 61C2  
                                       l10765 ADA0                                         l10589 89A8  
                                       l10837 45A6                                         l11733 D728  
                                       l11709 D63C                                         l10909 C85C  
                                       l11805 6D94                                         l11821 6DD2  
                                       l12189 7308                                         l12269 DBC6  
                                       l11653 78E2                                         l11629 77A6  
                                       l12701 7D52                                         l11485 437A  
                                       l11573 8D0C                                         l12373 596A  
                                       l13165 56CA                                         l13157 56B2  
                                       l13173 56E4                                         l12621 F7A8  
                                       l12391 3F50                                         l12455 6232  
                                       l10783 AE42                                         l10775 ADE4  
                                       l10695 9332                                         l11743 D7A2  
                                       l11719 D69E                                         l10927 C93E  
                                       l10919 C8AC                                         l10855 3FC4  
                                       l11807 6D9A                                         l11823 6E16  
                                       l12199 737E                                         l12287 DD2E  
                                       l12711 7DA6                                         l11487 4382  
                                       l11591 8D50                                         l11559 8CD2  
                                       l13167 56D0                                         l13159 56B8  
                                       l13175 5706                                         l12623 F872  
                                       l12543 ED2C                                         l10793 AEB2  
                                       l10697 9364                                         l11753 D81C  
                                       l11745 D7C6                                         l11737 D754  
                                       l11681 D526                                         l10873 5308  
                                       l10937 CA0E                                         l10929 C978  
                                       l11817 6DCC                                         l11825 6E1C  
                                       l12297 DE96                                         l11657 78EE  
                                       l12721 7DC0                                         l12705 7D72  
                                       l11497 43A0                                         l11489 4386  
                                       l12377 5986                                         l13185 5726  
                                       l13169 56D6                                         l13089 5B5A  
                                       l12617 F66E                                         l12561 ED7A  
                                       l12387 3F40                                         l12491 428E  
                                       l12467 6250                                         l11763 D868  
                                       l11843 6E8E                                         l11923 CAE6  
                                       l12395 4BB4                                         l12723 7DCC  
                                       l12715 7DB4                                         l11595 8D60  
                                       l12379 59AC                                         l13099 5B80  
                                       l12547 ED34                                         l12485 427C  
                                       l11773 D92E                                         l11693 D596  
                                       l10893 C724                                         l11853 6EBC  
                                       l11837 6E6C                                         l12397 4BBC  
                                       l10949 BCA2                                         l11597 8D66  
                                       l11589 8D46                                         l12653 FA40  
                                       l12573 EEB0                                         l12911 5166  
                                       l11927 CC12                                         l11919 CA90  
                                       l12831 84B2                                         l12807 83C0  
                                       l12751 7E48                                         l12727 7DDA  
                                       l10975 C08A                                         l11599 8DAE  
                                       l12647 FA2A                                         l12575 EEC4  
                                       l12559 ED76                                         l12567 ED96  
                                       l11689 D54A                                         l10889 C6CE  
                                       l11857 6ED4                                         l12817 8468  
                                       l12833 84C0                                         l12753 7E6E  
                                       l12737 7E16                                         l12585 EF6C  
                                       l12569 EDC0                                         l10899 C79C  
                                       l11955 CE84                                         l11939 CD10  
                                       l12835 84CC                                         l12755 7E7C  
                                       l12683 7CF0                                         l12667 7CA4  
                                       l10987 A2F8                                         l12931 46B0  
                                       l12579 EF2E                                         l11877 6516  
                                       l11949 CDFE                                         l11965 CF14  
                                       l12829 848C                                         l12757 7E88  
                                       l12685 7CF6                                         l12941 46F0  
                                       l12597 F082                                         l11799 6D80  
                                       l12775 8316                                         l12863 6112  
                                       l12871 6156                                         l12679 7CDA  
                                       l12793 836C                                         l12785 833A  
                                       l12873 6162                                         l12697 7D44  
                                       l11993 5D30                                         l12795 8374  
                                       l12891 505A                                         l11995 5D4E  
                                       l13685 5510                                         l13695 554A  
                                       l13687 551C                                         l12977 495C  
                                       l12969 494E                                         ?_main 0001  
                              fl_opendir@path 00F2                               __end_of___awdiv 54C8  
                                       STR_10 FFFD                                         STR_11 FF87  
                                       STR_12 FFC4                                         STR_20 FEC6  
                                       STR_21 FFFD                                         STR_13 FF98  
                                       STR_14 FF3E                                         STR_22 FF04  
                                       STR_30 FBB3                                         STR_23 FFFB  
                                       STR_15 FE53                                         STR_31 FD17  
                                       STR_16 FE53                                         STR_40 FEF0  
                                       STR_32 FEB0                                         STR_24 FC8B  
                                       STR_33 FDB4                                         STR_25 FF64  
                                       STR_17 FAFE                                         STR_42 FC65  
                                       STR_18 FFFD                                         STR_34 FF51  
                                       STR_50 FE83                                         STR_26 FDB2  
                                       STR_51 FED8                                         STR_43 FFFD  
                                       STR_27 FC3E                                         STR_19 FB4C  
                                       STR_44 FE22                                         STR_60 FFE0  
                                       STR_52 FE3B                                         STR_28 FC65  
                                       STR_45 FFB7                                         STR_29 FFF9  
                                       STR_37 FE22                                         STR_53 FCD4  
                                       STR_61 FA6C                                         STR_46 FEF0  
                                       STR_38 FFB7                                         STR_62 FF2B  
                                       STR_54 FCB0                                         STR_63 FFF7  
                                       STR_55 FFF2                                         STR_47 FC13  
                                       STR_56 FEDB                                         STR_64 FE9A  
                                       STR_48 FDCE                                         STR_57 FF18  
                                       STR_65 FD38                                         STR_49 FCF6  
                                       STR_66 FD96                                         STR_58 FBE3  
                                       STR_67 FFF7                                         STR_59 FD58  
                                       STR_68 FFD9                                         STR_69 FF76  
                                       _CMCON 000FB4                               __end_of___lldiv 4D80  
                          __write_sectors@lba 00B4                                         u10310 B4AA  
                          __write_sectors@buf 00A4                                         u10055 6F9C  
                                       u10080 706C                                         u10090 4792  
                                       u10075 7048                                         u10315 B4A0  
                                       u11140 E7C8                                         u11300 9892  
                                       u11150 E88E                                         u11160 E8CC  
                                       u11048 5C98                                         u10097 4788  
                                       u11321 809E                                         u11145 E7BE  
                                       u11049 5CAA                                         u11410 5EA2  
                                       u11170 E998                                         u10355 B61C  
                                       u11155 E884                                         u11228 EC36  
                                       u11180 E9D6                               ___awdiv@divisor 0003  
                                       u10365 B658                                         u11229 EC48  
                                       u11165 E8C2                                         u10710 670E  
                                       u11335 811C                                         u11175 E98E  
                                       u11248 71F2                               __end_of___llmod 493C  
                                       u11185 E9CC                                         u11249 7204  
                                       u10810 680E                                         u10730 6748  
                                       u10298 7530                                         u10717 6704  
                                       u11365 8208                                         u10910 7BC8  
                                       u10750 677A                                         u10478 485E  
                                       u11278 97CC                                         u10479 4870  
                                       u13215 B9B0                                         u11279 97DE  
                                       u12600 C084                                         u10817 6804  
                                       u10737 673E                                         u10850 7B0E  
                                       u10770 67B4                                         u12338 AF92  
                                       u14050 CADE                                         u11298 987A  
                                       u12339 AFA6                                         u13235 BA24  
                                       u14115 CCEA                                         u11299 988C  
                                       u10940 7BFE                                         u10917 7BBE  
                                       u10757 6770                                         u14125 CD52  
                                       u10870 7B48                                         u10790 67E4  
                                       u11910 5FC8                                         u11638 4686  
                                       u14070 CBD6                                         u13430 8C1E  
                                       u15110 EF26                                         u10935 7BDA  
                                       u12295 AEA2                                         u12455 C702  
                                       u11639 4698                                         _LATA5 007C4D  
                                       u12720 47E0                                         u12368 B066  
                                       u13440 8C48                                         _LATB4 007C54  
                                       u11825 5626                                         u10857 7B04  
                                       u10777 67AA                                         u12369 B07A  
                                       u12730 4812                                         u10970 7C56  
                                       u10890 7B7A                                         u10947 7BF4  
                                       u12475 C776                                         u14075 CBCA  
                                       u12660 A59C                                         u15108 EF0E  
                                       u10877 7B3E                                         u10797 67DA  
                                       u13437 8C14                                         u15109 EF20  
                                       u15038 ECEE                                         u12727 47D6  
                                       u12575 BE46                                         u13447 8C3E  
                                       u15039 ED00                                         u14360 5374  
                                       u12737 4808                                         u10977 7C4C  
                                       u10897 7B70                                         u12585 BE5C  
                                       u15145 F384                                         u15155 F39A  
                                       u11980 8B0E                                         u12828 770E  
                                       u15175 F57E                                         u14640 DC7C  
                                       u13648 78C4                                         u13649 78D8  
                                       u14545 4ED4                         ?_fatfs_get_file_entry 00AC  
                                       u14645 DC70                                         u14590 DACC  
                                       u14655 DCB6                                         u14851 617A  
                                       u14595 DAC0                                         u14685 DE72  
                                       u17357 54F0                                         u17367 5B94  
                             __end_of___lwdiv 43B4         fatfs_free_cluster_chain@start_cluster 0082  
              fatfs_add_file_entry@entryCount 0110                               __end_of___lwmod 4258  
                             ___awdiv@counter 0005                                    _File_write 7CA0  
                                       _RCREG 000FAE                                         _RCSTA 000FAB  
                               _Format_string 5068                                         _SPBRG 000FAF  
                                       _PORTB 000F81                        ??_fatfs_lba_of_cluster 0007  
                                       _TRISE 000F96                                         _SSPEN 007E35  
                                       _TXREG 000FAD                                         _TXSTA 000FAC  
                               __CFG_PWRT$OFF 000000         fatfs_mark_file_deleted@directoryEntry 00BD  
            fatfs_add_file_entry@recordoffset 010A             __end_of_fatfs_list_directory_next B44C  
                 ??_fatfs_allocate_free_space 00A8                               __end_of_fl_feof 4EEC  
                              __CFG_FCMEN$OFF 000000                               __end_of_fl_init 5314  
                       __size_of__create_file 04B4                                         _Write 401E  
               __size_of_fatfs_lfn_create_sfn 02A0                    fatfs_filename_to_lfn@entry 0011  
                             __end_of_dpowers FA64                                         _array 0260  
                                       _count 0195                    fatfs_filename_to_lfn@start 002A  
                                 media_read@i 001B                         fatfs_lfn_cache_init@i 000F  
                                       _str_0 0246                                         _str_1 0300  
                      fatfs_add_file_entry@fs 00CC                                         _putch 3E58  
                   fatfs_split_path@full_path 001D                __size_of_fatfs_fat_set_cluster 029C  
                      ?_fatfs_lfn_cache_entry 0001                 __end_of_fatfs_fat_set_cluster 90CC  
                                       pclath 000FFA                                         tablat 000FF5  
               fatfs_allocate_free_space@size 00A4                    fatfs_list_directory_next@i 0116  
                                       status 000FD8               fatfs_add_file_entry@dirtySector 0104  
                             __end_of_strncmp 4C96                               __end_of_strncpy 4646  
                    FileString_StrCmpNoCase@a 0011                      FileString_StrCmpNoCase@b 0012  
                    FileString_StrCmpNoCase@n 000B    fatfs_fat_add_cluster_to_chain@next_cluster 008E  
       fatfs_find_blank_cluster@start_cluster 0048          __end_offat_list@fat_list_insert_last 44A4  
       __size_offat_list@fat_list_insert_last 0052                  fat_list@fat_list_insert_last 4452  
                              WriteUSART@data 0001                                __write_sectors C548  
                  fatfs_lfn_create_sfn@dotPos 0019                     __read_sectors@nextCluster 0099  
                  __end_of_fatfs_format_fat16 C094                    __end_of_fatfs_format_fat32 A5AC  
                             __initialization 51FE                   ??fat_list@fat_list_pop_head 0009  
                              ??_Format_drive 0071                 __size_of_fatfs_add_file_entry 03AE  
                                __end_of_main 555E                       _fatfs_find_next_cluster A93E  
          __end_of_fatfs_lfn_entries_required 42DC                    _fatfs_lfn_entries_required 429A  
                            __end_of_ReadUART 3E50          fatfs_update_file_length@recordoffset 00BE  
                            __end_of_ReadSPI_ 3EB2               __size_of_fatfs_entry_lfn_exists 0074  
                            __end_of_Read_str 429A                               _fatfs_fat_purge 459A  
                                ReadSPI_@Temp 0001                       _fatfs_total_path_levels 66E2  
                    ?_fatfs_calc_cluster_size 0001                                  __create_file C094  
                                      ??_main 018A             __size_of_fatfs_create_boot_sector 0BA0  
                             Draw_Line@length 0003                                ?_Format_string 0001  
                   ?_fatfs_create_boot_sector 0020                     fatfs_get_substring@levels 0018  
                               __activetblptr 000003                              __end_of_Open_dir 4FE6  
      __end_of_fatfs_fat_add_cluster_to_chain 5E90       __size_of_fatfs_fat_add_cluster_to_chain 00F0  
              _fatfs_fat_add_cluster_to_chain 5DA0                       fat_list@fat_list_remove 57D4  
                  __end_of_fatfs_entry_is_dir 3F84                   __end_of_fatfs_lfn_cache_get 4A6C  
                     _FileString_GetExtension 44A4                 __size_of_fatfs_add_free_space 0158  
                        __end_of_fatfs_format 4F66                            __size_of_File_read 00F8  
                   fatfs_get_substring@output 000B                  fatfs_find_free_dir_offset@fs 00AC  
                             _fatfs_erase_fat 966A                            __size_of_Draw_Line 0072  
                           ??_Check_extension 000D                                   _File_delete 4FE6  
                                      ?_Write 0001                     ??_fatfs_mark_file_deleted 00B4  
                        fatfs_erase_sectors@i 0030                fatfs_add_file_entry@shortEntry 0118  
                                 _File_append 82AC                      __open_directory@sublevel 00D0  
                             __read_sectors@i 00A1                  __size_of_fatfs_fat_writeback 01CC  
                                      _ADCON1 000FC1                                   _File_format 419E  
                            ___llmod@dividend 0001                          __size_of_fl_closedir 0002  
                            ___awdiv@dividend 0001                                        ?_putch 0001  
                         __write_sectors@file 009E                                     ??_SD_init 0009  
           fatfs_find_free_dir_offset@pOffset 00B6                                   _ConfigUSART 3E6A  
           fatfs_find_free_dir_offset@pSector 00B4                            __size_of_ReadUSART 0028  
                                   ??_File_IO 0080                                        _SPBRGH 000FB0  
                                      _TRISA5 007C95                                     ??_Clr_str 0003  
                  ??_fatfs_free_cluster_chain 0080                                        _SSPBUF 000FC9  
                                   ??_Command 0008                        ?_fatfs_filename_to_lfn 000D  
                      __end_of__write_sectors CA1C                                     ??_ReadBUF 0001  
                fat_list@fat_list_remove@node 0003                  fat_list@fat_list_remove@list 0001  
                    __end_of__check_file_open 5696                      __end_of_fl_listdirectory 59DA  
                   _fatfs_allocate_free_space 8958                __size_offat_list@fat_list_init 0024  
          __end_of_fatfs_list_directory_start 421A                    _fatfs_list_directory_start 41DC  
               __end_offat_list@fat_list_init 3FA8                              __end_of_fl_fgetc 4320  
                              __CFG_XINST$OFF 000000                              __end_of_fl_fread CF3A  
                            __end_of_fl_fseek 73C0                              __end_of_fl_fopen 6EE0  
                            __end_of_fl_ftell 40D0                                        _Timer1 018D  
                                      _Timer2 018F              fatfs_lfn_generate_tail@sfn_input 0039  
                      fl_createdirectory@path 00F8                  fatfs_split_path@max_filename 0025  
                          __size_of_OpenUSART 0064                                        _Switch 616E  
               ?fat_list@fat_list_insert_last 000B                       fatfs_fat_set_cluster@fs 0046  
                 fatfs_filename_to_lfn@buffer 000F                                        __files 04F0  
    fatfs_cache_get_next_cluster@pNextCluster 0009                                     ??___awdiv 0005  
                   fatfs_mark_file_deleted@fs 00AC                   fatfs_filename_to_lfn@length 0028  
                                   ??___lldiv 0009                          __size_of_fl_shutdown 0018  
                                      _flag_1 01AA                                     ??___llmod 0009  
                             _fl_attach_media 4B42                   fatfs_filename_to_lfn@sfnChk 0013  
                                   ??___lwdiv 0005                                     ??___lwmod 000C  
                      fatfs_lfn_cache_get@lfn 0001                     __size_of_fatfs_sfn_exists 0108  
                                      _memcpy 475C                                        _memset 4048  
                     media_write@sector_count 0010                                        clear_0 5206  
                                      clear_1 5218            __end_of_fatfs_create_fsinfo_sector 721A  
                                      clear_2 5224                    _fatfs_create_fsinfo_sector 707C  
                                      clear_3 5230                                        clear_4 523C  
                            ___awdiv@quotient 0007                            _fl_createdirectory 4074  
                      ??_fatfs_get_file_entry 00B6                                     ??_fl_feof 0003  
                     fatfs_add_file_entry@dir 00DE                                        _printf 8BB4  
                      fatfs_lfn_cache_entry@i 000F                                     ??_fl_init 000F  
                 __write_sectors@SectorNumber 00C4                                        _strcmp 5314  
                                      _string 01AF                                        _strlen 44F6  
                          Check_extension@s_1 000D                            Check_extension@s_2 0011  
                                 ?_File_write 0001                            Check_extension@xtn 000A  
                                __mediumconst FA48                     fat_list@fat_list_pop_head 40FE  
                         ?_fl_createdirectory 00F8                                        tblptrh 000FF7  
                                      tblptrl 000FF6                                        tblptru 000FF8  
                            __end_of_spi_init 3F02                                  media_write@i 001C  
                            _fatfs_cache_init 3E44                   FileString_TrimLength@length 0007  
                       fatfs_write_sector@lba 003C                   fatfs_list_directory_next@fs 00AC  
                       __end_of_Create_folder 5174                   FileString_TrimLength@strLen 0003  
                       fatfs_get_file_entry@i 0118                       __size_of__allocate_file 004E  
                                   ??_strncmp 0007                        _fatfs_entry_lfn_exists 4C96  
                       fatfs_get_file_entry@x 010D                                     ??_strncpy 0007  
                 FileString_TrimLength@strSrc 0009                          fl_listdirectory@path 014D  
                    fatfs_split_path@filename 0023              __end_of_fatfs_update_file_length 7730  
                        __size_of_media_write 013E                                    __accesstop 0080  
            fatfs_get_file_entry@name_to_find 00B2                       __end_of__initialization 5282  
                             __CFG_PBADEN$OFF 000000                            __size_of_WriteSPI_ 001E  
             fatfs_update_file_length@Cluster 00AE              fatfs_find_blank_cluster@position 008C  
                             ?__write_sectors 009E                    FileString_GetExtension@str 0001  
                    fatfs_split_path@max_path 0021                            __size_of_Write_str 0012  
                         fl_fread@sectorsRead 0100                      ?_FileString_StrCmpNoCase 0007  
                       fatfs_sector_reader@fs 0080                     __size_of_fatfs_split_path 00F4  
                   ??_fatfs_find_next_cluster 004C                             __end_of_File_read 616E  
                        ??_fl_createdirectory 0080                           _fatfs_sector_reader A5AC  
                     __end_of_fatfs_fat_purge 45EE               __end_of_fatfs_mark_file_deleted 78F8  
                           __end_of_Draw_Line 4C22                                    _WriteUSART 3E8A  
                              __pcstackCOMRAM 0001                                  __pidataBANK1 3ECB  
                                __pidataBANK2 487A                                 __end_of_Write 4048  
                   ??_fatfs_total_path_levels 0003              fatfs_filename_to_lfn@nameIndexes 001A  
             fatfs_get_file_entry@dotRequired 0111                                 __end_of_putch 3E60  
      fatfs_fat_add_cluster_to_chain@newEntry 0086                               ??_Format_string 0006  
                     __end_of_fatfs_erase_fat 9968                     ??fat_list@fat_list_remove 0005  
                           __end_of_ReadUSART 3FF4                     ??_FileString_GetExtension 0003  
                    FileString_TrimLength@str 0001        __end_offat_list@fat_list_insert_before 4E72  
     __size_offat_list@fat_list_insert_before 007A                fat_list@fat_list_insert_before 4DF8  
            __size_of_fatfs_entry_lfn_invalid 0052                      fatfs_split_path@strindex 002D  
     fatfs_cache_set_next_cluster@nextCluster 0009                       fatfs_sector_write@count 0029  
                          __size_of_fl_fclose 012A                           __create_directory@i 0178  
                    _fatfs_find_blank_cluster B44C                            __size_of_fl_fflush 00AA  
                          __size_of_fl_format 002E                          ?_fatfs_sector_reader 0080  
                                  __free_file 4132                            __size_of_fl_fwrite 06E2  
                          __size_of_fl_remove 00C0        fatfs_cache_set_next_cluster@clusterIdx 0005  
                                     ??_Write 0002                                 ReadUSART@data 0001  
                           __end_of_OpenUSART 49A0                          __end_of_Format_drive 46FE  
                                  Switch@exit 0016                      fatfs_mark_file_deleted@x 00B8  
                                     ??_putch 0003                        fatfs_add_free_space@fs 0074  
               fatfs_get_sfn_display_name@len 0005                                    __pbssBANK1 018B  
                                  __pbssBANK2 0260                                    __pbssBANK3 0300  
                                  __pbssBANK4 0400           fatfs_mark_file_deleted@recordoffset 00BA  
               fatfs_get_sfn_display_name@out 0001          __end_of_fatfs_cache_set_next_cluster 3E44  
       __size_of_fatfs_cache_set_next_cluster 0002                  _fatfs_cache_set_next_cluster 3E42  
                               __filelib_init 0191                                     ?_ReadUART 0001  
                                   ?_ReadSPI_ 0001                        fatfs_split_path@levels 002B  
        fatfs_free_cluster_chain@last_cluster 0086                   __end_of_fatfs_entry_is_file 3FCC  
                                   ?_Read_str 0002                  __end_of_fatfs_lfn_cache_init 475C  
                       fatfs_sector_write@lba 0022                       ?_fatfs_sfn_create_entry 0001  
                     __end_of_fl_attach_media 4BB0                           __size_of_File_write 01F8  
                        fatfs_split_path@path 001F                                     ?_Open_dir 0001  
                              Read_str@buffer 0002                                  Read_str@data 0005  
             fatfs_list_directory_next@result 0111               fatfs_add_free_space@nextcluster 009A  
              __write_sectors@TotalWriteCount 00B8                                    __open_file 9C6C  
                                     ?_Switch 0001                         fatfs_erase_sectors@fs 0020  
                      media_read@sector_count 000F                   fatfs_total_path_levels@path 0001  
 fatfs_set_fs_info_next_free_cluster@newValue 0048       fatfs_set_fs_info_next_free_cluster@pbuf 0052  
                  __end_of_fatfs_sector_write 487A                        __create_directory@file 017C  
                            fl_opendir@levels 00F6                 __size_of_fatfs_entry_lfn_text 002A  
                      __create_directory@path 00F2               __create_directory@shortFilename 014D  
                               putsUSART@data 0002                     __create_directory@sfEntry 0158  
                                     ?_memcpy 0001                                       ?_memset 0001  
                       __size_of_fatfs_format 007A                                    _fl_fgetpos 4166  
                                  _fatfs_init EC5E                                    _fatfs_itoa 5E90  
                   __create_directory@tailNum 017A                                       ?_printf 000D  
              ??fat_list@fat_list_insert_last 000F              fatfs_add_file_entry@startCluster 00D6  
              __size_of_FileString_TrimLength 006C                                       ?_strcmp 0001  
                                     ?_strlen 0001                             __end_of_WriteSPI_ 3F20  
                ??_fatfs_lfn_entries_required 000B                 __end_of_FileString_TrimLength 4B42  
                        __write_sectors@count 00A7                    __create_file@shortFilename 014D  
                                  _fl_readdir 4402                 __size_of_fatfs_entry_sfn_only 0064  
                           __end_of_Write_str 3E8A                                    _fl_opendir 5CD6  
                       ??_fatfs_sector_reader 008C               __end_of_fatfs_find_next_cluster ACE4  
                       _fatfs_fat_read_sector 8704                  __size_of_fatfs_compare_names 019C  
                __size_of_fatfs_get_substring 01DC                          media_read@Start_Addr 0017  
                   fatfs_write_sector@lba_440 0038            fat_list@fat_list_insert_after@node 0003  
          fat_list@fat_list_insert_after@list 0001                       ??_fatfs_lfn_cache_entry 0005  
                                   ?_fl_fgetc 00F6                            __read_sectors@file 0080  
                                   ?_fl_fread 00DE                                     ?_fl_fseek 0017  
                             fatfs_fat_init@i 0013                      __size_of__open_directory 0148  
             __end_of_fatfs_total_path_levels 6820                                     ?_fl_fopen 00FC  
                          __size_of_putsUSART 0060                                     ?_fl_ftell 0007  
                                     _SSPCON1 000FC6                                  Write_str@str 0006  
            __size_of_fatfs_lfn_generate_tail 00B8                                       _SSPSTAT 000FC7  
                     __size_of_fatfs_fat_init 022C                     fatfs_write_sector@cluster 0022  
                       fatfs_fat_writeback@fs 0020                                       _SD_init 5B52  
                 fatfs_allocate_free_space@fs 009E               __end_of_FileString_StrCmpNoCase 55F8  
                                  ??_ReadUART 0002               __end_offat_list@fat_list_remove 587E  
                                  ??_ReadSPI_ 0001              __end_of_fatfs_free_cluster_chain 57D4  
              __end_of_fatfs_sfn_create_entry 6C04                                       _File_IO 5696  
                                  _media_read 626E                                       _Clr_str 3F3E  
               ?_fatfs_cache_set_next_cluster 0001                                       _Command 4320  
                                  ??_Read_str 0004                        __write_sectors@Cluster 00D0  
                 __size_of_fatfs_write_sector 0314                                       _ReadBUF 3E60  
    fatfs_find_next_cluster@fat_sector_offset 0072                             __end_of_fl_fclose 65A4  
          fatfs_update_file_length@fileLength 00B4                             __end_of_fl_fflush 5928  
                                  ??_Open_dir 0080                                       __Hparam 0000  
                                _fatfs_format 4EEC                             __end_of_fl_format 40FE  
                __end_of_fatfs_lfn_create_sfn 936C                                       __Lparam 0000  
                           __end_of_fl_fwrite E0BE                              ?_fatfs_fat_purge 0034  
                           __end_of_fl_remove 5B52                                   ?_WriteUSART 0001  
                         _fatfs_fat_writeback 78F8                                     ?_spi_init 0001  
                             __size_of_Switch 0100                         fl_fwrite@bytesWritten 0113  
                                     ___awdiv 5434                                       ___lldiv 4D0A  
                 ?_fatfs_lfn_entries_required 0009                                       ___llmod 48DA  
                                     ___lwdiv 436A                     fatfs_fat_set_cluster@pbuf 0060  
                                     ___lwmod 421A                 fatfs_filename_to_lfn@filename 000D  
                ??_fatfs_list_directory_start 0009                               _Check_extension 53A2  
      fatfs_create_boot_sector@total_clusters 0036                              _fatfs_sfn_exists 6372  
                             fatfs_init@FATSz 0045                                       Switch@c 001B  
                             __CFG_STVREN$OFF 000000              fatfs_lfn_entries_required@length 000B  
                                     __pcinit 51FE                               __size_of_memcpy 005E  
           __size_of_fatfs_update_file_length 01C6                               __size_of_memset 002C  
          __size_of_fatfs_allocate_free_space 025C              fatfs_format_fat32@volume_sectors 003E  
            fatfs_format_fat16@volume_sectors 003E                  __size_of_fatfs_erase_sectors 00C4  
                            ?_fatfs_erase_fat 0020                                       __ramtop 1000  
                   ?_fatfs_update_file_length 00AC                         fatfs_lfn_create_sfn@i 001B  
                   fatfs_sfn_exists@shortname 00B2                                       _fl_feof 4E72  
                                     __ptext0 54C8                                       __ptext1 3EE6  
                                     __ptext2 3EB2                                       __ptext3 4B42  
                                     __ptext4 EC5E                                       __ptext5 5B52  
                                     __ptext6 5696                                       __ptext7 4F66  
                                     __ptext8 5928                                       __ptext9 8BB4  
                                     _fl_init 5288                               __size_of_printf 027C  
              fatfs_sfn_exists@directoryEntry 00BB                               __size_of_strcmp 008E  
                             __size_of_strlen 0052                             __end_of_hexpowers FA6C  
                   fatfs_fat_read_sector@last 0042                     fatfs_fat_read_sector@pcur 0044  
                                     _dpowers FA5A              fatfs_lfn_cache_entry@entryBuffer 0003  
                          _fatfs_format_fat32 A28A                            _fatfs_format_fat16 BC34  
              fatfs_find_free_dir_offset@item 00CB                  ??_fatfs_create_fsinfo_sector 0026  
                 fatfs_get_sfn_display_name@a 0007                                   ?__free_file 000F  
                __end_of_fatfs_add_file_entry B092            fat_list@fat_list_insert_first@node 0009  
          fat_list@fat_list_insert_first@list 0007                 __size_of_fatfs_lba_of_cluster 01FC  
                                ?_File_delete 0001             fatfs_get_file_entry@long_filename 010F  
                  ?_fatfs_list_directory_next 00AC                                  ?_File_append 0001  
                                  ??_fl_fgetc 0080                       fatfs_lfn_cache_init@lfn 0009  
                        ?_fatfs_fat_writeback 0020                                    ??_fl_fread 00E6  
            fatfs_get_file_entry@recordoffset 0113                      fatfs_add_file_entry@item 0113  
                                  ??_fl_fseek 001F                                    ??_fl_fopen 017C  
                                  ??_fl_ftell 000B                      fatfs_add_file_entry@size 00DA  
                                ?_File_format 006B                                __allocate_file 43B4  
             fatfs_get_substring@expectedchar 001A                                       _strncmp 4C22  
                         ?_fatfs_format_fat32 003C                           ?_fatfs_format_fat16 003C  
                                     _strncpy 45EE                       ??_fatfs_filename_to_lfn 0014  
                        end_of_initialization 5282                ??_fatfs_cache_get_next_cluster 000B  
                      __size_of__read_sectors 0426              __size_of_fatfs_calc_cluster_size 014A  
                                ?_ConfigUSART 0007                    fatfs_sfn_create_entry@size 0003  
                                     memcpy@d 000B                      __read_sectors@ClusterIdx 00A9  
                                     memcpy@n 0006                                       memcpy@s 0008  
    fatfs_find_free_dir_offset@start_recorded 00BE                                       memset@c 0003  
                                     memset@n 0005                                       memset@p 0007  
                          _fatfs_entry_is_dir 3F60            __size_offat_list@fat_list_pop_head 0034  
                         ConfigUSART@config_1 0008                           ConfigUSART@config_2 0007  
                       _fatfs_fat_set_cluster 8E30                  fatfs_create_boot_sector@name 002A  
                __end_of_fatfs_add_free_space 6D5C                       fatfs_fat_read_sector@fs 0034  
                            ?_fl_attach_media 0055                               ___lldiv@divisor 0005  
                            _fatfs_split_path 5F82                             ?__check_file_open 0025  
                           ?_fl_listdirectory 014D                      ??_fatfs_get_root_cluster 0005  
                             ___lldiv@counter 000D              fatfs_add_free_space@startCluster 0076  
                 ?_fatfs_list_directory_start 0001        fatfs_list_directory_next@long_filename 010D  
                    __end_of_fatfs_cache_init 3E46                              media_read@buffer 000D  
                         ?_fatfs_entry_is_dir 0001               fatfs_list_directory_start@dirls 0003  
                                 ?__open_file 00F2                                     _RCSTAbits 000FAB  
                                     printf@c 0020                            ??__check_file_open 0027  
                                     printf@f 000D                          __read_sectors@Sector 009D  
                          ??_fl_listdirectory 0080                                       postdec0 000FED  
                                     postdec1 000FE5                                       postdec2 000FDD  
                                  ??_spi_init 0001                                       postinc0 000FEE  
                                     postinc1 000FE6                                       postinc2 000FDE  
                fatfs_find_blank_cluster@pbuf 0090                  fatfs_list_directory_next@lfn 0117  
                           __end_of_putsUSART 481A                                    fl_feof@res 000B  
                            media_read@sector 0009                          ??_fatfs_format_fat32 0044  
                        ??_fatfs_format_fat16 0044         fatfs_allocate_free_space@clusterCount 00B4  
                                  fl_fclose@f 00DE                                       strlen@s 0001  
                        __read_sectors@buffer 0086                                   ?_fl_fgetpos 0001  
                                  fl_fflush@f 00D4                                   ?_fatfs_init 001F  
                                 ?_fatfs_itoa 000E   __end_of_fatfs_set_fs_info_next_free_cluster 756A  
__size_of_fatfs_set_fs_info_next_free_cluster 01AA         ??_fatfs_set_fs_info_next_free_cluster 004C  
        ?_fatfs_set_fs_info_next_free_cluster 0046           _fatfs_set_fs_info_next_free_cluster 73C0  
                 ?_fatfs_create_fsinfo_sector 0020                       _fatfs_entry_lfn_invalid 4548  
                      fatfs_get_file_entry@fs 00AC                          __read_sectors@offset 0082  
                                 ?_fl_readdir 00BA                                  ??_File_write 0189  
           __end_of_fatfs_allocate_free_space 8BB4                        ?_fatfs_fat_read_sector 0034  
                      fatfs_lba_of_cluster@fs 0001                  fatfs_list_directory_start@fs 0001  
                       __size_of_Format_drive 005C                          _fatfs_lfn_cache_init 46FE  
            fatfs_cache_get_next_cluster@file 0003                                   ?_fl_opendir 00F2  
                               ??_fl_closedir 0003                  fatfs_sfn_exists@recordoffset 00B8  
        fatfs_free_cluster_chain@next_cluster 008A                             media_write@buffer 000D  
                     ?_fatfs_entry_lfn_exists 0001                        __end_of__allocate_file 4402  
                                   _TRISBbits 000F93                                     _TRISCbits 000F94  
            fatfs_cache_set_next_cluster@file 0003                                    fl_fwrite@f 00E5  
                     fl_format@volume_sectors 0065                          ??_fatfs_entry_is_dir 0003  
                       ??_fatfs_fat_writeback 0024                             media_write@sector 0009  
                          Format_string@buf_1 0001                            Format_string@buf_2 0003  
             fatfs_calc_cluster_size@is_fat32 0005                        fatfs_sector_read@count 0027  
                         __size_of_WriteUSART 0014                             File_format@volume 006B  
         __size_of_fatfs_find_free_dir_offset 0304                   fatfs_init@count_of_clusters 004D  
                            WriteSPI_@TempVar 0001                              ??__write_sectors 00AB  
                        __open_directory@path 00B8                             fatfs_fat_purge@fs 0034  
                __size_of_fatfs_lfn_cache_get 0068                       fatfs_fat_writeback@pcur 0022  
                        __create_file@sfEntry 0158                            fatfs_cache_init@fs 0001  
                  fatfs_add_file_entry@pSname 0100                                   ?_media_read 0009  
                        __create_file@tailNum 0178                               __free_file@file 000F  
                      fatfs_filename_to_lfn@i 002C                        fatfs_sector_reader@lba 00A4  
                     fatfs_entry_is_dir@entry 0001                              __write_sectors@i 00C8  
                           ??__open_directory 00BC                                     _TXSTAbits 000FAC  
                fatfs_lfn_create_sfn@filename 000B             __end_offat_list@fat_list_pop_head 4132  
                 fatfs_compare_names@file1Len 001F                   fatfs_compare_names@file2Len 001B  
                  fatfs_init@reserved_sectors 0051                       __end_of_Check_extension 5434  
                             __free_file_list 01D6                                 ??_fl_shutdown 0038  
           fatfs_fat_set_cluster@next_cluster 004C                            __end_of_File_write 7E98  
        fatfs_find_blank_cluster@free_cluster 004C                           __size_of__free_file 0034  
               fatfs_list_directory_next@item 0115                         fat_list@fat_list_init 3F84  
                              Command@CRCbits 0007                    ??_fatfs_find_blank_cluster 004E  
                                _Format_drive 46A2                                     Read_str@i 0004  
                    _fatfs_create_boot_sector E0BE                                 __read_sectors B80E  
                                   _File_read 6076                                __end_of_Switch 626E  
                                   _Draw_Line 4BB0             __size_of_fatfs_free_cluster_chain 00A0  
                   ?_fatfs_free_cluster_chain 0080                                __end_of_memcpy 47BA  
                              __end_of_memset 4074                         fatfs_add_file_entry@i 010E  
                       fatfs_add_file_entry@x 0106              __size_of_FileString_StrCmpNoCase 009A  
                       ?_fatfs_lfn_cache_init 0009                      ?_fatfs_mark_file_deleted 00AC  
              __end_of_fatfs_entry_lfn_exists 4D0A                                __end_of_printf 8E30  
               __size_of_fatfs_get_file_entry 02FE                                __end_of_strcmp 53A2  
          fatfs_sector_reader@cluster_to_read 00A0                                __end_of_strlen 4548  
                         start_initialization 51FE                                     _ReadUSART 3FCC  
                             ?__allocate_file 000F                          _fatfs_lfn_create_sfn 90CC  
                     _fatfs_lfn_generate_tail 59DA                                 ??_media_write 0014  
                              _fatfs_fat_init 84D8                           __size_of__open_file 030A  
                       fl_fwrite@sectorsWrote 0103            fatfs_sfn_create_entry@startCluster 0007  
                         __end_of_fl_closedir 3E48                        fatfs_init@data_sectors 0041  
                      ?_fatfs_fat_set_cluster 0046                                     _OpenUSART 493C  
                         __size_of_fl_fgetpos 0038                      fatfs_sector_write@target 0026  
                         __size_of_fatfs_init 0DEA                           __size_of_fatfs_itoa 00F2  
                             ___llmod@divisor 0005                               ___llmod@counter 0009  
                                 Switch@F4804 01E8                             __size_of_ReadUART 0008  
                           __size_of_ReadSPI_ 0014                           __size_of_fl_readdir 0050  
         __size_of_fatfs_get_sfn_display_name 006A                           _fatfs_compare_names 6EE0  
                         _fatfs_get_substring 7AC4                             __size_of_Read_str 0042  
          fatfs_get_file_entry@directoryEntry 0116                           __size_of_fl_opendir 00CA  
             __size_of_fatfs_get_root_cluster 001E             fatfs_add_file_entry@shortfilename 00D4  
                 __size_of_fl_createdirectory 002E                         fl_createdirectory@res 00FA  
                       fatfs_init@num_of_fats 0054                          _fatfs_add_file_entry ACE4  
                                    ??_Switch 0016                             __size_of_Open_dir 0080  
                              ?__read_sectors 0080                     ??_fatfs_entry_lfn_invalid 0003  
        fatfs_find_free_dir_offset@dirCluster 00AE                        __size_of_Create_folder 0088  
      fatfs_find_next_cluster@current_cluster 0048                                    ?_File_read 0001  
                                 __pdataBANK1 01DE                                   __pdataBANK2 0200  
                            __CFG_LPT1OSC$OFF 000000                fat_list@fat_list_pop_head@node 0009  
              fat_list@fat_list_pop_head@list 0007                                      ??_memcpy 0008  
                                    ??_memset 0007                    fatfs_create_boot_sector@fs 0020  
                                  ?_Draw_Line 0003                           __end_of_fl_shutdown 3ECA  
                  __write_sectors@nextCluster 00C0                    fatfs_find_blank_cluster@fs 0046  
                                    ??_printf 0015                          fatfs_write_sector@fs 0020  
                                    ??_strcmp 0005                                      ??_strlen 0003  
                       __end_of_Format_string 50EC                           __size_of_media_read 0104  
                             File_format@name 006F                       fatfs_compare_names@ext1 001D  
                     fatfs_compare_names@ext2 0019                                   __pbssBIGRAM 04F0  
                        fatfs_sector_read@lba 0021                       fatfs_compare_names@strA 0013  
                     fatfs_compare_names@strB 0015                          ?_fatfs_compare_names 0013  
                        ?_fatfs_get_substring 0007                          _fatfs_add_free_space 6C04  
                                  ?_ReadUSART 0001                                __filelib_valid 0193  
                        fatfs_sector_reader@i 009C                        __end_of_fatfs_fat_init 8704  
                               __pcstackBANK0 0080                                 __pcstackBANK1 0100  
                       ?_fatfs_lfn_create_sfn 0009                                     _WriteSPI_ 3F02  
                         __end_of__stringdata FFFF                  fatfs_fat_set_cluster@cluster 0048  
                          _fatfs_sector_write 481A                             fatfs_erase_fat@fs 0020  
                     _fatfs_calc_cluster_size 6968                                     _Write_str 3E78  
      fatfs_fat_set_cluster@fat_sector_offset 0058                  __end_of_fatfs_entry_lfn_text 401E  
                fatfs_create_fsinfo_sector@fs 0020                         __check_file_open@file 0025  
              __size_of_fatfs_lfn_cache_entry 054E                     fatfs_fat_writeback@offset 0030  
                     fatfs_get_substring@path 0007                         __check_file_open@node 0029  
               __end_of_fatfs_lfn_cache_entry D488                          __size_of_File_delete 0082  
                                    ?_SD_init 0001                          __size_of_File_append 022C  
                    __end_of_fatfs_sfn_exists 647A                             __size_of_fl_fgetc 0044  
                           __size_of_fl_fread 051E                             __size_of_fl_fseek 01A6  
                           __size_of_fl_fopen 0184                             __size_of_fl_ftell 002E  
                        __size_of_File_format 003E                           _fatfs_erase_sectors 5C12  
                                  ?_OpenUSART 0001                                      ?_File_IO 0001  
                    ?_fatfs_find_next_cluster 0046                           ?_fatfs_sector_write 0020  
                                    ?_Clr_str 0001                                      ?_Command 0003  
                __end_of_fatfs_entry_sfn_only 4A04            __end_of_fatfs_find_free_dir_offset 9C6C  
                  _fatfs_find_free_dir_offset 9968                         fatfs_add_free_space@i 0096  
                        __size_of_ConfigUSART 000E       fatfs_list_directory_next@directoryEntry 014B  
                                    ?_ReadBUF 0001                           __end_of_media_write 66E2  
                                   Write@data 0002                      ?_fatfs_total_path_levels 0001  
                        fatfs_sector_write@fs 0020                fatfs_list_directory_next@dirls 00AE  
                            ?_Check_extension 000A                fatfs_list_directory_next@entry 00B0  
                            ___lwdiv@dividend 0001                    _fatfs_filename_to_lfn$2422 0026  
                           __CFG_CCP2MX$PORTC 000000                        ?fat_list@fat_list_init 0001  
                                ??_WriteUSART 0001                         ?_fatfs_add_file_entry 00CC  
                     fatfs_lfn_create_sfn@len 0015                       fatfs_lfn_create_sfn@ext 0012  
                    ?fat_list@fat_list_remove 0001                       fatfs_lfn_create_sfn@pos 0017  
                               __pmediumconst FA48                  __size_of_fatfs_entry_is_file 0024  
                    ?_FileString_GetExtension 0001                                      ?___awdiv 0001  
                                   __ptext100 65A4                                     __ptext101 4320  
                                   __ptext110 49A0                                     __ptext102 3F02  
                                   __ptext111 3FF4                                     __ptext103 3E9E  
                                   _fl_fclose 647A                                     __ptext120 555E  
                                   __ptext112 4548                                     __ptext104 3E60  
                                   __ptext121 44A4                                     __ptext113 4C96  
                                   __ptext105 4D0A                                     __ptext130 5314  
                                   __ptext122 43B4                                     __ptext114 3F60  
                                   __ptext106 46FE                                     __ptext131 5068  
                                   __ptext123 40FE                                     __ptext115 4132  
                                   __ptext107 4048                                     __ptext140 3E6A  
                                   __ptext132 53A2                                     __ptext124 57D4  
                                   __ptext116 55F8                                     __ptext108 4A04  
                                   __ptext141 493C                                     __ptext133 4C22  
                                   __ptext125 4452                                     __ptext117 6EE0  
                                   __ptext109 CF3A                                     __ptext142 0000  
                                   __ptext134 3E78                                     __ptext126 4D80  
                                   __ptext118 44F6                                     __ptext135 47BA  
                                   __ptext127 4DF8                                     __ptext119 4AD6  
                                   __ptext136 4258                                     __ptext128 5174  
                                   __ptext137 3E8A                                     __ptext129 616E  
                                   __ptext138 3FCC                                     __ptext139 3F3E  
                                   _fl_fflush 587E                                      ?___lldiv 0001  
                                    ?___llmod 0001                                      ?___lwdiv 0001  
                                    ?___lwmod 0008                                     _fl_format 40D0  
                      fatfs_erase_sectors@lba 0022                                     _fl_fwrite D9DC  
                 __end_of_fatfs_sector_reader A93E                                     _fl_remove 5A92  
                    fatfs_calc_cluster_size@i 000D                          ?_fatfs_erase_sectors 0020  
                           __size_of_spi_init 001C                                 ?__create_file 00F2  
               fatfs_lfn_cache_entry@LFNIndex 0010                        ??_fatfs_lfn_cache_init 000D  
                        ??_fatfs_sector_write 002D                             fl_opendir@cluster 00FA  
                                    ?_fl_feof 0001          fatfs_find_free_dir_offset@entryCount 00B2  
            fatfs_sector_reader@start_cluster 0082                             __read_sectors@lba 0095  
                              fl_fgetpos@file 0005                                      ?_fl_init 0001  
        fatfs_find_free_dir_offset@newCluster 00C1                         ??_fatfs_compare_names 0017  
            fatfs_sector_reader@cluster_chain 00A8                     __write_sectors@ClusterIdx 00CC  
                       ??_fatfs_get_substring 000F                         ?_fatfs_add_free_space 0074  
                   ??_fatfs_lfn_generate_tail 003F                     fatfs_entry_sfn_only@entry 0001  
                    fatfs_get_root_cluster@fs 0001                      __end_of_fatfs_split_path 6076  
                                ??__free_file 0011                        _fatfs_get_root_cluster 3F20  
                       _FileString_TrimLength 4AD6                                   _fl_closedir 3E46  
                             ?_fatfs_fat_init 0009                                    ?_WriteSPI_ 0001  
             ??fat_list@fat_list_insert_after 0007                                     _hexpowers FA64  
             ??fat_list@fat_list_insert_first 000B                                __size_of_Write 002A  
                 ??_fatfs_list_directory_next 00B2                              ___lwdiv@quotient 0005  
             __end_of_fatfs_entry_lfn_invalid 459A            fatfs_get_file_entry@short_filename 0100  
                                  ?_Write_str 0006                                      SD_init@i 000A  
                                    SD_init@u 000B                                 _Create_folder 50EC  
                                    ?_strncmp 0001                                      ?_strncpy 0001  
                          __end_of_WriteUSART 3E9E                    fatfs_update_file_length@fs 00AC  
                              __size_of_putch 0008                                fatfs_itoa@F407 FA49  
         fat_list@fat_list_insert_before@node 0003           fat_list@fat_list_insert_before@list 0001  
                       __write_sectors@offset 00A0                    __end_of_fatfs_write_sector A28A  
               fatfs_add_file_entry@dirOffset 0112                      fatfs_erase_sectors@count 0026  
               fatfs_add_file_entry@dirSector 0114                     fatfs_entry_lfn_exists@lfn 0001  
              __size_of_fatfs_filename_to_lfn 0218                                fatfs_format@fs 0059  
                              fl_closedir@dir 0001                 __end_of_fatfs_filename_to_lfn 82AC  
                                    _LATBbits 000F8A                                      _LATCbits 000F8B  
                              fl_fread@buffer 00DE                             fl_remove@filename 0183  
                 __open_directory@pathCluster 00BA                                fl_fread@length 00E2  
                                 strncpy@from 0003                                fl_fread@offset 0104  
                                    _PIE1bits 000F9D                                   strncpy@size 0005  
                              fl_fread@sector 0108                  __end_of_fatfs_lba_of_cluster 8094  
                             ??__read_sectors 008C                                      _PIR1bits 000F9E  
                                 _fl_shutdown 3EB2                                  ??__open_file 00F4  
            __end_of_fatfs_find_blank_cluster B80E                                 Clr_str@buffer 0001  
                            __CFG_WDTPS$32768 000000                                     fl_fgetc@f 00F6  
                           ?_fatfs_cache_init 0001                            __end_of__free_file 4166  
                                  ?_fl_fclose 00DE                                     fl_fread@f 00E4  
                                  ?_fl_fflush 00D4                           __read_sectors@count 0088  
          __end_of_fatfs_get_sfn_display_name 4AD6                    _fatfs_get_sfn_display_name 4A6C  
                                   fl_fseek@f 0017                                   ??_File_read 0080  
                            fatfs_fat_init@fs 0009                          fatfs_sfn_exists@item 00BA  
                                  ?_fl_format 0065                                     fl_fopen@i 017E  
                                   fl_ftell@f 0007                       fatfs_init@total_sectors 0049  
                              ??__create_file 00F4                       ??_fatfs_fat_read_sector 003A  
                                  ?_fl_fwrite 00DE                     fatfs_filename_to_lfn@F379 01DE  
                         _fatfs_lfn_cache_get 4A04                         ??_fatfs_erase_sectors 0028  
                          ??_fatfs_cache_init 0005                                   ??_Draw_Line 0004  
                                  ?_fl_remove 0183                                  ??_fl_fgetpos 0005  
       fatfs_list_directory_next@recordoffset 0113                                  ??_fatfs_init 0021  
                                ??_fatfs_itoa 0014                       _FileString_StrCmpNoCase 555E  
                                   _putsUSART 47BA                                   __stringdata FA6C  
                    __size_of_fatfs_fat_purge 0054                                  ??_fl_readdir 0080  
                                    ReadBUF@u 0001                 fatfs_lfn_cache_init@wipeTable 000B  
                             __open_file@file 014D                               __open_file@path 00F2  
         fatfs_total_path_levels@expectedchar 0007                       fatfs_erase_fat@is_fat32 0022  
                                  printf@_val 001C                     __size_of__check_file_open 009E  
                                  printf@flag 001B   fatfs_fat_add_cluster_to_chain@start_cluster 0082  
                                    _CardType 018B                     __size_of_fl_listdirectory 00B2  
                                ??_fl_opendir 0080                                    printf@prec 0018  
                      ??_fatfs_lfn_create_sfn 000D                fatfs_calc_cluster_size@sectors 0001  
                   ??_fatfs_calc_cluster_size 0007                                   ??_ReadUSART 0001  
     fatfs_list_directory_next@short_filename 0100                               __open_file_list 01DA  
                             __open_directory 6820          fatfs_create_fsinfo_sector@sector_lba 0022  
                  fatfs_compare_names@ext1Pos 0023                    fatfs_compare_names@ext2Pos 0021  
                    __size_of_fatfs_erase_fat 02FE                     fatfs_sector_reader@offset 0086  
                      __end_offatfs_itoa@F407 FA5A                                ?_Create_folder 0001  
                   fatfs_entry_lfn_text@entry 0001                     fatfs_sector_reader@target 008A  
                              fl_fseek@offset 0019                             fl_fread@copyCount 010C  
                                 _media_write 65A4                                     copy_data0 5256  
                                   copy_data1 5276                    fatfs_format@volume_sectors 005B  
                              fl_fseek@origin 001D       fatfs_create_boot_sector@boot_sector_lba 0022  
                          __end_of__open_file 9F76                          ?_fatfs_lfn_cache_get 0001  
                                    _ReadUART 3E48                                      _ReadSPI_ 3E9E  
                            __size_of_SD_init 00C0                                   ??_OpenUSART 0003  
                                ??_media_read 0013                                      _Read_str 4258  
                             OpenUSART@config 0006                                 Draw_Line@line 0007  
                            __size_of_File_IO 009E                    ??_fatfs_create_boot_sector 002E  
                          __end_of_fl_fgetpos 419E        fatfs_list_directory_start@StartCluster 0005  
                          __end_of_fatfs_init FA48                            __end_of_fatfs_itoa 5F82  
             __end_of_fatfs_lfn_generate_tail 5A92                              __size_of_Clr_str 0022  
                            __size_of_Command 004A                             fl_fread@bytesRead 0110  
             __end_of_FileString_GetExtension 44F6                    fatfs_free_cluster_chain@fs 0080  
                            __size_of_ReadBUF 000A                        ??_fatfs_add_file_entry 00E0  
                                    __Hrparam 0000                                      _Open_dir 4F66  
                          __end_of_fl_readdir 4452                                      __Lrparam 0000  
                   _fatfs_list_directory_next B092               fatfs_lfn_generate_tail@tail_str 0041  
                          __end_of_fl_opendir 5DA0                     fatfs_init@valid_partition 0053  
                    _fatfs_update_file_length 756A                   fatfs_get_substring@levelreq 0009  
                            Check_extension@j 0015               fatfs_find_next_cluster@position 0076  
                 __size_of_fatfs_format_fat16 0460                   __size_of_fatfs_format_fat32 0322  
                            __size_of___awdiv 0094                          _fatfs_entry_lfn_text 3FF4  
        __end_of_fatfs_cache_get_next_cluster 3E58         __size_of_fatfs_cache_get_next_cluster 0008  
                _fatfs_cache_get_next_cluster 3E50                              __size_of___lldiv 0076  
                         fatfs_sector_read@fs 001F                              __size_of___llmod 0062  
                           __create_file@file 017A                      __size_of_fl_attach_media 006E  
                            __size_of___lwdiv 004A                              __size_of___lwmod 003E  
                           _fatfs_sector_read 4646                              ??__allocate_file 0011  
                               fl_fclose@file 00E0                              fatfs_erase_fat@i 0031  
                                  ?_putsUSART 0002                   __end_of_fatfs_fat_writeback 7AC4  
                      ??_fatfs_add_free_space 007C                              __size_of_fl_feof 007A  
              fatfs_mark_file_deleted@Cluster 00AE                             __create_directory D488  
                            __size_of_fl_init 008C                            ?_fatfs_sector_read 001F  
      fatfs_update_file_length@directoryEntry 00C1                        ?_FileString_TrimLength 0001  
                        _fatfs_entry_sfn_only 49A0                            __end_of_media_read 6372  
          fatfs_lfn_entries_required@filename 0009                    ?_fatfs_allocate_free_space 009E  
                          ?__create_directory 00F2                         media_write@Start_Addr 0018  
                             ___lwdiv@divisor 0003                                   ??_WriteSPI_ 0001  
                     fatfs_sfn_create_entry@i 000F                      ??_fatfs_sfn_create_entry 000F  
                   FileString_StrCmpNoCase@s1 0007                     FileString_StrCmpNoCase@s2 0009  
                             ___lwdiv@counter 0007                   __size_of_fatfs_entry_is_dir 0024  
                                    _fl_fgetc 42DC                                      __ptext10 3E58  
                                    __ptext11 421A                                      __ptext20 46A2  
                                    __ptext12 436A                                      __ptext21 419E  
                                    __ptext13 4402                                      __ptext30 E0BE  
                                    __ptext22 40D0                                      __ptext14 B092  
                                    __ptext31 6968                                      __ptext23 4EEC  
                                    __ptext15 45EE                                      __ptext40 82AC  
                                    __ptext32 7CA0                                      __ptext24 A28A  
                                    __ptext16 4A6C                                      __ptext41 D9DC  
                                    __ptext33 6076                                      __ptext25 707C  
                                    __ptext17 5CD6                                      __ptext50 3FA8  
                                    __ptext42 40A2                                      __ptext34 42DC  
                                    __ptext26 BC34                                      __ptext18 41DC  
                                    __ptext51 C094                                      __ptext43 4166  
                                    __ptext35 4E72                                      __ptext27 84D8  
                                    __ptext19 3E46                                      __ptext60 401E  
                                    __ptext52 3E44                                      __ptext44 721A  
                                    __ptext36 4BB0                                      __ptext28 5C12  
                                    __ptext61 3E48                                      __ptext53 647A  
                                    __ptext45 CA1C                                      __ptext37 4FE6  
                                    __ptext29 966A                                      __ptext70 5E90  
                                    __ptext62 50EC                                      __ptext54 587E  
                                    __ptext46 B80E                                      __ptext38 5A92  
                                    __ptext71 48DA                                      __ptext63 4074  
                                    __ptext55 C548                                      __ptext47 4646  
                                    __ptext39 7730                                      __ptext80 9968  
                                    __ptext72 90CC                                      __ptext64 5288  
                                    __ptext56 481A                                      __ptext48 6D5C  
                                    __ptext81 9F76                                      __ptext73 5734  
                                    __ptext65 3F84                                      __ptext57 3E42  
                                    __ptext49 9C6C                                      __ptext90 7AC4  
                                    __ptext82 B44C                                      __ptext74 459A  
                                    __ptext66 D488                                      __ptext58 3E50  
                                    __ptext91 3F20                                      __ptext83 5DA0  
                                    __ptext75 8958                                      __ptext67 5F82  
                                    __ptext59 756A                                      __ptext92 936C  
                                    __ptext84 8E30                                      __ptext76 6C04  
                                    __ptext68 6372                                      __ptext93 475C  
                                    __ptext85 8094                                      __ptext77 73C0  
                                    __ptext69 59DA                                      __ptext94 A5AC  
                                    __ptext86 429A                                      __ptext78 ACE4  
                                    __ptext95 7E98                                      __ptext87 5434  
                                    __ptext79 6AB2                                      __ptext96 A93E  
                                    __ptext88 6820                                      __ptext97 8704  
                                    __ptext89 66E2                                      __ptext98 626E  
                                    _fl_fread CA1C                                      __ptext99 78F8  
                                    _fl_fseek 721A                                      _fl_fopen 6D5C  
                                    _fl_ftell 40A2                       ??_fatfs_fat_set_cluster 0050  
                                 ??_Write_str 0008                           ??_fatfs_sector_read 002B  
                                    _config_1 01F6                         ??_fatfs_lfn_cache_get 0003  
                __open_directory@startcluster 00CC                  fatfs_update_file_length@item 00C0  
                            __size_of_strncmp 0074                              __size_of_strncpy 0058  
                         ??__create_directory 00F4         __end_offat_list@fat_list_insert_after 51FE  
      __size_offat_list@fat_list_insert_after 008A                 fat_list@fat_list_insert_after 5174  
                             fl_readdir@dirls 00BA                               fl_readdir@entry 00BC  
       __end_offat_list@fat_list_insert_first 4DF8        __size_offat_list@fat_list_insert_first 0078  
               fat_list@fat_list_insert_first 4D80              __size_of_fatfs_mark_file_deleted 01C8  
                               __size_of_main 0096              fatfs_allocate_free_space@newFile 00A0  
                __end_of_fatfs_get_file_entry 966A                    fatfs_init@root_dir_sectors 003D  
                               fl_fflush@file 00DC                                    strncmp@len 0005  
             __end_of_fatfs_calc_cluster_size 6AB2                  fatfs_get_sfn_display_name@in 0003  
                               fl_fread@count 010E              ??_fatfs_fat_add_cluster_to_chain 0080  
             ?_fatfs_fat_add_cluster_to_chain 0080                                 fatfs_itoa@num 000E  
                   __check_file_open@openFile 0027                    ?fat_list@fat_list_pop_head 0007  
                            fatfs_format@name 005F                                      fl_feof@f 0001  
                                    _response 01AB                          Check_extension@F4793 01ED  
                ??_fatfs_find_free_dir_offset 00B8                          Check_extension@F4795 01F1  
      fat_list@fat_list_insert_after@new_node 0005                                      fl_init@i 0015  
                                    _spi_init 3EE6                     ??_FileString_StrCmpNoCase 000D  
                                 ??_fl_fclose 0080                                   ??_fl_fflush 00D6  
                   __end_of_fatfs_sector_read 46A2                         ?_fatfs_entry_lfn_text 0001  
                                 ??_fl_format 006B                    fatfs_fat_writeback@sectors 002C  
                    fatfs_lfn_cache_entry@lfn 0001                                   ??_fl_fwrite 00E7  
                                   printf@idx 0017                   fatfs_fat_read_sector@sector 0036  
                                 ??_fl_remove 0080                 __open_directory@currentfolder 00C0  
                   _fatfs_add_file_entry$3211 0102                     __end_of__create_directory D9DC  
                     __end_of__open_directory 6968        fatfs_find_free_dir_offset@recordoffset 00C5  
               ?_fatfs_cache_get_next_cluster 0001                 fatfs_fat_set_cluster@position 005C  
                       ?_fatfs_entry_sfn_only 0001                              fatfs_itoa@digits 0018  
                                   putch@byte 0003                         __cluster_size_table32 0228  
                       __cluster_size_table16 0200                          Check_extension@str_1 000C  
                 fatfs_sfn_create_entry@entry 000B                               ??_Create_folder 0080  
                    fatfs_write_sector@sector 0026                      fatfs_write_sector@target 002A  
                              OpenUSART@spbrg 0001                                      memcpy@d1 0001  
                                    memcpy@s1 0003                    fatfs_get_substring@copypnt 001B  
              fatfs_lfn_generate_tail@tailNum 003B                              fatfs_itoa@outbuf 0029  
                               fl_fopen@flags 0182                    fatfs_get_substring@max_len 000D  
                        _fatfs_lba_of_cluster 7E98                                  fl_fgetc@data 00FA  
                                    memset@p1 0001             __size_of_fatfs_find_blank_cluster 03C2  
                  fatfs_get_substring@pathlen 0016                             ??_fatfs_fat_purge 0036  
                         _fatfs_entry_is_file 3FA8                     ?_fatfs_find_blank_cluster 0046  
                              Format_string@c 0005                       fatfs_sfn_exists@Cluster 00AE  
      fatfs_cache_get_next_cluster@clusterIdx 0005            fatfs_find_next_cluster@nextcluster 007A  
                        __end_of__create_file C548           fatfs_find_blank_cluster@nextcluster 0080  
                           ?_fatfs_sfn_exists 00AC                              ___lwmod@dividend 0008  
                            ___lldiv@dividend 0001                             ??_fatfs_erase_fat 0024  
                     ??fat_list@fat_list_init 0003                   ?_fatfs_find_free_dir_offset 00AC  
                  __end_of_fl_createdirectory 40A2             fat_list@fat_list_insert_last@node 000D  
           fat_list@fat_list_insert_last@list 000B                            ??_fatfs_sfn_exists 00B4  
                      fatfs_format_fat32@name 0042                        fatfs_format_fat16@name 0042  
                                   strncmp@s1 0001                                     strncmp@s2 0003  
                   fatfs_sfn_create_entry@dir 000D                                  fatfs_init@fs 001F  
                               ?_fatfs_format 0059                                 fl_format@name 0069  
                                fl_fread@file 0112                                  fatfs_itoa@cp 0035  
                                   strncpy@cp 0007                                     strncpy@to 0001  
                       __read_sectors@Cluster 00A5          fatfs_list_directory_next@dotRequired 010F  
   fatfs_find_blank_cluster@fat_sector_offset 0084                                  fl_fread@size 00E0  
         fatfs_create_boot_sector@vol_sectors 0026                       __size_of__write_sectors 04D4  
                 FileString_StrCmpNoCase@diff 000F                            fatfs_sfn_exists@fs 00AC  
                        ?_fatfs_entry_is_file 0001                      fatfs_get_file_entry@item 0115  
                                    printf@ap 0019                      _fatfs_free_cluster_chain 5734  
                     fl_listdirectory@dirstat 014F                                  fl_fseek@file 0029  
        fatfs_allocate_free_space@clusterSize 00B0                ??_fatfs_cache_set_next_cluster 000D  
            __size_of_fatfs_find_next_cluster 03A6                                   fl_feof@file 000D  
  fatfs_fat_add_cluster_to_chain@last_cluster 008A       fatfs_find_blank_cluster@current_cluster 0088  
                                fl_fopen@file 0180                              ??_fatfs_fat_init 000B  
                                fl_fopen@mode 00FE                                  fl_fopen@path 00FC  
                                 ??_putsUSART 0004                       ?_fatfs_get_root_cluster 0001  
                                 fl_fgetc@res 00F8         fatfs_allocate_free_space@startCluster 00A2  
               fatfs_total_path_levels@levels 0005                          fatfs_get_substring@i 0014  
            __size_of_fatfs_total_path_levels 013E                  ??_fatfs_get_sfn_display_name 0005  
                fatfs_add_free_space@clusters 0078                              __check_file_open 55F8  
                   fatfs_find_next_cluster@fs 0046                              _fl_listdirectory 5928  
                                    strcmp@s1 0001                                      strcmp@t0 0007  
                                    strcmp@s2 0003                                      strcmp@t1 0009  
                                    strcmp@t2 0008                              ___lldiv@quotient 0009  
                             ___lwmod@divisor 000A                                   fl_fgetpos@f 0001  
                                    strlen@cp 0005                               ___lwmod@counter 000C  
                               fl_readdir@res 00BE                                  ?_fl_closedir 0001  
                           ??_fl_attach_media 0059              __size_offat_list@fat_list_remove 00AA  
            fatfs_create_boot_sector@is_fat32 002C                         ?_fatfs_lba_of_cluster 0001  
                           ?_fatfs_split_path 001D                                   fatfs_itoa@s 0012  
                               ??_File_delete 0080              __size_of_FileString_GetExtension 0052  
                               ??_File_append 0183                             fatfs_sfn_exists@x 00B6  
              fatfs_lfn_create_sfn@sfn_output 0009                                   _SSPCON1bits 000FC6  
                     fatfs_get_file_entry@lfn 0119                        fl_listdirectory@dirent 0158  
                               ??_File_format 0071               __size_of_fatfs_sfn_create_entry 0152  
                                 fl_fseek@res 0027             fatfs_lfn_generate_tail@tail_chars 004D  
                          ??_fatfs_split_path 0027                                    Command@cmd 0008  
                                  Command@arg 0003                fatfs_cache_get_next_cluster@fs 0001  
           fatfs_update_file_length@shortname 00B2                fatfs_cache_set_next_cluster@fs 0001  
                               ??_ConfigUSART 0008                            fl_attach_media@res 0059  
                                 fl_ftell@pos 000B                          fatfs_format_fat32@fs 003C  
                        fatfs_format_fat16@fs 003C      fatfs_find_free_dir_offset@directoryEntry 00BC  
                       _fatfs_lfn_cache_entry CF3A              __end_of_fatfs_create_boot_sector EC5E  
                  __write_sectors@LastCluster 00BC       fat_list@fat_list_insert_before@new_node 0005  
                           fl_attach_media@rd 0055                             fl_attach_media@wr 0057  
            ??fat_list@fat_list_insert_before 0007               ?fat_list@fat_list_insert_before 0001  
                              ??_fatfs_format 0061           __size_of_fatfs_lfn_entries_required 0042  
                                _USART_Status 01A5                        __size_of_Format_string 0084  
                    ?_fatfs_entry_lfn_invalid 0001                ?fat_list@fat_list_insert_after 0001  
              ?fat_list@fat_list_insert_first 0007             fatfs_lfn_generate_tail@sfn_output 0037  
                                ?_fl_shutdown 0001                                 fl_fwrite@data 00DE  
                               fl_fwrite@file 011B                         ??_fatfs_entry_is_file 0003  
